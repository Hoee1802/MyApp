
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028b54  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002de4  08028d04  08028d04  00029d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002dbe  0802bae8  0802bae8  0002cae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000038  0802e8a8  0802e8a8  0002f8a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000018e  0802e8e0  0802e8e0  0002f8e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0001d080  0802ea70  0802ea70  0002fa70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804baf0  0804baf0  0004d380  2**0
                  CONTENTS
  8 .ARM          00000008  0804baf0  0804baf0  0004caf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804baf8  0804baf8  0004d380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0804baf8  0804baf8  0004caf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0804bb0c  0804bb0c  0004cb0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0804bb14  0004d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  0804bc78  0004d180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  0804bd78  0004d280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00014920  20000380  0804be78  0004d380  2**2
                  ALLOC
 16 ._user_heap_stack 00001400  20014ca0  0804be78  0004dca0  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  0004d380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  0004e000  2**2
                  ALLOC
 19 .debug_line   0007c04d  00000000  00000000  0004d3b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000057  00000000  00000000  000c93fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   001cace0  00000000  00000000  000c9454  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0002663d  00000000  00000000  00294134  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00004300  00000000  00000000  002ba778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0011e0d3  00000000  00000000  002bea78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 00006291  00000000  00000000  003dcb4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0002865b  00000000  00000000  003e2ddc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003809e  00000000  00000000  0040b437  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  004434d5  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000b4a8  00000000  00000000  00443598  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08028cec 	.word	0x08028cec

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	08028cec 	.word	0x08028cec

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_ldivmod>:
 8000290:	b97b      	cbnz	r3, 80002b2 <__aeabi_ldivmod+0x22>
 8000292:	b972      	cbnz	r2, 80002b2 <__aeabi_ldivmod+0x22>
 8000294:	2900      	cmp	r1, #0
 8000296:	bfbe      	ittt	lt
 8000298:	2000      	movlt	r0, #0
 800029a:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 800029e:	e006      	blt.n	80002ae <__aeabi_ldivmod+0x1e>
 80002a0:	bf08      	it	eq
 80002a2:	2800      	cmpeq	r0, #0
 80002a4:	bf1c      	itt	ne
 80002a6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002aa:	f04f 30ff 	movne.w	r0, #4294967295
 80002ae:	f000 b9d3 	b.w	8000658 <__aeabi_idiv0>
 80002b2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002b6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ba:	2900      	cmp	r1, #0
 80002bc:	db09      	blt.n	80002d2 <__aeabi_ldivmod+0x42>
 80002be:	2b00      	cmp	r3, #0
 80002c0:	db1a      	blt.n	80002f8 <__aeabi_ldivmod+0x68>
 80002c2:	f000 f84d 	bl	8000360 <__udivmoddi4>
 80002c6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ce:	b004      	add	sp, #16
 80002d0:	4770      	bx	lr
 80002d2:	4240      	negs	r0, r0
 80002d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	db1b      	blt.n	8000314 <__aeabi_ldivmod+0x84>
 80002dc:	f000 f840 	bl	8000360 <__udivmoddi4>
 80002e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e8:	b004      	add	sp, #16
 80002ea:	4240      	negs	r0, r0
 80002ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f0:	4252      	negs	r2, r2
 80002f2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f6:	4770      	bx	lr
 80002f8:	4252      	negs	r2, r2
 80002fa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002fe:	f000 f82f 	bl	8000360 <__udivmoddi4>
 8000302:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000306:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030a:	b004      	add	sp, #16
 800030c:	4240      	negs	r0, r0
 800030e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000312:	4770      	bx	lr
 8000314:	4252      	negs	r2, r2
 8000316:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031a:	f000 f821 	bl	8000360 <__udivmoddi4>
 800031e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000322:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000326:	b004      	add	sp, #16
 8000328:	4252      	negs	r2, r2
 800032a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032e:	4770      	bx	lr

08000330 <__aeabi_uldivmod>:
 8000330:	b953      	cbnz	r3, 8000348 <__aeabi_uldivmod+0x18>
 8000332:	b94a      	cbnz	r2, 8000348 <__aeabi_uldivmod+0x18>
 8000334:	2900      	cmp	r1, #0
 8000336:	bf08      	it	eq
 8000338:	2800      	cmpeq	r0, #0
 800033a:	bf1c      	itt	ne
 800033c:	f04f 31ff 	movne.w	r1, #4294967295
 8000340:	f04f 30ff 	movne.w	r0, #4294967295
 8000344:	f000 b988 	b.w	8000658 <__aeabi_idiv0>
 8000348:	f1ad 0c08 	sub.w	ip, sp, #8
 800034c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000350:	f000 f806 	bl	8000360 <__udivmoddi4>
 8000354:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000358:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800035c:	b004      	add	sp, #16
 800035e:	4770      	bx	lr

08000360 <__udivmoddi4>:
 8000360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000364:	9d08      	ldr	r5, [sp, #32]
 8000366:	468e      	mov	lr, r1
 8000368:	4604      	mov	r4, r0
 800036a:	4688      	mov	r8, r1
 800036c:	2b00      	cmp	r3, #0
 800036e:	d14a      	bne.n	8000406 <__udivmoddi4+0xa6>
 8000370:	428a      	cmp	r2, r1
 8000372:	4617      	mov	r7, r2
 8000374:	d962      	bls.n	800043c <__udivmoddi4+0xdc>
 8000376:	fab2 f682 	clz	r6, r2
 800037a:	b14e      	cbz	r6, 8000390 <__udivmoddi4+0x30>
 800037c:	f1c6 0320 	rsb	r3, r6, #32
 8000380:	fa01 f806 	lsl.w	r8, r1, r6
 8000384:	fa20 f303 	lsr.w	r3, r0, r3
 8000388:	40b7      	lsls	r7, r6
 800038a:	ea43 0808 	orr.w	r8, r3, r8
 800038e:	40b4      	lsls	r4, r6
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	fa1f fc87 	uxth.w	ip, r7
 8000398:	fbb8 f1fe 	udiv	r1, r8, lr
 800039c:	0c23      	lsrs	r3, r4, #16
 800039e:	fb0e 8811 	mls	r8, lr, r1, r8
 80003a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003a6:	fb01 f20c 	mul.w	r2, r1, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d909      	bls.n	80003c2 <__udivmoddi4+0x62>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003b4:	f080 80ea 	bcs.w	800058c <__udivmoddi4+0x22c>
 80003b8:	429a      	cmp	r2, r3
 80003ba:	f240 80e7 	bls.w	800058c <__udivmoddi4+0x22c>
 80003be:	3902      	subs	r1, #2
 80003c0:	443b      	add	r3, r7
 80003c2:	1a9a      	subs	r2, r3, r2
 80003c4:	b2a3      	uxth	r3, r4
 80003c6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ca:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003d6:	459c      	cmp	ip, r3
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x8e>
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e0:	f080 80d6 	bcs.w	8000590 <__udivmoddi4+0x230>
 80003e4:	459c      	cmp	ip, r3
 80003e6:	f240 80d3 	bls.w	8000590 <__udivmoddi4+0x230>
 80003ea:	443b      	add	r3, r7
 80003ec:	3802      	subs	r0, #2
 80003ee:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80003f2:	eba3 030c 	sub.w	r3, r3, ip
 80003f6:	2100      	movs	r1, #0
 80003f8:	b11d      	cbz	r5, 8000402 <__udivmoddi4+0xa2>
 80003fa:	40f3      	lsrs	r3, r6
 80003fc:	2200      	movs	r2, #0
 80003fe:	e9c5 3200 	strd	r3, r2, [r5]
 8000402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000406:	428b      	cmp	r3, r1
 8000408:	d905      	bls.n	8000416 <__udivmoddi4+0xb6>
 800040a:	b10d      	cbz	r5, 8000410 <__udivmoddi4+0xb0>
 800040c:	e9c5 0100 	strd	r0, r1, [r5]
 8000410:	2100      	movs	r1, #0
 8000412:	4608      	mov	r0, r1
 8000414:	e7f5      	b.n	8000402 <__udivmoddi4+0xa2>
 8000416:	fab3 f183 	clz	r1, r3
 800041a:	2900      	cmp	r1, #0
 800041c:	d146      	bne.n	80004ac <__udivmoddi4+0x14c>
 800041e:	4573      	cmp	r3, lr
 8000420:	d302      	bcc.n	8000428 <__udivmoddi4+0xc8>
 8000422:	4282      	cmp	r2, r0
 8000424:	f200 8105 	bhi.w	8000632 <__udivmoddi4+0x2d2>
 8000428:	1a84      	subs	r4, r0, r2
 800042a:	eb6e 0203 	sbc.w	r2, lr, r3
 800042e:	2001      	movs	r0, #1
 8000430:	4690      	mov	r8, r2
 8000432:	2d00      	cmp	r5, #0
 8000434:	d0e5      	beq.n	8000402 <__udivmoddi4+0xa2>
 8000436:	e9c5 4800 	strd	r4, r8, [r5]
 800043a:	e7e2      	b.n	8000402 <__udivmoddi4+0xa2>
 800043c:	2a00      	cmp	r2, #0
 800043e:	f000 8090 	beq.w	8000562 <__udivmoddi4+0x202>
 8000442:	fab2 f682 	clz	r6, r2
 8000446:	2e00      	cmp	r6, #0
 8000448:	f040 80a4 	bne.w	8000594 <__udivmoddi4+0x234>
 800044c:	1a8a      	subs	r2, r1, r2
 800044e:	0c03      	lsrs	r3, r0, #16
 8000450:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000454:	b280      	uxth	r0, r0
 8000456:	b2bc      	uxth	r4, r7
 8000458:	2101      	movs	r1, #1
 800045a:	fbb2 fcfe 	udiv	ip, r2, lr
 800045e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000466:	fb04 f20c 	mul.w	r2, r4, ip
 800046a:	429a      	cmp	r2, r3
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x11e>
 800046e:	18fb      	adds	r3, r7, r3
 8000470:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000474:	d202      	bcs.n	800047c <__udivmoddi4+0x11c>
 8000476:	429a      	cmp	r2, r3
 8000478:	f200 80e0 	bhi.w	800063c <__udivmoddi4+0x2dc>
 800047c:	46c4      	mov	ip, r8
 800047e:	1a9b      	subs	r3, r3, r2
 8000480:	fbb3 f2fe 	udiv	r2, r3, lr
 8000484:	fb0e 3312 	mls	r3, lr, r2, r3
 8000488:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800048c:	fb02 f404 	mul.w	r4, r2, r4
 8000490:	429c      	cmp	r4, r3
 8000492:	d907      	bls.n	80004a4 <__udivmoddi4+0x144>
 8000494:	18fb      	adds	r3, r7, r3
 8000496:	f102 30ff 	add.w	r0, r2, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x142>
 800049c:	429c      	cmp	r4, r3
 800049e:	f200 80ca 	bhi.w	8000636 <__udivmoddi4+0x2d6>
 80004a2:	4602      	mov	r2, r0
 80004a4:	1b1b      	subs	r3, r3, r4
 80004a6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004aa:	e7a5      	b.n	80003f8 <__udivmoddi4+0x98>
 80004ac:	f1c1 0620 	rsb	r6, r1, #32
 80004b0:	408b      	lsls	r3, r1
 80004b2:	fa22 f706 	lsr.w	r7, r2, r6
 80004b6:	431f      	orrs	r7, r3
 80004b8:	fa0e f401 	lsl.w	r4, lr, r1
 80004bc:	fa20 f306 	lsr.w	r3, r0, r6
 80004c0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004c4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004c8:	4323      	orrs	r3, r4
 80004ca:	fa00 f801 	lsl.w	r8, r0, r1
 80004ce:	fa1f fc87 	uxth.w	ip, r7
 80004d2:	fbbe f0f9 	udiv	r0, lr, r9
 80004d6:	0c1c      	lsrs	r4, r3, #16
 80004d8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004dc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004e0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004e4:	45a6      	cmp	lr, r4
 80004e6:	fa02 f201 	lsl.w	r2, r2, r1
 80004ea:	d909      	bls.n	8000500 <__udivmoddi4+0x1a0>
 80004ec:	193c      	adds	r4, r7, r4
 80004ee:	f100 3aff 	add.w	sl, r0, #4294967295
 80004f2:	f080 809c 	bcs.w	800062e <__udivmoddi4+0x2ce>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f240 8099 	bls.w	800062e <__udivmoddi4+0x2ce>
 80004fc:	3802      	subs	r0, #2
 80004fe:	443c      	add	r4, r7
 8000500:	eba4 040e 	sub.w	r4, r4, lr
 8000504:	fa1f fe83 	uxth.w	lr, r3
 8000508:	fbb4 f3f9 	udiv	r3, r4, r9
 800050c:	fb09 4413 	mls	r4, r9, r3, r4
 8000510:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000514:	fb03 fc0c 	mul.w	ip, r3, ip
 8000518:	45a4      	cmp	ip, r4
 800051a:	d908      	bls.n	800052e <__udivmoddi4+0x1ce>
 800051c:	193c      	adds	r4, r7, r4
 800051e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000522:	f080 8082 	bcs.w	800062a <__udivmoddi4+0x2ca>
 8000526:	45a4      	cmp	ip, r4
 8000528:	d97f      	bls.n	800062a <__udivmoddi4+0x2ca>
 800052a:	3b02      	subs	r3, #2
 800052c:	443c      	add	r4, r7
 800052e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000532:	eba4 040c 	sub.w	r4, r4, ip
 8000536:	fba0 ec02 	umull	lr, ip, r0, r2
 800053a:	4564      	cmp	r4, ip
 800053c:	4673      	mov	r3, lr
 800053e:	46e1      	mov	r9, ip
 8000540:	d362      	bcc.n	8000608 <__udivmoddi4+0x2a8>
 8000542:	d05f      	beq.n	8000604 <__udivmoddi4+0x2a4>
 8000544:	b15d      	cbz	r5, 800055e <__udivmoddi4+0x1fe>
 8000546:	ebb8 0203 	subs.w	r2, r8, r3
 800054a:	eb64 0409 	sbc.w	r4, r4, r9
 800054e:	fa04 f606 	lsl.w	r6, r4, r6
 8000552:	fa22 f301 	lsr.w	r3, r2, r1
 8000556:	431e      	orrs	r6, r3
 8000558:	40cc      	lsrs	r4, r1
 800055a:	e9c5 6400 	strd	r6, r4, [r5]
 800055e:	2100      	movs	r1, #0
 8000560:	e74f      	b.n	8000402 <__udivmoddi4+0xa2>
 8000562:	fbb1 fcf2 	udiv	ip, r1, r2
 8000566:	0c01      	lsrs	r1, r0, #16
 8000568:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800056c:	b280      	uxth	r0, r0
 800056e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000572:	463b      	mov	r3, r7
 8000574:	4638      	mov	r0, r7
 8000576:	463c      	mov	r4, r7
 8000578:	46b8      	mov	r8, r7
 800057a:	46be      	mov	lr, r7
 800057c:	2620      	movs	r6, #32
 800057e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000582:	eba2 0208 	sub.w	r2, r2, r8
 8000586:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800058a:	e766      	b.n	800045a <__udivmoddi4+0xfa>
 800058c:	4601      	mov	r1, r0
 800058e:	e718      	b.n	80003c2 <__udivmoddi4+0x62>
 8000590:	4610      	mov	r0, r2
 8000592:	e72c      	b.n	80003ee <__udivmoddi4+0x8e>
 8000594:	f1c6 0220 	rsb	r2, r6, #32
 8000598:	fa2e f302 	lsr.w	r3, lr, r2
 800059c:	40b7      	lsls	r7, r6
 800059e:	40b1      	lsls	r1, r6
 80005a0:	fa20 f202 	lsr.w	r2, r0, r2
 80005a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005a8:	430a      	orrs	r2, r1
 80005aa:	fbb3 f8fe 	udiv	r8, r3, lr
 80005ae:	b2bc      	uxth	r4, r7
 80005b0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ba:	fb08 f904 	mul.w	r9, r8, r4
 80005be:	40b0      	lsls	r0, r6
 80005c0:	4589      	cmp	r9, r1
 80005c2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005c6:	b280      	uxth	r0, r0
 80005c8:	d93e      	bls.n	8000648 <__udivmoddi4+0x2e8>
 80005ca:	1879      	adds	r1, r7, r1
 80005cc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005d0:	d201      	bcs.n	80005d6 <__udivmoddi4+0x276>
 80005d2:	4589      	cmp	r9, r1
 80005d4:	d81f      	bhi.n	8000616 <__udivmoddi4+0x2b6>
 80005d6:	eba1 0109 	sub.w	r1, r1, r9
 80005da:	fbb1 f9fe 	udiv	r9, r1, lr
 80005de:	fb09 f804 	mul.w	r8, r9, r4
 80005e2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005e6:	b292      	uxth	r2, r2
 80005e8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005ec:	4542      	cmp	r2, r8
 80005ee:	d229      	bcs.n	8000644 <__udivmoddi4+0x2e4>
 80005f0:	18ba      	adds	r2, r7, r2
 80005f2:	f109 31ff 	add.w	r1, r9, #4294967295
 80005f6:	d2c4      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005f8:	4542      	cmp	r2, r8
 80005fa:	d2c2      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005fc:	f1a9 0102 	sub.w	r1, r9, #2
 8000600:	443a      	add	r2, r7
 8000602:	e7be      	b.n	8000582 <__udivmoddi4+0x222>
 8000604:	45f0      	cmp	r8, lr
 8000606:	d29d      	bcs.n	8000544 <__udivmoddi4+0x1e4>
 8000608:	ebbe 0302 	subs.w	r3, lr, r2
 800060c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000610:	3801      	subs	r0, #1
 8000612:	46e1      	mov	r9, ip
 8000614:	e796      	b.n	8000544 <__udivmoddi4+0x1e4>
 8000616:	eba7 0909 	sub.w	r9, r7, r9
 800061a:	4449      	add	r1, r9
 800061c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000620:	fbb1 f9fe 	udiv	r9, r1, lr
 8000624:	fb09 f804 	mul.w	r8, r9, r4
 8000628:	e7db      	b.n	80005e2 <__udivmoddi4+0x282>
 800062a:	4673      	mov	r3, lr
 800062c:	e77f      	b.n	800052e <__udivmoddi4+0x1ce>
 800062e:	4650      	mov	r0, sl
 8000630:	e766      	b.n	8000500 <__udivmoddi4+0x1a0>
 8000632:	4608      	mov	r0, r1
 8000634:	e6fd      	b.n	8000432 <__udivmoddi4+0xd2>
 8000636:	443b      	add	r3, r7
 8000638:	3a02      	subs	r2, #2
 800063a:	e733      	b.n	80004a4 <__udivmoddi4+0x144>
 800063c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000640:	443b      	add	r3, r7
 8000642:	e71c      	b.n	800047e <__udivmoddi4+0x11e>
 8000644:	4649      	mov	r1, r9
 8000646:	e79c      	b.n	8000582 <__udivmoddi4+0x222>
 8000648:	eba1 0109 	sub.w	r1, r1, r9
 800064c:	46c4      	mov	ip, r8
 800064e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000652:	fb09 f804 	mul.w	r8, r9, r4
 8000656:	e7c4      	b.n	80005e2 <__udivmoddi4+0x282>

08000658 <__aeabi_idiv0>:
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop

0800065c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800065c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000694 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000660:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000662:	e003      	b.n	800066c <LoopCopyDataInit>

08000664 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000664:	4b0c      	ldr	r3, [pc, #48]	@ (8000698 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000666:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000668:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800066a:	3104      	adds	r1, #4

0800066c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800066c:	480b      	ldr	r0, [pc, #44]	@ (800069c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800066e:	4b0c      	ldr	r3, [pc, #48]	@ (80006a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000670:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000674:	d3f6      	bcc.n	8000664 <CopyDataInit>
  ldr  r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	@ (80006a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000678:	e002      	b.n	8000680 <LoopFillZerobss>

0800067a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800067a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800067c:	f842 3b04 	str.w	r3, [r2], #4

08000680 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000680:	4b09      	ldr	r3, [pc, #36]	@ (80006a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000684:	d3f9      	bcc.n	800067a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000686:	f008 fa37 	bl	8008af8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800068a:	f027 fdc1 	bl	8028210 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800068e:	f001 f93f 	bl	8001910 <main>
  bx  lr    
 8000692:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000694:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000698:	0804bb14 	.word	0x0804bb14
  ldr  r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006a0:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80006a4:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 80006a8:	20014ca0 	.word	0x20014ca0

080006ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>

080006ae <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006ae:	4770      	bx	lr

080006b0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006b0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006b2:	f000 fda7 	bl	8001204 <touchgfx_components_init>
    touchgfx_init();
}
 80006b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ba:	f000 bd29 	b.w	8001110 <touchgfx_init>

080006be <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006be:	f000 bda3 	b.w	8001208 <touchgfx_taskEntry>

080006c2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006c2:	4770      	bx	lr

080006c4 <_ZN20STM32TouchControllerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f026 fba3 	bl	8026e14 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}
	...

080006d4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006d4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006d6:	4b0c      	ldr	r3, [pc, #48]	@ (8000708 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d8:	4c0c      	ldr	r4, [pc, #48]	@ (800070c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006da:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006dc:	4b0c      	ldr	r3, [pc, #48]	@ (8000710 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006de:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006e0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e2:	6863      	ldr	r3, [r4, #4]
 80006e4:	4798      	blx	r3
 80006e6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006ea:	4298      	cmp	r0, r3
 80006ec:	d10a      	bne.n	8000704 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006ee:	4d09      	ldr	r5, [pc, #36]	@ (8000714 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006f0:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006f2:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006f4:	2082      	movs	r0, #130	@ 0x82
 80006f6:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	2082      	movs	r0, #130	@ 0x82
 80006fc:	68db      	ldr	r3, [r3, #12]
 80006fe:	4798      	blx	r3
 8000700:	2000      	movs	r0, #0
    }

    return ret;
}
 8000702:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000704:	2001      	movs	r0, #1
 8000706:	e7fc      	b.n	8000702 <_Z11BSP_TS_Inittt+0x2e>
 8000708:	200003a6 	.word	0x200003a6
 800070c:	2000004c 	.word	0x2000004c
 8000710:	200003a4 	.word	0x200003a4
 8000714:	200003a8 	.word	0x200003a8

08000718 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000718:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800071c:	20f0      	movs	r0, #240	@ 0xf0
 800071e:	f7ff bfd9 	b.w	80006d4 <_Z11BSP_TS_Inittt>
	...

08000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000726:	4d2f      	ldr	r5, [pc, #188]	@ (80007e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 8000728:	682b      	ldr	r3, [r5, #0]
{
 800072a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800072c:	691b      	ldr	r3, [r3, #16]
 800072e:	2082      	movs	r0, #130	@ 0x82
 8000730:	4798      	blx	r3
 8000732:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000734:	2800      	cmp	r0, #0
 8000736:	d044      	beq.n	80007c2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000738:	682b      	ldr	r3, [r5, #0]
 800073a:	f10d 0206 	add.w	r2, sp, #6
 800073e:	695b      	ldr	r3, [r3, #20]
 8000740:	a901      	add	r1, sp, #4
 8000742:	2082      	movs	r0, #130	@ 0x82
 8000744:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000746:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800074a:	f5a2 72b4 	sub.w	r2, r2, #360	@ 0x168
 800074e:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000750:	2a0a      	cmp	r2, #10
 8000752:	d938      	bls.n	80007c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000754:	230b      	movs	r3, #11
 8000756:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075a:	4b23      	ldr	r3, [pc, #140]	@ (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
 800075c:	881b      	ldrh	r3, [r3, #0]
 800075e:	429a      	cmp	r2, r3
 8000760:	d901      	bls.n	8000766 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
        {
            yr = TsYBoundary - 1;
 8000762:	3b01      	subs	r3, #1
 8000764:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000766:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076a:	4820      	ldr	r0, [pc, #128]	@ (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
 800076c:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000770:	428b      	cmp	r3, r1
 8000772:	d82a      	bhi.n	80007ca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 8000774:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 8000778:	330e      	adds	r3, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 800077a:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 800077c:	b29b      	uxth	r3, r3
        xr = x / 15;
 800077e:	250f      	movs	r5, #15
 8000780:	fbb3 f3f5 	udiv	r3, r3, r5
        else if (xr > TsXBoundary)
 8000784:	4d1a      	ldr	r5, [pc, #104]	@ (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>)
 8000786:	882d      	ldrh	r5, [r5, #0]
 8000788:	42ab      	cmp	r3, r5
            xr = TsXBoundary - 1;
 800078a:	bf84      	itt	hi
 800078c:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8000790:	b2ab      	uxthhi	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000792:	428b      	cmp	r3, r1
 8000794:	461d      	mov	r5, r3
 8000796:	b28e      	uxth	r6, r1
 8000798:	d920      	bls.n	80007dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>
 800079a:	1b9b      	subs	r3, r3, r6
 800079c:	b299      	uxth	r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 800079e:	4e15      	ldr	r6, [pc, #84]	@ (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 80007a0:	6837      	ldr	r7, [r6, #0]
 80007a2:	b2bb      	uxth	r3, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1ad3      	subhi	r3, r2, r3
 80007aa:	1a9b      	subls	r3, r3, r2
 80007ac:	b29b      	uxth	r3, r3

        if (xDiff + yDiff > 5)
 80007ae:	4419      	add	r1, r3
 80007b0:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b2:	bfc8      	it	gt
 80007b4:	6005      	strgt	r5, [r0, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b6:	6803      	ldr	r3, [r0, #0]
            _y = y;
 80007b8:	bfc8      	it	gt
 80007ba:	6032      	strgt	r2, [r6, #0]
        TsState->X = _x;
 80007bc:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007be:	6833      	ldr	r3, [r6, #0]
 80007c0:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c2:	b003      	add	sp, #12
 80007c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80007c6:	2200      	movs	r2, #0
 80007c8:	e7cd      	b.n	8000766 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
            x = 3800 - x;
 80007ca:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 80007ce:	3308      	adds	r3, #8
 80007d0:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007d2:	2b0e      	cmp	r3, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007d4:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 80007d6:	d8d2      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x5a>
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007d8:	2500      	movs	r5, #0
            xr = 0;
 80007da:	462b      	mov	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007dc:	1ac9      	subs	r1, r1, r3
 80007de:	b289      	uxth	r1, r1
 80007e0:	e7dd      	b.n	800079e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
 80007e2:	bf00      	nop
 80007e4:	200003a8 	.word	0x200003a8
 80007e8:	200003a4 	.word	0x200003a4
 80007ec:	200003a0 	.word	0x200003a0
 80007f0:	200003a6 	.word	0x200003a6
 80007f4:	2000039c 	.word	0x2000039c

080007f8 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fa:	4668      	mov	r0, sp
{
 80007fc:	460d      	mov	r5, r1
 80007fe:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000800:	f7ff ff90 	bl	8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000804:	f8bd 0000 	ldrh.w	r0, [sp]
 8000808:	b140      	cbz	r0, 800081c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
        x = state.X;
 800080a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800080e:	602b      	str	r3, [r5, #0]
        y = 320-state.Y;
 8000810:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000814:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8000818:	6023      	str	r3, [r4, #0]
        return true;
 800081a:	2001      	movs	r0, #1
}
 800081c:	b003      	add	sp, #12
 800081e:	bd30      	pop	{r4, r5, pc}

08000820 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000820:	2803      	cmp	r0, #3
 8000822:	d821      	bhi.n	8000868 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000824:	e8df f000 	tbb	[pc, r0]
 8000828:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800082c:	4b0f      	ldr	r3, [pc, #60]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800082e:	681a      	ldr	r2, [r3, #0]
 8000830:	fab2 f282 	clz	r2, r2
 8000834:	0952      	lsrs	r2, r2, #5
 8000836:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000838:	480d      	ldr	r0, [pc, #52]	@ (8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 800083a:	f008 be25 	b.w	8009488 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800083e:	4b0b      	ldr	r3, [pc, #44]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000840:	685a      	ldr	r2, [r3, #4]
 8000842:	fab2 f282 	clz	r2, r2
 8000846:	0952      	lsrs	r2, r2, #5
 8000848:	2108      	movs	r1, #8
 800084a:	e7f5      	b.n	8000838 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 800084c:	4b07      	ldr	r3, [pc, #28]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800084e:	689a      	ldr	r2, [r3, #8]
 8000850:	fab2 f282 	clz	r2, r2
 8000854:	0952      	lsrs	r2, r2, #5
 8000856:	2110      	movs	r1, #16
 8000858:	e7ee      	b.n	8000838 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800085a:	4b04      	ldr	r3, [pc, #16]	@ (800086c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800085c:	68da      	ldr	r2, [r3, #12]
 800085e:	fab2 f282 	clz	r2, r2
 8000862:	0952      	lsrs	r2, r2, #5
 8000864:	2120      	movs	r1, #32
 8000866:	e7e7      	b.n	8000838 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000868:	4770      	bx	lr
 800086a:	bf00      	nop
 800086c:	200003ac 	.word	0x200003ac
 8000870:	40021000 	.word	0x40021000

08000874 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000874:	2803      	cmp	r0, #3
 8000876:	d821      	bhi.n	80008bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000878:	e8df f000 	tbb	[pc, r0]
 800087c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000880:	4b0f      	ldr	r3, [pc, #60]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000882:	681a      	ldr	r2, [r3, #0]
 8000884:	3a00      	subs	r2, #0
 8000886:	bf18      	it	ne
 8000888:	2201      	movne	r2, #1
 800088a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800088c:	480d      	ldr	r0, [pc, #52]	@ (80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800088e:	f008 bdfb 	b.w	8009488 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000892:	4b0b      	ldr	r3, [pc, #44]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000894:	685a      	ldr	r2, [r3, #4]
 8000896:	3a00      	subs	r2, #0
 8000898:	bf18      	it	ne
 800089a:	2201      	movne	r2, #1
 800089c:	2108      	movs	r1, #8
 800089e:	e7f5      	b.n	800088c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008a0:	4b07      	ldr	r3, [pc, #28]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008a2:	689a      	ldr	r2, [r3, #8]
 80008a4:	3a00      	subs	r2, #0
 80008a6:	bf18      	it	ne
 80008a8:	2201      	movne	r2, #1
 80008aa:	2110      	movs	r1, #16
 80008ac:	e7ee      	b.n	800088c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008ae:	4b04      	ldr	r3, [pc, #16]	@ (80008c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008b0:	68da      	ldr	r2, [r3, #12]
 80008b2:	3a00      	subs	r2, #0
 80008b4:	bf18      	it	ne
 80008b6:	2201      	movne	r2, #1
 80008b8:	2120      	movs	r1, #32
 80008ba:	e7e7      	b.n	800088c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008bc:	4770      	bx	lr
 80008be:	bf00      	nop
 80008c0:	200003ac 	.word	0x200003ac
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80008c8:	2803      	cmp	r0, #3
 80008ca:	d80d      	bhi.n	80008e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80008cc:	e8df f000 	tbb	[pc, r0]
 80008d0:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80008d6:	4805      	ldr	r0, [pc, #20]	@ (80008ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 80008d8:	f008 bddb 	b.w	8009492 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80008dc:	2108      	movs	r1, #8
 80008de:	e7fa      	b.n	80008d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008e0:	2110      	movs	r1, #16
 80008e2:	e7f8      	b.n	80008d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80008e4:	2120      	movs	r1, #32
 80008e6:	e7f6      	b.n	80008d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 80008e8:	4770      	bx	lr
 80008ea:	bf00      	nop
 80008ec:	40021000 	.word	0x40021000

080008f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008f2:	2803      	cmp	r0, #3
 80008f4:	d811      	bhi.n	800091a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 80008f6:	e8df f000 	tbb	[pc, r0]
 80008fa:	0a02      	.short	0x0a02
 80008fc:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008fe:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000900:	4807      	ldr	r0, [pc, #28]	@ (8000920 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000902:	f008 fdbb 	bl	800947c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000906:	1e43      	subs	r3, r0, #1
 8000908:	4258      	negs	r0, r3
 800090a:	4158      	adcs	r0, r3
 800090c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800090e:	2108      	movs	r1, #8
 8000910:	e7f6      	b.n	8000900 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000912:	2110      	movs	r1, #16
 8000914:	e7f4      	b.n	8000900 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000916:	2120      	movs	r1, #32
 8000918:	e7f2      	b.n	8000900 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 800091a:	2000      	movs	r0, #0
 800091c:	e7f3      	b.n	8000906 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800091e:	bf00      	nop
 8000920:	40021000 	.word	0x40021000

08000924 <_ZN8touchgfx4GPIO4initEv>:
{
 8000924:	b570      	push	{r4, r5, r6, lr}
 8000926:	4d08      	ldr	r5, [pc, #32]	@ (8000948 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000928:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800092a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800092c:	b2e0      	uxtb	r0, r4
 800092e:	f7ff ffdf 	bl	80008f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000932:	b118      	cbz	r0, 800093c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000934:	682b      	ldr	r3, [r5, #0]
 8000936:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000938:	bf18      	it	ne
 800093a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800093c:	3401      	adds	r4, #1
 800093e:	2c05      	cmp	r4, #5
 8000940:	f105 0504 	add.w	r5, r5, #4
 8000944:	d1f2      	bne.n	800092c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	200003ac 	.word	0x200003ac

0800094c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800094c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800094e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 8000952:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 8000956:	4770      	bx	lr

08000958 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000958:	2000      	movs	r0, #0
 800095a:	4770      	bx	lr

0800095c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800095c:	4b03      	ldr	r3, [pc, #12]	@ (800096c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800095e:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000960:	3900      	subs	r1, #0
 8000962:	bf18      	it	ne
 8000964:	2101      	movne	r1, #1
 8000966:	7019      	strb	r1, [r3, #0]
    }
 8000968:	4770      	bx	lr
 800096a:	bf00      	nop
 800096c:	20013f5f 	.word	0x20013f5f

08000970 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000970:	2000      	movs	r0, #0
 8000972:	4770      	bx	lr

08000974 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000974:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8000976:	b10b      	cbz	r3, 800097c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000978:	4608      	mov	r0, r1
 800097a:	4718      	bx	r3
        }
    }
 800097c:	4770      	bx	lr

0800097e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800097e:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000982:	4770      	bx	lr

08000984 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000984:	6840      	ldr	r0, [r0, #4]
 8000986:	6803      	ldr	r3, [r0, #0]
 8000988:	699b      	ldr	r3, [r3, #24]
 800098a:	4718      	bx	r3

0800098c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800098c:	4770      	bx	lr

0800098e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800098e:	4770      	bx	lr

08000990 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000990:	4770      	bx	lr
	...

08000994 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000994:	b510      	push	{r4, lr}
 8000996:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000998:	f000 fd44 	bl	8001424 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 800099c:	6823      	ldr	r3, [r4, #0]
 800099e:	4903      	ldr	r1, [pc, #12]	@ (80009ac <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009a0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80009a4:	4620      	mov	r0, r4
}
 80009a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009aa:	4718      	bx	r3
 80009ac:	d0000000 	.word	0xd0000000

080009b0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009b0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009b2:	6803      	ldr	r3, [r0, #0]
{
 80009b4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80009ba:	4798      	blx	r3
    enableInterrupts();
 80009bc:	6823      	ldr	r3, [r4, #0]
 80009be:	4620      	mov	r0, r4
 80009c0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80009c2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80009c4:	f000 f8ec 	bl	8000ba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80009c8:	6823      	ldr	r3, [r4, #0]
 80009ca:	4620      	mov	r0, r4
 80009cc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80009ce:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80009d0:	2029      	movs	r0, #41	@ 0x29
 80009d2:	f001 fa17 	bl	8001e04 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80009d6:	f000 f8e3 	bl	8000ba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80009da:	6823      	ldr	r3, [r4, #0]
 80009dc:	4620      	mov	r0, r4
 80009de:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80009e0:	4798      	blx	r3
    for (;;)
 80009e2:	e7f8      	b.n	80009d6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080009e4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80009e4:	b510      	push	{r4, lr}
 80009e6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80009e8:	f00e f854 	bl	800ea94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80009ec:	6823      	ldr	r3, [r4, #0]
 80009ee:	4620      	mov	r0, r4
 80009f0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 80009f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80009f8:	4718      	bx	r3

080009fa <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80009fa:	f000 bcf7 	b.w	80013ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009fe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009fe:	f000 bcfb 	b.w	80013f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a02 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a02:	f000 bd2d 	b.w	8001460 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a06 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a06:	f000 bccd 	b.w	80013a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a0a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a0a:	f000 bd3d 	b.w	8001488 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a0e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a0e:	f000 bd45 	b.w	800149c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a12 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a12:	f000 bcd1 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a16 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a16:	f00d baa9 	b.w	800df6c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a1a <_ZN11TouchGFXHALD0Ev>:
 8000a1a:	b510      	push	{r4, lr}
 8000a1c:	217c      	movs	r1, #124	@ 0x7c
 8000a1e:	4604      	mov	r4, r0
 8000a20:	f026 f9f8 	bl	8026e14 <_ZdlPvj>
 8000a24:	4620      	mov	r0, r4
 8000a26:	bd10      	pop	{r4, pc}

08000a28 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a28:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a2a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a2e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a32:	4b0c      	ldr	r3, [pc, #48]	@ (8000a64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a34:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a36:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a38:	d009      	beq.n	8000a4e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a3a:	b93a      	cbnz	r2, 8000a4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a3c:	4a0a      	ldr	r2, [pc, #40]	@ (8000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a3e:	490b      	ldr	r1, [pc, #44]	@ (8000a6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a40:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a42:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a44:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a46:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a48:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a4a:	701a      	strb	r2, [r3, #0]
    }
 8000a4c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a4e:	2a00      	cmp	r2, #0
 8000a50:	d0fc      	beq.n	8000a4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a52:	4a05      	ldr	r2, [pc, #20]	@ (8000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a54:	4905      	ldr	r1, [pc, #20]	@ (8000a6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a56:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a58:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a5a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a5c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a5e:	2200      	movs	r2, #0
 8000a60:	e7f3      	b.n	8000a4a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a62:	bf00      	nop
 8000a64:	20013f58 	.word	0x20013f58
 8000a68:	20013f54 	.word	0x20013f54
 8000a6c:	20013f56 	.word	0x20013f56

08000a70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a70:	b570      	push	{r4, r5, r6, lr}
 8000a72:	460d      	mov	r5, r1
 8000a74:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a76:	b935      	cbnz	r5, 8000a86 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a78:	4b09      	ldr	r3, [pc, #36]	@ (8000aa0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a7a:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a7c:	480a      	ldr	r0, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a7e:	f240 21d2 	movw	r1, #722	@ 0x2d2
 8000a82:	f027 f903 	bl	8027c8c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a86:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a8a:	4b08      	ldr	r3, [pc, #32]	@ (8000aac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a8c:	3a00      	subs	r2, #0
 8000a8e:	bf18      	it	ne
 8000a90:	2201      	movne	r2, #1
 8000a92:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a94:	6803      	ldr	r3, [r0, #0]
    }
 8000a96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a9a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000a9e:	4718      	bx	r3
 8000aa0:	08028d5c 	.word	0x08028d5c
 8000aa4:	08028d94 	.word	0x08028d94
 8000aa8:	08028de2 	.word	0x08028de2
 8000aac:	20013f5e 	.word	0x20013f5e

08000ab0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000ab0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000ab2:	4b09      	ldr	r3, [pc, #36]	@ (8000ad8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000ab4:	881b      	ldrh	r3, [r3, #0]
 8000ab6:	428b      	cmp	r3, r1
 8000ab8:	d803      	bhi.n	8000ac2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000aba:	4b08      	ldr	r3, [pc, #32]	@ (8000adc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000abc:	881b      	ldrh	r3, [r3, #0]
 8000abe:	4293      	cmp	r3, r2
 8000ac0:	d905      	bls.n	8000ace <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000ac2:	4b07      	ldr	r3, [pc, #28]	@ (8000ae0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000ac4:	4a07      	ldr	r2, [pc, #28]	@ (8000ae4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000ac6:	4808      	ldr	r0, [pc, #32]	@ (8000ae8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000ac8:	219e      	movs	r1, #158	@ 0x9e
 8000aca:	f027 f8df 	bl	8027c8c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000ace:	4b07      	ldr	r3, [pc, #28]	@ (8000aec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000ad0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000ad2:	4b07      	ldr	r3, [pc, #28]	@ (8000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000ad4:	801a      	strh	r2, [r3, #0]
    }
 8000ad6:	bd08      	pop	{r3, pc}
 8000ad8:	20013f54 	.word	0x20013f54
 8000adc:	20013f56 	.word	0x20013f56
 8000ae0:	08028e27 	.word	0x08028e27
 8000ae4:	08028e8a 	.word	0x08028e8a
 8000ae8:	08028de2 	.word	0x08028de2
 8000aec:	20013f5a 	.word	0x20013f5a
 8000af0:	20013f5c 	.word	0x20013f5c

08000af4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000af4:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000af6:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000afa:	b118      	cbz	r0, 8000b04 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000afc:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000afe:	6803      	ldr	r3, [r0, #0]
 8000b00:	681b      	ldr	r3, [r3, #0]
 8000b02:	4718      	bx	r3
    }
 8000b04:	4770      	bx	lr
	...

08000b08 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b08:	2101      	movs	r1, #1
{
 8000b0a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	4608      	mov	r0, r1
 8000b10:	f00a ff1c 	bl	800b94c <osSemaphoreNew>
 8000b14:	4b0a      	ldr	r3, [pc, #40]	@ (8000b40 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b16:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b18:	b928      	cbnz	r0, 8000b26 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b1a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b44 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b1c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b1e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b20:	480a      	ldr	r0, [pc, #40]	@ (8000b4c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b22:	f027 f8b3 	bl	8027c8c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b26:	2200      	movs	r2, #0
 8000b28:	2104      	movs	r1, #4
 8000b2a:	2001      	movs	r0, #1
 8000b2c:	f00a ffad 	bl	800ba8a <osMessageQueueNew>
 8000b30:	4b07      	ldr	r3, [pc, #28]	@ (8000b50 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b32:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b34:	b918      	cbnz	r0, 8000b3e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b36:	4b07      	ldr	r3, [pc, #28]	@ (8000b54 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b38:	4a03      	ldr	r2, [pc, #12]	@ (8000b48 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b3a:	212c      	movs	r1, #44	@ 0x2c
 8000b3c:	e7f0      	b.n	8000b20 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b3e:	bd08      	pop	{r3, pc}
 8000b40:	200003c0 	.word	0x200003c0
 8000b44:	08028ecd 	.word	0x08028ecd
 8000b48:	08028f16 	.word	0x08028f16
 8000b4c:	08028f45 	.word	0x08028f45
 8000b50:	200003bc 	.word	0x200003bc
 8000b54:	08028f83 	.word	0x08028f83

08000b58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b58:	4b02      	ldr	r3, [pc, #8]	@ (8000b64 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b5a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b5e:	6818      	ldr	r0, [r3, #0]
 8000b60:	f00a bf3e 	b.w	800b9e0 <osSemaphoreAcquire>
 8000b64:	200003c0 	.word	0x200003c0

08000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b68:	4b01      	ldr	r3, [pc, #4]	@ (8000b70 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b6a:	6818      	ldr	r0, [r3, #0]
 8000b6c:	f00a bf64 	b.w	800ba38 <osSemaphoreRelease>
 8000b70:	200003c0 	.word	0x200003c0

08000b74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b74:	4b02      	ldr	r3, [pc, #8]	@ (8000b80 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b76:	2100      	movs	r1, #0
 8000b78:	6818      	ldr	r0, [r3, #0]
 8000b7a:	f00a bf31 	b.w	800b9e0 <osSemaphoreAcquire>
 8000b7e:	bf00      	nop
 8000b80:	200003c0 	.word	0x200003c0

08000b84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000b84:	f7ff bff0 	b.w	8000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b88:	4803      	ldr	r0, [pc, #12]	@ (8000b98 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b8a:	4904      	ldr	r1, [pc, #16]	@ (8000b9c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b8c:	6800      	ldr	r0, [r0, #0]
 8000b8e:	2300      	movs	r3, #0
 8000b90:	461a      	mov	r2, r3
 8000b92:	f00a bfb5 	b.w	800bb00 <osMessageQueuePut>
 8000b96:	bf00      	nop
 8000b98:	200003bc 	.word	0x200003bc
 8000b9c:	20000004 	.word	0x20000004

08000ba0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ba0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ba2:	4c08      	ldr	r4, [pc, #32]	@ (8000bc4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	461a      	mov	r2, r3
 8000ba8:	a901      	add	r1, sp, #4
 8000baa:	6820      	ldr	r0, [r4, #0]
 8000bac:	f00a ffd9 	bl	800bb62 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bb0:	6820      	ldr	r0, [r4, #0]
 8000bb2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	a901      	add	r1, sp, #4
 8000bba:	f00a ffd2 	bl	800bb62 <osMessageQueueGet>
}
 8000bbe:	b002      	add	sp, #8
 8000bc0:	bd10      	pop	{r4, pc}
 8000bc2:	bf00      	nop
 8000bc4:	200003bc 	.word	0x200003bc

08000bc8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000bc8:	6803      	ldr	r3, [r0, #0]
 8000bca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000bcc:	4718      	bx	r3

08000bce <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000bce:	2001      	movs	r0, #1
 8000bd0:	4770      	bx	lr

08000bd2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000bd2:	6803      	ldr	r3, [r0, #0]
 8000bd4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000bd6:	4718      	bx	r3

08000bd8 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000bd8:	e7fe      	b.n	8000bd8 <DMA2D_XferErrorCallback>

08000bda <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000bda:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000bde:	4770      	bx	lr

08000be0 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000be0:	4b05      	ldr	r3, [pc, #20]	@ (8000bf8 <_ZN8STM32DMAD1Ev+0x18>)
 8000be2:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000be4:	4b05      	ldr	r3, [pc, #20]	@ (8000bfc <_ZN8STM32DMAD1Ev+0x1c>)
 8000be6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000bea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000bee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000bf2:	f3bf 8f6f 	isb	sy
}
 8000bf6:	4770      	bx	lr
 8000bf8:	0802a128 	.word	0x0802a128
 8000bfc:	e000e100 	.word	0xe000e100

08000c00 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c00:	b510      	push	{r4, lr}
 8000c02:	4604      	mov	r4, r0
}
 8000c04:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c08:	f7ff ffea 	bl	8000be0 <_ZN8STM32DMAD1Ev>
 8000c0c:	4620      	mov	r0, r4
 8000c0e:	f026 f901 	bl	8026e14 <_ZdlPvj>
 8000c12:	4620      	mov	r0, r4
 8000c14:	bd10      	pop	{r4, pc}
	...

08000c18 <_ZN8STM32DMA10initializeEv>:
{
 8000c18:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	9301      	str	r3, [sp, #4]
 8000c1e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c58 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c20:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c22:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c26:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c2a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c2e:	9201      	str	r2, [sp, #4]
 8000c30:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c32:	691a      	ldr	r2, [r3, #16]
 8000c34:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c38:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c3a:	691a      	ldr	r2, [r3, #16]
 8000c3c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c40:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c42:	4b06      	ldr	r3, [pc, #24]	@ (8000c5c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c44:	4a06      	ldr	r2, [pc, #24]	@ (8000c60 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c46:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c48:	4a06      	ldr	r2, [pc, #24]	@ (8000c64 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c4a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c4c:	4b06      	ldr	r3, [pc, #24]	@ (8000c68 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c4e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c52:	609a      	str	r2, [r3, #8]
}
 8000c54:	b002      	add	sp, #8
 8000c56:	4770      	bx	lr
 8000c58:	40023800 	.word	0x40023800
 8000c5c:	20002fe0 	.word	0x20002fe0
 8000c60:	08000eb9 	.word	0x08000eb9
 8000c64:	08000bd9 	.word	0x08000bd9
 8000c68:	e000e100 	.word	0xe000e100

08000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000c6c:	b508      	push	{r3, lr}
    switch (format)
 8000c6e:	280a      	cmp	r0, #10
 8000c70:	d809      	bhi.n	8000c86 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000c72:	e8df f000 	tbb	[pc, r0]
 8000c76:	1006      	.short	0x1006
 8000c78:	0808080e 	.word	0x0808080e
 8000c7c:	10101008 	.word	0x10101008
 8000c80:	10          	.byte	0x10
 8000c81:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000c82:	2002      	movs	r0, #2
}
 8000c84:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000c86:	4b05      	ldr	r3, [pc, #20]	@ (8000c9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000c88:	4a05      	ldr	r2, [pc, #20]	@ (8000ca0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000c8a:	4806      	ldr	r0, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000c8c:	2190      	movs	r1, #144	@ 0x90
 8000c8e:	f026 fffd 	bl	8027c8c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000c92:	2000      	movs	r0, #0
 8000c94:	e7f6      	b.n	8000c84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000c96:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000c98:	e7f4      	b.n	8000c84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000c9a:	bf00      	nop
 8000c9c:	08028fc5 	.word	0x08028fc5
 8000ca0:	08028fe0 	.word	0x08028fe0
 8000ca4:	0802902b 	.word	0x0802902b

08000ca8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cac:	7f88      	ldrb	r0, [r1, #30]
 8000cae:	f7ff ffdd 	bl	8000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cb2:	8aa5      	ldrh	r5, [r4, #20]
 8000cb4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cb6:	4b16      	ldr	r3, [pc, #88]	@ (8000d10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cb8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cba:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cbc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000cc0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cc2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cc6:	1b52      	subs	r2, r2, r5
 8000cc8:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000cca:	6825      	ldr	r5, [r4, #0]
 8000ccc:	2d08      	cmp	r5, #8
 8000cce:	d10e      	bne.n	8000cee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cd0:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cd2:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cd4:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000cd6:	7f20      	ldrb	r0, [r4, #28]
 8000cd8:	4a0e      	ldr	r2, [pc, #56]	@ (8000d14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000cda:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000cde:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ce0:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ce2:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000ce4:	4a0c      	ldr	r2, [pc, #48]	@ (8000d18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ce6:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ce8:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000cea:	601a      	str	r2, [r3, #0]
    }
}
 8000cec:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000cee:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000cf0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000cf2:	611a      	str	r2, [r3, #16]
 8000cf4:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000cf6:	0a0a      	lsrs	r2, r1, #8
 8000cf8:	0948      	lsrs	r0, r1, #5
 8000cfa:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000cfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d02:	4302      	orrs	r2, r0
 8000d04:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d08:	430a      	orrs	r2, r1
 8000d0a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d0c:	4a03      	ldr	r2, [pc, #12]	@ (8000d1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d0e:	e7ec      	b.n	8000cea <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d10:	4002b000 	.word	0x4002b000
 8000d14:	00010009 	.word	0x00010009
 8000d18:	00022301 	.word	0x00022301
 8000d1c:	00032301 	.word	0x00032301

08000d20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d20:	b508      	push	{r3, lr}
    switch (format)
 8000d22:	280b      	cmp	r0, #11
 8000d24:	d80b      	bhi.n	8000d3e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d26:	e8df f000 	tbb	[pc, r0]
 8000d2a:	1206      	.short	0x1206
 8000d2c:	0a0a0a10 	.word	0x0a0a0a10
 8000d30:	0808080a 	.word	0x0808080a
 8000d34:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d36:	2002      	movs	r0, #2
}
 8000d38:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d3a:	2005      	movs	r0, #5
        break;
 8000d3c:	e7fc      	b.n	8000d38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d3e:	4b05      	ldr	r3, [pc, #20]	@ (8000d54 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d40:	4a05      	ldr	r2, [pc, #20]	@ (8000d58 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d42:	4806      	ldr	r0, [pc, #24]	@ (8000d5c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d44:	216f      	movs	r1, #111	@ 0x6f
 8000d46:	f026 ffa1 	bl	8027c8c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d4a:	2000      	movs	r0, #0
 8000d4c:	e7f4      	b.n	8000d38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d4e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d50:	e7f2      	b.n	8000d38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d52:	bf00      	nop
 8000d54:	08028fc5 	.word	0x08028fc5
 8000d58:	08029067 	.word	0x08029067
 8000d5c:	0802902b 	.word	0x0802902b

08000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000d60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d64:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000d68:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d6a:	4640      	mov	r0, r8
 8000d6c:	f7ff ffd8 	bl	8000d20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d70:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d72:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d74:	4638      	mov	r0, r7
 8000d76:	f7ff ffd3 	bl	8000d20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000d7a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d7c:	4638      	mov	r0, r7
 8000d7e:	f7ff ff75 	bl	8000c6c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	8aa1      	ldrh	r1, [r4, #20]
 8000d84:	8b62      	ldrh	r2, [r4, #26]
 8000d86:	4b44      	ldr	r3, [pc, #272]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d88:	1a52      	subs	r2, r2, r1
 8000d8a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000d8e:	8b22      	ldrh	r2, [r4, #24]
 8000d90:	1a52      	subs	r2, r2, r1
 8000d92:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d94:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d96:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d9c:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d9e:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000da0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000da4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000da6:	6820      	ldr	r0, [r4, #0]
 8000da8:	2880      	cmp	r0, #128	@ 0x80
 8000daa:	d028      	beq.n	8000dfe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dac:	7f22      	ldrb	r2, [r4, #28]
 8000dae:	d80f      	bhi.n	8000dd0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000db0:	2820      	cmp	r0, #32
 8000db2:	d067      	beq.n	8000e84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000db4:	2840      	cmp	r0, #64	@ 0x40
 8000db6:	d065      	beq.n	8000e84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000db8:	2804      	cmp	r0, #4
 8000dba:	d01a      	beq.n	8000df2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dbc:	4b36      	ldr	r3, [pc, #216]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dbe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000dc2:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000dc6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dc8:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000dca:	d061      	beq.n	8000e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000dcc:	4a33      	ldr	r2, [pc, #204]	@ (8000e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000dce:	e044      	b.n	8000e5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000dd0:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000dd4:	d004      	beq.n	8000de0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000dd6:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000dda:	d1ef      	bne.n	8000dbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ddc:	4830      	ldr	r0, [pc, #192]	@ (8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000dde:	e000      	b.n	8000de2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000de0:	4830      	ldr	r0, [pc, #192]	@ (8000ea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000de2:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000de6:	61da      	str	r2, [r3, #28]
 8000de8:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000dea:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000dec:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dee:	6159      	str	r1, [r3, #20]
 8000df0:	e032      	b.n	8000e58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000df2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000df6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfa:	61da      	str	r2, [r3, #28]
 8000dfc:	e7f6      	b.n	8000dec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000dfe:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e00:	1d02      	adds	r2, r0, #4
 8000e02:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e04:	7f22      	ldrb	r2, [r4, #28]
 8000e06:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e0a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e0e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e10:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e12:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e14:	7801      	ldrb	r1, [r0, #0]
 8000e16:	b141      	cbz	r1, 8000e2a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e18:	2901      	cmp	r1, #1
 8000e1a:	d021      	beq.n	8000e60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e1c:	4b22      	ldr	r3, [pc, #136]	@ (8000ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e1e:	4a23      	ldr	r2, [pc, #140]	@ (8000eac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e20:	4823      	ldr	r0, [pc, #140]	@ (8000eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e22:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e26:	f026 ff31 	bl	8027c8c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e2a:	69da      	ldr	r2, [r3, #28]
 8000e2c:	8841      	ldrh	r1, [r0, #2]
 8000e2e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e32:	3901      	subs	r1, #1
 8000e34:	f022 0210 	bic.w	r2, r2, #16
 8000e38:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e3c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e3e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e40:	4b15      	ldr	r3, [pc, #84]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e42:	69da      	ldr	r2, [r3, #28]
 8000e44:	f042 0220 	orr.w	r2, r2, #32
 8000e48:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e4a:	69da      	ldr	r2, [r3, #28]
 8000e4c:	0692      	lsls	r2, r2, #26
 8000e4e:	d4fc      	bmi.n	8000e4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e50:	2210      	movs	r2, #16
 8000e52:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e54:	2900      	cmp	r1, #0
 8000e56:	d0b9      	beq.n	8000dcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e58:	4a16      	ldr	r2, [pc, #88]	@ (8000eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e5a:	601a      	str	r2, [r3, #0]
}
 8000e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000e60:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e64:	69da      	ldr	r2, [r3, #28]
 8000e66:	8840      	ldrh	r0, [r0, #2]
 8000e68:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e6c:	f100 30ff 	add.w	r0, r0, #4294967295
 8000e70:	f022 0210 	bic.w	r2, r2, #16
 8000e74:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000e78:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000e7c:	bf18      	it	ne
 8000e7e:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e80:	61da      	str	r2, [r3, #28]
                break;
 8000e82:	e7dd      	b.n	8000e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e84:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e88:	4b03      	ldr	r3, [pc, #12]	@ (8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e8a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000e8e:	e7b4      	b.n	8000dfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e90:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000e94:	e7e1      	b.n	8000e5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000e96:	bf00      	nop
 8000e98:	4002b000 	.word	0x4002b000
 8000e9c:	00012301 	.word	0x00012301
 8000ea0:	00020009 	.word	0x00020009
 8000ea4:	0002000a 	.word	0x0002000a
 8000ea8:	080290b1 	.word	0x080290b1
 8000eac:	080290cb 	.word	0x080290cb
 8000eb0:	0802902b 	.word	0x0802902b
 8000eb4:	00022301 	.word	0x00022301

08000eb8 <DMA2D_XferCpltCallback>:
        return instance;
 8000eb8:	4b02      	ldr	r3, [pc, #8]	@ (8000ec4 <DMA2D_XferCpltCallback+0xc>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000ebe:	6803      	ldr	r3, [r0, #0]
 8000ec0:	695b      	ldr	r3, [r3, #20]
 8000ec2:	4718      	bx	r3
 8000ec4:	20013f60 	.word	0x20013f60

08000ec8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ec8:	b570      	push	{r4, r5, r6, lr}
 8000eca:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000ecc:	4625      	mov	r5, r4
 8000ece:	4b0a      	ldr	r3, [pc, #40]	@ (8000ef8 <_ZN8STM32DMAC1Ev+0x30>)
 8000ed0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000ed2:	2600      	movs	r6, #0
 8000ed4:	6060      	str	r0, [r4, #4]
 8000ed6:	7226      	strb	r6, [r4, #8]
 8000ed8:	7266      	strb	r6, [r4, #9]
 8000eda:	f845 3b20 	str.w	r3, [r5], #32
 8000ede:	2260      	movs	r2, #96	@ 0x60
 8000ee0:	4629      	mov	r1, r5
 8000ee2:	f00d ff2f 	bl	800ed44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000ee6:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000eea:	60ee      	str	r6, [r5, #12]
 8000eec:	3524      	adds	r5, #36	@ 0x24
 8000eee:	429d      	cmp	r5, r3
 8000ef0:	d1fb      	bne.n	8000eea <_ZN8STM32DMAC1Ev+0x22>
}
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	bd70      	pop	{r4, r5, r6, pc}
 8000ef6:	bf00      	nop
 8000ef8:	0802a128 	.word	0x0802a128

08000efc <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000efc:	4b03      	ldr	r3, [pc, #12]	@ (8000f0c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000efe:	681a      	ldr	r2, [r3, #0]
 8000f00:	07d2      	lsls	r2, r2, #31
 8000f02:	d4fc      	bmi.n	8000efe <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f04:	2223      	movs	r2, #35	@ 0x23
 8000f06:	609a      	str	r2, [r3, #8]
}
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	4002b000 	.word	0x4002b000

08000f10 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f10:	4770      	bx	lr
	...

08000f14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f14:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f16:	4c0f      	ldr	r4, [pc, #60]	@ (8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f18:	6825      	ldr	r5, [r4, #0]
 8000f1a:	07ed      	lsls	r5, r5, #31
 8000f1c:	d4fc      	bmi.n	8000f18 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f1e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f20:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f22:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f24:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f28:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f2a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f2c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f2e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f30:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f32:	d00a      	beq.n	8000f4a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f34:	4908      	ldr	r1, [pc, #32]	@ (8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f36:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f38:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f3c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f3e:	4b07      	ldr	r3, [pc, #28]	@ (8000f5c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f40:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f42:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f44:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f46:	6023      	str	r3, [r4, #0]
    }
}
 8000f48:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f4a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f4c:	9b03      	ldr	r3, [sp, #12]
 8000f4e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f50:	4b03      	ldr	r3, [pc, #12]	@ (8000f60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f52:	e7f8      	b.n	8000f46 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f54:	4002b000 	.word	0x4002b000
 8000f58:	00010009 	.word	0x00010009
 8000f5c:	00020001 	.word	0x00020001
 8000f60:	00030001 	.word	0x00030001

08000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000f64:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f66:	4c0e      	ldr	r4, [pc, #56]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000f68:	6825      	ldr	r5, [r4, #0]
 8000f6a:	07ed      	lsls	r5, r5, #31
 8000f6c:	d4fc      	bmi.n	8000f68 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f6e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f70:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f72:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f74:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f78:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000f7a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f7c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f7e:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f80:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000f82:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000f84:	d008      	beq.n	8000f98 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f86:	061b      	lsls	r3, r3, #24
 8000f88:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000f8c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000f8e:	4b05      	ldr	r3, [pc, #20]	@ (8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f90:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000f92:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000f94:	6023      	str	r3, [r4, #0]
    }
}
 8000f96:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f98:	4b03      	ldr	r3, [pc, #12]	@ (8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000f9a:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	e7f9      	b.n	8000f94 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fa0:	4002b000 	.word	0x4002b000
 8000fa4:	00020001 	.word	0x00020001
 8000fa8:	ff020002 	.word	0xff020002

08000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fac:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fae:	4c0b      	ldr	r4, [pc, #44]	@ (8000fdc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000fb0:	6825      	ldr	r5, [r4, #0]
 8000fb2:	07ed      	lsls	r5, r5, #31
 8000fb4:	d4fc      	bmi.n	8000fb0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fba:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fbc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fbe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fc2:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fc4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fc8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fca:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fcc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fce:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd0:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fd2:	4b03      	ldr	r3, [pc, #12]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd4:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd6:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fd8:	6023      	str	r3, [r4, #0]
}
 8000fda:	bd30      	pop	{r4, r5, pc}
 8000fdc:	4002b000 	.word	0x4002b000
 8000fe0:	00020001 	.word	0x00020001

08000fe4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000fe4:	2001      	movs	r0, #1
 8000fe6:	4770      	bx	lr

08000fe8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000fe8:	2038      	movs	r0, #56	@ 0x38
 8000fea:	4770      	bx	lr

08000fec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000fec:	2338      	movs	r3, #56	@ 0x38
 8000fee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000ff2:	3008      	adds	r0, #8
 8000ff4:	4770      	bx	lr

08000ff6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000ff6:	2338      	movs	r3, #56	@ 0x38
 8000ff8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000ffc:	3008      	adds	r0, #8
 8000ffe:	4770      	bx	lr

08001000 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001000:	2001      	movs	r0, #1
 8001002:	4770      	bx	lr

08001004 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001004:	f641 007c 	movw	r0, #6268	@ 0x187c
 8001008:	4770      	bx	lr

0800100a <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800100a:	f641 037c 	movw	r3, #6268	@ 0x187c
 800100e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001012:	3008      	adds	r0, #8
 8001014:	4770      	bx	lr

08001016 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001016:	f641 037c 	movw	r3, #6268	@ 0x187c
 800101a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800101e:	3008      	adds	r0, #8
 8001020:	4770      	bx	lr

08001022 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001022:	2001      	movs	r0, #1
 8001024:	4770      	bx	lr

08001026 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001026:	2010      	movs	r0, #16
 8001028:	4770      	bx	lr

0800102a <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800102a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800102e:	3008      	adds	r0, #8
 8001030:	4770      	bx	lr

08001032 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001032:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001036:	3008      	adds	r0, #8
 8001038:	4770      	bx	lr

0800103a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
 800103a:	4608      	mov	r0, r1
 800103c:	f002 baf4 	b.w	8003628 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>

08001040 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001040:	b510      	push	{r4, lr}
 8001042:	4b03      	ldr	r3, [pc, #12]	@ (8001050 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001044:	6003      	str	r3, [r0, #0]
 8001046:	4604      	mov	r4, r0
 8001048:	f00c fce5 	bl	800da16 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800104c:	4620      	mov	r0, r4
 800104e:	bd10      	pop	{r4, pc}
 8001050:	0802a1e0 	.word	0x0802a1e0

08001054 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001054:	b510      	push	{r4, lr}
 8001056:	4604      	mov	r4, r0
 8001058:	f7ff fff2 	bl	8001040 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800105c:	4620      	mov	r0, r4
 800105e:	2140      	movs	r1, #64	@ 0x40
 8001060:	f025 fed8 	bl	8026e14 <_ZdlPvj>
 8001064:	4620      	mov	r0, r4
 8001066:	bd10      	pop	{r4, pc}

08001068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001068:	b510      	push	{r4, lr}
 800106a:	4b03      	ldr	r3, [pc, #12]	@ (8001078 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800106c:	6003      	str	r3, [r0, #0]
 800106e:	4604      	mov	r4, r0
 8001070:	f00c fcd1 	bl	800da16 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001074:	4620      	mov	r0, r4
 8001076:	bd10      	pop	{r4, pc}
 8001078:	0802a1ac 	.word	0x0802a1ac

0800107c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800107c:	b510      	push	{r4, lr}
 800107e:	4604      	mov	r4, r0
 8001080:	f7ff fff2 	bl	8001068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001084:	4620      	mov	r0, r4
 8001086:	f641 0184 	movw	r1, #6276	@ 0x1884
 800108a:	f025 fec3 	bl	8026e14 <_ZdlPvj>
 800108e:	4620      	mov	r0, r4
 8001090:	bd10      	pop	{r4, pc}
	...

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4b03      	ldr	r3, [pc, #12]	@ (80010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001098:	6003      	str	r3, [r0, #0]
 800109a:	4604      	mov	r4, r0
 800109c:	f00c fcbb 	bl	800da16 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010a0:	4620      	mov	r0, r4
 80010a2:	bd10      	pop	{r4, pc}
 80010a4:	0802a178 	.word	0x0802a178

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4604      	mov	r4, r0
 80010ac:	f7ff fff2 	bl	8001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010b0:	4620      	mov	r0, r4
 80010b2:	2118      	movs	r1, #24
 80010b4:	f025 feae 	bl	8026e14 <_ZdlPvj>
 80010b8:	4620      	mov	r0, r4
 80010ba:	bd10      	pop	{r4, pc}

080010bc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010bc:	b510      	push	{r4, lr}
 80010be:	4b09      	ldr	r3, [pc, #36]	@ (80010e4 <_ZN12FrontendHeapD1Ev+0x28>)
 80010c0:	6003      	str	r3, [r0, #0]
 80010c2:	4604      	mov	r4, r0
 80010c4:	f500 50c5 	add.w	r0, r0, #6304	@ 0x18a0
 80010c8:	3010      	adds	r0, #16
 80010ca:	f7ff ffb9 	bl	8001040 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80010ce:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80010d2:	f7ff ffc9 	bl	8001068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010d6:	f104 0014 	add.w	r0, r4, #20
 80010da:	f7ff ffdb 	bl	8001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010de:	4620      	mov	r0, r4
 80010e0:	bd10      	pop	{r4, pc}
 80010e2:	bf00      	nop
 80010e4:	0802a214 	.word	0x0802a214

080010e8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80010e8:	b508      	push	{r3, lr}
 80010ea:	4802      	ldr	r0, [pc, #8]	@ (80010f4 <__tcf_0+0xc>)
 80010ec:	f7ff ffe6 	bl	80010bc <_ZN12FrontendHeapD1Ev>
 80010f0:	bd08      	pop	{r3, pc}
 80010f2:	bf00      	nop
 80010f4:	20001294 	.word	0x20001294

080010f8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80010f8:	b510      	push	{r4, lr}
 80010fa:	4604      	mov	r4, r0
 80010fc:	f7ff ffde 	bl	80010bc <_ZN12FrontendHeapD1Ev>
 8001100:	4620      	mov	r0, r4
 8001102:	f44f 51d3 	mov.w	r1, #6752	@ 0x1a60
 8001106:	f025 fe85 	bl	8026e14 <_ZdlPvj>
 800110a:	4620      	mov	r0, r4
 800110c:	bd10      	pop	{r4, pc}
	...

08001110 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001110:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001114:	f001 f9f0 	bl	80024f8 <_ZN14BitmapDatabase11getInstanceEv>
 8001118:	4605      	mov	r5, r0
 800111a:	f001 f9f1 	bl	8002500 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800111e:	2400      	movs	r4, #0
 8001120:	4601      	mov	r1, r0
 8001122:	4623      	mov	r3, r4
 8001124:	4628      	mov	r0, r5
 8001126:	4622      	mov	r2, r4
 8001128:	9400      	str	r4, [sp, #0]
 800112a:	f016 fe17 	bl	8017d5c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800112e:	4b27      	ldr	r3, [pc, #156]	@ (80011cc <touchgfx_init+0xbc>)
 8001130:	4a27      	ldr	r2, [pc, #156]	@ (80011d0 <touchgfx_init+0xc0>)
 8001132:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001134:	4620      	mov	r0, r4
 8001136:	f005 faab 	bl	8006690 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800113a:	4d26      	ldr	r5, [pc, #152]	@ (80011d4 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 800113c:	4b26      	ldr	r3, [pc, #152]	@ (80011d8 <touchgfx_init+0xc8>)
 800113e:	4a27      	ldr	r2, [pc, #156]	@ (80011dc <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001140:	4827      	ldr	r0, [pc, #156]	@ (80011e0 <touchgfx_init+0xd0>)
 8001142:	609a      	str	r2, [r3, #8]
 8001144:	f016 fd72 	bl	8017c2c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001148:	682b      	ldr	r3, [r5, #0]
 800114a:	f3bf 8f5b 	dmb	ish
 800114e:	07db      	lsls	r3, r3, #31
 8001150:	d436      	bmi.n	80011c0 <touchgfx_init+0xb0>
 8001152:	4628      	mov	r0, r5
 8001154:	f025 fe60 	bl	8026e18 <__cxa_guard_acquire>
 8001158:	b390      	cbz	r0, 80011c0 <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800115a:	4c22      	ldr	r4, [pc, #136]	@ (80011e4 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 800115c:	4f22      	ldr	r7, [pc, #136]	@ (80011e8 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800115e:	4b23      	ldr	r3, [pc, #140]	@ (80011ec <touchgfx_init+0xdc>)
 8001160:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8001162:	f107 0654 	add.w	r6, r7, #84	@ 0x54
        : presenterStorage(pres),
 8001166:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800116a:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 800116e:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001170:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001174:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001176:	6126      	str	r6, [r4, #16]
 8001178:	f00c fc4e 	bl	800da18 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800117c:	4b1c      	ldr	r3, [pc, #112]	@ (80011f0 <touchgfx_init+0xe0>)
 800117e:	6163      	str	r3, [r4, #20]
 8001180:	4640      	mov	r0, r8
 8001182:	f00c fc49 	bl	800da18 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001186:	4b1b      	ldr	r3, [pc, #108]	@ (80011f4 <touchgfx_init+0xe4>)
 8001188:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800118a:	4638      	mov	r0, r7
 800118c:	f00c fc44 	bl	800da18 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001190:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8001194:	f503 600f 	add.w	r0, r3, #2288	@ 0x8f0
 8001198:	4a17      	ldr	r2, [pc, #92]	@ (80011f8 <touchgfx_init+0xe8>)
 800119a:	f8c3 28b0 	str.w	r2, [r3, #2224]	@ 0x8b0
 800119e:	f007 f9a7 	bl	80084f0 <_ZN5ModelC1Ev>
 80011a2:	4622      	mov	r2, r4
 80011a4:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 80011a8:	4630      	mov	r0, r6
 80011aa:	f005 ff73 	bl	8007094 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011ae:	4630      	mov	r0, r6
 80011b0:	f002 fa3a 	bl	8003628 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 80011b4:	4811      	ldr	r0, [pc, #68]	@ (80011fc <touchgfx_init+0xec>)
 80011b6:	f026 fd87 	bl	8027cc8 <atexit>
 80011ba:	4628      	mov	r0, r5
 80011bc:	f025 fe38 	bl	8026e30 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011c0:	480f      	ldr	r0, [pc, #60]	@ (8001200 <touchgfx_init+0xf0>)
}
 80011c2:	b002      	add	sp, #8
 80011c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80011c8:	f7ff bbe4 	b.w	8000994 <_ZN11TouchGFXHAL10initializeEv>
 80011cc:	20013fc4 	.word	0x20013fc4
 80011d0:	20000440 	.word	0x20000440
 80011d4:	20001290 	.word	0x20001290
 80011d8:	20000460 	.word	0x20000460
 80011dc:	20000444 	.word	0x20000444
 80011e0:	20000008 	.word	0x20000008
 80011e4:	20001294 	.word	0x20001294
 80011e8:	20002b44 	.word	0x20002b44
 80011ec:	0802a214 	.word	0x0802a214
 80011f0:	0802a178 	.word	0x0802a178
 80011f4:	0802a1ac 	.word	0x0802a1ac
 80011f8:	0802a1e0 	.word	0x0802a1e0
 80011fc:	080010e9 	.word	0x080010e9
 8001200:	200003c4 	.word	0x200003c4

08001204 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001204:	4770      	bx	lr
	...

08001208 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001208:	4801      	ldr	r0, [pc, #4]	@ (8001210 <touchgfx_taskEntry+0x8>)
 800120a:	f7ff bbd1 	b.w	80009b0 <_ZN11TouchGFXHAL9taskEntryEv>
 800120e:	bf00      	nop
 8001210:	200003c4 	.word	0x200003c4

08001214 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001214:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001216:	4e24      	ldr	r6, [pc, #144]	@ (80012a8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 8001218:	4c24      	ldr	r4, [pc, #144]	@ (80012ac <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 800121a:	4d25      	ldr	r5, [pc, #148]	@ (80012b0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 800121c:	4b25      	ldr	r3, [pc, #148]	@ (80012b4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 800121e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001220:	4630      	mov	r0, r6
 8001222:	f7ff fe51 	bl	8000ec8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001226:	4628      	mov	r0, r5
 8001228:	f01b fe9e 	bl	801cf68 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800122c:	4822      	ldr	r0, [pc, #136]	@ (80012b8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800122e:	f014 fa6d 	bl	801570c <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001232:	4b22      	ldr	r3, [pc, #136]	@ (80012bc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001234:	4822      	ldr	r0, [pc, #136]	@ (80012c0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          touchController(touchCtrl),
 8001236:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001238:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800123a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800123e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001242:	4920      	ldr	r1, [pc, #128]	@ (80012c4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001244:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001246:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800124a:	491f      	ldr	r1, [pc, #124]	@ (80012c8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 800124c:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 800124e:	491f      	ldr	r1, [pc, #124]	@ (80012cc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          useAuxiliaryLCD(false),
 8001250:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8001254:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001256:	21f0      	movs	r1, #240	@ 0xf0
 8001258:	8001      	strh	r1, [r0, #0]
 800125a:	481d      	ldr	r0, [pc, #116]	@ (80012d0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          lastY(0),
 800125c:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800125e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001260:	481c      	ldr	r0, [pc, #112]	@ (80012d4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          updateMCULoad(0),
 8001262:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001266:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 800126a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800126e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001272:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001276:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 800127a:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 800127e:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001282:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001286:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 800128a:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 800128c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001290:	8001      	strh	r1, [r0, #0]
 8001292:	4811      	ldr	r0, [pc, #68]	@ (80012d8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001294:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001296:	4911      	ldr	r1, [pc, #68]	@ (80012dc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001298:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800129a:	2201      	movs	r2, #1
 800129c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012a0:	4a0f      	ldr	r2, [pc, #60]	@ (80012e0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012a2:	601a      	str	r2, [r3, #0]
}
 80012a4:	bd70      	pop	{r4, r5, r6, pc}
 80012a6:	bf00      	nop
 80012a8:	200004ec 	.word	0x200004ec
 80012ac:	2000128c 	.word	0x2000128c
 80012b0:	20000460 	.word	0x20000460
 80012b4:	08028d4c 	.word	0x08028d4c
 80012b8:	20000444 	.word	0x20000444
 80012bc:	200003c4 	.word	0x200003c4
 80012c0:	20013f54 	.word	0x20013f54
 80012c4:	01000001 	.word	0x01000001
 80012c8:	01010000 	.word	0x01010000
 80012cc:	20013f60 	.word	0x20013f60
 80012d0:	20013f5a 	.word	0x20013f5a
 80012d4:	20013f56 	.word	0x20013f56
 80012d8:	20013f5c 	.word	0x20013f5c
 80012dc:	20013f58 	.word	0x20013f58
 80012e0:	0802a050 	.word	0x0802a050

080012e4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80012e4:	4801      	ldr	r0, [pc, #4]	@ (80012ec <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80012e6:	f7ff bc7b 	b.w	8000be0 <_ZN8STM32DMAD1Ev>
 80012ea:	bf00      	nop
 80012ec:	200004ec 	.word	0x200004ec

080012f0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80012f0:	2000      	movs	r0, #0
 80012f2:	4770      	bx	lr

080012f4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80012f4:	8081      	strh	r1, [r0, #4]
    }
 80012f6:	4770      	bx	lr

080012f8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80012f8:	80c1      	strh	r1, [r0, #6]
    }
 80012fa:	4770      	bx	lr

080012fc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80012fc:	8101      	strh	r1, [r0, #8]
    }
 80012fe:	4770      	bx	lr

08001300 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001300:	8141      	strh	r1, [r0, #10]
    }
 8001302:	4770      	bx	lr

08001304 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001304:	4770      	bx	lr

08001306 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001306:	4770      	bx	lr

08001308 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001308:	4770      	bx	lr

0800130a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800130a:	4770      	bx	lr

0800130c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800130c:	4770      	bx	lr

0800130e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800130e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001310:	88c4      	ldrh	r4, [r0, #6]
 8001312:	6803      	ldr	r3, [r0, #0]
 8001314:	1b12      	subs	r2, r2, r4
 8001316:	8884      	ldrh	r4, [r0, #4]
 8001318:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800131a:	1b09      	subs	r1, r1, r4
 800131c:	b212      	sxth	r2, r2
    }
 800131e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001322:	b209      	sxth	r1, r1
 8001324:	4718      	bx	r3

08001326 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001326:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800132a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800132c:	f04f 33ff 	mov.w	r3, #4294967295
 8001330:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001332:	6813      	ldr	r3, [r2, #0]
 8001334:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001336:	6010      	str	r0, [r2, #0]
    }
 8001338:	4770      	bx	lr

0800133a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800133a:	2000      	movs	r0, #0
 800133c:	4770      	bx	lr

0800133e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800133e:	888b      	ldrh	r3, [r1, #4]
 8001340:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001342:	2001      	movs	r0, #1
 8001344:	4770      	bx	lr

08001346 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001348:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800134c:	4770      	bx	lr

0800134e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800134e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001352:	4770      	bx	lr

08001354 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001354:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001356:	2200      	movs	r2, #0
        return rect.width;
 8001358:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800135c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001360:	8002      	strh	r2, [r0, #0]
 8001362:	8042      	strh	r2, [r0, #2]
 8001364:	8084      	strh	r4, [r0, #4]
 8001366:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001368:	bd10      	pop	{r4, pc}

0800136a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800136a:	2200      	movs	r2, #0
 800136c:	8002      	strh	r2, [r0, #0]
 800136e:	8042      	strh	r2, [r0, #2]
 8001370:	8082      	strh	r2, [r0, #4]
 8001372:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001374:	4770      	bx	lr

08001376 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001376:	7701      	strb	r1, [r0, #28]
    }
 8001378:	4770      	bx	lr

0800137a <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 800137a:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 800137e:	4770      	bx	lr

08001380 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001380:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001384:	4770      	bx	lr

08001386 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001386:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 800138a:	4770      	bx	lr

0800138c <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 800138c:	2001      	movs	r0, #1
 800138e:	4770      	bx	lr

08001390 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8001390:	3098      	adds	r0, #152	@ 0x98
 8001392:	4770      	bx	lr

08001394 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8001394:	308c      	adds	r0, #140	@ 0x8c
 8001396:	4770      	bx	lr

08001398 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 8001398:	3084      	adds	r0, #132	@ 0x84
 800139a:	4770      	bx	lr

0800139c <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 800139c:	4770      	bx	lr

0800139e <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800139e:	4770      	bx	lr

080013a0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013a0:	4770      	bx	lr
	...

080013a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a4:	4b03      	ldr	r3, [pc, #12]	@ (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013a6:	2290      	movs	r2, #144	@ 0x90
 80013a8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013ac:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80013b8:	4a09      	ldr	r2, [pc, #36]	@ (80013e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80013ba:	490a      	ldr	r1, [pc, #40]	@ (80013e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80013bc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80013be:	480a      	ldr	r0, [pc, #40]	@ (80013e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80013c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013c4:	3b01      	subs	r3, #1
 80013c6:	b29b      	uxth	r3, r3
 80013c8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80013ca:	6911      	ldr	r1, [r2, #16]
 80013cc:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80013d0:	3901      	subs	r1, #1
 80013d2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80013d4:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80013d6:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 80013d8:	f043 0301 	orr.w	r3, r3, #1
 80013dc:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80013de:	4770      	bx	lr
 80013e0:	40016800 	.word	0x40016800
 80013e4:	20002cf6 	.word	0x20002cf6
 80013e8:	20002cf4 	.word	0x20002cf4

080013ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80013ec:	4b01      	ldr	r3, [pc, #4]	@ (80013f4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80013ee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 80013f2:	4770      	bx	lr
 80013f4:	40016800 	.word	0x40016800

080013f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80013f8:	4b02      	ldr	r3, [pc, #8]	@ (8001404 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80013fa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80013fc:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001400:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001402:	4770      	bx	lr
 8001404:	40016800 	.word	0x40016800

08001408 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001408:	b510      	push	{r4, lr}
 800140a:	212c      	movs	r1, #44	@ 0x2c
 800140c:	4604      	mov	r4, r0
 800140e:	f025 fd01 	bl	8026e14 <_ZdlPvj>
 8001412:	4620      	mov	r0, r4
 8001414:	bd10      	pop	{r4, pc}

08001416 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001416:	b510      	push	{r4, lr}
 8001418:	21bc      	movs	r1, #188	@ 0xbc
 800141a:	4604      	mov	r4, r0
 800141c:	f025 fcfa 	bl	8026e14 <_ZdlPvj>
 8001420:	4620      	mov	r0, r4
 8001422:	bd10      	pop	{r4, pc}

08001424 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001424:	b570      	push	{r4, r5, r6, lr}
 8001426:	4604      	mov	r4, r0
    HAL::initialize();
 8001428:	f00c fdf5 	bl	800e016 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800142c:	6823      	ldr	r3, [r4, #0]
 800142e:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8001430:	f013 f818 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
 8001434:	4601      	mov	r1, r0
 8001436:	4620      	mov	r0, r4
 8001438:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800143a:	6823      	ldr	r3, [r4, #0]
 800143c:	4a05      	ldr	r2, [pc, #20]	@ (8001454 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800143e:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8001442:	4620      	mov	r0, r4
 8001444:	46ac      	mov	ip, r5
 8001446:	2300      	movs	r3, #0
}
 8001448:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800144c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001450:	4760      	bx	ip
 8001452:	bf00      	nop
 8001454:	d004b000 	.word	0xd004b000

08001458 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001458:	f00c bdc4 	b.w	800dfe4 <_ZN8touchgfx3HAL10beginFrameEv>

0800145c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800145c:	f00c bdce 	b.w	800dffc <_ZN8touchgfx3HAL8endFrameEv>

08001460 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001460:	f00c bd8a 	b.w	800df78 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001464 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001464:	f00c beeb 	b.w	800e23e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001468 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001468:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800146c:	b112      	cbz	r2, 8001474 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800146e:	6803      	ldr	r3, [r0, #0]
 8001470:	695b      	ldr	r3, [r3, #20]
 8001472:	4718      	bx	r3
    }
 8001474:	4770      	bx	lr

08001476 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001476:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800147a:	b11a      	cbz	r2, 8001484 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800147c:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001480:	b102      	cbz	r2, 8001484 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001482:	6018      	str	r0, [r3, #0]
        }
    }
 8001484:	4770      	bx	lr
	...

08001488 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001488:	4b03      	ldr	r3, [pc, #12]	@ (8001498 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800148a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800148e:	609a      	str	r2, [r3, #8]
 8001490:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001494:	609a      	str	r2, [r3, #8]
}
 8001496:	4770      	bx	lr
 8001498:	e000e100 	.word	0xe000e100

0800149c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800149c:	4b08      	ldr	r3, [pc, #32]	@ (80014c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800149e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014a2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014aa:	f3bf 8f6f 	isb	sy
 80014ae:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014b2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014ba:	f3bf 8f6f 	isb	sy
}
 80014be:	4770      	bx	lr
 80014c0:	e000e100 	.word	0xe000e100

080014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80014c4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80014c6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80014c8:	4e12      	ldr	r6, [pc, #72]	@ (8001514 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80014ca:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80014cc:	4b12      	ldr	r3, [pc, #72]	@ (8001518 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80014ce:	6003      	str	r3, [r0, #0]
 80014d0:	6833      	ldr	r3, [r6, #0]
 80014d2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 80014d6:	4605      	mov	r5, r0
 80014d8:	b10a      	cbz	r2, 80014de <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80014da:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80014dc:	b900      	cbnz	r0, 80014e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80014de:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80014e0:	6803      	ldr	r3, [r0, #0]
 80014e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014e4:	4798      	blx	r3
        return auxiliaryLCD;
 80014e6:	6833      	ldr	r3, [r6, #0]
 80014e8:	fab0 f480 	clz	r4, r0
 80014ec:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80014ee:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80014f0:	b130      	cbz	r0, 8001500 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80014f2:	6803      	ldr	r3, [r0, #0]
 80014f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014f6:	4798      	blx	r3
 80014f8:	2800      	cmp	r0, #0
 80014fa:	bf08      	it	eq
 80014fc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001500:	b92c      	cbnz	r4, 800150e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001502:	4b06      	ldr	r3, [pc, #24]	@ (800151c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001504:	4a06      	ldr	r2, [pc, #24]	@ (8001520 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001506:	4807      	ldr	r0, [pc, #28]	@ (8001524 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001508:	212c      	movs	r1, #44	@ 0x2c
 800150a:	f026 fbbf 	bl	8027c8c <__assert_func>
    }
 800150e:	4628      	mov	r0, r5
 8001510:	bd70      	pop	{r4, r5, r6, pc}
 8001512:	bf00      	nop
 8001514:	20013f60 	.word	0x20013f60
 8001518:	0802a228 	.word	0x0802a228
 800151c:	08029109 	.word	0x08029109
 8001520:	08029167 	.word	0x08029167
 8001524:	080291a0 	.word	0x080291a0

08001528 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001528:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800152a:	4e24      	ldr	r6, [pc, #144]	@ (80015bc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x94>)
 800152c:	6835      	ldr	r5, [r6, #0]
 800152e:	f3bf 8f5b 	dmb	ish
 8001532:	f015 0501 	ands.w	r5, r5, #1
 8001536:	d13f      	bne.n	80015b8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
 8001538:	4630      	mov	r0, r6
 800153a:	f025 fc6d 	bl	8026e18 <__cxa_guard_acquire>
 800153e:	2800      	cmp	r0, #0
 8001540:	d03a      	beq.n	80015b8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
class CWRVectorRenderer : public VectorRenderer
 8001542:	4c1f      	ldr	r4, [pc, #124]	@ (80015c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001544:	4b1f      	ldr	r3, [pc, #124]	@ (80015c4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001546:	6125      	str	r5, [r4, #16]
 8001548:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800154c:	e9c4 3500 	strd	r3, r5, [r4]
 8001550:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001554:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001556:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001558:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 800155a:	f014 fb36 	bl	8015bca <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800155e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001562:	f00f fcbd 	bl	8010ee0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001566:	4b18      	ldr	r3, [pc, #96]	@ (80015c8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001568:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800156a:	4620      	mov	r0, r4
 800156c:	4b17      	ldr	r3, [pc, #92]	@ (80015cc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 800156e:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001572:	f7ff ffa7 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001576:	4b16      	ldr	r3, [pc, #88]	@ (80015d0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001578:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 800157c:	3324      	adds	r3, #36	@ 0x24
 800157e:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001582:	2364      	movs	r3, #100	@ 0x64
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001584:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001588:	2300      	movs	r3, #0
 800158a:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 800158e:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001592:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001596:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 800159a:	480e      	ldr	r0, [pc, #56]	@ (80015d4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 800159c:	4b0e      	ldr	r3, [pc, #56]	@ (80015d8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800159e:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015a2:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015a6:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015aa:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015ae:	f026 fb8b 	bl	8027cc8 <atexit>
 80015b2:	4630      	mov	r0, r6
 80015b4:	f025 fc3c 	bl	8026e30 <__cxa_guard_release>
}
 80015b8:	4801      	ldr	r0, [pc, #4]	@ (80015c0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 80015ba:	bd70      	pop	{r4, r5, r6, pc}
 80015bc:	20002cf8 	.word	0x20002cf8
 80015c0:	20002cfc 	.word	0x20002cfc
 80015c4:	0802ae58 	.word	0x0802ae58
 80015c8:	0802a248 	.word	0x0802a248
 80015cc:	0802a2c0 	.word	0x0802a2c0
 80015d0:	0802ae0c 	.word	0x0802ae0c
 80015d4:	080013a1 	.word	0x080013a1
 80015d8:	0802adec 	.word	0x0802adec

080015dc <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80015dc:	b510      	push	{r4, lr}
        return instance;
 80015de:	4c14      	ldr	r4, [pc, #80]	@ (8001630 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80015e0:	6823      	ldr	r3, [r4, #0]
 80015e2:	b323      	cbz	r3, 800162e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80015e4:	4b13      	ldr	r3, [pc, #76]	@ (8001634 <HAL_LTDC_LineEventCallback+0x58>)
 80015e6:	4a14      	ldr	r2, [pc, #80]	@ (8001638 <HAL_LTDC_LineEventCallback+0x5c>)
 80015e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80015ea:	8811      	ldrh	r1, [r2, #0]
 80015ec:	428b      	cmp	r3, r1
 80015ee:	d113      	bne.n	8001618 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80015f0:	4b12      	ldr	r3, [pc, #72]	@ (800163c <HAL_LTDC_LineEventCallback+0x60>)
 80015f2:	8819      	ldrh	r1, [r3, #0]
 80015f4:	f008 fd50 	bl	800a098 <HAL_LTDC_ProgramLineEvent>
 80015f8:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80015fa:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 80015fe:	3301      	adds	r3, #1
 8001600:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001604:	f7ff fac0 	bl	8000b88 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001608:	6820      	ldr	r0, [r4, #0]
 800160a:	f00d fa43 	bl	800ea94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800160e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001612:	2000      	movs	r0, #0
 8001614:	f7ff b904 	b.w	8000820 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001618:	f008 fd3e 	bl	800a098 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800161c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800161e:	6803      	ldr	r3, [r0, #0]
 8001620:	6a1b      	ldr	r3, [r3, #32]
 8001622:	4798      	blx	r3
    }
 8001624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001628:	2000      	movs	r0, #0
 800162a:	f7ff b923 	b.w	8000874 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800162e:	bd10      	pop	{r4, pc}
 8001630:	20013f60 	.word	0x20013f60
 8001634:	40016800 	.word	0x40016800
 8001638:	20002cf6 	.word	0x20002cf6
 800163c:	20002cf4 	.word	0x20002cf4

08001640 <JoystickTask>:



// ⚠️ Thêm extern "C" ở đây để export hàm cho file C
extern "C" void JoystickTask(void *argument)
{
 8001640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;

    enum Joystick { JOY1, JOY2 };
    Joystick currentJoystick = JOY1;

    tick_counter = 0;
 8001644:	f8df 9158 	ldr.w	r9, [pc, #344]	@ 80017a0 <JoystickTask+0x160>
			lastJoy1ButtonState = joy1ButtonState;
		} else if (currentJoystick == JOY2) {
			sConfig.Channel = JOY2_X_CHANNEL;
			sConfig.Rank = 1;
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001648:	4d53      	ldr	r5, [pc, #332]	@ (8001798 <JoystickTask+0x158>)
			} else if (adc_value2 > JOY_THRESHOLD_RIGHT) {
				command = JOY2_RIGHT;
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
			}

            GPIO_PinState joy2ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY2_BUTTON_PIN);
 800164a:	f8df a158 	ldr.w	sl, [pc, #344]	@ 80017a4 <JoystickTask+0x164>
            if (joy2ButtonState == GPIO_PIN_RESET && lastJoy2ButtonState == GPIO_PIN_SET) {
                command = JOY2_BUTTON;
                osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800164e:	4f53      	ldr	r7, [pc, #332]	@ (800179c <JoystickTask+0x15c>)
{
 8001650:	b087      	sub	sp, #28
    ADC_ChannelConfTypeDef sConfig = {0};
 8001652:	2210      	movs	r2, #16
 8001654:	2100      	movs	r1, #0
 8001656:	a802      	add	r0, sp, #8
    tick_counter = 0;
 8001658:	2400      	movs	r4, #0
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;
 800165a:	f04f 0801 	mov.w	r8, #1
    ADC_ChannelConfTypeDef sConfig = {0};
 800165e:	f026 fd2e 	bl	80280be <memset>
    GPIO_PinState lastJoy1ButtonState = GPIO_PIN_SET;
 8001662:	46c3      	mov	fp, r8
    tick_counter = 0;
 8001664:	f8c9 4000 	str.w	r4, [r9]
    	if (currentJoystick == JOY1) {
 8001668:	2301      	movs	r3, #1
 800166a:	2c00      	cmp	r4, #0
 800166c:	d150      	bne.n	8001710 <JoystickTask+0xd0>
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 800166e:	2206      	movs	r2, #6
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001670:	a902      	add	r1, sp, #8
 8001672:	4628      	mov	r0, r5
			sConfig.Rank = 1;
 8001674:	e9cd 4302 	strd	r4, r3, [sp, #8]
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001678:	9204      	str	r2, [sp, #16]
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800167a:	f007 fc23 	bl	8008ec4 <HAL_ADC_ConfigChannel>
			HAL_ADC_Start(&hadc1);
 800167e:	4628      	mov	r0, r5
 8001680:	f007 fb30 	bl	8008ce4 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8001684:	f04f 31ff 	mov.w	r1, #4294967295
 8001688:	4628      	mov	r0, r5
 800168a:	f007 fbc4 	bl	8008e16 <HAL_ADC_PollForConversion>
			adc_value1 = HAL_ADC_GetValue(&hadc1);
 800168e:	4628      	mov	r0, r5
 8001690:	f007 fc14 	bl	8008ebc <HAL_ADC_GetValue>
 8001694:	4606      	mov	r6, r0
			HAL_ADC_Stop(&hadc1);
 8001696:	4628      	mov	r0, r5
 8001698:	f007 fba2 	bl	8008de0 <HAL_ADC_Stop>
			if (adc_value1 < JOY_THRESHOLD_LEFT) {
 800169c:	f5b6 7f7a 	cmp.w	r6, #1000	@ 0x3e8
 80016a0:	f04f 0301 	mov.w	r3, #1
 80016a4:	d22d      	bcs.n	8001702 <JoystickTask+0xc2>
				command = JOY1_LEFT;
 80016a6:	f88d 4007 	strb.w	r4, [sp, #7]
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80016aa:	6838      	ldr	r0, [r7, #0]
 80016ac:	4623      	mov	r3, r4
 80016ae:	4622      	mov	r2, r4
 80016b0:	f10d 0107 	add.w	r1, sp, #7
 80016b4:	f00a fa24 	bl	800bb00 <osMessageQueuePut>
			GPIO_PinState joy1ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY1_BUTTON_PIN);
 80016b8:	2104      	movs	r1, #4
 80016ba:	4650      	mov	r0, sl
 80016bc:	f007 fede 	bl	800947c <HAL_GPIO_ReadPin>
			if (joy1ButtonState == GPIO_PIN_RESET && lastJoy1ButtonState == GPIO_PIN_SET) {
 80016c0:	4606      	mov	r6, r0
 80016c2:	b960      	cbnz	r0, 80016de <JoystickTask+0x9e>
 80016c4:	f1bb 0f01 	cmp.w	fp, #1
 80016c8:	d109      	bne.n	80016de <JoystickTask+0x9e>
				command = JOY1_BUTTON;
 80016ca:	2304      	movs	r3, #4
 80016cc:	f88d 3007 	strb.w	r3, [sp, #7]
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80016d0:	4602      	mov	r2, r0
 80016d2:	4603      	mov	r3, r0
 80016d4:	f10d 0107 	add.w	r1, sp, #7
 80016d8:	6838      	ldr	r0, [r7, #0]
 80016da:	f00a fa11 	bl	800bb00 <osMessageQueuePut>
            }
            lastJoy2ButtonState = joy2ButtonState;
		}

		tick_counter += 20;
 80016de:	f8d9 3000 	ldr.w	r3, [r9]
 80016e2:	3314      	adds	r3, #20
		if (tick_counter >= 500) {
 80016e4:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 80016e8:	bf28      	it	cs
 80016ea:	2300      	movcs	r3, #0
			tick_counter = 0;
			currentJoystick = (currentJoystick == JOY1) ? JOY2 : JOY1;

			}

        osDelay(10);
 80016ec:	f04f 000a 	mov.w	r0, #10
 80016f0:	bf28      	it	cs
 80016f2:	f084 0401 	eorcs.w	r4, r4, #1
		tick_counter += 20;
 80016f6:	f8c9 3000 	str.w	r3, [r9]
    }
 80016fa:	46b3      	mov	fp, r6
        osDelay(10);
 80016fc:	f00a f91a 	bl	800b934 <osDelay>
    }
 8001700:	e7b2      	b.n	8001668 <JoystickTask+0x28>
			} else if (adc_value1 > JOY_THRESHOLD_RIGHT) {
 8001702:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8001706:	4296      	cmp	r6, r2
 8001708:	d9d6      	bls.n	80016b8 <JoystickTask+0x78>
				command = JOY1_RIGHT;
 800170a:	f88d 3007 	strb.w	r3, [sp, #7]
 800170e:	e7cc      	b.n	80016aa <JoystickTask+0x6a>
			sConfig.Channel = JOY2_X_CHANNEL;
 8001710:	2205      	movs	r2, #5
			sConfig.Rank = 1;
 8001712:	e9cd 2302 	strd	r2, r3, [sp, #8]
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001716:	a902      	add	r1, sp, #8
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001718:	2306      	movs	r3, #6
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800171a:	4628      	mov	r0, r5
			sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 800171c:	9304      	str	r3, [sp, #16]
			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800171e:	f007 fbd1 	bl	8008ec4 <HAL_ADC_ConfigChannel>
			HAL_ADC_Start(&hadc1);
 8001722:	4628      	mov	r0, r5
 8001724:	f007 fade 	bl	8008ce4 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8001728:	f04f 31ff 	mov.w	r1, #4294967295
 800172c:	4628      	mov	r0, r5
 800172e:	f007 fb72 	bl	8008e16 <HAL_ADC_PollForConversion>
			adc_value2 = HAL_ADC_GetValue(&hadc1);
 8001732:	4628      	mov	r0, r5
 8001734:	f007 fbc2 	bl	8008ebc <HAL_ADC_GetValue>
 8001738:	4606      	mov	r6, r0
			HAL_ADC_Stop(&hadc1);
 800173a:	4628      	mov	r0, r5
 800173c:	f007 fb50 	bl	8008de0 <HAL_ADC_Stop>
			if (adc_value2 < JOY_THRESHOLD_LEFT) {
 8001740:	f5b6 7f7a 	cmp.w	r6, #1000	@ 0x3e8
 8001744:	d216      	bcs.n	8001774 <JoystickTask+0x134>
				command = JOY2_LEFT;
 8001746:	2302      	movs	r3, #2
				command = JOY2_RIGHT;
 8001748:	f88d 3007 	strb.w	r3, [sp, #7]
				osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800174c:	2300      	movs	r3, #0
 800174e:	6838      	ldr	r0, [r7, #0]
 8001750:	461a      	mov	r2, r3
 8001752:	f10d 0107 	add.w	r1, sp, #7
 8001756:	f00a f9d3 	bl	800bb00 <osMessageQueuePut>
            GPIO_PinState joy2ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY2_BUTTON_PIN);
 800175a:	2108      	movs	r1, #8
 800175c:	4650      	mov	r0, sl
 800175e:	f007 fe8d 	bl	800947c <HAL_GPIO_ReadPin>
            if (joy2ButtonState == GPIO_PIN_RESET && lastJoy2ButtonState == GPIO_PIN_SET) {
 8001762:	4603      	mov	r3, r0
 8001764:	b9b0      	cbnz	r0, 8001794 <JoystickTask+0x154>
 8001766:	f1b8 0f01 	cmp.w	r8, #1
 800176a:	d009      	beq.n	8001780 <JoystickTask+0x140>
            lastJoy2ButtonState = joy2ButtonState;
 800176c:	f04f 0800 	mov.w	r8, #0
 8001770:	465e      	mov	r6, fp
 8001772:	e7b4      	b.n	80016de <JoystickTask+0x9e>
			} else if (adc_value2 > JOY_THRESHOLD_RIGHT) {
 8001774:	f640 33b8 	movw	r3, #3000	@ 0xbb8
 8001778:	429e      	cmp	r6, r3
 800177a:	d9ee      	bls.n	800175a <JoystickTask+0x11a>
				command = JOY2_RIGHT;
 800177c:	2303      	movs	r3, #3
 800177e:	e7e3      	b.n	8001748 <JoystickTask+0x108>
                command = JOY2_BUTTON;
 8001780:	2205      	movs	r2, #5
 8001782:	f88d 2007 	strb.w	r2, [sp, #7]
                osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8001786:	f10d 0107 	add.w	r1, sp, #7
 800178a:	4602      	mov	r2, r0
 800178c:	6838      	ldr	r0, [r7, #0]
 800178e:	f00a f9b7 	bl	800bb00 <osMessageQueuePut>
 8001792:	e7eb      	b.n	800176c <JoystickTask+0x12c>
            lastJoy2ButtonState = joy2ButtonState;
 8001794:	4680      	mov	r8, r0
 8001796:	e7eb      	b.n	8001770 <JoystickTask+0x130>
 8001798:	20002e10 	.word	0x20002e10
 800179c:	20002dc0 	.word	0x20002dc0
 80017a0:	20002db8 	.word	0x20002db8
 80017a4:	40021800 	.word	0x40021800

080017a8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80017a8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80017aa:	4b06      	ldr	r3, [pc, #24]	@ (80017c4 <SPI5_Write+0x1c>)
{
 80017ac:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	4805      	ldr	r0, [pc, #20]	@ (80017c8 <SPI5_Write+0x20>)
 80017b4:	2201      	movs	r2, #1
 80017b6:	f10d 0106 	add.w	r1, sp, #6
 80017ba:	f009 fa1d 	bl	800abf8 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80017be:	b003      	add	sp, #12
 80017c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80017c4:	2000000c 	.word	0x2000000c
 80017c8:	20002e8c 	.word	0x20002e8c

080017cc <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80017cc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80017ce:	2064      	movs	r0, #100	@ 0x64
 80017d0:	f00a f8b0 	bl	800b934 <osDelay>
  for(;;)
 80017d4:	e7fb      	b.n	80017ce <StartDefaultTask+0x2>
	...

080017d8 <SystemClock_Config>:
{
 80017d8:	b530      	push	{r4, r5, lr}
 80017da:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80017dc:	2210      	movs	r2, #16
 80017de:	2100      	movs	r1, #0
 80017e0:	a80a      	add	r0, sp, #40	@ 0x28
 80017e2:	f026 fc6c 	bl	80280be <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80017e6:	2214      	movs	r2, #20
 80017e8:	2100      	movs	r1, #0
 80017ea:	a803      	add	r0, sp, #12
 80017ec:	f026 fc67 	bl	80280be <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80017f0:	2400      	movs	r4, #0
 80017f2:	4b1e      	ldr	r3, [pc, #120]	@ (800186c <SystemClock_Config+0x94>)
 80017f4:	9401      	str	r4, [sp, #4]
 80017f6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80017f8:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80017fc:	641a      	str	r2, [r3, #64]	@ 0x40
 80017fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001800:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001804:	9301      	str	r3, [sp, #4]
 8001806:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001808:	4b19      	ldr	r3, [pc, #100]	@ (8001870 <SystemClock_Config+0x98>)
 800180a:	9402      	str	r4, [sp, #8]
 800180c:	681a      	ldr	r2, [r3, #0]
 800180e:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001812:	601a      	str	r2, [r3, #0]
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800181a:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800181c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800181e:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001820:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001824:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001828:	2502      	movs	r5, #2
 800182a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 800182e:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001830:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001834:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8001838:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800183c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800183e:	2304      	movs	r3, #4
 8001840:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001842:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001844:	f008 fc80 	bl	800a148 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001848:	f008 fc44 	bl	800a0d4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800184c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800184e:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001852:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001856:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800185a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800185e:	2105      	movs	r1, #5
 8001860:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001862:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001864:	f008 fe4c 	bl	800a500 <HAL_RCC_ClockConfig>
}
 8001868:	b015      	add	sp, #84	@ 0x54
 800186a:	bd30      	pop	{r4, r5, pc}
 800186c:	40023800 	.word	0x40023800
 8001870:	40007000 	.word	0x40007000

08001874 <MX_ADC1_Init>:
void MX_ADC1_Init(void){
 8001874:	b082      	sub	sp, #8
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001876:	2300      	movs	r3, #0
 8001878:	4a0f      	ldr	r2, [pc, #60]	@ (80018b8 <MX_ADC1_Init+0x44>)
 800187a:	9301      	str	r3, [sp, #4]
 800187c:	6c51      	ldr	r1, [r2, #68]	@ 0x44
      hadc1.Instance = ADC1;
 800187e:	480f      	ldr	r0, [pc, #60]	@ (80018bc <MX_ADC1_Init+0x48>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001880:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 8001884:	6451      	str	r1, [r2, #68]	@ 0x44
 8001886:	6c52      	ldr	r2, [r2, #68]	@ 0x44
      hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001888:	6083      	str	r3, [r0, #8]
    __HAL_RCC_ADC1_CLK_ENABLE();
 800188a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 800188e:	9201      	str	r2, [sp, #4]
 8001890:	9a01      	ldr	r2, [sp, #4]
      hadc1.Instance = ADC1;
 8001892:	4a0b      	ldr	r2, [pc, #44]	@ (80018c0 <MX_ADC1_Init+0x4c>)
      hadc1.Init.ScanConvMode = DISABLE;
 8001894:	6103      	str	r3, [r0, #16]
      hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001896:	e9c0 2300 	strd	r2, r3, [r0]
      hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800189a:	4a0a      	ldr	r2, [pc, #40]	@ (80018c4 <MX_ADC1_Init+0x50>)
 800189c:	6282      	str	r2, [r0, #40]	@ 0x28
      hadc1.Init.NbrOfConversion = 1;
 800189e:	2201      	movs	r2, #1
      hadc1.Init.ContinuousConvMode = DISABLE;
 80018a0:	7603      	strb	r3, [r0, #24]
      hadc1.Init.DiscontinuousConvMode = DISABLE;
 80018a2:	f880 3020 	strb.w	r3, [r0, #32]
      hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80018a6:	62c3      	str	r3, [r0, #44]	@ 0x2c
      hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018a8:	60c3      	str	r3, [r0, #12]
      hadc1.Init.NbrOfConversion = 1;
 80018aa:	61c2      	str	r2, [r0, #28]
      hadc1.Init.DMAContinuousRequests = DISABLE;
 80018ac:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
      hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80018b0:	6142      	str	r2, [r0, #20]
}
 80018b2:	b002      	add	sp, #8
    HAL_ADC_Init(&hadc1);
 80018b4:	f007 b970 	b.w	8008b98 <HAL_ADC_Init>
 80018b8:	40023800 	.word	0x40023800
 80018bc:	20002e10 	.word	0x20002e10
 80018c0:	40012000 	.word	0x40012000
 80018c4:	0f000001 	.word	0x0f000001

080018c8 <MX_USART1_UART_Init>:
{
 80018c8:	b082      	sub	sp, #8
    __HAL_RCC_USART1_CLK_ENABLE();
 80018ca:	2300      	movs	r3, #0
 80018cc:	4a0d      	ldr	r2, [pc, #52]	@ (8001904 <MX_USART1_UART_Init+0x3c>)
 80018ce:	9301      	str	r3, [sp, #4]
 80018d0:	6c51      	ldr	r1, [r2, #68]	@ 0x44
    huart1.Instance = USART1;
 80018d2:	480d      	ldr	r0, [pc, #52]	@ (8001908 <MX_USART1_UART_Init+0x40>)
    __HAL_RCC_USART1_CLK_ENABLE();
 80018d4:	f041 0110 	orr.w	r1, r1, #16
 80018d8:	6451      	str	r1, [r2, #68]	@ 0x44
 80018da:	6c52      	ldr	r2, [r2, #68]	@ 0x44
    huart1.Init.BaudRate = 115200;
 80018dc:	490b      	ldr	r1, [pc, #44]	@ (800190c <MX_USART1_UART_Init+0x44>)
    huart1.Init.Parity = UART_PARITY_NONE;
 80018de:	6103      	str	r3, [r0, #16]
    __HAL_RCC_USART1_CLK_ENABLE();
 80018e0:	f002 0210 	and.w	r2, r2, #16
 80018e4:	9201      	str	r2, [sp, #4]
 80018e6:	9a01      	ldr	r2, [sp, #4]
    huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80018e8:	61c3      	str	r3, [r0, #28]
    huart1.Init.BaudRate = 115200;
 80018ea:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80018ee:	e9c0 1200 	strd	r1, r2, [r0]
    huart1.Init.Mode = UART_MODE_TX_RX;
 80018f2:	220c      	movs	r2, #12
    huart1.Init.StopBits = UART_STOPBITS_1;
 80018f4:	e9c0 3302 	strd	r3, r3, [r0, #8]
    huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80018f8:	e9c0 2305 	strd	r2, r3, [r0, #20]
}
 80018fc:	b002      	add	sp, #8
    if (HAL_UART_Init(&huart1) != HAL_OK)
 80018fe:	f009 be7a 	b.w	800b5f6 <HAL_UART_Init>
 8001902:	bf00      	nop
 8001904:	40023800 	.word	0x40023800
 8001908:	20002dd0 	.word	0x20002dd0
 800190c:	40011000 	.word	0x40011000

08001910 <main>:
{
 8001910:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001914:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 8001916:	f007 f8fd 	bl	8008b14 <HAL_Init>
  MX_ADC1_Init();
 800191a:	f7ff ffab 	bl	8001874 <MX_ADC1_Init>
  SystemClock_Config();
 800191e:	f7ff ff5b 	bl	80017d8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001922:	2214      	movs	r2, #20
 8001924:	2100      	movs	r1, #0
 8001926:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001928:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800192a:	f026 fbc8 	bl	80280be <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800192e:	4bc6      	ldr	r3, [pc, #792]	@ (8001c48 <main+0x338>)
 8001930:	9400      	str	r4, [sp, #0]
 8001932:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001934:	48c5      	ldr	r0, [pc, #788]	@ (8001c4c <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001936:	4dc6      	ldr	r5, [pc, #792]	@ (8001c50 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001938:	f042 0210 	orr.w	r2, r2, #16
 800193c:	631a      	str	r2, [r3, #48]	@ 0x30
 800193e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001940:	f002 0210 	and.w	r2, r2, #16
 8001944:	9200      	str	r2, [sp, #0]
 8001946:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001948:	9401      	str	r4, [sp, #4]
 800194a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800194c:	f042 0220 	orr.w	r2, r2, #32
 8001950:	631a      	str	r2, [r3, #48]	@ 0x30
 8001952:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001954:	f002 0220 	and.w	r2, r2, #32
 8001958:	9201      	str	r2, [sp, #4]
 800195a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800195c:	9402      	str	r4, [sp, #8]
 800195e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001960:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001964:	631a      	str	r2, [r3, #48]	@ 0x30
 8001966:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001968:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 800196c:	9202      	str	r2, [sp, #8]
 800196e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001970:	9403      	str	r4, [sp, #12]
 8001972:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001974:	f042 0204 	orr.w	r2, r2, #4
 8001978:	631a      	str	r2, [r3, #48]	@ 0x30
 800197a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800197c:	f002 0204 	and.w	r2, r2, #4
 8001980:	9203      	str	r2, [sp, #12]
 8001982:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001984:	9404      	str	r4, [sp, #16]
 8001986:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001988:	f042 0201 	orr.w	r2, r2, #1
 800198c:	631a      	str	r2, [r3, #48]	@ 0x30
 800198e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001990:	f002 0201 	and.w	r2, r2, #1
 8001994:	9204      	str	r2, [sp, #16]
 8001996:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001998:	9405      	str	r4, [sp, #20]
 800199a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800199c:	f042 0202 	orr.w	r2, r2, #2
 80019a0:	631a      	str	r2, [r3, #48]	@ 0x30
 80019a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019a4:	f002 0202 	and.w	r2, r2, #2
 80019a8:	9205      	str	r2, [sp, #20]
 80019aa:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80019ac:	9406      	str	r4, [sp, #24]
 80019ae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80019b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80019b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019b8:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80019bc:	9206      	str	r2, [sp, #24]
 80019be:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80019c0:	9407      	str	r4, [sp, #28]
 80019c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80019c4:	f042 0208 	orr.w	r2, r2, #8
 80019c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80019ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019cc:	f003 0308 	and.w	r3, r3, #8
 80019d0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80019d2:	4622      	mov	r2, r4
 80019d4:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80019d6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80019d8:	f007 fd56 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019dc:	489d      	ldr	r0, [pc, #628]	@ (8001c54 <main+0x344>)
 80019de:	4622      	mov	r2, r4
 80019e0:	2104      	movs	r1, #4
 80019e2:	f007 fd51 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80019e6:	4622      	mov	r2, r4
 80019e8:	489b      	ldr	r0, [pc, #620]	@ (8001c58 <main+0x348>)
 80019ea:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 80019ee:	f007 fd4b 	bl	8009488 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019f2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019f4:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019f8:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019fa:	4894      	ldr	r0, [pc, #592]	@ (8001c4c <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019fc:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a00:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a02:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001a04:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a08:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a0c:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a0e:	f007 fc51 	bl	80092b4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a12:	4890      	ldr	r0, [pc, #576]	@ (8001c54 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a14:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a16:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a18:	e9cd a60d 	strd	sl, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a1c:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a1e:	f007 fc49 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001a22:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a26:	488c      	ldr	r0, [pc, #560]	@ (8001c58 <main+0x348>)
 8001a28:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a2a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a2e:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a32:	f007 fc3f 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_5;
 8001a36:	2321      	movs	r3, #33	@ 0x21
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a38:	4888      	ldr	r0, [pc, #544]	@ (8001c5c <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a3a:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a3c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a3e:	e9cd 380d 	strd	r3, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a42:	f007 fc37 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001a46:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a48:	4885      	ldr	r0, [pc, #532]	@ (8001c60 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a4a:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a4c:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a4e:	f04f 0b07 	mov.w	fp, #7
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001a52:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001a56:	f007 fc2d 	bl	80092b4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a5a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 8001a5c:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a60:	487e      	ldr	r0, [pc, #504]	@ (8001c5c <main+0x34c>)
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001a62:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a66:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a6a:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a6e:	f007 fc21 	bl	80092b4 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001a72:	487c      	ldr	r0, [pc, #496]	@ (8001c64 <main+0x354>)
 8001a74:	4b7c      	ldr	r3, [pc, #496]	@ (8001c68 <main+0x358>)
 8001a76:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001a78:	f007 fb12 	bl	80090a0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001a7c:	4a7b      	ldr	r2, [pc, #492]	@ (8001c6c <main+0x35c>)
 8001a7e:	4b7c      	ldr	r3, [pc, #496]	@ (8001c70 <main+0x360>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001a80:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001a82:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a86:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001a88:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001a8c:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001a90:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001a94:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a98:	f007 ff04 	bl	80098a4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001a9c:	2110      	movs	r1, #16
 8001a9e:	4628      	mov	r0, r5
 8001aa0:	f008 f948 	bl	8009d34 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001aa4:	4621      	mov	r1, r4
 8001aa6:	4628      	mov	r0, r5
 8001aa8:	f008 f963 	bl	8009d72 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001aac:	4871      	ldr	r0, [pc, #452]	@ (8001c74 <main+0x364>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001aae:	4972      	ldr	r1, [pc, #456]	@ (8001c78 <main+0x368>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001ab0:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001ab2:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001ab6:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001aba:	f44f 7500 	mov.w	r5, #512	@ 0x200
 8001abe:	2318      	movs	r3, #24
  hspi5.Init.CRCPolynomial = 10;
 8001ac0:	f04f 090a 	mov.w	r9, #10
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001ac4:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001ac8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001acc:	4d6b      	ldr	r5, [pc, #428]	@ (8001c7c <main+0x36c>)
  hspi5.Init.CRCPolynomial = 10;
 8001ace:	f8c0 902c 	str.w	r9, [r0, #44]	@ 0x2c
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001ad2:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001ad6:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001ada:	f009 f831 	bl	800ab40 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ade:	4b68      	ldr	r3, [pc, #416]	@ (8001c80 <main+0x370>)
  SdramTiming.RCDDelay = 2;
 8001ae0:	9713      	str	r7, [sp, #76]	@ 0x4c
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001ae2:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001ae6:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001aea:	2340      	movs	r3, #64	@ 0x40
 8001aec:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001af0:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001af4:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001af8:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001afc:	e9c5 3408 	strd	r3, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b00:	a90d      	add	r1, sp, #52	@ 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001b02:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b06:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001b08:	62ab      	str	r3, [r5, #40]	@ 0x28
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001b0a:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  SdramTiming.RowCycleDelay = 7;
 8001b0e:	e9cd ab0f 	strd	sl, fp, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001b12:	e9cd 7b0d 	strd	r7, fp, [sp, #52]	@ 0x34
  SdramTiming.RPDelay = 2;
 8001b16:	e9cd 8711 	strd	r8, r7, [sp, #68]	@ 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b1a:	f04f 0b08 	mov.w	fp, #8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b1e:	f008 fef3 	bl	800a908 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b22:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b26:	a909      	add	r1, sp, #36	@ 0x24
 8001b28:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001b2a:	e9cd b60a 	strd	fp, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001b2e:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001b30:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b32:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b34:	f008 ff08 	bl	800a948 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001b38:	4630      	mov	r0, r6
 8001b3a:	f007 f817 	bl	8008b6c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b3e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b42:	a909      	add	r1, sp, #36	@ 0x24
 8001b44:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b46:	e9cd 7b09 	strd	r7, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b4a:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b4e:	f008 fefb 	bl	800a948 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b52:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b56:	a909      	add	r1, sp, #36	@ 0x24
 8001b58:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b5a:	e9cd 8b09 	strd	r8, fp, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b5e:	e9cd a40b 	strd	sl, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b62:	f008 fef1 	bl	800a948 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001b66:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001b6a:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001b6c:	9b08      	ldr	r3, [sp, #32]
 8001b6e:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b70:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001b74:	a909      	add	r1, sp, #36	@ 0x24
 8001b76:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b78:	e9cd ab09 	strd	sl, fp, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001b7c:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b7e:	f008 fee3 	bl	800a948 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001b82:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001b86:	4628      	mov	r0, r5
 8001b88:	f008 fefc 	bl	800a984 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001b8c:	2234      	movs	r2, #52	@ 0x34
 8001b8e:	4621      	mov	r1, r4
 8001b90:	eb0d 0002 	add.w	r0, sp, r2
 8001b94:	f026 fa93 	bl	80280be <memset>
  hltdc.Instance = LTDC;
 8001b98:	4d3a      	ldr	r5, [pc, #232]	@ (8001c84 <main+0x374>)
 8001b9a:	4b3b      	ldr	r3, [pc, #236]	@ (8001c88 <main+0x378>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001b9c:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001b9e:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001ba2:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001ba4:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001ba8:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 8001baa:	f240 1e0d 	movw	lr, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001bae:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001bb2:	f240 1343 	movw	r3, #323	@ 0x143
 8001bb6:	e9c5 e309 	strd	lr, r3, [r5, #36]	@ 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bba:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001bbc:	f240 1347 	movw	r3, #327	@ 0x147
 8001bc0:	f240 1817 	movw	r8, #279	@ 0x117
 8001bc4:	e9c5 830b 	strd	r8, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001bc8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001bcc:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001bce:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bd2:	f008 f969 	bl	8009ea8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001bd6:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 8001bd8:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001bda:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bde:	f44f 6a80 	mov.w	sl, #1024	@ 0x400
 8001be2:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001be4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 8001be8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bec:	e9cd a114 	strd	sl, r1, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 8001bf0:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001bf4:	a90d      	add	r1, sp, #52	@ 0x34
 8001bf6:	4622      	mov	r2, r4
 8001bf8:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001bfa:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 8001bfe:	4d23      	ldr	r5, [pc, #140]	@ (8001c8c <main+0x37c>)
  pLayerCfg.ImageHeight = 320;
 8001c00:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 8001c02:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001c04:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001c08:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001c0c:	f008 fa17 	bl	800a03e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001c10:	4b1f      	ldr	r3, [pc, #124]	@ (8001c90 <main+0x380>)
 8001c12:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001c18:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001c1a:	4d1e      	ldr	r5, [pc, #120]	@ (8001c94 <main+0x384>)
  LcdDrv->DisplayOff();
 8001c1c:	68db      	ldr	r3, [r3, #12]
 8001c1e:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001c20:	4b1d      	ldr	r3, [pc, #116]	@ (8001c98 <main+0x388>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001c22:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001c24:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001c28:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001c2c:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001c30:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001c34:	f007 fa44 	bl	80090c0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001c38:	4631      	mov	r1, r6
 8001c3a:	4628      	mov	r0, r5
 8001c3c:	f007 faf6 	bl	800922c <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001c40:	f7fe fd36 	bl	80006b0 <MX_TouchGFX_Init>
 8001c44:	e02a      	b.n	8001c9c <main+0x38c>
 8001c46:	bf00      	nop
 8001c48:	40023800 	.word	0x40023800
 8001c4c:	40021000 	.word	0x40021000
 8001c50:	20002f8c 	.word	0x20002f8c
 8001c54:	40020800 	.word	0x40020800
 8001c58:	40020c00 	.word	0x40020c00
 8001c5c:	40020000 	.word	0x40020000
 8001c60:	40021800 	.word	0x40021800
 8001c64:	20003020 	.word	0x20003020
 8001c68:	40023000 	.word	0x40023000
 8001c6c:	40005c00 	.word	0x40005c00
 8001c70:	000186a0 	.word	0x000186a0
 8001c74:	20002e8c 	.word	0x20002e8c
 8001c78:	40015000 	.word	0x40015000
 8001c7c:	20002e58 	.word	0x20002e58
 8001c80:	a0000140 	.word	0xa0000140
 8001c84:	20002ee4 	.word	0x20002ee4
 8001c88:	40016800 	.word	0x40016800
 8001c8c:	20002dbc 	.word	0x20002dbc
 8001c90:	20000014 	.word	0x20000014
 8001c94:	20002fe0 	.word	0x20002fe0
 8001c98:	4002b000 	.word	0x4002b000
  MX_TouchGFX_PreOSInit();
 8001c9c:	f7fe fd07 	bl	80006ae <MX_TouchGFX_PreOSInit>
  MX_USART1_UART_Init();
 8001ca0:	f7ff fe12 	bl	80018c8 <MX_USART1_UART_Init>
  osKernelInitialize();
 8001ca4:	f009 fdd6 	bl	800b854 <osKernelInitialize>
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 8001ca8:	4a0f      	ldr	r2, [pc, #60]	@ (8001ce8 <main+0x3d8>)
 8001caa:	4631      	mov	r1, r6
 8001cac:	4648      	mov	r0, r9
 8001cae:	f009 feec 	bl	800ba8a <osMessageQueueNew>
 8001cb2:	4b0e      	ldr	r3, [pc, #56]	@ (8001cec <main+0x3dc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb4:	4a0e      	ldr	r2, [pc, #56]	@ (8001cf0 <main+0x3e0>)
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 8001cb6:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb8:	4621      	mov	r1, r4
 8001cba:	480e      	ldr	r0, [pc, #56]	@ (8001cf4 <main+0x3e4>)
 8001cbc:	f009 fdf6 	bl	800b8ac <osThreadNew>
 8001cc0:	4b0d      	ldr	r3, [pc, #52]	@ (8001cf8 <main+0x3e8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc2:	4a0e      	ldr	r2, [pc, #56]	@ (8001cfc <main+0x3ec>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cc4:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc6:	4621      	mov	r1, r4
 8001cc8:	480d      	ldr	r0, [pc, #52]	@ (8001d00 <main+0x3f0>)
 8001cca:	f009 fdef 	bl	800b8ac <osThreadNew>
 8001cce:	4b0d      	ldr	r3, [pc, #52]	@ (8001d04 <main+0x3f4>)
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 8001cd0:	4a0d      	ldr	r2, [pc, #52]	@ (8001d08 <main+0x3f8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cd2:	6018      	str	r0, [r3, #0]
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 8001cd4:	4621      	mov	r1, r4
 8001cd6:	480d      	ldr	r0, [pc, #52]	@ (8001d0c <main+0x3fc>)
 8001cd8:	f009 fde8 	bl	800b8ac <osThreadNew>
 8001cdc:	4b0c      	ldr	r3, [pc, #48]	@ (8001d10 <main+0x400>)
 8001cde:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001ce0:	f009 fdca 	bl	800b878 <osKernelStart>
  while (1)
 8001ce4:	e7fe      	b.n	8001ce4 <main+0x3d4>
 8001ce6:	bf00      	nop
 8001ce8:	0802a304 	.word	0x0802a304
 8001cec:	20002dc0 	.word	0x20002dc0
 8001cf0:	0802a364 	.word	0x0802a364
 8001cf4:	080017cd 	.word	0x080017cd
 8001cf8:	20002dcc 	.word	0x20002dcc
 8001cfc:	0802a340 	.word	0x0802a340
 8001d00:	080006bf 	.word	0x080006bf
 8001d04:	20002dc8 	.word	0x20002dc8
 8001d08:	0802a31c 	.word	0x0802a31c
 8001d0c:	08001641 	.word	0x08001641
 8001d10:	20002dc4 	.word	0x20002dc4

08001d14 <IOE_Init>:
void IOE_Init(void)
 8001d14:	4770      	bx	lr

08001d16 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001d16:	4770      	bx	lr

08001d18 <IOE_Write>:
{
 8001d18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d1a:	4b09      	ldr	r3, [pc, #36]	@ (8001d40 <IOE_Write+0x28>)
 8001d1c:	f88d 2017 	strb.w	r2, [sp, #23]
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	9302      	str	r3, [sp, #8]
 8001d24:	f10d 0217 	add.w	r2, sp, #23
 8001d28:	2301      	movs	r3, #1
 8001d2a:	9200      	str	r2, [sp, #0]
 8001d2c:	9301      	str	r3, [sp, #4]
 8001d2e:	460a      	mov	r2, r1
 8001d30:	4601      	mov	r1, r0
 8001d32:	4804      	ldr	r0, [pc, #16]	@ (8001d44 <IOE_Write+0x2c>)
 8001d34:	f007 fe5e 	bl	80099f4 <HAL_I2C_Mem_Write>
}
 8001d38:	b007      	add	sp, #28
 8001d3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d3e:	bf00      	nop
 8001d40:	20000010 	.word	0x20000010
 8001d44:	20002f8c 	.word	0x20002f8c

08001d48 <IOE_Read>:
{
 8001d48:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d50:	4b08      	ldr	r3, [pc, #32]	@ (8001d74 <IOE_Read+0x2c>)
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	9302      	str	r3, [sp, #8]
{
 8001d56:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d58:	2301      	movs	r3, #1
 8001d5a:	f10d 0117 	add.w	r1, sp, #23
 8001d5e:	9100      	str	r1, [sp, #0]
 8001d60:	9301      	str	r3, [sp, #4]
 8001d62:	4601      	mov	r1, r0
 8001d64:	4804      	ldr	r0, [pc, #16]	@ (8001d78 <IOE_Read+0x30>)
 8001d66:	f007 fed5 	bl	8009b14 <HAL_I2C_Mem_Read>
}
 8001d6a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d6e:	b007      	add	sp, #28
 8001d70:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d74:	20000010 	.word	0x20000010
 8001d78:	20002f8c 	.word	0x20002f8c

08001d7c <IOE_ReadMultiple>:
{
 8001d7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d7e:	4c08      	ldr	r4, [pc, #32]	@ (8001da0 <IOE_ReadMultiple+0x24>)
 8001d80:	6824      	ldr	r4, [r4, #0]
 8001d82:	9200      	str	r2, [sp, #0]
 8001d84:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001d88:	460a      	mov	r2, r1
 8001d8a:	2301      	movs	r3, #1
 8001d8c:	4601      	mov	r1, r0
 8001d8e:	4805      	ldr	r0, [pc, #20]	@ (8001da4 <IOE_ReadMultiple+0x28>)
 8001d90:	f007 fec0 	bl	8009b14 <HAL_I2C_Mem_Read>
}
 8001d94:	3800      	subs	r0, #0
 8001d96:	bf18      	it	ne
 8001d98:	2001      	movne	r0, #1
 8001d9a:	b004      	add	sp, #16
 8001d9c:	bd10      	pop	{r4, pc}
 8001d9e:	bf00      	nop
 8001da0:	20000010 	.word	0x20000010
 8001da4:	20002f8c 	.word	0x20002f8c

08001da8 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001da8:	f006 bee0 	b.w	8008b6c <HAL_Delay>

08001dac <LCD_IO_Init>:
{
 8001dac:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dae:	4c06      	ldr	r4, [pc, #24]	@ (8001dc8 <LCD_IO_Init+0x1c>)
 8001db0:	2200      	movs	r2, #0
 8001db2:	4620      	mov	r0, r4
 8001db4:	2104      	movs	r1, #4
 8001db6:	f007 fb67 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dba:	4620      	mov	r0, r4
 8001dbc:	2201      	movs	r2, #1
}
 8001dbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dc2:	2104      	movs	r1, #4
 8001dc4:	f007 bb60 	b.w	8009488 <HAL_GPIO_WritePin>
 8001dc8:	40020800 	.word	0x40020800

08001dcc <LCD_IO_WriteData>:
{
 8001dcc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dce:	4d0b      	ldr	r5, [pc, #44]	@ (8001dfc <LCD_IO_WriteData+0x30>)
{
 8001dd0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001dd2:	2201      	movs	r2, #1
 8001dd4:	480a      	ldr	r0, [pc, #40]	@ (8001e00 <LCD_IO_WriteData+0x34>)
 8001dd6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001dda:	f007 fb55 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dde:	2200      	movs	r2, #0
 8001de0:	2104      	movs	r1, #4
 8001de2:	4628      	mov	r0, r5
 8001de4:	f007 fb50 	bl	8009488 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001de8:	4620      	mov	r0, r4
 8001dea:	f7ff fcdd 	bl	80017a8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dee:	4628      	mov	r0, r5
 8001df0:	2201      	movs	r2, #1
}
 8001df2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001df6:	2104      	movs	r1, #4
 8001df8:	f007 bb46 	b.w	8009488 <HAL_GPIO_WritePin>
 8001dfc:	40020800 	.word	0x40020800
 8001e00:	40020c00 	.word	0x40020c00

08001e04 <LCD_IO_WriteReg>:
{
 8001e04:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e06:	4d0b      	ldr	r5, [pc, #44]	@ (8001e34 <LCD_IO_WriteReg+0x30>)
{
 8001e08:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	480a      	ldr	r0, [pc, #40]	@ (8001e38 <LCD_IO_WriteReg+0x34>)
 8001e0e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001e12:	f007 fb39 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e16:	2200      	movs	r2, #0
 8001e18:	2104      	movs	r1, #4
 8001e1a:	4628      	mov	r0, r5
 8001e1c:	f007 fb34 	bl	8009488 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001e20:	4620      	mov	r0, r4
 8001e22:	f7ff fcc1 	bl	80017a8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e26:	4628      	mov	r0, r5
 8001e28:	2201      	movs	r2, #1
}
 8001e2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e2e:	2104      	movs	r1, #4
 8001e30:	f007 bb2a 	b.w	8009488 <HAL_GPIO_WritePin>
 8001e34:	40020800 	.word	0x40020800
 8001e38:	40020c00 	.word	0x40020c00

08001e3c <LCD_IO_ReadData>:
{
 8001e3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e3e:	4e14      	ldr	r6, [pc, #80]	@ (8001e90 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e40:	4f14      	ldr	r7, [pc, #80]	@ (8001e94 <LCD_IO_ReadData+0x58>)
{
 8001e42:	4605      	mov	r5, r0
 8001e44:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e46:	4630      	mov	r0, r6
 8001e48:	2200      	movs	r2, #0
 8001e4a:	2104      	movs	r1, #4
 8001e4c:	f007 fb1c 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e50:	2200      	movs	r2, #0
 8001e52:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001e56:	4638      	mov	r0, r7
 8001e58:	f007 fb16 	bl	8009488 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001e5c:	4628      	mov	r0, r5
 8001e5e:	f7ff fca3 	bl	80017a8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001e62:	4b0d      	ldr	r3, [pc, #52]	@ (8001e98 <LCD_IO_ReadData+0x5c>)
 8001e64:	480d      	ldr	r0, [pc, #52]	@ (8001e9c <LCD_IO_ReadData+0x60>)
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	4622      	mov	r2, r4
 8001e6a:	a901      	add	r1, sp, #4
 8001e6c:	f009 f870 	bl	800af50 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e70:	4638      	mov	r0, r7
 8001e72:	2201      	movs	r2, #1
 8001e74:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001e78:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e7a:	f007 fb05 	bl	8009488 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e7e:	4630      	mov	r0, r6
 8001e80:	2201      	movs	r2, #1
 8001e82:	2104      	movs	r1, #4
 8001e84:	f007 fb00 	bl	8009488 <HAL_GPIO_WritePin>
}
 8001e88:	4620      	mov	r0, r4
 8001e8a:	b003      	add	sp, #12
 8001e8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e8e:	bf00      	nop
 8001e90:	40020800 	.word	0x40020800
 8001e94:	40020c00 	.word	0x40020c00
 8001e98:	2000000c 	.word	0x2000000c
 8001e9c:	20002e8c 	.word	0x20002e8c

08001ea0 <LCD_Delay>:
  HAL_Delay(Delay);
 8001ea0:	f006 be64 	b.w	8008b6c <HAL_Delay>

08001ea4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001ea4:	6802      	ldr	r2, [r0, #0]
 8001ea6:	4b03      	ldr	r3, [pc, #12]	@ (8001eb4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001ea8:	429a      	cmp	r2, r3
 8001eaa:	d101      	bne.n	8001eb0 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001eac:	f006 be4c 	b.w	8008b48 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001eb0:	4770      	bx	lr
 8001eb2:	bf00      	nop
 8001eb4:	40001000 	.word	0x40001000

08001eb8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001eb8:	4770      	bx	lr
	...

08001ebc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ebc:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (8001ef8 <HAL_MspInit+0x3c>)
 8001ec0:	2200      	movs	r2, #0
 8001ec2:	9200      	str	r2, [sp, #0]
 8001ec4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001ec6:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001eca:	6459      	str	r1, [r3, #68]	@ 0x44
 8001ecc:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001ece:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8001ed2:	9100      	str	r1, [sp, #0]
 8001ed4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ed6:	9201      	str	r2, [sp, #4]
 8001ed8:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001eda:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8001ede:	6419      	str	r1, [r3, #64]	@ 0x40
 8001ee0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ee2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ee6:	9301      	str	r3, [sp, #4]
 8001ee8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001eea:	210f      	movs	r1, #15
 8001eec:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ef0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ef2:	f007 b895 	b.w	8009020 <HAL_NVIC_SetPriority>
 8001ef6:	bf00      	nop
 8001ef8:	40023800 	.word	0x40023800

08001efc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001efc:	6802      	ldr	r2, [r0, #0]
 8001efe:	4b09      	ldr	r3, [pc, #36]	@ (8001f24 <HAL_CRC_MspInit+0x28>)
 8001f00:	429a      	cmp	r2, r3
{
 8001f02:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001f04:	d10b      	bne.n	8001f1e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001f06:	2300      	movs	r3, #0
 8001f08:	9301      	str	r3, [sp, #4]
 8001f0a:	4b07      	ldr	r3, [pc, #28]	@ (8001f28 <HAL_CRC_MspInit+0x2c>)
 8001f0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f0e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8001f12:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f16:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001f1a:	9301      	str	r3, [sp, #4]
 8001f1c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8001f1e:	b002      	add	sp, #8
 8001f20:	4770      	bx	lr
 8001f22:	bf00      	nop
 8001f24:	40023000 	.word	0x40023000
 8001f28:	40023800 	.word	0x40023800

08001f2c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001f2c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001f2e:	4b0f      	ldr	r3, [pc, #60]	@ (8001f6c <HAL_DMA2D_MspInit+0x40>)
 8001f30:	6802      	ldr	r2, [r0, #0]
 8001f32:	429a      	cmp	r2, r3
 8001f34:	d116      	bne.n	8001f64 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f36:	2200      	movs	r2, #0
 8001f38:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001f3c:	9201      	str	r2, [sp, #4]
 8001f3e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001f40:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8001f44:	6319      	str	r1, [r3, #48]	@ 0x30
 8001f46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f48:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001f4c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001f4e:	2105      	movs	r1, #5
 8001f50:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f52:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001f54:	f007 f864 	bl	8009020 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001f58:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8001f5a:	b003      	add	sp, #12
 8001f5c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001f60:	f007 b890 	b.w	8009084 <HAL_NVIC_EnableIRQ>
}
 8001f64:	b003      	add	sp, #12
 8001f66:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f6a:	bf00      	nop
 8001f6c:	4002b000 	.word	0x4002b000

08001f70 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001f70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001f74:	4604      	mov	r4, r0
 8001f76:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f78:	2214      	movs	r2, #20
 8001f7a:	2100      	movs	r1, #0
 8001f7c:	a803      	add	r0, sp, #12
 8001f7e:	f026 f89e 	bl	80280be <memset>
  if(hi2c->Instance==I2C3)
 8001f82:	6822      	ldr	r2, [r4, #0]
 8001f84:	4b24      	ldr	r3, [pc, #144]	@ (8002018 <HAL_I2C_MspInit+0xa8>)
 8001f86:	429a      	cmp	r2, r3
 8001f88:	d143      	bne.n	8002012 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f8a:	4c24      	ldr	r4, [pc, #144]	@ (800201c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f8c:	4824      	ldr	r0, [pc, #144]	@ (8002020 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f8e:	2500      	movs	r5, #0
 8001f90:	9500      	str	r5, [sp, #0]
 8001f92:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001f94:	f043 0304 	orr.w	r3, r3, #4
 8001f98:	6323      	str	r3, [r4, #48]	@ 0x30
 8001f9a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001f9c:	f003 0304 	and.w	r3, r3, #4
 8001fa0:	9300      	str	r3, [sp, #0]
 8001fa2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fa4:	9501      	str	r5, [sp, #4]
 8001fa6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001fa8:	f043 0301 	orr.w	r3, r3, #1
 8001fac:	6323      	str	r3, [r4, #48]	@ 0x30
 8001fae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001fb0:	f003 0301 	and.w	r3, r3, #1
 8001fb4:	9301      	str	r3, [sp, #4]
 8001fb6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fb8:	f04f 0912 	mov.w	r9, #18
 8001fbc:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc0:	f04f 0801 	mov.w	r8, #1
 8001fc4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fc6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fc8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fd2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fd4:	f007 f96e 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001fd8:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fdc:	4811      	ldr	r0, [pc, #68]	@ (8002024 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fde:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fe0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fe2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fe6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fea:	f007 f963 	bl	80092b4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001fee:	9502      	str	r5, [sp, #8]
 8001ff0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ff2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001ff6:	6423      	str	r3, [r4, #64]	@ 0x40
 8001ff8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001ffa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001ffe:	9302      	str	r3, [sp, #8]
 8002000:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002002:	6a23      	ldr	r3, [r4, #32]
 8002004:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002008:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800200a:	6a23      	ldr	r3, [r4, #32]
 800200c:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002010:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002012:	b009      	add	sp, #36	@ 0x24
 8002014:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002018:	40005c00 	.word	0x40005c00
 800201c:	40023800 	.word	0x40023800
 8002020:	40020800 	.word	0x40020800
 8002024:	40020000 	.word	0x40020000

08002028 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800202a:	b099      	sub	sp, #100	@ 0x64
 800202c:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800202e:	2214      	movs	r2, #20
 8002030:	2100      	movs	r1, #0
 8002032:	a807      	add	r0, sp, #28
 8002034:	f026 f843 	bl	80280be <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002038:	2230      	movs	r2, #48	@ 0x30
 800203a:	eb0d 0002 	add.w	r0, sp, r2
 800203e:	2100      	movs	r1, #0
 8002040:	f026 f83d 	bl	80280be <memset>
  if(hltdc->Instance==LTDC)
 8002044:	6822      	ldr	r2, [r4, #0]
 8002046:	4b5e      	ldr	r3, [pc, #376]	@ (80021c0 <HAL_LTDC_MspInit+0x198>)
 8002048:	429a      	cmp	r2, r3
 800204a:	f040 80b7 	bne.w	80021bc <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800204e:	2308      	movs	r3, #8
 8002050:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002052:	23c0      	movs	r3, #192	@ 0xc0
 8002054:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002056:	2304      	movs	r3, #4
 8002058:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800205a:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800205c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8002060:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002062:	f008 fb25 	bl	800a6b0 <HAL_RCCEx_PeriphCLKConfig>
 8002066:	b108      	cbz	r0, 800206c <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002068:	f7ff ff26 	bl	8001eb8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800206c:	4b55      	ldr	r3, [pc, #340]	@ (80021c4 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800206e:	4856      	ldr	r0, [pc, #344]	@ (80021c8 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002070:	2400      	movs	r4, #0
 8002072:	9400      	str	r4, [sp, #0]
 8002074:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002076:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 800207a:	645a      	str	r2, [r3, #68]	@ 0x44
 800207c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800207e:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002082:	9200      	str	r2, [sp, #0]
 8002084:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002086:	9401      	str	r4, [sp, #4]
 8002088:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800208a:	f042 0220 	orr.w	r2, r2, #32
 800208e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002090:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002092:	f002 0220 	and.w	r2, r2, #32
 8002096:	9201      	str	r2, [sp, #4]
 8002098:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800209a:	9402      	str	r4, [sp, #8]
 800209c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800209e:	f042 0201 	orr.w	r2, r2, #1
 80020a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80020a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020a6:	f002 0201 	and.w	r2, r2, #1
 80020aa:	9202      	str	r2, [sp, #8]
 80020ac:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020ae:	9403      	str	r4, [sp, #12]
 80020b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020b2:	f042 0202 	orr.w	r2, r2, #2
 80020b6:	631a      	str	r2, [r3, #48]	@ 0x30
 80020b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ba:	f002 0202 	and.w	r2, r2, #2
 80020be:	9203      	str	r2, [sp, #12]
 80020c0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80020c2:	9404      	str	r4, [sp, #16]
 80020c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020c6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80020ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80020cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ce:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80020d2:	9204      	str	r2, [sp, #16]
 80020d4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020d6:	9405      	str	r4, [sp, #20]
 80020d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020da:	f042 0204 	orr.w	r2, r2, #4
 80020de:	631a      	str	r2, [r3, #48]	@ 0x30
 80020e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020e2:	f002 0204 	and.w	r2, r2, #4
 80020e6:	9205      	str	r2, [sp, #20]
 80020e8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80020ea:	9406      	str	r4, [sp, #24]
 80020ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020ee:	f042 0208 	orr.w	r2, r2, #8
 80020f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80020f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020f6:	f003 0308 	and.w	r3, r3, #8
 80020fa:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020fc:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020fe:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002100:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002102:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002104:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002108:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800210a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800210e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002112:	f007 f8cf 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002116:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800211a:	482c      	ldr	r0, [pc, #176]	@ (80021cc <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800211c:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800211e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002120:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002124:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002126:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800212a:	f007 f8c3 	bl	80092b4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800212e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002130:	4827      	ldr	r0, [pc, #156]	@ (80021d0 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002132:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002134:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002136:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800213a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800213e:	f007 f8b9 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002142:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002146:	4822      	ldr	r0, [pc, #136]	@ (80021d0 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002148:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800214a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800214c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002150:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002154:	f007 f8ae 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002158:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800215c:	481d      	ldr	r0, [pc, #116]	@ (80021d4 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800215e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002160:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002162:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002166:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800216a:	f007 f8a3 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800216e:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002170:	4819      	ldr	r0, [pc, #100]	@ (80021d8 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002172:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002174:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002176:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800217a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800217e:	f007 f899 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002182:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002184:	4815      	ldr	r0, [pc, #84]	@ (80021dc <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002186:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002188:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800218a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800218e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002192:	f007 f88f 	bl	80092b4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002196:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800219a:	480e      	ldr	r0, [pc, #56]	@ (80021d4 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800219c:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800219e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021a0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80021a4:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021a8:	f007 f884 	bl	80092b4 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80021ac:	2058      	movs	r0, #88	@ 0x58
 80021ae:	4622      	mov	r2, r4
 80021b0:	2105      	movs	r1, #5
 80021b2:	f006 ff35 	bl	8009020 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80021b6:	2058      	movs	r0, #88	@ 0x58
 80021b8:	f006 ff64 	bl	8009084 <HAL_NVIC_EnableIRQ>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
 80021bc:	b019      	add	sp, #100	@ 0x64
 80021be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021c0:	40016800 	.word	0x40016800
 80021c4:	40023800 	.word	0x40023800
 80021c8:	40021400 	.word	0x40021400
 80021cc:	40020000 	.word	0x40020000
 80021d0:	40020400 	.word	0x40020400
 80021d4:	40021800 	.word	0x40021800
 80021d8:	40020800 	.word	0x40020800
 80021dc:	40020c00 	.word	0x40020c00

080021e0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80021e0:	b510      	push	{r4, lr}
 80021e2:	4604      	mov	r4, r0
 80021e4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021e6:	2214      	movs	r2, #20
 80021e8:	2100      	movs	r1, #0
 80021ea:	a803      	add	r0, sp, #12
 80021ec:	f025 ff67 	bl	80280be <memset>
  if(hspi->Instance==SPI5)
 80021f0:	6822      	ldr	r2, [r4, #0]
 80021f2:	4b14      	ldr	r3, [pc, #80]	@ (8002244 <HAL_SPI_MspInit+0x64>)
 80021f4:	429a      	cmp	r2, r3
 80021f6:	d123      	bne.n	8002240 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80021f8:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 80021fc:	2100      	movs	r1, #0
 80021fe:	9101      	str	r1, [sp, #4]
 8002200:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002202:	4811      	ldr	r0, [pc, #68]	@ (8002248 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002204:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002208:	645a      	str	r2, [r3, #68]	@ 0x44
 800220a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800220c:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002210:	9201      	str	r2, [sp, #4]
 8002212:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002214:	9102      	str	r1, [sp, #8]
 8002216:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002218:	f042 0220 	orr.w	r2, r2, #32
 800221c:	631a      	str	r2, [r3, #48]	@ 0x30
 800221e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002220:	f003 0320 	and.w	r3, r3, #32
 8002224:	9302      	str	r3, [sp, #8]
 8002226:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002228:	f44f 7260 	mov.w	r2, #896	@ 0x380
 800222c:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800222e:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002230:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002234:	2305      	movs	r3, #5
 8002236:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800223a:	a903      	add	r1, sp, #12
 800223c:	f007 f83a 	bl	80092b4 <HAL_GPIO_Init>

  /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002240:	b008      	add	sp, #32
 8002242:	bd10      	pop	{r4, pc}
 8002244:	40015000 	.word	0x40015000
 8002248:	40021400 	.word	0x40021400

0800224c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800224c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002250:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002252:	2300      	movs	r3, #0
 8002254:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002256:	4b2b      	ldr	r3, [pc, #172]	@ (8002304 <HAL_SDRAM_MspInit+0xb8>)
 8002258:	681c      	ldr	r4, [r3, #0]
 800225a:	2c00      	cmp	r4, #0
 800225c:	d14f      	bne.n	80022fe <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 800225e:	f04f 0801 	mov.w	r8, #1
 8002262:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002266:	4b28      	ldr	r3, [pc, #160]	@ (8002308 <HAL_SDRAM_MspInit+0xbc>)
 8002268:	9400      	str	r4, [sp, #0]
 800226a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800226c:	4827      	ldr	r0, [pc, #156]	@ (800230c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800226e:	ea42 0208 	orr.w	r2, r2, r8
 8002272:	639a      	str	r2, [r3, #56]	@ 0x38
 8002274:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002276:	ea03 0308 	and.w	r3, r3, r8
 800227a:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800227c:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800227e:	2603      	movs	r6, #3
 8002280:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002282:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002284:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002286:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 800228a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800228e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002292:	f007 f80f 	bl	80092b4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002296:	481e      	ldr	r0, [pc, #120]	@ (8002310 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002298:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800229a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800229c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022a0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a4:	f007 f806 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022a8:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ac:	4819      	ldr	r0, [pc, #100]	@ (8002314 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ae:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022b0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022b2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022b6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ba:	f006 fffb 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022be:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022c2:	4815      	ldr	r0, [pc, #84]	@ (8002318 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022c4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022c6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022c8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022cc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022d0:	f006 fff0 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022d4:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022d8:	4810      	ldr	r0, [pc, #64]	@ (800231c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022da:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022dc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022de:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022e6:	f006 ffe5 	bl	80092b4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022ea:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ec:	480c      	ldr	r0, [pc, #48]	@ (8002320 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022ee:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022f0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022f2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022f6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022fa:	f006 ffdb 	bl	80092b4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80022fe:	b006      	add	sp, #24
 8002300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002304:	20003028 	.word	0x20003028
 8002308:	40023800 	.word	0x40023800
 800230c:	40021400 	.word	0x40021400
 8002310:	40020800 	.word	0x40020800
 8002314:	40021800 	.word	0x40021800
 8002318:	40021000 	.word	0x40021000
 800231c:	40020c00 	.word	0x40020c00
 8002320:	40020400 	.word	0x40020400

08002324 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002324:	b570      	push	{r4, r5, r6, lr}
 8002326:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002328:	2300      	movs	r3, #0
 800232a:	9302      	str	r3, [sp, #8]
 800232c:	4b20      	ldr	r3, [pc, #128]	@ (80023b0 <HAL_InitTick+0x8c>)
 800232e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002330:	f042 0210 	orr.w	r2, r2, #16
 8002334:	641a      	str	r2, [r3, #64]	@ 0x40
 8002336:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002338:	f003 0310 	and.w	r3, r3, #16
 800233c:	9302      	str	r3, [sp, #8]
{
 800233e:	4605      	mov	r5, r0

/* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002340:	a901      	add	r1, sp, #4
 8002342:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002344:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002346:	f008 f995 	bl	800a674 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800234a:	9b06      	ldr	r3, [sp, #24]
 800234c:	bb4b      	cbnz	r3, 80023a2 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800234e:	f008 f971 	bl	800a634 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002352:	4e18      	ldr	r6, [pc, #96]	@ (80023b4 <HAL_InitTick+0x90>)
 8002354:	4b18      	ldr	r3, [pc, #96]	@ (80023b8 <HAL_InitTick+0x94>)
 8002356:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002358:	f240 33e7 	movw	r3, #999	@ 0x3e7
 800235c:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800235e:	4b17      	ldr	r3, [pc, #92]	@ (80023bc <HAL_InitTick+0x98>)
 8002360:	fbb0 f3f3 	udiv	r3, r0, r3
 8002364:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002366:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002368:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 800236a:	2300      	movs	r3, #0
 800236c:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800236e:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002370:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002372:	f008 ffbd 	bl	800b2f0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002376:	4604      	mov	r4, r0
 8002378:	b980      	cbnz	r0, 800239c <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 800237a:	4630      	mov	r0, r6
 800237c:	f008 fe8e 	bl	800b09c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002380:	4604      	mov	r4, r0
 8002382:	b958      	cbnz	r0, 800239c <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002384:	2036      	movs	r0, #54	@ 0x36
 8002386:	f006 fe7d 	bl	8009084 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800238a:	2d0f      	cmp	r5, #15
 800238c:	d80d      	bhi.n	80023aa <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800238e:	4622      	mov	r2, r4
 8002390:	4629      	mov	r1, r5
 8002392:	2036      	movs	r0, #54	@ 0x36
 8002394:	f006 fe44 	bl	8009020 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002398:	4b09      	ldr	r3, [pc, #36]	@ (80023c0 <HAL_InitTick+0x9c>)
 800239a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 800239c:	4620      	mov	r0, r4
 800239e:	b008      	add	sp, #32
 80023a0:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80023a2:	f008 f947 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 80023a6:	0040      	lsls	r0, r0, #1
 80023a8:	e7d3      	b.n	8002352 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 80023aa:	2401      	movs	r4, #1
 80023ac:	e7f6      	b.n	800239c <HAL_InitTick+0x78>
 80023ae:	bf00      	nop
 80023b0:	40023800 	.word	0x40023800
 80023b4:	2000302c 	.word	0x2000302c
 80023b8:	40001000 	.word	0x40001000
 80023bc:	000f4240 	.word	0x000f4240
 80023c0:	2000007c 	.word	0x2000007c

080023c4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80023c4:	4770      	bx	lr

080023c6 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023c6:	e7fe      	b.n	80023c6 <HardFault_Handler>

080023c8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80023c8:	e7fe      	b.n	80023c8 <MemManage_Handler>

080023ca <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80023ca:	e7fe      	b.n	80023ca <BusFault_Handler>

080023cc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80023cc:	e7fe      	b.n	80023cc <UsageFault_Handler>

080023ce <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80023ce:	4770      	bx	lr

080023d0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80023d0:	4801      	ldr	r0, [pc, #4]	@ (80023d8 <TIM6_DAC_IRQHandler+0x8>)
 80023d2:	f008 bea1 	b.w	800b118 <HAL_TIM_IRQHandler>
 80023d6:	bf00      	nop
 80023d8:	2000302c 	.word	0x2000302c

080023dc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023dc:	4801      	ldr	r0, [pc, #4]	@ (80023e4 <LTDC_IRQHandler+0x8>)
 80023de:	f007 bdd1 	b.w	8009f84 <HAL_LTDC_IRQHandler>
 80023e2:	bf00      	nop
 80023e4:	20002ee4 	.word	0x20002ee4

080023e8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80023e8:	4801      	ldr	r0, [pc, #4]	@ (80023f0 <DMA2D_IRQHandler+0x8>)
 80023ea:	f006 be95 	b.w	8009118 <HAL_DMA2D_IRQHandler>
 80023ee:	bf00      	nop
 80023f0:	20002fe0 	.word	0x20002fe0

080023f4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80023f4:	2001      	movs	r0, #1
 80023f6:	4770      	bx	lr

080023f8 <_kill>:

int _kill(int pid, int sig)
{
 80023f8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80023fa:	f025 ff03 	bl	8028204 <__errno>
 80023fe:	2316      	movs	r3, #22
 8002400:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002402:	f04f 30ff 	mov.w	r0, #4294967295
 8002406:	bd08      	pop	{r3, pc}

08002408 <_exit>:

void _exit (int status)
{
 8002408:	b508      	push	{r3, lr}
	errno = EINVAL;
 800240a:	f025 fefb 	bl	8028204 <__errno>
 800240e:	2316      	movs	r3, #22
 8002410:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002412:	e7fe      	b.n	8002412 <_exit+0xa>

08002414 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002414:	b570      	push	{r4, r5, r6, lr}
 8002416:	460d      	mov	r5, r1
 8002418:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800241a:	460e      	mov	r6, r1
 800241c:	1b73      	subs	r3, r6, r5
 800241e:	429c      	cmp	r4, r3
 8002420:	dc01      	bgt.n	8002426 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002422:	4620      	mov	r0, r4
 8002424:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002426:	f3af 8000 	nop.w
 800242a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800242e:	e7f5      	b.n	800241c <_read+0x8>

08002430 <_close>:
//}

int _close(int file)
{
	return -1;
}
 8002430:	f04f 30ff 	mov.w	r0, #4294967295
 8002434:	4770      	bx	lr

08002436 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002436:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800243a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800243c:	2000      	movs	r0, #0
 800243e:	4770      	bx	lr

08002440 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002440:	2001      	movs	r0, #1
 8002442:	4770      	bx	lr

08002444 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002444:	2000      	movs	r0, #0
 8002446:	4770      	bx	lr

08002448 <_write>:
{
	errno = ENOMEM;
	return -1;
}
__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002448:	b510      	push	{r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 800244a:	f04f 33ff 	mov.w	r3, #4294967295
{
 800244e:	4614      	mov	r4, r2
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 8002450:	4802      	ldr	r0, [pc, #8]	@ (800245c <_write+0x14>)
 8002452:	b292      	uxth	r2, r2
 8002454:	f009 f8fd 	bl	800b652 <HAL_UART_Transmit>
    return len;
}
 8002458:	4620      	mov	r0, r4
 800245a:	bd10      	pop	{r4, pc}
 800245c:	20002dd0 	.word	0x20002dd0

08002460 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002460:	4a0a      	ldr	r2, [pc, #40]	@ (800248c <_sbrk+0x2c>)
 8002462:	6811      	ldr	r1, [r2, #0]
{
 8002464:	b508      	push	{r3, lr}
 8002466:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002468:	b909      	cbnz	r1, 800246e <_sbrk+0xe>
		heap_end = &end;
 800246a:	4909      	ldr	r1, [pc, #36]	@ (8002490 <_sbrk+0x30>)
 800246c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800246e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002470:	4669      	mov	r1, sp
 8002472:	4403      	add	r3, r0
 8002474:	428b      	cmp	r3, r1
 8002476:	d906      	bls.n	8002486 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002478:	f025 fec4 	bl	8028204 <__errno>
 800247c:	230c      	movs	r3, #12
 800247e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002480:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002484:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002486:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002488:	e7fc      	b.n	8002484 <_sbrk+0x24>
 800248a:	bf00      	nop
 800248c:	20003074 	.word	0x20003074
 8002490:	20014ca0 	.word	0x20014ca0

08002494 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_08 = 5; // verdana_20_4bpp
    static const touchgfx::FontId TYPOGRAPHY_09 = 5; // verdana_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002494:	4770      	bx	lr

08002496 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002496:	b508      	push	{r3, lr}
    switch (typography)
 8002498:	290c      	cmp	r1, #12
 800249a:	d824      	bhi.n	80024e6 <_ZN23ApplicationFontProvider7getFontEt+0x50>
 800249c:	e8df f001 	tbb	[pc, r1]
 80024a0:	130f0b07 	.word	0x130f0b07
 80024a4:	1f1f1f17 	.word	0x1f1f1f17
 80024a8:	1f1f1b1f 	.word	0x1f1f1b1f
 80024ac:	1f          	.byte	0x1f
 80024ad:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // verdana_17_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80024ae:	f004 f93b 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024b2:	6800      	ldr	r0, [r0, #0]
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
    default:
        return 0;
    }
}
 80024b4:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80024b6:	f004 f937 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024ba:	6840      	ldr	r0, [r0, #4]
 80024bc:	e7fa      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80024be:	f004 f933 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024c2:	6880      	ldr	r0, [r0, #8]
 80024c4:	e7f6      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80024c6:	f004 f92f 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024ca:	68c0      	ldr	r0, [r0, #12]
 80024cc:	e7f2      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80024ce:	f004 f92b 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024d2:	6900      	ldr	r0, [r0, #16]
 80024d4:	e7ee      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 80024d6:	f004 f927 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024da:	6980      	ldr	r0, [r0, #24]
 80024dc:	e7ea      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 80024de:	f004 f923 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80024e2:	6940      	ldr	r0, [r0, #20]
 80024e4:	e7e6      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
    switch (typography)
 80024e6:	2000      	movs	r0, #0
 80024e8:	e7e4      	b.n	80024b4 <_ZN23ApplicationFontProvider7getFontEt+0x1e>

080024ea <_ZN23ApplicationFontProviderD0Ev>:
 80024ea:	b510      	push	{r4, lr}
 80024ec:	2104      	movs	r1, #4
 80024ee:	4604      	mov	r4, r0
 80024f0:	f024 fc90 	bl	8026e14 <_ZdlPvj>
 80024f4:	4620      	mov	r0, r4
 80024f6:	bd10      	pop	{r4, pc}

080024f8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80024f8:	4800      	ldr	r0, [pc, #0]	@ (80024fc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80024fa:	4770      	bx	lr
 80024fc:	0802a39c 	.word	0x0802a39c

08002500 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002500:	2005      	movs	r0, #5
 8002502:	4770      	bx	lr

08002504 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002504:	b513      	push	{r0, r1, r4, lr}
 8002506:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002508:	b151      	cbz	r1, 8002520 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800250a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800250c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800250e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002512:	aa01      	add	r2, sp, #4
 8002514:	689c      	ldr	r4, [r3, #8]
 8002516:	f10d 0303 	add.w	r3, sp, #3
 800251a:	47a0      	blx	r4
        return glyph;
    }
 800251c:	b002      	add	sp, #8
 800251e:	bd10      	pop	{r4, pc}
            return 0;
 8002520:	4608      	mov	r0, r1
 8002522:	e7fb      	b.n	800251c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002524 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002524:	89c0      	ldrh	r0, [r0, #14]
 8002526:	4770      	bx	lr

08002528 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002528:	8a00      	ldrh	r0, [r0, #16]
 800252a:	4770      	bx	lr

0800252c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800252c:	88c0      	ldrh	r0, [r0, #6]
 800252e:	4770      	bx	lr

08002530 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002530:	8880      	ldrh	r0, [r0, #4]
 8002532:	4770      	bx	lr

08002534 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002534:	7a80      	ldrb	r0, [r0, #10]
    }
 8002536:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 800253a:	4770      	bx	lr

0800253c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800253c:	7a80      	ldrb	r0, [r0, #10]
    }
 800253e:	09c0      	lsrs	r0, r0, #7
 8002540:	4770      	bx	lr

08002542 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002542:	2000      	movs	r0, #0
 8002544:	4770      	bx	lr
	...

08002548 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002548:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002550 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 800254c:	4770      	bx	lr
 800254e:	bf00      	nop
 8002550:	00000000 	.word	0x00000000

08002554 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002554:	4770      	bx	lr

08002556 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002556:	4770      	bx	lr

08002558 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002558:	4770      	bx	lr

0800255a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800255a:	4770      	bx	lr

0800255c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800255c:	4770      	bx	lr

0800255e <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800255e:	4770      	bx	lr

08002560 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002560:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002562:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002564:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002566:	466d      	mov	r5, sp
        rect.width = width;
 8002568:	8101      	strh	r1, [r0, #8]
 800256a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800256e:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8002570:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002572:	4628      	mov	r0, r5
 8002574:	4798      	blx	r3
 8002576:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800257a:	343c      	adds	r4, #60	@ 0x3c
 800257c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002580:	b005      	add	sp, #20
 8002582:	bd30      	pop	{r4, r5, pc}

08002584 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002584:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002586:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8002588:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800258a:	466d      	mov	r5, sp
        rect.height = height;
 800258c:	8141      	strh	r1, [r0, #10]
 800258e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002592:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 8002594:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002596:	4628      	mov	r0, r5
 8002598:	4798      	blx	r3
 800259a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800259e:	343c      	adds	r4, #60	@ 0x3c
 80025a0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80025a4:	b005      	add	sp, #20
 80025a6:	bd30      	pop	{r4, r5, pc}

080025a8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80025a8:	2200      	movs	r2, #0
 80025aa:	8002      	strh	r2, [r0, #0]
 80025ac:	8042      	strh	r2, [r0, #2]
 80025ae:	8082      	strh	r2, [r0, #4]
 80025b0:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80025b2:	4770      	bx	lr

080025b4 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80025b4:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80025b8:	4770      	bx	lr

080025ba <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025ba:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80025bc:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025be:	4604      	mov	r4, r0
        setX(x);
 80025c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80025c2:	4615      	mov	r5, r2
        setX(x);
 80025c4:	4798      	blx	r3
        setBaselineY(baselineY);
 80025c6:	6823      	ldr	r3, [r4, #0]
 80025c8:	4629      	mov	r1, r5
 80025ca:	4620      	mov	r0, r4
 80025cc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 80025ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80025d2:	4718      	bx	r3

080025d4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80025d4:	2000      	movs	r0, #0
 80025d6:	4770      	bx	lr

080025d8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80025d8:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80025da:	4770      	bx	lr

080025dc <_ZN8touchgfx9DraggableINS_3BoxEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 80025dc:	4770      	bx	lr

080025de <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80025de:	4770      	bx	lr

080025e0 <_ZN23EasyReadyScreenViewBase11setupScreenEv>:
}

void EasyReadyScreenViewBase::setupScreen()
{

}
 80025e0:	4770      	bx	lr

080025e2 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80025e2:	b510      	push	{r4, lr}
    }
 80025e4:	2108      	movs	r1, #8
    virtual ~TypedText()
 80025e6:	4604      	mov	r4, r0
    }
 80025e8:	f024 fc14 	bl	8026e14 <_ZdlPvj>
 80025ec:	4620      	mov	r0, r4
 80025ee:	bd10      	pop	{r4, pc}

080025f0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80025f0:	b510      	push	{r4, lr}
 80025f2:	214c      	movs	r1, #76	@ 0x4c
 80025f4:	4604      	mov	r4, r0
 80025f6:	f024 fc0d 	bl	8026e14 <_ZdlPvj>
 80025fa:	4620      	mov	r0, r4
 80025fc:	bd10      	pop	{r4, pc}

080025fe <_ZN8touchgfx9DraggableINS_3BoxEED0Ev>:
 80025fe:	b510      	push	{r4, lr}
 8002600:	212c      	movs	r1, #44	@ 0x2c
 8002602:	4604      	mov	r4, r0
 8002604:	f024 fc06 	bl	8026e14 <_ZdlPvj>
 8002608:	4620      	mov	r0, r4
 800260a:	bd10      	pop	{r4, pc}

0800260c <_ZN8touchgfx9DraggableINS_3BoxEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 800260c:	890b      	ldrh	r3, [r1, #8]
 800260e:	898a      	ldrh	r2, [r1, #12]
 8002610:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
 8002612:	894b      	ldrh	r3, [r1, #10]
 8002614:	88c9      	ldrh	r1, [r1, #6]
 8002616:	1a59      	subs	r1, r3, r1
     * @param  event The drag event.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        T::handleDragEvent(event);
        T::moveRelative(event.getDeltaX(), event.getDeltaY());
 8002618:	b212      	sxth	r2, r2
 800261a:	b209      	sxth	r1, r1
 800261c:	f013 b842 	b.w	80156a4 <_ZN8touchgfx8Drawable12moveRelativeEss>

08002620 <_ZN23EasyReadyScreenViewBaseD1Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8002620:	b510      	push	{r4, lr}
 8002622:	4b03      	ldr	r3, [pc, #12]	@ (8002630 <_ZN23EasyReadyScreenViewBaseD1Ev+0x10>)
 8002624:	6003      	str	r3, [r0, #0]
 8002626:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002628:	f010 fa22 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800262c:	4620      	mov	r0, r4
 800262e:	bd10      	pop	{r4, pc}
 8002630:	0802a510 	.word	0x0802a510

08002634 <_ZN23EasyReadyScreenViewBaseD0Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8002634:	b510      	push	{r4, lr}
 8002636:	4b06      	ldr	r3, [pc, #24]	@ (8002650 <_ZN23EasyReadyScreenViewBaseD0Ev+0x1c>)
 8002638:	6003      	str	r3, [r0, #0]
 800263a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800263c:	f010 fa18 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002640:	4620      	mov	r0, r4
 8002642:	f241 51b8 	movw	r1, #5560	@ 0x15b8
 8002646:	f024 fbe5 	bl	8026e14 <_ZdlPvj>
 800264a:	4620      	mov	r0, r4
 800264c:	bd10      	pop	{r4, pc}
 800264e:	bf00      	nop
 8002650:	0802a510 	.word	0x0802a510

08002654 <_ZNK8touchgfx3Box17invalidateContentEv>:
        return alpha;
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8002654:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 8002656:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
 800265a:	b10b      	cbz	r3, 8002660 <_ZNK8touchgfx3Box17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 800265c:	f7fe ff04 	bl	8001468 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8002660:	bd08      	pop	{r3, pc}

08002662 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002662:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002664:	f7fe ff00 	bl	8001468 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002668:	bd08      	pop	{r3, pc}
	...

0800266c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800266c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800266e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002670:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002672:	4b12      	ldr	r3, [pc, #72]	@ (80026bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002674:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002676:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002678:	b28d      	uxth	r5, r1
 800267a:	b92b      	cbnz	r3, 8002688 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800267c:	4b10      	ldr	r3, [pc, #64]	@ (80026c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800267e:	4a11      	ldr	r2, [pc, #68]	@ (80026c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002680:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002682:	4811      	ldr	r0, [pc, #68]	@ (80026c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002684:	f025 fb02 	bl	8027c8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002688:	4910      	ldr	r1, [pc, #64]	@ (80026cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800268a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800268c:	8809      	ldrh	r1, [r1, #0]
 800268e:	4291      	cmp	r1, r2
 8002690:	d803      	bhi.n	800269a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002692:	4b0f      	ldr	r3, [pc, #60]	@ (80026d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002694:	4a0b      	ldr	r2, [pc, #44]	@ (80026c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002696:	216d      	movs	r1, #109	@ 0x6d
 8002698:	e7f3      	b.n	8002682 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800269a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800269e:	4b0d      	ldr	r3, [pc, #52]	@ (80026d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026aa:	4798      	blx	r3
 80026ac:	1a29      	subs	r1, r5, r0
 80026ae:	4633      	mov	r3, r6
 80026b0:	4620      	mov	r0, r4
 80026b2:	b209      	sxth	r1, r1
    }
 80026b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80026b8:	4718      	bx	r3
 80026ba:	bf00      	nop
 80026bc:	20013fb8 	.word	0x20013fb8
 80026c0:	08029232 	.word	0x08029232
 80026c4:	08029274 	.word	0x08029274
 80026c8:	080292af 	.word	0x080292af
 80026cc:	20013fbc 	.word	0x20013fbc
 80026d0:	080292f6 	.word	0x080292f6
 80026d4:	20013fc0 	.word	0x20013fc0

080026d8 <_ZN23EasyReadyScreenViewBase15handleTickEventEv>:

void EasyReadyScreenViewBase::handleTickEvent()
{
 80026d8:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 80026da:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 80026de:	f8d4 35b4 	ldr.w	r3, [r4, #1460]	@ 0x5b4
 80026e2:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80026e4:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 80026e6:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80026ea:	d106      	bne.n	80026fa <_ZN23EasyReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80026ec:	f011 feba 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to EasyScreen
        //Go to EasyScreen with no screen transition
        application().gotoEasyScreenScreenNoTransition();
 80026f0:	f000 fffa 	bl	80036e8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 80026f4:	2300      	movs	r3, #0
 80026f6:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    }
}
 80026fa:	bd10      	pop	{r4, pc}

080026fc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80026fc:	2200      	movs	r2, #0
 80026fe:	f04f 31ff 	mov.w	r1, #4294967295
 8002702:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002706:	6082      	str	r2, [r0, #8]
    }
 8002708:	4770      	bx	lr

0800270a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800270a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800270c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800270e:	4604      	mov	r4, r0
        setX(x);
 8002710:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 8002712:	4615      	mov	r5, r2
        setX(x);
 8002714:	4798      	blx	r3
        setY(y);
 8002716:	6823      	ldr	r3, [r4, #0]
 8002718:	4629      	mov	r1, r5
 800271a:	4620      	mov	r0, r4
 800271c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 800271e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002722:	4718      	bx	r3

08002724 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002724:	b570      	push	{r4, r5, r6, lr}
 8002726:	4604      	mov	r4, r0
 8002728:	461d      	mov	r5, r3
 800272a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800272e:	f7ff ffec 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002732:	6823      	ldr	r3, [r4, #0]
 8002734:	4629      	mov	r1, r5
 8002736:	4620      	mov	r0, r4
 8002738:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800273a:	4798      	blx	r3
        setHeight(height);
 800273c:	6823      	ldr	r3, [r4, #0]
 800273e:	4631      	mov	r1, r6
 8002740:	4620      	mov	r0, r4
 8002742:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002744:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002748:	4718      	bx	r3
	...

0800274c <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 800274c:	4a09      	ldr	r2, [pc, #36]	@ (8002774 <_ZN8touchgfx3BoxC1Ev+0x28>)
 800274e:	6002      	str	r2, [r0, #0]
          touchable(false),
 8002750:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002754:	2200      	movs	r2, #0
 8002756:	8481      	strh	r1, [r0, #36]	@ 0x24
 8002758:	21ff      	movs	r1, #255	@ 0xff
 800275a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800275e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002762:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002766:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800276a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 800276e:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8002770:	4770      	bx	lr
 8002772:	bf00      	nop
 8002774:	0802b0dc 	.word	0x0802b0dc

08002778 <_ZN8touchgfx8TextAreaC1Ev>:
          touchable(false),
 8002778:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800277c:	8481      	strh	r1, [r0, #36]	@ 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800277e:	490d      	ldr	r1, [pc, #52]	@ (80027b4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002780:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 8002782:	490d      	ldr	r1, [pc, #52]	@ (80027b8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002784:	6281      	str	r1, [r0, #40]	@ 0x28
 8002786:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800278a:	8581      	strh	r1, [r0, #44]	@ 0x2c
 800278c:	f44f 017f 	mov.w	r1, #16711680	@ 0xff0000
        : x(0), y(0), width(0), height(0)
 8002790:	2200      	movs	r2, #0
 8002792:	6341      	str	r1, [r0, #52]	@ 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002794:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 8002798:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800279c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80027a0:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80027a4:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 80027a8:	e9c0 1210 	strd	r1, r2, [r0, #64]	@ 0x40
        : color(col)
 80027ac:	6302      	str	r2, [r0, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027ae:	8702      	strh	r2, [r0, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027b0:	63c2      	str	r2, [r0, #60]	@ 0x3c
    }
 80027b2:	4770      	bx	lr
 80027b4:	0802b04c 	.word	0x0802b04c
 80027b8:	0802a408 	.word	0x0802a408

080027bc <_ZN23EasyReadyScreenViewBaseC1Ev>:
EasyReadyScreenViewBase::EasyReadyScreenViewBase() :
 80027bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027c0:	4604      	mov	r4, r0
 80027c2:	b091      	sub	sp, #68	@ 0x44
    frameCountInteraction1Interval(0)
 80027c4:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80027c6:	f04f 0b00 	mov.w	fp, #0
 80027ca:	f013 fd41 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 80027ce:	4bd4      	ldr	r3, [pc, #848]	@ (8002b20 <_ZN23EasyReadyScreenViewBaseC1Ev+0x364>)
 80027d0:	f8c4 b03c 	str.w	fp, [r4, #60]	@ 0x3c
 80027d4:	f847 3b40 	str.w	r3, [r7], #64
 80027d8:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 80027dc:	4638      	mov	r0, r7
 80027de:	f7ff ffb5 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027e2:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80027e6:	4630      	mov	r0, r6
 80027e8:	f7ff ffb0 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027ec:	4640      	mov	r0, r8
 80027ee:	f7ff ffad 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027f2:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80027f6:	4618      	mov	r0, r3
 80027f8:	9305      	str	r3, [sp, #20]
 80027fa:	f7ff ffa7 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80027fe:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8002802:	4618      	mov	r0, r3
 8002804:	9306      	str	r3, [sp, #24]
 8002806:	f00d fe5d 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 800280a:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 800280e:	4618      	mov	r0, r3
 8002810:	9309      	str	r3, [sp, #36]	@ 0x24
 8002812:	f7fe fe57 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002816:	4bc3      	ldr	r3, [pc, #780]	@ (8002b24 <_ZN23EasyReadyScreenViewBaseC1Ev+0x368>)
 8002818:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 800281c:	3324      	adds	r3, #36	@ 0x24
 800281e:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        : T()
 8002822:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8002826:	4618      	mov	r0, r3
 8002828:	f8c4 b144 	str.w	fp, [r4, #324]	@ 0x144
 800282c:	4dbe      	ldr	r5, [pc, #760]	@ (8002b28 <_ZN23EasyReadyScreenViewBaseC1Ev+0x36c>)
 800282e:	9308      	str	r3, [sp, #32]
        touchable = touch;
 8002830:	f04f 0901 	mov.w	r9, #1
 8002834:	f7ff ff8a 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002838:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 800283c:	f504 7ad2 	add.w	sl, r4, #420	@ 0x1a4
 8002840:	4618      	mov	r0, r3
 8002842:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8002846:	f884 9170 	strb.w	r9, [r4, #368]	@ 0x170
 800284a:	9307      	str	r3, [sp, #28]
 800284c:	f7ff ff7e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002850:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8002854:	f884 919c 	strb.w	r9, [r4, #412]	@ 0x19c
 8002858:	4650      	mov	r0, sl
 800285a:	f7ff ff8d 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 800285e:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 8002862:	4618      	mov	r0, r3
 8002864:	9302      	str	r3, [sp, #8]
 8002866:	f7ff ff87 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800286a:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 800286e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002870:	4dae      	ldr	r5, [pc, #696]	@ (8002b2c <_ZN23EasyReadyScreenViewBaseC1Ev+0x370>)
        : TextArea()
 8002872:	9303      	str	r3, [sp, #12]
 8002874:	f7ff ff80 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002878:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 800287c:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
        : TextArea()
 8002880:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002882:	f8c4 b27c 	str.w	fp, [r4, #636]	@ 0x27c
        : TextArea()
 8002886:	9304      	str	r3, [sp, #16]
 8002888:	f7ff ff76 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 800288c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 8002890:	f8c4 5280 	str.w	r5, [r4, #640]	@ 0x280
 8002894:	f8c4 b2c8 	str.w	fp, [r4, #712]	@ 0x2c8
    __background.setPosition(0, 0, 320, 240);
 8002898:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 800289a:	f8c3 b5b4 	str.w	fp, [r3, #1460]	@ 0x5b4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800289e:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80028a2:	f504 703d 	add.w	r0, r4, #756	@ 0x2f4
 80028a6:	f010 f8d9 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80028aa:	465a      	mov	r2, fp
 80028ac:	4638      	mov	r0, r7
 80028ae:	9500      	str	r5, [sp, #0]
 80028b0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80028b4:	4659      	mov	r1, fp
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80028b6:	f104 0904 	add.w	r9, r4, #4
 80028ba:	f7ff ff33 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80028be:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80028c2:	4639      	mov	r1, r7
 80028c4:	66a3      	str	r3, [r4, #104]	@ 0x68
 80028c6:	4648      	mov	r0, r9
 80028c8:	f00b f8ba 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028cc:	f04f 37ff 	mov.w	r7, #4294967295
    box3.setPosition(0, 0, 320, 240);
 80028d0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80028d4:	465a      	mov	r2, fp
 80028d6:	4630      	mov	r0, r6
 80028d8:	9500      	str	r5, [sp, #0]
 80028da:	4659      	mov	r1, fp
 80028dc:	f7ff ff22 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80028e0:	4631      	mov	r1, r6
 80028e2:	f8c4 7094 	str.w	r7, [r4, #148]	@ 0x94
 80028e6:	4648      	mov	r0, r9
 80028e8:	f00b f8aa 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 80028ec:	2202      	movs	r2, #2
 80028ee:	23ec      	movs	r3, #236	@ 0xec
 80028f0:	4611      	mov	r1, r2
 80028f2:	4640      	mov	r0, r8
 80028f4:	9300      	str	r3, [sp, #0]
 80028f6:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 80028fa:	f7ff ff13 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80028fe:	4b8c      	ldr	r3, [pc, #560]	@ (8002b30 <_ZN23EasyReadyScreenViewBaseC1Ev+0x374>)
 8002900:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002904:	4641      	mov	r1, r8
 8002906:	4648      	mov	r0, r9
 8002908:	f00b f89a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 800290c:	465a      	mov	r2, fp
 800290e:	9805      	ldr	r0, [sp, #20]
 8002910:	9500      	str	r5, [sp, #0]
 8002912:	2303      	movs	r3, #3
 8002914:	21a0      	movs	r1, #160	@ 0xa0
 8002916:	f7ff ff05 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 800291a:	23dc      	movs	r3, #220	@ 0xdc
 800291c:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 800291e:	f8c4 70ec 	str.w	r7, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8002922:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8002926:	4648      	mov	r0, r9
 8002928:	f00b f88a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 800292c:	230e      	movs	r3, #14
 800292e:	2272      	movs	r2, #114	@ 0x72
 8002930:	9806      	ldr	r0, [sp, #24]
 8002932:	9300      	str	r3, [sp, #0]
 8002934:	219b      	movs	r1, #155	@ 0x9b
 8002936:	f7ff fef5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800293a:	23c0      	movs	r3, #192	@ 0xc0
 800293c:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002940:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8002944:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 8002948:	4b7a      	ldr	r3, [pc, #488]	@ (8002b34 <_ZN23EasyReadyScreenViewBaseC1Ev+0x378>)
 800294a:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800294e:	f649 0361 	movw	r3, #39009	@ 0x9861
 8002952:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 8002956:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002958:	9906      	ldr	r1, [sp, #24]
 800295a:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 800295e:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8002962:	4648      	mov	r0, r9
    paddle1.setPosition(8, 100, 5, 40);
 8002964:	2528      	movs	r5, #40	@ 0x28
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8002966:	f8c4 b130 	str.w	fp, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800296a:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
 800296e:	f00b f867 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002972:	2305      	movs	r3, #5
 8002974:	2264      	movs	r2, #100	@ 0x64
 8002976:	9808      	ldr	r0, [sp, #32]
 8002978:	9500      	str	r5, [sp, #0]
 800297a:	2108      	movs	r1, #8
 800297c:	f7ff fed2 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002980:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8002982:	f8c4 7174 	str.w	r7, [r4, #372]	@ 0x174
 8002986:	4648      	mov	r0, r9
 8002988:	f00b f85a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 100, 5, 40);
 800298c:	2305      	movs	r3, #5
 800298e:	2264      	movs	r2, #100	@ 0x64
 8002990:	9807      	ldr	r0, [sp, #28]
 8002992:	9500      	str	r5, [sp, #0]
 8002994:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8002998:	f7ff fec4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
    player1.setPosition(116, 95, 19, 52);
 800299c:	f04f 0834 	mov.w	r8, #52	@ 0x34
 80029a0:	9907      	ldr	r1, [sp, #28]
 80029a2:	f8c4 71a0 	str.w	r7, [r4, #416]	@ 0x1a0
 80029a6:	4648      	mov	r0, r9
        boundingArea = calculateBoundingArea();
 80029a8:	446d      	add	r5, sp
 80029aa:	f00b f849 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029ae:	2313      	movs	r3, #19
 80029b0:	225f      	movs	r2, #95	@ 0x5f
 80029b2:	4650      	mov	r0, sl
 80029b4:	f8cd 8000 	str.w	r8, [sp]
 80029b8:	2174      	movs	r1, #116	@ 0x74
 80029ba:	f7ff feb3 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80029be:	4651      	mov	r1, sl
        color = newColor;
 80029c0:	f8c4 71d4 	str.w	r7, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 80029c4:	4628      	mov	r0, r5
        linespace = space;
 80029c6:	f8a4 b1d8 	strh.w	fp, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 80029ca:	f00e fb87 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80029ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80029d2:	f504 76f0 	add.w	r6, r4, #480	@ 0x1e0
 80029d6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        wideTextAction = action;
 80029da:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 80029de:	4651      	mov	r1, sl
        wideTextAction = action;
 80029e0:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 80029e4:	4628      	mov	r0, r5
 80029e6:	f00e fb79 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80029ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80029ee:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80029f2:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80029f6:	4651      	mov	r1, sl
        rotation = textRotation;
 80029f8:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 80029fc:	4628      	mov	r0, r5
 80029fe:	f00e fb6d 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a06:	2315      	movs	r3, #21
 8002a08:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1OW4));
 8002a0c:	4650      	mov	r0, sl
 8002a0e:	4e4a      	ldr	r6, [pc, #296]	@ (8002b38 <_ZN23EasyReadyScreenViewBaseC1Ev+0x37c>)
 8002a10:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002a14:	a90e      	add	r1, sp, #56	@ 0x38
 8002a16:	960e      	str	r6, [sp, #56]	@ 0x38
 8002a18:	f00e fe08 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8002a1c:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 8002a20:	f884 11da 	strb.w	r1, [r4, #474]	@ 0x1da
 8002a24:	4648      	mov	r0, r9
 8002a26:	4651      	mov	r1, sl
 8002a28:	f00b f80a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 8002a2c:	2313      	movs	r3, #19
 8002a2e:	225f      	movs	r2, #95	@ 0x5f
 8002a30:	9802      	ldr	r0, [sp, #8]
 8002a32:	f8cd 8000 	str.w	r8, [sp]
 8002a36:	21bb      	movs	r1, #187	@ 0xbb
 8002a38:	f7ff fe74 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002a3c:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8002a3e:	f8c4 721c 	str.w	r7, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8002a42:	4628      	mov	r0, r5
        linespace = space;
 8002a44:	f8a4 b220 	strh.w	fp, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8002a48:	f00e fb48 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a4c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a50:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8002a54:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8002a58:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8002a5c:	9902      	ldr	r1, [sp, #8]
        wideTextAction = action;
 8002a5e:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8002a62:	4628      	mov	r0, r5
        wideTextAction = action;
 8002a64:	4617      	mov	r7, r2
        boundingArea = calculateBoundingArea();
 8002a66:	f00e fb39 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a6e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8002a72:	9902      	ldr	r1, [sp, #8]
        rotation = textRotation;
 8002a74:	f884 7224 	strb.w	r7, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 8002a78:	4628      	mov	r0, r5
 8002a7a:	f00e fb2f 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002a7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a82:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ERV8));
 8002a86:	aa0e      	add	r2, sp, #56	@ 0x38
 8002a88:	2312      	movs	r3, #18
 8002a8a:	4611      	mov	r1, r2
 8002a8c:	9802      	ldr	r0, [sp, #8]
 8002a8e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002a92:	960e      	str	r6, [sp, #56]	@ 0x38
 8002a94:	f00e fdca 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8002a98:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 8002a9c:	f884 1222 	strb.w	r1, [r4, #546]	@ 0x222
 8002aa0:	4648      	mov	r0, r9
 8002aa2:	9902      	ldr	r1, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002aa4:	f8df a0ac 	ldr.w	sl, [pc, #172]	@ 8002b54 <_ZN23EasyReadyScreenViewBaseC1Ev+0x398>
 8002aa8:	f00a ffca 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 112);
 8002aac:	2270      	movs	r2, #112	@ 0x70
 8002aae:	9803      	ldr	r0, [sp, #12]
 8002ab0:	2135      	movs	r1, #53	@ 0x35
 8002ab2:	f7ff fe2a 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002ab6:	4b21      	ldr	r3, [pc, #132]	@ (8002b3c <_ZN23EasyReadyScreenViewBaseC1Ev+0x380>)
 8002ab8:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 8002abc:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8002ac0:	9903      	ldr	r1, [sp, #12]
 8002ac2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8002ac6:	f8a4 b268 	strh.w	fp, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 8002aca:	4628      	mov	r0, r5
 8002acc:	4798      	blx	r3
 8002ace:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ad2:	f504 771c 	add.w	r7, r4, #624	@ 0x270
        rotation = textRotation;
 8002ad6:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8002ada:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        rotation = textRotation;
 8002ade:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 8002ae2:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8002ae6:	9903      	ldr	r1, [sp, #12]
 8002ae8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002aec:	4628      	mov	r0, r5
 8002aee:	4798      	blx	r3
 8002af0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002af4:	f8da 3000 	ldr.w	r3, [sl]
 8002af8:	e887 0007 	stmia.w	r7, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 8002afc:	f504 7733 	add.w	r7, r4, #716	@ 0x2cc
 8002b00:	b92b      	cbnz	r3, 8002b0e <_ZN23EasyReadyScreenViewBaseC1Ev+0x352>
 8002b02:	4b0f      	ldr	r3, [pc, #60]	@ (8002b40 <_ZN23EasyReadyScreenViewBaseC1Ev+0x384>)
 8002b04:	4a0f      	ldr	r2, [pc, #60]	@ (8002b44 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 8002b06:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b08:	480f      	ldr	r0, [pc, #60]	@ (8002b48 <_ZN23EasyReadyScreenViewBaseC1Ev+0x38c>)
 8002b0a:	f025 f8bf 	bl	8027c8c <__assert_func>
 8002b0e:	4b0f      	ldr	r3, [pc, #60]	@ (8002b4c <_ZN23EasyReadyScreenViewBaseC1Ev+0x390>)
 8002b10:	881b      	ldrh	r3, [r3, #0]
 8002b12:	2b09      	cmp	r3, #9
 8002b14:	d820      	bhi.n	8002b58 <_ZN23EasyReadyScreenViewBaseC1Ev+0x39c>
 8002b16:	4b0e      	ldr	r3, [pc, #56]	@ (8002b50 <_ZN23EasyReadyScreenViewBaseC1Ev+0x394>)
 8002b18:	4a0a      	ldr	r2, [pc, #40]	@ (8002b44 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 8002b1a:	2161      	movs	r1, #97	@ 0x61
 8002b1c:	e7f4      	b.n	8002b08 <_ZN23EasyReadyScreenViewBaseC1Ev+0x34c>
 8002b1e:	bf00      	nop
 8002b20:	0802a510 	.word	0x0802a510
 8002b24:	0802ae0c 	.word	0x0802ae0c
 8002b28:	0802a4a8 	.word	0x0802a4a8
 8002b2c:	0802a418 	.word	0x0802a418
 8002b30:	ff0c3837 	.word	0xff0c3837
 8002b34:	ff990c0c 	.word	0xff990c0c
 8002b38:	0802a408 	.word	0x0802a408
 8002b3c:	ffdeab5f 	.word	0xffdeab5f
 8002b40:	08029232 	.word	0x08029232
 8002b44:	08029334 	.word	0x08029334
 8002b48:	080292af 	.word	0x080292af
 8002b4c:	20013fbc 	.word	0x20013fbc
 8002b50:	080292f6 	.word	0x080292f6
 8002b54:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8002b58:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 8002c4c <_ZN23EasyReadyScreenViewBaseC1Ev+0x490>
 8002b5c:	2109      	movs	r1, #9
 8002b5e:	f8d8 0000 	ldr.w	r0, [r8]
 8002b62:	f003 fdd1 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002b66:	4a36      	ldr	r2, [pc, #216]	@ (8002c40 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 8002b68:	4603      	mov	r3, r0
 8002b6a:	210a      	movs	r1, #10
 8002b6c:	4638      	mov	r0, r7
 8002b6e:	f015 f84f 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 8002b72:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 8002b74:	f8c4 727c 	str.w	r7, [r4, #636]	@ 0x27c
 8002b78:	f00e fd38 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 8002b7c:	27d2      	movs	r7, #210	@ 0xd2
        : typedTextId(id)
 8002b7e:	2314      	movs	r3, #20
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HVEB));
 8002b80:	9803      	ldr	r0, [sp, #12]
 8002b82:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002b86:	a90e      	add	r1, sp, #56	@ 0x38
 8002b88:	960e      	str	r6, [sp, #56]	@ 0x38
 8002b8a:	f00e fd4f 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b8e:	9903      	ldr	r1, [sp, #12]
 8002b90:	f884 726a 	strb.w	r7, [r4, #618]	@ 0x26a
 8002b94:	4648      	mov	r0, r9
 8002b96:	f00a ff53 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 8002b9a:	226f      	movs	r2, #111	@ 0x6f
 8002b9c:	9804      	ldr	r0, [sp, #16]
 8002b9e:	21f3      	movs	r1, #243	@ 0xf3
 8002ba0:	f7ff fdb3 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002ba4:	4b27      	ldr	r3, [pc, #156]	@ (8002c44 <_ZN23EasyReadyScreenViewBaseC1Ev+0x488>)
 8002ba6:	f8c4 32b0 	str.w	r3, [r4, #688]	@ 0x2b0
        boundingArea = calculateBoundingArea();
 8002baa:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 8002bae:	9904      	ldr	r1, [sp, #16]
 8002bb0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8002bb4:	f8a4 b2b4 	strh.w	fp, [r4, #692]	@ 0x2b4
        boundingArea = calculateBoundingArea();
 8002bb8:	4628      	mov	r0, r5
 8002bba:	4798      	blx	r3
 8002bbc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002bc0:	f504 7b2f 	add.w	fp, r4, #700	@ 0x2bc
        rotation = textRotation;
 8002bc4:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8002bc8:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8002bcc:	f884 32b8 	strb.w	r3, [r4, #696]	@ 0x2b8
        boundingArea = calculateBoundingArea();
 8002bd0:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 8002bd4:	9904      	ldr	r1, [sp, #16]
 8002bd6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002bda:	4628      	mov	r0, r5
 8002bdc:	4798      	blx	r3
 8002bde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002be2:	f8da 3000 	ldr.w	r3, [sl]
 8002be6:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 8002bea:	f504 7538 	add.w	r5, r4, #736	@ 0x2e0
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d087      	beq.n	8002b02 <_ZN23EasyReadyScreenViewBaseC1Ev+0x346>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002bf2:	4b15      	ldr	r3, [pc, #84]	@ (8002c48 <_ZN23EasyReadyScreenViewBaseC1Ev+0x48c>)
 8002bf4:	881b      	ldrh	r3, [r3, #0]
 8002bf6:	2b09      	cmp	r3, #9
 8002bf8:	d98d      	bls.n	8002b16 <_ZN23EasyReadyScreenViewBaseC1Ev+0x35a>
        return texts->getText(typedTextId);
 8002bfa:	f8d8 0000 	ldr.w	r0, [r8]
 8002bfe:	2109      	movs	r1, #9
 8002c00:	f003 fd82 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002c04:	4a0e      	ldr	r2, [pc, #56]	@ (8002c40 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 8002c06:	4603      	mov	r3, r0
 8002c08:	210a      	movs	r1, #10
 8002c0a:	4628      	mov	r0, r5
 8002c0c:	f015 f800 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8002c10:	9804      	ldr	r0, [sp, #16]
 8002c12:	f8c4 52c8 	str.w	r5, [r4, #712]	@ 0x2c8
 8002c16:	f00e fce9 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002c1a:	2313      	movs	r3, #19
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WSW0));
 8002c1c:	9804      	ldr	r0, [sp, #16]
 8002c1e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002c22:	a90e      	add	r1, sp, #56	@ 0x38
 8002c24:	960e      	str	r6, [sp, #56]	@ 0x38
 8002c26:	f00e fd01 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c2a:	4648      	mov	r0, r9
 8002c2c:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8002c2e:	f884 72b6 	strb.w	r7, [r4, #694]	@ 0x2b6
 8002c32:	f00a ff05 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002c36:	4620      	mov	r0, r4
 8002c38:	b011      	add	sp, #68	@ 0x44
 8002c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c3e:	bf00      	nop
 8002c40:	0802937f 	.word	0x0802937f
 8002c44:	ffdeab5f 	.word	0xffdeab5f
 8002c48:	20013fbc 	.word	0x20013fbc
 8002c4c:	20013fc4 	.word	0x20013fc4

08002c50 <_ZN18EasyScreenViewBase11setupScreenEv>:
}

void EasyScreenViewBase::setupScreen()
{

}
 8002c50:	4770      	bx	lr
	...

08002c54 <_ZN18EasyScreenViewBaseD1Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8002c54:	b510      	push	{r4, lr}
 8002c56:	4b03      	ldr	r3, [pc, #12]	@ (8002c64 <_ZN18EasyScreenViewBaseD1Ev+0x10>)
 8002c58:	6003      	str	r3, [r0, #0]
 8002c5a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c5c:	f00f ff08 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c60:	4620      	mov	r0, r4
 8002c62:	bd10      	pop	{r4, pc}
 8002c64:	0802a544 	.word	0x0802a544

08002c68 <_ZN18EasyScreenViewBaseD0Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8002c68:	b510      	push	{r4, lr}
 8002c6a:	4b06      	ldr	r3, [pc, #24]	@ (8002c84 <_ZN18EasyScreenViewBaseD0Ev+0x1c>)
 8002c6c:	6003      	str	r3, [r0, #0]
 8002c6e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002c70:	f00f fefe 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002c74:	4620      	mov	r0, r4
 8002c76:	f241 51b4 	movw	r1, #5556	@ 0x15b4
 8002c7a:	f024 f8cb 	bl	8026e14 <_ZdlPvj>
 8002c7e:	4620      	mov	r0, r4
 8002c80:	bd10      	pop	{r4, pc}
 8002c82:	bf00      	nop
 8002c84:	0802a544 	.word	0x0802a544

08002c88 <_ZN18EasyScreenViewBaseC1Ev>:
EasyScreenViewBase::EasyScreenViewBase()
 8002c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c8c:	4604      	mov	r4, r0
 8002c8e:	b091      	sub	sp, #68	@ 0x44
 8002c90:	4625      	mov	r5, r4
 8002c92:	2600      	movs	r6, #0
 8002c94:	f013 fadc 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 8002c98:	4b83      	ldr	r3, [pc, #524]	@ (8002ea8 <_ZN18EasyScreenViewBaseC1Ev+0x220>)
 8002c9a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8002c9c:	f845 3b40 	str.w	r3, [r5], #64
 8002ca0:	4628      	mov	r0, r5
 8002ca2:	f7ff fd53 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002ca6:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8002caa:	4618      	mov	r0, r3
 8002cac:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8002cb0:	9305      	str	r3, [sp, #20]
 8002cb2:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8002cb6:	f7ff fd49 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cba:	4650      	mov	r0, sl
 8002cbc:	f7ff fd46 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cc0:	4648      	mov	r0, r9
 8002cc2:	f7ff fd43 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cc6:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8002cca:	4618      	mov	r0, r3
 8002ccc:	4f77      	ldr	r7, [pc, #476]	@ (8002eac <_ZN18EasyScreenViewBaseC1Ev+0x224>)
 8002cce:	9308      	str	r3, [sp, #32]
 8002cd0:	f04f 0801 	mov.w	r8, #1
 8002cd4:	f7ff fd3a 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cd8:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8002cdc:	4618      	mov	r0, r3
 8002cde:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8002ce2:	f884 8114 	strb.w	r8, [r4, #276]	@ 0x114
 8002ce6:	9307      	str	r3, [sp, #28]
 8002ce8:	f7ff fd30 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8002cec:	f884 8140 	strb.w	r8, [r4, #320]	@ 0x140
        : TextArea()
 8002cf0:	f504 78a4 	add.w	r8, r4, #328	@ 0x148
 8002cf4:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8002cf8:	4640      	mov	r0, r8
        : TextAreaWithWildcardBase(), wc1(0)
 8002cfa:	4f6d      	ldr	r7, [pc, #436]	@ (8002eb0 <_ZN18EasyScreenViewBaseC1Ev+0x228>)
        : TextArea()
 8002cfc:	f504 7bca 	add.w	fp, r4, #404	@ 0x194
 8002d00:	f7ff fd3a 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002d04:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8002d08:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8002d0c:	4658      	mov	r0, fp
 8002d0e:	f7ff fd33 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002d12:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 8002d16:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8002d20:	9303      	str	r3, [sp, #12]
 8002d22:	f7ff fd29 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002d26:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8002d2a:	4618      	mov	r0, r3
 8002d2c:	9304      	str	r3, [sp, #16]
 8002d2e:	f7ff fd23 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8002d32:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 8002d36:	4618      	mov	r0, r3
 8002d38:	9306      	str	r3, [sp, #24]
 8002d3a:	f00d fbc3 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002d3e:	f504 732e 	add.w	r3, r4, #696	@ 0x2b8
 8002d42:	4618      	mov	r0, r3
 8002d44:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d46:	f7fe fbbd 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002d4a:	4b5a      	ldr	r3, [pc, #360]	@ (8002eb4 <_ZN18EasyScreenViewBaseC1Ev+0x22c>)
 8002d4c:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
 8002d50:	3324      	adds	r3, #36	@ 0x24
 8002d52:	f8c4 32c0 	str.w	r3, [r4, #704]	@ 0x2c0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002d56:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8002d5a:	f504 703d 	add.w	r0, r4, #756	@ 0x2f4
 8002d5e:	f8c4 62c4 	str.w	r6, [r4, #708]	@ 0x2c4
 8002d62:	f00f fe7b 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8002d66:	23f0      	movs	r3, #240	@ 0xf0
 8002d68:	4632      	mov	r2, r6
 8002d6a:	4628      	mov	r0, r5
 8002d6c:	9300      	str	r3, [sp, #0]
 8002d6e:	4631      	mov	r1, r6
 8002d70:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002d74:	f7ff fcd6 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d78:	1d27      	adds	r7, r4, #4
 8002d7a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002d7e:	4629      	mov	r1, r5
 8002d80:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002d82:	4638      	mov	r0, r7
 8002d84:	f00a fe5c 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 8002d88:	23f0      	movs	r3, #240	@ 0xf0
 8002d8a:	4632      	mov	r2, r6
 8002d8c:	9805      	ldr	r0, [sp, #20]
 8002d8e:	9300      	str	r3, [sp, #0]
 8002d90:	4631      	mov	r1, r6
 8002d92:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002d96:	f7ff fcc5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002d9a:	f04f 33ff 	mov.w	r3, #4294967295
 8002d9e:	9905      	ldr	r1, [sp, #20]
 8002da0:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8002da4:	4638      	mov	r0, r7
 8002da6:	f00a fe4b 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8002daa:	2202      	movs	r2, #2
 8002dac:	23ec      	movs	r3, #236	@ 0xec
 8002dae:	4611      	mov	r1, r2
 8002db0:	4650      	mov	r0, sl
 8002db2:	9300      	str	r3, [sp, #0]
 8002db4:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8002db8:	f7ff fcb4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dbc:	4b3e      	ldr	r3, [pc, #248]	@ (8002eb8 <_ZN18EasyScreenViewBaseC1Ev+0x230>)
 8002dbe:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8002dc2:	4651      	mov	r1, sl
 8002dc4:	4638      	mov	r0, r7
 8002dc6:	f00a fe3b 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8002dca:	23f0      	movs	r3, #240	@ 0xf0
 8002dcc:	4632      	mov	r2, r6
 8002dce:	4648      	mov	r0, r9
 8002dd0:	9300      	str	r3, [sp, #0]
 8002dd2:	21a0      	movs	r1, #160	@ 0xa0
 8002dd4:	2303      	movs	r3, #3
 8002dd6:	f7ff fca5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002dda:	f04f 33ff 	mov.w	r3, #4294967295
 8002dde:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8002de2:	23dc      	movs	r3, #220	@ 0xdc
 8002de4:	4649      	mov	r1, r9
    paddle1.setPosition(8, 100, 5, 40);
 8002de6:	2528      	movs	r5, #40	@ 0x28
 8002de8:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8002dec:	4638      	mov	r0, r7
 8002dee:	f00a fe27 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002df2:	2264      	movs	r2, #100	@ 0x64
 8002df4:	9808      	ldr	r0, [sp, #32]
 8002df6:	9500      	str	r5, [sp, #0]
 8002df8:	2305      	movs	r3, #5
 8002dfa:	2108      	movs	r1, #8
 8002dfc:	f7ff fc92 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002e00:	f04f 33ff 	mov.w	r3, #4294967295
 8002e04:	9908      	ldr	r1, [sp, #32]
 8002e06:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 8002e0a:	4638      	mov	r0, r7
 8002e0c:	f00a fe18 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 8002e10:	2264      	movs	r2, #100	@ 0x64
 8002e12:	9807      	ldr	r0, [sp, #28]
 8002e14:	9500      	str	r5, [sp, #0]
 8002e16:	2305      	movs	r3, #5
 8002e18:	f240 1133 	movw	r1, #307	@ 0x133
 8002e1c:	f7ff fc82 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e20:	f04f 33ff 	mov.w	r3, #4294967295
 8002e24:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 8002e28:	9907      	ldr	r1, [sp, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e2a:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 8002ed4 <_ZN18EasyScreenViewBaseC1Ev+0x24c>
 8002e2e:	4638      	mov	r0, r7
 8002e30:	f00a fe06 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 8002e34:	2216      	movs	r2, #22
 8002e36:	21b8      	movs	r1, #184	@ 0xb8
 8002e38:	4640      	mov	r0, r8
 8002e3a:	f7ff fc66 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002e3e:	4b1f      	ldr	r3, [pc, #124]	@ (8002ebc <_ZN18EasyScreenViewBaseC1Ev+0x234>)
 8002e40:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8002e44:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8002e48:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8002e4c:	446d      	add	r5, sp
 8002e4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002e52:	4641      	mov	r1, r8
 8002e54:	4628      	mov	r0, r5
 8002e56:	4798      	blx	r3
 8002e58:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e5c:	f504 79c2 	add.w	r9, r4, #388	@ 0x184
        rotation = textRotation;
 8002e60:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8002e64:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8002e68:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8002e6c:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8002e70:	4641      	mov	r1, r8
 8002e72:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002e76:	4628      	mov	r0, r5
 8002e78:	4798      	blx	r3
 8002e7a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e7e:	f8da 3000 	ldr.w	r3, [sl]
 8002e82:	e889 0007 	stmia.w	r9, {r0, r1, r2}
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER1).getText());
 8002e86:	f504 7933 	add.w	r9, r4, #716	@ 0x2cc
 8002e8a:	b92b      	cbnz	r3, 8002e98 <_ZN18EasyScreenViewBaseC1Ev+0x210>
 8002e8c:	4b0c      	ldr	r3, [pc, #48]	@ (8002ec0 <_ZN18EasyScreenViewBaseC1Ev+0x238>)
 8002e8e:	4a0d      	ldr	r2, [pc, #52]	@ (8002ec4 <_ZN18EasyScreenViewBaseC1Ev+0x23c>)
 8002e90:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002e92:	480d      	ldr	r0, [pc, #52]	@ (8002ec8 <_ZN18EasyScreenViewBaseC1Ev+0x240>)
 8002e94:	f024 fefa 	bl	8027c8c <__assert_func>
 8002e98:	4b0c      	ldr	r3, [pc, #48]	@ (8002ecc <_ZN18EasyScreenViewBaseC1Ev+0x244>)
 8002e9a:	881b      	ldrh	r3, [r3, #0]
 8002e9c:	2b06      	cmp	r3, #6
 8002e9e:	d81b      	bhi.n	8002ed8 <_ZN18EasyScreenViewBaseC1Ev+0x250>
 8002ea0:	4b0b      	ldr	r3, [pc, #44]	@ (8002ed0 <_ZN18EasyScreenViewBaseC1Ev+0x248>)
 8002ea2:	4a08      	ldr	r2, [pc, #32]	@ (8002ec4 <_ZN18EasyScreenViewBaseC1Ev+0x23c>)
 8002ea4:	2161      	movs	r1, #97	@ 0x61
 8002ea6:	e7f4      	b.n	8002e92 <_ZN18EasyScreenViewBaseC1Ev+0x20a>
 8002ea8:	0802a544 	.word	0x0802a544
 8002eac:	0802a4a8 	.word	0x0802a4a8
 8002eb0:	0802a418 	.word	0x0802a418
 8002eb4:	0802ae0c 	.word	0x0802ae0c
 8002eb8:	ff0c3837 	.word	0xff0c3837
 8002ebc:	ff595656 	.word	0xff595656
 8002ec0:	08029232 	.word	0x08029232
 8002ec4:	08029334 	.word	0x08029334
 8002ec8:	080292af 	.word	0x080292af
 8002ecc:	20013fbc 	.word	0x20013fbc
 8002ed0:	080292f6 	.word	0x080292f6
 8002ed4:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8002ed8:	4b7e      	ldr	r3, [pc, #504]	@ (80030d4 <_ZN18EasyScreenViewBaseC1Ev+0x44c>)
 8002eda:	2106      	movs	r1, #6
 8002edc:	6818      	ldr	r0, [r3, #0]
 8002ede:	f003 fc13 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002ee2:	4a7d      	ldr	r2, [pc, #500]	@ (80030d8 <_ZN18EasyScreenViewBaseC1Ev+0x450>)
 8002ee4:	4603      	mov	r3, r0
 8002ee6:	210a      	movs	r1, #10
 8002ee8:	4648      	mov	r0, r9
 8002eea:	f014 fe91 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score2.resizeToCurrentText();
 8002eee:	4640      	mov	r0, r8
        wc1 = value;
 8002ef0:	f8c4 9190 	str.w	r9, [r4, #400]	@ 0x190
 8002ef4:	f00e fb7a 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002ef8:	f8df 91ec 	ldr.w	r9, [pc, #492]	@ 80030e8 <_ZN18EasyScreenViewBaseC1Ev+0x460>
 8002efc:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 8002f00:	2321      	movs	r3, #33	@ 0x21
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I1JY));
 8002f02:	4640      	mov	r0, r8
 8002f04:	a90e      	add	r1, sp, #56	@ 0x38
 8002f06:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8002f0a:	f00e fb8f 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f0e:	4641      	mov	r1, r8
 8002f10:	4638      	mov	r0, r7
 8002f12:	f00a fd95 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8002f16:	22c3      	movs	r2, #195	@ 0xc3
 8002f18:	2175      	movs	r1, #117	@ 0x75
 8002f1a:	4658      	mov	r0, fp
 8002f1c:	f7ff fbf5 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002f20:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8002f24:	4a6d      	ldr	r2, [pc, #436]	@ (80030dc <_ZN18EasyScreenViewBaseC1Ev+0x454>)
        boundingArea = calculateBoundingArea();
 8002f26:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8002f2a:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 8002f2e:	4659      	mov	r1, fp
 8002f30:	4628      	mov	r0, r5
        linespace = space;
 8002f32:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8002f36:	4798      	blx	r3
 8002f38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f3c:	f504 78e8 	add.w	r8, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8002f40:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8002f44:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8002f48:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8002f4c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8002f50:	f884 21cc 	strb.w	r2, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8002f54:	4659      	mov	r1, fp
 8002f56:	4628      	mov	r0, r5
 8002f58:	4798      	blx	r3
 8002f5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002f5e:	f8da 3000 	ldr.w	r3, [sl]
 8002f62:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER1).getText());
 8002f66:	f504 7838 	add.w	r8, r4, #736	@ 0x2e0
 8002f6a:	2b00      	cmp	r3, #0
 8002f6c:	d08e      	beq.n	8002e8c <_ZN18EasyScreenViewBaseC1Ev+0x204>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002f6e:	4a5c      	ldr	r2, [pc, #368]	@ (80030e0 <_ZN18EasyScreenViewBaseC1Ev+0x458>)
 8002f70:	8813      	ldrh	r3, [r2, #0]
 8002f72:	2b05      	cmp	r3, #5
 8002f74:	d994      	bls.n	8002ea0 <_ZN18EasyScreenViewBaseC1Ev+0x218>
        return texts->getText(typedTextId);
 8002f76:	4b57      	ldr	r3, [pc, #348]	@ (80030d4 <_ZN18EasyScreenViewBaseC1Ev+0x44c>)
 8002f78:	2105      	movs	r1, #5
 8002f7a:	6818      	ldr	r0, [r3, #0]
 8002f7c:	f003 fbc4 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8002f80:	4a55      	ldr	r2, [pc, #340]	@ (80030d8 <_ZN18EasyScreenViewBaseC1Ev+0x450>)
 8002f82:	4603      	mov	r3, r0
 8002f84:	210a      	movs	r1, #10
 8002f86:	4640      	mov	r0, r8
 8002f88:	f014 fe42 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8002f8c:	f8c4 81dc 	str.w	r8, [r4, #476]	@ 0x1dc
    score1.resizeToCurrentText();
 8002f90:	4658      	mov	r0, fp
 8002f92:	f00e fb2b 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002f96:	2320      	movs	r3, #32
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 8002f98:	a90e      	add	r1, sp, #56	@ 0x38
 8002f9a:	4658      	mov	r0, fp
 8002f9c:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
    player1.setPosition(140, 180, 19, 52);
 8002fa0:	f04f 0a34 	mov.w	sl, #52	@ 0x34
 8002fa4:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 8002fa8:	f00e fb40 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fac:	4659      	mov	r1, fp
 8002fae:	4638      	mov	r0, r7
 8002fb0:	f00a fd46 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(140, 180, 19, 52);
 8002fb4:	9803      	ldr	r0, [sp, #12]
 8002fb6:	f8cd a000 	str.w	sl, [sp]
 8002fba:	22b4      	movs	r2, #180	@ 0xb4
 8002fbc:	2313      	movs	r3, #19
 8002fbe:	218c      	movs	r1, #140	@ 0x8c
 8002fc0:	f7ff fbb0 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002fc4:	f04f 33ff 	mov.w	r3, #4294967295
 8002fc8:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8002fcc:	9903      	ldr	r1, [sp, #12]
        linespace = space;
 8002fce:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 8002fd2:	4628      	mov	r0, r5
 8002fd4:	f00e f882 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002fd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002fdc:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 8002fe0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8002fe4:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8002fe8:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 8002fea:	f884 2218 	strb.w	r2, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 8002fee:	4628      	mov	r0, r5
 8002ff0:	f00e f874 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ff4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ff8:	231f      	movs	r3, #31
 8002ffa:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G2S8));
 8002ffe:	9803      	ldr	r0, [sp, #12]
 8003000:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003004:	a90e      	add	r1, sp, #56	@ 0x38
        alpha = newAlpha;
 8003006:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 800300a:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 800300e:	f00e fb0d 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003012:	9903      	ldr	r1, [sp, #12]
 8003014:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 8003018:	4638      	mov	r0, r7
 800301a:	f00a fd11 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 800301e:	9804      	ldr	r0, [sp, #16]
 8003020:	f8cd a000 	str.w	sl, [sp]
 8003024:	2207      	movs	r2, #7
 8003026:	2313      	movs	r3, #19
 8003028:	21a5      	movs	r1, #165	@ 0xa5
 800302a:	f7ff fb7b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800302e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8003032:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8003034:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8003038:	4628      	mov	r0, r5
        linespace = space;
 800303a:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 800303e:	f00e f84d 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003042:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003046:	f504 7a19 	add.w	sl, r4, #612	@ 0x264
        rotation = textRotation;
 800304a:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 800304e:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8003052:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 8003054:	f884 3260 	strb.w	r3, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8003058:	4628      	mov	r0, r5
 800305a:	f00e f83f 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800305e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003062:	231e      	movs	r3, #30
 8003064:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD39));
 8003068:	9804      	ldr	r0, [sp, #16]
 800306a:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 800306e:	a90e      	add	r1, sp, #56	@ 0x38
 8003070:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
 8003074:	f00e fada 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003078:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 800307a:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 800307e:	4638      	mov	r0, r7
 8003080:	f00a fcde 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8003084:	230e      	movs	r3, #14
 8003086:	9806      	ldr	r0, [sp, #24]
 8003088:	9300      	str	r3, [sp, #0]
 800308a:	2272      	movs	r2, #114	@ 0x72
 800308c:	219a      	movs	r1, #154	@ 0x9a
 800308e:	f7ff fb49 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003092:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8003094:	e9c4 33a7 	strd	r3, r3, [r4, #668]	@ 0x29c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003098:	23c0      	movs	r3, #192	@ 0xc0
 800309a:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800309e:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80030a2:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
 80030a6:	4b0f      	ldr	r3, [pc, #60]	@ (80030e4 <_ZN18EasyScreenViewBaseC1Ev+0x45c>)
 80030a8:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80030ac:	f649 0361 	movw	r3, #39009	@ 0x9861
 80030b0:	f8a4 32c8 	strh.w	r3, [r4, #712]	@ 0x2c8
 80030b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80030b6:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80030b8:	f8c4 62b0 	str.w	r6, [r4, #688]	@ 0x2b0
 80030bc:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80030be:	f8c4 62a8 	str.w	r6, [r4, #680]	@ 0x2a8
 80030c2:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
 80030c6:	f00a fcbb 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030ca:	4620      	mov	r0, r4
 80030cc:	b011      	add	sp, #68	@ 0x44
 80030ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030d2:	bf00      	nop
 80030d4:	20013fc4 	.word	0x20013fc4
 80030d8:	0802937f 	.word	0x0802937f
 80030dc:	ff595656 	.word	0xff595656
 80030e0:	20013fbc 	.word	0x20013fbc
 80030e4:	ff990c0c 	.word	0xff990c0c
 80030e8:	0802a408 	.word	0x0802a408

080030ec <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80030ec:	4770      	bx	lr

080030ee <_ZN17EndScreenViewBaseD1Ev>:
}

EndScreenViewBase::~EndScreenViewBase()
{

}
 80030ee:	4770      	bx	lr

080030f0 <_ZN17EndScreenViewBase11setupScreenEv>:

void EndScreenViewBase::setupScreen()
{

}
 80030f0:	4770      	bx	lr

080030f2 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80030f2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80030f4:	68c2      	ldr	r2, [r0, #12]
 80030f6:	6844      	ldr	r4, [r0, #4]
 80030f8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80030fa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80030fc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003100:	07d2      	lsls	r2, r2, #31
 8003102:	bf48      	it	mi
 8003104:	5962      	ldrmi	r2, [r4, r5]
 8003106:	689b      	ldr	r3, [r3, #8]
    }
 8003108:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800310a:	bf48      	it	mi
 800310c:	58d3      	ldrmi	r3, [r2, r3]
 800310e:	4718      	bx	r3

08003110 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 8003110:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003112:	6840      	ldr	r0, [r0, #4]
 8003114:	b130      	cbz	r0, 8003124 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003116:	689a      	ldr	r2, [r3, #8]
 8003118:	b91a      	cbnz	r2, 8003122 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800311a:	68d8      	ldr	r0, [r3, #12]
 800311c:	f000 0001 	and.w	r0, r0, #1
 8003120:	4770      	bx	lr
 8003122:	2001      	movs	r0, #1
    }
 8003124:	4770      	bx	lr

08003126 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003126:	b510      	push	{r4, lr}
 8003128:	2110      	movs	r1, #16
 800312a:	4604      	mov	r4, r0
 800312c:	f023 fe72 	bl	8026e14 <_ZdlPvj>
 8003130:	4620      	mov	r0, r4
 8003132:	bd10      	pop	{r4, pc}

08003134 <_ZN17EndScreenViewBaseD0Ev>:
EndScreenViewBase::~EndScreenViewBase()
 8003134:	b510      	push	{r4, lr}
}
 8003136:	f44f 71cc 	mov.w	r1, #408	@ 0x198
EndScreenViewBase::~EndScreenViewBase()
 800313a:	4604      	mov	r4, r0
}
 800313c:	f023 fe6a 	bl	8026e14 <_ZdlPvj>
 8003140:	4620      	mov	r0, r4
 8003142:	bd10      	pop	{r4, pc}

08003144 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void EndScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playagainButton)
 8003144:	3098      	adds	r0, #152	@ 0x98
 8003146:	4288      	cmp	r0, r1
{
 8003148:	b508      	push	{r3, lr}
    if (&src == &playagainButton)
 800314a:	d105      	bne.n	8003158 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~EndScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800314c:	f011 f98a 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When playagainButton clicked change screen to StartScreen
        //Go to StartScreen with screen transition towards East
        application().gotoStartScreenScreenWipeTransitionEast();
    }
}
 8003150:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoStartScreenScreenWipeTransitionEast();
 8003154:	f000 ba78 	b.w	8003648 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>
}
 8003158:	bd08      	pop	{r3, pc}
	...

0800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800315c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 800315e:	4b19      	ldr	r3, [pc, #100]	@ (80031c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8003160:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8003162:	881b      	ldrh	r3, [r3, #0]
 8003164:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003166:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003168:	d92a      	bls.n	80031c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800316a:	4b17      	ldr	r3, [pc, #92]	@ (80031c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	b92b      	cbnz	r3, 800317c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003170:	4b16      	ldr	r3, [pc, #88]	@ (80031cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003172:	4a17      	ldr	r2, [pc, #92]	@ (80031d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003174:	4817      	ldr	r0, [pc, #92]	@ (80031d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003176:	216c      	movs	r1, #108	@ 0x6c
 8003178:	f024 fd88 	bl	8027c8c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800317c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003180:	4b15      	ldr	r3, [pc, #84]	@ (80031d8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003188:	4b14      	ldr	r3, [pc, #80]	@ (80031dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800318a:	6818      	ldr	r0, [r3, #0]
 800318c:	f003 fabc 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003190:	682b      	ldr	r3, [r5, #0]
 8003192:	4607      	mov	r7, r0
 8003194:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003196:	4628      	mov	r0, r5
 8003198:	4798      	blx	r3
 800319a:	682b      	ldr	r3, [r5, #0]
 800319c:	4604      	mov	r4, r0
 800319e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80031a0:	4639      	mov	r1, r7
 80031a2:	4628      	mov	r0, r5
 80031a4:	4798      	blx	r3
 80031a6:	682b      	ldr	r3, [r5, #0]
 80031a8:	fb14 f400 	smulbb	r4, r4, r0
 80031ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031ae:	4639      	mov	r1, r7
 80031b0:	4628      	mov	r0, r5
 80031b2:	4798      	blx	r3
 80031b4:	b2a4      	uxth	r4, r4
 80031b6:	1823      	adds	r3, r4, r0
 80031b8:	b21b      	sxth	r3, r3
 80031ba:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80031be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80031c0:	2300      	movs	r3, #0
 80031c2:	e7fa      	b.n	80031ba <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80031c4:	20013fbc 	.word	0x20013fbc
 80031c8:	20013fb8 	.word	0x20013fb8
 80031cc:	08029232 	.word	0x08029232
 80031d0:	08029274 	.word	0x08029274
 80031d4:	080292af 	.word	0x080292af
 80031d8:	20013fc0 	.word	0x20013fc0
 80031dc:	20013fc4 	.word	0x20013fc4

080031e0 <_ZN17EndScreenViewBaseC1Ev>:
EndScreenViewBase::EndScreenViewBase() :
 80031e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031e4:	4604      	mov	r4, r0
 80031e6:	b08b      	sub	sp, #44	@ 0x2c
    buttonCallback(this, &EndScreenViewBase::buttonCallbackHandler)
 80031e8:	46a2      	mov	sl, r4
 80031ea:	2500      	movs	r5, #0
 80031ec:	f013 f830 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 80031f0:	4b6b      	ldr	r3, [pc, #428]	@ (80033a0 <_ZN17EndScreenViewBaseC1Ev+0x1c0>)
 80031f2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80031f4:	f84a 3b40 	str.w	r3, [sl], #64
 80031f8:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 80031fc:	4650      	mov	r0, sl
 80031fe:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8003202:	f7ff faa3 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8003206:	4658      	mov	r0, fp
 8003208:	f7ff faa0 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 800320c:	f104 06e0 	add.w	r6, r4, #224	@ 0xe0
 8003210:	4648      	mov	r0, r9
 8003212:	f00e fd67 	bl	8011ce4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003216:	4630      	mov	r0, r6
 8003218:	f7ff faae 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 800321c:	f504 7896 	add.w	r8, r4, #300	@ 0x12c
        : TextAreaWithWildcardBase(), wc1(0)
 8003220:	4b60      	ldr	r3, [pc, #384]	@ (80033a4 <_ZN17EndScreenViewBaseC1Ev+0x1c4>)
 8003222:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 8003226:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 800322a:	4640      	mov	r0, r8
 800322c:	f7ff faa4 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003230:	4b5d      	ldr	r3, [pc, #372]	@ (80033a8 <_ZN17EndScreenViewBaseC1Ev+0x1c8>)
 8003232:	e9c4 3462 	strd	r3, r4, [r4, #392]	@ 0x188
 8003236:	4b5d      	ldr	r3, [pc, #372]	@ (80033ac <_ZN17EndScreenViewBaseC1Ev+0x1cc>)
 8003238:	e9c4 3564 	strd	r3, r5, [r4, #400]	@ 0x190
    __background.setPosition(0, 0, 320, 240);
 800323c:	23f0      	movs	r3, #240	@ 0xf0
 800323e:	462a      	mov	r2, r5
 8003240:	4650      	mov	r0, sl
 8003242:	9300      	str	r3, [sp, #0]
 8003244:	4629      	mov	r1, r5
 8003246:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800324a:	f7ff fa6b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800324e:	1d27      	adds	r7, r4, #4
 8003250:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003254:	4651      	mov	r1, sl
 8003256:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003258:	4638      	mov	r0, r7
 800325a:	f00a fbf1 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 320, 240);
 800325e:	23f0      	movs	r3, #240	@ 0xf0
 8003260:	462a      	mov	r2, r5
 8003262:	4658      	mov	r0, fp
 8003264:	9300      	str	r3, [sp, #0]
 8003266:	4629      	mov	r1, r5
 8003268:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800326c:	f7ff fa5a 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003270:	4b4f      	ldr	r3, [pc, #316]	@ (80033b0 <_ZN17EndScreenViewBaseC1Ev+0x1d0>)
 8003272:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8003276:	4659      	mov	r1, fp
 8003278:	4638      	mov	r0, r7
 800327a:	f00a fbe1 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playagainButton.setXY(91, 164);
 800327e:	4648      	mov	r0, r9
 8003280:	22a4      	movs	r2, #164	@ 0xa4
 8003282:	215b      	movs	r1, #91	@ 0x5b
 8003284:	f7ff fa41 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    playagainButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID));
 8003288:	aa08      	add	r2, sp, #32
 800328a:	a907      	add	r1, sp, #28
 800328c:	4648      	mov	r0, r9
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800328e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003292:	f8ad 5020 	strh.w	r5, [sp, #32]
 8003296:	f00e fa1c 	bl	80116d2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800329a:	2323      	movs	r3, #35	@ 0x23
        updateTextPosition();
 800329c:	4648      	mov	r0, r9
 800329e:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
 80032a2:	f7ff ff5b 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 80032a6:	4a43      	ldr	r2, [pc, #268]	@ (80033b4 <_ZN17EndScreenViewBaseC1Ev+0x1d4>)
        color = newColor;
 80032a8:	f8df a12c 	ldr.w	sl, [pc, #300]	@ 80033d8 <_ZN17EndScreenViewBaseC1Ev+0x1f8>
 80032ac:	f04f 33ff 	mov.w	r3, #4294967295
 80032b0:	e9c4 2335 	strd	r2, r3, [r4, #212]	@ 0xd4
    playagainButton.setAction(buttonCallback);
 80032b4:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80032b8:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80032bc:	4649      	mov	r1, r9
 80032be:	4638      	mov	r0, r7
 80032c0:	f00a fbbe 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playerwin.setXY(105, 93);
 80032c4:	225d      	movs	r2, #93	@ 0x5d
 80032c6:	2169      	movs	r1, #105	@ 0x69
 80032c8:	4630      	mov	r0, r6
 80032ca:	f7ff fa1e 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80032ce:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
        color = newColor;
 80032d2:	f8c4 a110 	str.w	sl, [r4, #272]	@ 0x110
        boundingArea = calculateBoundingArea();
 80032d6:	f10d 0908 	add.w	r9, sp, #8
 80032da:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80032de:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        boundingArea = calculateBoundingArea();
 80032e2:	4631      	mov	r1, r6
 80032e4:	4648      	mov	r0, r9
 80032e6:	4798      	blx	r3
 80032e8:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80032ec:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80032f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80032f4:	4b30      	ldr	r3, [pc, #192]	@ (80033b8 <_ZN17EndScreenViewBaseC1Ev+0x1d8>)
 80032f6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%s", touchgfx::TypedText(T_WINNERBUFFER).getText());
 80032f8:	f504 7bba 	add.w	fp, r4, #372	@ 0x174
 80032fc:	b92b      	cbnz	r3, 800330a <_ZN17EndScreenViewBaseC1Ev+0x12a>
 80032fe:	4b2f      	ldr	r3, [pc, #188]	@ (80033bc <_ZN17EndScreenViewBaseC1Ev+0x1dc>)
 8003300:	4a2f      	ldr	r2, [pc, #188]	@ (80033c0 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003302:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003304:	482f      	ldr	r0, [pc, #188]	@ (80033c4 <_ZN17EndScreenViewBaseC1Ev+0x1e4>)
 8003306:	f024 fcc1 	bl	8027c8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800330a:	4b2f      	ldr	r3, [pc, #188]	@ (80033c8 <_ZN17EndScreenViewBaseC1Ev+0x1e8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800330c:	881b      	ldrh	r3, [r3, #0]
 800330e:	b91b      	cbnz	r3, 8003318 <_ZN17EndScreenViewBaseC1Ev+0x138>
 8003310:	4b2e      	ldr	r3, [pc, #184]	@ (80033cc <_ZN17EndScreenViewBaseC1Ev+0x1ec>)
 8003312:	4a2b      	ldr	r2, [pc, #172]	@ (80033c0 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003314:	2161      	movs	r1, #97	@ 0x61
 8003316:	e7f5      	b.n	8003304 <_ZN17EndScreenViewBaseC1Ev+0x124>
        return texts->getText(typedTextId);
 8003318:	4b2d      	ldr	r3, [pc, #180]	@ (80033d0 <_ZN17EndScreenViewBaseC1Ev+0x1f0>)
 800331a:	4629      	mov	r1, r5
 800331c:	6818      	ldr	r0, [r3, #0]
 800331e:	f003 f9f3 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8003322:	4a2c      	ldr	r2, [pc, #176]	@ (80033d4 <_ZN17EndScreenViewBaseC1Ev+0x1f4>)
 8003324:	4603      	mov	r3, r0
 8003326:	210a      	movs	r1, #10
 8003328:	4658      	mov	r0, fp
 800332a:	f014 fc71 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800332e:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
    playerwin.resizeToCurrentText();
 8003332:	4630      	mov	r0, r6
 8003334:	f00e f95a 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003338:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 80033dc <_ZN17EndScreenViewBaseC1Ev+0x1fc>
 800333c:	f8cd b020 	str.w	fp, [sp, #32]
 8003340:	2328      	movs	r3, #40	@ 0x28
    playerwin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9392));
 8003342:	a908      	add	r1, sp, #32
 8003344:	4630      	mov	r0, r6
 8003346:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800334a:	f00e f96f 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800334e:	4631      	mov	r1, r6
 8003350:	4638      	mov	r0, r7
 8003352:	f00a fb75 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    winner.setXY(91, 28);
 8003356:	221c      	movs	r2, #28
 8003358:	4640      	mov	r0, r8
 800335a:	215b      	movs	r1, #91	@ 0x5b
 800335c:	f7ff f9d5 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8003360:	4641      	mov	r1, r8
 8003362:	4648      	mov	r0, r9
        color = newColor;
 8003364:	f8c4 a15c 	str.w	sl, [r4, #348]	@ 0x15c
        linespace = space;
 8003368:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160
        boundingArea = calculateBoundingArea();
 800336c:	f00d feb6 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003370:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003374:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
 8003378:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800337c:	2322      	movs	r3, #34	@ 0x22
    winner.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86XU));
 800337e:	a908      	add	r1, sp, #32
 8003380:	4640      	mov	r0, r8
 8003382:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003386:	f8cd b020 	str.w	fp, [sp, #32]
 800338a:	f00e f94f 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800338e:	4638      	mov	r0, r7
 8003390:	4641      	mov	r1, r8
 8003392:	f00a fb55 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003396:	4620      	mov	r0, r4
 8003398:	b00b      	add	sp, #44	@ 0x2c
 800339a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800339e:	bf00      	nop
 80033a0:	0802a590 	.word	0x0802a590
 80033a4:	0802a418 	.word	0x0802a418
 80033a8:	0802a578 	.word	0x0802a578
 80033ac:	08003145 	.word	0x08003145
 80033b0:	ffaddced 	.word	0xffaddced
 80033b4:	ffedf1f5 	.word	0xffedf1f5
 80033b8:	20013fb8 	.word	0x20013fb8
 80033bc:	08029232 	.word	0x08029232
 80033c0:	08029334 	.word	0x08029334
 80033c4:	080292af 	.word	0x080292af
 80033c8:	20013fbc 	.word	0x20013fbc
 80033cc:	080292f6 	.word	0x080292f6
 80033d0:	20013fc4 	.word	0x20013fc4
 80033d4:	0802937f 	.word	0x0802937f
 80033d8:	ff3f4669 	.word	0xff3f4669
 80033dc:	0802a408 	.word	0x0802a408

080033e0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80033e0:	4770      	bx	lr

080033e2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80033e2:	4770      	bx	lr

080033e4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80033e4:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 80033e8:	6808      	ldr	r0, [r1, #0]
 80033ea:	6849      	ldr	r1, [r1, #4]
 80033ec:	c303      	stmia	r3!, {r0, r1}
    }
 80033ee:	4770      	bx	lr

080033f0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80033f0:	4770      	bx	lr

080033f2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80033f2:	4770      	bx	lr

080033f4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80033f4:	6041      	str	r1, [r0, #4]
    }
 80033f6:	4770      	bx	lr

080033f8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80033f8:	b510      	push	{r4, lr}
 80033fa:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80033fc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003400:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003404:	8002      	strh	r2, [r0, #0]
 8003406:	8042      	strh	r2, [r0, #2]
 8003408:	8084      	strh	r4, [r0, #4]
 800340a:	80c1      	strh	r1, [r0, #6]
        }
 800340c:	bd10      	pop	{r4, pc}

0800340e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800340e:	4770      	bx	lr

08003410 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003410:	4770      	bx	lr

08003412 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003412:	4770      	bx	lr

08003414 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8003414:	4b06      	ldr	r3, [pc, #24]	@ (8003430 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003416:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800341a:	2300      	movs	r3, #0
 800341c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003420:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003424:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003428:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
 800342c:	4770      	bx	lr
 800342e:	bf00      	nop
 8003430:	08003c7d 	.word	0x08003c7d

08003434 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003434:	2301      	movs	r3, #1
 8003436:	7203      	strb	r3, [r0, #8]
    }
 8003438:	4770      	bx	lr

0800343a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800343a:	4770      	bx	lr

0800343c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800343c:	4770      	bx	lr

0800343e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800343e:	4770      	bx	lr

08003440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003440:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003442:	6840      	ldr	r0, [r0, #4]
 8003444:	6803      	ldr	r3, [r0, #0]
 8003446:	3110      	adds	r1, #16
 8003448:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800344a:	4718      	bx	r3

0800344c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 800344c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800344e:	6840      	ldr	r0, [r0, #4]
 8003450:	6803      	ldr	r3, [r0, #0]
 8003452:	3110      	adds	r1, #16
 8003454:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003456:	4718      	bx	r3

08003458 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003458:	4770      	bx	lr

0800345a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800345a:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800345c:	68c2      	ldr	r2, [r0, #12]
 800345e:	6841      	ldr	r1, [r0, #4]
 8003460:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003462:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003464:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003468:	07d2      	lsls	r2, r2, #31
 800346a:	bf48      	it	mi
 800346c:	590a      	ldrmi	r2, [r1, r4]
 800346e:	689b      	ldr	r3, [r3, #8]
    }
 8003470:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003474:	bf48      	it	mi
 8003476:	58d3      	ldrmi	r3, [r2, r3]
 8003478:	4718      	bx	r3

0800347a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800347a:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800347c:	6840      	ldr	r0, [r0, #4]
 800347e:	b130      	cbz	r0, 800348e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003480:	689a      	ldr	r2, [r3, #8]
 8003482:	b91a      	cbnz	r2, 800348c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8003484:	68d8      	ldr	r0, [r3, #12]
 8003486:	f000 0001 	and.w	r0, r0, #1
 800348a:	4770      	bx	lr
 800348c:	2001      	movs	r0, #1
    }
 800348e:	4770      	bx	lr

08003490 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003490:	b510      	push	{r4, lr}
 8003492:	210c      	movs	r1, #12
 8003494:	4604      	mov	r4, r0
 8003496:	f023 fcbd 	bl	8026e14 <_ZdlPvj>
 800349a:	4620      	mov	r0, r4
 800349c:	bd10      	pop	{r4, pc}

0800349e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800349e:	b510      	push	{r4, lr}
 80034a0:	2110      	movs	r1, #16
 80034a2:	4604      	mov	r4, r0
 80034a4:	f023 fcb6 	bl	8026e14 <_ZdlPvj>
 80034a8:	4620      	mov	r0, r4
 80034aa:	bd10      	pop	{r4, pc}

080034ac <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80034ac:	b510      	push	{r4, lr}
 80034ae:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80034b2:	4604      	mov	r4, r0
 80034b4:	f023 fcae 	bl	8026e14 <_ZdlPvj>
 80034b8:	4620      	mov	r0, r4
 80034ba:	bd10      	pop	{r4, pc}

080034bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80034bc:	b510      	push	{r4, lr}
 80034be:	2138      	movs	r1, #56	@ 0x38
 80034c0:	4604      	mov	r4, r0
 80034c2:	f023 fca7 	bl	8026e14 <_ZdlPvj>
 80034c6:	4620      	mov	r0, r4
 80034c8:	bd10      	pop	{r4, pc}

080034ca <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80034ca:	b510      	push	{r4, lr}
 80034cc:	2128      	movs	r1, #40	@ 0x28
 80034ce:	4604      	mov	r4, r0
 80034d0:	f023 fca0 	bl	8026e14 <_ZdlPvj>
 80034d4:	4620      	mov	r0, r4
 80034d6:	bd10      	pop	{r4, pc}

080034d8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80034d8:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80034da:	f010 ffc3 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
 80034de:	6803      	ldr	r3, [r0, #0]
    }
 80034e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80034e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80034e6:	4718      	bx	r3

080034e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80034e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80034ea:	4604      	mov	r4, r0
        animationCounter++;
 80034ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80034ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80034f0:	3001      	adds	r0, #1
 80034f2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80034f4:	4298      	cmp	r0, r3
        animationCounter++;
 80034f6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80034f8:	d905      	bls.n	8003506 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80034fa:	2301      	movs	r3, #1
 80034fc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80034fe:	2300      	movs	r3, #0
 8003500:	72a3      	strb	r3, [r4, #10]
    }
 8003502:	b003      	add	sp, #12
 8003504:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003506:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800350a:	2100      	movs	r1, #0
 800350c:	f013 f852 	bl	80165b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003510:	07c3      	lsls	r3, r0, #31
 8003512:	d507      	bpl.n	8003524 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x3c>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003514:	2800      	cmp	r0, #0
 8003516:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800351a:	bfc8      	it	gt
 800351c:	2301      	movgt	r3, #1
 800351e:	fa13 f080 	uxtah	r0, r3, r0
 8003522:	b200      	sxth	r0, r0
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003524:	4b14      	ldr	r3, [pc, #80]	@ (8003578 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>)
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003526:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003528:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800352a:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800352c:	b283      	uxth	r3, r0
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800352e:	4813      	ldr	r0, [pc, #76]	@ (800357c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
 8003530:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003534:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003538:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800353a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800353c:	442b      	add	r3, r5
 800353e:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003540:	b212      	sxth	r2, r2
 8003542:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003546:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003548:	8322      	strh	r2, [r4, #24]
 800354a:	f8ad 2000 	strh.w	r2, [sp]
 800354e:	2200      	movs	r2, #0
 8003550:	691b      	ldr	r3, [r3, #16]
 8003552:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003556:	4669      	mov	r1, sp
 8003558:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800355a:	7aa3      	ldrb	r3, [r4, #10]
 800355c:	2b01      	cmp	r3, #1
 800355e:	d1d0      	bne.n	8003502 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003560:	4b07      	ldr	r3, [pc, #28]	@ (8003580 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
 8003562:	781b      	ldrb	r3, [r3, #0]
 8003564:	2b00      	cmp	r3, #0
 8003566:	d0cc      	beq.n	8003502 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003568:	f010 ff7c 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800356c:	b003      	add	sp, #12
 800356e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003572:	f010 bf7d 	b.w	8014470 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8003576:	bf00      	nop
 8003578:	20013f54 	.word	0x20013f54
 800357c:	20013f56 	.word	0x20013f56
 8003580:	20013f5e 	.word	0x20013f5e

08003584 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003584:	b510      	push	{r4, lr}
 8003586:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003588:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800358c:	b158      	cbz	r0, 80035a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800358e:	6803      	ldr	r3, [r0, #0]
 8003590:	68db      	ldr	r3, [r3, #12]
 8003592:	4798      	blx	r3
 8003594:	b138      	cbz	r0, 80035a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003596:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800359a:	6803      	ldr	r3, [r0, #0]
 800359c:	689b      	ldr	r3, [r3, #8]
 800359e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80035a0:	2300      	movs	r3, #0
 80035a2:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80035a6:	bd10      	pop	{r4, pc}

080035a8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80035a8:	4b04      	ldr	r3, [pc, #16]	@ (80035bc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80035b0:	b10a      	cbz	r2, 80035b6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80035b2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80035b4:	b900      	cbnz	r0, 80035b8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80035b6:	6898      	ldr	r0, [r3, #8]
    }
 80035b8:	4770      	bx	lr
 80035ba:	bf00      	nop
 80035bc:	20013f60 	.word	0x20013f60

080035c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80035c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035c2:	4617      	mov	r7, r2
 80035c4:	4604      	mov	r4, r0
 80035c6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80035c8:	f011 f836 	bl	8014638 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80035cc:	4b12      	ldr	r3, [pc, #72]	@ (8003618 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80035ce:	601c      	str	r4, [r3, #0]
      model(m)
 80035d0:	4b12      	ldr	r3, [pc, #72]	@ (800361c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80035d2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80035d4:	4b12      	ldr	r3, [pc, #72]	@ (8003620 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 80035d6:	2500      	movs	r5, #0
 80035d8:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80035dc:	4b11      	ldr	r3, [pc, #68]	@ (8003624 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80035de:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 80035e2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80035e4:	6803      	ldr	r3, [r0, #0]
 80035e6:	4629      	mov	r1, r5
 80035e8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80035ea:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 80035ee:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80035f2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80035f4:	4628      	mov	r0, r5
 80035f6:	f003 f84b 	bl	8006690 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80035fa:	f7ff ffd5 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 80035fe:	f01b fb06 	bl	801ec0e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003602:	f7ff ffd1 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8003606:	f01b fb7d 	bl	801ed04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800360a:	f7ff ffcd 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800360e:	f01b fb85 	bl	801ed1c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8003612:	4620      	mov	r0, r4
 8003614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003616:	bf00      	nop
 8003618:	20013fb4 	.word	0x20013fb4
 800361c:	0802a644 	.word	0x0802a644
 8003620:	0802a62c 	.word	0x0802a62c
 8003624:	20013f60 	.word	0x20013f60

08003628 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003628:	4b06      	ldr	r3, [pc, #24]	@ (8003644 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x1c>)
 800362a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800362e:	2300      	movs	r3, #0
 8003630:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003634:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003638:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800363c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003640:	4770      	bx	lr
 8003642:	bf00      	nop
 8003644:	08003c7d 	.word	0x08003c7d

08003648 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>:
 8003648:	4b06      	ldr	r3, [pc, #24]	@ (8003664 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv+0x1c>)
 800364a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800364e:	2300      	movs	r3, #0
 8003650:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003654:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003658:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800365c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003660:	4770      	bx	lr
 8003662:	bf00      	nop
 8003664:	080041e5 	.word	0x080041e5

08003668 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>:
 8003668:	4b06      	ldr	r3, [pc, #24]	@ (8003684 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv+0x1c>)
 800366a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800366e:	2300      	movs	r3, #0
 8003670:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardScreen

void FrontendApplicationBase::gotoHardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003674:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003678:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800367c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003680:	4770      	bx	lr
 8003682:	bf00      	nop
 8003684:	08003b31 	.word	0x08003b31

08003688 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>:
 8003688:	4b06      	ldr	r3, [pc, #24]	@ (80036a4 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800368a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800368e:	2300      	movs	r3, #0
 8003690:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardReadyScreen

void FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003694:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003698:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800369c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80036a0:	4770      	bx	lr
 80036a2:	bf00      	nop
 80036a4:	080040ad 	.word	0x080040ad

080036a8 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>:
 80036a8:	4b06      	ldr	r3, [pc, #24]	@ (80036c4 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv+0x1c>)
 80036aa:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80036ae:	2300      	movs	r3, #0
 80036b0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumScreen

void FrontendApplicationBase::gotoMediumScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036b4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80036b8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80036bc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80036c0:	4770      	bx	lr
 80036c2:	bf00      	nop
 80036c4:	080039e5 	.word	0x080039e5

080036c8 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>:
 80036c8:	4b06      	ldr	r3, [pc, #24]	@ (80036e4 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv+0x1c>)
 80036ca:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80036ce:	2300      	movs	r3, #0
 80036d0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumReadyScreen

void FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036d4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80036d8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80036dc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80036e0:	4770      	bx	lr
 80036e2:	bf00      	nop
 80036e4:	08003f71 	.word	0x08003f71

080036e8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>:
 80036e8:	4b06      	ldr	r3, [pc, #24]	@ (8003704 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv+0x1c>)
 80036ea:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80036ee:	2300      	movs	r3, #0
 80036f0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyScreen

void FrontendApplicationBase::gotoEasyScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80036f4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80036f8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80036fc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003700:	4770      	bx	lr
 8003702:	bf00      	nop
 8003704:	08003899 	.word	0x08003899

08003708 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>:
 8003708:	4b06      	ldr	r3, [pc, #24]	@ (8003724 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800370a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800370e:	2300      	movs	r3, #0
 8003710:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyReadyScreen

void FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003714:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003718:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800371c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003720:	4770      	bx	lr
 8003722:	bf00      	nop
 8003724:	08003e35 	.word	0x08003e35

08003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>:
 8003728:	4b06      	ldr	r3, [pc, #24]	@ (8003744 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv+0x1c>)
 800372a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800372e:	2300      	movs	r3, #0
 8003730:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EndScreen

void FrontendApplicationBase::gotoEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003734:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003738:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800373c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003740:	4770      	bx	lr
 8003742:	bf00      	nop
 8003744:	08003751 	.word	0x08003751

08003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003748:	6803      	ldr	r3, [r0, #0]
 800374a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800374c:	4718      	bx	r3
	...

08003750 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl()
{
 8003750:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EndScreenView, EndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003754:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003758:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800375a:	68b0      	ldr	r0, [r6, #8]
 800375c:	6803      	ldr	r3, [r0, #0]
 800375e:	6a1b      	ldr	r3, [r3, #32]
 8003760:	4798      	blx	r3
 8003762:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 8003766:	d205      	bcs.n	8003774 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x24>
 8003768:	4b43      	ldr	r3, [pc, #268]	@ (8003878 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x128>)
 800376a:	4a44      	ldr	r2, [pc, #272]	@ (800387c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 800376c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800376e:	4844      	ldr	r0, [pc, #272]	@ (8003880 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x130>)
 8003770:	f024 fa8c 	bl	8027c8c <__assert_func>
 8003774:	6870      	ldr	r0, [r6, #4]
 8003776:	6803      	ldr	r3, [r0, #0]
 8003778:	6a1b      	ldr	r3, [r3, #32]
 800377a:	4798      	blx	r3
 800377c:	280f      	cmp	r0, #15
 800377e:	d803      	bhi.n	8003788 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x38>
 8003780:	4b40      	ldr	r3, [pc, #256]	@ (8003884 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x134>)
 8003782:	4a3e      	ldr	r2, [pc, #248]	@ (800387c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 8003784:	21a4      	movs	r1, #164	@ 0xa4
 8003786:	e7f2      	b.n	800376e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003788:	68f0      	ldr	r0, [r6, #12]
 800378a:	6803      	ldr	r3, [r0, #0]
 800378c:	6a1b      	ldr	r3, [r3, #32]
 800378e:	4798      	blx	r3
 8003790:	280b      	cmp	r0, #11
 8003792:	d803      	bhi.n	800379c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x4c>
 8003794:	4b3c      	ldr	r3, [pc, #240]	@ (8003888 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x138>)
 8003796:	4a39      	ldr	r2, [pc, #228]	@ (800387c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 8003798:	21a5      	movs	r1, #165	@ 0xa5
 800379a:	e7e8      	b.n	800376e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800379c:	f010 fe62 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037a0:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8003890 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80037a4:	3004      	adds	r0, #4
 80037a6:	f010 feaa 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037aa:	f8d9 0000 	ldr.w	r0, [r9]
 80037ae:	b110      	cbz	r0, 80037b6 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80037b0:	6803      	ldr	r3, [r0, #0]
 80037b2:	68db      	ldr	r3, [r3, #12]
 80037b4:	4798      	blx	r3
    if (*currentTrans)
 80037b6:	f8d9 0000 	ldr.w	r0, [r9]
 80037ba:	b110      	cbz	r0, 80037c2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80037bc:	6803      	ldr	r3, [r0, #0]
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	4798      	blx	r3
    if (*currentScreen)
 80037c2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003894 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x144>
 80037c6:	f8d8 0000 	ldr.w	r0, [r8]
 80037ca:	b110      	cbz	r0, 80037d2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80037cc:	6803      	ldr	r3, [r0, #0]
 80037ce:	695b      	ldr	r3, [r3, #20]
 80037d0:	4798      	blx	r3
    if (*currentPresenter)
 80037d2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037d6:	b110      	cbz	r0, 80037de <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80037d8:	6803      	ldr	r3, [r0, #0]
 80037da:	685b      	ldr	r3, [r3, #4]
 80037dc:	4798      	blx	r3
    if (*currentScreen)
 80037de:	f8d8 0000 	ldr.w	r0, [r8]
 80037e2:	b110      	cbz	r0, 80037ea <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80037e4:	6803      	ldr	r3, [r0, #0]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	4798      	blx	r3
    if (*currentPresenter)
 80037ea:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037ee:	b110      	cbz	r0, 80037f6 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80037f0:	6803      	ldr	r3, [r0, #0]
 80037f2:	689b      	ldr	r3, [r3, #8]
 80037f4:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80037f6:	68f0      	ldr	r0, [r6, #12]
 80037f8:	2100      	movs	r1, #0
 80037fa:	f7ff ffa5 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 80037fe:	f04f 0b00 	mov.w	fp, #0
 8003802:	4b22      	ldr	r3, [pc, #136]	@ (800388c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x13c>)
 8003804:	f8c0 b004 	str.w	fp, [r0, #4]
 8003808:	4604      	mov	r4, r0
 800380a:	f880 b008 	strb.w	fp, [r0, #8]
 800380e:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003810:	68b0      	ldr	r0, [r6, #8]
 8003812:	6803      	ldr	r3, [r0, #0]
 8003814:	4659      	mov	r1, fp
 8003816:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003818:	4798      	blx	r3
 800381a:	4605      	mov	r5, r0
 800381c:	f003 fbee 	bl	8006ffc <_ZN13EndScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003820:	6870      	ldr	r0, [r6, #4]
 8003822:	6803      	ldr	r3, [r0, #0]
 8003824:	4659      	mov	r1, fp
 8003826:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003828:	4798      	blx	r3
 800382a:	4629      	mov	r1, r5
 800382c:	4606      	mov	r6, r0
 800382e:	f003 fbc1 	bl	8006fb4 <_ZN18EndScreenPresenterC1ER13EndScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8003832:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003834:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003838:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800383c:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8003840:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003844:	682b      	ldr	r3, [r5, #0]
    virtual void movePaddle2Right() {}
    virtual void paddle1Action() {}
    virtual void paddle2Action() {}
    void bind(Model* m)
    {
        model = m;
 8003846:	f8c6 a008 	str.w	sl, [r6, #8]
 800384a:	4628      	mov	r0, r5
 800384c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800384e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003850:	4798      	blx	r3
    newPresenter->activate();
 8003852:	6833      	ldr	r3, [r6, #0]
 8003854:	4630      	mov	r0, r6
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800385a:	4621      	mov	r1, r4
 800385c:	4628      	mov	r0, r5
 800385e:	f012 fea3 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003862:	6823      	ldr	r3, [r4, #0]
 8003864:	4620      	mov	r0, r4
 8003866:	691b      	ldr	r3, [r3, #16]
 8003868:	4798      	blx	r3
    newTransition->invalidate();
 800386a:	6823      	ldr	r3, [r4, #0]
 800386c:	695b      	ldr	r3, [r3, #20]
 800386e:	4620      	mov	r0, r4
}
 8003870:	b001      	add	sp, #4
 8003872:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003876:	4718      	bx	r3
 8003878:	08029382 	.word	0x08029382
 800387c:	08029410 	.word	0x08029410
 8003880:	080294e6 	.word	0x080294e6
 8003884:	0802952d 	.word	0x0802952d
 8003888:	080295d0 	.word	0x080295d0
 800388c:	0802a698 	.word	0x0802a698
 8003890:	20013fa8 	.word	0x20013fa8
 8003894:	20013fa4 	.word	0x20013fa4

08003898 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv>:
{
 8003898:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EasyScreenView, EasyScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800389c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80038a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80038a2:	68b0      	ldr	r0, [r6, #8]
 80038a4:	6803      	ldr	r3, [r0, #0]
 80038a6:	6a1b      	ldr	r3, [r3, #32]
 80038a8:	4798      	blx	r3
 80038aa:	f241 53db 	movw	r3, #5595	@ 0x15db
 80038ae:	4298      	cmp	r0, r3
 80038b0:	d805      	bhi.n	80038be <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x26>
 80038b2:	4b44      	ldr	r3, [pc, #272]	@ (80039c4 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x12c>)
 80038b4:	4a44      	ldr	r2, [pc, #272]	@ (80039c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80038b6:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038b8:	4844      	ldr	r0, [pc, #272]	@ (80039cc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x134>)
 80038ba:	f024 f9e7 	bl	8027c8c <__assert_func>
 80038be:	6870      	ldr	r0, [r6, #4]
 80038c0:	6803      	ldr	r3, [r0, #0]
 80038c2:	6a1b      	ldr	r3, [r3, #32]
 80038c4:	4798      	blx	r3
 80038c6:	280f      	cmp	r0, #15
 80038c8:	d803      	bhi.n	80038d2 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x3a>
 80038ca:	4b41      	ldr	r3, [pc, #260]	@ (80039d0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x138>)
 80038cc:	4a3e      	ldr	r2, [pc, #248]	@ (80039c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80038ce:	21a4      	movs	r1, #164	@ 0xa4
 80038d0:	e7f2      	b.n	80038b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038d2:	68f0      	ldr	r0, [r6, #12]
 80038d4:	6803      	ldr	r3, [r0, #0]
 80038d6:	6a1b      	ldr	r3, [r3, #32]
 80038d8:	4798      	blx	r3
 80038da:	280b      	cmp	r0, #11
 80038dc:	d803      	bhi.n	80038e6 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x4e>
 80038de:	4b3d      	ldr	r3, [pc, #244]	@ (80039d4 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x13c>)
 80038e0:	4a39      	ldr	r2, [pc, #228]	@ (80039c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80038e2:	21a5      	movs	r1, #165	@ 0xa5
 80038e4:	e7e8      	b.n	80038b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80038e6:	f010 fdbd 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80038ea:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80039dc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x144>
 80038ee:	3004      	adds	r0, #4
 80038f0:	f010 fe05 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80038f4:	f8d9 0000 	ldr.w	r0, [r9]
 80038f8:	b110      	cbz	r0, 8003900 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	68db      	ldr	r3, [r3, #12]
 80038fe:	4798      	blx	r3
    if (*currentTrans)
 8003900:	f8d9 0000 	ldr.w	r0, [r9]
 8003904:	b110      	cbz	r0, 800390c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003906:	6803      	ldr	r3, [r0, #0]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	4798      	blx	r3
    if (*currentScreen)
 800390c:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80039e0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x148>
 8003910:	f8d8 0000 	ldr.w	r0, [r8]
 8003914:	b110      	cbz	r0, 800391c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003916:	6803      	ldr	r3, [r0, #0]
 8003918:	695b      	ldr	r3, [r3, #20]
 800391a:	4798      	blx	r3
    if (*currentPresenter)
 800391c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003920:	b110      	cbz	r0, 8003928 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003922:	6803      	ldr	r3, [r0, #0]
 8003924:	685b      	ldr	r3, [r3, #4]
 8003926:	4798      	blx	r3
    if (*currentScreen)
 8003928:	f8d8 0000 	ldr.w	r0, [r8]
 800392c:	b110      	cbz	r0, 8003934 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	4798      	blx	r3
    if (*currentPresenter)
 8003934:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003938:	b110      	cbz	r0, 8003940 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800393a:	6803      	ldr	r3, [r0, #0]
 800393c:	689b      	ldr	r3, [r3, #8]
 800393e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003940:	68f0      	ldr	r0, [r6, #12]
 8003942:	2100      	movs	r1, #0
 8003944:	f7ff ff00 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003948:	f04f 0b00 	mov.w	fp, #0
 800394c:	4b22      	ldr	r3, [pc, #136]	@ (80039d8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x140>)
 800394e:	f8c0 b004 	str.w	fp, [r0, #4]
 8003952:	4604      	mov	r4, r0
 8003954:	f880 b008 	strb.w	fp, [r0, #8]
 8003958:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800395a:	68b0      	ldr	r0, [r6, #8]
 800395c:	6803      	ldr	r3, [r0, #0]
 800395e:	4659      	mov	r1, fp
 8003960:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003962:	4798      	blx	r3
 8003964:	4605      	mov	r5, r0
 8003966:	f002 ffd9 	bl	800691c <_ZN14EasyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800396a:	6870      	ldr	r0, [r6, #4]
 800396c:	6803      	ldr	r3, [r0, #0]
 800396e:	4659      	mov	r1, fp
 8003970:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003972:	4798      	blx	r3
 8003974:	4629      	mov	r1, r5
 8003976:	4606      	mov	r6, r0
 8003978:	f002 ffa4 	bl	80068c4 <_ZN19EasyScreenPresenterC1ER14EasyScreenView>
    model->bind(newPresenter);
 800397c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800397e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003982:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003986:	f8c8 5000 	str.w	r5, [r8]
 800398a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800398e:	682b      	ldr	r3, [r5, #0]
 8003990:	f8c6 a008 	str.w	sl, [r6, #8]
 8003994:	4628      	mov	r0, r5
 8003996:	68db      	ldr	r3, [r3, #12]
 8003998:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800399a:	4798      	blx	r3
    newPresenter->activate();
 800399c:	6833      	ldr	r3, [r6, #0]
 800399e:	4630      	mov	r0, r6
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80039a4:	4621      	mov	r1, r4
 80039a6:	4628      	mov	r0, r5
 80039a8:	f012 fdfe 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039ac:	6823      	ldr	r3, [r4, #0]
 80039ae:	4620      	mov	r0, r4
 80039b0:	691b      	ldr	r3, [r3, #16]
 80039b2:	4798      	blx	r3
    newTransition->invalidate();
 80039b4:	6823      	ldr	r3, [r4, #0]
 80039b6:	695b      	ldr	r3, [r3, #20]
 80039b8:	4620      	mov	r0, r4
}
 80039ba:	b001      	add	sp, #4
 80039bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039c0:	4718      	bx	r3
 80039c2:	bf00      	nop
 80039c4:	08029382 	.word	0x08029382
 80039c8:	08029673 	.word	0x08029673
 80039cc:	080294e6 	.word	0x080294e6
 80039d0:	0802952d 	.word	0x0802952d
 80039d4:	080295d0 	.word	0x080295d0
 80039d8:	0802a698 	.word	0x0802a698
 80039dc:	20013fa8 	.word	0x20013fa8
 80039e0:	20013fa4 	.word	0x20013fa4

080039e4 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv>:
{
 80039e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MediumScreenView, MediumScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80039ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039ee:	68b0      	ldr	r0, [r6, #8]
 80039f0:	6803      	ldr	r3, [r0, #0]
 80039f2:	6a1b      	ldr	r3, [r3, #32]
 80039f4:	4798      	blx	r3
 80039f6:	f241 6343 	movw	r3, #5699	@ 0x1643
 80039fa:	4298      	cmp	r0, r3
 80039fc:	d805      	bhi.n	8003a0a <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x26>
 80039fe:	4b44      	ldr	r3, [pc, #272]	@ (8003b10 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x12c>)
 8003a00:	4a44      	ldr	r2, [pc, #272]	@ (8003b14 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8003a02:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a04:	4844      	ldr	r0, [pc, #272]	@ (8003b18 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x134>)
 8003a06:	f024 f941 	bl	8027c8c <__assert_func>
 8003a0a:	6870      	ldr	r0, [r6, #4]
 8003a0c:	6803      	ldr	r3, [r0, #0]
 8003a0e:	6a1b      	ldr	r3, [r3, #32]
 8003a10:	4798      	blx	r3
 8003a12:	280f      	cmp	r0, #15
 8003a14:	d803      	bhi.n	8003a1e <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x3a>
 8003a16:	4b41      	ldr	r3, [pc, #260]	@ (8003b1c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x138>)
 8003a18:	4a3e      	ldr	r2, [pc, #248]	@ (8003b14 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8003a1a:	21a4      	movs	r1, #164	@ 0xa4
 8003a1c:	e7f2      	b.n	8003a04 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a1e:	68f0      	ldr	r0, [r6, #12]
 8003a20:	6803      	ldr	r3, [r0, #0]
 8003a22:	6a1b      	ldr	r3, [r3, #32]
 8003a24:	4798      	blx	r3
 8003a26:	280b      	cmp	r0, #11
 8003a28:	d803      	bhi.n	8003a32 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x4e>
 8003a2a:	4b3d      	ldr	r3, [pc, #244]	@ (8003b20 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x13c>)
 8003a2c:	4a39      	ldr	r2, [pc, #228]	@ (8003b14 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 8003a2e:	21a5      	movs	r1, #165	@ 0xa5
 8003a30:	e7e8      	b.n	8003a04 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003a32:	f010 fd17 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a36:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003b28 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x144>
 8003a3a:	3004      	adds	r0, #4
 8003a3c:	f010 fd5f 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a40:	f8d9 0000 	ldr.w	r0, [r9]
 8003a44:	b110      	cbz	r0, 8003a4c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003a46:	6803      	ldr	r3, [r0, #0]
 8003a48:	68db      	ldr	r3, [r3, #12]
 8003a4a:	4798      	blx	r3
    if (*currentTrans)
 8003a4c:	f8d9 0000 	ldr.w	r0, [r9]
 8003a50:	b110      	cbz	r0, 8003a58 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003a52:	6803      	ldr	r3, [r0, #0]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	4798      	blx	r3
    if (*currentScreen)
 8003a58:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003b2c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x148>
 8003a5c:	f8d8 0000 	ldr.w	r0, [r8]
 8003a60:	b110      	cbz	r0, 8003a68 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003a62:	6803      	ldr	r3, [r0, #0]
 8003a64:	695b      	ldr	r3, [r3, #20]
 8003a66:	4798      	blx	r3
    if (*currentPresenter)
 8003a68:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003a6c:	b110      	cbz	r0, 8003a74 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	685b      	ldr	r3, [r3, #4]
 8003a72:	4798      	blx	r3
    if (*currentScreen)
 8003a74:	f8d8 0000 	ldr.w	r0, [r8]
 8003a78:	b110      	cbz	r0, 8003a80 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003a7a:	6803      	ldr	r3, [r0, #0]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4798      	blx	r3
    if (*currentPresenter)
 8003a80:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003a84:	b110      	cbz	r0, 8003a8c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003a86:	6803      	ldr	r3, [r0, #0]
 8003a88:	689b      	ldr	r3, [r3, #8]
 8003a8a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a8c:	68f0      	ldr	r0, [r6, #12]
 8003a8e:	2100      	movs	r1, #0
 8003a90:	f7ff fe5a 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003a94:	f04f 0b00 	mov.w	fp, #0
 8003a98:	4b22      	ldr	r3, [pc, #136]	@ (8003b24 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x140>)
 8003a9a:	f8c0 b004 	str.w	fp, [r0, #4]
 8003a9e:	4604      	mov	r4, r0
 8003aa0:	f880 b008 	strb.w	fp, [r0, #8]
 8003aa4:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003aa6:	68b0      	ldr	r0, [r6, #8]
 8003aa8:	6803      	ldr	r3, [r0, #0]
 8003aaa:	4659      	mov	r1, fp
 8003aac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003aae:	4798      	blx	r3
 8003ab0:	4605      	mov	r5, r0
 8003ab2:	f004 f9bf 	bl	8007e34 <_ZN16MediumScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ab6:	6870      	ldr	r0, [r6, #4]
 8003ab8:	6803      	ldr	r3, [r0, #0]
 8003aba:	4659      	mov	r1, fp
 8003abc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003abe:	4798      	blx	r3
 8003ac0:	4629      	mov	r1, r5
 8003ac2:	4606      	mov	r6, r0
 8003ac4:	f004 f98a 	bl	8007ddc <_ZN21MediumScreenPresenterC1ER16MediumScreenView>
    model->bind(newPresenter);
 8003ac8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003aca:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003ace:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003ad2:	f8c8 5000 	str.w	r5, [r8]
 8003ad6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ada:	682b      	ldr	r3, [r5, #0]
 8003adc:	f8c6 a008 	str.w	sl, [r6, #8]
 8003ae0:	4628      	mov	r0, r5
 8003ae2:	68db      	ldr	r3, [r3, #12]
 8003ae4:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003ae6:	4798      	blx	r3
    newPresenter->activate();
 8003ae8:	6833      	ldr	r3, [r6, #0]
 8003aea:	4630      	mov	r0, r6
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003af0:	4621      	mov	r1, r4
 8003af2:	4628      	mov	r0, r5
 8003af4:	f012 fd58 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003af8:	6823      	ldr	r3, [r4, #0]
 8003afa:	4620      	mov	r0, r4
 8003afc:	691b      	ldr	r3, [r3, #16]
 8003afe:	4798      	blx	r3
    newTransition->invalidate();
 8003b00:	6823      	ldr	r3, [r4, #0]
 8003b02:	695b      	ldr	r3, [r3, #20]
 8003b04:	4620      	mov	r0, r4
}
 8003b06:	b001      	add	sp, #4
 8003b08:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b0c:	4718      	bx	r3
 8003b0e:	bf00      	nop
 8003b10:	08029382 	.word	0x08029382
 8003b14:	0802974b 	.word	0x0802974b
 8003b18:	080294e6 	.word	0x080294e6
 8003b1c:	0802952d 	.word	0x0802952d
 8003b20:	080295d0 	.word	0x080295d0
 8003b24:	0802a698 	.word	0x0802a698
 8003b28:	20013fa8 	.word	0x20013fa8
 8003b2c:	20013fa4 	.word	0x20013fa4

08003b30 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv>:
{
 8003b30:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HardScreenView, HardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b34:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003b38:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b3a:	68b0      	ldr	r0, [r6, #8]
 8003b3c:	6803      	ldr	r3, [r0, #0]
 8003b3e:	6a1b      	ldr	r3, [r3, #32]
 8003b40:	4798      	blx	r3
 8003b42:	f241 63f3 	movw	r3, #5875	@ 0x16f3
 8003b46:	4298      	cmp	r0, r3
 8003b48:	d805      	bhi.n	8003b56 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x26>
 8003b4a:	4b44      	ldr	r3, [pc, #272]	@ (8003c5c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x12c>)
 8003b4c:	4a44      	ldr	r2, [pc, #272]	@ (8003c60 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8003b4e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b50:	4844      	ldr	r0, [pc, #272]	@ (8003c64 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x134>)
 8003b52:	f024 f89b 	bl	8027c8c <__assert_func>
 8003b56:	6870      	ldr	r0, [r6, #4]
 8003b58:	6803      	ldr	r3, [r0, #0]
 8003b5a:	6a1b      	ldr	r3, [r3, #32]
 8003b5c:	4798      	blx	r3
 8003b5e:	280f      	cmp	r0, #15
 8003b60:	d803      	bhi.n	8003b6a <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x3a>
 8003b62:	4b41      	ldr	r3, [pc, #260]	@ (8003c68 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x138>)
 8003b64:	4a3e      	ldr	r2, [pc, #248]	@ (8003c60 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8003b66:	21a4      	movs	r1, #164	@ 0xa4
 8003b68:	e7f2      	b.n	8003b50 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b6a:	68f0      	ldr	r0, [r6, #12]
 8003b6c:	6803      	ldr	r3, [r0, #0]
 8003b6e:	6a1b      	ldr	r3, [r3, #32]
 8003b70:	4798      	blx	r3
 8003b72:	280b      	cmp	r0, #11
 8003b74:	d803      	bhi.n	8003b7e <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x4e>
 8003b76:	4b3d      	ldr	r3, [pc, #244]	@ (8003c6c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x13c>)
 8003b78:	4a39      	ldr	r2, [pc, #228]	@ (8003c60 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8003b7a:	21a5      	movs	r1, #165	@ 0xa5
 8003b7c:	e7e8      	b.n	8003b50 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003b7e:	f010 fc71 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b82:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003c74 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x144>
 8003b86:	3004      	adds	r0, #4
 8003b88:	f010 fcb9 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b8c:	f8d9 0000 	ldr.w	r0, [r9]
 8003b90:	b110      	cbz	r0, 8003b98 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003b92:	6803      	ldr	r3, [r0, #0]
 8003b94:	68db      	ldr	r3, [r3, #12]
 8003b96:	4798      	blx	r3
    if (*currentTrans)
 8003b98:	f8d9 0000 	ldr.w	r0, [r9]
 8003b9c:	b110      	cbz	r0, 8003ba4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003b9e:	6803      	ldr	r3, [r0, #0]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	4798      	blx	r3
    if (*currentScreen)
 8003ba4:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003c78 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x148>
 8003ba8:	f8d8 0000 	ldr.w	r0, [r8]
 8003bac:	b110      	cbz	r0, 8003bb4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003bae:	6803      	ldr	r3, [r0, #0]
 8003bb0:	695b      	ldr	r3, [r3, #20]
 8003bb2:	4798      	blx	r3
    if (*currentPresenter)
 8003bb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003bb8:	b110      	cbz	r0, 8003bc0 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003bba:	6803      	ldr	r3, [r0, #0]
 8003bbc:	685b      	ldr	r3, [r3, #4]
 8003bbe:	4798      	blx	r3
    if (*currentScreen)
 8003bc0:	f8d8 0000 	ldr.w	r0, [r8]
 8003bc4:	b110      	cbz	r0, 8003bcc <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003bc6:	6803      	ldr	r3, [r0, #0]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	4798      	blx	r3
    if (*currentPresenter)
 8003bcc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003bd0:	b110      	cbz	r0, 8003bd8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003bd2:	6803      	ldr	r3, [r0, #0]
 8003bd4:	689b      	ldr	r3, [r3, #8]
 8003bd6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003bd8:	68f0      	ldr	r0, [r6, #12]
 8003bda:	2100      	movs	r1, #0
 8003bdc:	f7ff fdb4 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003be0:	f04f 0b00 	mov.w	fp, #0
 8003be4:	4b22      	ldr	r3, [pc, #136]	@ (8003c70 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x140>)
 8003be6:	f8c0 b004 	str.w	fp, [r0, #4]
 8003bea:	4604      	mov	r4, r0
 8003bec:	f880 b008 	strb.w	fp, [r0, #8]
 8003bf0:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003bf2:	68b0      	ldr	r0, [r6, #8]
 8003bf4:	6803      	ldr	r3, [r0, #0]
 8003bf6:	4659      	mov	r1, fp
 8003bf8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003bfa:	4798      	blx	r3
 8003bfc:	4605      	mov	r5, r0
 8003bfe:	f003 fb1d 	bl	800723c <_ZN14HardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c02:	6870      	ldr	r0, [r6, #4]
 8003c04:	6803      	ldr	r3, [r0, #0]
 8003c06:	4659      	mov	r1, fp
 8003c08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c0a:	4798      	blx	r3
 8003c0c:	4629      	mov	r1, r5
 8003c0e:	4606      	mov	r6, r0
 8003c10:	f003 fae8 	bl	80071e4 <_ZN19HardScreenPresenterC1ER14HardScreenView>
    model->bind(newPresenter);
 8003c14:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003c16:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003c1a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003c1e:	f8c8 5000 	str.w	r5, [r8]
 8003c22:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c26:	682b      	ldr	r3, [r5, #0]
 8003c28:	f8c6 a008 	str.w	sl, [r6, #8]
 8003c2c:	4628      	mov	r0, r5
 8003c2e:	68db      	ldr	r3, [r3, #12]
 8003c30:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003c32:	4798      	blx	r3
    newPresenter->activate();
 8003c34:	6833      	ldr	r3, [r6, #0]
 8003c36:	4630      	mov	r0, r6
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c3c:	4621      	mov	r1, r4
 8003c3e:	4628      	mov	r0, r5
 8003c40:	f012 fcb2 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c44:	6823      	ldr	r3, [r4, #0]
 8003c46:	4620      	mov	r0, r4
 8003c48:	691b      	ldr	r3, [r3, #16]
 8003c4a:	4798      	blx	r3
    newTransition->invalidate();
 8003c4c:	6823      	ldr	r3, [r4, #0]
 8003c4e:	695b      	ldr	r3, [r3, #20]
 8003c50:	4620      	mov	r0, r4
}
 8003c52:	b001      	add	sp, #4
 8003c54:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c58:	4718      	bx	r3
 8003c5a:	bf00      	nop
 8003c5c:	08029382 	.word	0x08029382
 8003c60:	08029827 	.word	0x08029827
 8003c64:	080294e6 	.word	0x080294e6
 8003c68:	0802952d 	.word	0x0802952d
 8003c6c:	080295d0 	.word	0x080295d0
 8003c70:	0802a698 	.word	0x0802a698
 8003c74:	20013fa8 	.word	0x20013fa8
 8003c78:	20013fa4 	.word	0x20013fa4

08003c7c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
 8003c7c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003c80:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003c84:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003c86:	68b0      	ldr	r0, [r6, #8]
 8003c88:	6803      	ldr	r3, [r0, #0]
 8003c8a:	6a1b      	ldr	r3, [r3, #32]
 8003c8c:	4798      	blx	r3
 8003c8e:	f641 037b 	movw	r3, #6267	@ 0x187b
 8003c92:	4298      	cmp	r0, r3
 8003c94:	d805      	bhi.n	8003ca2 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x26>
 8003c96:	4b44      	ldr	r3, [pc, #272]	@ (8003da8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>)
 8003c98:	4a44      	ldr	r2, [pc, #272]	@ (8003dac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 8003c9a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003c9c:	4844      	ldr	r0, [pc, #272]	@ (8003db0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x134>)
 8003c9e:	f023 fff5 	bl	8027c8c <__assert_func>
 8003ca2:	6870      	ldr	r0, [r6, #4]
 8003ca4:	6803      	ldr	r3, [r0, #0]
 8003ca6:	6a1b      	ldr	r3, [r3, #32]
 8003ca8:	4798      	blx	r3
 8003caa:	280f      	cmp	r0, #15
 8003cac:	d803      	bhi.n	8003cb6 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x3a>
 8003cae:	4b41      	ldr	r3, [pc, #260]	@ (8003db4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x138>)
 8003cb0:	4a3e      	ldr	r2, [pc, #248]	@ (8003dac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 8003cb2:	21a4      	movs	r1, #164	@ 0xa4
 8003cb4:	e7f2      	b.n	8003c9c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003cb6:	68f0      	ldr	r0, [r6, #12]
 8003cb8:	6803      	ldr	r3, [r0, #0]
 8003cba:	6a1b      	ldr	r3, [r3, #32]
 8003cbc:	4798      	blx	r3
 8003cbe:	280b      	cmp	r0, #11
 8003cc0:	d803      	bhi.n	8003cca <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x4e>
 8003cc2:	4b3d      	ldr	r3, [pc, #244]	@ (8003db8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x13c>)
 8003cc4:	4a39      	ldr	r2, [pc, #228]	@ (8003dac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 8003cc6:	21a5      	movs	r1, #165	@ 0xa5
 8003cc8:	e7e8      	b.n	8003c9c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003cca:	f010 fbcb 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003cce:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8003dc0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x144>
 8003cd2:	3004      	adds	r0, #4
 8003cd4:	f010 fc13 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003cd8:	f8d9 0000 	ldr.w	r0, [r9]
 8003cdc:	b110      	cbz	r0, 8003ce4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003cde:	6803      	ldr	r3, [r0, #0]
 8003ce0:	68db      	ldr	r3, [r3, #12]
 8003ce2:	4798      	blx	r3
    if (*currentTrans)
 8003ce4:	f8d9 0000 	ldr.w	r0, [r9]
 8003ce8:	b110      	cbz	r0, 8003cf0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003cea:	6803      	ldr	r3, [r0, #0]
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	4798      	blx	r3
    if (*currentScreen)
 8003cf0:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003dc4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
 8003cf4:	f8d8 0000 	ldr.w	r0, [r8]
 8003cf8:	b110      	cbz	r0, 8003d00 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003cfa:	6803      	ldr	r3, [r0, #0]
 8003cfc:	695b      	ldr	r3, [r3, #20]
 8003cfe:	4798      	blx	r3
    if (*currentPresenter)
 8003d00:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003d04:	b110      	cbz	r0, 8003d0c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d06:	6803      	ldr	r3, [r0, #0]
 8003d08:	685b      	ldr	r3, [r3, #4]
 8003d0a:	4798      	blx	r3
    if (*currentScreen)
 8003d0c:	f8d8 0000 	ldr.w	r0, [r8]
 8003d10:	b110      	cbz	r0, 8003d18 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d12:	6803      	ldr	r3, [r0, #0]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	4798      	blx	r3
    if (*currentPresenter)
 8003d18:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003d1c:	b110      	cbz	r0, 8003d24 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d1e:	6803      	ldr	r3, [r0, #0]
 8003d20:	689b      	ldr	r3, [r3, #8]
 8003d22:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d24:	68f0      	ldr	r0, [r6, #12]
 8003d26:	2100      	movs	r1, #0
 8003d28:	f7ff fd0e 	bl	8003748 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003d2c:	f04f 0b00 	mov.w	fp, #0
 8003d30:	4b22      	ldr	r3, [pc, #136]	@ (8003dbc <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>)
 8003d32:	f8c0 b004 	str.w	fp, [r0, #4]
 8003d36:	4604      	mov	r4, r0
 8003d38:	f880 b008 	strb.w	fp, [r0, #8]
 8003d3c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d3e:	68b0      	ldr	r0, [r6, #8]
 8003d40:	6803      	ldr	r3, [r0, #0]
 8003d42:	4659      	mov	r1, fp
 8003d44:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d46:	4798      	blx	r3
 8003d48:	4605      	mov	r5, r0
 8003d4a:	f004 fc29 	bl	80085a0 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d4e:	6870      	ldr	r0, [r6, #4]
 8003d50:	6803      	ldr	r3, [r0, #0]
 8003d52:	4659      	mov	r1, fp
 8003d54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d56:	4798      	blx	r3
 8003d58:	4629      	mov	r1, r5
 8003d5a:	4606      	mov	r6, r0
 8003d5c:	f004 fbfe 	bl	800855c <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 8003d60:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003d62:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003d66:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003d6a:	f8c8 5000 	str.w	r5, [r8]
 8003d6e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003d72:	682b      	ldr	r3, [r5, #0]
 8003d74:	f8c6 a008 	str.w	sl, [r6, #8]
 8003d78:	4628      	mov	r0, r5
 8003d7a:	68db      	ldr	r3, [r3, #12]
 8003d7c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003d7e:	4798      	blx	r3
    newPresenter->activate();
 8003d80:	6833      	ldr	r3, [r6, #0]
 8003d82:	4630      	mov	r0, r6
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003d88:	4621      	mov	r1, r4
 8003d8a:	4628      	mov	r0, r5
 8003d8c:	f012 fc0c 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003d90:	6823      	ldr	r3, [r4, #0]
 8003d92:	4620      	mov	r0, r4
 8003d94:	691b      	ldr	r3, [r3, #16]
 8003d96:	4798      	blx	r3
    newTransition->invalidate();
 8003d98:	6823      	ldr	r3, [r4, #0]
 8003d9a:	695b      	ldr	r3, [r3, #20]
 8003d9c:	4620      	mov	r0, r4
}
 8003d9e:	b001      	add	sp, #4
 8003da0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003da4:	4718      	bx	r3
 8003da6:	bf00      	nop
 8003da8:	08029382 	.word	0x08029382
 8003dac:	080298ff 	.word	0x080298ff
 8003db0:	080294e6 	.word	0x080294e6
 8003db4:	0802952d 	.word	0x0802952d
 8003db8:	080295d0 	.word	0x080295d0
 8003dbc:	0802a698 	.word	0x0802a698
 8003dc0:	20013fa8 	.word	0x20013fa8
 8003dc4:	20013fa4 	.word	0x20013fa4

08003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003dc8:	6803      	ldr	r3, [r0, #0]
 8003dca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dcc:	4718      	bx	r3
	...

08003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
 8003dd0:	2300      	movs	r3, #0
    WipeTransition(const uint8_t transitionSteps = 20)
 8003dd2:	b570      	push	{r4, r5, r6, lr}
          solid()
 8003dd4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8003dd8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8003ddc:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 8003de0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8003de4:	6043      	str	r3, [r0, #4]
 8003de6:	7203      	strb	r3, [r0, #8]
          animationCounter(0),
 8003de8:	7283      	strb	r3, [r0, #10]
          calculatedValue(0),
 8003dea:	81c3      	strh	r3, [r0, #14]
          solid()
 8003dec:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003df0:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 8003df2:	4b0c      	ldr	r3, [pc, #48]	@ (8003e24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8003df4:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8003df6:	4b0c      	ldr	r3, [pc, #48]	@ (8003e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
          animationSteps(transitionSteps),
 8003df8:	7241      	strb	r1, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
 8003dfa:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003dfe:	4b0b      	ldr	r3, [pc, #44]	@ (8003e2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
          solid()
 8003e00:	4a0b      	ldr	r2, [pc, #44]	@ (8003e30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e02:	f9b3 6000 	ldrsh.w	r6, [r3]
          solid()
 8003e06:	6002      	str	r2, [r0, #0]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e08:	f100 0510 	add.w	r5, r0, #16
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e0c:	4604      	mov	r4, r0
            targetValue = HAL::DISPLAY_WIDTH;
 8003e0e:	8181      	strh	r1, [r0, #12]
        setWidth(width);
 8003e10:	4628      	mov	r0, r5
 8003e12:	f7fd fa73 	bl	80012fc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003e16:	4628      	mov	r0, r5
 8003e18:	4631      	mov	r1, r6
 8003e1a:	f7fd fa71 	bl	8001300 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 8003e1e:	4620      	mov	r0, r4
 8003e20:	bd70      	pop	{r4, r5, r6, pc}
 8003e22:	bf00      	nop
 8003e24:	0802a5c4 	.word	0x0802a5c4
 8003e28:	20013f54 	.word	0x20013f54
 8003e2c:	20013f56 	.word	0x20013f56
 8003e30:	0802a6bc 	.word	0x0802a6bc

08003e34 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv>:
{
 8003e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<EasyReadyScreenView, EasyReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e38:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003e3c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e3e:	68b0      	ldr	r0, [r6, #8]
 8003e40:	6803      	ldr	r3, [r0, #0]
 8003e42:	6a1b      	ldr	r3, [r3, #32]
 8003e44:	4798      	blx	r3
 8003e46:	f241 53bb 	movw	r3, #5563	@ 0x15bb
 8003e4a:	4298      	cmp	r0, r3
 8003e4c:	d805      	bhi.n	8003e5a <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8003e4e:	4b41      	ldr	r3, [pc, #260]	@ (8003f54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8003e50:	4a41      	ldr	r2, [pc, #260]	@ (8003f58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003e52:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e54:	4841      	ldr	r0, [pc, #260]	@ (8003f5c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8003e56:	f023 ff19 	bl	8027c8c <__assert_func>
 8003e5a:	6870      	ldr	r0, [r6, #4]
 8003e5c:	6803      	ldr	r3, [r0, #0]
 8003e5e:	6a1b      	ldr	r3, [r3, #32]
 8003e60:	4798      	blx	r3
 8003e62:	280f      	cmp	r0, #15
 8003e64:	d803      	bhi.n	8003e6e <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8003e66:	4b3e      	ldr	r3, [pc, #248]	@ (8003f60 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8003e68:	4a3b      	ldr	r2, [pc, #236]	@ (8003f58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003e6a:	21a4      	movs	r1, #164	@ 0xa4
 8003e6c:	e7f2      	b.n	8003e54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e6e:	68f0      	ldr	r0, [r6, #12]
 8003e70:	6803      	ldr	r3, [r0, #0]
 8003e72:	6a1b      	ldr	r3, [r3, #32]
 8003e74:	4798      	blx	r3
 8003e76:	2837      	cmp	r0, #55	@ 0x37
 8003e78:	d803      	bhi.n	8003e82 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8003e7a:	4b3a      	ldr	r3, [pc, #232]	@ (8003f64 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8003e7c:	4a36      	ldr	r2, [pc, #216]	@ (8003f58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003e7e:	21a5      	movs	r1, #165	@ 0xa5
 8003e80:	e7e8      	b.n	8003e54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003e82:	f010 faef 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e86:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8003f68 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8003e8a:	3004      	adds	r0, #4
 8003e8c:	f010 fb37 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e90:	f8d9 0000 	ldr.w	r0, [r9]
 8003e94:	b110      	cbz	r0, 8003e9c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003e96:	6803      	ldr	r3, [r0, #0]
 8003e98:	68db      	ldr	r3, [r3, #12]
 8003e9a:	4798      	blx	r3
    if (*currentTrans)
 8003e9c:	f8d9 0000 	ldr.w	r0, [r9]
 8003ea0:	b110      	cbz	r0, 8003ea8 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003ea2:	6803      	ldr	r3, [r0, #0]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	4798      	blx	r3
    if (*currentScreen)
 8003ea8:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8003f6c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8003eac:	f8d8 0000 	ldr.w	r0, [r8]
 8003eb0:	b110      	cbz	r0, 8003eb8 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003eb2:	6803      	ldr	r3, [r0, #0]
 8003eb4:	695b      	ldr	r3, [r3, #20]
 8003eb6:	4798      	blx	r3
    if (*currentPresenter)
 8003eb8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ebc:	b110      	cbz	r0, 8003ec4 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003ebe:	6803      	ldr	r3, [r0, #0]
 8003ec0:	685b      	ldr	r3, [r3, #4]
 8003ec2:	4798      	blx	r3
    if (*currentScreen)
 8003ec4:	f8d8 0000 	ldr.w	r0, [r8]
 8003ec8:	b110      	cbz	r0, 8003ed0 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003eca:	6803      	ldr	r3, [r0, #0]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	4798      	blx	r3
    if (*currentPresenter)
 8003ed0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ed4:	b110      	cbz	r0, 8003edc <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003ed6:	6803      	ldr	r3, [r0, #0]
 8003ed8:	689b      	ldr	r3, [r3, #8]
 8003eda:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003edc:	68f0      	ldr	r0, [r6, #12]
 8003ede:	2100      	movs	r1, #0
 8003ee0:	f7ff ff72 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003ee4:	2114      	movs	r1, #20
 8003ee6:	4604      	mov	r4, r0
 8003ee8:	f7ff ff72 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003eec:	68b0      	ldr	r0, [r6, #8]
 8003eee:	6803      	ldr	r3, [r0, #0]
 8003ef0:	2100      	movs	r1, #0
 8003ef2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ef4:	4798      	blx	r3
 8003ef6:	4605      	mov	r5, r0
 8003ef8:	f002 fc86 	bl	8006808 <_ZN19EasyReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003efc:	6870      	ldr	r0, [r6, #4]
 8003efe:	6803      	ldr	r3, [r0, #0]
 8003f00:	2100      	movs	r1, #0
 8003f02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003f04:	4798      	blx	r3
 8003f06:	4629      	mov	r1, r5
 8003f08:	4606      	mov	r6, r0
 8003f0a:	f002 fc47 	bl	800679c <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>
    model->bind(newPresenter);
 8003f0e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003f10:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003f14:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003f18:	f8c8 5000 	str.w	r5, [r8]
 8003f1c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f20:	682b      	ldr	r3, [r5, #0]
 8003f22:	f8c6 a008 	str.w	sl, [r6, #8]
 8003f26:	4628      	mov	r0, r5
 8003f28:	68db      	ldr	r3, [r3, #12]
 8003f2a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003f2c:	4798      	blx	r3
    newPresenter->activate();
 8003f2e:	6833      	ldr	r3, [r6, #0]
 8003f30:	4630      	mov	r0, r6
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f36:	4621      	mov	r1, r4
 8003f38:	4628      	mov	r0, r5
 8003f3a:	f012 fb35 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f3e:	6823      	ldr	r3, [r4, #0]
 8003f40:	4620      	mov	r0, r4
 8003f42:	691b      	ldr	r3, [r3, #16]
 8003f44:	4798      	blx	r3
    newTransition->invalidate();
 8003f46:	6823      	ldr	r3, [r4, #0]
 8003f48:	4620      	mov	r0, r4
 8003f4a:	695b      	ldr	r3, [r3, #20]
}
 8003f4c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f50:	4718      	bx	r3
 8003f52:	bf00      	nop
 8003f54:	08029382 	.word	0x08029382
 8003f58:	080299d9 	.word	0x080299d9
 8003f5c:	080294e6 	.word	0x080294e6
 8003f60:	0802952d 	.word	0x0802952d
 8003f64:	080295d0 	.word	0x080295d0
 8003f68:	20013fa8 	.word	0x20013fa8
 8003f6c:	20013fa4 	.word	0x20013fa4

08003f70 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv>:
{
 8003f70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MediumReadyScreenView, MediumReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f74:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003f78:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f7a:	68b0      	ldr	r0, [r6, #8]
 8003f7c:	6803      	ldr	r3, [r0, #0]
 8003f7e:	6a1b      	ldr	r3, [r3, #32]
 8003f80:	4798      	blx	r3
 8003f82:	f241 6323 	movw	r3, #5667	@ 0x1623
 8003f86:	4298      	cmp	r0, r3
 8003f88:	d805      	bhi.n	8003f96 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8003f8a:	4b41      	ldr	r3, [pc, #260]	@ (8004090 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8003f8c:	4a41      	ldr	r2, [pc, #260]	@ (8004094 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003f8e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f90:	4841      	ldr	r0, [pc, #260]	@ (8004098 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8003f92:	f023 fe7b 	bl	8027c8c <__assert_func>
 8003f96:	6870      	ldr	r0, [r6, #4]
 8003f98:	6803      	ldr	r3, [r0, #0]
 8003f9a:	6a1b      	ldr	r3, [r3, #32]
 8003f9c:	4798      	blx	r3
 8003f9e:	280f      	cmp	r0, #15
 8003fa0:	d803      	bhi.n	8003faa <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8003fa2:	4b3e      	ldr	r3, [pc, #248]	@ (800409c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8003fa4:	4a3b      	ldr	r2, [pc, #236]	@ (8004094 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003fa6:	21a4      	movs	r1, #164	@ 0xa4
 8003fa8:	e7f2      	b.n	8003f90 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003faa:	68f0      	ldr	r0, [r6, #12]
 8003fac:	6803      	ldr	r3, [r0, #0]
 8003fae:	6a1b      	ldr	r3, [r3, #32]
 8003fb0:	4798      	blx	r3
 8003fb2:	2837      	cmp	r0, #55	@ 0x37
 8003fb4:	d803      	bhi.n	8003fbe <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8003fb6:	4b3a      	ldr	r3, [pc, #232]	@ (80040a0 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8003fb8:	4a36      	ldr	r2, [pc, #216]	@ (8004094 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8003fba:	21a5      	movs	r1, #165	@ 0xa5
 8003fbc:	e7e8      	b.n	8003f90 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003fbe:	f010 fa51 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fc2:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 80040a4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8003fc6:	3004      	adds	r0, #4
 8003fc8:	f010 fa99 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003fcc:	f8d9 0000 	ldr.w	r0, [r9]
 8003fd0:	b110      	cbz	r0, 8003fd8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003fd2:	6803      	ldr	r3, [r0, #0]
 8003fd4:	68db      	ldr	r3, [r3, #12]
 8003fd6:	4798      	blx	r3
    if (*currentTrans)
 8003fd8:	f8d9 0000 	ldr.w	r0, [r9]
 8003fdc:	b110      	cbz	r0, 8003fe4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003fde:	6803      	ldr	r3, [r0, #0]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	4798      	blx	r3
    if (*currentScreen)
 8003fe4:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80040a8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8003fe8:	f8d8 0000 	ldr.w	r0, [r8]
 8003fec:	b110      	cbz	r0, 8003ff4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003fee:	6803      	ldr	r3, [r0, #0]
 8003ff0:	695b      	ldr	r3, [r3, #20]
 8003ff2:	4798      	blx	r3
    if (*currentPresenter)
 8003ff4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ff8:	b110      	cbz	r0, 8004000 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003ffa:	6803      	ldr	r3, [r0, #0]
 8003ffc:	685b      	ldr	r3, [r3, #4]
 8003ffe:	4798      	blx	r3
    if (*currentScreen)
 8004000:	f8d8 0000 	ldr.w	r0, [r8]
 8004004:	b110      	cbz	r0, 800400c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004006:	6803      	ldr	r3, [r0, #0]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	4798      	blx	r3
    if (*currentPresenter)
 800400c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004010:	b110      	cbz	r0, 8004018 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004012:	6803      	ldr	r3, [r0, #0]
 8004014:	689b      	ldr	r3, [r3, #8]
 8004016:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004018:	68f0      	ldr	r0, [r6, #12]
 800401a:	2100      	movs	r1, #0
 800401c:	f7ff fed4 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004020:	2114      	movs	r1, #20
 8004022:	4604      	mov	r4, r0
 8004024:	f7ff fed4 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004028:	68b0      	ldr	r0, [r6, #8]
 800402a:	6803      	ldr	r3, [r0, #0]
 800402c:	2100      	movs	r1, #0
 800402e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004030:	4798      	blx	r3
 8004032:	4605      	mov	r5, r0
 8004034:	f003 fe74 	bl	8007d20 <_ZN21MediumReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004038:	6870      	ldr	r0, [r6, #4]
 800403a:	6803      	ldr	r3, [r0, #0]
 800403c:	2100      	movs	r1, #0
 800403e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004040:	4798      	blx	r3
 8004042:	4629      	mov	r1, r5
 8004044:	4606      	mov	r6, r0
 8004046:	f003 fe35 	bl	8007cb4 <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>
    model->bind(newPresenter);
 800404a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800404c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004050:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004054:	f8c8 5000 	str.w	r5, [r8]
 8004058:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800405c:	682b      	ldr	r3, [r5, #0]
 800405e:	f8c6 a008 	str.w	sl, [r6, #8]
 8004062:	4628      	mov	r0, r5
 8004064:	68db      	ldr	r3, [r3, #12]
 8004066:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004068:	4798      	blx	r3
    newPresenter->activate();
 800406a:	6833      	ldr	r3, [r6, #0]
 800406c:	4630      	mov	r0, r6
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004072:	4621      	mov	r1, r4
 8004074:	4628      	mov	r0, r5
 8004076:	f012 fa97 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800407a:	6823      	ldr	r3, [r4, #0]
 800407c:	4620      	mov	r0, r4
 800407e:	691b      	ldr	r3, [r3, #16]
 8004080:	4798      	blx	r3
    newTransition->invalidate();
 8004082:	6823      	ldr	r3, [r4, #0]
 8004084:	4620      	mov	r0, r4
 8004086:	695b      	ldr	r3, [r3, #20]
}
 8004088:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800408c:	4718      	bx	r3
 800408e:	bf00      	nop
 8004090:	08029382 	.word	0x08029382
 8004094:	08029acd 	.word	0x08029acd
 8004098:	080294e6 	.word	0x080294e6
 800409c:	0802952d 	.word	0x0802952d
 80040a0:	080295d0 	.word	0x080295d0
 80040a4:	20013fa8 	.word	0x20013fa8
 80040a8:	20013fa4 	.word	0x20013fa4

080040ac <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv>:
{
 80040ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<HardReadyScreenView, HardReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040b0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80040b4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040b6:	68b0      	ldr	r0, [r6, #8]
 80040b8:	6803      	ldr	r3, [r0, #0]
 80040ba:	6a1b      	ldr	r3, [r3, #32]
 80040bc:	4798      	blx	r3
 80040be:	f5b0 5fb8 	cmp.w	r0, #5888	@ 0x1700
 80040c2:	d205      	bcs.n	80040d0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x24>
 80040c4:	4b40      	ldr	r3, [pc, #256]	@ (80041c8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x11c>)
 80040c6:	4a41      	ldr	r2, [pc, #260]	@ (80041cc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 80040c8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040ca:	4841      	ldr	r0, [pc, #260]	@ (80041d0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 80040cc:	f023 fdde 	bl	8027c8c <__assert_func>
 80040d0:	6870      	ldr	r0, [r6, #4]
 80040d2:	6803      	ldr	r3, [r0, #0]
 80040d4:	6a1b      	ldr	r3, [r3, #32]
 80040d6:	4798      	blx	r3
 80040d8:	280f      	cmp	r0, #15
 80040da:	d803      	bhi.n	80040e4 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x38>
 80040dc:	4b3d      	ldr	r3, [pc, #244]	@ (80041d4 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 80040de:	4a3b      	ldr	r2, [pc, #236]	@ (80041cc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 80040e0:	21a4      	movs	r1, #164	@ 0xa4
 80040e2:	e7f2      	b.n	80040ca <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040e4:	68f0      	ldr	r0, [r6, #12]
 80040e6:	6803      	ldr	r3, [r0, #0]
 80040e8:	6a1b      	ldr	r3, [r3, #32]
 80040ea:	4798      	blx	r3
 80040ec:	2837      	cmp	r0, #55	@ 0x37
 80040ee:	d803      	bhi.n	80040f8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x4c>
 80040f0:	4b39      	ldr	r3, [pc, #228]	@ (80041d8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 80040f2:	4a36      	ldr	r2, [pc, #216]	@ (80041cc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 80040f4:	21a5      	movs	r1, #165	@ 0xa5
 80040f6:	e7e8      	b.n	80040ca <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80040f8:	f010 f9b4 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040fc:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 80041dc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x130>
 8004100:	3004      	adds	r0, #4
 8004102:	f010 f9fc 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004106:	f8d9 0000 	ldr.w	r0, [r9]
 800410a:	b110      	cbz	r0, 8004112 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800410c:	6803      	ldr	r3, [r0, #0]
 800410e:	68db      	ldr	r3, [r3, #12]
 8004110:	4798      	blx	r3
    if (*currentTrans)
 8004112:	f8d9 0000 	ldr.w	r0, [r9]
 8004116:	b110      	cbz	r0, 800411e <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004118:	6803      	ldr	r3, [r0, #0]
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	4798      	blx	r3
    if (*currentScreen)
 800411e:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80041e0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8004122:	f8d8 0000 	ldr.w	r0, [r8]
 8004126:	b110      	cbz	r0, 800412e <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004128:	6803      	ldr	r3, [r0, #0]
 800412a:	695b      	ldr	r3, [r3, #20]
 800412c:	4798      	blx	r3
    if (*currentPresenter)
 800412e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004132:	b110      	cbz	r0, 800413a <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004134:	6803      	ldr	r3, [r0, #0]
 8004136:	685b      	ldr	r3, [r3, #4]
 8004138:	4798      	blx	r3
    if (*currentScreen)
 800413a:	f8d8 0000 	ldr.w	r0, [r8]
 800413e:	b110      	cbz	r0, 8004146 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004140:	6803      	ldr	r3, [r0, #0]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	4798      	blx	r3
    if (*currentPresenter)
 8004146:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800414a:	b110      	cbz	r0, 8004152 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800414c:	6803      	ldr	r3, [r0, #0]
 800414e:	689b      	ldr	r3, [r3, #8]
 8004150:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004152:	68f0      	ldr	r0, [r6, #12]
 8004154:	2100      	movs	r1, #0
 8004156:	f7ff fe37 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800415a:	2114      	movs	r1, #20
 800415c:	4604      	mov	r4, r0
 800415e:	f7ff fe37 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004162:	68b0      	ldr	r0, [r6, #8]
 8004164:	6803      	ldr	r3, [r0, #0]
 8004166:	2100      	movs	r1, #0
 8004168:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800416a:	4798      	blx	r3
 800416c:	4605      	mov	r5, r0
 800416e:	f002 ffdf 	bl	8007130 <_ZN19HardReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004172:	6870      	ldr	r0, [r6, #4]
 8004174:	6803      	ldr	r3, [r0, #0]
 8004176:	2100      	movs	r1, #0
 8004178:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800417a:	4798      	blx	r3
 800417c:	4629      	mov	r1, r5
 800417e:	4606      	mov	r6, r0
 8004180:	f002 ffa0 	bl	80070c4 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>
    model->bind(newPresenter);
 8004184:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004186:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800418a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800418e:	f8c8 5000 	str.w	r5, [r8]
 8004192:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004196:	682b      	ldr	r3, [r5, #0]
 8004198:	f8c6 a008 	str.w	sl, [r6, #8]
 800419c:	4628      	mov	r0, r5
 800419e:	68db      	ldr	r3, [r3, #12]
 80041a0:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80041a2:	4798      	blx	r3
    newPresenter->activate();
 80041a4:	6833      	ldr	r3, [r6, #0]
 80041a6:	4630      	mov	r0, r6
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80041ac:	4621      	mov	r1, r4
 80041ae:	4628      	mov	r0, r5
 80041b0:	f012 f9fa 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80041b4:	6823      	ldr	r3, [r4, #0]
 80041b6:	4620      	mov	r0, r4
 80041b8:	691b      	ldr	r3, [r3, #16]
 80041ba:	4798      	blx	r3
    newTransition->invalidate();
 80041bc:	6823      	ldr	r3, [r4, #0]
 80041be:	4620      	mov	r0, r4
 80041c0:	695b      	ldr	r3, [r3, #20]
}
 80041c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041c6:	4718      	bx	r3
 80041c8:	08029382 	.word	0x08029382
 80041cc:	08029bc5 	.word	0x08029bc5
 80041d0:	080294e6 	.word	0x080294e6
 80041d4:	0802952d 	.word	0x0802952d
 80041d8:	080295d0 	.word	0x080295d0
 80041dc:	20013fa8 	.word	0x20013fa8
 80041e0:	20013fa4 	.word	0x20013fa4

080041e4 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv>:
{
 80041e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041e8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80041ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041ee:	68b0      	ldr	r0, [r6, #8]
 80041f0:	6803      	ldr	r3, [r0, #0]
 80041f2:	6a1b      	ldr	r3, [r3, #32]
 80041f4:	4798      	blx	r3
 80041f6:	f641 037b 	movw	r3, #6267	@ 0x187b
 80041fa:	4298      	cmp	r0, r3
 80041fc:	d805      	bhi.n	800420a <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x26>
 80041fe:	4b41      	ldr	r3, [pc, #260]	@ (8004304 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x120>)
 8004200:	4a41      	ldr	r2, [pc, #260]	@ (8004308 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004202:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004204:	4841      	ldr	r0, [pc, #260]	@ (800430c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x128>)
 8004206:	f023 fd41 	bl	8027c8c <__assert_func>
 800420a:	6870      	ldr	r0, [r6, #4]
 800420c:	6803      	ldr	r3, [r0, #0]
 800420e:	6a1b      	ldr	r3, [r3, #32]
 8004210:	4798      	blx	r3
 8004212:	280f      	cmp	r0, #15
 8004214:	d803      	bhi.n	800421e <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x3a>
 8004216:	4b3e      	ldr	r3, [pc, #248]	@ (8004310 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004218:	4a3b      	ldr	r2, [pc, #236]	@ (8004308 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 800421a:	21a4      	movs	r1, #164	@ 0xa4
 800421c:	e7f2      	b.n	8004204 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800421e:	68f0      	ldr	r0, [r6, #12]
 8004220:	6803      	ldr	r3, [r0, #0]
 8004222:	6a1b      	ldr	r3, [r3, #32]
 8004224:	4798      	blx	r3
 8004226:	2837      	cmp	r0, #55	@ 0x37
 8004228:	d803      	bhi.n	8004232 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x4e>
 800422a:	4b3a      	ldr	r3, [pc, #232]	@ (8004314 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x130>)
 800422c:	4a36      	ldr	r2, [pc, #216]	@ (8004308 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 800422e:	21a5      	movs	r1, #165	@ 0xa5
 8004230:	e7e8      	b.n	8004204 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004232:	f010 f917 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004236:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004318 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x134>
 800423a:	3004      	adds	r0, #4
 800423c:	f010 f95f 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004240:	f8d9 0000 	ldr.w	r0, [r9]
 8004244:	b110      	cbz	r0, 800424c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004246:	6803      	ldr	r3, [r0, #0]
 8004248:	68db      	ldr	r3, [r3, #12]
 800424a:	4798      	blx	r3
    if (*currentTrans)
 800424c:	f8d9 0000 	ldr.w	r0, [r9]
 8004250:	b110      	cbz	r0, 8004258 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004252:	6803      	ldr	r3, [r0, #0]
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	4798      	blx	r3
    if (*currentScreen)
 8004258:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 800431c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x138>
 800425c:	f8d8 0000 	ldr.w	r0, [r8]
 8004260:	b110      	cbz	r0, 8004268 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004262:	6803      	ldr	r3, [r0, #0]
 8004264:	695b      	ldr	r3, [r3, #20]
 8004266:	4798      	blx	r3
    if (*currentPresenter)
 8004268:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800426c:	b110      	cbz	r0, 8004274 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800426e:	6803      	ldr	r3, [r0, #0]
 8004270:	685b      	ldr	r3, [r3, #4]
 8004272:	4798      	blx	r3
    if (*currentScreen)
 8004274:	f8d8 0000 	ldr.w	r0, [r8]
 8004278:	b110      	cbz	r0, 8004280 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800427a:	6803      	ldr	r3, [r0, #0]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	4798      	blx	r3
    if (*currentPresenter)
 8004280:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004284:	b110      	cbz	r0, 800428c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004286:	6803      	ldr	r3, [r0, #0]
 8004288:	689b      	ldr	r3, [r3, #8]
 800428a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800428c:	68f0      	ldr	r0, [r6, #12]
 800428e:	2100      	movs	r1, #0
 8004290:	f7ff fd9a 	bl	8003dc8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004294:	2114      	movs	r1, #20
 8004296:	4604      	mov	r4, r0
 8004298:	f7ff fd9a 	bl	8003dd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800429c:	68b0      	ldr	r0, [r6, #8]
 800429e:	6803      	ldr	r3, [r0, #0]
 80042a0:	2100      	movs	r1, #0
 80042a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042a4:	4798      	blx	r3
 80042a6:	4605      	mov	r5, r0
 80042a8:	f004 f97a 	bl	80085a0 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80042ac:	6870      	ldr	r0, [r6, #4]
 80042ae:	6803      	ldr	r3, [r0, #0]
 80042b0:	2100      	movs	r1, #0
 80042b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80042b4:	4798      	blx	r3
 80042b6:	4629      	mov	r1, r5
 80042b8:	4606      	mov	r6, r0
 80042ba:	f004 f94f 	bl	800855c <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 80042be:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80042c0:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80042c4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80042c8:	f8c8 5000 	str.w	r5, [r8]
 80042cc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042d0:	682b      	ldr	r3, [r5, #0]
 80042d2:	f8c6 a008 	str.w	sl, [r6, #8]
 80042d6:	4628      	mov	r0, r5
 80042d8:	68db      	ldr	r3, [r3, #12]
 80042da:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80042dc:	4798      	blx	r3
    newPresenter->activate();
 80042de:	6833      	ldr	r3, [r6, #0]
 80042e0:	4630      	mov	r0, r6
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042e6:	4621      	mov	r1, r4
 80042e8:	4628      	mov	r0, r5
 80042ea:	f012 f95d 	bl	80165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042ee:	6823      	ldr	r3, [r4, #0]
 80042f0:	4620      	mov	r0, r4
 80042f2:	691b      	ldr	r3, [r3, #16]
 80042f4:	4798      	blx	r3
    newTransition->invalidate();
 80042f6:	6823      	ldr	r3, [r4, #0]
 80042f8:	4620      	mov	r0, r4
 80042fa:	695b      	ldr	r3, [r3, #20]
}
 80042fc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004300:	4718      	bx	r3
 8004302:	bf00      	nop
 8004304:	08029382 	.word	0x08029382
 8004308:	08029cb9 	.word	0x08029cb9
 800430c:	080294e6 	.word	0x080294e6
 8004310:	0802952d 	.word	0x0802952d
 8004314:	080295d0 	.word	0x080295d0
 8004318:	20013fa8 	.word	0x20013fa8
 800431c:	20013fa4 	.word	0x20013fa4

08004320 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004320:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8004322:	4770      	bx	lr

08004324 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004324:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8004326:	4770      	bx	lr

08004328 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004328:	4770      	bx	lr

0800432a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800432a:	888b      	ldrh	r3, [r1, #4]
 800432c:	69c0      	ldr	r0, [r0, #28]
 800432e:	680a      	ldr	r2, [r1, #0]
 8004330:	0adb      	lsrs	r3, r3, #11
 8004332:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004336:	4410      	add	r0, r2
 8004338:	4770      	bx	lr

0800433a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800433a:	b510      	push	{r4, lr}
 800433c:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 800433e:	b1ba      	cbz	r2, 8004370 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004340:	7b10      	ldrb	r0, [r2, #12]
 8004342:	b168      	cbz	r0, 8004360 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004344:	7b53      	ldrb	r3, [r2, #13]
 8004346:	7ad2      	ldrb	r2, [r2, #11]
 8004348:	021b      	lsls	r3, r3, #8
 800434a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800434e:	431a      	orrs	r2, r3
 8004350:	6a23      	ldr	r3, [r4, #32]
 8004352:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004356:	881a      	ldrh	r2, [r3, #0]
 8004358:	428a      	cmp	r2, r1
 800435a:	d102      	bne.n	8004362 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800435c:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8004360:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004362:	d805      	bhi.n	8004370 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004364:	3801      	subs	r0, #1
 8004366:	b280      	uxth	r0, r0
 8004368:	3304      	adds	r3, #4
 800436a:	2800      	cmp	r0, #0
 800436c:	d1f3      	bne.n	8004356 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800436e:	e7f7      	b.n	8004360 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004370:	2000      	movs	r0, #0
 8004372:	e7f5      	b.n	8004360 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004374 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004374:	b510      	push	{r4, lr}
 8004376:	212c      	movs	r1, #44	@ 0x2c
 8004378:	4604      	mov	r4, r0
 800437a:	f022 fd4b 	bl	8026e14 <_ZdlPvj>
 800437e:	4620      	mov	r0, r4
 8004380:	bd10      	pop	{r4, pc}
	...

08004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004384:	b530      	push	{r4, r5, lr}
 8004386:	b08b      	sub	sp, #44	@ 0x2c
 8004388:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800438a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 800438e:	9508      	str	r5, [sp, #32]
 8004390:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8004394:	9507      	str	r5, [sp, #28]
 8004396:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800439a:	9506      	str	r5, [sp, #24]
 800439c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 80043a0:	9505      	str	r5, [sp, #20]
 80043a2:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80043a6:	9504      	str	r5, [sp, #16]
 80043a8:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80043ac:	9503      	str	r5, [sp, #12]
 80043ae:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 80043b2:	9502      	str	r5, [sp, #8]
 80043b4:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 80043b8:	9501      	str	r5, [sp, #4]
 80043ba:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80043be:	9500      	str	r5, [sp, #0]
 80043c0:	f011 fcc0 	bl	8015d44 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80043c4:	4b06      	ldr	r3, [pc, #24]	@ (80043e0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80043c6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80043c8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80043ca:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80043cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80043ce:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80043d0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80043d2:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80043d4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80043d6:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80043d8:	4620      	mov	r0, r4
 80043da:	b00b      	add	sp, #44	@ 0x2c
 80043dc:	bd30      	pop	{r4, r5, pc}
 80043de:	bf00      	nop
 80043e0:	0802a6e0 	.word	0x0802a6e0

080043e4 <_ZN23HardReadyScreenViewBase11setupScreenEv>:
}

void HardReadyScreenViewBase::setupScreen()
{

}
 80043e4:	4770      	bx	lr
	...

080043e8 <_ZN23HardReadyScreenViewBaseD1Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 80043e8:	b510      	push	{r4, lr}
 80043ea:	4b03      	ldr	r3, [pc, #12]	@ (80043f8 <_ZN23HardReadyScreenViewBaseD1Ev+0x10>)
 80043ec:	6003      	str	r3, [r0, #0]
 80043ee:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80043f0:	f00e fb3e 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80043f4:	4620      	mov	r0, r4
 80043f6:	bd10      	pop	{r4, pc}
 80043f8:	0802a7b0 	.word	0x0802a7b0

080043fc <_ZN23HardReadyScreenViewBaseD0Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 80043fc:	b510      	push	{r4, lr}
 80043fe:	4b06      	ldr	r3, [pc, #24]	@ (8004418 <_ZN23HardReadyScreenViewBaseD0Ev+0x1c>)
 8004400:	6003      	str	r3, [r0, #0]
 8004402:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004404:	f00e fb34 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004408:	4620      	mov	r0, r4
 800440a:	f241 61fc 	movw	r1, #5884	@ 0x16fc
 800440e:	f022 fd01 	bl	8026e14 <_ZdlPvj>
 8004412:	4620      	mov	r0, r4
 8004414:	bd10      	pop	{r4, pc}
 8004416:	bf00      	nop
 8004418:	0802a7b0 	.word	0x0802a7b0

0800441c <_ZN23HardReadyScreenViewBase15handleTickEventEv>:

void HardReadyScreenViewBase::handleTickEvent()
{
 800441c:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 800441e:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8004422:	f8d4 36f8 	ldr.w	r3, [r4, #1784]	@ 0x6f8
 8004426:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8004428:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 800442a:	f8c4 36f8 	str.w	r3, [r4, #1784]	@ 0x6f8
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 800442e:	d106      	bne.n	800443e <_ZN23HardReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004430:	f010 f818 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to HardScreen
        //Go to HardScreen with no screen transition
        application().gotoHardScreenScreenNoTransition();
 8004434:	f7ff f918 	bl	8003668 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8004438:	2300      	movs	r3, #0
 800443a:	f8c4 36f8 	str.w	r3, [r4, #1784]	@ 0x6f8
    }
}
 800443e:	bd10      	pop	{r4, pc}

08004440 <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 8004440:	2200      	movs	r2, #0
 8004442:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004446:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800444a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800444e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8004452:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004456:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8004458:	4a01      	ldr	r2, [pc, #4]	@ (8004460 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800445a:	6002      	str	r2, [r0, #0]
 800445c:	4770      	bx	lr
 800445e:	bf00      	nop
 8004460:	0802a748 	.word	0x0802a748

08004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8004464:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8004466:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8004468:	4604      	mov	r4, r0
 800446a:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 800446c:	2100      	movs	r1, #0
 800446e:	f023 fe26 	bl	80280be <memset>
 8004472:	4620      	mov	r0, r4
 8004474:	f7ff ffe4 	bl	8004440 <_ZN8touchgfx6WidgetC1Ev>
 8004478:	4b06      	ldr	r3, [pc, #24]	@ (8004494 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800447a:	6023      	str	r3, [r4, #0]
 800447c:	882b      	ldrh	r3, [r5, #0]
 800447e:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8004480:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 8004482:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8004484:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8004488:	4629      	mov	r1, r5
 800448a:	f00d fae9 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800448e:	4620      	mov	r0, r4
 8004490:	bd38      	pop	{r3, r4, r5, pc}
 8004492:	bf00      	nop
 8004494:	0802b1ac 	.word	0x0802b1ac

08004498 <_ZN23HardReadyScreenViewBaseC1Ev>:
HardReadyScreenViewBase::HardReadyScreenViewBase() :
 8004498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800449c:	4604      	mov	r4, r0
 800449e:	b099      	sub	sp, #100	@ 0x64
    frameCountInteraction1Interval(0)
 80044a0:	46a0      	mov	r8, r4
        : presenter(0)
 80044a2:	2500      	movs	r5, #0
 80044a4:	f011 fed4 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 80044a8:	4be0      	ldr	r3, [pc, #896]	@ (800482c <_ZN23HardReadyScreenViewBaseC1Ev+0x394>)
 80044aa:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80044ac:	f848 3b40 	str.w	r3, [r8], #64
 80044b0:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 80044b4:	4640      	mov	r0, r8
 80044b6:	f7fe f949 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044ba:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80044be:	a916      	add	r1, sp, #88	@ 0x58
 80044c0:	4648      	mov	r0, r9
 80044c2:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80044c6:	f7ff ffcd 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80044ca:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 80044ce:	4618      	mov	r0, r3
 80044d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80044d2:	f7fe f93b 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044d6:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80044da:	4618      	mov	r0, r3
 80044dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80044de:	f7fe f935 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044e2:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80044e6:	4618      	mov	r0, r3
 80044e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80044ea:	f7fe f92f 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80044ee:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80044f2:	4618      	mov	r0, r3
 80044f4:	930c      	str	r3, [sp, #48]	@ 0x30
 80044f6:	f00b ffe5 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80044fa:	f504 73b2 	add.w	r3, r4, #356	@ 0x164
 80044fe:	4618      	mov	r0, r3
 8004500:	9311      	str	r3, [sp, #68]	@ 0x44
 8004502:	f7fc ffdf 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004506:	4bca      	ldr	r3, [pc, #808]	@ (8004830 <_ZN23HardReadyScreenViewBaseC1Ev+0x398>)
 8004508:	f8c4 3164 	str.w	r3, [r4, #356]	@ 0x164
 800450c:	3324      	adds	r3, #36	@ 0x24
 800450e:	f8c4 316c 	str.w	r3, [r4, #364]	@ 0x16c
 8004512:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8004516:	4618      	mov	r0, r3
 8004518:	f8c4 5170 	str.w	r5, [r4, #368]	@ 0x170
 800451c:	4fc5      	ldr	r7, [pc, #788]	@ (8004834 <_ZN23HardReadyScreenViewBaseC1Ev+0x39c>)
 800451e:	9310      	str	r3, [sp, #64]	@ 0x40
        touchable = touch;
 8004520:	f04f 0a01 	mov.w	sl, #1
 8004524:	f7fe f912 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004528:	f504 73d2 	add.w	r3, r4, #420	@ 0x1a4
 800452c:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
 8004530:	4618      	mov	r0, r3
 8004532:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
 8004536:	f884 a19c 	strb.w	sl, [r4, #412]	@ 0x19c
 800453a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800453c:	f7fe f906 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004540:	f8c4 71a4 	str.w	r7, [r4, #420]	@ 0x1a4
 8004544:	f884 a1c8 	strb.w	sl, [r4, #456]	@ 0x1c8
 8004548:	4658      	mov	r0, fp
 800454a:	f504 7a06 	add.w	sl, r4, #536	@ 0x218
 800454e:	f7fe f913 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004552:	4650      	mov	r0, sl
 8004554:	f7fe f910 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8004558:	f504 7318 	add.w	r3, r4, #608	@ 0x260
 800455c:	4618      	mov	r0, r3
 800455e:	4fb6      	ldr	r7, [pc, #728]	@ (8004838 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a0>)
 8004560:	930e      	str	r3, [sp, #56]	@ 0x38
 8004562:	f7fe f8f3 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004566:	f504 7325 	add.w	r3, r4, #660	@ 0x294
 800456a:	f8c4 7260 	str.w	r7, [r4, #608]	@ 0x260
 800456e:	4618      	mov	r0, r3
        : color(col)
 8004570:	f8c4 528c 	str.w	r5, [r4, #652]	@ 0x28c
 8004574:	f8a4 5290 	strh.w	r5, [r4, #656]	@ 0x290
 8004578:	930d      	str	r3, [sp, #52]	@ 0x34
 800457a:	f7fe f8e7 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 800457e:	f504 7332 	add.w	r3, r4, #712	@ 0x2c8
 8004582:	f8c4 7294 	str.w	r7, [r4, #660]	@ 0x294
 8004586:	4618      	mov	r0, r3
 8004588:	f8c4 52c0 	str.w	r5, [r4, #704]	@ 0x2c0
 800458c:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
        : TextAreaWithWildcardBase(), wc1(0)
 8004590:	4faa      	ldr	r7, [pc, #680]	@ (800483c <_ZN23HardReadyScreenViewBaseC1Ev+0x3a4>)
        : TextArea()
 8004592:	9303      	str	r3, [sp, #12]
 8004594:	f7fe f8f0 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004598:	f504 7345 	add.w	r3, r4, #788	@ 0x314
        : TextAreaWithWildcardBase(), wc1(0)
 800459c:	f8c4 72c8 	str.w	r7, [r4, #712]	@ 0x2c8
 80045a0:	a916      	add	r1, sp, #88	@ 0x58
 80045a2:	4618      	mov	r0, r3
 80045a4:	f8c4 5310 	str.w	r5, [r4, #784]	@ 0x310
 80045a8:	9305      	str	r3, [sp, #20]
 80045aa:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045ae:	f7ff ff59 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80045b2:	f504 7350 	add.w	r3, r4, #832	@ 0x340
 80045b6:	a916      	add	r1, sp, #88	@ 0x58
 80045b8:	4618      	mov	r0, r3
 80045ba:	9306      	str	r3, [sp, #24]
 80045bc:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045c0:	f7ff ff50 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80045c4:	f504 735b 	add.w	r3, r4, #876	@ 0x36c
 80045c8:	a916      	add	r1, sp, #88	@ 0x58
 80045ca:	4618      	mov	r0, r3
 80045cc:	9307      	str	r3, [sp, #28]
 80045ce:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045d2:	f7ff ff47 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : TextArea()
 80045d6:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 80045da:	4618      	mov	r0, r3
 80045dc:	9304      	str	r3, [sp, #16]
 80045de:	f7fe f8cb 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80045e2:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
        : TextAreaWithWildcardBase(), wc1(0)
 80045e6:	f8c4 7398 	str.w	r7, [r4, #920]	@ 0x398
 80045ea:	a916      	add	r1, sp, #88	@ 0x58
 80045ec:	4618      	mov	r0, r3
 80045ee:	f8c4 53e0 	str.w	r5, [r4, #992]	@ 0x3e0
 80045f2:	9308      	str	r3, [sp, #32]
 80045f4:	f8ad 6058 	strh.w	r6, [sp, #88]	@ 0x58
 80045f8:	f7ff ff34 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80045fc:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
    __background.setPosition(0, 0, 320, 240);
 8004600:	27f0      	movs	r7, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 8004602:	f8c3 56f8 	str.w	r5, [r3, #1784]	@ 0x6f8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004606:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800460a:	f504 6087 	add.w	r0, r4, #1080	@ 0x438
 800460e:	f00e fa25 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004612:	462a      	mov	r2, r5
 8004614:	4640      	mov	r0, r8
 8004616:	9700      	str	r7, [sp, #0]
 8004618:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800461c:	4629      	mov	r1, r5
 800461e:	1d26      	adds	r6, r4, #4
 8004620:	f7fe f880 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004624:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004628:	66a3      	str	r3, [r4, #104]	@ 0x68
 800462a:	4641      	mov	r1, r8
 800462c:	4630      	mov	r0, r6
 800462e:	f009 fa07 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_1.setXY(56, 0);
 8004632:	4648      	mov	r0, r9
 8004634:	462a      	mov	r2, r5
 8004636:	2138      	movs	r1, #56	@ 0x38
 8004638:	f7fe f867 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800463c:	f04f 0204 	mov.w	r2, #4
    image2_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004640:	4648      	mov	r0, r9
 8004642:	a916      	add	r1, sp, #88	@ 0x58
 8004644:	f8ad 2058 	strh.w	r2, [sp, #88]	@ 0x58
 8004648:	f00d fa0a 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800464c:	4649      	mov	r1, r9
 800464e:	4630      	mov	r0, r6
 8004650:	f009 f9f6 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 8004654:	462a      	mov	r2, r5
 8004656:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004658:	9700      	str	r7, [sp, #0]
 800465a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800465e:	4629      	mov	r1, r5
 8004660:	f7fe f860 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004664:	f04f 33ff 	mov.w	r3, #4294967295
 8004668:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800466a:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800466e:	4630      	mov	r0, r6
 8004670:	f009 f9e6 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8004674:	2202      	movs	r2, #2
 8004676:	23ec      	movs	r3, #236	@ 0xec
 8004678:	4611      	mov	r1, r2
 800467a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800467c:	9300      	str	r3, [sp, #0]
 800467e:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8004682:	f7fe f84f 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004686:	4b6e      	ldr	r3, [pc, #440]	@ (8004840 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a8>)
 8004688:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800468a:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
 800468e:	4630      	mov	r0, r6
 8004690:	f009 f9d6 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8004694:	462a      	mov	r2, r5
 8004696:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004698:	9700      	str	r7, [sp, #0]
 800469a:	2303      	movs	r3, #3
 800469c:	21a0      	movs	r1, #160	@ 0xa0
 800469e:	f7fe f841 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046a2:	f04f 33ff 	mov.w	r3, #4294967295
 80046a6:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        alpha = newAlpha;
 80046aa:	23dc      	movs	r3, #220	@ 0xdc
 80046ac:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80046ae:	f884 3116 	strb.w	r3, [r4, #278]	@ 0x116
 80046b2:	4630      	mov	r0, r6
 80046b4:	f009 f9c4 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 80046b8:	230e      	movs	r3, #14
 80046ba:	2272      	movs	r2, #114	@ 0x72
 80046bc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80046be:	9300      	str	r3, [sp, #0]
 80046c0:	219a      	movs	r1, #154	@ 0x9a
 80046c2:	f7fe f82f 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80046c6:	23c0      	movs	r3, #192	@ 0xc0
 80046c8:	f8c4 3150 	str.w	r3, [r4, #336]	@ 0x150
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80046cc:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80046d0:	f8c4 3158 	str.w	r3, [r4, #344]	@ 0x158
 80046d4:	4b5b      	ldr	r3, [pc, #364]	@ (8004844 <_ZN23HardReadyScreenViewBaseC1Ev+0x3ac>)
 80046d6:	f8c4 3170 	str.w	r3, [r4, #368]	@ 0x170
        color565 = LCD16bpp::getNativeColor(painterColor);
 80046da:	f649 0361 	movw	r3, #39009	@ 0x9861
 80046de:	f8a4 3174 	strh.w	r3, [r4, #372]	@ 0x174
 80046e2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80046e4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80046e6:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        this->circleCenterY = CWRUtil::toQ5(y);
 80046ea:	e9c4 7752 	strd	r7, r7, [r4, #328]	@ 0x148
 80046ee:	4630      	mov	r0, r6
    paddle1.setPosition(7, 110, 5, 20);
 80046f0:	2714      	movs	r7, #20
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80046f2:	f8c4 515c 	str.w	r5, [r4, #348]	@ 0x15c
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80046f6:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
 80046fa:	f009 f9a1 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80046fe:	226e      	movs	r2, #110	@ 0x6e
 8004700:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8004702:	9700      	str	r7, [sp, #0]
 8004704:	2305      	movs	r3, #5
 8004706:	2107      	movs	r1, #7
 8004708:	f7fe f80c 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800470c:	f04f 33ff 	mov.w	r3, #4294967295
 8004710:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8004712:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
 8004716:	4630      	mov	r0, r6
 8004718:	f009 f992 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 800471c:	226e      	movs	r2, #110	@ 0x6e
 800471e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8004720:	9700      	str	r7, [sp, #0]
 8004722:	2305      	movs	r3, #5
 8004724:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8004728:	f7fd fffc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800472c:	f04f 33ff 	mov.w	r3, #4294967295
 8004730:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004732:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
 8004736:	4630      	mov	r0, r6
 8004738:	f009 f982 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(94, 94, 19, 52);
 800473c:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8004740:	225e      	movs	r2, #94	@ 0x5e
 8004742:	4611      	mov	r1, r2
 8004744:	4658      	mov	r0, fp
 8004746:	f8cd 9000 	str.w	r9, [sp]
 800474a:	2313      	movs	r3, #19
 800474c:	af12      	add	r7, sp, #72	@ 0x48
 800474e:	f7fd ffe9 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004752:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8004756:	4659      	mov	r1, fp
        color = newColor;
 8004758:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
        boundingArea = calculateBoundingArea();
 800475c:	4638      	mov	r0, r7
        linespace = space;
 800475e:	f8a4 5204 	strh.w	r5, [r4, #516]	@ 0x204
        boundingArea = calculateBoundingArea();
 8004762:	f00c fcbb 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004766:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800476a:	f504 7803 	add.w	r8, r4, #524	@ 0x20c
        rotation = textRotation;
 800476e:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8004772:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8004776:	4659      	mov	r1, fp
        rotation = textRotation;
 8004778:	f884 3208 	strb.w	r3, [r4, #520]	@ 0x208
        boundingArea = calculateBoundingArea();
 800477c:	4638      	mov	r0, r7
 800477e:	f00c fcad 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004782:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004786:	4b30      	ldr	r3, [pc, #192]	@ (8004848 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b0>)
 8004788:	9316      	str	r3, [sp, #88]	@ 0x58
 800478a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 800478e:	230d      	movs	r3, #13
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7S3Y));
 8004790:	4658      	mov	r0, fp
        alpha = newAlpha;
 8004792:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 8004796:	a916      	add	r1, sp, #88	@ 0x58
 8004798:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 800479c:	f00c ff46 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80047a0:	4659      	mov	r1, fp
 80047a2:	f884 8206 	strb.w	r8, [r4, #518]	@ 0x206
 80047a6:	4630      	mov	r0, r6
 80047a8:	f009 f94a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(204, 93, 19, 52);
 80047ac:	2313      	movs	r3, #19
 80047ae:	4650      	mov	r0, sl
 80047b0:	f8cd 9000 	str.w	r9, [sp]
 80047b4:	225d      	movs	r2, #93	@ 0x5d
 80047b6:	21cc      	movs	r1, #204	@ 0xcc
 80047b8:	f7fd ffb4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80047bc:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80047c0:	4651      	mov	r1, sl
        color = newColor;
 80047c2:	f8c4 2248 	str.w	r2, [r4, #584]	@ 0x248
        boundingArea = calculateBoundingArea();
 80047c6:	4638      	mov	r0, r7
        linespace = space;
 80047c8:	f8a4 524c 	strh.w	r5, [r4, #588]	@ 0x24c
        boundingArea = calculateBoundingArea();
 80047cc:	f00c fc86 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047d0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80047d4:	f504 7915 	add.w	r9, r4, #596	@ 0x254
        rotation = textRotation;
 80047d8:	f04f 0b03 	mov.w	fp, #3
        boundingArea = calculateBoundingArea();
 80047dc:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80047e0:	4651      	mov	r1, sl
 80047e2:	4638      	mov	r0, r7
        rotation = textRotation;
 80047e4:	f884 b250 	strb.w	fp, [r4, #592]	@ 0x250
        boundingArea = calculateBoundingArea();
 80047e8:	f00c fc78 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047ec:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80047f0:	4b15      	ldr	r3, [pc, #84]	@ (8004848 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b0>)
 80047f2:	9316      	str	r3, [sp, #88]	@ 0x58
 80047f4:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 80047f8:	230c      	movs	r3, #12
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJ6Y));
 80047fa:	4650      	mov	r0, sl
 80047fc:	a916      	add	r1, sp, #88	@ 0x58
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80047fe:	f8df 904c 	ldr.w	r9, [pc, #76]	@ 800484c <_ZN23HardReadyScreenViewBaseC1Ev+0x3b4>
 8004802:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004806:	f00c ff11 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800480a:	4651      	mov	r1, sl
        alpha = newAlpha;
 800480c:	f884 824e 	strb.w	r8, [r4, #590]	@ 0x24e
 8004810:	4630      	mov	r0, r6
 8004812:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 8004850 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b8>
    goal1.setPosition(0, 61, 2, 120);
 8004816:	f04f 0a78 	mov.w	sl, #120	@ 0x78
 800481a:	f009 f911 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800481e:	2302      	movs	r3, #2
 8004820:	223d      	movs	r2, #61	@ 0x3d
 8004822:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8004824:	f8cd a000 	str.w	sl, [sp]
 8004828:	4629      	mov	r1, r5
 800482a:	e013      	b.n	8004854 <_ZN23HardReadyScreenViewBaseC1Ev+0x3bc>
 800482c:	0802a7b0 	.word	0x0802a7b0
 8004830:	0802ae0c 	.word	0x0802ae0c
 8004834:	0802a4a8 	.word	0x0802a4a8
 8004838:	0802b144 	.word	0x0802b144
 800483c:	0802a418 	.word	0x0802a418
 8004840:	ff0c3837 	.word	0xff0c3837
 8004844:	ff990c0c 	.word	0xff990c0c
 8004848:	0802a408 	.word	0x0802a408
 800484c:	ff000b6e 	.word	0xff000b6e
 8004850:	ffad9334 	.word	0xffad9334
 8004854:	f7fd ff66 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004858:	e9c4 98a2 	strd	r9, r8, [r4, #648]	@ 0x288
 800485c:	990e      	ldr	r1, [sp, #56]	@ 0x38
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800485e:	f8a4 5290 	strh.w	r5, [r4, #656]	@ 0x290
 8004862:	4630      	mov	r0, r6
 8004864:	f009 f8ec 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 8004868:	2302      	movs	r3, #2
 800486a:	223c      	movs	r2, #60	@ 0x3c
 800486c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800486e:	f8cd a000 	str.w	sl, [sp]
 8004872:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8004876:	f7fd ff55 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 800487a:	e9c4 98af 	strd	r9, r8, [r4, #700]	@ 0x2bc
 800487e:	990d      	ldr	r1, [sp, #52]	@ 0x34
        borderSize = size;
 8004880:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
 8004884:	4630      	mov	r0, r6
 8004886:	f009 f8db 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(46, 111);
 800488a:	226f      	movs	r2, #111	@ 0x6f
 800488c:	9803      	ldr	r0, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800488e:	f8df 91f4 	ldr.w	r9, [pc, #500]	@ 8004a84 <_ZN23HardReadyScreenViewBaseC1Ev+0x5ec>
 8004892:	212e      	movs	r1, #46	@ 0x2e
 8004894:	f7fd ff39 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004898:	4b72      	ldr	r3, [pc, #456]	@ (8004a64 <_ZN23HardReadyScreenViewBaseC1Ev+0x5cc>)
 800489a:	f8c4 32f8 	str.w	r3, [r4, #760]	@ 0x2f8
        boundingArea = calculateBoundingArea();
 800489e:	f8d4 32c8 	ldr.w	r3, [r4, #712]	@ 0x2c8
 80048a2:	9903      	ldr	r1, [sp, #12]
 80048a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80048a8:	f8a4 52fc 	strh.w	r5, [r4, #764]	@ 0x2fc
        boundingArea = calculateBoundingArea();
 80048ac:	4638      	mov	r0, r7
 80048ae:	4798      	blx	r3
 80048b0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80048b4:	f504 7841 	add.w	r8, r4, #772	@ 0x304
        rotation = textRotation;
 80048b8:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80048bc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80048c0:	f884 3300 	strb.w	r3, [r4, #768]	@ 0x300
        boundingArea = calculateBoundingArea();
 80048c4:	f8d4 32c8 	ldr.w	r3, [r4, #712]	@ 0x2c8
 80048c8:	9903      	ldr	r1, [sp, #12]
 80048ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80048ce:	4638      	mov	r0, r7
 80048d0:	4798      	blx	r3
 80048d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80048d6:	f8d9 3000 	ldr.w	r3, [r9]
 80048da:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 80048de:	f504 6882 	add.w	r8, r4, #1040	@ 0x410
 80048e2:	b92b      	cbnz	r3, 80048f0 <_ZN23HardReadyScreenViewBaseC1Ev+0x458>
 80048e4:	4b60      	ldr	r3, [pc, #384]	@ (8004a68 <_ZN23HardReadyScreenViewBaseC1Ev+0x5d0>)
 80048e6:	4a61      	ldr	r2, [pc, #388]	@ (8004a6c <_ZN23HardReadyScreenViewBaseC1Ev+0x5d4>)
 80048e8:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048ea:	4861      	ldr	r0, [pc, #388]	@ (8004a70 <_ZN23HardReadyScreenViewBaseC1Ev+0x5d8>)
 80048ec:	f023 f9ce 	bl	8027c8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80048f0:	f8df a194 	ldr.w	sl, [pc, #404]	@ 8004a88 <_ZN23HardReadyScreenViewBaseC1Ev+0x5f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048f4:	f8ba 3000 	ldrh.w	r3, [sl]
 80048f8:	2b08      	cmp	r3, #8
 80048fa:	d803      	bhi.n	8004904 <_ZN23HardReadyScreenViewBaseC1Ev+0x46c>
 80048fc:	4b5d      	ldr	r3, [pc, #372]	@ (8004a74 <_ZN23HardReadyScreenViewBaseC1Ev+0x5dc>)
 80048fe:	4a5b      	ldr	r2, [pc, #364]	@ (8004a6c <_ZN23HardReadyScreenViewBaseC1Ev+0x5d4>)
 8004900:	2161      	movs	r1, #97	@ 0x61
 8004902:	e7f2      	b.n	80048ea <_ZN23HardReadyScreenViewBaseC1Ev+0x452>
        return texts->getText(typedTextId);
 8004904:	4b5c      	ldr	r3, [pc, #368]	@ (8004a78 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e0>)
 8004906:	2108      	movs	r1, #8
 8004908:	6818      	ldr	r0, [r3, #0]
 800490a:	f001 fefd 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 800490e:	4a5b      	ldr	r2, [pc, #364]	@ (8004a7c <_ZN23HardReadyScreenViewBaseC1Ev+0x5e4>)
 8004910:	4603      	mov	r3, r0
 8004912:	210a      	movs	r1, #10
 8004914:	4640      	mov	r0, r8
 8004916:	f013 f97b 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 800491a:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 800491c:	f8c4 8310 	str.w	r8, [r4, #784]	@ 0x310
 8004920:	f00c fe64 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 8004924:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
        : typedTextId(id)
 8004928:	230b      	movs	r3, #11
 800492a:	4a55      	ldr	r2, [pc, #340]	@ (8004a80 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e8>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7Q96));
 800492c:	9803      	ldr	r0, [sp, #12]
 800492e:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
 8004932:	a916      	add	r1, sp, #88	@ 0x58
 8004934:	9216      	str	r2, [sp, #88]	@ 0x58
 8004936:	f00c fe79 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800493a:	9903      	ldr	r1, [sp, #12]
 800493c:	f884 82fe 	strb.w	r8, [r4, #766]	@ 0x2fe
 8004940:	4630      	mov	r0, r6
 8004942:	f009 f87d 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(56, 230);
 8004946:	22e6      	movs	r2, #230	@ 0xe6
 8004948:	9805      	ldr	r0, [sp, #20]
 800494a:	2138      	movs	r1, #56	@ 0x38
 800494c:	f7fd fedd 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8004950:	9805      	ldr	r0, [sp, #20]
 8004952:	f8ad b058 	strh.w	fp, [sp, #88]	@ 0x58
 8004956:	a916      	add	r1, sp, #88	@ 0x58
 8004958:	f00d f882 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800495c:	9905      	ldr	r1, [sp, #20]
 800495e:	4630      	mov	r0, r6
 8004960:	f009 f86e 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(223, 229);
 8004964:	22e5      	movs	r2, #229	@ 0xe5
 8004966:	9806      	ldr	r0, [sp, #24]
 8004968:	21df      	movs	r1, #223	@ 0xdf
 800496a:	f7fd fece 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 800496e:	9806      	ldr	r0, [sp, #24]
 8004970:	f8ad b058 	strh.w	fp, [sp, #88]	@ 0x58
 8004974:	a916      	add	r1, sp, #88	@ 0x58
 8004976:	f00d f873 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800497a:	9906      	ldr	r1, [sp, #24]
 800497c:	4630      	mov	r0, r6
 800497e:	f009 f85f 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(56, 0);
 8004982:	462a      	mov	r2, r5
 8004984:	9807      	ldr	r0, [sp, #28]
 8004986:	2138      	movs	r1, #56	@ 0x38
 8004988:	f7fd febf 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800498c:	f04f 0104 	mov.w	r1, #4
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004990:	a816      	add	r0, sp, #88	@ 0x58
 8004992:	f8ad 1058 	strh.w	r1, [sp, #88]	@ 0x58
 8004996:	4601      	mov	r1, r0
 8004998:	9807      	ldr	r0, [sp, #28]
 800499a:	f00d f861 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800499e:	9907      	ldr	r1, [sp, #28]
 80049a0:	4630      	mov	r0, r6
 80049a2:	f009 f84d 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(245, 111);
 80049a6:	226f      	movs	r2, #111	@ 0x6f
 80049a8:	9804      	ldr	r0, [sp, #16]
 80049aa:	21f5      	movs	r1, #245	@ 0xf5
 80049ac:	f7fd fead 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80049b0:	f8d4 3398 	ldr.w	r3, [r4, #920]	@ 0x398
        color = newColor;
 80049b4:	492b      	ldr	r1, [pc, #172]	@ (8004a64 <_ZN23HardReadyScreenViewBaseC1Ev+0x5cc>)
        boundingArea = calculateBoundingArea();
 80049b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80049ba:	f8c4 13c8 	str.w	r1, [r4, #968]	@ 0x3c8
        linespace = space;
 80049be:	f8a4 53cc 	strh.w	r5, [r4, #972]	@ 0x3cc
        boundingArea = calculateBoundingArea();
 80049c2:	9904      	ldr	r1, [sp, #16]
 80049c4:	4638      	mov	r0, r7
 80049c6:	4798      	blx	r3
 80049c8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80049cc:	f504 7375 	add.w	r3, r4, #980	@ 0x3d4
 80049d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049d4:	f8d9 3000 	ldr.w	r3, [r9]
        boundingArea = calculateBoundingArea();
 80049d8:	f8c4 53d4 	str.w	r5, [r4, #980]	@ 0x3d4
 80049dc:	f04f 30ff 	mov.w	r0, #4294967295
 80049e0:	e9c4 05f6 	strd	r0, r5, [r4, #984]	@ 0x3d8
        rotation = textRotation;
 80049e4:	f884 b3d0 	strb.w	fp, [r4, #976]	@ 0x3d0
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 80049e8:	f204 4524 	addw	r5, r4, #1060	@ 0x424
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	f43f af79 	beq.w	80048e4 <_ZN23HardReadyScreenViewBaseC1Ev+0x44c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80049f6:	2b08      	cmp	r3, #8
 80049f8:	d980      	bls.n	80048fc <_ZN23HardReadyScreenViewBaseC1Ev+0x464>
        return texts->getText(typedTextId);
 80049fa:	4b1f      	ldr	r3, [pc, #124]	@ (8004a78 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e0>)
 80049fc:	2108      	movs	r1, #8
 80049fe:	6818      	ldr	r0, [r3, #0]
 8004a00:	f001 fe82 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8004a04:	4a1d      	ldr	r2, [pc, #116]	@ (8004a7c <_ZN23HardReadyScreenViewBaseC1Ev+0x5e4>)
 8004a06:	4603      	mov	r3, r0
 8004a08:	210a      	movs	r1, #10
 8004a0a:	4628      	mov	r0, r5
 8004a0c:	f013 f900 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8004a10:	9804      	ldr	r0, [sp, #16]
 8004a12:	f8c4 53e0 	str.w	r5, [r4, #992]	@ 0x3e0
 8004a16:	f00c fde9 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a1a:	230a      	movs	r3, #10
 8004a1c:	f8ad 305c 	strh.w	r3, [sp, #92]	@ 0x5c
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFLF));
 8004a20:	ab16      	add	r3, sp, #88	@ 0x58
 8004a22:	4619      	mov	r1, r3
 8004a24:	4a16      	ldr	r2, [pc, #88]	@ (8004a80 <_ZN23HardReadyScreenViewBaseC1Ev+0x5e8>)
 8004a26:	9804      	ldr	r0, [sp, #16]
 8004a28:	9216      	str	r2, [sp, #88]	@ 0x58
 8004a2a:	f00c fdff 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004a2e:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8004a30:	f884 83ce 	strb.w	r8, [r4, #974]	@ 0x3ce
 8004a34:	4630      	mov	r0, r6
 8004a36:	f009 f803 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(223, 2);
 8004a3a:	2202      	movs	r2, #2
 8004a3c:	9808      	ldr	r0, [sp, #32]
 8004a3e:	21df      	movs	r1, #223	@ 0xdf
 8004a40:	f7fd fe63 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8004a44:	f04f 0104 	mov.w	r1, #4
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004a48:	9808      	ldr	r0, [sp, #32]
 8004a4a:	f8ad 1058 	strh.w	r1, [sp, #88]	@ 0x58
 8004a4e:	a916      	add	r1, sp, #88	@ 0x58
 8004a50:	f00d f806 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004a54:	4630      	mov	r0, r6
 8004a56:	9908      	ldr	r1, [sp, #32]
 8004a58:	f008 fff2 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004a5c:	4620      	mov	r0, r4
 8004a5e:	b019      	add	sp, #100	@ 0x64
 8004a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a64:	ffdeab5f 	.word	0xffdeab5f
 8004a68:	08029232 	.word	0x08029232
 8004a6c:	08029334 	.word	0x08029334
 8004a70:	080292af 	.word	0x080292af
 8004a74:	080292f6 	.word	0x080292f6
 8004a78:	20013fc4 	.word	0x20013fc4
 8004a7c:	0802937f 	.word	0x0802937f
 8004a80:	0802a408 	.word	0x0802a408
 8004a84:	20013fb8 	.word	0x20013fb8
 8004a88:	20013fbc 	.word	0x20013fbc

08004a8c <_ZN18HardScreenViewBase11setupScreenEv>:
}

void HardScreenViewBase::setupScreen()
{

}
 8004a8c:	4770      	bx	lr
	...

08004a90 <_ZN18HardScreenViewBaseD1Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8004a90:	b510      	push	{r4, lr}
 8004a92:	4b03      	ldr	r3, [pc, #12]	@ (8004aa0 <_ZN18HardScreenViewBaseD1Ev+0x10>)
 8004a94:	6003      	str	r3, [r0, #0]
 8004a96:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004a98:	f00d ffea 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004a9c:	4620      	mov	r0, r4
 8004a9e:	bd10      	pop	{r4, pc}
 8004aa0:	0802a7e4 	.word	0x0802a7e4

08004aa4 <_ZN18HardScreenViewBaseD0Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8004aa4:	b510      	push	{r4, lr}
 8004aa6:	4b06      	ldr	r3, [pc, #24]	@ (8004ac0 <_ZN18HardScreenViewBaseD0Ev+0x1c>)
 8004aa8:	6003      	str	r3, [r0, #0]
 8004aaa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004aac:	f00d ffe0 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004ab0:	4620      	mov	r0, r4
 8004ab2:	f241 61cc 	movw	r1, #5836	@ 0x16cc
 8004ab6:	f022 f9ad 	bl	8026e14 <_ZdlPvj>
 8004aba:	4620      	mov	r0, r4
 8004abc:	bd10      	pop	{r4, pc}
 8004abe:	bf00      	nop
 8004ac0:	0802a7e4 	.word	0x0802a7e4

08004ac4 <_ZN18HardScreenViewBaseC1Ev>:
HardScreenViewBase::HardScreenViewBase()
 8004ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ac8:	4604      	mov	r4, r0
 8004aca:	b097      	sub	sp, #92	@ 0x5c
 8004acc:	46a2      	mov	sl, r4
 8004ace:	2600      	movs	r6, #0
 8004ad0:	f011 fbbe 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 8004ad4:	4ba0      	ldr	r3, [pc, #640]	@ (8004d58 <_ZN18HardScreenViewBaseC1Ev+0x294>)
 8004ad6:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8004ad8:	f84a 3b40 	str.w	r3, [sl], #64
 8004adc:	4650      	mov	r0, sl
 8004ade:	f7fd fe35 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004ae2:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8004aec:	9309      	str	r3, [sp, #36]	@ 0x24
 8004aee:	f104 05c4 	add.w	r5, r4, #196	@ 0xc4
 8004af2:	f7fd fe2b 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004af6:	4640      	mov	r0, r8
 8004af8:	f7fd fe28 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004afc:	4628      	mov	r0, r5
 8004afe:	f7fd fe25 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b02:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8004b06:	4618      	mov	r0, r3
 8004b08:	4f94      	ldr	r7, [pc, #592]	@ (8004d5c <_ZN18HardScreenViewBaseC1Ev+0x298>)
 8004b0a:	930e      	str	r3, [sp, #56]	@ 0x38
 8004b0c:	f04f 0901 	mov.w	r9, #1
 8004b10:	f7fd fe1c 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b14:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8004b18:	4618      	mov	r0, r3
        : TextArea()
 8004b1a:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8004b1e:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8004b22:	f884 9114 	strb.w	r9, [r4, #276]	@ 0x114
 8004b26:	930d      	str	r3, [sp, #52]	@ 0x34
 8004b28:	f7fd fe10 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b2c:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8004b30:	f884 9140 	strb.w	r9, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 8004b34:	4f8a      	ldr	r7, [pc, #552]	@ (8004d60 <_ZN18HardScreenViewBaseC1Ev+0x29c>)
        : TextArea()
 8004b36:	4658      	mov	r0, fp
 8004b38:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 8004b3c:	f7fd fe1c 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004b40:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8004b44:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8004b48:	4648      	mov	r0, r9
 8004b4a:	f7fd fe15 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004b4e:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 8004b52:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 8004b56:	4618      	mov	r0, r3
 8004b58:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8004b5c:	9303      	str	r3, [sp, #12]
 8004b5e:	f7fd fe0b 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8004b62:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8004b66:	4618      	mov	r0, r3
 8004b68:	9304      	str	r3, [sp, #16]
 8004b6a:	f7fd fe05 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 8004b6e:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 8004b72:	4618      	mov	r0, r3
 8004b74:	4f7b      	ldr	r7, [pc, #492]	@ (8004d64 <_ZN18HardScreenViewBaseC1Ev+0x2a0>)
 8004b76:	930c      	str	r3, [sp, #48]	@ 0x30
 8004b78:	f7fd fde8 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b7c:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8004b80:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 8004b84:	4618      	mov	r0, r3
 8004b86:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 8004b8a:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8004b8e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004b90:	f7fd fddc 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8004b94:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 8004b98:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 8004b9c:	a914      	add	r1, sp, #80	@ 0x50
 8004b9e:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8004ba2:	4618      	mov	r0, r3
 8004ba4:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 8004ba8:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8004bac:	9305      	str	r3, [sp, #20]
 8004bae:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004bb2:	f7ff fc57 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bb6:	f504 7341 	add.w	r3, r4, #772	@ 0x304
 8004bba:	a914      	add	r1, sp, #80	@ 0x50
 8004bbc:	4618      	mov	r0, r3
 8004bbe:	9306      	str	r3, [sp, #24]
 8004bc0:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004bc4:	f7ff fc4e 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bc8:	f504 734c 	add.w	r3, r4, #816	@ 0x330
 8004bcc:	a914      	add	r1, sp, #80	@ 0x50
 8004bce:	4618      	mov	r0, r3
 8004bd0:	9307      	str	r3, [sp, #28]
 8004bd2:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004bd6:	f7ff fc45 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bda:	f504 7357 	add.w	r3, r4, #860	@ 0x35c
 8004bde:	a914      	add	r1, sp, #80	@ 0x50
 8004be0:	4618      	mov	r0, r3
 8004be2:	9308      	str	r3, [sp, #32]
 8004be4:	f8ad 7050 	strh.w	r7, [sp, #80]	@ 0x50
 8004be8:	f7ff fc3c 	bl	8004464 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004bec:	f504 7362 	add.w	r3, r4, #904	@ 0x388
 8004bf0:	4618      	mov	r0, r3
 8004bf2:	930a      	str	r3, [sp, #40]	@ 0x28
 8004bf4:	f00b fc66 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004bf8:	f504 7374 	add.w	r3, r4, #976	@ 0x3d0
 8004bfc:	4618      	mov	r0, r3
 8004bfe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004c00:	f7fc fc60 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004c04:	4b58      	ldr	r3, [pc, #352]	@ (8004d68 <_ZN18HardScreenViewBaseC1Ev+0x2a4>)
 8004c06:	f8c4 33d0 	str.w	r3, [r4, #976]	@ 0x3d0
 8004c0a:	3324      	adds	r3, #36	@ 0x24
 8004c0c:	f8c4 33d8 	str.w	r3, [r4, #984]	@ 0x3d8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004c10:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8004c14:	f204 400c 	addw	r0, r4, #1036	@ 0x40c
 8004c18:	f8c4 63dc 	str.w	r6, [r4, #988]	@ 0x3dc
 8004c1c:	f00d ff1e 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004c20:	23f0      	movs	r3, #240	@ 0xf0
 8004c22:	4632      	mov	r2, r6
 8004c24:	4650      	mov	r0, sl
 8004c26:	9300      	str	r3, [sp, #0]
 8004c28:	4631      	mov	r1, r6
 8004c2a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004c2e:	f7fd fd79 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c32:	1d27      	adds	r7, r4, #4
 8004c34:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004c38:	4651      	mov	r1, sl
 8004c3a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8004c3c:	4638      	mov	r0, r7
 8004c3e:	f008 feff 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 8004c42:	23f0      	movs	r3, #240	@ 0xf0
 8004c44:	f04f 3aff 	mov.w	sl, #4294967295
 8004c48:	4632      	mov	r2, r6
 8004c4a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004c4c:	9300      	str	r3, [sp, #0]
 8004c4e:	4631      	mov	r1, r6
 8004c50:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004c54:	f7fd fd66 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c58:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004c5a:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 8004c5e:	4638      	mov	r0, r7
 8004c60:	f008 feee 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8004c64:	2202      	movs	r2, #2
 8004c66:	23ec      	movs	r3, #236	@ 0xec
 8004c68:	4611      	mov	r1, r2
 8004c6a:	4640      	mov	r0, r8
 8004c6c:	9300      	str	r3, [sp, #0]
 8004c6e:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8004c72:	f7fd fd57 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c76:	4b3d      	ldr	r3, [pc, #244]	@ (8004d6c <_ZN18HardScreenViewBaseC1Ev+0x2a8>)
 8004c78:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8004c7c:	4641      	mov	r1, r8
 8004c7e:	4638      	mov	r0, r7
 8004c80:	f008 fede 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8004c84:	23f0      	movs	r3, #240	@ 0xf0
 8004c86:	4632      	mov	r2, r6
 8004c88:	4628      	mov	r0, r5
 8004c8a:	9300      	str	r3, [sp, #0]
 8004c8c:	21a0      	movs	r1, #160	@ 0xa0
 8004c8e:	2303      	movs	r3, #3
 8004c90:	f7fd fd48 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 8004c94:	23dc      	movs	r3, #220	@ 0xdc
 8004c96:	4629      	mov	r1, r5
 8004c98:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
    paddle1.setPosition(7, 110, 5, 20);
 8004c9c:	2514      	movs	r5, #20
 8004c9e:	4638      	mov	r0, r7
        color = newColor;
 8004ca0:	f8c4 a0ec 	str.w	sl, [r4, #236]	@ 0xec
 8004ca4:	f008 fecc 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ca8:	2305      	movs	r3, #5
 8004caa:	226e      	movs	r2, #110	@ 0x6e
 8004cac:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8004cae:	9500      	str	r5, [sp, #0]
 8004cb0:	2107      	movs	r1, #7
 8004cb2:	f7fd fd37 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004cb6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004cb8:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
 8004cbc:	4638      	mov	r0, r7
 8004cbe:	f008 febf 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 8004cc2:	2305      	movs	r3, #5
 8004cc4:	226e      	movs	r2, #110	@ 0x6e
 8004cc6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8004cc8:	9500      	str	r5, [sp, #0]
 8004cca:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8004cce:	f7fd fd29 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004cd2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8004cd4:	f8c4 a144 	str.w	sl, [r4, #324]	@ 0x144
 8004cd8:	4638      	mov	r0, r7
 8004cda:	f008 feb1 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 8004cde:	2216      	movs	r2, #22
 8004ce0:	21b8      	movs	r1, #184	@ 0xb8
 8004ce2:	4658      	mov	r0, fp
 8004ce4:	f7fd fd11 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004ce8:	4b21      	ldr	r3, [pc, #132]	@ (8004d70 <_ZN18HardScreenViewBaseC1Ev+0x2ac>)
 8004cea:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8004cee:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8004cf2:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8004cf6:	ad10      	add	r5, sp, #64	@ 0x40
 8004cf8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004cfc:	4659      	mov	r1, fp
 8004cfe:	4628      	mov	r0, r5
 8004d00:	4798      	blx	r3
 8004d02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d06:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 8004d0a:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8004d0e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8004d12:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8004d16:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8004d1a:	4659      	mov	r1, fp
 8004d1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004d20:	4628      	mov	r0, r5
 8004d22:	4798      	blx	r3
 8004d24:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d28:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d2c:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 8004d88 <_ZN18HardScreenViewBaseC1Ev+0x2c4>
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER3).getText());
 8004d30:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
 8004d34:	9309      	str	r3, [sp, #36]	@ 0x24
 8004d36:	f8d8 3000 	ldr.w	r3, [r8]
 8004d3a:	b92b      	cbnz	r3, 8004d48 <_ZN18HardScreenViewBaseC1Ev+0x284>
 8004d3c:	4b0d      	ldr	r3, [pc, #52]	@ (8004d74 <_ZN18HardScreenViewBaseC1Ev+0x2b0>)
 8004d3e:	4a0e      	ldr	r2, [pc, #56]	@ (8004d78 <_ZN18HardScreenViewBaseC1Ev+0x2b4>)
 8004d40:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d42:	480e      	ldr	r0, [pc, #56]	@ (8004d7c <_ZN18HardScreenViewBaseC1Ev+0x2b8>)
 8004d44:	f022 ffa2 	bl	8027c8c <__assert_func>
 8004d48:	4b0d      	ldr	r3, [pc, #52]	@ (8004d80 <_ZN18HardScreenViewBaseC1Ev+0x2bc>)
 8004d4a:	881b      	ldrh	r3, [r3, #0]
 8004d4c:	2b01      	cmp	r3, #1
 8004d4e:	d81d      	bhi.n	8004d8c <_ZN18HardScreenViewBaseC1Ev+0x2c8>
 8004d50:	4b0c      	ldr	r3, [pc, #48]	@ (8004d84 <_ZN18HardScreenViewBaseC1Ev+0x2c0>)
 8004d52:	4a09      	ldr	r2, [pc, #36]	@ (8004d78 <_ZN18HardScreenViewBaseC1Ev+0x2b4>)
 8004d54:	2161      	movs	r1, #97	@ 0x61
 8004d56:	e7f4      	b.n	8004d42 <_ZN18HardScreenViewBaseC1Ev+0x27e>
 8004d58:	0802a7e4 	.word	0x0802a7e4
 8004d5c:	0802a4a8 	.word	0x0802a4a8
 8004d60:	0802a418 	.word	0x0802a418
 8004d64:	0802b144 	.word	0x0802b144
 8004d68:	0802ae0c 	.word	0x0802ae0c
 8004d6c:	ff0c3837 	.word	0xff0c3837
 8004d70:	ff595656 	.word	0xff595656
 8004d74:	08029232 	.word	0x08029232
 8004d78:	08029334 	.word	0x08029334
 8004d7c:	080292af 	.word	0x080292af
 8004d80:	20013fbc 	.word	0x20013fbc
 8004d84:	080292f6 	.word	0x080292f6
 8004d88:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8004d8c:	4bae      	ldr	r3, [pc, #696]	@ (8005048 <_ZN18HardScreenViewBaseC1Ev+0x584>)
 8004d8e:	2101      	movs	r1, #1
 8004d90:	6818      	ldr	r0, [r3, #0]
 8004d92:	f001 fcb9 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8004d96:	4aad      	ldr	r2, [pc, #692]	@ (800504c <_ZN18HardScreenViewBaseC1Ev+0x588>)
 8004d98:	4603      	mov	r3, r0
 8004d9a:	210a      	movs	r1, #10
 8004d9c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004d9e:	f012 ff37 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8004da2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004da4:	f8c4 1190 	str.w	r1, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 8004da8:	4658      	mov	r0, fp
 8004daa:	f00c fc1f 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004dae:	4ba8      	ldr	r3, [pc, #672]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004db0:	9314      	str	r3, [sp, #80]	@ 0x50
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UN9H));
 8004db2:	4658      	mov	r0, fp
 8004db4:	2319      	movs	r3, #25
 8004db6:	a914      	add	r1, sp, #80	@ 0x50
 8004db8:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004dbc:	f00c fc36 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004dc0:	4659      	mov	r1, fp
 8004dc2:	4638      	mov	r0, r7
 8004dc4:	f008 fe3c 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 8004dc8:	22c3      	movs	r2, #195	@ 0xc3
 8004dca:	2175      	movs	r1, #117	@ 0x75
 8004dcc:	4648      	mov	r0, r9
 8004dce:	f7fd fc9c 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004dd2:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8004dd6:	499f      	ldr	r1, [pc, #636]	@ (8005054 <_ZN18HardScreenViewBaseC1Ev+0x590>)
        boundingArea = calculateBoundingArea();
 8004dd8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8004ddc:	f8c4 11c4 	str.w	r1, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 8004de0:	4628      	mov	r0, r5
 8004de2:	4649      	mov	r1, r9
        linespace = space;
 8004de4:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8004de8:	4798      	blx	r3
 8004dea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004dee:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8004df2:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8004df6:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8004dfa:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 8004dfe:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8004e02:	f884 11cc 	strb.w	r1, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8004e06:	4628      	mov	r0, r5
 8004e08:	4649      	mov	r1, r9
 8004e0a:	4798      	blx	r3
 8004e0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004e10:	f8d8 3000 	ldr.w	r3, [r8]
 8004e14:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER3).getText());
 8004e18:	f504 7b7e 	add.w	fp, r4, #1016	@ 0x3f8
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	d08d      	beq.n	8004d3c <_ZN18HardScreenViewBaseC1Ev+0x278>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004e20:	498d      	ldr	r1, [pc, #564]	@ (8005058 <_ZN18HardScreenViewBaseC1Ev+0x594>)
 8004e22:	880b      	ldrh	r3, [r1, #0]
 8004e24:	2b02      	cmp	r3, #2
 8004e26:	d993      	bls.n	8004d50 <_ZN18HardScreenViewBaseC1Ev+0x28c>
        return texts->getText(typedTextId);
 8004e28:	4a87      	ldr	r2, [pc, #540]	@ (8005048 <_ZN18HardScreenViewBaseC1Ev+0x584>)
 8004e2a:	2102      	movs	r1, #2
 8004e2c:	6810      	ldr	r0, [r2, #0]
 8004e2e:	f001 fc6b 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8004e32:	4a86      	ldr	r2, [pc, #536]	@ (800504c <_ZN18HardScreenViewBaseC1Ev+0x588>)
 8004e34:	4603      	mov	r3, r0
 8004e36:	210a      	movs	r1, #10
 8004e38:	4658      	mov	r0, fp
 8004e3a:	f012 fee9 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 8004e3e:	4648      	mov	r0, r9
 8004e40:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 8004e44:	f00c fbd2 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OTAD));
 8004e48:	aa14      	add	r2, sp, #80	@ 0x50
        : typedTextId(id)
 8004e4a:	4b81      	ldr	r3, [pc, #516]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004e4c:	9314      	str	r3, [sp, #80]	@ 0x50
 8004e4e:	4611      	mov	r1, r2
 8004e50:	2318      	movs	r3, #24
 8004e52:	4648      	mov	r0, r9
 8004e54:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004e58:	f00c fbe8 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e5c:	4649      	mov	r1, r9
 8004e5e:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 8004e60:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8004e64:	f008 fdec 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004e68:	2313      	movs	r3, #19
 8004e6a:	9803      	ldr	r0, [sp, #12]
 8004e6c:	f8cd 9000 	str.w	r9, [sp]
 8004e70:	22b4      	movs	r2, #180	@ 0xb4
 8004e72:	218c      	movs	r1, #140	@ 0x8c
 8004e74:	f7fd fc56 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8004e78:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004e7a:	f8c4 a210 	str.w	sl, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8004e7e:	4628      	mov	r0, r5
        linespace = space;
 8004e80:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 8004e84:	f00c f92a 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e88:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e8c:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 8004e90:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8004e94:	f04f 0101 	mov.w	r1, #1
 8004e98:	f884 1218 	strb.w	r1, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 8004e9c:	4628      	mov	r0, r5
 8004e9e:	9903      	ldr	r1, [sp, #12]
 8004ea0:	f00c f91c 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ea4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ea8:	4b69      	ldr	r3, [pc, #420]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004eaa:	9314      	str	r3, [sp, #80]	@ 0x50
 8004eac:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8004eb0:	2317      	movs	r3, #23
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z3TY));
 8004eb2:	9803      	ldr	r0, [sp, #12]
 8004eb4:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004eb8:	a914      	add	r1, sp, #80	@ 0x50
        alpha = newAlpha;
 8004eba:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 8004ebe:	f00c fbb5 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ec2:	9903      	ldr	r1, [sp, #12]
 8004ec4:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 8004ec8:	4638      	mov	r0, r7
 8004eca:	f008 fdb9 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 8004ece:	2313      	movs	r3, #19
 8004ed0:	9804      	ldr	r0, [sp, #16]
 8004ed2:	f8cd 9000 	str.w	r9, [sp]
 8004ed6:	2207      	movs	r2, #7
 8004ed8:	21a5      	movs	r1, #165	@ 0xa5
 8004eda:	f7fd fc23 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8004ede:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004ee0:	f8c4 a258 	str.w	sl, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8004ee4:	4628      	mov	r0, r5
        linespace = space;
 8004ee6:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8004eea:	f00c f8f7 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004eee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ef2:	f504 7919 	add.w	r9, r4, #612	@ 0x264
 8004ef6:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8004efa:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8004efe:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 8004f00:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8004f04:	4628      	mov	r0, r5
 8004f06:	f00c f8e9 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f0e:	4b50      	ldr	r3, [pc, #320]	@ (8005050 <_ZN18HardScreenViewBaseC1Ev+0x58c>)
 8004f10:	9314      	str	r3, [sp, #80]	@ 0x50
 8004f12:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8004f16:	2316      	movs	r3, #22
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FY8E));
 8004f18:	9804      	ldr	r0, [sp, #16]
 8004f1a:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8004f1e:	a914      	add	r1, sp, #80	@ 0x50
 8004f20:	f00c fb84 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        borderColor = colorBorder;
 8004f24:	4d4d      	ldr	r5, [pc, #308]	@ (800505c <_ZN18HardScreenViewBaseC1Ev+0x598>)
 8004f26:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8004f28:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8004f2c:	4638      	mov	r0, r7
 8004f2e:	f8df 8134 	ldr.w	r8, [pc, #308]	@ 8005064 <_ZN18HardScreenViewBaseC1Ev+0x5a0>
    goal1.setPosition(0, 60, 2, 120);
 8004f32:	f04f 0978 	mov.w	r9, #120	@ 0x78
 8004f36:	f008 fd83 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004f3a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8004f3c:	f8cd 9000 	str.w	r9, [sp]
 8004f40:	2302      	movs	r3, #2
 8004f42:	223c      	movs	r2, #60	@ 0x3c
 8004f44:	4631      	mov	r1, r6
 8004f46:	f7fd fbed 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f4a:	e9c4 85a6 	strd	r8, r5, [r4, #664]	@ 0x298
 8004f4e:	990c      	ldr	r1, [sp, #48]	@ 0x30
        borderSize = size;
 8004f50:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8004f54:	4638      	mov	r0, r7
 8004f56:	f008 fd73 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 8004f5a:	2302      	movs	r3, #2
 8004f5c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004f5e:	f8cd 9000 	str.w	r9, [sp]
 8004f62:	223c      	movs	r2, #60	@ 0x3c
 8004f64:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8004f68:	f7fd fbdc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8004f6c:	e9c4 85b3 	strd	r8, r5, [r4, #716]	@ 0x2cc
 8004f70:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        borderSize = size;
 8004f72:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8004f76:	4638      	mov	r0, r7
 8004f78:	f008 fd62 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(56, 230);
 8004f7c:	22e6      	movs	r2, #230	@ 0xe6
 8004f7e:	9805      	ldr	r0, [sp, #20]
 8004f80:	2138      	movs	r1, #56	@ 0x38
 8004f82:	f7fd fbc2 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8004f86:	f04f 0503 	mov.w	r5, #3
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8004f8a:	9805      	ldr	r0, [sp, #20]
 8004f8c:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004f90:	a914      	add	r1, sp, #80	@ 0x50
 8004f92:	f00c fd65 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004f96:	9905      	ldr	r1, [sp, #20]
 8004f98:	4638      	mov	r0, r7
 8004f9a:	f008 fd51 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(223, 229);
 8004f9e:	22e5      	movs	r2, #229	@ 0xe5
 8004fa0:	9806      	ldr	r0, [sp, #24]
 8004fa2:	21df      	movs	r1, #223	@ 0xdf
 8004fa4:	f7fd fbb1 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8004fa8:	9806      	ldr	r0, [sp, #24]
 8004faa:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004fae:	a914      	add	r1, sp, #80	@ 0x50
 8004fb0:	f00c fd56 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004fb4:	9906      	ldr	r1, [sp, #24]
 8004fb6:	4638      	mov	r0, r7
 8004fb8:	f008 fd42 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(56, 0);
 8004fbc:	4632      	mov	r2, r6
 8004fbe:	9807      	ldr	r0, [sp, #28]
 8004fc0:	2138      	movs	r1, #56	@ 0x38
 8004fc2:	f7fd fba2 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 8004fc6:	2504      	movs	r5, #4
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004fc8:	9807      	ldr	r0, [sp, #28]
 8004fca:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004fce:	a914      	add	r1, sp, #80	@ 0x50
 8004fd0:	f00c fd46 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004fd4:	9907      	ldr	r1, [sp, #28]
 8004fd6:	4638      	mov	r0, r7
 8004fd8:	f008 fd32 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(223, 2);
 8004fdc:	2202      	movs	r2, #2
 8004fde:	9808      	ldr	r0, [sp, #32]
 8004fe0:	21df      	movs	r1, #223	@ 0xdf
 8004fe2:	f7fd fb92 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8004fe6:	9808      	ldr	r0, [sp, #32]
 8004fe8:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 8004fec:	a914      	add	r1, sp, #80	@ 0x50
 8004fee:	f00c fd37 	bl	8011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004ff2:	9908      	ldr	r1, [sp, #32]
 8004ff4:	4638      	mov	r0, r7
 8004ff6:	f008 fd23 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8004ffa:	230e      	movs	r3, #14
 8004ffc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004ffe:	9300      	str	r3, [sp, #0]
 8005000:	2272      	movs	r2, #114	@ 0x72
 8005002:	219a      	movs	r1, #154	@ 0x9a
 8005004:	f7fd fb8e 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8005008:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 800500a:	e9c4 33ed 	strd	r3, r3, [r4, #948]	@ 0x3b4
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800500e:	23c0      	movs	r3, #192	@ 0xc0
 8005010:	f8c4 33bc 	str.w	r3, [r4, #956]	@ 0x3bc
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005014:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005018:	f8c4 33c4 	str.w	r3, [r4, #964]	@ 0x3c4
 800501c:	4b10      	ldr	r3, [pc, #64]	@ (8005060 <_ZN18HardScreenViewBaseC1Ev+0x59c>)
 800501e:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005022:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005026:	f8a4 33e0 	strh.w	r3, [r4, #992]	@ 0x3e0
 800502a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800502c:	990a      	ldr	r1, [sp, #40]	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800502e:	f8c4 63c8 	str.w	r6, [r4, #968]	@ 0x3c8
 8005032:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005034:	f8c4 63c0 	str.w	r6, [r4, #960]	@ 0x3c0
 8005038:	f8c4 33b0 	str.w	r3, [r4, #944]	@ 0x3b0
 800503c:	f008 fd00 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005040:	4620      	mov	r0, r4
 8005042:	b017      	add	sp, #92	@ 0x5c
 8005044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005048:	20013fc4 	.word	0x20013fc4
 800504c:	0802937f 	.word	0x0802937f
 8005050:	0802a408 	.word	0x0802a408
 8005054:	ff595656 	.word	0xff595656
 8005058:	20013fbc 	.word	0x20013fbc
 800505c:	ffad9334 	.word	0xffad9334
 8005060:	ff990c0c 	.word	0xff990c0c
 8005064:	ff000b6e 	.word	0xff000b6e

08005068 <_ZN25MediumReadyScreenViewBase11setupScreenEv>:
}

void MediumReadyScreenViewBase::setupScreen()
{

}
 8005068:	4770      	bx	lr
	...

0800506c <_ZN25MediumReadyScreenViewBaseD1Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 800506c:	b510      	push	{r4, lr}
 800506e:	4b03      	ldr	r3, [pc, #12]	@ (800507c <_ZN25MediumReadyScreenViewBaseD1Ev+0x10>)
 8005070:	6003      	str	r3, [r0, #0]
 8005072:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005074:	f00d fcfc 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005078:	4620      	mov	r0, r4
 800507a:	bd10      	pop	{r4, pc}
 800507c:	0802a818 	.word	0x0802a818

08005080 <_ZN25MediumReadyScreenViewBaseD0Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 8005080:	b510      	push	{r4, lr}
 8005082:	4b06      	ldr	r3, [pc, #24]	@ (800509c <_ZN25MediumReadyScreenViewBaseD0Ev+0x1c>)
 8005084:	6003      	str	r3, [r0, #0]
 8005086:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005088:	f00d fcf2 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800508c:	4620      	mov	r0, r4
 800508e:	f44f 51b1 	mov.w	r1, #5664	@ 0x1620
 8005092:	f021 febf 	bl	8026e14 <_ZdlPvj>
 8005096:	4620      	mov	r0, r4
 8005098:	bd10      	pop	{r4, pc}
 800509a:	bf00      	nop
 800509c:	0802a818 	.word	0x0802a818

080050a0 <_ZN25MediumReadyScreenViewBase15handleTickEventEv>:

void MediumReadyScreenViewBase::handleTickEvent()
{
 80050a0:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 80050a2:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 80050a6:	f8d4 361c 	ldr.w	r3, [r4, #1564]	@ 0x61c
 80050aa:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80050ac:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 80050ae:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80050b2:	d106      	bne.n	80050c2 <_ZN25MediumReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80050b4:	f00f f9d6 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to MediumScreen
        //Go to MediumScreen with no screen transition
        application().gotoMediumScreenScreenNoTransition();
 80050b8:	f7fe faf6 	bl	80036a8 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 80050bc:	2300      	movs	r3, #0
 80050be:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    }
}
 80050c2:	bd10      	pop	{r4, pc}

080050c4 <_ZN25MediumReadyScreenViewBaseC1Ev>:
MediumReadyScreenViewBase::MediumReadyScreenViewBase() :
 80050c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050c8:	4604      	mov	r4, r0
 80050ca:	b093      	sub	sp, #76	@ 0x4c
    frameCountInteraction1Interval(0)
 80050cc:	46a1      	mov	r9, r4
 80050ce:	2600      	movs	r6, #0
 80050d0:	f011 f8be 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 80050d4:	4bde      	ldr	r3, [pc, #888]	@ (8005450 <_ZN25MediumReadyScreenViewBaseC1Ev+0x38c>)
 80050d6:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80050d8:	f849 3b40 	str.w	r3, [r9], #64
 80050dc:	4648      	mov	r0, r9
 80050de:	f7fd fb35 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80050e2:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 80050e6:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 80050ea:	4618      	mov	r0, r3
 80050ec:	9304      	str	r3, [sp, #16]
 80050ee:	f7fd fb2d 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80050f2:	4650      	mov	r0, sl
 80050f4:	f7fd fb2a 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80050f8:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80050fc:	4618      	mov	r0, r3
 80050fe:	9305      	str	r3, [sp, #20]
 8005100:	f7fd fb24 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005104:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005108:	4618      	mov	r0, r3
 800510a:	9306      	str	r3, [sp, #24]
 800510c:	f00b f9da 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005110:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8005114:	4618      	mov	r0, r3
 8005116:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005118:	f7fc f9d4 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800511c:	4bcd      	ldr	r3, [pc, #820]	@ (8005454 <_ZN25MediumReadyScreenViewBaseC1Ev+0x390>)
 800511e:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8005122:	3324      	adds	r3, #36	@ 0x24
 8005124:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 8005128:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 800512c:	4618      	mov	r0, r3
 800512e:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 8005132:	4dc9      	ldr	r5, [pc, #804]	@ (8005458 <_ZN25MediumReadyScreenViewBaseC1Ev+0x394>)
 8005134:	930a      	str	r3, [sp, #40]	@ 0x28
 8005136:	f04f 0701 	mov.w	r7, #1
 800513a:	f7fd fb07 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 800513e:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8005142:	f504 78d2 	add.w	r8, r4, #420	@ 0x1a4
 8005146:	4618      	mov	r0, r3
 8005148:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 800514c:	f884 7170 	strb.w	r7, [r4, #368]	@ 0x170
 8005150:	f504 7bf6 	add.w	fp, r4, #492	@ 0x1ec
 8005154:	9309      	str	r3, [sp, #36]	@ 0x24
 8005156:	f7fd faf9 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 800515a:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 800515e:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 8005162:	4640      	mov	r0, r8
 8005164:	f7fd fb08 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 8005168:	4658      	mov	r0, fp
 800516a:	f7fd fb05 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800516e:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 8005172:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005174:	4db9      	ldr	r5, [pc, #740]	@ (800545c <_ZN25MediumReadyScreenViewBaseC1Ev+0x398>)
        : TextArea()
 8005176:	9302      	str	r3, [sp, #8]
 8005178:	f7fd fafe 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 800517c:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 8005180:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 8005184:	4618      	mov	r0, r3
 8005186:	f8c4 627c 	str.w	r6, [r4, #636]	@ 0x27c
 800518a:	4fb5      	ldr	r7, [pc, #724]	@ (8005460 <_ZN25MediumReadyScreenViewBaseC1Ev+0x39c>)
 800518c:	9308      	str	r3, [sp, #32]
 800518e:	f7fd fadd 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005192:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 8005196:	f8c4 7280 	str.w	r7, [r4, #640]	@ 0x280
 800519a:	4618      	mov	r0, r3
 800519c:	f8c4 62ac 	str.w	r6, [r4, #684]	@ 0x2ac
 80051a0:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
 80051a4:	9307      	str	r3, [sp, #28]
 80051a6:	f7fd fad1 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 80051aa:	f504 733a 	add.w	r3, r4, #744	@ 0x2e8
 80051ae:	f8c4 72b4 	str.w	r7, [r4, #692]	@ 0x2b4
 80051b2:	4618      	mov	r0, r3
 80051b4:	f8c4 62e0 	str.w	r6, [r4, #736]	@ 0x2e0
 80051b8:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
 80051bc:	9303      	str	r3, [sp, #12]
 80051be:	f7fd fadb 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80051c2:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 80051c6:	f8c4 52e8 	str.w	r5, [r4, #744]	@ 0x2e8
 80051ca:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    __background.setPosition(0, 0, 320, 240);
 80051ce:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 80051d0:	f8c3 661c 	str.w	r6, [r3, #1564]	@ 0x61c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80051d4:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80051d8:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 80051dc:	f00d fc3e 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80051e0:	4632      	mov	r2, r6
 80051e2:	4648      	mov	r0, r9
 80051e4:	9500      	str	r5, [sp, #0]
 80051e6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80051ea:	4631      	mov	r1, r6
 80051ec:	1d27      	adds	r7, r4, #4
 80051ee:	f7fd fa99 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051f2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80051f6:	4649      	mov	r1, r9
 80051f8:	66a3      	str	r3, [r4, #104]	@ 0x68
 80051fa:	4638      	mov	r0, r7
 80051fc:	f008 fc20 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005200:	f04f 39ff 	mov.w	r9, #4294967295
    box3.setPosition(0, 0, 320, 240);
 8005204:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005208:	4632      	mov	r2, r6
 800520a:	9804      	ldr	r0, [sp, #16]
 800520c:	9500      	str	r5, [sp, #0]
 800520e:	4631      	mov	r1, r6
 8005210:	f7fd fa88 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005214:	9904      	ldr	r1, [sp, #16]
 8005216:	f8c4 9094 	str.w	r9, [r4, #148]	@ 0x94
 800521a:	4638      	mov	r0, r7
 800521c:	f008 fc10 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 8005220:	2202      	movs	r2, #2
 8005222:	23ec      	movs	r3, #236	@ 0xec
 8005224:	4611      	mov	r1, r2
 8005226:	4650      	mov	r0, sl
 8005228:	9300      	str	r3, [sp, #0]
 800522a:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 800522e:	f7fd fa79 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005232:	4b8c      	ldr	r3, [pc, #560]	@ (8005464 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a0>)
 8005234:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005238:	4651      	mov	r1, sl
 800523a:	4638      	mov	r0, r7
 800523c:	f008 fc00 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8005240:	4632      	mov	r2, r6
 8005242:	9805      	ldr	r0, [sp, #20]
 8005244:	9500      	str	r5, [sp, #0]
 8005246:	2303      	movs	r3, #3
 8005248:	21a0      	movs	r1, #160	@ 0xa0
 800524a:	f7fd fa6b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 800524e:	23dc      	movs	r3, #220	@ 0xdc
 8005250:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8005252:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8005256:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 800525a:	4638      	mov	r0, r7
 800525c:	f008 fbf0 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 8005260:	230e      	movs	r3, #14
 8005262:	2272      	movs	r2, #114	@ 0x72
 8005264:	9806      	ldr	r0, [sp, #24]
 8005266:	9300      	str	r3, [sp, #0]
 8005268:	219b      	movs	r1, #155	@ 0x9b
 800526a:	f7fd fa5b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800526e:	23c0      	movs	r3, #192	@ 0xc0
 8005270:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005274:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005278:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 800527c:	4b7a      	ldr	r3, [pc, #488]	@ (8005468 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a4>)
 800527e:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005282:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005286:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
 800528a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800528c:	9906      	ldr	r1, [sp, #24]
 800528e:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 8005292:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8005296:	4638      	mov	r0, r7
    paddle1.setPosition(10, 100, 5, 40);
 8005298:	2528      	movs	r5, #40	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 800529a:	f8c4 6130 	str.w	r6, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800529e:	f8c4 6128 	str.w	r6, [r4, #296]	@ 0x128
 80052a2:	f008 fbcd 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80052a6:	2305      	movs	r3, #5
 80052a8:	2264      	movs	r2, #100	@ 0x64
 80052aa:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80052ac:	9500      	str	r5, [sp, #0]
 80052ae:	210a      	movs	r1, #10
 80052b0:	f7fd fa38 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052b4:	990a      	ldr	r1, [sp, #40]	@ 0x28
        color = newColor;
 80052b6:	f8c4 9174 	str.w	r9, [r4, #372]	@ 0x174
 80052ba:	4638      	mov	r0, r7
 80052bc:	f008 fbc0 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 80052c0:	2305      	movs	r3, #5
 80052c2:	2264      	movs	r2, #100	@ 0x64
 80052c4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80052c6:	9500      	str	r5, [sp, #0]
 80052c8:	f240 1133 	movw	r1, #307	@ 0x133
 80052cc:	f7fd fa2a 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80052d2:	f8c4 91a0 	str.w	r9, [r4, #416]	@ 0x1a0
 80052d6:	4638      	mov	r0, r7
 80052d8:	f008 fbb2 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(116, 95, 19, 52);
 80052dc:	2334      	movs	r3, #52	@ 0x34
        boundingArea = calculateBoundingArea();
 80052de:	ad0c      	add	r5, sp, #48	@ 0x30
 80052e0:	225f      	movs	r2, #95	@ 0x5f
 80052e2:	4640      	mov	r0, r8
 80052e4:	9300      	str	r3, [sp, #0]
 80052e6:	2174      	movs	r1, #116	@ 0x74
 80052e8:	2313      	movs	r3, #19
 80052ea:	f7fd fa1b 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052ee:	4641      	mov	r1, r8
        color = newColor;
 80052f0:	f8c4 91d4 	str.w	r9, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 80052f4:	4628      	mov	r0, r5
        linespace = space;
 80052f6:	f8a4 61d8 	strh.w	r6, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 80052fa:	f00b feef 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005302:	f504 7af0 	add.w	sl, r4, #480	@ 0x1e0
 8005306:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        wideTextAction = action;
 800530a:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800530e:	4641      	mov	r1, r8
        wideTextAction = action;
 8005310:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 8005314:	4628      	mov	r0, r5
 8005316:	f00b fee1 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800531a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 800531e:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005322:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005326:	4641      	mov	r1, r8
        rotation = textRotation;
 8005328:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 800532c:	4628      	mov	r0, r5
 800532e:	f00b fed5 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005332:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005336:	4b4d      	ldr	r3, [pc, #308]	@ (800546c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 8005338:	9310      	str	r3, [sp, #64]	@ 0x40
 800533a:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 800533e:	2311      	movs	r3, #17
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDK7));
 8005340:	4640      	mov	r0, r8
 8005342:	a910      	add	r1, sp, #64	@ 0x40
        alpha = newAlpha;
 8005344:	f04f 0abe 	mov.w	sl, #190	@ 0xbe
 8005348:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 800534c:	f00c f96e 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005350:	4641      	mov	r1, r8
 8005352:	4638      	mov	r0, r7
 8005354:	f884 a1da 	strb.w	sl, [r4, #474]	@ 0x1da
 8005358:	f008 fb72 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 800535c:	2134      	movs	r1, #52	@ 0x34
 800535e:	2313      	movs	r3, #19
 8005360:	225f      	movs	r2, #95	@ 0x5f
 8005362:	4658      	mov	r0, fp
 8005364:	9100      	str	r1, [sp, #0]
 8005366:	21bb      	movs	r1, #187	@ 0xbb
 8005368:	f7fd f9dc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 800536c:	4659      	mov	r1, fp
        color = newColor;
 800536e:	f8c4 921c 	str.w	r9, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8005372:	4628      	mov	r0, r5
        linespace = space;
 8005374:	f8a4 6220 	strh.w	r6, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8005378:	f00b feb0 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800537c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005380:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8005384:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8005388:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800538c:	4659      	mov	r1, fp
        wideTextAction = action;
 800538e:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8005392:	4628      	mov	r0, r5
        wideTextAction = action;
 8005394:	4691      	mov	r9, r2
        boundingArea = calculateBoundingArea();
 8005396:	f00b fea1 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800539a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800539e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80053a2:	4659      	mov	r1, fp
 80053a4:	4628      	mov	r0, r5
        rotation = textRotation;
 80053a6:	f884 9224 	strb.w	r9, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 80053aa:	f00b fe97 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80053ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053b2:	4b2e      	ldr	r3, [pc, #184]	@ (800546c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 80053b4:	9310      	str	r3, [sp, #64]	@ 0x40
 80053b6:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80053ba:	2310      	movs	r3, #16
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CWXV));
 80053bc:	4658      	mov	r0, fp
 80053be:	a910      	add	r1, sp, #64	@ 0x40
 80053c0:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80053c4:	f00c f932 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053c8:	4659      	mov	r1, fp
 80053ca:	4638      	mov	r0, r7
        alpha = newAlpha;
 80053cc:	f884 a222 	strb.w	sl, [r4, #546]	@ 0x222
 80053d0:	f008 fb36 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 113);
 80053d4:	2271      	movs	r2, #113	@ 0x71
 80053d6:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80053d8:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 8005484 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c0>
 80053dc:	2135      	movs	r1, #53	@ 0x35
 80053de:	f7fd f994 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80053e2:	4b23      	ldr	r3, [pc, #140]	@ (8005470 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3ac>)
 80053e4:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 80053e8:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 80053ec:	9902      	ldr	r1, [sp, #8]
 80053ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80053f2:	f8a4 6268 	strh.w	r6, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 80053f6:	4628      	mov	r0, r5
 80053f8:	4798      	blx	r3
 80053fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053fe:	f504 781c 	add.w	r8, r4, #624	@ 0x270
        rotation = textRotation;
 8005402:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005406:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800540a:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 800540e:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8005412:	9902      	ldr	r1, [sp, #8]
 8005414:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005418:	4628      	mov	r0, r5
 800541a:	4798      	blx	r3
 800541c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005420:	f8db 3000 	ldr.w	r3, [fp]
 8005424:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 8005428:	f504 784d 	add.w	r8, r4, #820	@ 0x334
 800542c:	b92b      	cbnz	r3, 800543a <_ZN25MediumReadyScreenViewBaseC1Ev+0x376>
 800542e:	4b11      	ldr	r3, [pc, #68]	@ (8005474 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b0>)
 8005430:	4a11      	ldr	r2, [pc, #68]	@ (8005478 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 8005432:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005434:	4811      	ldr	r0, [pc, #68]	@ (800547c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b8>)
 8005436:	f022 fc29 	bl	8027c8c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800543a:	f8df a04c 	ldr.w	sl, [pc, #76]	@ 8005488 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800543e:	f8ba 3000 	ldrh.w	r3, [sl]
 8005442:	2b07      	cmp	r3, #7
 8005444:	d822      	bhi.n	800548c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c8>
 8005446:	4b0e      	ldr	r3, [pc, #56]	@ (8005480 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3bc>)
 8005448:	4a0b      	ldr	r2, [pc, #44]	@ (8005478 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 800544a:	2161      	movs	r1, #97	@ 0x61
 800544c:	e7f2      	b.n	8005434 <_ZN25MediumReadyScreenViewBaseC1Ev+0x370>
 800544e:	bf00      	nop
 8005450:	0802a818 	.word	0x0802a818
 8005454:	0802ae0c 	.word	0x0802ae0c
 8005458:	0802a4a8 	.word	0x0802a4a8
 800545c:	0802a418 	.word	0x0802a418
 8005460:	0802b144 	.word	0x0802b144
 8005464:	ff0c3837 	.word	0xff0c3837
 8005468:	ff990c0c 	.word	0xff990c0c
 800546c:	0802a408 	.word	0x0802a408
 8005470:	ffdeab5f 	.word	0xffdeab5f
 8005474:	08029232 	.word	0x08029232
 8005478:	08029334 	.word	0x08029334
 800547c:	080292af 	.word	0x080292af
 8005480:	080292f6 	.word	0x080292f6
 8005484:	20013fb8 	.word	0x20013fb8
 8005488:	20013fbc 	.word	0x20013fbc
        return texts->getText(typedTextId);
 800548c:	f8df 914c 	ldr.w	r9, [pc, #332]	@ 80055dc <_ZN25MediumReadyScreenViewBaseC1Ev+0x518>
 8005490:	2107      	movs	r1, #7
 8005492:	f8d9 0000 	ldr.w	r0, [r9]
 8005496:	f001 f937 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 800549a:	4a4b      	ldr	r2, [pc, #300]	@ (80055c8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 800549c:	4603      	mov	r3, r0
 800549e:	210a      	movs	r1, #10
 80054a0:	4640      	mov	r0, r8
 80054a2:	f012 fbb5 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 80054a6:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 80054a8:	f8c4 827c 	str.w	r8, [r4, #636]	@ 0x27c
 80054ac:	f00c f89e 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80054b0:	4b46      	ldr	r3, [pc, #280]	@ (80055cc <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MH9F));
 80054b2:	9802      	ldr	r0, [sp, #8]
 80054b4:	9310      	str	r3, [sp, #64]	@ 0x40
 80054b6:	a910      	add	r1, sp, #64	@ 0x40
 80054b8:	230f      	movs	r3, #15
        alpha = newAlpha;
 80054ba:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
 80054be:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80054c2:	f00c f8b3 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80054c6:	9902      	ldr	r1, [sp, #8]
 80054c8:	f884 826a 	strb.w	r8, [r4, #618]	@ 0x26a
 80054cc:	4638      	mov	r0, r7
 80054ce:	f008 fab7 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(318, 60, 2, 120);
 80054d2:	2278      	movs	r2, #120	@ 0x78
 80054d4:	2302      	movs	r3, #2
 80054d6:	9808      	ldr	r0, [sp, #32]
 80054d8:	9200      	str	r2, [sp, #0]
 80054da:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 80054de:	223c      	movs	r2, #60	@ 0x3c
 80054e0:	f7fd f920 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80054e4:	4a3a      	ldr	r2, [pc, #232]	@ (80055d0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 80054e6:	493b      	ldr	r1, [pc, #236]	@ (80055d4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 80054e8:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
        borderColor = colorBorder;
 80054ec:	e9c4 21aa 	strd	r2, r1, [r4, #680]	@ 0x2a8
 80054f0:	4638      	mov	r0, r7
 80054f2:	9908      	ldr	r1, [sp, #32]
 80054f4:	f008 faa4 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(0, 60, 2, 120);
 80054f8:	2078      	movs	r0, #120	@ 0x78
 80054fa:	2302      	movs	r3, #2
 80054fc:	4631      	mov	r1, r6
 80054fe:	9000      	str	r0, [sp, #0]
 8005500:	223c      	movs	r2, #60	@ 0x3c
 8005502:	9807      	ldr	r0, [sp, #28]
 8005504:	f7fd f90e 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005508:	4a31      	ldr	r2, [pc, #196]	@ (80055d0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 800550a:	4932      	ldr	r1, [pc, #200]	@ (80055d4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 800550c:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
        borderColor = colorBorder;
 8005510:	e9c4 21b7 	strd	r2, r1, [r4, #732]	@ 0x2dc
 8005514:	4638      	mov	r0, r7
 8005516:	9907      	ldr	r1, [sp, #28]
 8005518:	f008 fa92 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 800551c:	9803      	ldr	r0, [sp, #12]
 800551e:	226f      	movs	r2, #111	@ 0x6f
 8005520:	21f3      	movs	r1, #243	@ 0xf3
 8005522:	f7fd f8f2 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005526:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        color = newColor;
 800552a:	4a2b      	ldr	r2, [pc, #172]	@ (80055d8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x514>)
        boundingArea = calculateBoundingArea();
 800552c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005530:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8005532:	f8c4 2318 	str.w	r2, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 8005536:	4628      	mov	r0, r5
        linespace = space;
 8005538:	f8a4 631c 	strh.w	r6, [r4, #796]	@ 0x31c
        boundingArea = calculateBoundingArea();
 800553c:	4798      	blx	r3
 800553e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005542:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        boundingArea = calculateBoundingArea();
 8005546:	f504 7649 	add.w	r6, r4, #804	@ 0x324
 800554a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 800554e:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005552:	4628      	mov	r0, r5
 8005554:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005558:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 800555a:	f884 2320 	strb.w	r2, [r4, #800]	@ 0x320
        boundingArea = calculateBoundingArea();
 800555e:	4798      	blx	r3
 8005560:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005564:	f8db 3000 	ldr.w	r3, [fp]
 8005568:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 800556c:	f504 7552 	add.w	r5, r4, #840	@ 0x348
 8005570:	2b00      	cmp	r3, #0
 8005572:	f43f af5c 	beq.w	800542e <_ZN25MediumReadyScreenViewBaseC1Ev+0x36a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005576:	f8ba 3000 	ldrh.w	r3, [sl]
 800557a:	2b07      	cmp	r3, #7
 800557c:	f67f af63 	bls.w	8005446 <_ZN25MediumReadyScreenViewBaseC1Ev+0x382>
        return texts->getText(typedTextId);
 8005580:	f8d9 0000 	ldr.w	r0, [r9]
 8005584:	2107      	movs	r1, #7
 8005586:	f001 f8bf 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 800558a:	4a0f      	ldr	r2, [pc, #60]	@ (80055c8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 800558c:	4603      	mov	r3, r0
 800558e:	210a      	movs	r1, #10
 8005590:	4628      	mov	r0, r5
 8005592:	f012 fb3d 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8005596:	9803      	ldr	r0, [sp, #12]
 8005598:	f8c4 5330 	str.w	r5, [r4, #816]	@ 0x330
 800559c:	f00c f826 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80055a0:	4b0a      	ldr	r3, [pc, #40]	@ (80055cc <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZR5));
 80055a2:	9803      	ldr	r0, [sp, #12]
 80055a4:	9310      	str	r3, [sp, #64]	@ 0x40
 80055a6:	a910      	add	r1, sp, #64	@ 0x40
 80055a8:	f04f 030e 	mov.w	r3, #14
 80055ac:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80055b0:	f00c f83c 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80055b4:	4638      	mov	r0, r7
 80055b6:	9903      	ldr	r1, [sp, #12]
        alpha = newAlpha;
 80055b8:	f884 831e 	strb.w	r8, [r4, #798]	@ 0x31e
 80055bc:	f008 fa40 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80055c0:	4620      	mov	r0, r4
 80055c2:	b013      	add	sp, #76	@ 0x4c
 80055c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055c8:	0802937f 	.word	0x0802937f
 80055cc:	0802a408 	.word	0x0802a408
 80055d0:	ff000b6e 	.word	0xff000b6e
 80055d4:	ffad9334 	.word	0xffad9334
 80055d8:	ffdeab5f 	.word	0xffdeab5f
 80055dc:	20013fc4 	.word	0x20013fc4

080055e0 <_ZN20MediumScreenViewBase11setupScreenEv>:
}

void MediumScreenViewBase::setupScreen()
{

}
 80055e0:	4770      	bx	lr
	...

080055e4 <_ZN20MediumScreenViewBaseD1Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 80055e4:	b510      	push	{r4, lr}
 80055e6:	4b03      	ldr	r3, [pc, #12]	@ (80055f4 <_ZN20MediumScreenViewBaseD1Ev+0x10>)
 80055e8:	6003      	str	r3, [r0, #0]
 80055ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055ec:	f00d fa40 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055f0:	4620      	mov	r0, r4
 80055f2:	bd10      	pop	{r4, pc}
 80055f4:	0802a84c 	.word	0x0802a84c

080055f8 <_ZN20MediumScreenViewBaseD0Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 80055f8:	b510      	push	{r4, lr}
 80055fa:	4b06      	ldr	r3, [pc, #24]	@ (8005614 <_ZN20MediumScreenViewBaseD0Ev+0x1c>)
 80055fc:	6003      	str	r3, [r0, #0]
 80055fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005600:	f00d fa36 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005604:	4620      	mov	r0, r4
 8005606:	f241 611c 	movw	r1, #5660	@ 0x161c
 800560a:	f021 fc03 	bl	8026e14 <_ZdlPvj>
 800560e:	4620      	mov	r0, r4
 8005610:	bd10      	pop	{r4, pc}
 8005612:	bf00      	nop
 8005614:	0802a84c 	.word	0x0802a84c

08005618 <_ZN20MediumScreenViewBaseC1Ev>:
MediumScreenViewBase::MediumScreenViewBase()
 8005618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800561c:	4604      	mov	r4, r0
 800561e:	b093      	sub	sp, #76	@ 0x4c
 8005620:	4625      	mov	r5, r4
 8005622:	2600      	movs	r6, #0
 8005624:	f010 fe14 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 8005628:	4b90      	ldr	r3, [pc, #576]	@ (800586c <_ZN20MediumScreenViewBaseC1Ev+0x254>)
 800562a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 800562c:	f845 3b40 	str.w	r3, [r5], #64
 8005630:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8005634:	4628      	mov	r0, r5
 8005636:	f7fd f889 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 800563a:	4650      	mov	r0, sl
 800563c:	f7fd f886 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005640:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8005644:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 8005648:	4618      	mov	r0, r3
 800564a:	9305      	str	r3, [sp, #20]
 800564c:	f7fd f87e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005650:	4640      	mov	r0, r8
 8005652:	f7fd f87b 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005656:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800565a:	4618      	mov	r0, r3
 800565c:	4f84      	ldr	r7, [pc, #528]	@ (8005870 <_ZN20MediumScreenViewBaseC1Ev+0x258>)
 800565e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005660:	f04f 0901 	mov.w	r9, #1
 8005664:	f7fd f872 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005668:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 800566c:	4618      	mov	r0, r3
        : TextArea()
 800566e:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 8005672:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8005676:	f884 9114 	strb.w	r9, [r4, #276]	@ 0x114
 800567a:	9309      	str	r3, [sp, #36]	@ 0x24
 800567c:	f7fd f866 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005680:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8005684:	f884 9140 	strb.w	r9, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 8005688:	4f7a      	ldr	r7, [pc, #488]	@ (8005874 <_ZN20MediumScreenViewBaseC1Ev+0x25c>)
        : TextArea()
 800568a:	4658      	mov	r0, fp
 800568c:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 8005690:	f7fd f872 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005694:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8005698:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 800569c:	4648      	mov	r0, r9
 800569e:	f7fd f86b 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80056a2:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 80056a6:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 80056aa:	4618      	mov	r0, r3
 80056ac:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 80056b0:	9303      	str	r3, [sp, #12]
 80056b2:	f7fd f861 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
 80056b6:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 80056ba:	4618      	mov	r0, r3
 80056bc:	9304      	str	r3, [sp, #16]
 80056be:	f7fd f85b 	bl	8002778 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 80056c2:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 80056c6:	4618      	mov	r0, r3
 80056c8:	4f6b      	ldr	r7, [pc, #428]	@ (8005878 <_ZN20MediumScreenViewBaseC1Ev+0x260>)
 80056ca:	9308      	str	r3, [sp, #32]
 80056cc:	f7fd f83e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80056d0:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 80056d4:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 80056d8:	4618      	mov	r0, r3
 80056da:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 80056de:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 80056e2:	9307      	str	r3, [sp, #28]
 80056e4:	f7fd f832 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 80056e8:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 80056ec:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 80056f0:	4618      	mov	r0, r3
 80056f2:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 80056f6:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 80056fa:	9306      	str	r3, [sp, #24]
 80056fc:	f00a fee2 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005700:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8005704:	4618      	mov	r0, r3
 8005706:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005708:	f7fb fedc 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800570c:	4b5b      	ldr	r3, [pc, #364]	@ (800587c <_ZN20MediumScreenViewBaseC1Ev+0x264>)
 800570e:	f8c4 3320 	str.w	r3, [r4, #800]	@ 0x320
 8005712:	3324      	adds	r3, #36	@ 0x24
 8005714:	f8c4 3328 	str.w	r3, [r4, #808]	@ 0x328
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005718:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800571c:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 8005720:	f8c4 632c 	str.w	r6, [r4, #812]	@ 0x32c
 8005724:	f00d f99a 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005728:	23f0      	movs	r3, #240	@ 0xf0
 800572a:	4632      	mov	r2, r6
 800572c:	4628      	mov	r0, r5
 800572e:	9300      	str	r3, [sp, #0]
 8005730:	4631      	mov	r1, r6
 8005732:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005736:	f7fc fff5 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800573a:	1d27      	adds	r7, r4, #4
 800573c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005740:	4629      	mov	r1, r5
 8005742:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005744:	4638      	mov	r0, r7
 8005746:	f008 f97b 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 800574a:	23f0      	movs	r3, #240	@ 0xf0
 800574c:	4632      	mov	r2, r6
 800574e:	4650      	mov	r0, sl
 8005750:	9300      	str	r3, [sp, #0]
 8005752:	4631      	mov	r1, r6
 8005754:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005758:	f7fc ffe4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800575c:	f04f 33ff 	mov.w	r3, #4294967295
 8005760:	4651      	mov	r1, sl
 8005762:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8005766:	4638      	mov	r0, r7
 8005768:	f008 f96a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 800576c:	2202      	movs	r2, #2
 800576e:	23ec      	movs	r3, #236	@ 0xec
 8005770:	4611      	mov	r1, r2
 8005772:	9805      	ldr	r0, [sp, #20]
 8005774:	9300      	str	r3, [sp, #0]
 8005776:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 800577a:	f7fc ffd3 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800577e:	4b40      	ldr	r3, [pc, #256]	@ (8005880 <_ZN20MediumScreenViewBaseC1Ev+0x268>)
 8005780:	9905      	ldr	r1, [sp, #20]
 8005782:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005786:	4638      	mov	r0, r7
 8005788:	f008 f95a 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 800578c:	23f0      	movs	r3, #240	@ 0xf0
 800578e:	4632      	mov	r2, r6
 8005790:	4640      	mov	r0, r8
 8005792:	9300      	str	r3, [sp, #0]
 8005794:	21a0      	movs	r1, #160	@ 0xa0
 8005796:	2303      	movs	r3, #3
 8005798:	f7fc ffc4 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 800579c:	f04f 33ff 	mov.w	r3, #4294967295
 80057a0:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
        alpha = newAlpha;
 80057a4:	23dc      	movs	r3, #220	@ 0xdc
 80057a6:	4641      	mov	r1, r8
    paddle1.setPosition(7, 101, 5, 40);
 80057a8:	2528      	movs	r5, #40	@ 0x28
 80057aa:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80057ae:	4638      	mov	r0, r7
 80057b0:	f008 f946 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80057b4:	2265      	movs	r2, #101	@ 0x65
 80057b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80057b8:	9500      	str	r5, [sp, #0]
 80057ba:	2305      	movs	r3, #5
 80057bc:	2107      	movs	r1, #7
 80057be:	f7fc ffb1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80057c2:	f04f 33ff 	mov.w	r3, #4294967295
 80057c6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80057c8:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 80057cc:	4638      	mov	r0, r7
 80057ce:	f008 f937 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 101, 5, 40);
 80057d2:	2265      	movs	r2, #101	@ 0x65
 80057d4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80057d6:	9500      	str	r5, [sp, #0]
 80057d8:	2305      	movs	r3, #5
 80057da:	f44f 719a 	mov.w	r1, #308	@ 0x134
 80057de:	f7fc ffa1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057e2:	f04f 33ff 	mov.w	r3, #4294967295
 80057e6:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 80057ea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80057ec:	4638      	mov	r0, r7
 80057ee:	f008 f927 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 80057f2:	2216      	movs	r2, #22
 80057f4:	21b8      	movs	r1, #184	@ 0xb8
 80057f6:	4658      	mov	r0, fp
 80057f8:	f7fc ff87 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80057fc:	4b21      	ldr	r3, [pc, #132]	@ (8005884 <_ZN20MediumScreenViewBaseC1Ev+0x26c>)
 80057fe:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8005802:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 8005806:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 800580a:	ad0c      	add	r5, sp, #48	@ 0x30
 800580c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005810:	4659      	mov	r1, fp
 8005812:	4628      	mov	r0, r5
 8005814:	4798      	blx	r3
 8005816:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800581a:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 800581e:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8005822:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005826:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 800582a:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 800582e:	4659      	mov	r1, fp
 8005830:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005834:	4628      	mov	r0, r5
 8005836:	4798      	blx	r3
 8005838:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800583c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005840:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 800589c <_ZN20MediumScreenViewBaseC1Ev+0x284>
 8005844:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER2).getText());
 8005848:	f504 7a4d 	add.w	sl, r4, #820	@ 0x334
 800584c:	b92b      	cbnz	r3, 800585a <_ZN20MediumScreenViewBaseC1Ev+0x242>
 800584e:	4b0e      	ldr	r3, [pc, #56]	@ (8005888 <_ZN20MediumScreenViewBaseC1Ev+0x270>)
 8005850:	4a0e      	ldr	r2, [pc, #56]	@ (800588c <_ZN20MediumScreenViewBaseC1Ev+0x274>)
 8005852:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005854:	480e      	ldr	r0, [pc, #56]	@ (8005890 <_ZN20MediumScreenViewBaseC1Ev+0x278>)
 8005856:	f022 fa19 	bl	8027c8c <__assert_func>
 800585a:	4b0e      	ldr	r3, [pc, #56]	@ (8005894 <_ZN20MediumScreenViewBaseC1Ev+0x27c>)
 800585c:	881b      	ldrh	r3, [r3, #0]
 800585e:	2b03      	cmp	r3, #3
 8005860:	d81e      	bhi.n	80058a0 <_ZN20MediumScreenViewBaseC1Ev+0x288>
 8005862:	4b0d      	ldr	r3, [pc, #52]	@ (8005898 <_ZN20MediumScreenViewBaseC1Ev+0x280>)
 8005864:	4a09      	ldr	r2, [pc, #36]	@ (800588c <_ZN20MediumScreenViewBaseC1Ev+0x274>)
 8005866:	2161      	movs	r1, #97	@ 0x61
 8005868:	e7f4      	b.n	8005854 <_ZN20MediumScreenViewBaseC1Ev+0x23c>
 800586a:	bf00      	nop
 800586c:	0802a84c 	.word	0x0802a84c
 8005870:	0802a4a8 	.word	0x0802a4a8
 8005874:	0802a418 	.word	0x0802a418
 8005878:	0802b144 	.word	0x0802b144
 800587c:	0802ae0c 	.word	0x0802ae0c
 8005880:	ff0c3837 	.word	0xff0c3837
 8005884:	ff595656 	.word	0xff595656
 8005888:	08029232 	.word	0x08029232
 800588c:	08029334 	.word	0x08029334
 8005890:	080292af 	.word	0x080292af
 8005894:	20013fbc 	.word	0x20013fbc
 8005898:	080292f6 	.word	0x080292f6
 800589c:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 80058a0:	4b92      	ldr	r3, [pc, #584]	@ (8005aec <_ZN20MediumScreenViewBaseC1Ev+0x4d4>)
 80058a2:	2103      	movs	r1, #3
 80058a4:	6818      	ldr	r0, [r3, #0]
 80058a6:	f000 ff2f 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 80058aa:	4a91      	ldr	r2, [pc, #580]	@ (8005af0 <_ZN20MediumScreenViewBaseC1Ev+0x4d8>)
 80058ac:	4603      	mov	r3, r0
 80058ae:	210a      	movs	r1, #10
 80058b0:	4650      	mov	r0, sl
 80058b2:	f012 f9ad 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score2.resizeToCurrentText();
 80058b6:	4658      	mov	r0, fp
        wc1 = value;
 80058b8:	f8c4 a190 	str.w	sl, [r4, #400]	@ 0x190
 80058bc:	f00b fe96 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80058c0:	f8df a248 	ldr.w	sl, [pc, #584]	@ 8005b0c <_ZN20MediumScreenViewBaseC1Ev+0x4f4>
 80058c4:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 80058c8:	231d      	movs	r3, #29
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KK9M));
 80058ca:	4658      	mov	r0, fp
 80058cc:	a910      	add	r1, sp, #64	@ 0x40
 80058ce:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80058d2:	f00b feab 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058d6:	4659      	mov	r1, fp
 80058d8:	4638      	mov	r0, r7
 80058da:	f008 f8b1 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 80058de:	22c3      	movs	r2, #195	@ 0xc3
 80058e0:	2175      	movs	r1, #117	@ 0x75
 80058e2:	4648      	mov	r0, r9
 80058e4:	f7fc ff11 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80058e8:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 80058ec:	4a81      	ldr	r2, [pc, #516]	@ (8005af4 <_ZN20MediumScreenViewBaseC1Ev+0x4dc>)
        boundingArea = calculateBoundingArea();
 80058ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80058f2:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 80058f6:	4649      	mov	r1, r9
 80058f8:	4628      	mov	r0, r5
        linespace = space;
 80058fa:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 80058fe:	4798      	blx	r3
 8005900:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005904:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8005908:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 800590c:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8005910:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8005914:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8005918:	f884 21cc 	strb.w	r2, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 800591c:	4649      	mov	r1, r9
 800591e:	4628      	mov	r0, r5
 8005920:	4798      	blx	r3
 8005922:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005926:	f8d8 3000 	ldr.w	r3, [r8]
 800592a:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER2).getText());
 800592e:	f504 7b52 	add.w	fp, r4, #840	@ 0x348
 8005932:	2b00      	cmp	r3, #0
 8005934:	d08b      	beq.n	800584e <_ZN20MediumScreenViewBaseC1Ev+0x236>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005936:	4a70      	ldr	r2, [pc, #448]	@ (8005af8 <_ZN20MediumScreenViewBaseC1Ev+0x4e0>)
 8005938:	8813      	ldrh	r3, [r2, #0]
 800593a:	2b04      	cmp	r3, #4
 800593c:	d991      	bls.n	8005862 <_ZN20MediumScreenViewBaseC1Ev+0x24a>
        return texts->getText(typedTextId);
 800593e:	4b6b      	ldr	r3, [pc, #428]	@ (8005aec <_ZN20MediumScreenViewBaseC1Ev+0x4d4>)
 8005940:	2104      	movs	r1, #4
 8005942:	6818      	ldr	r0, [r3, #0]
 8005944:	f000 fee0 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8005948:	4a69      	ldr	r2, [pc, #420]	@ (8005af0 <_ZN20MediumScreenViewBaseC1Ev+0x4d8>)
 800594a:	4603      	mov	r3, r0
 800594c:	210a      	movs	r1, #10
 800594e:	4658      	mov	r0, fp
 8005950:	f012 f95e 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 8005954:	4648      	mov	r0, r9
 8005956:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 800595a:	f00b fe47 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800595e:	231c      	movs	r3, #28
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ATHF));
 8005960:	a910      	add	r1, sp, #64	@ 0x40
 8005962:	4648      	mov	r0, r9
 8005964:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005968:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 800596c:	f00b fe5e 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005970:	4649      	mov	r1, r9
 8005972:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 8005974:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8005978:	f008 f862 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800597c:	9803      	ldr	r0, [sp, #12]
 800597e:	f8cd 9000 	str.w	r9, [sp]
 8005982:	22b4      	movs	r2, #180	@ 0xb4
 8005984:	2313      	movs	r3, #19
 8005986:	218c      	movs	r1, #140	@ 0x8c
 8005988:	f7fc fecc 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800598c:	f04f 33ff 	mov.w	r3, #4294967295
 8005990:	f8c4 3210 	str.w	r3, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 8005994:	9903      	ldr	r1, [sp, #12]
        linespace = space;
 8005996:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 800599a:	4628      	mov	r0, r5
 800599c:	f00b fb9e 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059a0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059a4:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 80059a8:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80059ac:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 80059b0:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 80059b2:	f884 2218 	strb.w	r2, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 80059b6:	4628      	mov	r0, r5
 80059b8:	f00b fb90 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059c0:	231b      	movs	r3, #27
 80059c2:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V9P9));
 80059c6:	9803      	ldr	r0, [sp, #12]
 80059c8:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80059cc:	a910      	add	r1, sp, #64	@ 0x40
        alpha = newAlpha;
 80059ce:	f04f 08be 	mov.w	r8, #190	@ 0xbe
 80059d2:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 80059d6:	f00b fe29 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059da:	9903      	ldr	r1, [sp, #12]
 80059dc:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 80059e0:	4638      	mov	r0, r7
 80059e2:	f008 f82d 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 80059e6:	9804      	ldr	r0, [sp, #16]
 80059e8:	f8cd 9000 	str.w	r9, [sp]
 80059ec:	2207      	movs	r2, #7
 80059ee:	2313      	movs	r3, #19
 80059f0:	21a5      	movs	r1, #165	@ 0xa5
 80059f2:	f7fc fe97 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80059f6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80059fa:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80059fc:	f8c4 3258 	str.w	r3, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8005a00:	4628      	mov	r0, r5
        linespace = space;
 8005a02:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8005a06:	f00b fb69 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a0e:	f504 7919 	add.w	r9, r4, #612	@ 0x264
        rotation = textRotation;
 8005a12:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8005a16:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005a1a:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 8005a1c:	f884 3260 	strb.w	r3, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8005a20:	4628      	mov	r0, r5
 8005a22:	f00b fb5b 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a2a:	231a      	movs	r3, #26
 8005a2c:	e889 0007 	stmia.w	r9, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UJJ8));
 8005a30:	9804      	ldr	r0, [sp, #16]
 8005a32:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005a36:	a910      	add	r1, sp, #64	@ 0x40
 8005a38:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8005a3c:	f00b fdf6 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a40:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 8005a42:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8005a46:	4638      	mov	r0, r7
    goal2.setPosition(318, 60, 2, 120);
 8005a48:	f04f 0878 	mov.w	r8, #120	@ 0x78
 8005a4c:	f007 fff8 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005a50:	9808      	ldr	r0, [sp, #32]
 8005a52:	f8cd 8000 	str.w	r8, [sp]
 8005a56:	223c      	movs	r2, #60	@ 0x3c
 8005a58:	2302      	movs	r3, #2
 8005a5a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8005a5e:	f7fc fe61 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005a62:	4d26      	ldr	r5, [pc, #152]	@ (8005afc <_ZN20MediumScreenViewBaseC1Ev+0x4e4>)
 8005a64:	4b26      	ldr	r3, [pc, #152]	@ (8005b00 <_ZN20MediumScreenViewBaseC1Ev+0x4e8>)
 8005a66:	9908      	ldr	r1, [sp, #32]
        borderSize = size;
 8005a68:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
        borderColor = colorBorder;
 8005a6c:	e9c4 53a6 	strd	r5, r3, [r4, #664]	@ 0x298
 8005a70:	4638      	mov	r0, r7
 8005a72:	f007 ffe5 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(0, 60, 2, 120);
 8005a76:	9807      	ldr	r0, [sp, #28]
 8005a78:	f8cd 8000 	str.w	r8, [sp]
 8005a7c:	223c      	movs	r2, #60	@ 0x3c
 8005a7e:	4631      	mov	r1, r6
 8005a80:	2302      	movs	r3, #2
 8005a82:	f7fc fe4f 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a86:	4b1f      	ldr	r3, [pc, #124]	@ (8005b04 <_ZN20MediumScreenViewBaseC1Ev+0x4ec>)
 8005a88:	9907      	ldr	r1, [sp, #28]
 8005a8a:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
 8005a8e:	4638      	mov	r0, r7
 8005a90:	f8c4 52cc 	str.w	r5, [r4, #716]	@ 0x2cc
        borderSize = size;
 8005a94:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8005a98:	f007 ffd2 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8005a9c:	230e      	movs	r3, #14
 8005a9e:	9806      	ldr	r0, [sp, #24]
 8005aa0:	9300      	str	r3, [sp, #0]
 8005aa2:	2272      	movs	r2, #114	@ 0x72
 8005aa4:	219a      	movs	r1, #154	@ 0x9a
 8005aa6:	f7fc fe3d 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8005aaa:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8005aac:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005ab0:	23c0      	movs	r3, #192	@ 0xc0
 8005ab2:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ab6:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005aba:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
 8005abe:	4b12      	ldr	r3, [pc, #72]	@ (8005b08 <_ZN20MediumScreenViewBaseC1Ev+0x4f0>)
 8005ac0:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005ac4:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005ac8:	f8a4 3330 	strh.w	r3, [r4, #816]	@ 0x330
 8005acc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005ace:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005ad0:	f8c4 6318 	str.w	r6, [r4, #792]	@ 0x318
 8005ad4:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005ad6:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
 8005ada:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
 8005ade:	f007 ffaf 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005ae2:	4620      	mov	r0, r4
 8005ae4:	b013      	add	sp, #76	@ 0x4c
 8005ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005aea:	bf00      	nop
 8005aec:	20013fc4 	.word	0x20013fc4
 8005af0:	0802937f 	.word	0x0802937f
 8005af4:	ff595656 	.word	0xff595656
 8005af8:	20013fbc 	.word	0x20013fbc
 8005afc:	ff000b6e 	.word	0xff000b6e
 8005b00:	ffad9334 	.word	0xffad9334
 8005b04:	ff3b2f05 	.word	0xff3b2f05
 8005b08:	ff990c0c 	.word	0xff990c0c
 8005b0c:	0802a408 	.word	0x0802a408

08005b10 <_ZN19StartScreenViewBase7action1Ev>:
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
 8005b10:	4770      	bx	lr

08005b12 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b12:	4770      	bx	lr

08005b14 <_ZN19StartScreenViewBase11setupScreenEv>:
}

void StartScreenViewBase::setupScreen()
{

}
 8005b14:	4770      	bx	lr

08005b16 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b16:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b18:	68c2      	ldr	r2, [r0, #12]
 8005b1a:	6844      	ldr	r4, [r0, #4]
 8005b1c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b1e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b20:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b24:	07d2      	lsls	r2, r2, #31
 8005b26:	bf48      	it	mi
 8005b28:	5962      	ldrmi	r2, [r4, r5]
 8005b2a:	689b      	ldr	r3, [r3, #8]
    }
 8005b2c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b2e:	bf48      	it	mi
 8005b30:	58d3      	ldrmi	r3, [r2, r3]
 8005b32:	4718      	bx	r3

08005b34 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8005b34:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8005b36:	6840      	ldr	r0, [r0, #4]
 8005b38:	b130      	cbz	r0, 8005b48 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b3a:	689a      	ldr	r2, [r3, #8]
 8005b3c:	b91a      	cbnz	r2, 8005b46 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8005b3e:	68d8      	ldr	r0, [r3, #12]
 8005b40:	f000 0001 	and.w	r0, r0, #1
 8005b44:	4770      	bx	lr
 8005b46:	2001      	movs	r0, #1
    }
 8005b48:	4770      	bx	lr

08005b4a <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b4a:	b510      	push	{r4, lr}
 8005b4c:	2110      	movs	r1, #16
 8005b4e:	4604      	mov	r4, r0
 8005b50:	f021 f960 	bl	8026e14 <_ZdlPvj>
 8005b54:	4620      	mov	r0, r4
 8005b56:	bd10      	pop	{r4, pc}

08005b58 <_ZN19StartScreenViewBaseD1Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8005b58:	b510      	push	{r4, lr}
 8005b5a:	4b03      	ldr	r3, [pc, #12]	@ (8005b68 <_ZN19StartScreenViewBaseD1Ev+0x10>)
 8005b5c:	6003      	str	r3, [r0, #0]
 8005b5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b60:	f00c ff86 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b64:	4620      	mov	r0, r4
 8005b66:	bd10      	pop	{r4, pc}
 8005b68:	0802a898 	.word	0x0802a898

08005b6c <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8005b6c:	b510      	push	{r4, lr}
 8005b6e:	4b06      	ldr	r3, [pc, #24]	@ (8005b88 <_ZN19StartScreenViewBaseD0Ev+0x1c>)
 8005b70:	6003      	str	r3, [r0, #0]
 8005b72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b74:	f00c ff7c 	bl	8012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b78:	4620      	mov	r0, r4
 8005b7a:	f641 017c 	movw	r1, #6268	@ 0x187c
 8005b7e:	f021 f949 	bl	8026e14 <_ZdlPvj>
 8005b82:	4620      	mov	r0, r4
 8005b84:	bd10      	pop	{r4, pc}
 8005b86:	bf00      	nop
 8005b88:	0802a898 	.word	0x0802a898

08005b8c <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b8c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonEasy)
 8005b8e:	f100 03e0 	add.w	r3, r0, #224	@ 0xe0
 8005b92:	4299      	cmp	r1, r3
{
 8005b94:	4604      	mov	r4, r0
 8005b96:	460d      	mov	r5, r1
    if (&src == &buttonEasy)
 8005b98:	d103      	bne.n	8005ba2 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b9a:	f00e fc63 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonEasy clicked change screen to EasyReadyScreen
        //Go to EasyReadyScreen with screen transition towards East
        application().gotoEasyReadyScreenScreenWipeTransitionEast();
 8005b9e:	f7fd fdb3 	bl	8003708 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonMedium)
 8005ba2:	f204 5364 	addw	r3, r4, #1380	@ 0x564
 8005ba6:	429d      	cmp	r5, r3
 8005ba8:	d103      	bne.n	8005bb2 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005baa:	f00e fc5b 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonMedium clicked change screen to MediumReadyScreen
        //Go to MediumReadyScreen with screen transition towards East
        application().gotoMediumReadyScreenScreenWipeTransitionEast();
 8005bae:	f7fd fd8b 	bl	80036c8 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonHard)
 8005bb2:	3498      	adds	r4, #152	@ 0x98
 8005bb4:	42a5      	cmp	r5, r4
 8005bb6:	d105      	bne.n	8005bc4 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
 8005bb8:	f00e fc54 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonHard clicked change screen to HardReadyScreen
        //Go to HardReadyScreen with screen transition towards East
        application().gotoHardReadyScreenScreenWipeTransitionEast();
    }
}
 8005bbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoHardReadyScreenScreenWipeTransitionEast();
 8005bc0:	f7fd bd62 	b.w	8003688 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>
}
 8005bc4:	bd38      	pop	{r3, r4, r5, pc}
	...

08005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    PainterRGB565(colortype color = 0)
 8005bc8:	b538      	push	{r3, r4, r5, lr}
 8005bca:	4604      	mov	r4, r0
 8005bcc:	460d      	mov	r5, r1
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bce:	f7fb fc79 	bl	80014c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bd2:	4b03      	ldr	r3, [pc, #12]	@ (8005be0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x18>)
 8005bd4:	6023      	str	r3, [r4, #0]
 8005bd6:	3324      	adds	r3, #36	@ 0x24
 8005bd8:	60e5      	str	r5, [r4, #12]
 8005bda:	60a3      	str	r3, [r4, #8]
    }
 8005bdc:	4620      	mov	r0, r4
 8005bde:	bd38      	pop	{r3, r4, r5, pc}
 8005be0:	0802ae0c 	.word	0x0802ae0c

08005be4 <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
 8005be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005be8:	4604      	mov	r4, r0
 8005bea:	b0a5      	sub	sp, #148	@ 0x94
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
 8005bec:	46a1      	mov	r9, r4
 8005bee:	2500      	movs	r5, #0
 8005bf0:	f010 fb2e 	bl	8016250 <_ZN8touchgfx6ScreenC1Ev>
 8005bf4:	4be2      	ldr	r3, [pc, #904]	@ (8005f80 <_ZN19StartScreenViewBaseC1Ev+0x39c>)
 8005bf6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8005bf8:	f849 3b40 	str.w	r3, [r9], #64
 8005bfc:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8005c00:	4648      	mov	r0, r9
 8005c02:	f7fc fda3 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005c06:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8005c0a:	4650      	mov	r0, sl
 8005c0c:	f7fc fd9e 	bl	800274c <_ZN8touchgfx3BoxC1Ev>
 8005c10:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
 8005c14:	4640      	mov	r0, r8
 8005c16:	f00c f865 	bl	8011ce4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c1a:	4638      	mov	r0, r7
 8005c1c:	f00c f862 	bl	8011ce4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c20:	f504 7394 	add.w	r3, r4, #296	@ 0x128
 8005c24:	4618      	mov	r0, r3
 8005c26:	9306      	str	r3, [sp, #24]
 8005c28:	f00a fc4c 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005c2c:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
 8005c30:	4629      	mov	r1, r5
 8005c32:	4618      	mov	r0, r3
 8005c34:	9311      	str	r3, [sp, #68]	@ 0x44
 8005c36:	f7ff ffc7 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c3a:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
 8005c3e:	4618      	mov	r0, r3
 8005c40:	9307      	str	r3, [sp, #28]
 8005c42:	f00a fc3f 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005c46:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 8005c4a:	4629      	mov	r1, r5
 8005c4c:	4618      	mov	r0, r3
 8005c4e:	9312      	str	r3, [sp, #72]	@ 0x48
 8005c50:	f7ff ffba 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c54:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
 8005c58:	4618      	mov	r0, r3
 8005c5a:	9308      	str	r3, [sp, #32]
 8005c5c:	f00a fc32 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005c60:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8005c64:	4629      	mov	r1, r5
 8005c66:	4618      	mov	r0, r3
 8005c68:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005c6a:	f7ff ffad 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c6e:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 8005c72:	4618      	mov	r0, r3
 8005c74:	9309      	str	r3, [sp, #36]	@ 0x24
 8005c76:	f00a fc25 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005c7a:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 8005c7e:	4629      	mov	r1, r5
 8005c80:	4618      	mov	r0, r3
 8005c82:	9314      	str	r3, [sp, #80]	@ 0x50
 8005c84:	f7ff ffa0 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005c88:	f504 7326 	add.w	r3, r4, #664	@ 0x298
 8005c8c:	4618      	mov	r0, r3
 8005c8e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005c90:	f00a fc18 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005c94:	f504 7338 	add.w	r3, r4, #736	@ 0x2e0
 8005c98:	4629      	mov	r1, r5
 8005c9a:	4618      	mov	r0, r3
 8005c9c:	9315      	str	r3, [sp, #84]	@ 0x54
 8005c9e:	f7ff ff93 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005ca2:	f504 733d 	add.w	r3, r4, #756	@ 0x2f4
 8005ca6:	4618      	mov	r0, r3
 8005ca8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005caa:	f00a fc0b 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005cae:	f504 734f 	add.w	r3, r4, #828	@ 0x33c
 8005cb2:	4629      	mov	r1, r5
 8005cb4:	4618      	mov	r0, r3
 8005cb6:	9316      	str	r3, [sp, #88]	@ 0x58
 8005cb8:	f7ff ff86 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005cbc:	f504 7354 	add.w	r3, r4, #848	@ 0x350
 8005cc0:	4618      	mov	r0, r3
 8005cc2:	930c      	str	r3, [sp, #48]	@ 0x30
 8005cc4:	f00a fbfe 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005cc8:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 8005ccc:	4629      	mov	r1, r5
 8005cce:	4618      	mov	r0, r3
 8005cd0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8005cd2:	f7ff ff79 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005cd6:	f504 736b 	add.w	r3, r4, #940	@ 0x3ac
 8005cda:	9305      	str	r3, [sp, #20]
          touchable(false),
 8005cdc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8005ce0:	f8a4 33d0 	strh.w	r3, [r4, #976]	@ 0x3d0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005ce4:	4ba7      	ldr	r3, [pc, #668]	@ (8005f84 <_ZN19StartScreenViewBaseC1Ev+0x3a0>)
 8005ce6:	f8c4 33ac 	str.w	r3, [r4, #940]	@ 0x3ac
 8005cea:	4ba7      	ldr	r3, [pc, #668]	@ (8005f88 <_ZN19StartScreenViewBaseC1Ev+0x3a4>)
 8005cec:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
 8005cf0:	f04f 31ff 	mov.w	r1, #4294967295
 8005cf4:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005cf8:	f04f 30ff 	mov.w	r0, #4294967295
 8005cfc:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
              text(0)
 8005d00:	e9c4 05fb 	strd	r0, r5, [r4, #1004]	@ 0x3ec
 8005d04:	f8a4 13d8 	strh.w	r1, [r4, #984]	@ 0x3d8
 8005d08:	f504 707d 	add.w	r0, r4, #1012	@ 0x3f4
        : x(0), y(0), width(0), height(0)
 8005d0c:	e9c4 55ec 	strd	r5, r5, [r4, #944]	@ 0x3b0
 8005d10:	e9c4 55ee 	strd	r5, r5, [r4, #952]	@ 0x3b8
          nextSibling(0),
 8005d14:	e9c4 55f0 	strd	r5, r5, [r4, #960]	@ 0x3c0
          cachedAbsX(0),
 8005d18:	e9c4 55f2 	strd	r5, r5, [r4, #968]	@ 0x3c8
        : color(col)
 8005d1c:	f8c4 53dc 	str.w	r5, [r4, #988]	@ 0x3dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8005d20:	f8a4 53e4 	strh.w	r5, [r4, #996]	@ 0x3e4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8005d24:	f8c4 53e8 	str.w	r5, [r4, #1000]	@ 0x3e8
 8005d28:	900d      	str	r0, [sp, #52]	@ 0x34
 8005d2a:	f00a fbcb 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005d2e:	4629      	mov	r1, r5
 8005d30:	f204 403c 	addw	r0, r4, #1084	@ 0x43c
 8005d34:	9018      	str	r0, [sp, #96]	@ 0x60
 8005d36:	f7ff ff47 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d3a:	f504 608a 	add.w	r0, r4, #1104	@ 0x450
 8005d3e:	900e      	str	r0, [sp, #56]	@ 0x38
 8005d40:	f00a fbc0 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005d44:	4629      	mov	r1, r5
 8005d46:	f504 6093 	add.w	r0, r4, #1176	@ 0x498
 8005d4a:	9019      	str	r0, [sp, #100]	@ 0x64
 8005d4c:	f7ff ff3c 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d50:	f204 40ac 	addw	r0, r4, #1196	@ 0x4ac
 8005d54:	900f      	str	r0, [sp, #60]	@ 0x3c
 8005d56:	f00a fbb5 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005d5a:	4629      	mov	r1, r5
 8005d5c:	f204 40f4 	addw	r0, r4, #1268	@ 0x4f4
 8005d60:	901a      	str	r0, [sp, #104]	@ 0x68
 8005d62:	f7ff ff31 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d66:	f504 60a1 	add.w	r0, r4, #1288	@ 0x508
 8005d6a:	9010      	str	r0, [sp, #64]	@ 0x40
 8005d6c:	f00a fbaa 	bl	80104c4 <_ZN8touchgfx6CircleC1Ev>
 8005d70:	4629      	mov	r1, r5
 8005d72:	f504 60aa 	add.w	r0, r4, #1360	@ 0x550
 8005d76:	901b      	str	r0, [sp, #108]	@ 0x6c
 8005d78:	f7ff ff26 	bl	8005bc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8005d7c:	f204 5064 	addw	r0, r4, #1380	@ 0x564
 8005d80:	9003      	str	r0, [sp, #12]
 8005d82:	f00b ffaf 	bl	8011ce4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005d86:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8005d8a:	4a80      	ldr	r2, [pc, #512]	@ (8005f8c <_ZN19StartScreenViewBaseC1Ev+0x3a8>)
 8005d8c:	f8c3 286c 	str.w	r2, [r3, #2156]	@ 0x86c
 8005d90:	4a7f      	ldr	r2, [pc, #508]	@ (8005f90 <_ZN19StartScreenViewBaseC1Ev+0x3ac>)
 8005d92:	f8c3 4870 	str.w	r4, [r3, #2160]	@ 0x870
 8005d96:	f8c3 2874 	str.w	r2, [r3, #2164]	@ 0x874
 8005d9a:	f8c3 5878 	str.w	r5, [r3, #2168]	@ 0x878
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005d9e:	f204 50ac 	addw	r0, r4, #1452	@ 0x5ac
    __background.setPosition(0, 0, 320, 240);
 8005da2:	f04f 0bf0 	mov.w	fp, #240	@ 0xf0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005da6:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8005daa:	f00c fe57 	bl	8012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005dae:	462a      	mov	r2, r5
 8005db0:	f8cd b000 	str.w	fp, [sp]
 8005db4:	4629      	mov	r1, r5
 8005db6:	4648      	mov	r0, r9
 8005db8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005dbc:	1d26      	adds	r6, r4, #4
 8005dbe:	f7fc fcb1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dc2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005dc6:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005dc8:	4649      	mov	r1, r9
 8005dca:	4630      	mov	r0, r6
 8005dcc:	f007 fe38 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setPosition(0, 0, 320, 240);
 8005dd0:	462a      	mov	r2, r5
 8005dd2:	f8cd b000 	str.w	fp, [sp]
 8005dd6:	4629      	mov	r1, r5
 8005dd8:	4650      	mov	r0, sl
 8005dda:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005dde:	f7fc fca1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005de2:	4b6c      	ldr	r3, [pc, #432]	@ (8005f94 <_ZN19StartScreenViewBaseC1Ev+0x3b0>)
 8005de4:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8005de8:	4651      	mov	r1, sl
 8005dea:	4630      	mov	r0, r6
 8005dec:	f007 fe28 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonHard.setXY(85, 102);
 8005df0:	4640      	mov	r0, r8
 8005df2:	2266      	movs	r2, #102	@ 0x66
 8005df4:	2155      	movs	r1, #85	@ 0x55
 8005df6:	f7fc fc88 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    buttonHard.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8005dfa:	a821      	add	r0, sp, #132	@ 0x84
 8005dfc:	f04f 0b01 	mov.w	fp, #1
 8005e00:	aa22      	add	r2, sp, #136	@ 0x88
 8005e02:	4601      	mov	r1, r0
 8005e04:	f04f 0902 	mov.w	r9, #2
 8005e08:	4640      	mov	r0, r8
 8005e0a:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8005e0e:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8005e12:	f00b fc5e 	bl	80116d2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005e16:	2324      	movs	r3, #36	@ 0x24
 8005e18:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
        updateTextPosition();
 8005e1c:	4640      	mov	r0, r8
 8005e1e:	f7fd f99d 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8005e22:	f04f 30ff 	mov.w	r0, #4294967295
 8005e26:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
    buttonHard.setAction(buttonCallback);
 8005e2a:	f504 50c3 	add.w	r0, r4, #6240	@ 0x1860
        color = col;
 8005e2e:	4b5a      	ldr	r3, [pc, #360]	@ (8005f98 <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8005e30:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
 8005e34:	300c      	adds	r0, #12
 8005e36:	9004      	str	r0, [sp, #16]
 8005e38:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
 8005e3c:	4641      	mov	r1, r8
 8005e3e:	4630      	mov	r0, r6
 8005e40:	f007 fdfe 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonEasy.setXY(1, 50);
 8005e44:	4659      	mov	r1, fp
 8005e46:	4638      	mov	r0, r7
 8005e48:	2232      	movs	r2, #50	@ 0x32
 8005e4a:	f7fc fc5e 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
    buttonEasy.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8005e4e:	a821      	add	r0, sp, #132	@ 0x84
 8005e50:	aa22      	add	r2, sp, #136	@ 0x88
 8005e52:	4601      	mov	r1, r0
 8005e54:	4638      	mov	r0, r7
 8005e56:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8005e5a:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8005e5e:	f00b fc38 	bl	80116d2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005e62:	2325      	movs	r3, #37	@ 0x25
 8005e64:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
        updateTextPosition();
 8005e68:	4638      	mov	r0, r7
 8005e6a:	f7fd f977 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005e6e:	9904      	ldr	r1, [sp, #16]
        color = col;
 8005e70:	4b49      	ldr	r3, [pc, #292]	@ (8005f98 <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8005e72:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
        colorPressed = col;
 8005e76:	f04f 30ff 	mov.w	r0, #4294967295
    circle5_1_4.setPosition(207, 197, 29, 29);
 8005e7a:	f04f 0a1d 	mov.w	sl, #29
 8005e7e:	f8c4 0120 	str.w	r0, [r4, #288]	@ 0x120
 8005e82:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
 8005e86:	4630      	mov	r0, r6
 8005e88:	4639      	mov	r1, r7
 8005e8a:	f007 fdd9 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e8e:	9806      	ldr	r0, [sp, #24]
 8005e90:	f8cd a000 	str.w	sl, [sp]
 8005e94:	4653      	mov	r3, sl
 8005e96:	22c5      	movs	r2, #197	@ 0xc5
 8005e98:	21cf      	movs	r1, #207	@ 0xcf
 8005e9a:	f7fc fc43 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e9e:	4b3f      	ldr	r3, [pc, #252]	@ (8005f9c <_ZN19StartScreenViewBaseC1Ev+0x3b8>)
 8005ea0:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8005ea2:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ea6:	f44f 5834 	mov.w	r8, #11520	@ 0x2d00
        this->circleCenterX = CWRUtil::toQ5(x);
 8005eaa:	f44f 77f0 	mov.w	r7, #480	@ 0x1e0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005eae:	f44f 79a0 	mov.w	r9, #320	@ 0x140
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005eb2:	f24d 4314 	movw	r3, #54292	@ 0xd414
        this->circleCenterY = CWRUtil::toQ5(y);
 8005eb6:	e9c4 7755 	strd	r7, r7, [r4, #340]	@ 0x154
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005eba:	f8c4 915c 	str.w	r9, [r4, #348]	@ 0x15c
 8005ebe:	f8a4 3180 	strh.w	r3, [r4, #384]	@ 0x180
 8005ec2:	f8c4 1150 	str.w	r1, [r4, #336]	@ 0x150
 8005ec6:	4630      	mov	r0, r6
 8005ec8:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005eca:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005ece:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ed2:	f8c4 8164 	str.w	r8, [r4, #356]	@ 0x164
 8005ed6:	f007 fdb3 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_3.setPosition(91, 197, 29, 29);
 8005eda:	9807      	ldr	r0, [sp, #28]
 8005edc:	f8cd a000 	str.w	sl, [sp]
 8005ee0:	4653      	mov	r3, sl
 8005ee2:	22c5      	movs	r2, #197	@ 0xc5
 8005ee4:	215b      	movs	r1, #91	@ 0x5b
 8005ee6:	f7fc fc1d 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005eea:	4b2d      	ldr	r3, [pc, #180]	@ (8005fa0 <_ZN19StartScreenViewBaseC1Ev+0x3bc>)
 8005eec:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8005eee:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
 8005ef2:	f24a 533a 	movw	r3, #42298	@ 0xa53a
        this->circleCenterY = CWRUtil::toQ5(y);
 8005ef6:	e9c4 776c 	strd	r7, r7, [r4, #432]	@ 0x1b0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005efa:	f8c4 91b8 	str.w	r9, [r4, #440]	@ 0x1b8
 8005efe:	f8a4 31dc 	strh.w	r3, [r4, #476]	@ 0x1dc
 8005f02:	f8c4 11ac 	str.w	r1, [r4, #428]	@ 0x1ac
 8005f06:	4630      	mov	r0, r6
 8005f08:	9907      	ldr	r1, [sp, #28]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005f0a:	f8c4 51c4 	str.w	r5, [r4, #452]	@ 0x1c4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005f0e:	e9c4 586f 	strd	r5, r8, [r4, #444]	@ 0x1bc
 8005f12:	f007 fd95 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_4.setPosition(149, 197, 29, 29);
 8005f16:	9808      	ldr	r0, [sp, #32]
 8005f18:	f8cd a000 	str.w	sl, [sp]
 8005f1c:	4653      	mov	r3, sl
 8005f1e:	22c5      	movs	r2, #197	@ 0xc5
 8005f20:	2195      	movs	r1, #149	@ 0x95
 8005f22:	f7fc fbff 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f26:	4b1f      	ldr	r3, [pc, #124]	@ (8005fa4 <_ZN19StartScreenViewBaseC1Ev+0x3c0>)
 8005f28:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8005f2a:	f8c4 3234 	str.w	r3, [r4, #564]	@ 0x234
 8005f2e:	f64d 53b9 	movw	r3, #56761	@ 0xddb9
        this->circleCenterY = CWRUtil::toQ5(y);
 8005f32:	e9c4 7783 	strd	r7, r7, [r4, #524]	@ 0x20c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005f36:	f8c4 9214 	str.w	r9, [r4, #532]	@ 0x214
 8005f3a:	f8a4 3238 	strh.w	r3, [r4, #568]	@ 0x238
 8005f3e:	f8c4 1208 	str.w	r1, [r4, #520]	@ 0x208
 8005f42:	4630      	mov	r0, r6
 8005f44:	9908      	ldr	r1, [sp, #32]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005f46:	f8c4 5220 	str.w	r5, [r4, #544]	@ 0x220
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005f4a:	e9c4 5886 	strd	r5, r8, [r4, #536]	@ 0x218
 8005f4e:	f007 fd77 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2_1.setPosition(236, 168, 29, 29);
 8005f52:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005f54:	f8cd a000 	str.w	sl, [sp]
 8005f58:	4653      	mov	r3, sl
 8005f5a:	22a8      	movs	r2, #168	@ 0xa8
 8005f5c:	21ec      	movs	r1, #236	@ 0xec
 8005f5e:	f7fc fbe1 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f62:	4b11      	ldr	r3, [pc, #68]	@ (8005fa8 <_ZN19StartScreenViewBaseC1Ev+0x3c4>)
 8005f64:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8005f66:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
 8005f6a:	f248 6316 	movw	r3, #34326	@ 0x8616
        this->circleCenterY = CWRUtil::toQ5(y);
 8005f6e:	e9c4 779a 	strd	r7, r7, [r4, #616]	@ 0x268
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005f72:	f8c4 9270 	str.w	r9, [r4, #624]	@ 0x270
 8005f76:	f8a4 3294 	strh.w	r3, [r4, #660]	@ 0x294
 8005f7a:	f8c4 1264 	str.w	r1, [r4, #612]	@ 0x264
 8005f7e:	e015      	b.n	8005fac <_ZN19StartScreenViewBaseC1Ev+0x3c8>
 8005f80:	0802a898 	.word	0x0802a898
 8005f84:	0802b04c 	.word	0x0802b04c
 8005f88:	0802a408 	.word	0x0802a408
 8005f8c:	0802a880 	.word	0x0802a880
 8005f90:	08005b8d 	.word	0x08005b8d
 8005f94:	ffaddced 	.word	0xffaddced
 8005f98:	ff395080 	.word	0xff395080
 8005f9c:	ffd483a5 	.word	0xffd483a5
 8005fa0:	ffa1a4d1 	.word	0xffa1a4d1
 8005fa4:	ffdeb4ca 	.word	0xffdeb4ca
 8005fa8:	ff86c2b7 	.word	0xff86c2b7
 8005fac:	4630      	mov	r0, r6
 8005fae:	9909      	ldr	r1, [sp, #36]	@ 0x24
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005fb0:	f8c4 527c 	str.w	r5, [r4, #636]	@ 0x27c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005fb4:	e9c4 589d 	strd	r5, r8, [r4, #628]	@ 0x274
 8005fb8:	f007 fd42 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2.setPosition(117, 168, 29, 29);
 8005fbc:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005fbe:	f8cd a000 	str.w	sl, [sp]
 8005fc2:	4653      	mov	r3, sl
 8005fc4:	22a8      	movs	r2, #168	@ 0xa8
 8005fc6:	2175      	movs	r1, #117	@ 0x75
 8005fc8:	f7fc fbac 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fcc:	4b98      	ldr	r3, [pc, #608]	@ (8006230 <_ZN19StartScreenViewBaseC1Ev+0x64c>)
 8005fce:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8005fd0:	f8c4 32ec 	str.w	r3, [r4, #748]	@ 0x2ec
 8005fd4:	f64e 6373 	movw	r3, #61043	@ 0xee73
        this->circleCenterY = CWRUtil::toQ5(y);
 8005fd8:	e9c4 77b1 	strd	r7, r7, [r4, #708]	@ 0x2c4
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005fdc:	f8c4 92cc 	str.w	r9, [r4, #716]	@ 0x2cc
 8005fe0:	f8a4 32f0 	strh.w	r3, [r4, #752]	@ 0x2f0
 8005fe4:	f8c4 12c0 	str.w	r1, [r4, #704]	@ 0x2c0
 8005fe8:	4630      	mov	r0, r6
 8005fea:	990a      	ldr	r1, [sp, #40]	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005fec:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005ff0:	e9c4 58b4 	strd	r5, r8, [r4, #720]	@ 0x2d0
 8005ff4:	f007 fd24 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_1.setPosition(178, 168, 29, 29);
 8005ff8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005ffa:	f8cd a000 	str.w	sl, [sp]
 8005ffe:	4653      	mov	r3, sl
 8006000:	22a8      	movs	r2, #168	@ 0xa8
 8006002:	21b2      	movs	r1, #178	@ 0xb2
 8006004:	f7fc fb8e 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006008:	4b8a      	ldr	r3, [pc, #552]	@ (8006234 <_ZN19StartScreenViewBaseC1Ev+0x650>)
 800600a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800600c:	f8c4 3348 	str.w	r3, [r4, #840]	@ 0x348
 8006010:	f649 6332 	movw	r3, #40498	@ 0x9e32
        this->circleCenterY = CWRUtil::toQ5(y);
 8006014:	e9c4 77c8 	strd	r7, r7, [r4, #800]	@ 0x320
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006018:	f8c4 9328 	str.w	r9, [r4, #808]	@ 0x328
 800601c:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
 8006020:	f8c4 131c 	str.w	r1, [r4, #796]	@ 0x31c
 8006024:	4630      	mov	r0, r6
 8006026:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006028:	f8c4 5334 	str.w	r5, [r4, #820]	@ 0x334
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800602c:	e9c4 58cb 	strd	r5, r8, [r4, #812]	@ 0x32c
 8006030:	f007 fd06 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1.setPosition(62, 168, 29, 29);
 8006034:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006036:	f8cd a000 	str.w	sl, [sp]
 800603a:	4653      	mov	r3, sl
 800603c:	22a8      	movs	r2, #168	@ 0xa8
 800603e:	213e      	movs	r1, #62	@ 0x3e
 8006040:	f7fc fb70 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006044:	4b7c      	ldr	r3, [pc, #496]	@ (8006238 <_ZN19StartScreenViewBaseC1Ev+0x654>)
 8006046:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006048:	f8c4 33a4 	str.w	r3, [r4, #932]	@ 0x3a4
 800604c:	f64e 4392 	movw	r3, #60562	@ 0xec92
        this->circleCenterY = CWRUtil::toQ5(y);
 8006050:	e9c4 77df 	strd	r7, r7, [r4, #892]	@ 0x37c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006054:	f8c4 9384 	str.w	r9, [r4, #900]	@ 0x384
 8006058:	f8a4 33a8 	strh.w	r3, [r4, #936]	@ 0x3a8
 800605c:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
 8006060:	4630      	mov	r0, r6
 8006062:	990c      	ldr	r1, [sp, #48]	@ 0x30
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006064:	f8c4 5390 	str.w	r5, [r4, #912]	@ 0x390
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006068:	e9c4 58e2 	strd	r5, r8, [r4, #904]	@ 0x388
 800606c:	f007 fce8 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    titleText.setPosition(89, 10, 159, 49);
 8006070:	2331      	movs	r3, #49	@ 0x31
 8006072:	9805      	ldr	r0, [sp, #20]
 8006074:	9300      	str	r3, [sp, #0]
 8006076:	220a      	movs	r2, #10
 8006078:	239f      	movs	r3, #159	@ 0x9f
 800607a:	2159      	movs	r1, #89	@ 0x59
 800607c:	f7fc fb52 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8006080:	af1c      	add	r7, sp, #112	@ 0x70
        color = newColor;
 8006082:	4b6e      	ldr	r3, [pc, #440]	@ (800623c <_ZN19StartScreenViewBaseC1Ev+0x658>)
        boundingArea = calculateBoundingArea();
 8006084:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006086:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
        boundingArea = calculateBoundingArea();
 800608a:	4638      	mov	r0, r7
        linespace = space;
 800608c:	f8a4 b3e0 	strh.w	fp, [r4, #992]	@ 0x3e0
        boundingArea = calculateBoundingArea();
 8006090:	f00b f824 	bl	80110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006094:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006098:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
 800609c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80060a0:	4a67      	ldr	r2, [pc, #412]	@ (8006240 <_ZN19StartScreenViewBaseC1Ev+0x65c>)
 80060a2:	9222      	str	r2, [sp, #136]	@ 0x88
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 80060a4:	aa22      	add	r2, sp, #136	@ 0x88
 80060a6:	2327      	movs	r3, #39	@ 0x27
 80060a8:	4611      	mov	r1, r2
 80060aa:	9805      	ldr	r0, [sp, #20]
 80060ac:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
    circle1.setPosition(-26, -30, 80, 80);
 80060b0:	f04f 0a50 	mov.w	sl, #80	@ 0x50
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 80060b4:	f00b faba 	bl	801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060b8:	9905      	ldr	r1, [sp, #20]
 80060ba:	4630      	mov	r0, r6
 80060bc:	f007 fcc0 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(-26, -30, 80, 80);
 80060c0:	4653      	mov	r3, sl
 80060c2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80060c4:	f8cd a000 	str.w	sl, [sp]
 80060c8:	f06f 021d 	mvn.w	r2, #29
 80060cc:	f06f 0119 	mvn.w	r1, #25
 80060d0:	f7fc fb28 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060d4:	f04f 32ff 	mov.w	r2, #4294967295
        this->circleCenterX = CWRUtil::toQ5(x);
 80060d8:	f44f 67a0 	mov.w	r7, #1280	@ 0x500
 80060dc:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
 80060e0:	f04f 31ff 	mov.w	r1, #4294967295
 80060e4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80060e6:	f8a4 144c 	strh.w	r1, [r4, #1100]	@ 0x44c
 80060ea:	f8c4 241c 	str.w	r2, [r4, #1052]	@ 0x41c
 80060ee:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80060f0:	f8c4 7420 	str.w	r7, [r4, #1056]	@ 0x420
 80060f4:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 80060f6:	f8c4 7424 	str.w	r7, [r4, #1060]	@ 0x424
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80060fa:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80060fe:	f8c4 5434 	str.w	r5, [r4, #1076]	@ 0x434
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006102:	f8c4 542c 	str.w	r5, [r4, #1068]	@ 0x42c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006106:	f8c4 8430 	str.w	r8, [r4, #1072]	@ 0x430
 800610a:	f007 fc99 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle2.setPosition(270, -30, 80, 80);
 800610e:	4653      	mov	r3, sl
 8006110:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8006112:	f8cd a000 	str.w	sl, [sp]
 8006116:	f06f 021d 	mvn.w	r2, #29
 800611a:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 800611e:	f7fc fb01 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006122:	f648 695d 	movw	r9, #36445	@ 0x8e5d
 8006126:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8006128:	4a46      	ldr	r2, [pc, #280]	@ (8006244 <_ZN19StartScreenViewBaseC1Ev+0x660>)
 800612a:	f8c4 24a4 	str.w	r2, [r4, #1188]	@ 0x4a4
 800612e:	f8a4 94a8 	strh.w	r9, [r4, #1192]	@ 0x4a8
 8006132:	f8c4 1478 	str.w	r1, [r4, #1144]	@ 0x478
 8006136:	4630      	mov	r0, r6
 8006138:	990e      	ldr	r1, [sp, #56]	@ 0x38
        this->circleCenterX = CWRUtil::toQ5(x);
 800613a:	f8c4 747c 	str.w	r7, [r4, #1148]	@ 0x47c
        this->circleCenterY = CWRUtil::toQ5(y);
 800613e:	f8c4 7480 	str.w	r7, [r4, #1152]	@ 0x480
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006142:	f8c4 7484 	str.w	r7, [r4, #1156]	@ 0x484
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006146:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800614a:	f8c4 5488 	str.w	r5, [r4, #1160]	@ 0x488
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 800614e:	f8c4 848c 	str.w	r8, [r4, #1164]	@ 0x48c
 8006152:	f007 fc75 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle3.setPosition(-26, 189, 80, 80);
 8006156:	4653      	mov	r3, sl
 8006158:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800615a:	f8cd a000 	str.w	sl, [sp]
 800615e:	22bd      	movs	r2, #189	@ 0xbd
 8006160:	f06f 0119 	mvn.w	r1, #25
 8006164:	f7fc fade 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006168:	4a36      	ldr	r2, [pc, #216]	@ (8006244 <_ZN19StartScreenViewBaseC1Ev+0x660>)
 800616a:	f8c4 2500 	str.w	r2, [r4, #1280]	@ 0x500
 800616e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8006170:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006172:	f8a4 9504 	strh.w	r9, [r4, #1284]	@ 0x504
 8006176:	f8c4 24d4 	str.w	r2, [r4, #1236]	@ 0x4d4
 800617a:	4630      	mov	r0, r6
        this->circleCenterX = CWRUtil::toQ5(x);
 800617c:	f8c4 74d8 	str.w	r7, [r4, #1240]	@ 0x4d8
        this->circleCenterY = CWRUtil::toQ5(y);
 8006180:	f8c4 74dc 	str.w	r7, [r4, #1244]	@ 0x4dc
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006184:	f8c4 74e0 	str.w	r7, [r4, #1248]	@ 0x4e0
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006188:	f8c4 54ec 	str.w	r5, [r4, #1260]	@ 0x4ec
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800618c:	f8c4 54e4 	str.w	r5, [r4, #1252]	@ 0x4e4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006190:	f8c4 84e8 	str.w	r8, [r4, #1256]	@ 0x4e8
 8006194:	f007 fc54 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle4.setPosition(270, 189, 80, 80);
 8006198:	4653      	mov	r3, sl
 800619a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800619c:	f8cd a000 	str.w	sl, [sp]
 80061a0:	22bd      	movs	r2, #189	@ 0xbd
 80061a2:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 80061a6:	f7fc fabd 	bl	8002724 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061aa:	f04f 32ff 	mov.w	r2, #4294967295
 80061ae:	f8c4 255c 	str.w	r2, [r4, #1372]	@ 0x55c
 80061b2:	f04f 31ff 	mov.w	r1, #4294967295
 80061b6:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80061b8:	f8a4 1560 	strh.w	r1, [r4, #1376]	@ 0x560
 80061bc:	f8c4 2530 	str.w	r2, [r4, #1328]	@ 0x530
 80061c0:	9910      	ldr	r1, [sp, #64]	@ 0x40
        this->circleCenterX = CWRUtil::toQ5(x);
 80061c2:	f8c4 7534 	str.w	r7, [r4, #1332]	@ 0x534
 80061c6:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 80061c8:	f8c4 7538 	str.w	r7, [r4, #1336]	@ 0x538
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80061cc:	f8c4 753c 	str.w	r7, [r4, #1340]	@ 0x53c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80061d0:	f8c4 5548 	str.w	r5, [r4, #1352]	@ 0x548
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80061d4:	f8c4 5540 	str.w	r5, [r4, #1344]	@ 0x540
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80061d8:	f8c4 8544 	str.w	r8, [r4, #1348]	@ 0x544
 80061dc:	f007 fc30 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonMedium.setXY(170, 50);
 80061e0:	9803      	ldr	r0, [sp, #12]
 80061e2:	2232      	movs	r2, #50	@ 0x32
 80061e4:	21aa      	movs	r1, #170	@ 0xaa
 80061e6:	f7fc fa90 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 80061ea:	f04f 0902 	mov.w	r9, #2
    buttonMedium.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 80061ee:	aa22      	add	r2, sp, #136	@ 0x88
 80061f0:	a921      	add	r1, sp, #132	@ 0x84
 80061f2:	9803      	ldr	r0, [sp, #12]
 80061f4:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 80061f8:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 80061fc:	f00b fa69 	bl	80116d2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006200:	2326      	movs	r3, #38	@ 0x26
        updateTextPosition();
 8006202:	9803      	ldr	r0, [sp, #12]
 8006204:	f8a4 359c 	strh.w	r3, [r4, #1436]	@ 0x59c
 8006208:	f7fc ffa8 	bl	800315c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800620c:	4b0e      	ldr	r3, [pc, #56]	@ (8006248 <_ZN19StartScreenViewBaseC1Ev+0x664>)
 800620e:	f8c4 35a0 	str.w	r3, [r4, #1440]	@ 0x5a0
        colorPressed = col;
 8006212:	f04f 33ff 	mov.w	r3, #4294967295
 8006216:	f8c4 35a4 	str.w	r3, [r4, #1444]	@ 0x5a4
 800621a:	9b04      	ldr	r3, [sp, #16]
 800621c:	9903      	ldr	r1, [sp, #12]
 800621e:	f8c4 358c 	str.w	r3, [r4, #1420]	@ 0x58c
 8006222:	4630      	mov	r0, r6
 8006224:	f007 fc0c 	bl	800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006228:	4620      	mov	r0, r4
 800622a:	b025      	add	sp, #148	@ 0x94
 800622c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006230:	ffebcf9b 	.word	0xffebcf9b
 8006234:	ff99c793 	.word	0xff99c793
 8006238:	ffeb9191 	.word	0xffeb9191
 800623c:	ff325d8f 	.word	0xff325d8f
 8006240:	0802a408 	.word	0x0802a408
 8006244:	ff88caeb 	.word	0xff88caeb
 8006248:	ff395080 	.word	0xff395080

0800624c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_15_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_15_4bpp()
{
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 800624c:	4770      	bx	lr
	...

08006250 <_Z23getFont_comicbd_15_4bppv>:
{
 8006250:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006252:	4d17      	ldr	r5, [pc, #92]	@ (80062b0 <_Z23getFont_comicbd_15_4bppv+0x60>)
 8006254:	682c      	ldr	r4, [r5, #0]
 8006256:	f014 0401 	ands.w	r4, r4, #1
{
 800625a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 800625c:	f3bf 8f5b 	dmb	ish
 8006260:	d122      	bne.n	80062a8 <_Z23getFont_comicbd_15_4bppv+0x58>
 8006262:	4628      	mov	r0, r5
 8006264:	f020 fdd8 	bl	8026e18 <__cxa_guard_acquire>
 8006268:	b1f0      	cbz	r0, 80062a8 <_Z23getFont_comicbd_15_4bppv+0x58>
 800626a:	233f      	movs	r3, #63	@ 0x3f
 800626c:	9309      	str	r3, [sp, #36]	@ 0x24
 800626e:	4b11      	ldr	r3, [pc, #68]	@ (80062b4 <_Z23getFont_comicbd_15_4bppv+0x64>)
 8006270:	9308      	str	r3, [sp, #32]
 8006272:	4b11      	ldr	r3, [pc, #68]	@ (80062b8 <_Z23getFont_comicbd_15_4bppv+0x68>)
 8006274:	9307      	str	r3, [sp, #28]
 8006276:	2301      	movs	r3, #1
 8006278:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800627c:	9304      	str	r3, [sp, #16]
 800627e:	2304      	movs	r3, #4
 8006280:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006284:	230f      	movs	r3, #15
 8006286:	490d      	ldr	r1, [pc, #52]	@ (80062bc <_Z23getFont_comicbd_15_4bppv+0x6c>)
 8006288:	9300      	str	r3, [sp, #0]
 800628a:	2209      	movs	r2, #9
 800628c:	2313      	movs	r3, #19
 800628e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006292:	480b      	ldr	r0, [pc, #44]	@ (80062c0 <_Z23getFont_comicbd_15_4bppv+0x70>)
 8006294:	940a      	str	r4, [sp, #40]	@ 0x28
 8006296:	9401      	str	r4, [sp, #4]
 8006298:	f7fe f874 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800629c:	4809      	ldr	r0, [pc, #36]	@ (80062c4 <_Z23getFont_comicbd_15_4bppv+0x74>)
 800629e:	f021 fd13 	bl	8027cc8 <atexit>
 80062a2:	4628      	mov	r0, r5
 80062a4:	f020 fdc4 	bl	8026e30 <__cxa_guard_release>
    return comicbd_15_4bpp;
}
 80062a8:	4805      	ldr	r0, [pc, #20]	@ (80062c0 <_Z23getFont_comicbd_15_4bppv+0x70>)
 80062aa:	b00f      	add	sp, #60	@ 0x3c
 80062ac:	bd30      	pop	{r4, r5, pc}
 80062ae:	bf00      	nop
 80062b0:	20003078 	.word	0x20003078
 80062b4:	0802e8a8 	.word	0x0802e8a8
 80062b8:	0802e8c4 	.word	0x0802e8c4
 80062bc:	0802e394 	.word	0x0802e394
 80062c0:	2000307c 	.word	0x2000307c
 80062c4:	0800624d 	.word	0x0800624d

080062c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_18_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_18_4bpp()
{
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 80062c8:	4770      	bx	lr
	...

080062cc <_Z23getFont_comicbd_18_4bppv>:
{
 80062cc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 80062ce:	4d17      	ldr	r5, [pc, #92]	@ (800632c <_Z23getFont_comicbd_18_4bppv+0x60>)
 80062d0:	682c      	ldr	r4, [r5, #0]
 80062d2:	f014 0401 	ands.w	r4, r4, #1
{
 80062d6:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 80062d8:	f3bf 8f5b 	dmb	ish
 80062dc:	d122      	bne.n	8006324 <_Z23getFont_comicbd_18_4bppv+0x58>
 80062de:	4628      	mov	r0, r5
 80062e0:	f020 fd9a 	bl	8026e18 <__cxa_guard_acquire>
 80062e4:	b1f0      	cbz	r0, 8006324 <_Z23getFont_comicbd_18_4bppv+0x58>
 80062e6:	233f      	movs	r3, #63	@ 0x3f
 80062e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80062ea:	4b11      	ldr	r3, [pc, #68]	@ (8006330 <_Z23getFont_comicbd_18_4bppv+0x64>)
 80062ec:	9308      	str	r3, [sp, #32]
 80062ee:	4b11      	ldr	r3, [pc, #68]	@ (8006334 <_Z23getFont_comicbd_18_4bppv+0x68>)
 80062f0:	9307      	str	r3, [sp, #28]
 80062f2:	2301      	movs	r3, #1
 80062f4:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80062f8:	9304      	str	r3, [sp, #16]
 80062fa:	2304      	movs	r3, #4
 80062fc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006300:	2312      	movs	r3, #18
 8006302:	490d      	ldr	r1, [pc, #52]	@ (8006338 <_Z23getFont_comicbd_18_4bppv+0x6c>)
 8006304:	9300      	str	r3, [sp, #0]
 8006306:	221f      	movs	r2, #31
 8006308:	2317      	movs	r3, #23
 800630a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800630e:	480b      	ldr	r0, [pc, #44]	@ (800633c <_Z23getFont_comicbd_18_4bppv+0x70>)
 8006310:	940a      	str	r4, [sp, #40]	@ 0x28
 8006312:	9401      	str	r4, [sp, #4]
 8006314:	f7fe f836 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006318:	4809      	ldr	r0, [pc, #36]	@ (8006340 <_Z23getFont_comicbd_18_4bppv+0x74>)
 800631a:	f021 fcd5 	bl	8027cc8 <atexit>
 800631e:	4628      	mov	r0, r5
 8006320:	f020 fd86 	bl	8026e30 <__cxa_guard_release>
    return comicbd_18_4bpp;
}
 8006324:	4805      	ldr	r0, [pc, #20]	@ (800633c <_Z23getFont_comicbd_18_4bppv+0x70>)
 8006326:	b00f      	add	sp, #60	@ 0x3c
 8006328:	bd30      	pop	{r4, r5, pc}
 800632a:	bf00      	nop
 800632c:	200030a8 	.word	0x200030a8
 8006330:	0802e8ac 	.word	0x0802e8ac
 8006334:	0802e8c8 	.word	0x0802e8c8
 8006338:	0802e414 	.word	0x0802e414
 800633c:	200030ac 	.word	0x200030ac
 8006340:	080062c9 	.word	0x080062c9

08006344 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_20_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_20_4bpp()
{
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8006344:	4770      	bx	lr
	...

08006348 <_Z23getFont_comicbd_20_4bppv>:
{
 8006348:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 800634a:	4d16      	ldr	r5, [pc, #88]	@ (80063a4 <_Z23getFont_comicbd_20_4bppv+0x5c>)
 800634c:	682c      	ldr	r4, [r5, #0]
 800634e:	f014 0401 	ands.w	r4, r4, #1
{
 8006352:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8006354:	f3bf 8f5b 	dmb	ish
 8006358:	d121      	bne.n	800639e <_Z23getFont_comicbd_20_4bppv+0x56>
 800635a:	4628      	mov	r0, r5
 800635c:	f020 fd5c 	bl	8026e18 <__cxa_guard_acquire>
 8006360:	b1e8      	cbz	r0, 800639e <_Z23getFont_comicbd_20_4bppv+0x56>
 8006362:	233f      	movs	r3, #63	@ 0x3f
 8006364:	9309      	str	r3, [sp, #36]	@ 0x24
 8006366:	4b10      	ldr	r3, [pc, #64]	@ (80063a8 <_Z23getFont_comicbd_20_4bppv+0x60>)
 8006368:	9308      	str	r3, [sp, #32]
 800636a:	4b10      	ldr	r3, [pc, #64]	@ (80063ac <_Z23getFont_comicbd_20_4bppv+0x64>)
 800636c:	4910      	ldr	r1, [pc, #64]	@ (80063b0 <_Z23getFont_comicbd_20_4bppv+0x68>)
 800636e:	4811      	ldr	r0, [pc, #68]	@ (80063b4 <_Z23getFont_comicbd_20_4bppv+0x6c>)
 8006370:	940a      	str	r4, [sp, #40]	@ 0x28
 8006372:	2201      	movs	r2, #1
 8006374:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006378:	2304      	movs	r3, #4
 800637a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800637e:	2314      	movs	r3, #20
 8006380:	9300      	str	r3, [sp, #0]
 8006382:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006386:	2315      	movs	r3, #21
 8006388:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800638c:	9405      	str	r4, [sp, #20]
 800638e:	f7fd fff9 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006392:	4809      	ldr	r0, [pc, #36]	@ (80063b8 <_Z23getFont_comicbd_20_4bppv+0x70>)
 8006394:	f021 fc98 	bl	8027cc8 <atexit>
 8006398:	4628      	mov	r0, r5
 800639a:	f020 fd49 	bl	8026e30 <__cxa_guard_release>
    return comicbd_20_4bpp;
}
 800639e:	4805      	ldr	r0, [pc, #20]	@ (80063b4 <_Z23getFont_comicbd_20_4bppv+0x6c>)
 80063a0:	b00f      	add	sp, #60	@ 0x3c
 80063a2:	bd30      	pop	{r4, r5, pc}
 80063a4:	200030d8 	.word	0x200030d8
 80063a8:	0802e8b0 	.word	0x0802e8b0
 80063ac:	0802e8cc 	.word	0x0802e8cc
 80063b0:	0802e5c8 	.word	0x0802e5c8
 80063b4:	200030dc 	.word	0x200030dc
 80063b8:	08006345 	.word	0x08006345

080063bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_28_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_28_4bpp()
{
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80063bc:	4770      	bx	lr
	...

080063c0 <_Z23getFont_comicbd_28_4bppv>:
{
 80063c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80063c2:	4d17      	ldr	r5, [pc, #92]	@ (8006420 <_Z23getFont_comicbd_28_4bppv+0x60>)
 80063c4:	682c      	ldr	r4, [r5, #0]
 80063c6:	f014 0401 	ands.w	r4, r4, #1
{
 80063ca:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80063cc:	f3bf 8f5b 	dmb	ish
 80063d0:	d122      	bne.n	8006418 <_Z23getFont_comicbd_28_4bppv+0x58>
 80063d2:	4628      	mov	r0, r5
 80063d4:	f020 fd20 	bl	8026e18 <__cxa_guard_acquire>
 80063d8:	b1f0      	cbz	r0, 8006418 <_Z23getFont_comicbd_28_4bppv+0x58>
 80063da:	233f      	movs	r3, #63	@ 0x3f
 80063dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80063de:	4b11      	ldr	r3, [pc, #68]	@ (8006424 <_Z23getFont_comicbd_28_4bppv+0x64>)
 80063e0:	9308      	str	r3, [sp, #32]
 80063e2:	4b11      	ldr	r3, [pc, #68]	@ (8006428 <_Z23getFont_comicbd_28_4bppv+0x68>)
 80063e4:	9307      	str	r3, [sp, #28]
 80063e6:	2301      	movs	r3, #1
 80063e8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80063ec:	9304      	str	r3, [sp, #16]
 80063ee:	2304      	movs	r3, #4
 80063f0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80063f4:	231c      	movs	r3, #28
 80063f6:	490d      	ldr	r1, [pc, #52]	@ (800642c <_Z23getFont_comicbd_28_4bppv+0x6c>)
 80063f8:	9300      	str	r3, [sp, #0]
 80063fa:	220b      	movs	r2, #11
 80063fc:	231d      	movs	r3, #29
 80063fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006402:	480b      	ldr	r0, [pc, #44]	@ (8006430 <_Z23getFont_comicbd_28_4bppv+0x70>)
 8006404:	940a      	str	r4, [sp, #40]	@ 0x28
 8006406:	9401      	str	r4, [sp, #4]
 8006408:	f7fd ffbc 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800640c:	4809      	ldr	r0, [pc, #36]	@ (8006434 <_Z23getFont_comicbd_28_4bppv+0x74>)
 800640e:	f021 fc5b 	bl	8027cc8 <atexit>
 8006412:	4628      	mov	r0, r5
 8006414:	f020 fd0c 	bl	8026e30 <__cxa_guard_release>
    return comicbd_28_4bpp;
}
 8006418:	4805      	ldr	r0, [pc, #20]	@ (8006430 <_Z23getFont_comicbd_28_4bppv+0x70>)
 800641a:	b00f      	add	sp, #60	@ 0x3c
 800641c:	bd30      	pop	{r4, r5, pc}
 800641e:	bf00      	nop
 8006420:	20003108 	.word	0x20003108
 8006424:	0802e8b4 	.word	0x0802e8b4
 8006428:	0802e8d0 	.word	0x0802e8d0
 800642c:	0802e5d8 	.word	0x0802e5d8
 8006430:	2000310c 	.word	0x2000310c
 8006434:	080063bd 	.word	0x080063bd

08006438 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicz_29_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicz_29_4bpp();

touchgfx::GeneratedFont& getFont_comicz_29_4bpp()
{
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8006438:	4770      	bx	lr
	...

0800643c <_Z22getFont_comicz_29_4bppv>:
{
 800643c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 800643e:	4d17      	ldr	r5, [pc, #92]	@ (800649c <_Z22getFont_comicz_29_4bppv+0x60>)
 8006440:	682c      	ldr	r4, [r5, #0]
 8006442:	f014 0401 	ands.w	r4, r4, #1
{
 8006446:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8006448:	f3bf 8f5b 	dmb	ish
 800644c:	d123      	bne.n	8006496 <_Z22getFont_comicz_29_4bppv+0x5a>
 800644e:	4628      	mov	r0, r5
 8006450:	f020 fce2 	bl	8026e18 <__cxa_guard_acquire>
 8006454:	b1f8      	cbz	r0, 8006496 <_Z22getFont_comicz_29_4bppv+0x5a>
 8006456:	233f      	movs	r3, #63	@ 0x3f
 8006458:	9309      	str	r3, [sp, #36]	@ 0x24
 800645a:	4b11      	ldr	r3, [pc, #68]	@ (80064a0 <_Z22getFont_comicz_29_4bppv+0x64>)
 800645c:	9308      	str	r3, [sp, #32]
 800645e:	4b11      	ldr	r3, [pc, #68]	@ (80064a4 <_Z22getFont_comicz_29_4bppv+0x68>)
 8006460:	9307      	str	r3, [sp, #28]
 8006462:	2203      	movs	r2, #3
 8006464:	2301      	movs	r3, #1
 8006466:	e9cd 3205 	strd	r3, r2, [sp, #20]
 800646a:	9304      	str	r3, [sp, #16]
 800646c:	2304      	movs	r3, #4
 800646e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006472:	231d      	movs	r3, #29
 8006474:	490c      	ldr	r1, [pc, #48]	@ (80064a8 <_Z22getFont_comicz_29_4bppv+0x6c>)
 8006476:	9300      	str	r3, [sp, #0]
 8006478:	221c      	movs	r2, #28
 800647a:	2325      	movs	r3, #37	@ 0x25
 800647c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006480:	480a      	ldr	r0, [pc, #40]	@ (80064ac <_Z22getFont_comicz_29_4bppv+0x70>)
 8006482:	940a      	str	r4, [sp, #40]	@ 0x28
 8006484:	9401      	str	r4, [sp, #4]
 8006486:	f7fd ff7d 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800648a:	4809      	ldr	r0, [pc, #36]	@ (80064b0 <_Z22getFont_comicz_29_4bppv+0x74>)
 800648c:	f021 fc1c 	bl	8027cc8 <atexit>
 8006490:	4628      	mov	r0, r5
 8006492:	f020 fccd 	bl	8026e30 <__cxa_guard_release>
    return comicz_29_4bpp;
}
 8006496:	4805      	ldr	r0, [pc, #20]	@ (80064ac <_Z22getFont_comicz_29_4bppv+0x70>)
 8006498:	b00f      	add	sp, #60	@ 0x3c
 800649a:	bd30      	pop	{r4, r5, pc}
 800649c:	20003138 	.word	0x20003138
 80064a0:	0802e8b8 	.word	0x0802e8b8
 80064a4:	0802e8d4 	.word	0x0802e8d4
 80064a8:	0802e674 	.word	0x0802e674
 80064ac:	2000313c 	.word	0x2000313c
 80064b0:	08006439 	.word	0x08006439

080064b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_17_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_17_4bpp();

touchgfx::GeneratedFont& getFont_verdana_17_4bpp()
{
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80064b4:	4770      	bx	lr
	...

080064b8 <_Z23getFont_verdana_17_4bppv>:
{
 80064b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80064ba:	4d16      	ldr	r5, [pc, #88]	@ (8006514 <_Z23getFont_verdana_17_4bppv+0x5c>)
 80064bc:	682c      	ldr	r4, [r5, #0]
 80064be:	f014 0401 	ands.w	r4, r4, #1
{
 80064c2:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 80064c4:	f3bf 8f5b 	dmb	ish
 80064c8:	d121      	bne.n	800650e <_Z23getFont_verdana_17_4bppv+0x56>
 80064ca:	4628      	mov	r0, r5
 80064cc:	f020 fca4 	bl	8026e18 <__cxa_guard_acquire>
 80064d0:	b1e8      	cbz	r0, 800650e <_Z23getFont_verdana_17_4bppv+0x56>
 80064d2:	233f      	movs	r3, #63	@ 0x3f
 80064d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80064d6:	4b10      	ldr	r3, [pc, #64]	@ (8006518 <_Z23getFont_verdana_17_4bppv+0x60>)
 80064d8:	9308      	str	r3, [sp, #32]
 80064da:	4b10      	ldr	r3, [pc, #64]	@ (800651c <_Z23getFont_verdana_17_4bppv+0x64>)
 80064dc:	4910      	ldr	r1, [pc, #64]	@ (8006520 <_Z23getFont_verdana_17_4bppv+0x68>)
 80064de:	4811      	ldr	r0, [pc, #68]	@ (8006524 <_Z23getFont_verdana_17_4bppv+0x6c>)
 80064e0:	940a      	str	r4, [sp, #40]	@ 0x28
 80064e2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80064e6:	2201      	movs	r2, #1
 80064e8:	2304      	movs	r3, #4
 80064ea:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80064ee:	2311      	movs	r3, #17
 80064f0:	9300      	str	r3, [sp, #0]
 80064f2:	220b      	movs	r2, #11
 80064f4:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80064f8:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80064fc:	9405      	str	r4, [sp, #20]
 80064fe:	f7fd ff41 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006502:	4809      	ldr	r0, [pc, #36]	@ (8006528 <_Z23getFont_verdana_17_4bppv+0x70>)
 8006504:	f021 fbe0 	bl	8027cc8 <atexit>
 8006508:	4628      	mov	r0, r5
 800650a:	f020 fc91 	bl	8026e30 <__cxa_guard_release>
    return verdana_17_4bpp;
}
 800650e:	4805      	ldr	r0, [pc, #20]	@ (8006524 <_Z23getFont_verdana_17_4bppv+0x6c>)
 8006510:	b00f      	add	sp, #60	@ 0x3c
 8006512:	bd30      	pop	{r4, r5, pc}
 8006514:	20003168 	.word	0x20003168
 8006518:	0802e8bc 	.word	0x0802e8bc
 800651c:	0802e8d8 	.word	0x0802e8d8
 8006520:	0802e7fc 	.word	0x0802e7fc
 8006524:	2000316c 	.word	0x2000316c
 8006528:	080064b5 	.word	0x080064b5

0800652c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800652c:	4770      	bx	lr
	...

08006530 <_Z23getFont_verdana_20_4bppv>:
{
 8006530:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8006532:	4d16      	ldr	r5, [pc, #88]	@ (800658c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8006534:	682c      	ldr	r4, [r5, #0]
 8006536:	f014 0401 	ands.w	r4, r4, #1
{
 800653a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800653c:	f3bf 8f5b 	dmb	ish
 8006540:	d120      	bne.n	8006584 <_Z23getFont_verdana_20_4bppv+0x54>
 8006542:	4628      	mov	r0, r5
 8006544:	f020 fc68 	bl	8026e18 <__cxa_guard_acquire>
 8006548:	b1e0      	cbz	r0, 8006584 <_Z23getFont_verdana_20_4bppv+0x54>
 800654a:	233f      	movs	r3, #63	@ 0x3f
 800654c:	9309      	str	r3, [sp, #36]	@ 0x24
 800654e:	4b10      	ldr	r3, [pc, #64]	@ (8006590 <_Z23getFont_verdana_20_4bppv+0x60>)
 8006550:	9308      	str	r3, [sp, #32]
 8006552:	4b10      	ldr	r3, [pc, #64]	@ (8006594 <_Z23getFont_verdana_20_4bppv+0x64>)
 8006554:	4910      	ldr	r1, [pc, #64]	@ (8006598 <_Z23getFont_verdana_20_4bppv+0x68>)
 8006556:	4811      	ldr	r0, [pc, #68]	@ (800659c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8006558:	940a      	str	r4, [sp, #40]	@ 0x28
 800655a:	2201      	movs	r2, #1
 800655c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006560:	2304      	movs	r3, #4
 8006562:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8006566:	2314      	movs	r3, #20
 8006568:	9300      	str	r3, [sp, #0]
 800656a:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800656e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8006572:	9405      	str	r4, [sp, #20]
 8006574:	f7fd ff06 	bl	8004384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006578:	4809      	ldr	r0, [pc, #36]	@ (80065a0 <_Z23getFont_verdana_20_4bppv+0x70>)
 800657a:	f021 fba5 	bl	8027cc8 <atexit>
 800657e:	4628      	mov	r0, r5
 8006580:	f020 fc56 	bl	8026e30 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8006584:	4805      	ldr	r0, [pc, #20]	@ (800659c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8006586:	b00f      	add	sp, #60	@ 0x3c
 8006588:	bd30      	pop	{r4, r5, pc}
 800658a:	bf00      	nop
 800658c:	20003198 	.word	0x20003198
 8006590:	0802e8c0 	.word	0x0802e8c0
 8006594:	0802e8dc 	.word	0x0802e8dc
 8006598:	0802e898 	.word	0x0802e898
 800659c:	2000319c 	.word	0x2000319c
 80065a0:	0800652d 	.word	0x0800652d

080065a4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 80065a4:	2000      	movs	r0, #0
 80065a6:	4770      	bx	lr

080065a8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 80065a8:	2000      	movs	r0, #0
 80065aa:	4770      	bx	lr

080065ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80065ac:	b40e      	push	{r1, r2, r3}
 80065ae:	b503      	push	{r0, r1, lr}
 80065b0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80065b2:	2100      	movs	r1, #0
{
 80065b4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80065b8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80065ba:	f00e fec7 	bl	801534c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80065be:	b002      	add	sp, #8
 80065c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80065c4:	b003      	add	sp, #12
 80065c6:	4770      	bx	lr

080065c8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80065c8:	b40c      	push	{r2, r3}
 80065ca:	b507      	push	{r0, r1, r2, lr}
 80065cc:	ab04      	add	r3, sp, #16
 80065ce:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80065d2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80065d4:	f00e feba 	bl	801534c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80065d8:	b003      	add	sp, #12
 80065da:	f85d eb04 	ldr.w	lr, [sp], #4
 80065de:	b002      	add	sp, #8
 80065e0:	4770      	bx	lr
	...

080065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80065e4:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80065e6:	b510      	push	{r4, lr}
 80065e8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80065ea:	b373      	cbz	r3, 800664a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80065ec:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80065ee:	b92b      	cbnz	r3, 80065fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80065f0:	4b18      	ldr	r3, [pc, #96]	@ (8006654 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80065f2:	4a19      	ldr	r2, [pc, #100]	@ (8006658 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80065f4:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80065f6:	4819      	ldr	r0, [pc, #100]	@ (800665c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80065f8:	f021 fb48 	bl	8027c8c <__assert_func>
            return buffer[pos];
 80065fc:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80065fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006602:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8006604:	b30b      	cbz	r3, 800664a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006606:	f010 fd5a 	bl	80170be <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800660a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 800660c:	2b01      	cmp	r3, #1
 800660e:	d803      	bhi.n	8006618 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006610:	4b13      	ldr	r3, [pc, #76]	@ (8006660 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006612:	4a14      	ldr	r2, [pc, #80]	@ (8006664 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006614:	21cb      	movs	r1, #203	@ 0xcb
 8006616:	e7ee      	b.n	80065f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006618:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800661a:	1c53      	adds	r3, r2, #1
 800661c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800661e:	2b09      	cmp	r3, #9
 8006620:	4619      	mov	r1, r3
 8006622:	bf88      	it	hi
 8006624:	f1a3 010a 	subhi.w	r1, r3, #10
 8006628:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800662c:	f640 103f 	movw	r0, #2367	@ 0x93f
 8006630:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8006632:	4281      	cmp	r1, r0
 8006634:	d109      	bne.n	800664a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006636:	2b0a      	cmp	r3, #10
 8006638:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800663c:	bf28      	it	cs
 800663e:	2300      	movcs	r3, #0
 8006640:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006644:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8006646:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8006648:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800664a:	4620      	mov	r0, r4
}
 800664c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006650:	f010 bc38 	b.w	8016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006654:	08029da5 	.word	0x08029da5
 8006658:	08029dae 	.word	0x08029dae
 800665c:	08029e59 	.word	0x08029e59
 8006660:	08029ea3 	.word	0x08029ea3
 8006664:	08029eb1 	.word	0x08029eb1

08006668 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006668:	f010 bbf3 	b.w	8016e52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800666c:	b510      	push	{r4, lr}
 800666e:	b086      	sub	sp, #24
 8006670:	ac02      	add	r4, sp, #8
 8006672:	e884 0006 	stmia.w	r4, {r1, r2}
 8006676:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006678:	ab0a      	add	r3, sp, #40	@ 0x28
 800667a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800667c:	9301      	str	r3, [sp, #4]
 800667e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006680:	9300      	str	r3, [sp, #0]
 8006682:	4621      	mov	r1, r4
 8006684:	9b08      	ldr	r3, [sp, #32]
 8006686:	f00d fa8b 	bl	8013ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800668a:	b006      	add	sp, #24
 800668c:	bd10      	pop	{r4, pc}
	...

08006690 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006690:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006692:	bb18      	cbnz	r0, 80066dc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006694:	4b12      	ldr	r3, [pc, #72]	@ (80066e0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006696:	4813      	ldr	r0, [pc, #76]	@ (80066e4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006698:	681c      	ldr	r4, [r3, #0]
 800669a:	4913      	ldr	r1, [pc, #76]	@ (80066e8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800669c:	b1b4      	cbz	r4, 80066cc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800669e:	6822      	ldr	r2, [r4, #0]
 80066a0:	4422      	add	r2, r4
 80066a2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80066a4:	6862      	ldr	r2, [r4, #4]
 80066a6:	4422      	add	r2, r4
 80066a8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80066aa:	68a2      	ldr	r2, [r4, #8]
 80066ac:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80066ae:	4b0f      	ldr	r3, [pc, #60]	@ (80066ec <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80066b0:	2200      	movs	r2, #0
 80066b2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80066b4:	f000 f838 	bl	8006728 <_ZN17TypedTextDatabase8getFontsEv>
 80066b8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80066ba:	f000 f833 	bl	8006724 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80066be:	4b0c      	ldr	r3, [pc, #48]	@ (80066f0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80066c0:	601c      	str	r4, [r3, #0]
        fonts = f;
 80066c2:	4b0c      	ldr	r3, [pc, #48]	@ (80066f4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80066c4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80066c6:	4b0c      	ldr	r3, [pc, #48]	@ (80066f8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80066c8:	8018      	strh	r0, [r3, #0]
    }
}
 80066ca:	e007      	b.n	80066dc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80066cc:	4b0b      	ldr	r3, [pc, #44]	@ (80066fc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80066ce:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80066d0:	4b0b      	ldr	r3, [pc, #44]	@ (8006700 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80066d2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80066d4:	4b0b      	ldr	r3, [pc, #44]	@ (8006704 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80066d6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80066d8:	2c00      	cmp	r4, #0
 80066da:	d1e8      	bne.n	80066ae <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80066dc:	bd38      	pop	{r3, r4, r5, pc}
 80066de:	bf00      	nop
 80066e0:	200031d4 	.word	0x200031d4
 80066e4:	200031cc 	.word	0x200031cc
 80066e8:	200031c8 	.word	0x200031c8
 80066ec:	200031d0 	.word	0x200031d0
 80066f0:	20013fb8 	.word	0x20013fb8
 80066f4:	20013fc0 	.word	0x20013fc0
 80066f8:	20013fbc 	.word	0x20013fbc
 80066fc:	0802e984 	.word	0x0802e984
 8006700:	0802e8e0 	.word	0x0802e8e0
 8006704:	0802ea18 	.word	0x0802ea18

08006708 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006708:	4b04      	ldr	r3, [pc, #16]	@ (800671c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800670a:	681b      	ldr	r3, [r3, #0]
 800670c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006710:	4b03      	ldr	r3, [pc, #12]	@ (8006720 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006712:	681b      	ldr	r3, [r3, #0]
}
 8006714:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006718:	4770      	bx	lr
 800671a:	bf00      	nop
 800671c:	200031c8 	.word	0x200031c8
 8006720:	200031cc 	.word	0x200031cc

08006724 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006724:	2029      	movs	r0, #41	@ 0x29
 8006726:	4770      	bx	lr

08006728 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006728:	4800      	ldr	r0, [pc, #0]	@ (800672c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800672a:	4770      	bx	lr
 800672c:	200031d8 	.word	0x200031d8

08006730 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_comicbd_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006730:	b510      	push	{r4, lr}
    &(getFont_verdana_17_4bpp()),
 8006732:	f7ff fec1 	bl	80064b8 <_Z23getFont_verdana_17_4bppv>
};
 8006736:	4c0a      	ldr	r4, [pc, #40]	@ (8006760 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 8006738:	6020      	str	r0, [r4, #0]
    &(getFont_comicz_29_4bpp()),
 800673a:	f7ff fe7f 	bl	800643c <_Z22getFont_comicz_29_4bppv>
};
 800673e:	6060      	str	r0, [r4, #4]
    &(getFont_comicbd_18_4bpp()),
 8006740:	f7ff fdc4 	bl	80062cc <_Z23getFont_comicbd_18_4bppv>
};
 8006744:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_20_4bpp()),
 8006746:	f7ff fdff 	bl	8006348 <_Z23getFont_comicbd_20_4bppv>
};
 800674a:	60e0      	str	r0, [r4, #12]
    &(getFont_comicbd_28_4bpp()),
 800674c:	f7ff fe38 	bl	80063c0 <_Z23getFont_comicbd_28_4bppv>
};
 8006750:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_20_4bpp()),
 8006752:	f7ff feed 	bl	8006530 <_Z23getFont_verdana_20_4bppv>
};
 8006756:	6160      	str	r0, [r4, #20]
    &(getFont_comicbd_15_4bpp())
 8006758:	f7ff fd7a 	bl	8006250 <_Z23getFont_comicbd_15_4bppv>
};
 800675c:	61a0      	str	r0, [r4, #24]
} // namespace TypedTextDatabase
 800675e:	bd10      	pop	{r4, pc}
 8006760:	200031d8 	.word	0x200031d8

08006764 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8006764:	b510      	push	{r4, lr}
    pointArray = 0;
 8006766:	2400      	movs	r4, #0
 8006768:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800676a:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 800676c:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 800676e:	601c      	str	r4, [r3, #0]
}
 8006770:	bd10      	pop	{r4, pc}

08006772 <_ZN13ModelListener15movePaddle1LeftEv>:
    virtual void movePaddle1Left() {}
 8006772:	4770      	bx	lr

08006774 <_ZN13ModelListener16movePaddle1RightEv>:
    virtual void movePaddle1Right() {}
 8006774:	4770      	bx	lr

08006776 <_ZN13ModelListener15movePaddle2LeftEv>:
    virtual void movePaddle2Left() {}
 8006776:	4770      	bx	lr

08006778 <_ZN13ModelListener16movePaddle2RightEv>:
    virtual void movePaddle2Right() {}
 8006778:	4770      	bx	lr

0800677a <_ZN13ModelListener13paddle1ActionEv>:
    virtual void paddle1Action() {}
 800677a:	4770      	bx	lr

0800677c <_ZN13ModelListener13paddle2ActionEv>:
    virtual void paddle2Action() {}
 800677c:	4770      	bx	lr

0800677e <_ZN24EasyReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~EasyReadyScreenPresenter() {}
 800677e:	4770      	bx	lr

08006780 <_ZThn4_N24EasyReadyScreenPresenterD1Ev>:
 8006780:	3804      	subs	r0, #4
 8006782:	4770      	bx	lr

08006784 <_ZN24EasyReadyScreenPresenter10deactivateEv>:
}

void EasyReadyScreenPresenter::activate()
{

}
 8006784:	4770      	bx	lr

08006786 <_ZN24EasyReadyScreenPresenterD0Ev>:
 8006786:	b510      	push	{r4, lr}
 8006788:	2110      	movs	r1, #16
 800678a:	4604      	mov	r4, r0
 800678c:	f020 fb42 	bl	8026e14 <_ZdlPvj>
 8006790:	4620      	mov	r0, r4
 8006792:	bd10      	pop	{r4, pc}

08006794 <_ZThn4_N24EasyReadyScreenPresenterD0Ev>:
 8006794:	f1a0 0004 	sub.w	r0, r0, #4
 8006798:	e7f5      	b.n	8006786 <_ZN24EasyReadyScreenPresenterD0Ev>
	...

0800679c <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>:
    ModelListener() : model(0) {}
 800679c:	2200      	movs	r2, #0
 800679e:	6082      	str	r2, [r0, #8]
    : view(v)
 80067a0:	4a02      	ldr	r2, [pc, #8]	@ (80067ac <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView+0x10>)
 80067a2:	6002      	str	r2, [r0, #0]
 80067a4:	3218      	adds	r2, #24
 80067a6:	6042      	str	r2, [r0, #4]
 80067a8:	60c1      	str	r1, [r0, #12]
}
 80067aa:	4770      	bx	lr
 80067ac:	0802a8d0 	.word	0x0802a8d0

080067b0 <_ZN19EasyReadyScreenView14tearDownScreenEv>:
}

void EasyReadyScreenView::tearDownScreen()
{
    EasyReadyScreenViewBase::tearDownScreen();
}
 80067b0:	4770      	bx	lr
	...

080067b4 <_ZN19EasyReadyScreenViewD1Ev>:

class EasyReadyScreenView : public EasyReadyScreenViewBase
{
public:
    EasyReadyScreenView();
    virtual ~EasyReadyScreenView() {}
 80067b4:	b510      	push	{r4, lr}
 80067b6:	4b03      	ldr	r3, [pc, #12]	@ (80067c4 <_ZN19EasyReadyScreenViewD1Ev+0x10>)
 80067b8:	6003      	str	r3, [r0, #0]
 80067ba:	4604      	mov	r4, r0
 80067bc:	f7fb ff30 	bl	8002620 <_ZN23EasyReadyScreenViewBaseD1Ev>
 80067c0:	4620      	mov	r0, r4
 80067c2:	bd10      	pop	{r4, pc}
 80067c4:	0802a910 	.word	0x0802a910

080067c8 <_ZN19EasyReadyScreenViewD0Ev>:
 80067c8:	b510      	push	{r4, lr}
 80067ca:	4604      	mov	r4, r0
 80067cc:	f7ff fff2 	bl	80067b4 <_ZN19EasyReadyScreenViewD1Ev>
 80067d0:	4620      	mov	r0, r4
 80067d2:	f241 51bc 	movw	r1, #5564	@ 0x15bc
 80067d6:	f020 fb1d 	bl	8026e14 <_ZdlPvj>
 80067da:	4620      	mov	r0, r4
 80067dc:	bd10      	pop	{r4, pc}

080067de <_ZN19EasyReadyScreenView15handleTickEventEv>:
void EasyReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 80067de:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 80067e2:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 80067e4:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
 80067e8:	2900      	cmp	r1, #0
 80067ea:	dd07      	ble.n	80067fc <_ZN19EasyReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 80067ec:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 80067ee:	3901      	subs	r1, #1

	    }else{
	    	application().gotoEasyScreenScreenNoTransition();
	    }

}
 80067f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 80067f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 80067f6:	f8c2 15b8 	str.w	r1, [r2, #1464]	@ 0x5b8
	        updateCounter(tickCounter);
 80067fa:	4718      	bx	r3
 80067fc:	f00d fe32 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoEasyScreenScreenNoTransition();
 8006804:	f7fc bf70 	b.w	80036e8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>

08006808 <_ZN19EasyReadyScreenViewC1Ev>:
EasyReadyScreenView::EasyReadyScreenView()
 8006808:	b510      	push	{r4, lr}
 800680a:	4604      	mov	r4, r0
 800680c:	f7fb ffd6 	bl	80027bc <_ZN23EasyReadyScreenViewBaseC1Ev>
 8006810:	4b04      	ldr	r3, [pc, #16]	@ (8006824 <_ZN19EasyReadyScreenViewC1Ev+0x1c>)
 8006812:	6023      	str	r3, [r4, #0]
 8006814:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8006818:	22b4      	movs	r2, #180	@ 0xb4
 800681a:	f8c3 25b8 	str.w	r2, [r3, #1464]	@ 0x5b8
}
 800681e:	4620      	mov	r0, r4
 8006820:	bd10      	pop	{r4, pc}
 8006822:	bf00      	nop
 8006824:	0802a910 	.word	0x0802a910

08006828 <_ZN19EasyReadyScreenView11setupScreenEv>:
{
 8006828:	b510      	push	{r4, lr}
 800682a:	4604      	mov	r4, r0
    EasyReadyScreenViewBase::setupScreen();
 800682c:	f7fb fed8 	bl	80025e0 <_ZN23EasyReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8006830:	6823      	ldr	r3, [r4, #0]
 8006832:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8006836:	4620      	mov	r0, r4
 8006838:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800683a:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
}
 800683e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 8006842:	4718      	bx	r3

08006844 <_ZN19EasyReadyScreenView13updateCounterEi>:
void EasyReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8006844:	2978      	cmp	r1, #120	@ 0x78
{
 8006846:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006848:	4605      	mov	r5, r0
	    if (value > 120)
 800684a:	dc23      	bgt.n	8006894 <_ZN19EasyReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 800684c:	293c      	cmp	r1, #60	@ 0x3c
 800684e:	dc23      	bgt.n	8006898 <_ZN19EasyReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8006850:	2900      	cmp	r1, #0
 8006852:	bfd4      	ite	le
 8006854:	2400      	movle	r4, #0
 8006856:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8006858:	f505 7733 	add.w	r7, r5, #716	@ 0x2cc
 800685c:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800685e:	f505 7638 	add.w	r6, r5, #736	@ 0x2e0
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8006862:	4a0e      	ldr	r2, [pc, #56]	@ (800689c <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 8006864:	210a      	movs	r1, #10
 8006866:	4638      	mov	r0, r7
 8006868:	f011 f9d2 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800686c:	4623      	mov	r3, r4
 800686e:	4a0b      	ldr	r2, [pc, #44]	@ (800689c <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 8006870:	210a      	movs	r1, #10
 8006872:	4630      	mov	r0, r6
 8006874:	f011 f9cc 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8006878:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 800687c:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 8006880:	f8c5 62c8 	str.w	r6, [r5, #712]	@ 0x2c8
 8006884:	f00e fe8c 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8006888:	f505 7020 	add.w	r0, r5, #640	@ 0x280
}
 800688c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8006890:	f00e be86 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8006894:	2403      	movs	r4, #3
 8006896:	e7df      	b.n	8006858 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8006898:	2402      	movs	r4, #2
 800689a:	e7dd      	b.n	8006858 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
 800689c:	08029f83 	.word	0x08029f83

080068a0 <_ZN19EasyScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~EasyScreenPresenter() {}
 80068a0:	4770      	bx	lr

080068a2 <_ZThn4_N19EasyScreenPresenterD1Ev>:
 80068a2:	3804      	subs	r0, #4
 80068a4:	4770      	bx	lr

080068a6 <_ZN19EasyScreenPresenter10deactivateEv>:
}

void EasyScreenPresenter::deactivate()
{

}
 80068a6:	4770      	bx	lr

080068a8 <_ZN19EasyScreenPresenterD0Ev>:
 80068a8:	b510      	push	{r4, lr}
 80068aa:	2110      	movs	r1, #16
 80068ac:	4604      	mov	r4, r0
 80068ae:	f020 fab1 	bl	8026e14 <_ZdlPvj>
 80068b2:	4620      	mov	r0, r4
 80068b4:	bd10      	pop	{r4, pc}

080068b6 <_ZThn4_N19EasyScreenPresenterD0Ev>:
 80068b6:	f1a0 0004 	sub.w	r0, r0, #4
 80068ba:	e7f5      	b.n	80068a8 <_ZN19EasyScreenPresenterD0Ev>

080068bc <_ZN19EasyScreenPresenter8activateEv>:
	model->resetGame();
 80068bc:	6880      	ldr	r0, [r0, #8]
 80068be:	f001 be39 	b.w	8008534 <_ZN5Model9resetGameEv>
	...

080068c4 <_ZN19EasyScreenPresenterC1ER14EasyScreenView>:
 80068c4:	2200      	movs	r2, #0
 80068c6:	6082      	str	r2, [r0, #8]
    : view(v)
 80068c8:	4a02      	ldr	r2, [pc, #8]	@ (80068d4 <_ZN19EasyScreenPresenterC1ER14EasyScreenView+0x10>)
 80068ca:	6002      	str	r2, [r0, #0]
 80068cc:	3218      	adds	r2, #24
 80068ce:	6042      	str	r2, [r0, #4]
 80068d0:	60c1      	str	r1, [r0, #12]
}
 80068d2:	4770      	bx	lr
 80068d4:	0802a948 	.word	0x0802a948

080068d8 <_ZN19EasyScreenPresenter13goToEndScreenEi>:
void  EasyScreenPresenter::handleTickEvent()
{

}
void EasyScreenPresenter::goToEndScreen(int winner)
{
 80068d8:	b508      	push	{r3, lr}
    // Gửi thông tin người chiến thắng đến Model
    model->setWinner(winner);
 80068da:	6880      	ldr	r0, [r0, #8]
 80068dc:	f001 fe16 	bl	800850c <_ZN5Model9setWinnerEi>
    // Yêu cầu chuyển đến EndScreen
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 80068e0:	f00d fdc0 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
}
 80068e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 80068e8:	f7fc bf1e 	b.w	8003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

080068ec <_ZN14EasyScreenView14tearDownScreenEv>:
}

void EasyScreenView::tearDownScreen()
{
    EasyScreenViewBase::tearDownScreen();
}
 80068ec:	4770      	bx	lr
	...

080068f0 <_ZN14EasyScreenViewD1Ev>:

class EasyScreenView : public EasyScreenViewBase
{
public:
    EasyScreenView();
    virtual ~EasyScreenView() {}
 80068f0:	b510      	push	{r4, lr}
 80068f2:	4b03      	ldr	r3, [pc, #12]	@ (8006900 <_ZN14EasyScreenViewD1Ev+0x10>)
 80068f4:	6003      	str	r3, [r0, #0]
 80068f6:	4604      	mov	r4, r0
 80068f8:	f7fc f9ac 	bl	8002c54 <_ZN18EasyScreenViewBaseD1Ev>
 80068fc:	4620      	mov	r0, r4
 80068fe:	bd10      	pop	{r4, pc}
 8006900:	0802a988 	.word	0x0802a988

08006904 <_ZN14EasyScreenViewD0Ev>:
 8006904:	b510      	push	{r4, lr}
 8006906:	4604      	mov	r4, r0
 8006908:	f7ff fff2 	bl	80068f0 <_ZN14EasyScreenViewD1Ev>
 800690c:	4620      	mov	r0, r4
 800690e:	f241 51dc 	movw	r1, #5596	@ 0x15dc
 8006912:	f020 fa7f 	bl	8026e14 <_ZdlPvj>
 8006916:	4620      	mov	r0, r4
 8006918:	bd10      	pop	{r4, pc}
	...

0800691c <_ZN14EasyScreenViewC1Ev>:
EasyScreenView::EasyScreenView(): ballX(160), ballY(120), ballVelX(1), ballVelY(1),
 800691c:	b510      	push	{r4, lr}
 800691e:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false)
 8006920:	f7fc f9b2 	bl	8002c88 <_ZN18EasyScreenViewBaseC1Ev>
 8006924:	4b11      	ldr	r3, [pc, #68]	@ (800696c <_ZN14EasyScreenViewC1Ev+0x50>)
 8006926:	6023      	str	r3, [r4, #0]
EasyScreenView::EasyScreenView(): ballX(160), ballY(120), ballVelX(1), ballVelY(1),
 8006928:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800692c:	f203 52b4 	addw	r2, r3, #1460	@ 0x5b4
 8006930:	490f      	ldr	r1, [pc, #60]	@ (8006970 <_ZN14EasyScreenViewC1Ev+0x54>)
 8006932:	6011      	str	r1, [r2, #0]
 8006934:	f503 62b7 	add.w	r2, r3, #1464	@ 0x5b8
 8006938:	490e      	ldr	r1, [pc, #56]	@ (8006974 <_ZN14EasyScreenViewC1Ev+0x58>)
 800693a:	6011      	str	r1, [r2, #0]
 800693c:	f203 51bc 	addw	r1, r3, #1468	@ 0x5bc
 8006940:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8006944:	600a      	str	r2, [r1, #0]
 8006946:	f504 51ae 	add.w	r1, r4, #5568	@ 0x15c0
}
 800694a:	4620      	mov	r0, r4
EasyScreenView::EasyScreenView(): ballX(160), ballY(120), ballVelX(1), ballVelY(1),
 800694c:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 800694e:	2200      	movs	r2, #0
 8006950:	f883 25c4 	strb.w	r2, [r3, #1476]	@ 0x5c4
 8006954:	f8c3 25c8 	str.w	r2, [r3, #1480]	@ 0x5c8
 8006958:	f8c3 25cc 	str.w	r2, [r3, #1484]	@ 0x5cc
								  score1(0), score2(0),gameOver(false)
 800695c:	f8c3 25d0 	str.w	r2, [r3, #1488]	@ 0x5d0
 8006960:	f8c3 25d4 	str.w	r2, [r3, #1492]	@ 0x5d4
 8006964:	f883 25d8 	strb.w	r2, [r3, #1496]	@ 0x5d8
}
 8006968:	bd10      	pop	{r4, pc}
 800696a:	bf00      	nop
 800696c:	0802a988 	.word	0x0802a988
 8006970:	43200000 	.word	0x43200000
 8006974:	42f00000 	.word	0x42f00000

08006978 <_ZN14EasyScreenView11setupScreenEv>:
{
 8006978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800697c:	4605      	mov	r5, r0
    score1 = 0;
 800697e:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 8006982:	f204 57b4 	addw	r7, r4, #1460	@ 0x5b4
    EasyScreenViewBase::setupScreen();
 8006986:	f7fc f963 	bl	8002c50 <_ZN18EasyScreenViewBase11setupScreenEv>
	ballY = 120;
 800698a:	f504 68b7 	add.w	r8, r4, #1464	@ 0x5b8
    score1 = 0;
 800698e:	2300      	movs	r3, #0
	ballX = 160;
 8006990:	4a26      	ldr	r2, [pc, #152]	@ (8006a2c <_ZN14EasyScreenView11setupScreenEv+0xb4>)
    score1 = 0;
 8006992:	f8c4 35d0 	str.w	r3, [r4, #1488]	@ 0x5d0
	score2 = 0;
 8006996:	f8c4 35d4 	str.w	r3, [r4, #1492]	@ 0x5d4
	gameOver = false;
 800699a:	f884 35d8 	strb.w	r3, [r4, #1496]	@ 0x5d8
	ballVelX = 1;
 800699e:	f204 51bc 	addw	r1, r4, #1468	@ 0x5bc
	ballX = 160;
 80069a2:	603a      	str	r2, [r7, #0]
	ballY = 120;
 80069a4:	4a22      	ldr	r2, [pc, #136]	@ (8006a30 <_ZN14EasyScreenView11setupScreenEv+0xb8>)
 80069a6:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1;
 80069aa:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80069ae:	600a      	str	r2, [r1, #0]
	ballVelY = 1;
 80069b0:	f505 51ae 	add.w	r1, r5, #5568	@ 0x15c0
	ball.invalidate();
 80069b4:	f505 761c 	add.w	r6, r5, #624	@ 0x270
	ballVelY = 1;
 80069b8:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 80069ba:	4630      	mov	r0, r6
	waitingForServe = false;
 80069bc:	f884 35c4 	strb.w	r3, [r4, #1476]	@ 0x5c4
	serveDelayTicks = 0;
 80069c0:	f8c4 35c8 	str.w	r3, [r4, #1480]	@ 0x5c8
	servingPlayer = 0;
 80069c4:	f8c4 35cc 	str.w	r3, [r4, #1484]	@ 0x5cc
	ball.invalidate();
 80069c8:	f00a fa6e 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 80069cc:	ed98 7a00 	vldr	s14, [r8]
 80069d0:	edd7 7a00 	vldr	s15, [r7]
 80069d4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80069d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80069dc:	ee17 3a10 	vmov	r3, s14
 80069e0:	b21a      	sxth	r2, r3
 80069e2:	ee17 3a90 	vmov	r3, s15
 80069e6:	4630      	mov	r0, r6
 80069e8:	b219      	sxth	r1, r3
 80069ea:	f7fa fc90 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 80069ee:	4630      	mov	r0, r6
	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 80069f0:	4e10      	ldr	r6, [pc, #64]	@ (8006a34 <_ZN14EasyScreenView11setupScreenEv+0xbc>)
	ball.invalidate();
 80069f2:	f00a fa59 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 80069f6:	f8d4 35d0 	ldr.w	r3, [r4, #1488]	@ 0x5d0
 80069fa:	4632      	mov	r2, r6
 80069fc:	210a      	movs	r1, #10
 80069fe:	f505 7038 	add.w	r0, r5, #736	@ 0x2e0
 8006a02:	f011 f905 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	EasyScreenViewBase::score1.invalidate();
 8006a06:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8006a0a:	f00e fdc9 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8006a0e:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	@ 0x5d4
 8006a12:	4632      	mov	r2, r6
 8006a14:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
 8006a18:	210a      	movs	r1, #10
 8006a1a:	f011 f8f9 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	EasyScreenViewBase::score2.invalidate();
 8006a1e:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8006a22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	EasyScreenViewBase::score2.invalidate();
 8006a26:	f00e bdbb 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8006a2a:	bf00      	nop
 8006a2c:	43200000 	.word	0x43200000
 8006a30:	42f00000 	.word	0x42f00000
 8006a34:	08029f83 	.word	0x08029f83

08006a38 <_ZN14EasyScreenView15handleTickEventEv>:

void EasyScreenView::handleTickEvent()
{
 8006a38:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 8006a3c:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 8006a40:	4604      	mov	r4, r0
    if (gameOver) {
 8006a42:	f895 35d8 	ldrb.w	r3, [r5, #1496]	@ 0x5d8
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	f040 814e 	bne.w	8006ce8 <_ZN14EasyScreenView15handleTickEventEv+0x2b0>
        return; // Không xử lý nếu trò chơi kết thúc
    }

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8006a4c:	4fcb      	ldr	r7, [pc, #812]	@ (8006d7c <_ZN14EasyScreenView15handleTickEventEv+0x344>)
 8006a4e:	6838      	ldr	r0, [r7, #0]
 8006a50:	2300      	movs	r3, #0
 8006a52:	461a      	mov	r2, r3
 8006a54:	f10d 0107 	add.w	r1, sp, #7
 8006a58:	f005 f883 	bl	800bb62 <osMessageQueueGet>
 8006a5c:	2800      	cmp	r0, #0
 8006a5e:	f000 8146 	beq.w	8006cee <_ZN14EasyScreenView15handleTickEventEv+0x2b6>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8006a62:	f895 35c4 	ldrb.w	r3, [r5, #1476]	@ 0x5c4
 8006a66:	f504 761c 	add.w	r6, r4, #624	@ 0x270
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	f040 8258 	bne.w	8006f20 <_ZN14EasyScreenView15handleTickEventEv+0x4e8>
            ball.invalidate();
 8006a70:	4630      	mov	r0, r6
 8006a72:	f00a fa19 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8006a76:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006a7a:	ed93 6a00 	vldr	s12, [r3]
 8006a7e:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006a82:	edd3 6a00 	vldr	s13, [r3]
 8006a86:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 8006a8a:	f505 62b7 	add.w	r2, r5, #1464	@ 0x5b8
            ballX += ballVelX;
 8006a8e:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 8006a92:	f504 51ae 	add.w	r1, r4, #5568	@ 0x15c0
 8006a96:	edd1 7a00 	vldr	s15, [r1]
 8006a9a:	ed92 7a00 	vldr	s14, [r2]
 8006a9e:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 8006aa2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8006aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 8006aaa:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 8006aae:	f140 81d8 	bpl.w	8006e62 <_ZN14EasyScreenView15handleTickEventEv+0x42a>
                ballY = 0;
 8006ab2:	2300      	movs	r3, #0
 8006ab4:	6013      	str	r3, [r2, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 8006ab6:	eef1 7a67 	vneg.f32	s15, s15
 8006aba:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 8006abe:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8006ac2:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 8006ac6:	4413      	add	r3, r2
 8006ac8:	ee07 3a90 	vmov	s15, r3
 8006acc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 8006ad0:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ad8:	d835      	bhi.n	8006b46 <_ZN14EasyScreenView15handleTickEventEv+0x10e>
                ballX >= paddle1.getX() &&
 8006ada:	ee07 2a10 	vmov	s14, r2
 8006ade:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8006ae2:	eef4 6ac7 	vcmpe.f32	s13, s14
 8006ae6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006aea:	db2c      	blt.n	8006b46 <_ZN14EasyScreenView15handleTickEventEv+0x10e>
                ballY + ball.getHeight() >= paddle1.getY() &&
 8006aec:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006af0:	edd3 6a00 	vldr	s13, [r3]
 8006af4:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
        return rect.y;
 8006af8:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8006afc:	ee07 3a10 	vmov	s14, r3
 8006b00:	ee05 2a90 	vmov	s11, r2
 8006b04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006b08:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8006b0c:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX >= paddle1.getX() &&
 8006b10:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8006b14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b18:	db15      	blt.n	8006b46 <_ZN14EasyScreenView15handleTickEventEv+0x10e>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 8006b1a:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006b1e:	4413      	add	r3, r2
 8006b20:	ee07 3a10 	vmov	s14, r3
 8006b24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle1.getY() &&
 8006b28:	eef4 6ac7 	vcmpe.f32	s13, s14
 8006b2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b30:	d809      	bhi.n	8006b46 <_ZN14EasyScreenView15handleTickEventEv+0x10e>
                ballX = paddle1.getX() + paddle1.getWidth();
 8006b32:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006b36:	edc3 7a00 	vstr	s15, [r3]
                ballVelX = -ballVelX;
 8006b3a:	eeb1 6a46 	vneg.f32	s12, s12
 8006b3e:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006b42:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8006b46:	f9b4 0278 	ldrsh.w	r0, [r4, #632]	@ 0x278
        return rect.x;
 8006b4a:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8006b4e:	ee07 0a90 	vmov	s15, r0
 8006b52:	f205 51b4 	addw	r1, r5, #1460	@ 0x5b4
 8006b56:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006b5a:	edd1 6a00 	vldr	s13, [r1]
 8006b5e:	ee07 3a90 	vmov	s15, r3
 8006b62:	ee77 6a26 	vadd.f32	s13, s14, s13
 8006b66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 8006b6a:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b72:	db3d      	blt.n	8006bf0 <_ZN14EasyScreenView15handleTickEventEv+0x1b8>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8006b74:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 8006b78:	441a      	add	r2, r3
 8006b7a:	ee07 2a90 	vmov	s15, r2
 8006b7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8006b82:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b8a:	d831      	bhi.n	8006bf0 <_ZN14EasyScreenView15handleTickEventEv+0x1b8>
                ballY + ball.getHeight() >= paddle2.getY() &&
 8006b8c:	f505 62b7 	add.w	r2, r5, #1464	@ 0x5b8
 8006b90:	edd2 6a00 	vldr	s13, [r2]
 8006b94:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
        return rect.y;
 8006b98:	f9b4 7122 	ldrsh.w	r7, [r4, #290]	@ 0x122
 8006b9c:	ee07 2a90 	vmov	s15, r2
 8006ba0:	ee06 7a10 	vmov	s12, r7
 8006ba4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006ba8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8006bac:	ee77 7aa6 	vadd.f32	s15, s15, s13
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8006bb0:	eef4 7ac6 	vcmpe.f32	s15, s12
 8006bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bb8:	db1a      	blt.n	8006bf0 <_ZN14EasyScreenView15handleTickEventEv+0x1b8>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 8006bba:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8006bbe:	443a      	add	r2, r7
 8006bc0:	ee07 2a90 	vmov	s15, r2
 8006bc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballY + ball.getHeight() >= paddle2.getY() &&
 8006bc8:	eef4 6ae7 	vcmpe.f32	s13, s15
 8006bcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bd0:	d80e      	bhi.n	8006bf0 <_ZN14EasyScreenView15handleTickEventEv+0x1b8>
                ballX = paddle2.getX() - ball.getWidth();
 8006bd2:	1a1b      	subs	r3, r3, r0
 8006bd4:	ee07 3a90 	vmov	s15, r3
 8006bd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballVelX = -ballVelX;
 8006bdc:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
                ballX = paddle2.getX() - ball.getWidth();
 8006be0:	edc1 7a00 	vstr	s15, [r1]
                ballVelX = -ballVelX;
 8006be4:	edd3 7a00 	vldr	s15, [r3]
 8006be8:	eef1 7a67 	vneg.f32	s15, s15
 8006bec:	edc3 7a00 	vstr	s15, [r3]
            }

            // Xử lý ghi điểm
            if (ballX < 0) {
 8006bf0:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006bf4:	edd3 7a00 	vldr	s15, [r3]
 8006bf8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006bfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c00:	f140 8148 	bpl.w	8006e94 <_ZN14EasyScreenView15handleTickEventEv+0x45c>
                // Người chơi 2 ghi điểm

            	score2++;
 8006c04:	f8d5 35d4 	ldr.w	r3, [r5, #1492]	@ 0x5d4
            	Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8006c08:	4a5d      	ldr	r2, [pc, #372]	@ (8006d80 <_ZN14EasyScreenView15handleTickEventEv+0x348>)
            	score2++;
 8006c0a:	3301      	adds	r3, #1
 8006c0c:	f8c5 35d4 	str.w	r3, [r5, #1492]	@ 0x5d4
            	Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8006c10:	210a      	movs	r1, #10
 8006c12:	f504 7033 	add.w	r0, r4, #716	@ 0x2cc
 8006c16:	f010 fffb 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            	EasyScreenViewBase::score2.invalidate();
 8006c1a:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8006c1e:	f00e fcbf 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>

				if (score2 >= 11) {
 8006c22:	f8d5 35d4 	ldr.w	r3, [r5, #1492]	@ 0x5d4
 8006c26:	2b0a      	cmp	r3, #10
 8006c28:	dd06      	ble.n	8006c38 <_ZN14EasyScreenView15handleTickEventEv+0x200>
					gameOver = true;
 8006c2a:	2301      	movs	r3, #1
					presenter->goToEndScreen(2);
 8006c2c:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
					gameOver = true;
 8006c2e:	f885 35d8 	strb.w	r3, [r5, #1496]	@ 0x5d8
					presenter->goToEndScreen(2);
 8006c32:	2102      	movs	r1, #2
 8006c34:	f7ff fe50 	bl	80068d8 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8006c38:	2300      	movs	r3, #0
 8006c3a:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295

				}
                ball.setVisible(false);
                ball.invalidate();
 8006c3e:	4630      	mov	r0, r6
 8006c40:	f00a f932 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                waitingForServe = true;
 8006c44:	2301      	movs	r3, #1
 8006c46:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
                serveDelayTicks = 60; // 1 giây với 60 FPS
 8006c4a:	233c      	movs	r3, #60	@ 0x3c
 8006c4c:	f8c5 35c8 	str.w	r3, [r5, #1480]	@ 0x5c8
                servingPlayer = 2; // Người chơi 2 phát bóng
 8006c50:	2302      	movs	r3, #2
                ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8006c52:	f9b4 2278 	ldrsh.w	r2, [r4, #632]	@ 0x278
                servingPlayer = 2; // Người chơi 2 phát bóng
 8006c56:	f8c5 35cc 	str.w	r3, [r5, #1484]	@ 0x5cc
                ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8006c5a:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8006c5e:	1a9b      	subs	r3, r3, r2
 8006c60:	3b0a      	subs	r3, #10
 8006c62:	ee07 3a90 	vmov	s15, r3
 8006c66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c6a:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006c6e:	edc3 7a00 	vstr	s15, [r3]
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8006c72:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8006c76:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006c7a:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
                ball.invalidate();
                waitingForServe = true;
                serveDelayTicks = 60; // 1 giây với 60 FPS
                servingPlayer = 1; // Người chơi 1 phát bóng
                ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8006c7e:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006c82:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 8006c86:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8006c8a:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8006c8e:	ee07 3a10 	vmov	s14, r3
 8006c92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006c96:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006c9a:	ed83 7a00 	vstr	s14, [r3]
                ball.moveTo(ballX, ballY);
 8006c9e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006ca2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ca6:	ee17 3a10 	vmov	r3, s14
 8006caa:	b21a      	sxth	r2, r3
 8006cac:	ee17 3a90 	vmov	r3, s15
 8006cb0:	4630      	mov	r0, r6
 8006cb2:	b219      	sxth	r1, r3
 8006cb4:	f7fa fb2b 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 8006cb8:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006cbc:	ed93 7a00 	vldr	s14, [r3]
 8006cc0:	f205 55b4 	addw	r5, r5, #1460	@ 0x5b4
 8006cc4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006cc8:	edd5 7a00 	vldr	s15, [r5]
 8006ccc:	ee17 3a10 	vmov	r3, s14
 8006cd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006cd4:	b21a      	sxth	r2, r3
 8006cd6:	ee17 3a90 	vmov	r3, s15
 8006cda:	4630      	mov	r0, r6
 8006cdc:	b219      	sxth	r1, r3
 8006cde:	f7fa fb16 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8006ce2:	4630      	mov	r0, r6
 8006ce4:	f00a f8e0 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8006ce8:	b002      	add	sp, #8
 8006cea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        switch (command) {
 8006cee:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006cf2:	2b05      	cmp	r3, #5
 8006cf4:	f63f aeab 	bhi.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
 8006cf8:	e8df f003 	tbb	[pc, r3]
 8006cfc:	37241c03 	.word	0x37241c03
 8006d00:	7f48      	.short	0x7f48
        return rect.y;
 8006d02:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY=paddle1.getY()+2;
 8006d06:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8006d08:	b236      	sxth	r6, r6
 8006d0a:	2ec6      	cmp	r6, #198	@ 0xc6
 8006d0c:	bfa8      	it	ge
 8006d0e:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8006d10:	42b3      	cmp	r3, r6
 8006d12:	f43f ae9c 	beq.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
						paddle1.invalidate();
 8006d16:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 8006d1a:	4640      	mov	r0, r8
 8006d1c:	f00e fc40 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8006d20:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8006d24:	4632      	mov	r2, r6
						paddle2.moveTo(paddle2.getX(), newY);
 8006d26:	4640      	mov	r0, r8
 8006d28:	f7fa faf1 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8006d2c:	4640      	mov	r0, r8
 8006d2e:	f00e fc37 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8006d32:	e68c      	b.n	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
 8006d34:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 8006d38:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8006d3a:	b236      	sxth	r6, r6
 8006d3c:	2e02      	cmp	r6, #2
 8006d3e:	bfb8      	it	lt
 8006d40:	2602      	movlt	r6, #2
 8006d42:	e7e5      	b.n	8006d10 <_ZN14EasyScreenView15handleTickEventEv+0x2d8>
 8006d44:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 8006d48:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8006d4a:	b236      	sxth	r6, r6
 8006d4c:	2ec6      	cmp	r6, #198	@ 0xc6
 8006d4e:	bfa8      	it	ge
 8006d50:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8006d52:	42b3      	cmp	r3, r6
 8006d54:	f43f ae7b 	beq.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
						paddle2.invalidate();
 8006d58:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8006d5c:	4640      	mov	r0, r8
 8006d5e:	f00e fc1f 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 8006d62:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8006d66:	4632      	mov	r2, r6
 8006d68:	e7dd      	b.n	8006d26 <_ZN14EasyScreenView15handleTickEventEv+0x2ee>
 8006d6a:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 8006d6e:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8006d70:	b236      	sxth	r6, r6
 8006d72:	2e02      	cmp	r6, #2
 8006d74:	bfb8      	it	lt
 8006d76:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8006d78:	e7eb      	b.n	8006d52 <_ZN14EasyScreenView15handleTickEventEv+0x31a>
 8006d7a:	bf00      	nop
 8006d7c:	20002dc0 	.word	0x20002dc0
 8006d80:	08029f83 	.word	0x08029f83
 8006d84:	43700000 	.word	0x43700000
 8006d88:	43a00000 	.word	0x43a00000
				if (waitingForServe && servingPlayer == 1) {
 8006d8c:	f895 35c4 	ldrb.w	r3, [r5, #1476]	@ 0x5c4
 8006d90:	2b00      	cmp	r3, #0
 8006d92:	f43f ae5c 	beq.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
 8006d96:	f8d5 15cc 	ldr.w	r1, [r5, #1484]	@ 0x5cc
 8006d9a:	2901      	cmp	r1, #1
 8006d9c:	f47f ae57 	bne.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
					waitingForServe = false;
 8006da0:	2300      	movs	r3, #0
 8006da2:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
					ballVelX = 1; // Phát bóng sang phải
 8006da6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006daa:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006dae:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1 : 1;
 8006db2:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006db6:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006dba:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8006dbe:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006dc2:	ee07 3a90 	vmov	s15, r3
 8006dc6:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006dca:	edd3 6a00 	vldr	s13, [r3]
 8006dce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006dd2:	f504 53ae 	add.w	r3, r4, #5568	@ 0x15c0
 8006dd6:	eef4 7ae6 	vcmpe.f32	s15, s13
 8006dda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006dde:	eeff 7a00 	vmov.f32	s15, #240	@ 0xbf800000 -1.0
 8006de2:	bfd8      	it	le
 8006de4:	eef0 7a47 	vmovle.f32	s15, s14
 8006de8:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 8006dec:	f884 1295 	strb.w	r1, [r4, #661]	@ 0x295
					ball.invalidate();
 8006df0:	f504 701c 	add.w	r0, r4, #624	@ 0x270
 8006df4:	f00a f858 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8006df8:	e629      	b.n	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
				if (waitingForServe && servingPlayer == 2) {
 8006dfa:	f895 35c4 	ldrb.w	r3, [r5, #1476]	@ 0x5c4
 8006dfe:	2b00      	cmp	r3, #0
 8006e00:	f43f ae25 	beq.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
 8006e04:	f8d5 35cc 	ldr.w	r3, [r5, #1484]	@ 0x5cc
 8006e08:	2b02      	cmp	r3, #2
 8006e0a:	f47f ae20 	bne.w	8006a4e <_ZN14EasyScreenView15handleTickEventEv+0x16>
					waitingForServe = false;
 8006e0e:	2300      	movs	r3, #0
 8006e10:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
					ballVelX = -1; // Phát bóng sang trái
 8006e14:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8006e18:	f205 53bc 	addw	r3, r5, #1468	@ 0x5bc
 8006e1c:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1 : 1;
 8006e20:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8006e24:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006e28:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8006e2c:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006e30:	ee07 3a90 	vmov	s15, r3
 8006e34:	f505 63b7 	add.w	r3, r5, #1464	@ 0x5b8
 8006e38:	edd3 6a00 	vldr	s13, [r3]
 8006e3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e40:	f504 53ae 	add.w	r3, r4, #5568	@ 0x15c0
 8006e44:	eef4 7ae6 	vcmpe.f32	s15, s13
 8006e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e4c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8006e50:	bfd8      	it	le
 8006e52:	eeb0 7a67 	vmovle.f32	s14, s15
 8006e56:	ed83 7a00 	vstr	s14, [r3]
 8006e5a:	2301      	movs	r3, #1
 8006e5c:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
 8006e60:	e7c6      	b.n	8006df0 <_ZN14EasyScreenView15handleTickEventEv+0x3b8>
        return rect.height;
 8006e62:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
            } else if (ballY + ball.getHeight() > 240) {
 8006e66:	ee05 3a90 	vmov	s11, r3
 8006e6a:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8006e6e:	ee35 7a87 	vadd.f32	s14, s11, s14
 8006e72:	ed5f 5a3c 	vldr	s11, [pc, #-240]	@ 8006d84 <_ZN14EasyScreenView15handleTickEventEv+0x34c>
 8006e76:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8006e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e7e:	f77f ae1e 	ble.w	8006abe <_ZN14EasyScreenView15handleTickEventEv+0x86>
                ballY = 240 - ball.getHeight();
 8006e82:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8006e86:	ee07 3a10 	vmov	s14, r3
 8006e8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8006e8e:	ed82 7a00 	vstr	s14, [r2]
 8006e92:	e610      	b.n	8006ab6 <_ZN14EasyScreenView15handleTickEventEv+0x7e>
            } else if (ballX + ball.getWidth() > 320) {
 8006e94:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006e98:	ed5f 7a45 	vldr	s15, [pc, #-276]	@ 8006d88 <_ZN14EasyScreenView15handleTickEventEv+0x350>
 8006e9c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006ea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ea4:	f77f af08 	ble.w	8006cb8 <_ZN14EasyScreenView15handleTickEventEv+0x280>
            	score1++;
 8006ea8:	f8d5 35d0 	ldr.w	r3, [r5, #1488]	@ 0x5d0
            	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8006eac:	4a37      	ldr	r2, [pc, #220]	@ (8006f8c <_ZN14EasyScreenView15handleTickEventEv+0x554>)
            	score1++;
 8006eae:	3301      	adds	r3, #1
 8006eb0:	f8c5 35d0 	str.w	r3, [r5, #1488]	@ 0x5d0
            	Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8006eb4:	210a      	movs	r1, #10
 8006eb6:	f504 7038 	add.w	r0, r4, #736	@ 0x2e0
 8006eba:	f010 fea9 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            	EasyScreenViewBase::score1.invalidate();
 8006ebe:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 8006ec2:	f00e fb6d 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
				if (score1 >= 11) {
 8006ec6:	f8d5 35d0 	ldr.w	r3, [r5, #1488]	@ 0x5d0
 8006eca:	2b0a      	cmp	r3, #10
 8006ecc:	dd05      	ble.n	8006eda <_ZN14EasyScreenView15handleTickEventEv+0x4a2>
					gameOver = true;
 8006ece:	2101      	movs	r1, #1
					presenter->goToEndScreen(1);
 8006ed0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
					gameOver = true;
 8006ed2:	f885 15d8 	strb.w	r1, [r5, #1496]	@ 0x5d8
					presenter->goToEndScreen(1);
 8006ed6:	f7ff fcff 	bl	80068d8 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8006eda:	2300      	movs	r3, #0
 8006edc:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                ball.invalidate();
 8006ee0:	4630      	mov	r0, r6
 8006ee2:	f009 ffe1 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                waitingForServe = true;
 8006ee6:	2301      	movs	r3, #1
                serveDelayTicks = 60; // 1 giây với 60 FPS
 8006ee8:	223c      	movs	r2, #60	@ 0x3c
                waitingForServe = true;
 8006eea:	f885 35c4 	strb.w	r3, [r5, #1476]	@ 0x5c4
                serveDelayTicks = 60; // 1 giây với 60 FPS
 8006eee:	f8c5 25c8 	str.w	r2, [r5, #1480]	@ 0x5c8
                servingPlayer = 1; // Người chơi 1 phát bóng
 8006ef2:	f8c5 35cc 	str.w	r3, [r5, #1484]	@ 0x5cc
                ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8006ef6:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 8006efa:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8006efe:	4413      	add	r3, r2
 8006f00:	330a      	adds	r3, #10
 8006f02:	ee07 3a90 	vmov	s15, r3
 8006f06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006f0a:	f205 53b4 	addw	r3, r5, #1460	@ 0x5b4
 8006f0e:	edc3 7a00 	vstr	s15, [r3]
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8006f12:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006f16:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006f1a:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8006f1e:	e6ae      	b.n	8006c7e <_ZN14EasyScreenView15handleTickEventEv+0x246>
            if (serveDelayTicks > 0) {
 8006f20:	f8d5 35c8 	ldr.w	r3, [r5, #1480]	@ 0x5c8
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	dd09      	ble.n	8006f3c <_ZN14EasyScreenView15handleTickEventEv+0x504>
                serveDelayTicks--;
 8006f28:	3b01      	subs	r3, #1
 8006f2a:	f8c5 35c8 	str.w	r3, [r5, #1480]	@ 0x5c8
                if (serveDelayTicks == 0) {
 8006f2e:	b92b      	cbnz	r3, 8006f3c <_ZN14EasyScreenView15handleTickEventEv+0x504>
 8006f30:	2301      	movs	r3, #1
 8006f32:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                    ball.invalidate();
 8006f36:	4630      	mov	r0, r6
 8006f38:	f009 ffb6 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8006f3c:	f8d5 35cc 	ldr.w	r3, [r5, #1484]	@ 0x5cc
 8006f40:	2b01      	cmp	r3, #1
 8006f42:	d116      	bne.n	8006f72 <_ZN14EasyScreenView15handleTickEventEv+0x53a>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8006f44:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8006f48:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006f4c:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8006f50:	f505 61b7 	add.w	r1, r5, #1464	@ 0x5b8
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8006f54:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8006f58:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 8006f5c:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8006f60:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8006f64:	ee07 3a90 	vmov	s15, r3
 8006f68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006f6c:	edc1 7a00 	vstr	s15, [r1]
 8006f70:	e6a2      	b.n	8006cb8 <_ZN14EasyScreenView15handleTickEventEv+0x280>
            } else if (servingPlayer == 2) {
 8006f72:	2b02      	cmp	r3, #2
 8006f74:	f47f aea0 	bne.w	8006cb8 <_ZN14EasyScreenView15handleTickEventEv+0x280>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8006f78:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8006f7c:	f505 61b7 	add.w	r1, r5, #1464	@ 0x5b8
 8006f80:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8006f84:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8006f88:	e7e4      	b.n	8006f54 <_ZN14EasyScreenView15handleTickEventEv+0x51c>
 8006f8a:	bf00      	nop
 8006f8c:	08029f83 	.word	0x08029f83

08006f90 <_ZN18EndScreenPresenterD1Ev>:
    virtual void deactivate();
    int getWinner(int playerId);
    void handlePlayAgain();


    virtual ~EndScreenPresenter() {}
 8006f90:	4770      	bx	lr

08006f92 <_ZThn4_N18EndScreenPresenterD1Ev>:
 8006f92:	3804      	subs	r0, #4
 8006f94:	4770      	bx	lr

08006f96 <_ZN18EndScreenPresenter8activateEv>:

}

void EndScreenPresenter::activate()
{
	view.updateWinner();
 8006f96:	68c0      	ldr	r0, [r0, #12]
 8006f98:	6803      	ldr	r3, [r0, #0]
 8006f9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006f9c:	4718      	bx	r3

08006f9e <_ZN18EndScreenPresenter10deactivateEv>:
}

void EndScreenPresenter::deactivate()
{

}
 8006f9e:	4770      	bx	lr

08006fa0 <_ZN18EndScreenPresenterD0Ev>:
 8006fa0:	b510      	push	{r4, lr}
 8006fa2:	2110      	movs	r1, #16
 8006fa4:	4604      	mov	r4, r0
 8006fa6:	f01f ff35 	bl	8026e14 <_ZdlPvj>
 8006faa:	4620      	mov	r0, r4
 8006fac:	bd10      	pop	{r4, pc}

08006fae <_ZThn4_N18EndScreenPresenterD0Ev>:
 8006fae:	f1a0 0004 	sub.w	r0, r0, #4
 8006fb2:	e7f5      	b.n	8006fa0 <_ZN18EndScreenPresenterD0Ev>

08006fb4 <_ZN18EndScreenPresenterC1ER13EndScreenView>:
 8006fb4:	2200      	movs	r2, #0
 8006fb6:	6082      	str	r2, [r0, #8]
    : view(v)
 8006fb8:	4a02      	ldr	r2, [pc, #8]	@ (8006fc4 <_ZN18EndScreenPresenterC1ER13EndScreenView+0x10>)
 8006fba:	6002      	str	r2, [r0, #0]
 8006fbc:	3218      	adds	r2, #24
 8006fbe:	6042      	str	r2, [r0, #4]
 8006fc0:	60c1      	str	r1, [r0, #12]
}
 8006fc2:	4770      	bx	lr
 8006fc4:	0802a9bc 	.word	0x0802a9bc

08006fc8 <_ZN18EndScreenPresenter9getWinnerEi>:
int EndScreenPresenter::getWinner(int playerId)
{
    return model->getWinner(playerId);
 8006fc8:	6880      	ldr	r0, [r0, #8]
 8006fca:	f001 baa5 	b.w	8008518 <_ZN5Model9getWinnerEi>

08006fce <_ZN13EndScreenView14tearDownScreenEv>:


void EndScreenView::tearDownScreen()
{
    EndScreenViewBase::tearDownScreen();
}
 8006fce:	4770      	bx	lr

08006fd0 <_ZN13EndScreenViewD1Ev>:

class EndScreenView : public EndScreenViewBase
{
public:
    EndScreenView();
    virtual ~EndScreenView() {}
 8006fd0:	b510      	push	{r4, lr}
 8006fd2:	4b03      	ldr	r3, [pc, #12]	@ (8006fe0 <_ZN13EndScreenViewD1Ev+0x10>)
 8006fd4:	6003      	str	r3, [r0, #0]
 8006fd6:	4604      	mov	r4, r0
 8006fd8:	f7fc f889 	bl	80030ee <_ZN17EndScreenViewBaseD1Ev>
 8006fdc:	4620      	mov	r0, r4
 8006fde:	bd10      	pop	{r4, pc}
 8006fe0:	0802a9fc 	.word	0x0802a9fc

08006fe4 <_ZN13EndScreenViewD0Ev>:
 8006fe4:	b510      	push	{r4, lr}
 8006fe6:	4604      	mov	r4, r0
 8006fe8:	f7ff fff2 	bl	8006fd0 <_ZN13EndScreenViewD1Ev>
 8006fec:	4620      	mov	r0, r4
 8006fee:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 8006ff2:	f01f ff0f 	bl	8026e14 <_ZdlPvj>
 8006ff6:	4620      	mov	r0, r4
 8006ff8:	bd10      	pop	{r4, pc}
	...

08006ffc <_ZN13EndScreenViewC1Ev>:
EndScreenView::EndScreenView()
 8006ffc:	b510      	push	{r4, lr}
 8006ffe:	4604      	mov	r4, r0
 8007000:	f7fc f8ee 	bl	80031e0 <_ZN17EndScreenViewBaseC1Ev>
 8007004:	4b01      	ldr	r3, [pc, #4]	@ (800700c <_ZN13EndScreenViewC1Ev+0x10>)
 8007006:	6023      	str	r3, [r4, #0]
}
 8007008:	4620      	mov	r0, r4
 800700a:	bd10      	pop	{r4, pc}
 800700c:	0802a9fc 	.word	0x0802a9fc

08007010 <_ZN13EndScreenView11setupScreenEv>:
    EndScreenViewBase::setupScreen();
 8007010:	f7fc b86e 	b.w	80030f0 <_ZN17EndScreenViewBase11setupScreenEv>

08007014 <_ZN13EndScreenView12updateWinnerEv>:

void EndScreenView::updateWinner()
{
 8007014:	b538      	push	{r3, r4, r5, lr}
    // Gán số vào playerwinBuffer
    int valueToDisplay = 0;
    if (presenter->getWinner(1)) {
 8007016:	2101      	movs	r1, #1
{
 8007018:	4604      	mov	r4, r0
    if (presenter->getWinner(1)) {
 800701a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 800701c:	f7ff ffd4 	bl	8006fc8 <_ZN18EndScreenPresenter9getWinnerEi>
 8007020:	bb00      	cbnz	r0, 8007064 <_ZN13EndScreenView12updateWinnerEv+0x50>
        valueToDisplay = 1;
    } else if (presenter->getWinner(2)) {
 8007022:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8007024:	2102      	movs	r1, #2
 8007026:	f7ff ffcf 	bl	8006fc8 <_ZN18EndScreenPresenter9getWinnerEi>
 800702a:	1e03      	subs	r3, r0, #0
 800702c:	bf18      	it	ne
 800702e:	2301      	movne	r3, #1
 8007030:	005b      	lsls	r3, r3, #1
        valueToDisplay = 2;
    }
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%d", valueToDisplay);
 8007032:	f504 75ba 	add.w	r5, r4, #372	@ 0x174
 8007036:	4a0c      	ldr	r2, [pc, #48]	@ (8007068 <_ZN13EndScreenView12updateWinnerEv+0x54>)
 8007038:	210a      	movs	r1, #10
 800703a:	4628      	mov	r0, r5
 800703c:	f010 fde8 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 8007040:	2300      	movs	r3, #0
 8007042:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
    playerwin.setWildcard(playerwinBuffer); // Liên kết lại buffer
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 8007046:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 800704a:	f8a4 3186 	strh.w	r3, [r4, #390]	@ 0x186
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 800704e:	4628      	mov	r0, r5
 8007050:	f00a facc 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8007054:	2301      	movs	r3, #1
 8007056:	f884 3105 	strb.w	r3, [r4, #261]	@ 0x105
    playerwin.setVisible(true); // Đảm bảo hiển thị
    playerwin.invalidate(); // Yêu cầu vẽ lại
 800705a:	4628      	mov	r0, r5
}
 800705c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    playerwin.invalidate(); // Yêu cầu vẽ lại
 8007060:	f00e ba9e 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
        valueToDisplay = 1;
 8007064:	2301      	movs	r3, #1
 8007066:	e7e4      	b.n	8007032 <_ZN13EndScreenView12updateWinnerEv+0x1e>
 8007068:	08029f83 	.word	0x08029f83

0800706c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800706c:	4770      	bx	lr

0800706e <_ZN19FrontendApplicationD0Ev>:
 800706e:	b510      	push	{r4, lr}
 8007070:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8007074:	4604      	mov	r4, r0
 8007076:	f01f fecd 	bl	8026e14 <_ZdlPvj>
 800707a:	4620      	mov	r0, r4
 800707c:	bd10      	pop	{r4, pc}

0800707e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800707e:	b510      	push	{r4, lr}
 8007080:	4604      	mov	r4, r0
    {
        model.tick();
 8007082:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8007086:	f001 fa3b 	bl	8008500 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800708a:	4620      	mov	r0, r4
    }
 800708c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007090:	f00d ba92 	b.w	80145b8 <_ZN8touchgfx11Application15handleTickEventEv>

08007094 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007094:	b510      	push	{r4, lr}
 8007096:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8007098:	f7fc fa92 	bl	80035c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800709c:	4b01      	ldr	r3, [pc, #4]	@ (80070a4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800709e:	6023      	str	r3, [r4, #0]
{

}
 80070a0:	4620      	mov	r0, r4
 80070a2:	bd10      	pop	{r4, pc}
 80070a4:	0802aa34 	.word	0x0802aa34

080070a8 <_ZN24HardReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HardReadyScreenPresenter() {}
 80070a8:	4770      	bx	lr

080070aa <_ZThn4_N24HardReadyScreenPresenterD1Ev>:
 80070aa:	3804      	subs	r0, #4
 80070ac:	4770      	bx	lr

080070ae <_ZN24HardReadyScreenPresenter10deactivateEv>:
}

void HardReadyScreenPresenter::activate()
{

}
 80070ae:	4770      	bx	lr

080070b0 <_ZN24HardReadyScreenPresenterD0Ev>:
 80070b0:	b510      	push	{r4, lr}
 80070b2:	2110      	movs	r1, #16
 80070b4:	4604      	mov	r4, r0
 80070b6:	f01f fead 	bl	8026e14 <_ZdlPvj>
 80070ba:	4620      	mov	r0, r4
 80070bc:	bd10      	pop	{r4, pc}

080070be <_ZThn4_N24HardReadyScreenPresenterD0Ev>:
 80070be:	f1a0 0004 	sub.w	r0, r0, #4
 80070c2:	e7f5      	b.n	80070b0 <_ZN24HardReadyScreenPresenterD0Ev>

080070c4 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>:
 80070c4:	2200      	movs	r2, #0
 80070c6:	6082      	str	r2, [r0, #8]
    : view(v)
 80070c8:	4a02      	ldr	r2, [pc, #8]	@ (80070d4 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView+0x10>)
 80070ca:	6002      	str	r2, [r0, #0]
 80070cc:	3218      	adds	r2, #24
 80070ce:	6042      	str	r2, [r0, #4]
 80070d0:	60c1      	str	r1, [r0, #12]
}
 80070d2:	4770      	bx	lr
 80070d4:	0802aa88 	.word	0x0802aa88

080070d8 <_ZN19HardReadyScreenView14tearDownScreenEv>:
}

void HardReadyScreenView::tearDownScreen()
{
    HardReadyScreenViewBase::tearDownScreen();
}
 80070d8:	4770      	bx	lr
	...

080070dc <_ZN19HardReadyScreenViewD1Ev>:

class HardReadyScreenView : public HardReadyScreenViewBase
{
public:
    HardReadyScreenView();
    virtual ~HardReadyScreenView() {}
 80070dc:	b510      	push	{r4, lr}
 80070de:	4b03      	ldr	r3, [pc, #12]	@ (80070ec <_ZN19HardReadyScreenViewD1Ev+0x10>)
 80070e0:	6003      	str	r3, [r0, #0]
 80070e2:	4604      	mov	r4, r0
 80070e4:	f7fd f980 	bl	80043e8 <_ZN23HardReadyScreenViewBaseD1Ev>
 80070e8:	4620      	mov	r0, r4
 80070ea:	bd10      	pop	{r4, pc}
 80070ec:	0802aac8 	.word	0x0802aac8

080070f0 <_ZN19HardReadyScreenViewD0Ev>:
 80070f0:	b510      	push	{r4, lr}
 80070f2:	4604      	mov	r4, r0
 80070f4:	f7ff fff2 	bl	80070dc <_ZN19HardReadyScreenViewD1Ev>
 80070f8:	4620      	mov	r0, r4
 80070fa:	f44f 51b8 	mov.w	r1, #5888	@ 0x1700
 80070fe:	f01f fe89 	bl	8026e14 <_ZdlPvj>
 8007102:	4620      	mov	r0, r4
 8007104:	bd10      	pop	{r4, pc}

08007106 <_ZN19HardReadyScreenView15handleTickEventEv>:
void HardReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 8007106:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800710a:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 800710c:	f8d2 16fc 	ldr.w	r1, [r2, #1788]	@ 0x6fc
 8007110:	2900      	cmp	r1, #0
 8007112:	dd07      	ble.n	8007124 <_ZN19HardReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8007114:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 8007116:	3901      	subs	r1, #1

	    }else{
	    	application().gotoHardScreenScreenNoTransition();
	    }

}
 8007118:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 800711c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 800711e:	f8c2 16fc 	str.w	r1, [r2, #1788]	@ 0x6fc
	        updateCounter(tickCounter);
 8007122:	4718      	bx	r3
 8007124:	f00d f99e 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoHardScreenScreenNoTransition();
 800712c:	f7fc ba9c 	b.w	8003668 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>

08007130 <_ZN19HardReadyScreenViewC1Ev>:
HardReadyScreenView::HardReadyScreenView()
 8007130:	b510      	push	{r4, lr}
 8007132:	4604      	mov	r4, r0
 8007134:	f7fd f9b0 	bl	8004498 <_ZN23HardReadyScreenViewBaseC1Ev>
 8007138:	4b04      	ldr	r3, [pc, #16]	@ (800714c <_ZN19HardReadyScreenViewC1Ev+0x1c>)
 800713a:	6023      	str	r3, [r4, #0]
 800713c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007140:	22b4      	movs	r2, #180	@ 0xb4
 8007142:	f8c3 26fc 	str.w	r2, [r3, #1788]	@ 0x6fc
}
 8007146:	4620      	mov	r0, r4
 8007148:	bd10      	pop	{r4, pc}
 800714a:	bf00      	nop
 800714c:	0802aac8 	.word	0x0802aac8

08007150 <_ZN19HardReadyScreenView11setupScreenEv>:
{
 8007150:	b510      	push	{r4, lr}
 8007152:	4604      	mov	r4, r0
    HardReadyScreenViewBase::setupScreen();
 8007154:	f7fd f946 	bl	80043e4 <_ZN23HardReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8007158:	6823      	ldr	r3, [r4, #0]
 800715a:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 800715e:	4620      	mov	r0, r4
 8007160:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007162:	f8d2 16fc 	ldr.w	r1, [r2, #1788]	@ 0x6fc
}
 8007166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 800716a:	4718      	bx	r3

0800716c <_ZN19HardReadyScreenView13updateCounterEi>:
void HardReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 800716c:	2978      	cmp	r1, #120	@ 0x78
{
 800716e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007170:	4605      	mov	r5, r0
	    if (value > 120)
 8007172:	dc23      	bgt.n	80071bc <_ZN19HardReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8007174:	293c      	cmp	r1, #60	@ 0x3c
 8007176:	dc23      	bgt.n	80071c0 <_ZN19HardReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8007178:	2900      	cmp	r1, #0
 800717a:	bfd4      	ite	le
 800717c:	2400      	movle	r4, #0
 800717e:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007180:	f505 6782 	add.w	r7, r5, #1040	@ 0x410
 8007184:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007186:	f205 4624 	addw	r6, r5, #1060	@ 0x424
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 800718a:	4a0e      	ldr	r2, [pc, #56]	@ (80071c4 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 800718c:	210a      	movs	r1, #10
 800718e:	4638      	mov	r0, r7
 8007190:	f010 fd3e 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007194:	4623      	mov	r3, r4
 8007196:	4a0b      	ldr	r2, [pc, #44]	@ (80071c4 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 8007198:	210a      	movs	r1, #10
 800719a:	4630      	mov	r0, r6
 800719c:	f010 fd38 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 80071a0:	f505 7032 	add.w	r0, r5, #712	@ 0x2c8
 80071a4:	f8c5 7310 	str.w	r7, [r5, #784]	@ 0x310
 80071a8:	f8c5 63e0 	str.w	r6, [r5, #992]	@ 0x3e0
 80071ac:	f00e f9f8 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 80071b0:	f505 7066 	add.w	r0, r5, #920	@ 0x398
}
 80071b4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 80071b8:	f00e b9f2 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 80071bc:	2403      	movs	r4, #3
 80071be:	e7df      	b.n	8007180 <_ZN19HardReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 80071c0:	2402      	movs	r4, #2
 80071c2:	e7dd      	b.n	8007180 <_ZN19HardReadyScreenView13updateCounterEi+0x14>
 80071c4:	08029f83 	.word	0x08029f83

080071c8 <_ZN19HardScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~HardScreenPresenter() {}
 80071c8:	4770      	bx	lr

080071ca <_ZThn4_N19HardScreenPresenterD1Ev>:
 80071ca:	3804      	subs	r0, #4
 80071cc:	4770      	bx	lr

080071ce <_ZN19HardScreenPresenter10deactivateEv>:
}

void HardScreenPresenter::activate()
{

}
 80071ce:	4770      	bx	lr

080071d0 <_ZN19HardScreenPresenterD0Ev>:
 80071d0:	b510      	push	{r4, lr}
 80071d2:	2110      	movs	r1, #16
 80071d4:	4604      	mov	r4, r0
 80071d6:	f01f fe1d 	bl	8026e14 <_ZdlPvj>
 80071da:	4620      	mov	r0, r4
 80071dc:	bd10      	pop	{r4, pc}

080071de <_ZThn4_N19HardScreenPresenterD0Ev>:
 80071de:	f1a0 0004 	sub.w	r0, r0, #4
 80071e2:	e7f5      	b.n	80071d0 <_ZN19HardScreenPresenterD0Ev>

080071e4 <_ZN19HardScreenPresenterC1ER14HardScreenView>:
 80071e4:	2200      	movs	r2, #0
 80071e6:	6082      	str	r2, [r0, #8]
    : view(v)
 80071e8:	4a02      	ldr	r2, [pc, #8]	@ (80071f4 <_ZN19HardScreenPresenterC1ER14HardScreenView+0x10>)
 80071ea:	6002      	str	r2, [r0, #0]
 80071ec:	3218      	adds	r2, #24
 80071ee:	6042      	str	r2, [r0, #4]
 80071f0:	60c1      	str	r1, [r0, #12]
}
 80071f2:	4770      	bx	lr
 80071f4:	0802ab00 	.word	0x0802ab00

080071f8 <_ZN19HardScreenPresenter13goToEndScreenEi>:
void HardScreenPresenter::handleTickEvent()
{

}
void HardScreenPresenter::goToEndScreen(int winner)
{
 80071f8:	b508      	push	{r3, lr}
    model->setWinner(winner);
 80071fa:	6880      	ldr	r0, [r0, #8]
 80071fc:	f001 f986 	bl	800850c <_ZN5Model9setWinnerEi>
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007200:	f00d f930 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007204:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007208:	f7fc ba8e 	b.w	8003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

0800720c <_ZN14HardScreenView14tearDownScreenEv>:
}

void HardScreenView::tearDownScreen()
{
    HardScreenViewBase::tearDownScreen();
}
 800720c:	4770      	bx	lr
	...

08007210 <_ZN14HardScreenViewD1Ev>:

class HardScreenView : public HardScreenViewBase
{
public:
    HardScreenView();
    virtual ~HardScreenView() {}
 8007210:	b510      	push	{r4, lr}
 8007212:	4b03      	ldr	r3, [pc, #12]	@ (8007220 <_ZN14HardScreenViewD1Ev+0x10>)
 8007214:	6003      	str	r3, [r0, #0]
 8007216:	4604      	mov	r4, r0
 8007218:	f7fd fc3a 	bl	8004a90 <_ZN18HardScreenViewBaseD1Ev>
 800721c:	4620      	mov	r0, r4
 800721e:	bd10      	pop	{r4, pc}
 8007220:	0802ab40 	.word	0x0802ab40

08007224 <_ZN14HardScreenViewD0Ev>:
 8007224:	b510      	push	{r4, lr}
 8007226:	4604      	mov	r4, r0
 8007228:	f7ff fff2 	bl	8007210 <_ZN14HardScreenViewD1Ev>
 800722c:	4620      	mov	r0, r4
 800722e:	f241 61f4 	movw	r1, #5876	@ 0x16f4
 8007232:	f01f fdef 	bl	8026e14 <_ZdlPvj>
 8007236:	4620      	mov	r0, r4
 8007238:	bd10      	pop	{r4, pc}
	...

0800723c <_ZN14HardScreenViewC1Ev>:
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 800723c:	b510      	push	{r4, lr}
 800723e:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false)
 8007240:	f7fd fc40 	bl	8004ac4 <_ZN18HardScreenViewBaseC1Ev>
 8007244:	4b10      	ldr	r3, [pc, #64]	@ (8007288 <_ZN14HardScreenViewC1Ev+0x4c>)
 8007246:	6023      	str	r3, [r4, #0]
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 8007248:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800724c:	f203 62cc 	addw	r2, r3, #1740	@ 0x6cc
 8007250:	490e      	ldr	r1, [pc, #56]	@ (800728c <_ZN14HardScreenViewC1Ev+0x50>)
 8007252:	6011      	str	r1, [r2, #0]
 8007254:	f503 62da 	add.w	r2, r3, #1744	@ 0x6d0
 8007258:	490d      	ldr	r1, [pc, #52]	@ (8007290 <_ZN14HardScreenViewC1Ev+0x54>)
 800725a:	6011      	str	r1, [r2, #0]
 800725c:	f203 61d4 	addw	r1, r3, #1748	@ 0x6d4
 8007260:	4a0c      	ldr	r2, [pc, #48]	@ (8007294 <_ZN14HardScreenViewC1Ev+0x58>)
 8007262:	600a      	str	r2, [r1, #0]
 8007264:	f503 61db 	add.w	r1, r3, #1752	@ 0x6d8
}
 8007268:	4620      	mov	r0, r4
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 800726a:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 800726c:	2200      	movs	r2, #0
 800726e:	f883 26dc 	strb.w	r2, [r3, #1756]	@ 0x6dc
 8007272:	f8c3 26e0 	str.w	r2, [r3, #1760]	@ 0x6e0
 8007276:	f8c3 26e4 	str.w	r2, [r3, #1764]	@ 0x6e4
								  score1(0), score2(0),gameOver(false)
 800727a:	f8c3 26e8 	str.w	r2, [r3, #1768]	@ 0x6e8
 800727e:	f8c3 26ec 	str.w	r2, [r3, #1772]	@ 0x6ec
 8007282:	f883 26f0 	strb.w	r2, [r3, #1776]	@ 0x6f0
}
 8007286:	bd10      	pop	{r4, pc}
 8007288:	0802ab40 	.word	0x0802ab40
 800728c:	43200000 	.word	0x43200000
 8007290:	42f00000 	.word	0x42f00000
 8007294:	3fb33333 	.word	0x3fb33333

08007298 <_ZN14HardScreenView11setupScreenEv>:
{
 8007298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800729c:	4605      	mov	r5, r0
    score1 = 0;
 800729e:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 80072a2:	f204 67cc 	addw	r7, r4, #1740	@ 0x6cc
    HardScreenViewBase::setupScreen();
 80072a6:	f7fd fbf1 	bl	8004a8c <_ZN18HardScreenViewBase11setupScreenEv>
	ballY = 120;
 80072aa:	f504 68da 	add.w	r8, r4, #1744	@ 0x6d0
    score1 = 0;
 80072ae:	2300      	movs	r3, #0
	ballX = 160;
 80072b0:	4a25      	ldr	r2, [pc, #148]	@ (8007348 <_ZN14HardScreenView11setupScreenEv+0xb0>)
    score1 = 0;
 80072b2:	f8c4 36e8 	str.w	r3, [r4, #1768]	@ 0x6e8
	score2 = 0;
 80072b6:	f8c4 36ec 	str.w	r3, [r4, #1772]	@ 0x6ec
	gameOver = false;
 80072ba:	f884 36f0 	strb.w	r3, [r4, #1776]	@ 0x6f0
	ballVelX = 1.4f;
 80072be:	f204 61d4 	addw	r1, r4, #1748	@ 0x6d4
	ballX = 160;
 80072c2:	603a      	str	r2, [r7, #0]
	ballY = 120;
 80072c4:	4a21      	ldr	r2, [pc, #132]	@ (800734c <_ZN14HardScreenView11setupScreenEv+0xb4>)
 80072c6:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.4f;
 80072ca:	4a21      	ldr	r2, [pc, #132]	@ (8007350 <_ZN14HardScreenView11setupScreenEv+0xb8>)
 80072cc:	600a      	str	r2, [r1, #0]
	ballVelY = 1.4f;
 80072ce:	f504 61db 	add.w	r1, r4, #1752	@ 0x6d8
	ball.invalidate();
 80072d2:	f505 7662 	add.w	r6, r5, #904	@ 0x388
	ballVelY = 1.4f;
 80072d6:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 80072d8:	4630      	mov	r0, r6
	waitingForServe = false;
 80072da:	f884 36dc 	strb.w	r3, [r4, #1756]	@ 0x6dc
	serveDelayTicks = 0;
 80072de:	f8c4 36e0 	str.w	r3, [r4, #1760]	@ 0x6e0
	servingPlayer = 0;
 80072e2:	f8c4 36e4 	str.w	r3, [r4, #1764]	@ 0x6e4
	ball.invalidate();
 80072e6:	f009 fddf 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 80072ea:	ed98 7a00 	vldr	s14, [r8]
 80072ee:	edd7 7a00 	vldr	s15, [r7]
 80072f2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80072f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072fa:	ee17 3a10 	vmov	r3, s14
 80072fe:	b21a      	sxth	r2, r3
 8007300:	ee17 3a90 	vmov	r3, s15
 8007304:	4630      	mov	r0, r6
 8007306:	b219      	sxth	r1, r3
 8007308:	f7fa f801 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 800730c:	4630      	mov	r0, r6
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 800730e:	4e11      	ldr	r6, [pc, #68]	@ (8007354 <_ZN14HardScreenView11setupScreenEv+0xbc>)
	ball.invalidate();
 8007310:	f009 fdca 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007314:	f8d4 36e8 	ldr.w	r3, [r4, #1768]	@ 0x6e8
 8007318:	4632      	mov	r2, r6
 800731a:	210a      	movs	r1, #10
 800731c:	f505 707e 	add.w	r0, r5, #1016	@ 0x3f8
 8007320:	f010 fc76 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score1.invalidate();
 8007324:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8007328:	f00e f93a 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 800732c:	f8d4 36ec 	ldr.w	r3, [r4, #1772]	@ 0x6ec
 8007330:	4632      	mov	r2, r6
 8007332:	f505 7079 	add.w	r0, r5, #996	@ 0x3e4
 8007336:	210a      	movs	r1, #10
 8007338:	f010 fc6a 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score2.invalidate();
 800733c:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8007340:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	HardScreenViewBase::score2.invalidate();
 8007344:	f00e b92c 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007348:	43200000 	.word	0x43200000
 800734c:	42f00000 	.word	0x42f00000
 8007350:	3fb33333 	.word	0x3fb33333
 8007354:	08029f83 	.word	0x08029f83

08007358 <_ZN14HardScreenView15handleTickEventEv>:

void HardScreenView::handleTickEvent()
{
 8007358:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 800735c:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 8007360:	4604      	mov	r4, r0
    if (gameOver) {
 8007362:	f895 36f0 	ldrb.w	r3, [r5, #1776]	@ 0x6f0
 8007366:	2b00      	cmp	r3, #0
 8007368:	f040 8353 	bne.w	8007a12 <_ZN14HardScreenView15handleTickEventEv+0x6ba>
        return; // Không xử lý nếu trò chơi kết thúc
    }

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 800736c:	4fda      	ldr	r7, [pc, #872]	@ (80076d8 <_ZN14HardScreenView15handleTickEventEv+0x380>)
 800736e:	6838      	ldr	r0, [r7, #0]
 8007370:	2300      	movs	r3, #0
 8007372:	461a      	mov	r2, r3
 8007374:	f10d 0107 	add.w	r1, sp, #7
 8007378:	f004 fbf3 	bl	800bb62 <osMessageQueueGet>
 800737c:	2800      	cmp	r0, #0
 800737e:	f000 820b 	beq.w	8007798 <_ZN14HardScreenView15handleTickEventEv+0x440>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8007382:	f895 86dc 	ldrb.w	r8, [r5, #1756]	@ 0x6dc
 8007386:	f504 7662 	add.w	r6, r4, #904	@ 0x388
 800738a:	f1b8 0f00 	cmp.w	r8, #0
 800738e:	f040 843e 	bne.w	8007c0e <_ZN14HardScreenView15handleTickEventEv+0x8b6>
            ball.invalidate();
 8007392:	4630      	mov	r0, r6
 8007394:	f009 fd88 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8007398:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 800739c:	ed93 6a00 	vldr	s12, [r3]
 80073a0:	f205 63cc 	addw	r3, r5, #1740	@ 0x6cc
 80073a4:	edd3 6a00 	vldr	s13, [r3]
 80073a8:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 80073ac:	f505 62da 	add.w	r2, r5, #1744	@ 0x6d0
            ballX += ballVelX;
 80073b0:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 80073b4:	f505 61db 	add.w	r1, r5, #1752	@ 0x6d8
 80073b8:	edd1 7a00 	vldr	s15, [r1]
 80073bc:	ed92 7a00 	vldr	s14, [r2]
 80073c0:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 80073c4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80073c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 80073cc:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 80073d0:	f140 8293 	bpl.w	80078fa <_ZN14HardScreenView15handleTickEventEv+0x5a2>
                ballY = 0;
 80073d4:	2300      	movs	r3, #0
 80073d6:	6013      	str	r3, [r2, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 80073d8:	eef1 7a67 	vneg.f32	s15, s15
 80073dc:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 80073e0:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80073e4:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 80073e8:	4413      	add	r3, r2
 80073ea:	ee07 3a90 	vmov	s15, r3
 80073ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 80073f2:	eef4 6ae7 	vcmpe.f32	s13, s15
 80073f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80073fa:	d835      	bhi.n	8007468 <_ZN14HardScreenView15handleTickEventEv+0x110>
                ballX >= paddle1.getX() &&
 80073fc:	ee07 2a10 	vmov	s14, r2
 8007400:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8007404:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800740c:	db2c      	blt.n	8007468 <_ZN14HardScreenView15handleTickEventEv+0x110>
                ballY + ball.getHeight() >= paddle1.getY() &&
 800740e:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 8007412:	edd3 6a00 	vldr	s13, [r3]
 8007416:	f9b4 3392 	ldrsh.w	r3, [r4, #914]	@ 0x392
        return rect.y;
 800741a:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 800741e:	ee07 3a10 	vmov	s14, r3
 8007422:	ee05 2a90 	vmov	s11, r2
 8007426:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800742a:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800742e:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX >= paddle1.getX() &&
 8007432:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8007436:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800743a:	db15      	blt.n	8007468 <_ZN14HardScreenView15handleTickEventEv+0x110>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 800743c:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8007440:	4413      	add	r3, r2
 8007442:	ee07 3a10 	vmov	s14, r3
 8007446:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle1.getY() &&
 800744a:	eef4 6ac7 	vcmpe.f32	s13, s14
 800744e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007452:	d809      	bhi.n	8007468 <_ZN14HardScreenView15handleTickEventEv+0x110>
                ballX = paddle1.getX() + paddle1.getWidth();
 8007454:	f205 63cc 	addw	r3, r5, #1740	@ 0x6cc
 8007458:	edc3 7a00 	vstr	s15, [r3]
                ballVelX = -ballVelX;
 800745c:	eeb1 6a46 	vneg.f32	s12, s12
 8007460:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 8007464:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8007468:	f9b4 0390 	ldrsh.w	r0, [r4, #912]	@ 0x390
        return rect.x;
 800746c:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8007470:	ee07 0a90 	vmov	s15, r0
 8007474:	f205 61cc 	addw	r1, r5, #1740	@ 0x6cc
 8007478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800747c:	edd1 6a00 	vldr	s13, [r1]
 8007480:	ee07 3a10 	vmov	s14, r3
 8007484:	ee77 6aa6 	vadd.f32	s13, s15, s13
 8007488:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 800748c:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007494:	db3d      	blt.n	8007512 <_ZN14HardScreenView15handleTickEventEv+0x1ba>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8007496:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 800749a:	441a      	add	r2, r3
 800749c:	ee07 2a10 	vmov	s14, r2
 80074a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 80074a4:	eef4 6ac7 	vcmpe.f32	s13, s14
 80074a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80074ac:	d831      	bhi.n	8007512 <_ZN14HardScreenView15handleTickEventEv+0x1ba>
                ballY + ball.getHeight() >= paddle2.getY() &&
 80074ae:	f505 62da 	add.w	r2, r5, #1744	@ 0x6d0
 80074b2:	edd2 6a00 	vldr	s13, [r2]
 80074b6:	f9b4 2392 	ldrsh.w	r2, [r4, #914]	@ 0x392
        return rect.y;
 80074ba:	f9b4 7122 	ldrsh.w	r7, [r4, #290]	@ 0x122
 80074be:	ee07 2a10 	vmov	s14, r2
 80074c2:	ee06 7a10 	vmov	s12, r7
 80074c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80074ca:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80074ce:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 80074d2:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80074d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80074da:	db1a      	blt.n	8007512 <_ZN14HardScreenView15handleTickEventEv+0x1ba>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 80074dc:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 80074e0:	443a      	add	r2, r7
 80074e2:	ee07 2a10 	vmov	s14, r2
 80074e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 80074ea:	eef4 6ac7 	vcmpe.f32	s13, s14
 80074ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80074f2:	d80e      	bhi.n	8007512 <_ZN14HardScreenView15handleTickEventEv+0x1ba>
                ballX = paddle2.getX() - ball.getWidth();
 80074f4:	1a1b      	subs	r3, r3, r0
 80074f6:	ee07 3a10 	vmov	s14, r3
 80074fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 80074fe:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
                ballX = paddle2.getX() - ball.getWidth();
 8007502:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 8007506:	ed93 7a00 	vldr	s14, [r3]
 800750a:	eeb1 7a47 	vneg.f32	s14, s14
 800750e:	ed83 7a00 	vstr	s14, [r3]
        return rect.x;
 8007512:	f9b4 22dc 	ldrsh.w	r2, [r4, #732]	@ 0x2dc

            // Xử lý va chạm với các image
                   bool imageCollision = false;
                   int newServingPlayer = 0;
                   // Kiểm tra va chạm với image1
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8007516:	f205 63cc 	addw	r3, r5, #1740	@ 0x6cc
 800751a:	ed93 7a00 	vldr	s14, [r3]
 800751e:	ee06 2a90 	vmov	s13, r2
 8007522:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007526:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image1.getX() + image1.getWidth() &&
                       ballY + ball.getHeight() >= image1.getY() &&
 800752a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800752e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007532:	f2c0 81fb 	blt.w	800792c <_ZN14HardScreenView15handleTickEventEv+0x5d4>
                       ballX <= image1.getX() + image1.getWidth() &&
 8007536:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 800753a:	4413      	add	r3, r2
 800753c:	ee06 3a90 	vmov	s13, r3
 8007540:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8007544:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8007548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800754c:	f200 81ee 	bhi.w	800792c <_ZN14HardScreenView15handleTickEventEv+0x5d4>
                       ballY + ball.getHeight() >= image1.getY() &&
 8007550:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 8007554:	ed93 6a00 	vldr	s12, [r3]
 8007558:	f9b4 3392 	ldrsh.w	r3, [r4, #914]	@ 0x392
        return rect.y;
 800755c:	f9b4 22de 	ldrsh.w	r2, [r4, #734]	@ 0x2de
 8007560:	ee06 3a90 	vmov	s13, r3
 8007564:	ee05 2a90 	vmov	s11, r2
 8007568:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800756c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007570:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1.getX() + image1.getWidth() &&
 8007574:	eef4 6ae5 	vcmpe.f32	s13, s11
 8007578:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800757c:	f2c0 81d6 	blt.w	800792c <_ZN14HardScreenView15handleTickEventEv+0x5d4>
                       ballY <= image1.getY() + image1.getHeight()) {
 8007580:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
 8007584:	4413      	add	r3, r2
 8007586:	ee06 3a90 	vmov	s13, r3
 800758a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1.getY() &&
 800758e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8007592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007596:	f200 81c9 	bhi.w	800792c <_ZN14HardScreenView15handleTickEventEv+0x5d4>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 800759a:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 800759e:	edd3 6a00 	vldr	s13, [r3]
 80075a2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80075a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075aa:	f340 81c1 	ble.w	8007930 <_ZN14HardScreenView15handleTickEventEv+0x5d8>
 80075ae:	2702      	movs	r7, #2
                       imageCollision = true;
 80075b0:	f04f 0801 	mov.w	r8, #1
        return rect.x;
 80075b4:	f9b4 2308 	ldrsh.w	r2, [r4, #776]	@ 0x308
                   }
                   // Kiểm tra va chạm với image1_1
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 80075b8:	ee06 2a90 	vmov	s13, r2
 80075bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
                       ballY + ball.getHeight() >= image1_1.getY() &&
 80075c0:	eef4 7ae6 	vcmpe.f32	s15, s13
 80075c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075c8:	db3c      	blt.n	8007644 <_ZN14HardScreenView15handleTickEventEv+0x2ec>
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 80075ca:	f9b4 330c 	ldrsh.w	r3, [r4, #780]	@ 0x30c
 80075ce:	4413      	add	r3, r2
 80075d0:	ee06 3a90 	vmov	s13, r3
 80075d4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 80075d8:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80075dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075e0:	d830      	bhi.n	8007644 <_ZN14HardScreenView15handleTickEventEv+0x2ec>
                       ballY + ball.getHeight() >= image1_1.getY() &&
 80075e2:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 80075e6:	ed93 6a00 	vldr	s12, [r3]
 80075ea:	f9b4 3392 	ldrsh.w	r3, [r4, #914]	@ 0x392
        return rect.y;
 80075ee:	f9b4 230a 	ldrsh.w	r2, [r4, #778]	@ 0x30a
 80075f2:	ee06 3a90 	vmov	s13, r3
 80075f6:	ee05 2a90 	vmov	s11, r2
 80075fa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80075fe:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007602:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 8007606:	eef4 6ae5 	vcmpe.f32	s13, s11
 800760a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800760e:	db19      	blt.n	8007644 <_ZN14HardScreenView15handleTickEventEv+0x2ec>
                       ballY <= image1_1.getY() + image1_1.getHeight()) {
 8007610:	f9b4 330e 	ldrsh.w	r3, [r4, #782]	@ 0x30e
 8007614:	4413      	add	r3, r2
 8007616:	ee06 3a90 	vmov	s13, r3
 800761a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1_1.getY() &&
 800761e:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8007622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007626:	d80d      	bhi.n	8007644 <_ZN14HardScreenView15handleTickEventEv+0x2ec>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8007628:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 800762c:	edd3 6a00 	vldr	s13, [r3]
 8007630:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8007634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007638:	bfd3      	iteet	le
 800763a:	2701      	movle	r7, #1
 800763c:	2702      	movgt	r7, #2
                       imageCollision = true;
 800763e:	f04f 0801 	movgt.w	r8, #1
 8007642:	46b8      	movle	r8, r7
        return rect.x;
 8007644:	f9b4 2334 	ldrsh.w	r2, [r4, #820]	@ 0x334
                   }
                   // Kiểm tra va chạm với image2
                   if (ballX + ball.getWidth() >= image2.getX() &&
 8007648:	ee06 2a90 	vmov	s13, r2
 800764c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image2.getX() + image2.getWidth() &&
                       ballY + ball.getHeight() >= image2.getY() &&
 8007650:	eef4 7ae6 	vcmpe.f32	s15, s13
 8007654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007658:	db40      	blt.n	80076dc <_ZN14HardScreenView15handleTickEventEv+0x384>
                       ballX <= image2.getX() + image2.getWidth() &&
 800765a:	f9b4 3338 	ldrsh.w	r3, [r4, #824]	@ 0x338
 800765e:	4413      	add	r3, r2
 8007660:	ee06 3a90 	vmov	s13, r3
 8007664:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image2.getX() &&
 8007668:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800766c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007670:	d834      	bhi.n	80076dc <_ZN14HardScreenView15handleTickEventEv+0x384>
                       ballY + ball.getHeight() >= image2.getY() &&
 8007672:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 8007676:	ed93 6a00 	vldr	s12, [r3]
 800767a:	f9b4 3392 	ldrsh.w	r3, [r4, #914]	@ 0x392
        return rect.y;
 800767e:	f9b4 2336 	ldrsh.w	r2, [r4, #822]	@ 0x336
 8007682:	ee06 3a90 	vmov	s13, r3
 8007686:	ee05 2a90 	vmov	s11, r2
 800768a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800768e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007692:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image2.getX() + image2.getWidth() &&
 8007696:	eef4 6ae5 	vcmpe.f32	s13, s11
 800769a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800769e:	db1d      	blt.n	80076dc <_ZN14HardScreenView15handleTickEventEv+0x384>
                       ballY <= image2.getY() + image2.getHeight()) {
 80076a0:	f9b4 333a 	ldrsh.w	r3, [r4, #826]	@ 0x33a
 80076a4:	4413      	add	r3, r2
 80076a6:	ee06 3a90 	vmov	s13, r3
 80076aa:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image2.getY() &&
 80076ae:	eeb4 6ae6 	vcmpe.f32	s12, s13
 80076b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076b6:	d811      	bhi.n	80076dc <_ZN14HardScreenView15handleTickEventEv+0x384>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 80076b8:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 80076bc:	edd3 6a00 	vldr	s13, [r3]
 80076c0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80076c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076c8:	bfd3      	iteet	le
 80076ca:	2701      	movle	r7, #1
 80076cc:	2702      	movgt	r7, #2
                       imageCollision = true;
 80076ce:	f04f 0801 	movgt.w	r8, #1
 80076d2:	46b8      	movle	r8, r7
 80076d4:	e002      	b.n	80076dc <_ZN14HardScreenView15handleTickEventEv+0x384>
 80076d6:	bf00      	nop
 80076d8:	20002dc0 	.word	0x20002dc0
        return rect.x;
 80076dc:	f9b4 2360 	ldrsh.w	r2, [r4, #864]	@ 0x360
                   }
                   // Kiểm tra va chạm với image2_2
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 80076e0:	ee06 2a90 	vmov	s13, r2
 80076e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
                       ballY + ball.getHeight() >= image2_2.getY() &&
 80076e8:	eef4 7ae6 	vcmpe.f32	s15, s13
 80076ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076f0:	db2f      	blt.n	8007752 <_ZN14HardScreenView15handleTickEventEv+0x3fa>
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 80076f2:	f9b4 3364 	ldrsh.w	r3, [r4, #868]	@ 0x364
 80076f6:	4413      	add	r3, r2
 80076f8:	ee07 3a90 	vmov	s15, r3
 80076fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 8007700:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8007704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007708:	d823      	bhi.n	8007752 <_ZN14HardScreenView15handleTickEventEv+0x3fa>
                       ballY + ball.getHeight() >= image2_2.getY() &&
 800770a:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 800770e:	edd3 6a00 	vldr	s13, [r3]
 8007712:	f9b4 3392 	ldrsh.w	r3, [r4, #914]	@ 0x392
        return rect.y;
 8007716:	f9b4 2362 	ldrsh.w	r2, [r4, #866]	@ 0x362
 800771a:	ee07 3a90 	vmov	s15, r3
 800771e:	ee06 2a10 	vmov	s12, r2
 8007722:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007726:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800772a:	ee77 7aa6 	vadd.f32	s15, s15, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 800772e:	eef4 7ac6 	vcmpe.f32	s15, s12
 8007732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007736:	db0c      	blt.n	8007752 <_ZN14HardScreenView15handleTickEventEv+0x3fa>
                       ballY <= image2_2.getY() + image2_2.getHeight()) {
 8007738:	f9b4 3366 	ldrsh.w	r3, [r4, #870]	@ 0x366
 800773c:	4413      	add	r3, r2
 800773e:	ee07 3a90 	vmov	s15, r3
 8007742:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8007746:	eef4 6ae7 	vcmpe.f32	s13, s15
 800774a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800774e:	f240 80f3 	bls.w	8007938 <_ZN14HardScreenView15handleTickEventEv+0x5e0>
                       imageCollision = true;
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
                   }

                   if (imageCollision) {
 8007752:	f1b8 0f00 	cmp.w	r8, #0
 8007756:	f000 8189 	beq.w	8007a6c <_ZN14HardScreenView15handleTickEventEv+0x714>
                       // Cộng điểm cho người chơi còn lại
                       if (newServingPlayer == 2) {
 800775a:	2f02      	cmp	r7, #2
 800775c:	f040 80f7 	bne.w	800794e <_ZN14HardScreenView15handleTickEventEv+0x5f6>
                           score2++;
 8007760:	f8d5 36ec 	ldr.w	r3, [r5, #1772]	@ 0x6ec
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007764:	4aba      	ldr	r2, [pc, #744]	@ (8007a50 <_ZN14HardScreenView15handleTickEventEv+0x6f8>)
                           score2++;
 8007766:	3301      	adds	r3, #1
 8007768:	f8c5 36ec 	str.w	r3, [r5, #1772]	@ 0x6ec
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 800776c:	210a      	movs	r1, #10
 800776e:	f504 7079 	add.w	r0, r4, #996	@ 0x3e4
 8007772:	f010 fa4d 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score2.invalidate();
 8007776:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 800777a:	f00d ff11 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
                           if (score2 >= 11) {
 800777e:	f8d5 36ec 	ldr.w	r3, [r5, #1772]	@ 0x6ec
 8007782:	2b0a      	cmp	r3, #10
 8007784:	dd06      	ble.n	8007794 <_ZN14HardScreenView15handleTickEventEv+0x43c>
                               gameOver = true;
 8007786:	2301      	movs	r3, #1
                               presenter->goToEndScreen(2);
 8007788:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                               gameOver = true;
 800778a:	f885 36f0 	strb.w	r3, [r5, #1776]	@ 0x6f0
                               presenter->goToEndScreen(2);
 800778e:	2102      	movs	r1, #2
 8007790:	f7ff fd32 	bl	80071f8 <_ZN19HardScreenPresenter13goToEndScreenEi>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8007794:	2702      	movs	r7, #2
 8007796:	e0f3      	b.n	8007980 <_ZN14HardScreenView15handleTickEventEv+0x628>
        switch (command) {
 8007798:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800779c:	2b05      	cmp	r3, #5
 800779e:	f63f ade6 	bhi.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
 80077a2:	e8df f003 	tbb	[pc, r3]
 80077a6:	1c03      	.short	0x1c03
 80077a8:	763f3724 	.word	0x763f3724
 80077ac:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY=paddle1.getY()+2;
 80077b0:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80077b2:	b236      	sxth	r6, r6
 80077b4:	2ec6      	cmp	r6, #198	@ 0xc6
 80077b6:	bfa8      	it	ge
 80077b8:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 80077ba:	429e      	cmp	r6, r3
 80077bc:	f43f add7 	beq.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
						paddle1.invalidate();
 80077c0:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 80077c4:	4640      	mov	r0, r8
 80077c6:	f00d feeb 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 80077ca:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 80077ce:	4632      	mov	r2, r6
						paddle2.moveTo(paddle2.getX(), newY);
 80077d0:	4640      	mov	r0, r8
 80077d2:	f7f9 fd9c 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 80077d6:	4640      	mov	r0, r8
 80077d8:	f00d fee2 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80077dc:	e5c7      	b.n	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
 80077de:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 80077e2:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 80077e4:	b236      	sxth	r6, r6
 80077e6:	2e02      	cmp	r6, #2
 80077e8:	bfb8      	it	lt
 80077ea:	2602      	movlt	r6, #2
 80077ec:	e7e5      	b.n	80077ba <_ZN14HardScreenView15handleTickEventEv+0x462>
 80077ee:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 80077f2:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80077f4:	b236      	sxth	r6, r6
 80077f6:	2ec6      	cmp	r6, #198	@ 0xc6
 80077f8:	bfa8      	it	ge
 80077fa:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 80077fc:	429e      	cmp	r6, r3
 80077fe:	f43f adb6 	beq.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
						paddle2.invalidate();
 8007802:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8007806:	4640      	mov	r0, r8
 8007808:	f00d feca 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 800780c:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8007810:	4632      	mov	r2, r6
 8007812:	e7dd      	b.n	80077d0 <_ZN14HardScreenView15handleTickEventEv+0x478>
 8007814:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 8007818:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 800781a:	b236      	sxth	r6, r6
 800781c:	2e02      	cmp	r6, #2
 800781e:	bfb8      	it	lt
 8007820:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8007822:	e7eb      	b.n	80077fc <_ZN14HardScreenView15handleTickEventEv+0x4a4>
				if (waitingForServe && servingPlayer == 1) {
 8007824:	f895 36dc 	ldrb.w	r3, [r5, #1756]	@ 0x6dc
 8007828:	2b00      	cmp	r3, #0
 800782a:	f43f ada0 	beq.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
 800782e:	f8d5 16e4 	ldr.w	r1, [r5, #1764]	@ 0x6e4
 8007832:	2901      	cmp	r1, #1
 8007834:	f47f ad9b 	bne.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
					ballVelX = 1.4f; // Phát bóng sang phải
 8007838:	ed9f 7a86 	vldr	s14, [pc, #536]	@ 8007a54 <_ZN14HardScreenView15handleTickEventEv+0x6fc>
					waitingForServe = false;
 800783c:	2300      	movs	r3, #0
 800783e:	f885 36dc 	strb.w	r3, [r5, #1756]	@ 0x6dc
					ballVelX = 1.4f; // Phát bóng sang phải
 8007842:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 8007846:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1.4f : 1.4f;
 800784a:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 800784e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007852:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8007856:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800785a:	ee07 3a90 	vmov	s15, r3
 800785e:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 8007862:	edd3 6a00 	vldr	s13, [r3]
 8007866:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800786a:	f505 63db 	add.w	r3, r5, #1752	@ 0x6d8
 800786e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8007872:	eddf 7a79 	vldr	s15, [pc, #484]	@ 8007a58 <_ZN14HardScreenView15handleTickEventEv+0x700>
 8007876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800787a:	bfd8      	it	le
 800787c:	eef0 7a47 	vmovle.f32	s15, s14
 8007880:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 8007884:	f884 13ad 	strb.w	r1, [r4, #941]	@ 0x3ad
					ball.invalidate();
 8007888:	f504 7062 	add.w	r0, r4, #904	@ 0x388
 800788c:	f009 fb0c 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8007890:	e56d      	b.n	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
				if (waitingForServe && servingPlayer == 2) {
 8007892:	f895 36dc 	ldrb.w	r3, [r5, #1756]	@ 0x6dc
 8007896:	2b00      	cmp	r3, #0
 8007898:	f43f ad69 	beq.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
 800789c:	f8d5 36e4 	ldr.w	r3, [r5, #1764]	@ 0x6e4
 80078a0:	2b02      	cmp	r3, #2
 80078a2:	f47f ad64 	bne.w	800736e <_ZN14HardScreenView15handleTickEventEv+0x16>
					ballVelX = -1.4f; // Phát bóng sang trái
 80078a6:	ed9f 7a6c 	vldr	s14, [pc, #432]	@ 8007a58 <_ZN14HardScreenView15handleTickEventEv+0x700>
					waitingForServe = false;
 80078aa:	2300      	movs	r3, #0
 80078ac:	f885 36dc 	strb.w	r3, [r5, #1756]	@ 0x6dc
					ballVelX = -1.4f; // Phát bóng sang trái
 80078b0:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 80078b4:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1.4f : 1.4f;
 80078b8:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 80078bc:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80078c0:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 80078c4:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80078c8:	ee07 3a90 	vmov	s15, r3
 80078cc:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 80078d0:	edd3 6a00 	vldr	s13, [r3]
 80078d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80078d8:	f505 63db 	add.w	r3, r5, #1752	@ 0x6d8
 80078dc:	eef4 7ae6 	vcmpe.f32	s15, s13
 80078e0:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8007a54 <_ZN14HardScreenView15handleTickEventEv+0x6fc>
 80078e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078e8:	bfd8      	it	le
 80078ea:	eeb0 7a67 	vmovle.f32	s14, s15
 80078ee:	ed83 7a00 	vstr	s14, [r3]
 80078f2:	2301      	movs	r3, #1
 80078f4:	f884 33ad 	strb.w	r3, [r4, #941]	@ 0x3ad
 80078f8:	e7c6      	b.n	8007888 <_ZN14HardScreenView15handleTickEventEv+0x530>
        return rect.height;
 80078fa:	f9b4 3392 	ldrsh.w	r3, [r4, #914]	@ 0x392
            } else if (ballY + ball.getHeight() > 240) {
 80078fe:	ee05 3a90 	vmov	s11, r3
 8007902:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8007906:	ee35 7a87 	vadd.f32	s14, s11, s14
 800790a:	eddf 5a54 	vldr	s11, [pc, #336]	@ 8007a5c <_ZN14HardScreenView15handleTickEventEv+0x704>
 800790e:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8007912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007916:	f77f ad63 	ble.w	80073e0 <_ZN14HardScreenView15handleTickEventEv+0x88>
                ballY = 240 - ball.getHeight();
 800791a:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 800791e:	ee07 3a10 	vmov	s14, r3
 8007922:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007926:	ed82 7a00 	vstr	s14, [r2]
 800792a:	e555      	b.n	80073d8 <_ZN14HardScreenView15handleTickEventEv+0x80>
                   int newServingPlayer = 0;
 800792c:	2700      	movs	r7, #0
 800792e:	e641      	b.n	80075b4 <_ZN14HardScreenView15handleTickEventEv+0x25c>
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 8007930:	f04f 0801 	mov.w	r8, #1
                       imageCollision = true;
 8007934:	4647      	mov	r7, r8
 8007936:	e63d      	b.n	80075b4 <_ZN14HardScreenView15handleTickEventEv+0x25c>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8007938:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 800793c:	edd3 7a00 	vldr	s15, [r3]
 8007940:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007948:	f73f af0a 	bgt.w	8007760 <_ZN14HardScreenView15handleTickEventEv+0x408>
 800794c:	2701      	movs	r7, #1
                           }
                       } else {
                           score1++;
 800794e:	f8d5 36e8 	ldr.w	r3, [r5, #1768]	@ 0x6e8
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007952:	4a3f      	ldr	r2, [pc, #252]	@ (8007a50 <_ZN14HardScreenView15handleTickEventEv+0x6f8>)
                           score1++;
 8007954:	3301      	adds	r3, #1
 8007956:	f8c5 36e8 	str.w	r3, [r5, #1768]	@ 0x6e8
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 800795a:	210a      	movs	r1, #10
 800795c:	f504 707e 	add.w	r0, r4, #1016	@ 0x3f8
 8007960:	f010 f956 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score1.invalidate();
 8007964:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 8007968:	f00d fe1a 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
                           if (score1 >= 11) {
 800796c:	f8d5 36e8 	ldr.w	r3, [r5, #1768]	@ 0x6e8
 8007970:	2b0a      	cmp	r3, #10
 8007972:	dd05      	ble.n	8007980 <_ZN14HardScreenView15handleTickEventEv+0x628>
                               gameOver = true;
 8007974:	2101      	movs	r1, #1
                               presenter->goToEndScreen(1);
 8007976:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                               gameOver = true;
 8007978:	f885 16f0 	strb.w	r1, [r5, #1776]	@ 0x6f0
                               presenter->goToEndScreen(1);
 800797c:	f7ff fc3c 	bl	80071f8 <_ZN19HardScreenPresenter13goToEndScreenEi>
        visible = vis;
 8007980:	2300      	movs	r3, #0
 8007982:	f884 33ad 	strb.w	r3, [r4, #941]	@ 0x3ad
                           }
                       }
                       // Thiết lập lại trạng thái phát bóng
                       ball.setVisible(false);
                       ball.invalidate();
 8007986:	4630      	mov	r0, r6
 8007988:	f009 fa8e 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                       waitingForServe = true;
 800798c:	2301      	movs	r3, #1
 800798e:	f885 36dc 	strb.w	r3, [r5, #1756]	@ 0x6dc
                       serveDelayTicks = 60; // 1 giây với 60 FPS
                       servingPlayer = newServingPlayer;
                       if (newServingPlayer == 1) {
 8007992:	2f01      	cmp	r7, #1
                       serveDelayTicks = 60; // 1 giây với 60 FPS
 8007994:	f04f 033c 	mov.w	r3, #60	@ 0x3c
 8007998:	f9b4 1392 	ldrsh.w	r1, [r4, #914]	@ 0x392
 800799c:	f8c5 36e0 	str.w	r3, [r5, #1760]	@ 0x6e0
                       servingPlayer = newServingPlayer;
 80079a0:	f8c5 76e4 	str.w	r7, [r5, #1764]	@ 0x6e4
                       if (newServingPlayer == 1) {
 80079a4:	f205 62cc 	addw	r2, r5, #1740	@ 0x6cc
 80079a8:	d136      	bne.n	8007a18 <_ZN14HardScreenView15handleTickEventEv+0x6c0>
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 80079aa:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 80079ae:	f9b4 00f8 	ldrsh.w	r0, [r4, #248]	@ 0xf8
 80079b2:	4403      	add	r3, r0
 80079b4:	330a      	adds	r3, #10
 80079b6:	ee07 3a90 	vmov	s15, r3
 80079ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80079be:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 80079c2:	edc2 7a00 	vstr	s15, [r2]
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80079c6:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 80079ca:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80079ce:	eb02 0263 	add.w	r2, r2, r3, asr #1
 80079d2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80079d6:	eba2 0261 	sub.w	r2, r2, r1, asr #1
 80079da:	ee07 2a90 	vmov	s15, r2
                       } else {
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80079de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80079e2:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 80079e6:	edc3 7a00 	vstr	s15, [r3]
                       }
                       ball.moveTo(ballX, ballY);
 80079ea:	f205 65cc 	addw	r5, r5, #1740	@ 0x6cc
 80079ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079f2:	ed95 7a00 	vldr	s14, [r5]
 80079f6:	ee17 3a90 	vmov	r3, s15
 80079fa:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80079fe:	b21a      	sxth	r2, r3
 8007a00:	ee17 3a10 	vmov	r3, s14
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 8007a04:	4630      	mov	r0, r6
 8007a06:	b219      	sxth	r1, r3
 8007a08:	f7f9 fc81 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8007a0c:	4630      	mov	r0, r6
 8007a0e:	f009 fa4b 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8007a12:	b002      	add	sp, #8
 8007a14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007a18:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8007a1c:	f9b4 0390 	ldrsh.w	r0, [r4, #912]	@ 0x390
 8007a20:	1a1b      	subs	r3, r3, r0
 8007a22:	3b0a      	subs	r3, #10
 8007a24:	ee07 3a90 	vmov	s15, r3
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007a28:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007a2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007a30:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007a34:	edc2 7a00 	vstr	s15, [r2]
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007a38:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007a3c:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8007a40:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007a44:	eba3 0361 	sub.w	r3, r3, r1, asr #1
 8007a48:	ee07 3a90 	vmov	s15, r3
 8007a4c:	e7c7      	b.n	80079de <_ZN14HardScreenView15handleTickEventEv+0x686>
 8007a4e:	bf00      	nop
 8007a50:	08029f83 	.word	0x08029f83
 8007a54:	3fb33333 	.word	0x3fb33333
 8007a58:	bfb33333 	.word	0xbfb33333
 8007a5c:	43700000 	.word	0x43700000
 8007a60:	439f8000 	.word	0x439f8000
 8007a64:	42700000 	.word	0x42700000
 8007a68:	43350000 	.word	0x43350000
                if (ballX >319) {
 8007a6c:	ed5f 6a04 	vldr	s13, [pc, #-16]	@ 8007a60 <_ZN14HardScreenView15handleTickEventEv+0x708>
 8007a70:	eeb4 7ae6 	vcmpe.f32	s14, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007a74:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
                if (ballX >319) {
 8007a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007a7c:	edd3 7a00 	vldr	s15, [r3]
                if (ballX >319) {
 8007a80:	dd64      	ble.n	8007b4c <_ZN14HardScreenView15handleTickEventEv+0x7f4>
                    if (ballY > 60 && ballY < 181) {
 8007a82:	ed1f 7a08 	vldr	s14, [pc, #-32]	@ 8007a64 <_ZN14HardScreenView15handleTickEventEv+0x70c>
 8007a86:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007a8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a8e:	f340 80b1 	ble.w	8007bf4 <_ZN14HardScreenView15handleTickEventEv+0x89c>
 8007a92:	ed1f 7a0b 	vldr	s14, [pc, #-44]	@ 8007a68 <_ZN14HardScreenView15handleTickEventEv+0x710>
 8007a96:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a9e:	f140 80a9 	bpl.w	8007bf4 <_ZN14HardScreenView15handleTickEventEv+0x89c>
                        score1++;
 8007aa2:	f8d5 36e8 	ldr.w	r3, [r5, #1768]	@ 0x6e8
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007aa6:	4a79      	ldr	r2, [pc, #484]	@ (8007c8c <_ZN14HardScreenView15handleTickEventEv+0x934>)
                        score1++;
 8007aa8:	3301      	adds	r3, #1
 8007aaa:	f8c5 36e8 	str.w	r3, [r5, #1768]	@ 0x6e8
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007aae:	210a      	movs	r1, #10
 8007ab0:	f504 707e 	add.w	r0, r4, #1016	@ 0x3f8
 8007ab4:	f010 f8ac 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score1.invalidate();
 8007ab8:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 8007abc:	f00d fd70 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
                        if (score1 >= 11) {
 8007ac0:	f8d5 36e8 	ldr.w	r3, [r5, #1768]	@ 0x6e8
 8007ac4:	2b0a      	cmp	r3, #10
 8007ac6:	dd05      	ble.n	8007ad4 <_ZN14HardScreenView15handleTickEventEv+0x77c>
                            gameOver = true;
 8007ac8:	2101      	movs	r1, #1
                            presenter->goToEndScreen(1);
 8007aca:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 8007acc:	f885 16f0 	strb.w	r1, [r5, #1776]	@ 0x6f0
                            presenter->goToEndScreen(1);
 8007ad0:	f7ff fb92 	bl	80071f8 <_ZN19HardScreenPresenter13goToEndScreenEi>
 8007ad4:	2300      	movs	r3, #0
 8007ad6:	f884 33ad 	strb.w	r3, [r4, #941]	@ 0x3ad
                        ball.invalidate();
 8007ada:	4630      	mov	r0, r6
 8007adc:	f009 f9e4 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8007ae0:	2301      	movs	r3, #1
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8007ae2:	223c      	movs	r2, #60	@ 0x3c
                        waitingForServe = true;
 8007ae4:	f885 36dc 	strb.w	r3, [r5, #1756]	@ 0x6dc
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8007ae8:	f8c5 26e0 	str.w	r2, [r5, #1760]	@ 0x6e0
                        servingPlayer = 1; // Người chơi 1 phát bóng
 8007aec:	f8c5 36e4 	str.w	r3, [r5, #1764]	@ 0x6e4
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8007af0:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 8007af4:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8007af8:	4413      	add	r3, r2
 8007afa:	330a      	adds	r3, #10
 8007afc:	ee07 3a90 	vmov	s15, r3
 8007b00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b04:	f205 63cc 	addw	r3, r5, #1740	@ 0x6cc
 8007b08:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007b0c:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8007b10:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007b14:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007b18:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007b1c:	f9b4 2392 	ldrsh.w	r2, [r4, #914]	@ 0x392
 8007b20:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8007b24:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8007b28:	ee07 3a10 	vmov	s14, r3
 8007b2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007b30:	f505 65da 	add.w	r5, r5, #1744	@ 0x6d0
 8007b34:	ed85 7a00 	vstr	s14, [r5]
                        ball.moveTo(ballX, ballY);
 8007b38:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            ball.moveTo(ballX, ballY);
 8007b3c:	ee17 3a10 	vmov	r3, s14
 8007b40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b44:	b21a      	sxth	r2, r3
 8007b46:	ee17 3a90 	vmov	r3, s15
 8007b4a:	e75b      	b.n	8007a04 <_ZN14HardScreenView15handleTickEventEv+0x6ac>
                if (ballX <1) {
 8007b4c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007b50:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8007b54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b58:	f57f af47 	bpl.w	80079ea <_ZN14HardScreenView15handleTickEventEv+0x692>
                    if (ballY > 60 && ballY < 181) {
 8007b5c:	ed9f 7a4c 	vldr	s14, [pc, #304]	@ 8007c90 <_ZN14HardScreenView15handleTickEventEv+0x938>
 8007b60:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b68:	dd44      	ble.n	8007bf4 <_ZN14HardScreenView15handleTickEventEv+0x89c>
 8007b6a:	ed9f 7a4a 	vldr	s14, [pc, #296]	@ 8007c94 <_ZN14HardScreenView15handleTickEventEv+0x93c>
 8007b6e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b76:	d53d      	bpl.n	8007bf4 <_ZN14HardScreenView15handleTickEventEv+0x89c>
                        score2++;
 8007b78:	f8d5 36ec 	ldr.w	r3, [r5, #1772]	@ 0x6ec
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007b7c:	4a43      	ldr	r2, [pc, #268]	@ (8007c8c <_ZN14HardScreenView15handleTickEventEv+0x934>)
                        score2++;
 8007b7e:	3301      	adds	r3, #1
 8007b80:	f8c5 36ec 	str.w	r3, [r5, #1772]	@ 0x6ec
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007b84:	210a      	movs	r1, #10
 8007b86:	f504 7079 	add.w	r0, r4, #996	@ 0x3e4
 8007b8a:	f010 f841 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score2.invalidate();
 8007b8e:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8007b92:	f00d fd05 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
                        if (score2 >= 11) {
 8007b96:	f8d5 36ec 	ldr.w	r3, [r5, #1772]	@ 0x6ec
 8007b9a:	2b0a      	cmp	r3, #10
 8007b9c:	dd06      	ble.n	8007bac <_ZN14HardScreenView15handleTickEventEv+0x854>
                            gameOver = true;
 8007b9e:	2301      	movs	r3, #1
                            presenter->goToEndScreen(2);
 8007ba0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 8007ba2:	f885 36f0 	strb.w	r3, [r5, #1776]	@ 0x6f0
                            presenter->goToEndScreen(2);
 8007ba6:	2102      	movs	r1, #2
 8007ba8:	f7ff fb26 	bl	80071f8 <_ZN19HardScreenPresenter13goToEndScreenEi>
 8007bac:	2300      	movs	r3, #0
 8007bae:	f884 33ad 	strb.w	r3, [r4, #941]	@ 0x3ad
                        ball.invalidate();
 8007bb2:	4630      	mov	r0, r6
 8007bb4:	f009 f978 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8007bb8:	2301      	movs	r3, #1
 8007bba:	f885 36dc 	strb.w	r3, [r5, #1756]	@ 0x6dc
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8007bbe:	233c      	movs	r3, #60	@ 0x3c
 8007bc0:	f8c5 36e0 	str.w	r3, [r5, #1760]	@ 0x6e0
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8007bc4:	2302      	movs	r3, #2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007bc6:	f9b4 2390 	ldrsh.w	r2, [r4, #912]	@ 0x390
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8007bca:	f8c5 36e4 	str.w	r3, [r5, #1764]	@ 0x6e4
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8007bce:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8007bd2:	1a9b      	subs	r3, r3, r2
 8007bd4:	3b0a      	subs	r3, #10
 8007bd6:	ee07 3a90 	vmov	s15, r3
 8007bda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bde:	f205 63cc 	addw	r3, r5, #1740	@ 0x6cc
 8007be2:	edc3 7a00 	vstr	s15, [r3]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8007be6:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8007bea:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007bee:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8007bf2:	e791      	b.n	8007b18 <_ZN14HardScreenView15handleTickEventEv+0x7c0>
                        ballX = 1;
 8007bf4:	f205 63cc 	addw	r3, r5, #1740	@ 0x6cc
 8007bf8:	edc3 6a00 	vstr	s13, [r3]
                        ballVelX = -ballVelX;
 8007bfc:	f205 63d4 	addw	r3, r5, #1748	@ 0x6d4
 8007c00:	ed93 7a00 	vldr	s14, [r3]
 8007c04:	eeb1 7a47 	vneg.f32	s14, s14
 8007c08:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 8007c0c:	e6ed      	b.n	80079ea <_ZN14HardScreenView15handleTickEventEv+0x692>
            if (serveDelayTicks > 0) {
 8007c0e:	f8d5 36e0 	ldr.w	r3, [r5, #1760]	@ 0x6e0
 8007c12:	2b00      	cmp	r3, #0
 8007c14:	dd09      	ble.n	8007c2a <_ZN14HardScreenView15handleTickEventEv+0x8d2>
                serveDelayTicks--;
 8007c16:	3b01      	subs	r3, #1
 8007c18:	f8c5 36e0 	str.w	r3, [r5, #1760]	@ 0x6e0
                if (serveDelayTicks == 0) {
 8007c1c:	b92b      	cbnz	r3, 8007c2a <_ZN14HardScreenView15handleTickEventEv+0x8d2>
 8007c1e:	2301      	movs	r3, #1
 8007c20:	f884 33ad 	strb.w	r3, [r4, #941]	@ 0x3ad
                    ball.invalidate();
 8007c24:	4630      	mov	r0, r6
 8007c26:	f009 f93f 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8007c2a:	f8d5 36e4 	ldr.w	r3, [r5, #1764]	@ 0x6e4
 8007c2e:	2b01      	cmp	r3, #1
 8007c30:	d120      	bne.n	8007c74 <_ZN14HardScreenView15handleTickEventEv+0x91c>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8007c32:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8007c36:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007c3a:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8007c3e:	f505 61da 	add.w	r1, r5, #1744	@ 0x6d0
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007c42:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007c46:	f9b4 2392 	ldrsh.w	r2, [r4, #914]	@ 0x392
 8007c4a:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8007c4e:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8007c52:	ee07 3a90 	vmov	s15, r3
 8007c56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c5a:	edc1 7a00 	vstr	s15, [r1]
            ball.moveTo(ballX, ballY);
 8007c5e:	f505 63da 	add.w	r3, r5, #1744	@ 0x6d0
 8007c62:	ed93 7a00 	vldr	s14, [r3]
 8007c66:	f205 65cc 	addw	r5, r5, #1740	@ 0x6cc
 8007c6a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007c6e:	edd5 7a00 	vldr	s15, [r5]
 8007c72:	e763      	b.n	8007b3c <_ZN14HardScreenView15handleTickEventEv+0x7e4>
            } else if (servingPlayer == 2) {
 8007c74:	2b02      	cmp	r3, #2
 8007c76:	d1f2      	bne.n	8007c5e <_ZN14HardScreenView15handleTickEventEv+0x906>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007c78:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8007c7c:	f505 61da 	add.w	r1, r5, #1744	@ 0x6d0
 8007c80:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007c84:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8007c88:	e7db      	b.n	8007c42 <_ZN14HardScreenView15handleTickEventEv+0x8ea>
 8007c8a:	bf00      	nop
 8007c8c:	08029f83 	.word	0x08029f83
 8007c90:	42700000 	.word	0x42700000
 8007c94:	43350000 	.word	0x43350000

08007c98 <_ZN26MediumReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MediumReadyScreenPresenter() {}
 8007c98:	4770      	bx	lr

08007c9a <_ZThn4_N26MediumReadyScreenPresenterD1Ev>:
 8007c9a:	3804      	subs	r0, #4
 8007c9c:	4770      	bx	lr

08007c9e <_ZN26MediumReadyScreenPresenter10deactivateEv>:
}

void MediumReadyScreenPresenter::activate()
{

}
 8007c9e:	4770      	bx	lr

08007ca0 <_ZN26MediumReadyScreenPresenterD0Ev>:
 8007ca0:	b510      	push	{r4, lr}
 8007ca2:	2110      	movs	r1, #16
 8007ca4:	4604      	mov	r4, r0
 8007ca6:	f01f f8b5 	bl	8026e14 <_ZdlPvj>
 8007caa:	4620      	mov	r0, r4
 8007cac:	bd10      	pop	{r4, pc}

08007cae <_ZThn4_N26MediumReadyScreenPresenterD0Ev>:
 8007cae:	f1a0 0004 	sub.w	r0, r0, #4
 8007cb2:	e7f5      	b.n	8007ca0 <_ZN26MediumReadyScreenPresenterD0Ev>

08007cb4 <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>:
 8007cb4:	2200      	movs	r2, #0
 8007cb6:	6082      	str	r2, [r0, #8]
    : view(v)
 8007cb8:	4a02      	ldr	r2, [pc, #8]	@ (8007cc4 <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView+0x10>)
 8007cba:	6002      	str	r2, [r0, #0]
 8007cbc:	3218      	adds	r2, #24
 8007cbe:	6042      	str	r2, [r0, #4]
 8007cc0:	60c1      	str	r1, [r0, #12]
}
 8007cc2:	4770      	bx	lr
 8007cc4:	0802ab74 	.word	0x0802ab74

08007cc8 <_ZN21MediumReadyScreenView14tearDownScreenEv>:
}

void MediumReadyScreenView::tearDownScreen()
{
    MediumReadyScreenViewBase::tearDownScreen();
}
 8007cc8:	4770      	bx	lr
	...

08007ccc <_ZN21MediumReadyScreenViewD1Ev>:

class MediumReadyScreenView : public MediumReadyScreenViewBase
{
public:
    MediumReadyScreenView();
    virtual ~MediumReadyScreenView() {}
 8007ccc:	b510      	push	{r4, lr}
 8007cce:	4b03      	ldr	r3, [pc, #12]	@ (8007cdc <_ZN21MediumReadyScreenViewD1Ev+0x10>)
 8007cd0:	6003      	str	r3, [r0, #0]
 8007cd2:	4604      	mov	r4, r0
 8007cd4:	f7fd f9ca 	bl	800506c <_ZN25MediumReadyScreenViewBaseD1Ev>
 8007cd8:	4620      	mov	r0, r4
 8007cda:	bd10      	pop	{r4, pc}
 8007cdc:	0802abb4 	.word	0x0802abb4

08007ce0 <_ZN21MediumReadyScreenViewD0Ev>:
 8007ce0:	b510      	push	{r4, lr}
 8007ce2:	4604      	mov	r4, r0
 8007ce4:	f7ff fff2 	bl	8007ccc <_ZN21MediumReadyScreenViewD1Ev>
 8007ce8:	4620      	mov	r0, r4
 8007cea:	f241 6124 	movw	r1, #5668	@ 0x1624
 8007cee:	f01f f891 	bl	8026e14 <_ZdlPvj>
 8007cf2:	4620      	mov	r0, r4
 8007cf4:	bd10      	pop	{r4, pc}

08007cf6 <_ZN21MediumReadyScreenView15handleTickEventEv>:
void MediumReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 8007cf6:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 8007cfa:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8007cfc:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
 8007d00:	2900      	cmp	r1, #0
 8007d02:	dd07      	ble.n	8007d14 <_ZN21MediumReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8007d04:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 8007d06:	3901      	subs	r1, #1

	    }else{
	    	application().gotoMediumScreenScreenNoTransition();
	    }

}
 8007d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 8007d0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 8007d0e:	f8c2 1620 	str.w	r1, [r2, #1568]	@ 0x620
	        updateCounter(tickCounter);
 8007d12:	4718      	bx	r3
 8007d14:	f00c fba6 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007d18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoMediumScreenScreenNoTransition();
 8007d1c:	f7fb bcc4 	b.w	80036a8 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>

08007d20 <_ZN21MediumReadyScreenViewC1Ev>:
MediumReadyScreenView::MediumReadyScreenView()
 8007d20:	b510      	push	{r4, lr}
 8007d22:	4604      	mov	r4, r0
 8007d24:	f7fd f9ce 	bl	80050c4 <_ZN25MediumReadyScreenViewBaseC1Ev>
 8007d28:	4b04      	ldr	r3, [pc, #16]	@ (8007d3c <_ZN21MediumReadyScreenViewC1Ev+0x1c>)
 8007d2a:	6023      	str	r3, [r4, #0]
 8007d2c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007d30:	22b4      	movs	r2, #180	@ 0xb4
 8007d32:	f8c3 2620 	str.w	r2, [r3, #1568]	@ 0x620
}
 8007d36:	4620      	mov	r0, r4
 8007d38:	bd10      	pop	{r4, pc}
 8007d3a:	bf00      	nop
 8007d3c:	0802abb4 	.word	0x0802abb4

08007d40 <_ZN21MediumReadyScreenView11setupScreenEv>:
{
 8007d40:	b510      	push	{r4, lr}
 8007d42:	4604      	mov	r4, r0
    MediumReadyScreenViewBase::setupScreen();
 8007d44:	f7fd f990 	bl	8005068 <_ZN25MediumReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8007d48:	6823      	ldr	r3, [r4, #0]
 8007d4a:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8007d4e:	4620      	mov	r0, r4
 8007d50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007d52:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
}
 8007d56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 8007d5a:	4718      	bx	r3

08007d5c <_ZN21MediumReadyScreenView13updateCounterEi>:
void MediumReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8007d5c:	2978      	cmp	r1, #120	@ 0x78
{
 8007d5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d60:	4605      	mov	r5, r0
	    if (value > 120)
 8007d62:	dc23      	bgt.n	8007dac <_ZN21MediumReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8007d64:	293c      	cmp	r1, #60	@ 0x3c
 8007d66:	dc23      	bgt.n	8007db0 <_ZN21MediumReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8007d68:	2900      	cmp	r1, #0
 8007d6a:	bfd4      	ite	le
 8007d6c:	2400      	movle	r4, #0
 8007d6e:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007d70:	f505 774d 	add.w	r7, r5, #820	@ 0x334
 8007d74:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007d76:	f505 7652 	add.w	r6, r5, #840	@ 0x348
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007d7a:	4a0e      	ldr	r2, [pc, #56]	@ (8007db4 <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8007d7c:	210a      	movs	r1, #10
 8007d7e:	4638      	mov	r0, r7
 8007d80:	f00f ff46 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007d84:	4623      	mov	r3, r4
 8007d86:	4a0b      	ldr	r2, [pc, #44]	@ (8007db4 <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8007d88:	210a      	movs	r1, #10
 8007d8a:	4630      	mov	r0, r6
 8007d8c:	f00f ff40 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8007d90:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 8007d94:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 8007d98:	f8c5 6330 	str.w	r6, [r5, #816]	@ 0x330
 8007d9c:	f00d fc00 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8007da0:	f505 703a 	add.w	r0, r5, #744	@ 0x2e8
}
 8007da4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8007da8:	f00d bbfa 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8007dac:	2403      	movs	r4, #3
 8007dae:	e7df      	b.n	8007d70 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8007db0:	2402      	movs	r4, #2
 8007db2:	e7dd      	b.n	8007d70 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
 8007db4:	08029f83 	.word	0x08029f83

08007db8 <_ZN21MediumScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~MediumScreenPresenter() {}
 8007db8:	4770      	bx	lr

08007dba <_ZThn4_N21MediumScreenPresenterD1Ev>:
 8007dba:	3804      	subs	r0, #4
 8007dbc:	4770      	bx	lr

08007dbe <_ZN21MediumScreenPresenter10deactivateEv>:
}

void MediumScreenPresenter::deactivate()
{

}
 8007dbe:	4770      	bx	lr

08007dc0 <_ZN21MediumScreenPresenterD0Ev>:
 8007dc0:	b510      	push	{r4, lr}
 8007dc2:	2110      	movs	r1, #16
 8007dc4:	4604      	mov	r4, r0
 8007dc6:	f01f f825 	bl	8026e14 <_ZdlPvj>
 8007dca:	4620      	mov	r0, r4
 8007dcc:	bd10      	pop	{r4, pc}

08007dce <_ZThn4_N21MediumScreenPresenterD0Ev>:
 8007dce:	f1a0 0004 	sub.w	r0, r0, #4
 8007dd2:	e7f5      	b.n	8007dc0 <_ZN21MediumScreenPresenterD0Ev>

08007dd4 <_ZN21MediumScreenPresenter8activateEv>:
	model->resetGame();
 8007dd4:	6880      	ldr	r0, [r0, #8]
 8007dd6:	f000 bbad 	b.w	8008534 <_ZN5Model9resetGameEv>
	...

08007ddc <_ZN21MediumScreenPresenterC1ER16MediumScreenView>:
 8007ddc:	2200      	movs	r2, #0
 8007dde:	6082      	str	r2, [r0, #8]
    : view(v)
 8007de0:	4a02      	ldr	r2, [pc, #8]	@ (8007dec <_ZN21MediumScreenPresenterC1ER16MediumScreenView+0x10>)
 8007de2:	6002      	str	r2, [r0, #0]
 8007de4:	3218      	adds	r2, #24
 8007de6:	6042      	str	r2, [r0, #4]
 8007de8:	60c1      	str	r1, [r0, #12]
}
 8007dea:	4770      	bx	lr
 8007dec:	0802abec 	.word	0x0802abec

08007df0 <_ZN21MediumScreenPresenter13goToEndScreenEi>:
void MediumScreenPresenter::handleTickEvent()
{

}
void MediumScreenPresenter::goToEndScreen(int winner){
 8007df0:	b508      	push	{r3, lr}
	model->setWinner(winner);
 8007df2:	6880      	ldr	r0, [r0, #8]
 8007df4:	f000 fb8a 	bl	800850c <_ZN5Model9setWinnerEi>
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007df8:	f00c fb34 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007dfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8007e00:	f7fb bc92 	b.w	8003728 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08007e04 <_ZN16MediumScreenView14tearDownScreenEv>:
}

void MediumScreenView::tearDownScreen()
{
    MediumScreenViewBase::tearDownScreen();
}
 8007e04:	4770      	bx	lr
	...

08007e08 <_ZN16MediumScreenViewD1Ev>:

class MediumScreenView : public MediumScreenViewBase
{
public:
    MediumScreenView();
    virtual ~MediumScreenView() {}
 8007e08:	b510      	push	{r4, lr}
 8007e0a:	4b03      	ldr	r3, [pc, #12]	@ (8007e18 <_ZN16MediumScreenViewD1Ev+0x10>)
 8007e0c:	6003      	str	r3, [r0, #0]
 8007e0e:	4604      	mov	r4, r0
 8007e10:	f7fd fbe8 	bl	80055e4 <_ZN20MediumScreenViewBaseD1Ev>
 8007e14:	4620      	mov	r0, r4
 8007e16:	bd10      	pop	{r4, pc}
 8007e18:	0802ac2c 	.word	0x0802ac2c

08007e1c <_ZN16MediumScreenViewD0Ev>:
 8007e1c:	b510      	push	{r4, lr}
 8007e1e:	4604      	mov	r4, r0
 8007e20:	f7ff fff2 	bl	8007e08 <_ZN16MediumScreenViewD1Ev>
 8007e24:	4620      	mov	r0, r4
 8007e26:	f241 6144 	movw	r1, #5700	@ 0x1644
 8007e2a:	f01e fff3 	bl	8026e14 <_ZdlPvj>
 8007e2e:	4620      	mov	r0, r4
 8007e30:	bd10      	pop	{r4, pc}
	...

08007e34 <_ZN16MediumScreenViewC1Ev>:
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8007e34:	b510      	push	{r4, lr}
 8007e36:	4604      	mov	r4, r0
								  score1(0), score2(0),gameOver(false)
 8007e38:	f7fd fbee 	bl	8005618 <_ZN20MediumScreenViewBaseC1Ev>
 8007e3c:	4b10      	ldr	r3, [pc, #64]	@ (8007e80 <_ZN16MediumScreenViewC1Ev+0x4c>)
 8007e3e:	6023      	str	r3, [r4, #0]
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8007e40:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007e44:	f203 621c 	addw	r2, r3, #1564	@ 0x61c
 8007e48:	490e      	ldr	r1, [pc, #56]	@ (8007e84 <_ZN16MediumScreenViewC1Ev+0x50>)
 8007e4a:	6011      	str	r1, [r2, #0]
 8007e4c:	f504 52b1 	add.w	r2, r4, #5664	@ 0x1620
 8007e50:	490d      	ldr	r1, [pc, #52]	@ (8007e88 <_ZN16MediumScreenViewC1Ev+0x54>)
 8007e52:	6011      	str	r1, [r2, #0]
 8007e54:	f203 6124 	addw	r1, r3, #1572	@ 0x624
 8007e58:	4a0c      	ldr	r2, [pc, #48]	@ (8007e8c <_ZN16MediumScreenViewC1Ev+0x58>)
 8007e5a:	600a      	str	r2, [r1, #0]
 8007e5c:	f503 61c5 	add.w	r1, r3, #1576	@ 0x628
}
 8007e60:	4620      	mov	r0, r4
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.2f), ballVelY(1.2f),
 8007e62:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8007e64:	2200      	movs	r2, #0
 8007e66:	f883 262c 	strb.w	r2, [r3, #1580]	@ 0x62c
 8007e6a:	f8c3 2630 	str.w	r2, [r3, #1584]	@ 0x630
 8007e6e:	f8c3 2634 	str.w	r2, [r3, #1588]	@ 0x634
								  score1(0), score2(0),gameOver(false)
 8007e72:	f8c3 2638 	str.w	r2, [r3, #1592]	@ 0x638
 8007e76:	f8c3 263c 	str.w	r2, [r3, #1596]	@ 0x63c
 8007e7a:	f883 2640 	strb.w	r2, [r3, #1600]	@ 0x640
}
 8007e7e:	bd10      	pop	{r4, pc}
 8007e80:	0802ac2c 	.word	0x0802ac2c
 8007e84:	43200000 	.word	0x43200000
 8007e88:	42f00000 	.word	0x42f00000
 8007e8c:	3f99999a 	.word	0x3f99999a

08007e90 <_ZN16MediumScreenView11setupScreenEv>:
{
 8007e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e94:	4605      	mov	r5, r0
    score1 = 0;
 8007e96:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 8007e9a:	f204 671c 	addw	r7, r4, #1564	@ 0x61c
    MediumScreenViewBase::setupScreen();
 8007e9e:	f7fd fb9f 	bl	80055e0 <_ZN20MediumScreenViewBase11setupScreenEv>
	ballY = 120;
 8007ea2:	f505 58b1 	add.w	r8, r5, #5664	@ 0x1620
    score1 = 0;
 8007ea6:	2300      	movs	r3, #0
	ballX = 160;
 8007ea8:	4a25      	ldr	r2, [pc, #148]	@ (8007f40 <_ZN16MediumScreenView11setupScreenEv+0xb0>)
    score1 = 0;
 8007eaa:	f8c4 3638 	str.w	r3, [r4, #1592]	@ 0x638
	score2 = 0;
 8007eae:	f8c4 363c 	str.w	r3, [r4, #1596]	@ 0x63c
	gameOver = false;
 8007eb2:	f884 3640 	strb.w	r3, [r4, #1600]	@ 0x640
	ballVelX = 1.2f;
 8007eb6:	f204 6124 	addw	r1, r4, #1572	@ 0x624
	ballX = 160;
 8007eba:	603a      	str	r2, [r7, #0]
	ballY = 120;
 8007ebc:	4a21      	ldr	r2, [pc, #132]	@ (8007f44 <_ZN16MediumScreenView11setupScreenEv+0xb4>)
 8007ebe:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.2f;
 8007ec2:	4a21      	ldr	r2, [pc, #132]	@ (8007f48 <_ZN16MediumScreenView11setupScreenEv+0xb8>)
 8007ec4:	600a      	str	r2, [r1, #0]
	ballVelY = 1.2f;
 8007ec6:	f504 61c5 	add.w	r1, r4, #1576	@ 0x628
	ball.invalidate();
 8007eca:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
	ballVelY = 1.2f;
 8007ece:	600a      	str	r2, [r1, #0]
	ball.invalidate();
 8007ed0:	4630      	mov	r0, r6
	waitingForServe = false;
 8007ed2:	f884 362c 	strb.w	r3, [r4, #1580]	@ 0x62c
	serveDelayTicks = 0;
 8007ed6:	f8c4 3630 	str.w	r3, [r4, #1584]	@ 0x630
	servingPlayer = 0;
 8007eda:	f8c4 3634 	str.w	r3, [r4, #1588]	@ 0x634
	ball.invalidate();
 8007ede:	f008 ffe3 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 8007ee2:	ed98 7a00 	vldr	s14, [r8]
 8007ee6:	edd7 7a00 	vldr	s15, [r7]
 8007eea:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007eee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ef2:	ee17 3a10 	vmov	r3, s14
 8007ef6:	b21a      	sxth	r2, r3
 8007ef8:	ee17 3a90 	vmov	r3, s15
 8007efc:	4630      	mov	r0, r6
 8007efe:	b219      	sxth	r1, r3
 8007f00:	f7f9 fa05 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 8007f04:	4630      	mov	r0, r6
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007f06:	4e11      	ldr	r6, [pc, #68]	@ (8007f4c <_ZN16MediumScreenView11setupScreenEv+0xbc>)
	ball.invalidate();
 8007f08:	f008 ffce 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007f0c:	f8d4 3638 	ldr.w	r3, [r4, #1592]	@ 0x638
 8007f10:	4632      	mov	r2, r6
 8007f12:	210a      	movs	r1, #10
 8007f14:	f505 7052 	add.w	r0, r5, #840	@ 0x348
 8007f18:	f00f fe7a 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score1.invalidate();
 8007f1c:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8007f20:	f00d fb3e 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007f24:	f8d4 363c 	ldr.w	r3, [r4, #1596]	@ 0x63c
 8007f28:	4632      	mov	r2, r6
 8007f2a:	f505 704d 	add.w	r0, r5, #820	@ 0x334
 8007f2e:	210a      	movs	r1, #10
 8007f30:	f00f fe6e 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score2.invalidate();
 8007f34:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8007f38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	MediumScreenViewBase::score2.invalidate();
 8007f3c:	f00d bb30 	b.w	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007f40:	43200000 	.word	0x43200000
 8007f44:	42f00000 	.word	0x42f00000
 8007f48:	3f99999a 	.word	0x3f99999a
 8007f4c:	08029f83 	.word	0x08029f83

08007f50 <_ZN16MediumScreenView15handleTickEventEv>:

void MediumScreenView::handleTickEvent()
{
 8007f50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}

    if (gameOver) {
 8007f54:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 8007f58:	4604      	mov	r4, r0
    if (gameOver) {
 8007f5a:	f895 3640 	ldrb.w	r3, [r5, #1600]	@ 0x640
 8007f5e:	2b00      	cmp	r3, #0
 8007f60:	f040 8288 	bne.w	8008474 <_ZN16MediumScreenView15handleTickEventEv+0x524>
        return; // Không xử lý nếu trò chơi kết thúc
    }

    JoystickCommand_t command;
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8007f64:	4fdb      	ldr	r7, [pc, #876]	@ (80082d4 <_ZN16MediumScreenView15handleTickEventEv+0x384>)
 8007f66:	6838      	ldr	r0, [r7, #0]
 8007f68:	2300      	movs	r3, #0
 8007f6a:	461a      	mov	r2, r3
 8007f6c:	f10d 0107 	add.w	r1, sp, #7
 8007f70:	f003 fdf7 	bl	800bb62 <osMessageQueueGet>
 8007f74:	2800      	cmp	r0, #0
 8007f76:	f000 8130 	beq.w	80081da <_ZN16MediumScreenView15handleTickEventEv+0x28a>
				break;
        }
    }

    // Cập nhật bóng nếu không chờ phát
        if (!waitingForServe) {
 8007f7a:	f895 362c 	ldrb.w	r3, [r5, #1580]	@ 0x62c
 8007f7e:	f504 57b1 	add.w	r7, r4, #5664	@ 0x1620
 8007f82:	f504 7636 	add.w	r6, r4, #728	@ 0x2d8
 8007f86:	2b00      	cmp	r3, #0
 8007f88:	f040 8277 	bne.w	800847a <_ZN16MediumScreenView15handleTickEventEv+0x52a>
            ball.invalidate();
 8007f8c:	4630      	mov	r0, r6
 8007f8e:	f008 ff8b 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8007f92:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8007f96:	ed93 6a00 	vldr	s12, [r3]
 8007f9a:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 8007f9e:	edd3 6a00 	vldr	s13, [r3]
 8007fa2:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 8007fa6:	f505 62c5 	add.w	r2, r5, #1576	@ 0x628
            ballX += ballVelX;
 8007faa:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 8007fae:	edd2 7a00 	vldr	s15, [r2]
 8007fb2:	ed97 7a00 	vldr	s14, [r7]
 8007fb6:	ee37 7a87 	vadd.f32	s14, s15, s14

            // Xử lý va chạm với cạnh trên/dưới
            if (ballY < 0) {
 8007fba:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8007fbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 8007fc2:	ed87 7a00 	vstr	s14, [r7]
            if (ballY < 0) {
 8007fc6:	f140 81c9 	bpl.w	800835c <_ZN16MediumScreenView15handleTickEventEv+0x40c>
                ballY = 0;
 8007fca:	2300      	movs	r3, #0
 8007fcc:	603b      	str	r3, [r7, #0]
                ballVelY = -ballVelY;
            } else if (ballY + ball.getHeight() > 240) {
                ballY = 240 - ball.getHeight();
                ballVelY = -ballVelY;
 8007fce:	eef1 7a67 	vneg.f32	s15, s15
 8007fd2:	edc2 7a00 	vstr	s15, [r2]
        return rect.x;
 8007fd6:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            }

            // Xử lý va chạm với paddle1 (bên trái)
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8007fda:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 8007fde:	4413      	add	r3, r2
 8007fe0:	ee07 3a90 	vmov	s15, r3
 8007fe4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
                ballX >= paddle1.getX() &&
                ballY + ball.getHeight() >= paddle1.getY() &&
 8007fe8:	edd7 7a00 	vldr	s15, [r7]
 8007fec:	eef4 6ac7 	vcmpe.f32	s13, s14
 8007ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ff4:	d831      	bhi.n	800805a <_ZN16MediumScreenView15handleTickEventEv+0x10a>
                ballX >= paddle1.getX() &&
 8007ff6:	ee05 2a90 	vmov	s11, r2
 8007ffa:	eef8 5ae5 	vcvt.f32.s32	s11, s11
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8007ffe:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008006:	db28      	blt.n	800805a <_ZN16MediumScreenView15handleTickEventEv+0x10a>
                ballY + ball.getHeight() >= paddle1.getY() &&
 8008008:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 800800c:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8008010:	ee06 3a90 	vmov	s13, r3
 8008014:	ee05 2a90 	vmov	s11, r2
 8008018:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800801c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008020:	ee76 6aa7 	vadd.f32	s13, s13, s15
                ballX >= paddle1.getX() &&
 8008024:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800802c:	db15      	blt.n	800805a <_ZN16MediumScreenView15handleTickEventEv+0x10a>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 800802e:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008032:	4413      	add	r3, r2
 8008034:	ee06 3a90 	vmov	s13, r3
 8008038:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 800803c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8008040:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008044:	db09      	blt.n	800805a <_ZN16MediumScreenView15handleTickEventEv+0x10a>
                ballX = paddle1.getX() + paddle1.getWidth();
 8008046:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 800804a:	ed83 7a00 	vstr	s14, [r3]
                ballVelX = -ballVelX;
 800804e:	eeb1 6a46 	vneg.f32	s12, s12
 8008052:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008056:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 800805a:	f9b4 02e0 	ldrsh.w	r0, [r4, #736]	@ 0x2e0
        return rect.x;
 800805e:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            }

            // Xử lý va chạm với paddle2 (bên phải)
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008062:	ee07 0a10 	vmov	s14, r0
 8008066:	f205 611c 	addw	r1, r5, #1564	@ 0x61c
 800806a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800806e:	ed91 7a00 	vldr	s14, [r1]
 8008072:	ee76 6a87 	vadd.f32	s13, s13, s14
 8008076:	ee07 3a10 	vmov	s14, r3
 800807a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
                ballY + ball.getHeight() >= paddle2.getY() &&
 800807e:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008086:	db39      	blt.n	80080fc <_ZN16MediumScreenView15handleTickEventEv+0x1ac>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8008088:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 800808c:	441a      	add	r2, r3
 800808e:	ee07 2a10 	vmov	s14, r2
 8008092:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008096:	eef4 6ac7 	vcmpe.f32	s13, s14
 800809a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800809e:	d82d      	bhi.n	80080fc <_ZN16MediumScreenView15handleTickEventEv+0x1ac>
                ballY + ball.getHeight() >= paddle2.getY() &&
 80080a0:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
        return rect.y;
 80080a4:	f9b4 c122 	ldrsh.w	ip, [r4, #290]	@ 0x122
 80080a8:	ee07 2a10 	vmov	s14, r2
 80080ac:	ee06 ca90 	vmov	s13, ip
 80080b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80080b4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80080b8:	ee37 7a27 	vadd.f32	s14, s14, s15
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 80080bc:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80080c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080c4:	db1a      	blt.n	80080fc <_ZN16MediumScreenView15handleTickEventEv+0x1ac>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 80080c6:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 80080ca:	4462      	add	r2, ip
 80080cc:	ee07 2a10 	vmov	s14, r2
 80080d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 80080d4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80080d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080dc:	db0e      	blt.n	80080fc <_ZN16MediumScreenView15handleTickEventEv+0x1ac>
                ballX = paddle2.getX() - ball.getWidth();
 80080de:	1a1b      	subs	r3, r3, r0
 80080e0:	ee07 3a10 	vmov	s14, r3
 80080e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 80080e8:	f205 6324 	addw	r3, r5, #1572	@ 0x624
                ballX = paddle2.getX() - ball.getWidth();
 80080ec:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 80080f0:	ed93 7a00 	vldr	s14, [r3]
 80080f4:	eeb1 7a47 	vneg.f32	s14, s14
 80080f8:	ed83 7a00 	vstr	s14, [r3]
            }

            // Xử lý va chạm với bên trái (ballX < 1)
                if (ballX >319) {
 80080fc:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 8008100:	edd3 6a00 	vldr	s13, [r3]
 8008104:	ed9f 7a74 	vldr	s14, [pc, #464]	@ 80082d8 <_ZN16MediumScreenView15handleTickEventEv+0x388>
 8008108:	eef4 6ac7 	vcmpe.f32	s13, s14
 800810c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008110:	f340 813d 	ble.w	800838e <_ZN16MediumScreenView15handleTickEventEv+0x43e>
                    if (ballY > 60 && ballY < 181) {
 8008114:	eddf 6a75 	vldr	s13, [pc, #468]	@ 80082ec <_ZN16MediumScreenView15handleTickEventEv+0x39c>
 8008118:	eef4 7ae6 	vcmpe.f32	s15, s13
 800811c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008120:	f340 8188 	ble.w	8008434 <_ZN16MediumScreenView15handleTickEventEv+0x4e4>
 8008124:	eddf 6a72 	vldr	s13, [pc, #456]	@ 80082f0 <_ZN16MediumScreenView15handleTickEventEv+0x3a0>
 8008128:	eef4 7ae6 	vcmpe.f32	s15, s13
 800812c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008130:	f140 8180 	bpl.w	8008434 <_ZN16MediumScreenView15handleTickEventEv+0x4e4>
                        // Bóng trong vùng goal2, cộng điểm cho người chơi 1
                        score1++;
 8008134:	f8d5 3638 	ldr.w	r3, [r5, #1592]	@ 0x638
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008138:	4a68      	ldr	r2, [pc, #416]	@ (80082dc <_ZN16MediumScreenView15handleTickEventEv+0x38c>)
                        score1++;
 800813a:	3301      	adds	r3, #1
 800813c:	f8c5 3638 	str.w	r3, [r5, #1592]	@ 0x638
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008140:	210a      	movs	r1, #10
 8008142:	f504 7052 	add.w	r0, r4, #840	@ 0x348
 8008146:	f00f fd63 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score1.invalidate();
 800814a:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 800814e:	f00d fa27 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>

                        if (score1 >= 11) {
 8008152:	f8d5 3638 	ldr.w	r3, [r5, #1592]	@ 0x638
 8008156:	2b0a      	cmp	r3, #10
 8008158:	dd05      	ble.n	8008166 <_ZN16MediumScreenView15handleTickEventEv+0x216>
                            gameOver = true;
 800815a:	2101      	movs	r1, #1
                            presenter->goToEndScreen(1);
 800815c:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 800815e:	f885 1640 	strb.w	r1, [r5, #1600]	@ 0x640
                            presenter->goToEndScreen(1);
 8008162:	f7ff fe45 	bl	8007df0 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 8008166:	2300      	movs	r3, #0
 8008168:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        }
                        ball.setVisible(false);
                        ball.invalidate();
 800816c:	4630      	mov	r0, r6
 800816e:	f008 fe9b 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 8008172:	2301      	movs	r3, #1
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8008174:	223c      	movs	r2, #60	@ 0x3c
                        waitingForServe = true;
 8008176:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 800817a:	f8c5 2630 	str.w	r2, [r5, #1584]	@ 0x630
                        servingPlayer = 1; // Người chơi 1 phát bóng
 800817e:	f8c5 3634 	str.w	r3, [r5, #1588]	@ 0x634
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8008182:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 8008186:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 800818a:	4413      	add	r3, r2
 800818c:	330a      	adds	r3, #10
 800818e:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008192:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8008196:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800819a:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800819e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80081a2:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 80081a6:	edc5 7a00 	vstr	s15, [r5]
                        ball.invalidate();
                        waitingForServe = true;
                        serveDelayTicks = 60; // 1 giây với 60 FPS
                        servingPlayer = 2; // Người chơi 2 phát bóng
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 80081aa:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80081ae:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 80081b2:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80081b6:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 80081ba:	ee07 3a10 	vmov	s14, r3
 80081be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80081c2:	ed87 7a00 	vstr	s14, [r7]
                        ball.moveTo(ballX, ballY);
 80081c6:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            if (servingPlayer == 1) {
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
            } else if (servingPlayer == 2) {
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
            }
            ball.moveTo(ballX, ballY);
 80081ca:	ee17 3a10 	vmov	r3, s14
 80081ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081d2:	b21a      	sxth	r2, r3
 80081d4:	ee17 3a90 	vmov	r3, s15
 80081d8:	e145      	b.n	8008466 <_ZN16MediumScreenView15handleTickEventEv+0x516>
        switch (command) {
 80081da:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80081de:	2b05      	cmp	r3, #5
 80081e0:	f63f aec1 	bhi.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
 80081e4:	e8df f003 	tbb	[pc, r3]
 80081e8:	37241c03 	.word	0x37241c03
 80081ec:	863f      	.short	0x863f
        return rect.y;
 80081ee:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY=paddle1.getY()+2;
 80081f2:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 80081f4:	b236      	sxth	r6, r6
 80081f6:	2ec6      	cmp	r6, #198	@ 0xc6
 80081f8:	bfa8      	it	ge
 80081fa:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 80081fc:	429e      	cmp	r6, r3
 80081fe:	f43f aeb2 	beq.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
						paddle1.invalidate();
 8008202:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 8008206:	4640      	mov	r0, r8
 8008208:	f00d f9ca 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 800820c:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8008210:	4632      	mov	r2, r6
						paddle2.moveTo(paddle2.getX(), newY);
 8008212:	4640      	mov	r0, r8
 8008214:	f7f9 f87b 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8008218:	4640      	mov	r0, r8
 800821a:	f00d f9c1 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800821e:	e6a2      	b.n	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
 8008220:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 8008224:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8008226:	b236      	sxth	r6, r6
 8008228:	2e02      	cmp	r6, #2
 800822a:	bfb8      	it	lt
 800822c:	2602      	movlt	r6, #2
 800822e:	e7e5      	b.n	80081fc <_ZN16MediumScreenView15handleTickEventEv+0x2ac>
 8008230:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 8008234:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8008236:	b236      	sxth	r6, r6
 8008238:	2ec6      	cmp	r6, #198	@ 0xc6
 800823a:	bfa8      	it	ge
 800823c:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 800823e:	429e      	cmp	r6, r3
 8008240:	f43f ae91 	beq.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
						paddle2.invalidate();
 8008244:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8008248:	4640      	mov	r0, r8
 800824a:	f00d f9a9 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 800824e:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8008252:	4632      	mov	r2, r6
 8008254:	e7dd      	b.n	8008212 <_ZN16MediumScreenView15handleTickEventEv+0x2c2>
 8008256:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 800825a:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 800825c:	b236      	sxth	r6, r6
 800825e:	2e02      	cmp	r6, #2
 8008260:	bfb8      	it	lt
 8008262:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008264:	e7eb      	b.n	800823e <_ZN16MediumScreenView15handleTickEventEv+0x2ee>
				if (waitingForServe && servingPlayer == 1) {
 8008266:	f895 362c 	ldrb.w	r3, [r5, #1580]	@ 0x62c
 800826a:	2b00      	cmp	r3, #0
 800826c:	f43f ae7b 	beq.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
 8008270:	f8d5 1634 	ldr.w	r1, [r5, #1588]	@ 0x634
 8008274:	2901      	cmp	r1, #1
 8008276:	f47f ae76 	bne.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
					ballVelX = 1.2f; // Phát bóng sang phải
 800827a:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 80082e4 <_ZN16MediumScreenView15handleTickEventEv+0x394>
					waitingForServe = false;
 800827e:	2300      	movs	r3, #0
 8008280:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
					ballVelX = 1.2f; // Phát bóng sang phải
 8008284:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008288:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle1.getY() + paddle1.getHeight()/2 > ballY) ? -1.2f : 1.2f;
 800828c:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008290:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008294:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8008298:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800829c:	ee07 3a90 	vmov	s15, r3
 80082a0:	f504 53b1 	add.w	r3, r4, #5664	@ 0x1620
 80082a4:	edd3 6a00 	vldr	s13, [r3]
 80082a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80082ac:	f505 63c5 	add.w	r3, r5, #1576	@ 0x628
 80082b0:	eef4 7ae6 	vcmpe.f32	s15, s13
 80082b4:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 80082e0 <_ZN16MediumScreenView15handleTickEventEv+0x390>
 80082b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082bc:	bfd8      	it	le
 80082be:	eef0 7a47 	vmovle.f32	s15, s14
 80082c2:	edc3 7a00 	vstr	s15, [r3]
        visible = vis;
 80082c6:	f884 12fd 	strb.w	r1, [r4, #765]	@ 0x2fd
					ball.invalidate();
 80082ca:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 80082ce:	f008 fdeb 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 80082d2:	e648      	b.n	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
 80082d4:	20002dc0 	.word	0x20002dc0
 80082d8:	439f8000 	.word	0x439f8000
 80082dc:	08029f83 	.word	0x08029f83
 80082e0:	bf99999a 	.word	0xbf99999a
 80082e4:	3f99999a 	.word	0x3f99999a
 80082e8:	43700000 	.word	0x43700000
 80082ec:	42700000 	.word	0x42700000
 80082f0:	43350000 	.word	0x43350000
				if (waitingForServe && servingPlayer == 2) {
 80082f4:	f895 362c 	ldrb.w	r3, [r5, #1580]	@ 0x62c
 80082f8:	2b00      	cmp	r3, #0
 80082fa:	f43f ae34 	beq.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
 80082fe:	f8d5 3634 	ldr.w	r3, [r5, #1588]	@ 0x634
 8008302:	2b02      	cmp	r3, #2
 8008304:	f47f ae2f 	bne.w	8007f66 <_ZN16MediumScreenView15handleTickEventEv+0x16>
					ballVelX = -1.2f; // Phát bóng sang trái
 8008308:	ed1f 7a0b 	vldr	s14, [pc, #-44]	@ 80082e0 <_ZN16MediumScreenView15handleTickEventEv+0x390>
					waitingForServe = false;
 800830c:	2300      	movs	r3, #0
 800830e:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
					ballVelX = -1.2f; // Phát bóng sang trái
 8008312:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008316:	ed83 7a00 	vstr	s14, [r3]
					ballVelY = (paddle2.getY() + paddle2.getHeight()/2 > ballY) ? -1.2f : 1.2f;
 800831a:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 800831e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008322:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8008326:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800832a:	ee07 3a90 	vmov	s15, r3
 800832e:	f504 53b1 	add.w	r3, r4, #5664	@ 0x1620
 8008332:	edd3 6a00 	vldr	s13, [r3]
 8008336:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800833a:	f505 63c5 	add.w	r3, r5, #1576	@ 0x628
 800833e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008342:	ed5f 7a18 	vldr	s15, [pc, #-96]	@ 80082e4 <_ZN16MediumScreenView15handleTickEventEv+0x394>
 8008346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800834a:	bfd8      	it	le
 800834c:	eeb0 7a67 	vmovle.f32	s14, s15
 8008350:	ed83 7a00 	vstr	s14, [r3]
 8008354:	2301      	movs	r3, #1
 8008356:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
 800835a:	e7b6      	b.n	80082ca <_ZN16MediumScreenView15handleTickEventEv+0x37a>
        return rect.height;
 800835c:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
            } else if (ballY + ball.getHeight() > 240) {
 8008360:	ee05 3a90 	vmov	s11, r3
 8008364:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008368:	ee35 7a87 	vadd.f32	s14, s11, s14
 800836c:	ed5f 5a22 	vldr	s11, [pc, #-136]	@ 80082e8 <_ZN16MediumScreenView15handleTickEventEv+0x398>
 8008370:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8008374:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008378:	f77f ae2d 	ble.w	8007fd6 <_ZN16MediumScreenView15handleTickEventEv+0x86>
                ballY = 240 - ball.getHeight();
 800837c:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8008380:	ee07 3a10 	vmov	s14, r3
 8008384:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008388:	ed87 7a00 	vstr	s14, [r7]
 800838c:	e61f      	b.n	8007fce <_ZN16MediumScreenView15handleTickEventEv+0x7e>
                if (ballX <1) {
 800838e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8008392:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800839a:	d557      	bpl.n	800844c <_ZN16MediumScreenView15handleTickEventEv+0x4fc>
                    if (ballY > 60 && ballY < 181) {
 800839c:	ed5f 6a2d 	vldr	s13, [pc, #-180]	@ 80082ec <_ZN16MediumScreenView15handleTickEventEv+0x39c>
 80083a0:	eef4 7ae6 	vcmpe.f32	s15, s13
 80083a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80083a8:	dd44      	ble.n	8008434 <_ZN16MediumScreenView15handleTickEventEv+0x4e4>
 80083aa:	ed5f 6a2f 	vldr	s13, [pc, #-188]	@ 80082f0 <_ZN16MediumScreenView15handleTickEventEv+0x3a0>
 80083ae:	eef4 7ae6 	vcmpe.f32	s15, s13
 80083b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80083b6:	d53d      	bpl.n	8008434 <_ZN16MediumScreenView15handleTickEventEv+0x4e4>
                        score2++;
 80083b8:	f8d5 363c 	ldr.w	r3, [r5, #1596]	@ 0x63c
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 80083bc:	4a4b      	ldr	r2, [pc, #300]	@ (80084ec <_ZN16MediumScreenView15handleTickEventEv+0x59c>)
                        score2++;
 80083be:	3301      	adds	r3, #1
 80083c0:	f8c5 363c 	str.w	r3, [r5, #1596]	@ 0x63c
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 80083c4:	210a      	movs	r1, #10
 80083c6:	f504 704d 	add.w	r0, r4, #820	@ 0x334
 80083ca:	f00f fc21 	bl	8017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score2.invalidate();
 80083ce:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 80083d2:	f00d f8e5 	bl	80155a0 <_ZNK8touchgfx8Drawable10invalidateEv>
                        if (score2 >= 11) {
 80083d6:	f8d5 363c 	ldr.w	r3, [r5, #1596]	@ 0x63c
 80083da:	2b0a      	cmp	r3, #10
 80083dc:	dd06      	ble.n	80083ec <_ZN16MediumScreenView15handleTickEventEv+0x49c>
                            gameOver = true;
 80083de:	2301      	movs	r3, #1
                            presenter->goToEndScreen(2);
 80083e0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 80083e2:	f885 3640 	strb.w	r3, [r5, #1600]	@ 0x640
                            presenter->goToEndScreen(2);
 80083e6:	2102      	movs	r1, #2
 80083e8:	f7ff fd02 	bl	8007df0 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 80083ec:	2300      	movs	r3, #0
 80083ee:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        ball.invalidate();
 80083f2:	4630      	mov	r0, r6
 80083f4:	f008 fd58 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        waitingForServe = true;
 80083f8:	2301      	movs	r3, #1
 80083fa:	f885 362c 	strb.w	r3, [r5, #1580]	@ 0x62c
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 80083fe:	233c      	movs	r3, #60	@ 0x3c
 8008400:	f8c5 3630 	str.w	r3, [r5, #1584]	@ 0x630
                        servingPlayer = 2; // Người chơi 2 phát bóng
 8008404:	2302      	movs	r3, #2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8008406:	f9b4 22e0 	ldrsh.w	r2, [r4, #736]	@ 0x2e0
                        servingPlayer = 2; // Người chơi 2 phát bóng
 800840a:	f8c5 3634 	str.w	r3, [r5, #1588]	@ 0x634
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800840e:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8008412:	1a9b      	subs	r3, r3, r2
 8008414:	3b0a      	subs	r3, #10
 8008416:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800841a:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800841e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008422:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8008426:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800842a:	edc5 7a00 	vstr	s15, [r5]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800842e:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8008432:	e6ba      	b.n	80081aa <_ZN16MediumScreenView15handleTickEventEv+0x25a>
                        ballX = 1;
 8008434:	f205 631c 	addw	r3, r5, #1564	@ 0x61c
 8008438:	ed83 7a00 	vstr	s14, [r3]
                        ballVelX = -ballVelX;
 800843c:	f205 6324 	addw	r3, r5, #1572	@ 0x624
 8008440:	ed93 7a00 	vldr	s14, [r3]
 8008444:	eeb1 7a47 	vneg.f32	s14, s14
 8008448:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 800844c:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
 8008450:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008454:	ed95 7a00 	vldr	s14, [r5]
 8008458:	ee17 3a90 	vmov	r3, s15
 800845c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008460:	b21a      	sxth	r2, r3
 8008462:	ee17 3a10 	vmov	r3, s14
            ball.moveTo(ballX, ballY);
 8008466:	4630      	mov	r0, r6
 8008468:	b219      	sxth	r1, r3
 800846a:	f7f8 ff50 	bl	800130e <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 800846e:	4630      	mov	r0, r6
 8008470:	f008 fd1a 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        }
}
 8008474:	b002      	add	sp, #8
 8008476:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (serveDelayTicks > 0) {
 800847a:	f8d5 3630 	ldr.w	r3, [r5, #1584]	@ 0x630
 800847e:	2b00      	cmp	r3, #0
 8008480:	dd09      	ble.n	8008496 <_ZN16MediumScreenView15handleTickEventEv+0x546>
                serveDelayTicks--;
 8008482:	3b01      	subs	r3, #1
 8008484:	f8c5 3630 	str.w	r3, [r5, #1584]	@ 0x630
                if (serveDelayTicks == 0) {
 8008488:	b92b      	cbnz	r3, 8008496 <_ZN16MediumScreenView15handleTickEventEv+0x546>
 800848a:	2301      	movs	r3, #1
 800848c:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                    ball.invalidate();
 8008490:	4630      	mov	r0, r6
 8008492:	f008 fd09 	bl	8010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 8008496:	f8d5 3634 	ldr.w	r3, [r5, #1588]	@ 0x634
 800849a:	2b01      	cmp	r3, #1
 800849c:	d11c      	bne.n	80084d8 <_ZN16MediumScreenView15handleTickEventEv+0x588>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 800849e:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 80084a2:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80084a6:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 80084aa:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80084ae:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 80084b2:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80084b6:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 80084ba:	ee07 3a90 	vmov	s15, r3
 80084be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084c2:	edc7 7a00 	vstr	s15, [r7]
            ball.moveTo(ballX, ballY);
 80084c6:	ed97 7a00 	vldr	s14, [r7]
 80084ca:	f205 651c 	addw	r5, r5, #1564	@ 0x61c
 80084ce:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80084d2:	edd5 7a00 	vldr	s15, [r5]
 80084d6:	e678      	b.n	80081ca <_ZN16MediumScreenView15handleTickEventEv+0x27a>
            } else if (servingPlayer == 2) {
 80084d8:	2b02      	cmp	r3, #2
 80084da:	d1f4      	bne.n	80084c6 <_ZN16MediumScreenView15handleTickEventEv+0x576>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 80084dc:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 80084e0:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80084e4:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 80084e8:	e7df      	b.n	80084aa <_ZN16MediumScreenView15handleTickEventEv+0x55a>
 80084ea:	bf00      	nop
 80084ec:	08029f83 	.word	0x08029f83

080084f0 <_ZN5ModelC1Ev>:

#include <cstring>
#include <cstdio>

ModelListener* Model::staticListener = nullptr;
Model::Model() : modelListener(0), winner(0), player1Score(0), player2Score(0), gameOver(false)
 80084f0:	2200      	movs	r2, #0
 80084f2:	e9c0 2200 	strd	r2, r2, [r0]
 80084f6:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80084fa:	7402      	strb	r2, [r0, #16]
{
}
 80084fc:	4770      	bx	lr
	...

08008500 <_ZN5Model4tickEv>:

void Model::tick()
{
    // Tick xử lý định kỳ nếu cần
    staticListener = modelListener; // gán mỗi lần để sync
 8008500:	4b01      	ldr	r3, [pc, #4]	@ (8008508 <_ZN5Model4tickEv+0x8>)
 8008502:	6802      	ldr	r2, [r0, #0]
 8008504:	601a      	str	r2, [r3, #0]
}
 8008506:	4770      	bx	lr
 8008508:	200031f4 	.word	0x200031f4

0800850c <_ZN5Model9setWinnerEi>:
void Model::paddle2Action() {
    if (staticListener) staticListener->paddle2Action();
}
void Model::setWinner(int winnerId)
{
    winner = winnerId;
 800850c:	6041      	str	r1, [r0, #4]
    printf("Model::setWinner: %d\n", winner);
 800850e:	4801      	ldr	r0, [pc, #4]	@ (8008514 <_ZN5Model9setWinnerEi+0x8>)
 8008510:	f01f bd80 	b.w	8028014 <iprintf>
 8008514:	08029f86 	.word	0x08029f86

08008518 <_ZN5Model9getWinnerEi>:
}

int Model::getWinner(int playerId)
{
 8008518:	b510      	push	{r4, lr}
    int result = (winner == playerId) ? 1 : 0;
 800851a:	6844      	ldr	r4, [r0, #4]
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 800851c:	4804      	ldr	r0, [pc, #16]	@ (8008530 <_ZN5Model9getWinnerEi+0x18>)
    int result = (winner == playerId) ? 1 : 0;
 800851e:	1a63      	subs	r3, r4, r1
 8008520:	425c      	negs	r4, r3
 8008522:	415c      	adcs	r4, r3
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 8008524:	4622      	mov	r2, r4
 8008526:	f01f fd75 	bl	8028014 <iprintf>
    return result;
}
 800852a:	4620      	mov	r0, r4
 800852c:	bd10      	pop	{r4, pc}
 800852e:	bf00      	nop
 8008530:	08029f9c 	.word	0x08029f9c

08008534 <_ZN5Model9resetGameEv>:

void Model::resetGame()
{

    player1Score = 0;
 8008534:	2300      	movs	r3, #0
    player2Score = 0;
 8008536:	e9c0 3302 	strd	r3, r3, [r0, #8]
    gameOver = false;
 800853a:	7403      	strb	r3, [r0, #16]
    winner = 0; // Đặt lại winner về 0
 800853c:	6043      	str	r3, [r0, #4]
}
 800853e:	4770      	bx	lr

08008540 <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
 8008540:	4770      	bx	lr

08008542 <_ZThn4_N20StartScreenPresenterD1Ev>:
 8008542:	3804      	subs	r0, #4
 8008544:	4770      	bx	lr

08008546 <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
 8008546:	4770      	bx	lr

08008548 <_ZN20StartScreenPresenterD0Ev>:
 8008548:	b510      	push	{r4, lr}
 800854a:	2110      	movs	r1, #16
 800854c:	4604      	mov	r4, r0
 800854e:	f01e fc61 	bl	8026e14 <_ZdlPvj>
 8008552:	4620      	mov	r0, r4
 8008554:	bd10      	pop	{r4, pc}

08008556 <_ZThn4_N20StartScreenPresenterD0Ev>:
 8008556:	f1a0 0004 	sub.w	r0, r0, #4
 800855a:	e7f5      	b.n	8008548 <_ZN20StartScreenPresenterD0Ev>

0800855c <_ZN20StartScreenPresenterC1ER15StartScreenView>:
 800855c:	2200      	movs	r2, #0
 800855e:	6082      	str	r2, [r0, #8]
    : view(v)
 8008560:	4a02      	ldr	r2, [pc, #8]	@ (800856c <_ZN20StartScreenPresenterC1ER15StartScreenView+0x10>)
 8008562:	6002      	str	r2, [r0, #0]
 8008564:	3218      	adds	r2, #24
 8008566:	6042      	str	r2, [r0, #4]
 8008568:	60c1      	str	r1, [r0, #12]
}
 800856a:	4770      	bx	lr
 800856c:	0802ac60 	.word	0x0802ac60

08008570 <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
 8008570:	4770      	bx	lr
	...

08008574 <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
 8008574:	b510      	push	{r4, lr}
 8008576:	4b03      	ldr	r3, [pc, #12]	@ (8008584 <_ZN15StartScreenViewD1Ev+0x10>)
 8008578:	6003      	str	r3, [r0, #0]
 800857a:	4604      	mov	r4, r0
 800857c:	f7fd faec 	bl	8005b58 <_ZN19StartScreenViewBaseD1Ev>
 8008580:	4620      	mov	r0, r4
 8008582:	bd10      	pop	{r4, pc}
 8008584:	0802aca0 	.word	0x0802aca0

08008588 <_ZN15StartScreenViewD0Ev>:
 8008588:	b510      	push	{r4, lr}
 800858a:	4604      	mov	r4, r0
 800858c:	f7ff fff2 	bl	8008574 <_ZN15StartScreenViewD1Ev>
 8008590:	4620      	mov	r0, r4
 8008592:	f641 017c 	movw	r1, #6268	@ 0x187c
 8008596:	f01e fc3d 	bl	8026e14 <_ZdlPvj>
 800859a:	4620      	mov	r0, r4
 800859c:	bd10      	pop	{r4, pc}
	...

080085a0 <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
 80085a0:	b510      	push	{r4, lr}
 80085a2:	4604      	mov	r4, r0
 80085a4:	f7fd fb1e 	bl	8005be4 <_ZN19StartScreenViewBaseC1Ev>
 80085a8:	4b01      	ldr	r3, [pc, #4]	@ (80085b0 <_ZN15StartScreenViewC1Ev+0x10>)
 80085aa:	6023      	str	r3, [r4, #0]
}
 80085ac:	4620      	mov	r0, r4
 80085ae:	bd10      	pop	{r4, pc}
 80085b0:	0802aca0 	.word	0x0802aca0

080085b4 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
 80085b4:	f7fd baae 	b.w	8005b14 <_ZN19StartScreenViewBase11setupScreenEv>

080085b8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80085b8:	20f0      	movs	r0, #240	@ 0xf0
 80085ba:	4770      	bx	lr

080085bc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80085bc:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 80085c0:	4770      	bx	lr

080085c2 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80085c2:	2029      	movs	r0, #41	@ 0x29
 80085c4:	f7f9 bc1e 	b.w	8001e04 <LCD_IO_WriteReg>

080085c8 <ili9341_DisplayOff>:
 80085c8:	2028      	movs	r0, #40	@ 0x28
 80085ca:	f7f9 bc1b 	b.w	8001e04 <LCD_IO_WriteReg>

080085ce <ili9341_Init>:
{
 80085ce:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80085d0:	f7f9 fbec 	bl	8001dac <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80085d4:	20ca      	movs	r0, #202	@ 0xca
 80085d6:	f7f9 fc15 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085da:	20c3      	movs	r0, #195	@ 0xc3
 80085dc:	f7f9 fbf6 	bl	8001dcc <LCD_IO_WriteData>
 80085e0:	2008      	movs	r0, #8
 80085e2:	f7f9 fbf3 	bl	8001dcc <LCD_IO_WriteData>
 80085e6:	2050      	movs	r0, #80	@ 0x50
 80085e8:	f7f9 fbf0 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085ec:	20cf      	movs	r0, #207	@ 0xcf
 80085ee:	f7f9 fc09 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085f2:	2000      	movs	r0, #0
 80085f4:	f7f9 fbea 	bl	8001dcc <LCD_IO_WriteData>
 80085f8:	20c1      	movs	r0, #193	@ 0xc1
 80085fa:	f7f9 fbe7 	bl	8001dcc <LCD_IO_WriteData>
 80085fe:	2030      	movs	r0, #48	@ 0x30
 8008600:	f7f9 fbe4 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008604:	20ed      	movs	r0, #237	@ 0xed
 8008606:	f7f9 fbfd 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800860a:	2064      	movs	r0, #100	@ 0x64
 800860c:	f7f9 fbde 	bl	8001dcc <LCD_IO_WriteData>
 8008610:	2003      	movs	r0, #3
 8008612:	f7f9 fbdb 	bl	8001dcc <LCD_IO_WriteData>
 8008616:	2012      	movs	r0, #18
 8008618:	f7f9 fbd8 	bl	8001dcc <LCD_IO_WriteData>
 800861c:	2081      	movs	r0, #129	@ 0x81
 800861e:	f7f9 fbd5 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008622:	20e8      	movs	r0, #232	@ 0xe8
 8008624:	f7f9 fbee 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008628:	2085      	movs	r0, #133	@ 0x85
 800862a:	f7f9 fbcf 	bl	8001dcc <LCD_IO_WriteData>
 800862e:	2000      	movs	r0, #0
 8008630:	f7f9 fbcc 	bl	8001dcc <LCD_IO_WriteData>
 8008634:	2078      	movs	r0, #120	@ 0x78
 8008636:	f7f9 fbc9 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800863a:	20cb      	movs	r0, #203	@ 0xcb
 800863c:	f7f9 fbe2 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008640:	2039      	movs	r0, #57	@ 0x39
 8008642:	f7f9 fbc3 	bl	8001dcc <LCD_IO_WriteData>
 8008646:	202c      	movs	r0, #44	@ 0x2c
 8008648:	f7f9 fbc0 	bl	8001dcc <LCD_IO_WriteData>
 800864c:	2000      	movs	r0, #0
 800864e:	f7f9 fbbd 	bl	8001dcc <LCD_IO_WriteData>
 8008652:	2034      	movs	r0, #52	@ 0x34
 8008654:	f7f9 fbba 	bl	8001dcc <LCD_IO_WriteData>
 8008658:	2002      	movs	r0, #2
 800865a:	f7f9 fbb7 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800865e:	20f7      	movs	r0, #247	@ 0xf7
 8008660:	f7f9 fbd0 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008664:	2020      	movs	r0, #32
 8008666:	f7f9 fbb1 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800866a:	20ea      	movs	r0, #234	@ 0xea
 800866c:	f7f9 fbca 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008670:	2000      	movs	r0, #0
 8008672:	f7f9 fbab 	bl	8001dcc <LCD_IO_WriteData>
 8008676:	2000      	movs	r0, #0
 8008678:	f7f9 fba8 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800867c:	20b1      	movs	r0, #177	@ 0xb1
 800867e:	f7f9 fbc1 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008682:	2000      	movs	r0, #0
 8008684:	f7f9 fba2 	bl	8001dcc <LCD_IO_WriteData>
 8008688:	201b      	movs	r0, #27
 800868a:	f7f9 fb9f 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800868e:	20b6      	movs	r0, #182	@ 0xb6
 8008690:	f7f9 fbb8 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008694:	200a      	movs	r0, #10
 8008696:	f7f9 fb99 	bl	8001dcc <LCD_IO_WriteData>
 800869a:	20a2      	movs	r0, #162	@ 0xa2
 800869c:	f7f9 fb96 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086a0:	20c0      	movs	r0, #192	@ 0xc0
 80086a2:	f7f9 fbaf 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086a6:	2010      	movs	r0, #16
 80086a8:	f7f9 fb90 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086ac:	20c1      	movs	r0, #193	@ 0xc1
 80086ae:	f7f9 fba9 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086b2:	2010      	movs	r0, #16
 80086b4:	f7f9 fb8a 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086b8:	20c5      	movs	r0, #197	@ 0xc5
 80086ba:	f7f9 fba3 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086be:	2045      	movs	r0, #69	@ 0x45
 80086c0:	f7f9 fb84 	bl	8001dcc <LCD_IO_WriteData>
 80086c4:	2015      	movs	r0, #21
 80086c6:	f7f9 fb81 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086ca:	20c7      	movs	r0, #199	@ 0xc7
 80086cc:	f7f9 fb9a 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086d0:	2090      	movs	r0, #144	@ 0x90
 80086d2:	f7f9 fb7b 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086d6:	2036      	movs	r0, #54	@ 0x36
 80086d8:	f7f9 fb94 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086dc:	20c8      	movs	r0, #200	@ 0xc8
 80086de:	f7f9 fb75 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086e2:	20f2      	movs	r0, #242	@ 0xf2
 80086e4:	f7f9 fb8e 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086e8:	2000      	movs	r0, #0
 80086ea:	f7f9 fb6f 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086ee:	20b0      	movs	r0, #176	@ 0xb0
 80086f0:	f7f9 fb88 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80086f4:	20c2      	movs	r0, #194	@ 0xc2
 80086f6:	f7f9 fb69 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086fa:	20b6      	movs	r0, #182	@ 0xb6
 80086fc:	f7f9 fb82 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008700:	200a      	movs	r0, #10
 8008702:	f7f9 fb63 	bl	8001dcc <LCD_IO_WriteData>
 8008706:	20a7      	movs	r0, #167	@ 0xa7
 8008708:	f7f9 fb60 	bl	8001dcc <LCD_IO_WriteData>
 800870c:	2027      	movs	r0, #39	@ 0x27
 800870e:	f7f9 fb5d 	bl	8001dcc <LCD_IO_WriteData>
 8008712:	2004      	movs	r0, #4
 8008714:	f7f9 fb5a 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008718:	202a      	movs	r0, #42	@ 0x2a
 800871a:	f7f9 fb73 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800871e:	2000      	movs	r0, #0
 8008720:	f7f9 fb54 	bl	8001dcc <LCD_IO_WriteData>
 8008724:	2000      	movs	r0, #0
 8008726:	f7f9 fb51 	bl	8001dcc <LCD_IO_WriteData>
 800872a:	2000      	movs	r0, #0
 800872c:	f7f9 fb4e 	bl	8001dcc <LCD_IO_WriteData>
 8008730:	20ef      	movs	r0, #239	@ 0xef
 8008732:	f7f9 fb4b 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008736:	202b      	movs	r0, #43	@ 0x2b
 8008738:	f7f9 fb64 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800873c:	2000      	movs	r0, #0
 800873e:	f7f9 fb45 	bl	8001dcc <LCD_IO_WriteData>
 8008742:	2000      	movs	r0, #0
 8008744:	f7f9 fb42 	bl	8001dcc <LCD_IO_WriteData>
 8008748:	2001      	movs	r0, #1
 800874a:	f7f9 fb3f 	bl	8001dcc <LCD_IO_WriteData>
 800874e:	203f      	movs	r0, #63	@ 0x3f
 8008750:	f7f9 fb3c 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008754:	20f6      	movs	r0, #246	@ 0xf6
 8008756:	f7f9 fb55 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800875a:	2001      	movs	r0, #1
 800875c:	f7f9 fb36 	bl	8001dcc <LCD_IO_WriteData>
 8008760:	2000      	movs	r0, #0
 8008762:	f7f9 fb33 	bl	8001dcc <LCD_IO_WriteData>
 8008766:	2006      	movs	r0, #6
 8008768:	f7f9 fb30 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800876c:	202c      	movs	r0, #44	@ 0x2c
 800876e:	f7f9 fb49 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008772:	20c8      	movs	r0, #200	@ 0xc8
 8008774:	f7f9 fb94 	bl	8001ea0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008778:	2026      	movs	r0, #38	@ 0x26
 800877a:	f7f9 fb43 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800877e:	2001      	movs	r0, #1
 8008780:	f7f9 fb24 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008784:	20e0      	movs	r0, #224	@ 0xe0
 8008786:	f7f9 fb3d 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800878a:	200f      	movs	r0, #15
 800878c:	f7f9 fb1e 	bl	8001dcc <LCD_IO_WriteData>
 8008790:	2029      	movs	r0, #41	@ 0x29
 8008792:	f7f9 fb1b 	bl	8001dcc <LCD_IO_WriteData>
 8008796:	2024      	movs	r0, #36	@ 0x24
 8008798:	f7f9 fb18 	bl	8001dcc <LCD_IO_WriteData>
 800879c:	200c      	movs	r0, #12
 800879e:	f7f9 fb15 	bl	8001dcc <LCD_IO_WriteData>
 80087a2:	200e      	movs	r0, #14
 80087a4:	f7f9 fb12 	bl	8001dcc <LCD_IO_WriteData>
 80087a8:	2009      	movs	r0, #9
 80087aa:	f7f9 fb0f 	bl	8001dcc <LCD_IO_WriteData>
 80087ae:	204e      	movs	r0, #78	@ 0x4e
 80087b0:	f7f9 fb0c 	bl	8001dcc <LCD_IO_WriteData>
 80087b4:	2078      	movs	r0, #120	@ 0x78
 80087b6:	f7f9 fb09 	bl	8001dcc <LCD_IO_WriteData>
 80087ba:	203c      	movs	r0, #60	@ 0x3c
 80087bc:	f7f9 fb06 	bl	8001dcc <LCD_IO_WriteData>
 80087c0:	2009      	movs	r0, #9
 80087c2:	f7f9 fb03 	bl	8001dcc <LCD_IO_WriteData>
 80087c6:	2013      	movs	r0, #19
 80087c8:	f7f9 fb00 	bl	8001dcc <LCD_IO_WriteData>
 80087cc:	2005      	movs	r0, #5
 80087ce:	f7f9 fafd 	bl	8001dcc <LCD_IO_WriteData>
 80087d2:	2017      	movs	r0, #23
 80087d4:	f7f9 fafa 	bl	8001dcc <LCD_IO_WriteData>
 80087d8:	2011      	movs	r0, #17
 80087da:	f7f9 faf7 	bl	8001dcc <LCD_IO_WriteData>
 80087de:	2000      	movs	r0, #0
 80087e0:	f7f9 faf4 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80087e4:	20e1      	movs	r0, #225	@ 0xe1
 80087e6:	f7f9 fb0d 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80087ea:	2000      	movs	r0, #0
 80087ec:	f7f9 faee 	bl	8001dcc <LCD_IO_WriteData>
 80087f0:	2016      	movs	r0, #22
 80087f2:	f7f9 faeb 	bl	8001dcc <LCD_IO_WriteData>
 80087f6:	201b      	movs	r0, #27
 80087f8:	f7f9 fae8 	bl	8001dcc <LCD_IO_WriteData>
 80087fc:	2004      	movs	r0, #4
 80087fe:	f7f9 fae5 	bl	8001dcc <LCD_IO_WriteData>
 8008802:	2011      	movs	r0, #17
 8008804:	f7f9 fae2 	bl	8001dcc <LCD_IO_WriteData>
 8008808:	2007      	movs	r0, #7
 800880a:	f7f9 fadf 	bl	8001dcc <LCD_IO_WriteData>
 800880e:	2031      	movs	r0, #49	@ 0x31
 8008810:	f7f9 fadc 	bl	8001dcc <LCD_IO_WriteData>
 8008814:	2033      	movs	r0, #51	@ 0x33
 8008816:	f7f9 fad9 	bl	8001dcc <LCD_IO_WriteData>
 800881a:	2042      	movs	r0, #66	@ 0x42
 800881c:	f7f9 fad6 	bl	8001dcc <LCD_IO_WriteData>
 8008820:	2005      	movs	r0, #5
 8008822:	f7f9 fad3 	bl	8001dcc <LCD_IO_WriteData>
 8008826:	200c      	movs	r0, #12
 8008828:	f7f9 fad0 	bl	8001dcc <LCD_IO_WriteData>
 800882c:	200a      	movs	r0, #10
 800882e:	f7f9 facd 	bl	8001dcc <LCD_IO_WriteData>
 8008832:	2028      	movs	r0, #40	@ 0x28
 8008834:	f7f9 faca 	bl	8001dcc <LCD_IO_WriteData>
 8008838:	202f      	movs	r0, #47	@ 0x2f
 800883a:	f7f9 fac7 	bl	8001dcc <LCD_IO_WriteData>
 800883e:	200f      	movs	r0, #15
 8008840:	f7f9 fac4 	bl	8001dcc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008844:	2011      	movs	r0, #17
 8008846:	f7f9 fadd 	bl	8001e04 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800884a:	20c8      	movs	r0, #200	@ 0xc8
 800884c:	f7f9 fb28 	bl	8001ea0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008850:	2029      	movs	r0, #41	@ 0x29
 8008852:	f7f9 fad7 	bl	8001e04 <LCD_IO_WriteReg>
}
 8008856:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800885a:	202c      	movs	r0, #44	@ 0x2c
 800885c:	f7f9 bad2 	b.w	8001e04 <LCD_IO_WriteReg>

08008860 <ili9341_ReadID>:
{
 8008860:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008862:	f7f9 faa3 	bl	8001dac <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008866:	2103      	movs	r1, #3
 8008868:	20d3      	movs	r0, #211	@ 0xd3
 800886a:	f7f9 fae7 	bl	8001e3c <LCD_IO_ReadData>
}
 800886e:	b280      	uxth	r0, r0
 8008870:	bd08      	pop	{r3, pc}

08008872 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8008872:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008874:	b2c4      	uxtb	r4, r0
 8008876:	2202      	movs	r2, #2
 8008878:	2103      	movs	r1, #3
 800887a:	4620      	mov	r0, r4
 800887c:	f7f9 fa4c 	bl	8001d18 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8008880:	200a      	movs	r0, #10
 8008882:	f7f9 fa91 	bl	8001da8 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008886:	4620      	mov	r0, r4
 8008888:	2200      	movs	r2, #0
 800888a:	2103      	movs	r1, #3
 800888c:	f7f9 fa44 	bl	8001d18 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8008890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008894:	2002      	movs	r0, #2
 8008896:	f7f9 ba87 	b.w	8001da8 <IOE_Delay>

0800889a <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800889a:	b538      	push	{r3, r4, r5, lr}
 800889c:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800889e:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80088a0:	f7f9 fa38 	bl	8001d14 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80088a4:	2100      	movs	r1, #0
 80088a6:	4620      	mov	r0, r4
 80088a8:	f7f9 fa4e 	bl	8001d48 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80088ac:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80088ae:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80088b0:	4620      	mov	r0, r4
 80088b2:	f7f9 fa49 	bl	8001d48 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80088b6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80088ba:	b280      	uxth	r0, r0
 80088bc:	bd38      	pop	{r3, r4, r5, pc}

080088be <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80088be:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80088c0:	b2c4      	uxtb	r4, r0
 80088c2:	2140      	movs	r1, #64	@ 0x40
 80088c4:	4620      	mov	r0, r4
 80088c6:	f7f9 fa3f 	bl	8001d48 <IOE_Read>
  
  if(state > 0)
 80088ca:	0603      	lsls	r3, r0, #24
 80088cc:	d507      	bpl.n	80088de <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80088ce:	214c      	movs	r1, #76	@ 0x4c
 80088d0:	4620      	mov	r0, r4
 80088d2:	f7f9 fa39 	bl	8001d48 <IOE_Read>
 80088d6:	3800      	subs	r0, #0
 80088d8:	bf18      	it	ne
 80088da:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80088dc:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80088de:	2201      	movs	r2, #1
 80088e0:	214b      	movs	r1, #75	@ 0x4b
 80088e2:	4620      	mov	r0, r4
 80088e4:	f7f9 fa18 	bl	8001d18 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80088e8:	4620      	mov	r0, r4
 80088ea:	2200      	movs	r2, #0
 80088ec:	214b      	movs	r1, #75	@ 0x4b
 80088ee:	f7f9 fa13 	bl	8001d18 <IOE_Write>
  uint8_t ret = 0;
 80088f2:	2000      	movs	r0, #0
 80088f4:	e7f2      	b.n	80088dc <stmpe811_TS_DetectTouch+0x1e>

080088f6 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80088f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80088f8:	2304      	movs	r3, #4
 80088fa:	b2c4      	uxtb	r4, r0
{
 80088fc:	460e      	mov	r6, r1
 80088fe:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008900:	21d7      	movs	r1, #215	@ 0xd7
 8008902:	eb0d 0203 	add.w	r2, sp, r3
 8008906:	4620      	mov	r0, r4
 8008908:	f7f9 fa38 	bl	8001d7c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800890c:	9b01      	ldr	r3, [sp, #4]
 800890e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008910:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008912:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008916:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008918:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800891a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800891c:	2201      	movs	r2, #1
 800891e:	214b      	movs	r1, #75	@ 0x4b
 8008920:	f7f9 f9fa 	bl	8001d18 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008924:	2200      	movs	r2, #0
 8008926:	214b      	movs	r1, #75	@ 0x4b
 8008928:	4620      	mov	r0, r4
 800892a:	f7f9 f9f5 	bl	8001d18 <IOE_Write>
}
 800892e:	b002      	add	sp, #8
 8008930:	bd70      	pop	{r4, r5, r6, pc}
	...

08008934 <stmpe811_Init>:
{
 8008934:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008936:	4a0a      	ldr	r2, [pc, #40]	@ (8008960 <stmpe811_Init+0x2c>)
 8008938:	7813      	ldrb	r3, [r2, #0]
 800893a:	4298      	cmp	r0, r3
{
 800893c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800893e:	d00d      	beq.n	800895c <stmpe811_Init+0x28>
 8008940:	7851      	ldrb	r1, [r2, #1]
 8008942:	4288      	cmp	r0, r1
 8008944:	d00a      	beq.n	800895c <stmpe811_Init+0x28>
 8008946:	b10b      	cbz	r3, 800894c <stmpe811_Init+0x18>
 8008948:	b941      	cbnz	r1, 800895c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800894a:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800894c:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800894e:	f7f9 f9e1 	bl	8001d14 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8008952:	4620      	mov	r0, r4
}
 8008954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8008958:	f7ff bf8b 	b.w	8008872 <stmpe811_Reset>
}
 800895c:	bd10      	pop	{r4, pc}
 800895e:	bf00      	nop
 8008960:	200031f8 	.word	0x200031f8

08008964 <stmpe811_EnableGlobalIT>:
{
 8008964:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008966:	b2c4      	uxtb	r4, r0
 8008968:	2109      	movs	r1, #9
 800896a:	4620      	mov	r0, r4
 800896c:	f7f9 f9ec 	bl	8001d48 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008970:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008974:	b2d2      	uxtb	r2, r2
 8008976:	4620      	mov	r0, r4
 8008978:	2109      	movs	r1, #9
}
 800897a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800897e:	f7f9 b9cb 	b.w	8001d18 <IOE_Write>

08008982 <stmpe811_DisableGlobalIT>:
{
 8008982:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008984:	b2c4      	uxtb	r4, r0
 8008986:	2109      	movs	r1, #9
 8008988:	4620      	mov	r0, r4
 800898a:	f7f9 f9dd 	bl	8001d48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800898e:	2109      	movs	r1, #9
 8008990:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8008994:	4620      	mov	r0, r4
}
 8008996:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800899a:	f7f9 b9bd 	b.w	8001d18 <IOE_Write>

0800899e <stmpe811_EnableITSource>:
{
 800899e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80089a0:	b2c4      	uxtb	r4, r0
{
 80089a2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80089a4:	4620      	mov	r0, r4
 80089a6:	210a      	movs	r1, #10
 80089a8:	f7f9 f9ce 	bl	8001d48 <IOE_Read>
  tmp |= Source; 
 80089ac:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80089b0:	b2d2      	uxtb	r2, r2
 80089b2:	4620      	mov	r0, r4
 80089b4:	210a      	movs	r1, #10
}
 80089b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80089ba:	f7f9 b9ad 	b.w	8001d18 <IOE_Write>

080089be <stmpe811_TS_EnableIT>:
{
 80089be:	b510      	push	{r4, lr}
 80089c0:	4604      	mov	r4, r0
  IOE_ITConfig();
 80089c2:	f7f9 f9a8 	bl	8001d16 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80089c6:	4620      	mov	r0, r4
 80089c8:	211f      	movs	r1, #31
 80089ca:	f7ff ffe8 	bl	800899e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80089ce:	4620      	mov	r0, r4
}
 80089d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80089d4:	f7ff bfc6 	b.w	8008964 <stmpe811_EnableGlobalIT>

080089d8 <stmpe811_DisableITSource>:
{
 80089d8:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80089da:	b2c4      	uxtb	r4, r0
{
 80089dc:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80089de:	4620      	mov	r0, r4
 80089e0:	210a      	movs	r1, #10
 80089e2:	f7f9 f9b1 	bl	8001d48 <IOE_Read>
  tmp &= ~Source; 
 80089e6:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80089ea:	b2d2      	uxtb	r2, r2
 80089ec:	4620      	mov	r0, r4
 80089ee:	210a      	movs	r1, #10
}
 80089f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80089f4:	f7f9 b990 	b.w	8001d18 <IOE_Write>

080089f8 <stmpe811_TS_DisableIT>:
{
 80089f8:	b510      	push	{r4, lr}
 80089fa:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80089fc:	f7ff ffc1 	bl	8008982 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8008a00:	4620      	mov	r0, r4
 8008a02:	211f      	movs	r1, #31
}
 8008a04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8008a08:	f7ff bfe6 	b.w	80089d8 <stmpe811_DisableITSource>

08008a0c <stmpe811_ReadGITStatus>:
{
 8008a0c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008a0e:	b2c0      	uxtb	r0, r0
{
 8008a10:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008a12:	210b      	movs	r1, #11
 8008a14:	f7f9 f998 	bl	8001d48 <IOE_Read>
}
 8008a18:	4020      	ands	r0, r4
 8008a1a:	bd10      	pop	{r4, pc}

08008a1c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8008a1c:	211f      	movs	r1, #31
 8008a1e:	f7ff bff5 	b.w	8008a0c <stmpe811_ReadGITStatus>

08008a22 <stmpe811_ClearGlobalIT>:
{
 8008a22:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008a24:	b2c0      	uxtb	r0, r0
 8008a26:	210b      	movs	r1, #11
 8008a28:	f7f9 b976 	b.w	8001d18 <IOE_Write>

08008a2c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8008a2c:	211f      	movs	r1, #31
 8008a2e:	f7ff bff8 	b.w	8008a22 <stmpe811_ClearGlobalIT>

08008a32 <stmpe811_IO_EnableAF>:
{
 8008a32:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008a34:	b2c4      	uxtb	r4, r0
{
 8008a36:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008a38:	4620      	mov	r0, r4
 8008a3a:	2117      	movs	r1, #23
 8008a3c:	f7f9 f984 	bl	8001d48 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8008a40:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008a44:	b2d2      	uxtb	r2, r2
 8008a46:	4620      	mov	r0, r4
 8008a48:	2117      	movs	r1, #23
}
 8008a4a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008a4e:	f7f9 b963 	b.w	8001d18 <IOE_Write>

08008a52 <stmpe811_TS_Start>:
{
 8008a52:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008a54:	b2c4      	uxtb	r4, r0
{
 8008a56:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008a58:	2104      	movs	r1, #4
 8008a5a:	4620      	mov	r0, r4
 8008a5c:	f7f9 f974 	bl	8001d48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008a60:	2104      	movs	r1, #4
 8008a62:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008a66:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008a68:	4620      	mov	r0, r4
 8008a6a:	f7f9 f955 	bl	8001d18 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8008a6e:	4630      	mov	r0, r6
 8008a70:	21f0      	movs	r1, #240	@ 0xf0
 8008a72:	f7ff ffde 	bl	8008a32 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008a76:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 8008a7a:	4620      	mov	r0, r4
 8008a7c:	2104      	movs	r1, #4
 8008a7e:	f7f9 f94b 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008a82:	2249      	movs	r2, #73	@ 0x49
 8008a84:	2120      	movs	r1, #32
 8008a86:	4620      	mov	r0, r4
 8008a88:	f7f9 f946 	bl	8001d18 <IOE_Write>
  IOE_Delay(2); 
 8008a8c:	2002      	movs	r0, #2
 8008a8e:	f7f9 f98b 	bl	8001da8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008a92:	4620      	mov	r0, r4
 8008a94:	2201      	movs	r2, #1
 8008a96:	2121      	movs	r1, #33	@ 0x21
 8008a98:	f7f9 f93e 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008a9c:	4620      	mov	r0, r4
 8008a9e:	229a      	movs	r2, #154	@ 0x9a
 8008aa0:	2141      	movs	r1, #65	@ 0x41
 8008aa2:	f7f9 f939 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008aa6:	4620      	mov	r0, r4
 8008aa8:	2201      	movs	r2, #1
 8008aaa:	214a      	movs	r1, #74	@ 0x4a
 8008aac:	f7f9 f934 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ab0:	4620      	mov	r0, r4
 8008ab2:	2201      	movs	r2, #1
 8008ab4:	214b      	movs	r1, #75	@ 0x4b
 8008ab6:	f7f9 f92f 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008aba:	4620      	mov	r0, r4
 8008abc:	2200      	movs	r2, #0
 8008abe:	214b      	movs	r1, #75	@ 0x4b
 8008ac0:	f7f9 f92a 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008ac4:	4620      	mov	r0, r4
 8008ac6:	2201      	movs	r2, #1
 8008ac8:	2156      	movs	r1, #86	@ 0x56
 8008aca:	f7f9 f925 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008ace:	4620      	mov	r0, r4
 8008ad0:	2201      	movs	r2, #1
 8008ad2:	2158      	movs	r1, #88	@ 0x58
 8008ad4:	f7f9 f920 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008ad8:	4620      	mov	r0, r4
 8008ada:	2201      	movs	r2, #1
 8008adc:	2140      	movs	r1, #64	@ 0x40
 8008ade:	f7f9 f91b 	bl	8001d18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008ae2:	4620      	mov	r0, r4
 8008ae4:	22ff      	movs	r2, #255	@ 0xff
 8008ae6:	210b      	movs	r1, #11
 8008ae8:	f7f9 f916 	bl	8001d18 <IOE_Write>
}
 8008aec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8008af0:	2002      	movs	r0, #2
 8008af2:	f7f9 b959 	b.w	8001da8 <IOE_Delay>
	...

08008af8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008af8:	4b05      	ldr	r3, [pc, #20]	@ (8008b10 <SystemInit+0x18>)
 8008afa:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8008afe:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8008b02:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008b06:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8008b0a:	609a      	str	r2, [r3, #8]
#endif
}
 8008b0c:	4770      	bx	lr
 8008b0e:	bf00      	nop
 8008b10:	e000ed00 	.word	0xe000ed00

08008b14 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008b14:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008b16:	4b0b      	ldr	r3, [pc, #44]	@ (8008b44 <HAL_Init+0x30>)
 8008b18:	681a      	ldr	r2, [r3, #0]
 8008b1a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008b1e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8008b20:	681a      	ldr	r2, [r3, #0]
 8008b22:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8008b26:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008b28:	681a      	ldr	r2, [r3, #0]
 8008b2a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008b2e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8008b30:	2003      	movs	r0, #3
 8008b32:	f000 fa63 	bl	8008ffc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008b36:	2000      	movs	r0, #0
 8008b38:	f7f9 fbf4 	bl	8002324 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008b3c:	f7f9 f9be 	bl	8001ebc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8008b40:	2000      	movs	r0, #0
 8008b42:	bd08      	pop	{r3, pc}
 8008b44:	40023c00 	.word	0x40023c00

08008b48 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008b48:	4a03      	ldr	r2, [pc, #12]	@ (8008b58 <HAL_IncTick+0x10>)
 8008b4a:	4b04      	ldr	r3, [pc, #16]	@ (8008b5c <HAL_IncTick+0x14>)
 8008b4c:	6811      	ldr	r1, [r2, #0]
 8008b4e:	781b      	ldrb	r3, [r3, #0]
 8008b50:	440b      	add	r3, r1
 8008b52:	6013      	str	r3, [r2, #0]
}
 8008b54:	4770      	bx	lr
 8008b56:	bf00      	nop
 8008b58:	200031fc 	.word	0x200031fc
 8008b5c:	20000078 	.word	0x20000078

08008b60 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8008b60:	4b01      	ldr	r3, [pc, #4]	@ (8008b68 <HAL_GetTick+0x8>)
 8008b62:	6818      	ldr	r0, [r3, #0]
}
 8008b64:	4770      	bx	lr
 8008b66:	bf00      	nop
 8008b68:	200031fc 	.word	0x200031fc

08008b6c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8008b6c:	b538      	push	{r3, r4, r5, lr}
 8008b6e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008b70:	f7ff fff6 	bl	8008b60 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8008b74:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8008b76:	bf1c      	itt	ne
 8008b78:	4b05      	ldrne	r3, [pc, #20]	@ (8008b90 <HAL_Delay+0x24>)
 8008b7a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8008b7c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8008b7e:	bf18      	it	ne
 8008b80:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8008b82:	f7ff ffed 	bl	8008b60 <HAL_GetTick>
 8008b86:	1b43      	subs	r3, r0, r5
 8008b88:	42a3      	cmp	r3, r4
 8008b8a:	d3fa      	bcc.n	8008b82 <HAL_Delay+0x16>
  {
  }
}
 8008b8c:	bd38      	pop	{r3, r4, r5, pc}
 8008b8e:	bf00      	nop
 8008b90:	20000078 	.word	0x20000078

08008b94 <HAL_ADC_MspInit>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_MspInit could be implemented in the user file
   */
}
 8008b94:	4770      	bx	lr
	...

08008b98 <HAL_ADC_Init>:
{
 8008b98:	b538      	push	{r3, r4, r5, lr}
  if (hadc == NULL)
 8008b9a:	4604      	mov	r4, r0
 8008b9c:	2800      	cmp	r0, #0
 8008b9e:	f000 809b 	beq.w	8008cd8 <HAL_ADC_Init+0x140>
  if (hadc->State == HAL_ADC_STATE_RESET)
 8008ba2:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8008ba4:	b925      	cbnz	r5, 8008bb0 <HAL_ADC_Init+0x18>
    HAL_ADC_MspInit(hadc);
 8008ba6:	f7ff fff5 	bl	8008b94 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 8008baa:	6465      	str	r5, [r4, #68]	@ 0x44
    hadc->Lock = HAL_UNLOCKED;
 8008bac:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8008bb0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008bb2:	06db      	lsls	r3, r3, #27
 8008bb4:	f100 808e 	bmi.w	8008cd4 <HAL_ADC_Init+0x13c>
    ADC_STATE_CLR_SET(hadc->State,
 8008bb8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008bba:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8008bbe:	f023 0302 	bic.w	r3, r3, #2
 8008bc2:	f043 0302 	orr.w	r3, r3, #2
 8008bc6:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8008bc8:	4b44      	ldr	r3, [pc, #272]	@ (8008cdc <HAL_ADC_Init+0x144>)
 8008bca:	685a      	ldr	r2, [r3, #4]
 8008bcc:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8008bd0:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8008bd2:	685a      	ldr	r2, [r3, #4]
 8008bd4:	6861      	ldr	r1, [r4, #4]
 8008bd6:	430a      	orrs	r2, r1
 8008bd8:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8008bda:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8008bdc:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8008bde:	685a      	ldr	r2, [r3, #4]
 8008be0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8008be4:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8008be6:	685a      	ldr	r2, [r3, #4]
 8008be8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8008bec:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8008bee:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8008bf0:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8008bf2:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8008bf6:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8008bf8:	685a      	ldr	r2, [r3, #4]
 8008bfa:	430a      	orrs	r2, r1
 8008bfc:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8008bfe:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8008c00:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8008c02:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8008c06:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8008c08:	689a      	ldr	r2, [r3, #8]
 8008c0a:	430a      	orrs	r2, r1
 8008c0c:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8008c0e:	4934      	ldr	r1, [pc, #208]	@ (8008ce0 <HAL_ADC_Init+0x148>)
 8008c10:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8008c12:	428a      	cmp	r2, r1
 8008c14:	d052      	beq.n	8008cbc <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8008c16:	6899      	ldr	r1, [r3, #8]
 8008c18:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 8008c1c:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8008c1e:	6899      	ldr	r1, [r3, #8]
 8008c20:	430a      	orrs	r2, r1
 8008c22:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008c24:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8008c26:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008c28:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8008c2c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8008c2e:	689a      	ldr	r2, [r3, #8]
 8008c30:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008c32:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8008c34:	689a      	ldr	r2, [r3, #8]
 8008c36:	f022 0202 	bic.w	r2, r2, #2
 8008c3a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8008c3c:	689a      	ldr	r2, [r3, #8]
 8008c3e:	7e21      	ldrb	r1, [r4, #24]
 8008c40:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8008c44:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8008c46:	f894 2020 	ldrb.w	r2, [r4, #32]
 8008c4a:	2a00      	cmp	r2, #0
 8008c4c:	d03e      	beq.n	8008ccc <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8008c4e:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8008c50:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8008c52:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008c56:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8008c58:	685a      	ldr	r2, [r3, #4]
 8008c5a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8008c5e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8008c60:	685a      	ldr	r2, [r3, #4]
 8008c62:	3901      	subs	r1, #1
 8008c64:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8008c68:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8008c6a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8008c6c:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8008c6e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8008c72:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8008c74:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8008c76:	3901      	subs	r1, #1
 8008c78:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8008c7c:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8008c7e:	689a      	ldr	r2, [r3, #8]
 8008c80:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8008c84:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8008c86:	689a      	ldr	r2, [r3, #8]
 8008c88:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 8008c8c:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8008c90:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8008c92:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8008c94:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8008c96:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008c9a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8008c9c:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8008c9e:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8008ca0:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8008ca4:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8008ca6:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8008ca8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008caa:	f023 0303 	bic.w	r3, r3, #3
 8008cae:	f043 0301 	orr.w	r3, r3, #1
 8008cb2:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8008cb4:	2300      	movs	r3, #0
 8008cb6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 8008cba:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8008cbc:	689a      	ldr	r2, [r3, #8]
 8008cbe:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8008cc2:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8008cc4:	689a      	ldr	r2, [r3, #8]
 8008cc6:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8008cca:	e7b2      	b.n	8008c32 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8008ccc:	685a      	ldr	r2, [r3, #4]
 8008cce:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8008cd2:	e7c9      	b.n	8008c68 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8008cd4:	2001      	movs	r0, #1
 8008cd6:	e7ed      	b.n	8008cb4 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8008cd8:	2001      	movs	r0, #1
 8008cda:	e7ee      	b.n	8008cba <HAL_ADC_Init+0x122>
 8008cdc:	40012300 	.word	0x40012300
 8008ce0:	0f000001 	.word	0x0f000001

08008ce4 <HAL_ADC_Start>:
{
 8008ce4:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8008ce6:	2300      	movs	r3, #0
 8008ce8:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8008cea:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8008cee:	2b01      	cmp	r3, #1
 8008cf0:	d069      	beq.n	8008dc6 <HAL_ADC_Start+0xe2>
 8008cf2:	2301      	movs	r3, #1
 8008cf4:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8008cf8:	6803      	ldr	r3, [r0, #0]
 8008cfa:	689a      	ldr	r2, [r3, #8]
 8008cfc:	07d2      	lsls	r2, r2, #31
 8008cfe:	d50b      	bpl.n	8008d18 <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8008d00:	689a      	ldr	r2, [r3, #8]
 8008d02:	07d1      	lsls	r1, r2, #31
 8008d04:	d41a      	bmi.n	8008d3c <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8008d06:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008d08:	f043 0310 	orr.w	r3, r3, #16
 8008d0c:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8008d0e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8008d10:	f043 0301 	orr.w	r3, r3, #1
 8008d14:	6443      	str	r3, [r0, #68]	@ 0x44
 8008d16:	e04c      	b.n	8008db2 <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 8008d18:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8008d1a:	492c      	ldr	r1, [pc, #176]	@ (8008dcc <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 8008d1c:	f042 0201 	orr.w	r2, r2, #1
 8008d20:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8008d22:	4a2b      	ldr	r2, [pc, #172]	@ (8008dd0 <HAL_ADC_Start+0xec>)
 8008d24:	6812      	ldr	r2, [r2, #0]
 8008d26:	fbb2 f2f1 	udiv	r2, r2, r1
 8008d2a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8008d2e:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 8008d30:	9a01      	ldr	r2, [sp, #4]
 8008d32:	2a00      	cmp	r2, #0
 8008d34:	d0e4      	beq.n	8008d00 <HAL_ADC_Start+0x1c>
      counter--;
 8008d36:	9a01      	ldr	r2, [sp, #4]
 8008d38:	3a01      	subs	r2, #1
 8008d3a:	e7f8      	b.n	8008d2e <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 8008d3c:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8008d3e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8008d42:	f022 0201 	bic.w	r2, r2, #1
 8008d46:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8008d4a:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8008d4c:	685a      	ldr	r2, [r3, #4]
 8008d4e:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8008d50:	bf41      	itttt	mi
 8008d52:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 8008d54:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 8008d58:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 8008d5c:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8008d5e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 8008d60:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8008d64:	bf1c      	itt	ne
 8008d66:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 8008d68:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8008d6c:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 8008d6e:	2200      	movs	r2, #0
 8008d70:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8008d74:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8008d78:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8008d7a:	4a16      	ldr	r2, [pc, #88]	@ (8008dd4 <HAL_ADC_Start+0xf0>)
 8008d7c:	6851      	ldr	r1, [r2, #4]
 8008d7e:	f011 0f1f 	tst.w	r1, #31
 8008d82:	4915      	ldr	r1, [pc, #84]	@ (8008dd8 <HAL_ADC_Start+0xf4>)
 8008d84:	d11c      	bne.n	8008dc0 <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8008d86:	428b      	cmp	r3, r1
 8008d88:	d007      	beq.n	8008d9a <HAL_ADC_Start+0xb6>
 8008d8a:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 8008d8e:	428b      	cmp	r3, r1
 8008d90:	d10c      	bne.n	8008dac <HAL_ADC_Start+0xc8>
 8008d92:	6852      	ldr	r2, [r2, #4]
 8008d94:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8008d98:	d10b      	bne.n	8008db2 <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8008d9a:	689a      	ldr	r2, [r3, #8]
 8008d9c:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8008da0:	d107      	bne.n	8008db2 <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8008da2:	689a      	ldr	r2, [r3, #8]
 8008da4:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8008da8:	609a      	str	r2, [r3, #8]
 8008daa:	e002      	b.n	8008db2 <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8008dac:	490b      	ldr	r1, [pc, #44]	@ (8008ddc <HAL_ADC_Start+0xf8>)
 8008dae:	428b      	cmp	r3, r1
 8008db0:	d002      	beq.n	8008db8 <HAL_ADC_Start+0xd4>
  return HAL_OK;
 8008db2:	2000      	movs	r0, #0
}
 8008db4:	b002      	add	sp, #8
 8008db6:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8008db8:	6852      	ldr	r2, [r2, #4]
 8008dba:	f012 0f10 	tst.w	r2, #16
 8008dbe:	e7eb      	b.n	8008d98 <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8008dc0:	428b      	cmp	r3, r1
 8008dc2:	d1f6      	bne.n	8008db2 <HAL_ADC_Start+0xce>
 8008dc4:	e7e9      	b.n	8008d9a <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 8008dc6:	2002      	movs	r0, #2
 8008dc8:	e7f4      	b.n	8008db4 <HAL_ADC_Start+0xd0>
 8008dca:	bf00      	nop
 8008dcc:	000f4240 	.word	0x000f4240
 8008dd0:	20000074 	.word	0x20000074
 8008dd4:	40012300 	.word	0x40012300
 8008dd8:	40012000 	.word	0x40012000
 8008ddc:	40012200 	.word	0x40012200

08008de0 <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
 8008de0:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8008de4:	2b01      	cmp	r3, #1
 8008de6:	d014      	beq.n	8008e12 <HAL_ADC_Stop+0x32>
  __HAL_ADC_DISABLE(hadc);
 8008de8:	6803      	ldr	r3, [r0, #0]
 8008dea:	689a      	ldr	r2, [r3, #8]
 8008dec:	f022 0201 	bic.w	r2, r2, #1
 8008df0:	609a      	str	r2, [r3, #8]
  if (HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 8008df2:	689b      	ldr	r3, [r3, #8]
 8008df4:	07db      	lsls	r3, r3, #31
 8008df6:	d407      	bmi.n	8008e08 <HAL_ADC_Stop+0x28>
    ADC_STATE_CLR_SET(hadc->State,
 8008df8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008dfa:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8008dfe:	f023 0301 	bic.w	r3, r3, #1
 8008e02:	f043 0301 	orr.w	r3, r3, #1
 8008e06:	6403      	str	r3, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 8008e08:	2300      	movs	r3, #0
 8008e0a:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  return HAL_OK;
 8008e0e:	4618      	mov	r0, r3
 8008e10:	4770      	bx	lr
  __HAL_LOCK(hadc);
 8008e12:	2002      	movs	r0, #2
}
 8008e14:	4770      	bx	lr

08008e16 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8008e16:	6803      	ldr	r3, [r0, #0]
 8008e18:	689a      	ldr	r2, [r3, #8]
 8008e1a:	0552      	lsls	r2, r2, #21
{
 8008e1c:	b570      	push	{r4, r5, r6, lr}
 8008e1e:	4604      	mov	r4, r0
 8008e20:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8008e22:	d50b      	bpl.n	8008e3c <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 8008e24:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8008e26:	05de      	lsls	r6, r3, #23
 8008e28:	d508      	bpl.n	8008e3c <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8008e2a:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008e2c:	f043 0320 	orr.w	r3, r3, #32
 8008e30:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 8008e32:	2300      	movs	r3, #0
 8008e34:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 8008e38:	2001      	movs	r0, #1
}
 8008e3a:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8008e3c:	f7ff fe90 	bl	8008b60 <HAL_GetTick>
 8008e40:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8008e42:	6823      	ldr	r3, [r4, #0]
 8008e44:	681a      	ldr	r2, [r3, #0]
 8008e46:	0791      	lsls	r1, r2, #30
 8008e48:	d50c      	bpl.n	8008e64 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8008e4a:	f06f 0212 	mvn.w	r2, #18
 8008e4e:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8008e50:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8008e52:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8008e56:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8008e58:	689a      	ldr	r2, [r3, #8]
 8008e5a:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 8008e5e:	d017      	beq.n	8008e90 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 8008e60:	2000      	movs	r0, #0
 8008e62:	e7ea      	b.n	8008e3a <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 8008e64:	1c68      	adds	r0, r5, #1
 8008e66:	d0ed      	beq.n	8008e44 <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008e68:	b965      	cbnz	r5, 8008e84 <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8008e6a:	6823      	ldr	r3, [r4, #0]
 8008e6c:	681b      	ldr	r3, [r3, #0]
 8008e6e:	f013 0302 	ands.w	r3, r3, #2
 8008e72:	d1e6      	bne.n	8008e42 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8008e74:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 8008e76:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8008e7a:	f042 0204 	orr.w	r2, r2, #4
 8008e7e:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 8008e80:	2003      	movs	r0, #3
 8008e82:	e7da      	b.n	8008e3a <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008e84:	f7ff fe6c 	bl	8008b60 <HAL_GetTick>
 8008e88:	1b80      	subs	r0, r0, r6
 8008e8a:	42a8      	cmp	r0, r5
 8008e8c:	d8ed      	bhi.n	8008e6a <HAL_ADC_PollForConversion+0x54>
 8008e8e:	e7d8      	b.n	8008e42 <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8008e90:	7e22      	ldrb	r2, [r4, #24]
 8008e92:	2a00      	cmp	r2, #0
 8008e94:	d1e4      	bne.n	8008e60 <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8008e96:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8008e98:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 8008e9c:	d002      	beq.n	8008ea4 <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8008e9e:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8008ea0:	055a      	lsls	r2, r3, #21
 8008ea2:	d4dd      	bmi.n	8008e60 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8008ea4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008ea6:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008eaa:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8008eac:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008eae:	04db      	lsls	r3, r3, #19
 8008eb0:	d4d6      	bmi.n	8008e60 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8008eb2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008eb4:	f043 0301 	orr.w	r3, r3, #1
 8008eb8:	6423      	str	r3, [r4, #64]	@ 0x40
 8008eba:	e7d1      	b.n	8008e60 <HAL_ADC_PollForConversion+0x4a>

08008ebc <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8008ebc:	6803      	ldr	r3, [r0, #0]
 8008ebe:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 8008ec0:	4770      	bx	lr
	...

08008ec4 <HAL_ADC_ConfigChannel>:
{
 8008ec4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8008ec6:	2300      	movs	r3, #0
 8008ec8:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8008eca:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 8008ece:	2b01      	cmp	r3, #1
{
 8008ed0:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 8008ed2:	f000 8086 	beq.w	8008fe2 <HAL_ADC_ConfigChannel+0x11e>
 8008ed6:	2301      	movs	r3, #1
 8008ed8:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8008edc:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8008ede:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8008ee0:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8008ee2:	2809      	cmp	r0, #9
 8008ee4:	b284      	uxth	r4, r0
 8008ee6:	d933      	bls.n	8008f50 <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8008ee8:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8008eec:	68df      	ldr	r7, [r3, #12]
 8008eee:	3a1e      	subs	r2, #30
 8008ef0:	f04f 0c07 	mov.w	ip, #7
 8008ef4:	fa0c fc02 	lsl.w	ip, ip, r2
 8008ef8:	ea27 070c 	bic.w	r7, r7, ip
 8008efc:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8008efe:	68df      	ldr	r7, [r3, #12]
 8008f00:	fa06 f202 	lsl.w	r2, r6, r2
 8008f04:	433a      	orrs	r2, r7
 8008f06:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8008f08:	6849      	ldr	r1, [r1, #4]
 8008f0a:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8008f0c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8008f10:	d82d      	bhi.n	8008f6e <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8008f12:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8008f14:	3a05      	subs	r2, #5
 8008f16:	261f      	movs	r6, #31
 8008f18:	4096      	lsls	r6, r2
 8008f1a:	ea21 0106 	bic.w	r1, r1, r6
 8008f1e:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8008f20:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8008f22:	fa04 f202 	lsl.w	r2, r4, r2
 8008f26:	430a      	orrs	r2, r1
 8008f28:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8008f2a:	4a2f      	ldr	r2, [pc, #188]	@ (8008fe8 <HAL_ADC_ConfigChannel+0x124>)
 8008f2c:	4293      	cmp	r3, r2
 8008f2e:	d10a      	bne.n	8008f46 <HAL_ADC_ConfigChannel+0x82>
 8008f30:	2812      	cmp	r0, #18
 8008f32:	d137      	bne.n	8008fa4 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8008f34:	4b2d      	ldr	r3, [pc, #180]	@ (8008fec <HAL_ADC_ConfigChannel+0x128>)
 8008f36:	685a      	ldr	r2, [r3, #4]
 8008f38:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8008f3c:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8008f3e:	685a      	ldr	r2, [r3, #4]
 8008f40:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8008f44:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8008f46:	2000      	movs	r0, #0
 8008f48:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 8008f4c:	b003      	add	sp, #12
 8008f4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8008f50:	691a      	ldr	r2, [r3, #16]
 8008f52:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 8008f56:	2707      	movs	r7, #7
 8008f58:	fa07 f70c 	lsl.w	r7, r7, ip
 8008f5c:	ea22 0207 	bic.w	r2, r2, r7
 8008f60:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8008f62:	691a      	ldr	r2, [r3, #16]
 8008f64:	fa06 f60c 	lsl.w	r6, r6, ip
 8008f68:	4316      	orrs	r6, r2
 8008f6a:	611e      	str	r6, [r3, #16]
 8008f6c:	e7cc      	b.n	8008f08 <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 8008f6e:	290c      	cmp	r1, #12
 8008f70:	f04f 011f 	mov.w	r1, #31
 8008f74:	d80b      	bhi.n	8008f8e <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8008f76:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 8008f78:	3a23      	subs	r2, #35	@ 0x23
 8008f7a:	4091      	lsls	r1, r2
 8008f7c:	ea26 0101 	bic.w	r1, r6, r1
 8008f80:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8008f82:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8008f84:	fa04 f202 	lsl.w	r2, r4, r2
 8008f88:	430a      	orrs	r2, r1
 8008f8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8008f8c:	e7cd      	b.n	8008f2a <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8008f8e:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 8008f90:	3a41      	subs	r2, #65	@ 0x41
 8008f92:	4091      	lsls	r1, r2
 8008f94:	ea26 0101 	bic.w	r1, r6, r1
 8008f98:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8008f9a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8008f9c:	4094      	lsls	r4, r2
 8008f9e:	430c      	orrs	r4, r1
 8008fa0:	62dc      	str	r4, [r3, #44]	@ 0x2c
 8008fa2:	e7c2      	b.n	8008f2a <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8008fa4:	4b12      	ldr	r3, [pc, #72]	@ (8008ff0 <HAL_ADC_ConfigChannel+0x12c>)
 8008fa6:	4298      	cmp	r0, r3
 8008fa8:	d001      	beq.n	8008fae <HAL_ADC_ConfigChannel+0xea>
 8008faa:	2811      	cmp	r0, #17
 8008fac:	d1cb      	bne.n	8008f46 <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8008fae:	4b0f      	ldr	r3, [pc, #60]	@ (8008fec <HAL_ADC_ConfigChannel+0x128>)
 8008fb0:	685a      	ldr	r2, [r3, #4]
 8008fb2:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 8008fb6:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8008fb8:	685a      	ldr	r2, [r3, #4]
 8008fba:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8008fbe:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8008fc0:	4b0b      	ldr	r3, [pc, #44]	@ (8008ff0 <HAL_ADC_ConfigChannel+0x12c>)
 8008fc2:	4298      	cmp	r0, r3
 8008fc4:	d1bf      	bne.n	8008f46 <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8008fc6:	4b0b      	ldr	r3, [pc, #44]	@ (8008ff4 <HAL_ADC_ConfigChannel+0x130>)
 8008fc8:	4a0b      	ldr	r2, [pc, #44]	@ (8008ff8 <HAL_ADC_ConfigChannel+0x134>)
 8008fca:	681b      	ldr	r3, [r3, #0]
 8008fcc:	fbb3 f3f2 	udiv	r3, r3, r2
 8008fd0:	220a      	movs	r2, #10
 8008fd2:	4353      	muls	r3, r2
        counter--;
 8008fd4:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 8008fd6:	9b01      	ldr	r3, [sp, #4]
 8008fd8:	2b00      	cmp	r3, #0
 8008fda:	d0b4      	beq.n	8008f46 <HAL_ADC_ConfigChannel+0x82>
        counter--;
 8008fdc:	9b01      	ldr	r3, [sp, #4]
 8008fde:	3b01      	subs	r3, #1
 8008fe0:	e7f8      	b.n	8008fd4 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 8008fe2:	2002      	movs	r0, #2
 8008fe4:	e7b2      	b.n	8008f4c <HAL_ADC_ConfigChannel+0x88>
 8008fe6:	bf00      	nop
 8008fe8:	40012000 	.word	0x40012000
 8008fec:	40012300 	.word	0x40012300
 8008ff0:	10000012 	.word	0x10000012
 8008ff4:	20000074 	.word	0x20000074
 8008ff8:	000f4240 	.word	0x000f4240

08008ffc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8008ffc:	4907      	ldr	r1, [pc, #28]	@ (800901c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8008ffe:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009000:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009004:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009006:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009008:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800900c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800900e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009010:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8009014:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8009018:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800901a:	4770      	bx	lr
 800901c:	e000ed00 	.word	0xe000ed00

08009020 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009020:	4b16      	ldr	r3, [pc, #88]	@ (800907c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009022:	b530      	push	{r4, r5, lr}
 8009024:	68dc      	ldr	r4, [r3, #12]
 8009026:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800902a:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800902e:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009030:	2b04      	cmp	r3, #4
 8009032:	bf28      	it	cs
 8009034:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009036:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009038:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800903c:	bf8c      	ite	hi
 800903e:	3c03      	subhi	r4, #3
 8009040:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009042:	fa05 f303 	lsl.w	r3, r5, r3
 8009046:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800904a:	40a5      	lsls	r5, r4
 800904c:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009050:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8009052:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009054:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009058:	bfac      	ite	ge
 800905a:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800905e:	4a08      	ldrlt	r2, [pc, #32]	@ (8009080 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009060:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009064:	bfb8      	it	lt
 8009066:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800906a:	b2db      	uxtb	r3, r3
 800906c:	bfaa      	itet	ge
 800906e:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009072:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009074:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009078:	bd30      	pop	{r4, r5, pc}
 800907a:	bf00      	nop
 800907c:	e000ed00 	.word	0xe000ed00
 8009080:	e000ed14 	.word	0xe000ed14

08009084 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009084:	2800      	cmp	r0, #0
 8009086:	db07      	blt.n	8009098 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009088:	4a04      	ldr	r2, [pc, #16]	@ (800909c <HAL_NVIC_EnableIRQ+0x18>)
 800908a:	0941      	lsrs	r1, r0, #5
 800908c:	2301      	movs	r3, #1
 800908e:	f000 001f 	and.w	r0, r0, #31
 8009092:	4083      	lsls	r3, r0
 8009094:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009098:	4770      	bx	lr
 800909a:	bf00      	nop
 800909c:	e000e100 	.word	0xe000e100

080090a0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80090a0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80090a2:	4604      	mov	r4, r0
 80090a4:	b150      	cbz	r0, 80090bc <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80090a6:	7943      	ldrb	r3, [r0, #5]
 80090a8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80090ac:	b913      	cbnz	r3, 80090b4 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80090ae:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80090b0:	f7f8 ff24 	bl	8001efc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80090b4:	2301      	movs	r3, #1
 80090b6:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80090b8:	2000      	movs	r0, #0
}
 80090ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80090bc:	2001      	movs	r0, #1
 80090be:	e7fc      	b.n	80090ba <HAL_CRC_Init+0x1a>

080090c0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80090c0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80090c2:	4604      	mov	r4, r0
 80090c4:	b320      	cbz	r0, 8009110 <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80090c6:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 80090ca:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80090ce:	b91b      	cbnz	r3, 80090d8 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80090d0:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80090d4:	f7f8 ff2a 	bl	8001f2c <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80090d8:	2302      	movs	r3, #2
 80090da:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80090de:	6823      	ldr	r3, [r4, #0]
 80090e0:	6861      	ldr	r1, [r4, #4]
 80090e2:	681a      	ldr	r2, [r3, #0]
 80090e4:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 80090e8:	430a      	orrs	r2, r1
 80090ea:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80090ec:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80090ee:	68a1      	ldr	r1, [r4, #8]
 80090f0:	f022 0207 	bic.w	r2, r2, #7
 80090f4:	430a      	orrs	r2, r1
 80090f6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80090f8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80090fa:	68e1      	ldr	r1, [r4, #12]
 80090fc:	f36f 020d 	bfc	r2, #0, #14
 8009100:	430a      	orrs	r2, r1
 8009102:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009104:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009106:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009108:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800910a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 800910e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009110:	2001      	movs	r0, #1
 8009112:	e7fc      	b.n	800910e <HAL_DMA2D_Init+0x4e>

08009114 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8009114:	4770      	bx	lr

08009116 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8009116:	4770      	bx	lr

08009118 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8009118:	6803      	ldr	r3, [r0, #0]
{
 800911a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800911c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800911e:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8009120:	07f2      	lsls	r2, r6, #31
{
 8009122:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8009124:	d514      	bpl.n	8009150 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8009126:	05e9      	lsls	r1, r5, #23
 8009128:	d512      	bpl.n	8009150 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800912a:	681a      	ldr	r2, [r3, #0]
 800912c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8009130:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8009132:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8009134:	f042 0201 	orr.w	r2, r2, #1
 8009138:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800913a:	2201      	movs	r2, #1
 800913c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800913e:	2304      	movs	r3, #4
 8009140:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8009144:	2300      	movs	r3, #0
 8009146:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800914a:	6943      	ldr	r3, [r0, #20]
 800914c:	b103      	cbz	r3, 8009150 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800914e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8009150:	06b2      	lsls	r2, r6, #26
 8009152:	d516      	bpl.n	8009182 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8009154:	04ab      	lsls	r3, r5, #18
 8009156:	d514      	bpl.n	8009182 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8009158:	6823      	ldr	r3, [r4, #0]
 800915a:	681a      	ldr	r2, [r3, #0]
 800915c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8009160:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8009162:	2220      	movs	r2, #32
 8009164:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8009166:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009168:	f043 0302 	orr.w	r3, r3, #2
 800916c:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800916e:	2304      	movs	r3, #4
 8009170:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8009174:	2300      	movs	r3, #0
 8009176:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800917a:	6963      	ldr	r3, [r4, #20]
 800917c:	b10b      	cbz	r3, 8009182 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800917e:	4620      	mov	r0, r4
 8009180:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8009182:	0730      	lsls	r0, r6, #28
 8009184:	d516      	bpl.n	80091b4 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8009186:	0529      	lsls	r1, r5, #20
 8009188:	d514      	bpl.n	80091b4 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800918a:	6823      	ldr	r3, [r4, #0]
 800918c:	681a      	ldr	r2, [r3, #0]
 800918e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8009192:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8009194:	2208      	movs	r2, #8
 8009196:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8009198:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800919a:	f043 0304 	orr.w	r3, r3, #4
 800919e:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80091a0:	2304      	movs	r3, #4
 80091a2:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80091a6:	2300      	movs	r3, #0
 80091a8:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80091ac:	6963      	ldr	r3, [r4, #20]
 80091ae:	b10b      	cbz	r3, 80091b4 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 80091b0:	4620      	mov	r0, r4
 80091b2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80091b4:	0772      	lsls	r2, r6, #29
 80091b6:	d50b      	bpl.n	80091d0 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80091b8:	056b      	lsls	r3, r5, #21
 80091ba:	d509      	bpl.n	80091d0 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80091bc:	6823      	ldr	r3, [r4, #0]
 80091be:	681a      	ldr	r2, [r3, #0]
 80091c0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80091c4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80091c6:	2204      	movs	r2, #4
 80091c8:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80091ca:	4620      	mov	r0, r4
 80091cc:	f7ff ffa2 	bl	8009114 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80091d0:	07b0      	lsls	r0, r6, #30
 80091d2:	d514      	bpl.n	80091fe <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80091d4:	05a9      	lsls	r1, r5, #22
 80091d6:	d512      	bpl.n	80091fe <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80091d8:	6823      	ldr	r3, [r4, #0]
 80091da:	681a      	ldr	r2, [r3, #0]
 80091dc:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80091e0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80091e2:	2202      	movs	r2, #2
 80091e4:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80091e6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80091e8:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80091ea:	2301      	movs	r3, #1
 80091ec:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80091f0:	2300      	movs	r3, #0
 80091f2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 80091f6:	6923      	ldr	r3, [r4, #16]
 80091f8:	b10b      	cbz	r3, 80091fe <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80091fa:	4620      	mov	r0, r4
 80091fc:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80091fe:	06f2      	lsls	r2, r6, #27
 8009200:	d513      	bpl.n	800922a <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8009202:	04eb      	lsls	r3, r5, #19
 8009204:	d511      	bpl.n	800922a <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8009206:	6823      	ldr	r3, [r4, #0]
 8009208:	681a      	ldr	r2, [r3, #0]
 800920a:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800920e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8009210:	2210      	movs	r2, #16
 8009212:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8009214:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8009216:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8009218:	2301      	movs	r3, #1
 800921a:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800921e:	2300      	movs	r3, #0
 8009220:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8009224:	4620      	mov	r0, r4
 8009226:	f7ff ff76 	bl	8009116 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800922a:	bd70      	pop	{r4, r5, r6, pc}

0800922c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800922c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800922e:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8009232:	2a01      	cmp	r2, #1
{
 8009234:	4603      	mov	r3, r0
 8009236:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800923a:	d02b      	beq.n	8009294 <HAL_DMA2D_ConfigLayer+0x68>
 800923c:	2201      	movs	r2, #1
 800923e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009242:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009246:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 800924a:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 800924e:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8009250:	4f17      	ldr	r7, [pc, #92]	@ (80092b0 <HAL_DMA2D_ConfigLayer+0x84>)
 8009252:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009256:	3c09      	subs	r4, #9
 8009258:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800925a:	bf9c      	itt	ls
 800925c:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8009260:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009262:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009266:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009268:	bf88      	it	hi
 800926a:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800926e:	b991      	cbnz	r1, 8009296 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8009270:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8009272:	4039      	ands	r1, r7
 8009274:	4301      	orrs	r1, r0
 8009276:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009278:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800927a:	6999      	ldr	r1, [r3, #24]
 800927c:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800927e:	d803      	bhi.n	8009288 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8009280:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8009282:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8009286:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8009288:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800928a:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800928c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8009290:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8009294:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009296:	69d1      	ldr	r1, [r2, #28]
 8009298:	4039      	ands	r1, r7
 800929a:	4301      	orrs	r1, r0
 800929c:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800929e:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80092a0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80092a2:	6989      	ldr	r1, [r1, #24]
 80092a4:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80092a6:	bf9c      	itt	ls
 80092a8:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 80092ac:	6215      	strls	r5, [r2, #32]
 80092ae:	e7eb      	b.n	8009288 <HAL_DMA2D_ConfigLayer+0x5c>
 80092b0:	00fcfff0 	.word	0x00fcfff0

080092b4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80092b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80092b8:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8009478 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80092bc:	4a6c      	ldr	r2, [pc, #432]	@ (8009470 <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092be:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80092c0:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80092c2:	2401      	movs	r4, #1
 80092c4:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80092c6:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80092ca:	43ac      	bics	r4, r5
 80092cc:	f040 80b7 	bne.w	800943e <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80092d0:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092d2:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80092d4:	f005 0403 	and.w	r4, r5, #3
 80092d8:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092dc:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80092e0:	1e67      	subs	r7, r4, #1
 80092e2:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092e4:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80092e8:	d834      	bhi.n	8009354 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80092ea:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80092ec:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 80092f0:	68cf      	ldr	r7, [r1, #12]
 80092f2:	fa07 f708 	lsl.w	r7, r7, r8
 80092f6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80092fa:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80092fc:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80092fe:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009302:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8009306:	409f      	lsls	r7, r3
 8009308:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800930c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800930e:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009310:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009314:	688f      	ldr	r7, [r1, #8]
 8009316:	fa07 f708 	lsl.w	r7, r7, r8
 800931a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800931e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8009320:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009322:	d119      	bne.n	8009358 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8009324:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8009328:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800932c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009330:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009334:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8009338:	f04f 0e0f 	mov.w	lr, #15
 800933c:	fa0e fe0b 	lsl.w	lr, lr, fp
 8009340:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009344:	690f      	ldr	r7, [r1, #16]
 8009346:	fa07 f70b 	lsl.w	r7, r7, fp
 800934a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800934e:	f8ca 7020 	str.w	r7, [sl, #32]
 8009352:	e001      	b.n	8009358 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009354:	2c03      	cmp	r4, #3
 8009356:	d1da      	bne.n	800930e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8009358:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800935a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800935e:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009362:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009364:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8009368:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800936a:	d068      	beq.n	800943e <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800936c:	2400      	movs	r4, #0
 800936e:	9401      	str	r4, [sp, #4]
 8009370:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8009374:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8009378:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800937c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8009380:	f023 0703 	bic.w	r7, r3, #3
 8009384:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8009388:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800938c:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8009390:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009392:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009396:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009398:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800939c:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80093a0:	240f      	movs	r4, #15
 80093a2:	fa04 f40c 	lsl.w	r4, r4, ip
 80093a6:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80093aa:	4c32      	ldr	r4, [pc, #200]	@ (8009474 <HAL_GPIO_Init+0x1c0>)
 80093ac:	42a0      	cmp	r0, r4
 80093ae:	d04d      	beq.n	800944c <HAL_GPIO_Init+0x198>
 80093b0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093b4:	42a0      	cmp	r0, r4
 80093b6:	d04b      	beq.n	8009450 <HAL_GPIO_Init+0x19c>
 80093b8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093bc:	42a0      	cmp	r0, r4
 80093be:	d049      	beq.n	8009454 <HAL_GPIO_Init+0x1a0>
 80093c0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093c4:	42a0      	cmp	r0, r4
 80093c6:	d047      	beq.n	8009458 <HAL_GPIO_Init+0x1a4>
 80093c8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093cc:	42a0      	cmp	r0, r4
 80093ce:	d045      	beq.n	800945c <HAL_GPIO_Init+0x1a8>
 80093d0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093d4:	42a0      	cmp	r0, r4
 80093d6:	d043      	beq.n	8009460 <HAL_GPIO_Init+0x1ac>
 80093d8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093dc:	42a0      	cmp	r0, r4
 80093de:	d041      	beq.n	8009464 <HAL_GPIO_Init+0x1b0>
 80093e0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093e4:	42a0      	cmp	r0, r4
 80093e6:	d03f      	beq.n	8009468 <HAL_GPIO_Init+0x1b4>
 80093e8:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093ec:	42a0      	cmp	r0, r4
 80093ee:	d03d      	beq.n	800946c <HAL_GPIO_Init+0x1b8>
 80093f0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 80093f4:	42a0      	cmp	r0, r4
 80093f6:	bf14      	ite	ne
 80093f8:	240a      	movne	r4, #10
 80093fa:	2409      	moveq	r4, #9
 80093fc:	fa04 f40c 	lsl.w	r4, r4, ip
 8009400:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009404:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8009406:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8009408:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800940a:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 800940e:	bf0c      	ite	eq
 8009410:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8009412:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8009414:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8009416:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009418:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 800941c:	bf0c      	ite	eq
 800941e:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8009420:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8009422:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8009424:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009426:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800942a:	bf0c      	ite	eq
 800942c:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800942e:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8009430:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009432:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009434:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8009436:	bf54      	ite	pl
 8009438:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800943a:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 800943c:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800943e:	3301      	adds	r3, #1
 8009440:	2b10      	cmp	r3, #16
 8009442:	f47f af3d 	bne.w	80092c0 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8009446:	b003      	add	sp, #12
 8009448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800944c:	2400      	movs	r4, #0
 800944e:	e7d5      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009450:	2401      	movs	r4, #1
 8009452:	e7d3      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009454:	2402      	movs	r4, #2
 8009456:	e7d1      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009458:	2403      	movs	r4, #3
 800945a:	e7cf      	b.n	80093fc <HAL_GPIO_Init+0x148>
 800945c:	2404      	movs	r4, #4
 800945e:	e7cd      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009460:	2405      	movs	r4, #5
 8009462:	e7cb      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009464:	2406      	movs	r4, #6
 8009466:	e7c9      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009468:	2407      	movs	r4, #7
 800946a:	e7c7      	b.n	80093fc <HAL_GPIO_Init+0x148>
 800946c:	2408      	movs	r4, #8
 800946e:	e7c5      	b.n	80093fc <HAL_GPIO_Init+0x148>
 8009470:	40013c00 	.word	0x40013c00
 8009474:	40020000 	.word	0x40020000
 8009478:	40023800 	.word	0x40023800

0800947c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800947c:	6903      	ldr	r3, [r0, #16]
 800947e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009480:	bf14      	ite	ne
 8009482:	2001      	movne	r0, #1
 8009484:	2000      	moveq	r0, #0
 8009486:	4770      	bx	lr

08009488 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009488:	b10a      	cbz	r2, 800948e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800948a:	6181      	str	r1, [r0, #24]
  }
}
 800948c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800948e:	0409      	lsls	r1, r1, #16
 8009490:	e7fb      	b.n	800948a <HAL_GPIO_WritePin+0x2>

08009492 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009492:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009494:	ea01 0203 	and.w	r2, r1, r3
 8009498:	ea21 0103 	bic.w	r1, r1, r3
 800949c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80094a0:	6181      	str	r1, [r0, #24]
}
 80094a2:	4770      	bx	lr

080094a4 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094a4:	6801      	ldr	r1, [r0, #0]
 80094a6:	694b      	ldr	r3, [r1, #20]
 80094a8:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 80094ac:	f04f 0200 	mov.w	r2, #0
 80094b0:	d010      	beq.n	80094d4 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094b2:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 80094b6:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80094b8:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80094ba:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80094bc:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80094c0:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094c4:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80094c6:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094ca:	f043 0304 	orr.w	r3, r3, #4
 80094ce:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 80094d0:	2001      	movs	r0, #1
 80094d2:	4770      	bx	lr
  }
  return HAL_OK;
 80094d4:	4618      	mov	r0, r3
}
 80094d6:	4770      	bx	lr

080094d8 <I2C_WaitOnFlagUntilTimeout>:
{
 80094d8:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80094dc:	4606      	mov	r6, r0
 80094de:	460f      	mov	r7, r1
 80094e0:	4691      	mov	r9, r2
 80094e2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80094e4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80094e8:	6833      	ldr	r3, [r6, #0]
 80094ea:	f1ba 0f01 	cmp.w	sl, #1
 80094ee:	bf0c      	ite	eq
 80094f0:	695c      	ldreq	r4, [r3, #20]
 80094f2:	699c      	ldrne	r4, [r3, #24]
 80094f4:	ea27 0404 	bic.w	r4, r7, r4
 80094f8:	b2a4      	uxth	r4, r4
 80094fa:	fab4 f484 	clz	r4, r4
 80094fe:	0964      	lsrs	r4, r4, #5
 8009500:	45a1      	cmp	r9, r4
 8009502:	d001      	beq.n	8009508 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8009504:	2000      	movs	r0, #0
 8009506:	e025      	b.n	8009554 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8009508:	1c6a      	adds	r2, r5, #1
 800950a:	d0ee      	beq.n	80094ea <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800950c:	f7ff fb28 	bl	8008b60 <HAL_GetTick>
 8009510:	9b08      	ldr	r3, [sp, #32]
 8009512:	1ac0      	subs	r0, r0, r3
 8009514:	42a8      	cmp	r0, r5
 8009516:	d801      	bhi.n	800951c <I2C_WaitOnFlagUntilTimeout+0x44>
 8009518:	2d00      	cmp	r5, #0
 800951a:	d1e5      	bne.n	80094e8 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800951c:	6833      	ldr	r3, [r6, #0]
 800951e:	f1ba 0f01 	cmp.w	sl, #1
 8009522:	bf0c      	ite	eq
 8009524:	695b      	ldreq	r3, [r3, #20]
 8009526:	699b      	ldrne	r3, [r3, #24]
 8009528:	ea27 0303 	bic.w	r3, r7, r3
 800952c:	b29b      	uxth	r3, r3
 800952e:	fab3 f383 	clz	r3, r3
 8009532:	095b      	lsrs	r3, r3, #5
 8009534:	4599      	cmp	r9, r3
 8009536:	d1d7      	bne.n	80094e8 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8009538:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800953a:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800953c:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800953e:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009542:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009546:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8009548:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800954c:	f042 0220 	orr.w	r2, r2, #32
 8009550:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 8009552:	2001      	movs	r0, #1
}
 8009554:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08009558 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8009558:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800955c:	4604      	mov	r4, r0
 800955e:	460f      	mov	r7, r1
 8009560:	4616      	mov	r6, r2
 8009562:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009564:	6825      	ldr	r5, [r4, #0]
 8009566:	6968      	ldr	r0, [r5, #20]
 8009568:	ea27 0000 	bic.w	r0, r7, r0
 800956c:	b280      	uxth	r0, r0
 800956e:	b1c0      	cbz	r0, 80095a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009570:	696b      	ldr	r3, [r5, #20]
 8009572:	055a      	lsls	r2, r3, #21
 8009574:	d517      	bpl.n	80095a6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009576:	682b      	ldr	r3, [r5, #0]
 8009578:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800957c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800957e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8009582:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8009584:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009586:	2300      	movs	r3, #0
 8009588:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800958a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800958e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009592:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009594:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009598:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800959a:	2300      	movs	r3, #0
 800959c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 80095a0:	2001      	movs	r0, #1
}
 80095a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80095a6:	1c73      	adds	r3, r6, #1
 80095a8:	d0dd      	beq.n	8009566 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80095aa:	f7ff fad9 	bl	8008b60 <HAL_GetTick>
 80095ae:	eba0 0008 	sub.w	r0, r0, r8
 80095b2:	42b0      	cmp	r0, r6
 80095b4:	d801      	bhi.n	80095ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 80095b6:	2e00      	cmp	r6, #0
 80095b8:	d1d4      	bne.n	8009564 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80095ba:	6823      	ldr	r3, [r4, #0]
 80095bc:	695a      	ldr	r2, [r3, #20]
 80095be:	ea27 0202 	bic.w	r2, r7, r2
 80095c2:	b292      	uxth	r2, r2
 80095c4:	2a00      	cmp	r2, #0
 80095c6:	d0cd      	beq.n	8009564 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 80095c8:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 80095ca:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80095cc:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80095ce:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80095d2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80095d6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80095d8:	4313      	orrs	r3, r2
 80095da:	e7dd      	b.n	8009598 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080095dc <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80095dc:	b570      	push	{r4, r5, r6, lr}
 80095de:	4604      	mov	r4, r0
 80095e0:	460d      	mov	r5, r1
 80095e2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095e4:	6823      	ldr	r3, [r4, #0]
 80095e6:	695b      	ldr	r3, [r3, #20]
 80095e8:	061b      	lsls	r3, r3, #24
 80095ea:	d501      	bpl.n	80095f0 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80095ec:	2000      	movs	r0, #0
 80095ee:	e01e      	b.n	800962e <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80095f0:	4620      	mov	r0, r4
 80095f2:	f7ff ff57 	bl	80094a4 <I2C_IsAcknowledgeFailed>
 80095f6:	b9c8      	cbnz	r0, 800962c <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80095f8:	1c6a      	adds	r2, r5, #1
 80095fa:	d0f3      	beq.n	80095e4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80095fc:	f7ff fab0 	bl	8008b60 <HAL_GetTick>
 8009600:	1b80      	subs	r0, r0, r6
 8009602:	42a8      	cmp	r0, r5
 8009604:	d801      	bhi.n	800960a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8009606:	2d00      	cmp	r5, #0
 8009608:	d1ec      	bne.n	80095e4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800960a:	6823      	ldr	r3, [r4, #0]
 800960c:	695b      	ldr	r3, [r3, #20]
 800960e:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8009612:	d1e7      	bne.n	80095e4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8009614:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8009616:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8009618:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800961c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009620:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8009622:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009626:	f042 0220 	orr.w	r2, r2, #32
 800962a:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800962c:	2001      	movs	r0, #1
}
 800962e:	bd70      	pop	{r4, r5, r6, pc}

08009630 <I2C_RequestMemoryWrite>:
{
 8009630:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009634:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009636:	6802      	ldr	r2, [r0, #0]
{
 8009638:	b085      	sub	sp, #20
 800963a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800963e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009640:	6813      	ldr	r3, [r2, #0]
 8009642:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009646:	6013      	str	r3, [r2, #0]
{
 8009648:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800964a:	463b      	mov	r3, r7
 800964c:	f8cd 8000 	str.w	r8, [sp]
 8009650:	2200      	movs	r2, #0
 8009652:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8009656:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8009658:	f7ff ff3e 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 800965c:	6823      	ldr	r3, [r4, #0]
 800965e:	b138      	cbz	r0, 8009670 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009660:	681b      	ldr	r3, [r3, #0]
 8009662:	05db      	lsls	r3, r3, #23
 8009664:	d502      	bpl.n	800966c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009666:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800966a:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800966c:	2603      	movs	r6, #3
 800966e:	e020      	b.n	80096b2 <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009670:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8009674:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8009676:	491a      	ldr	r1, [pc, #104]	@ (80096e0 <I2C_RequestMemoryWrite+0xb0>)
 8009678:	4643      	mov	r3, r8
 800967a:	463a      	mov	r2, r7
 800967c:	4620      	mov	r0, r4
 800967e:	f7ff ff6b 	bl	8009558 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8009682:	b9a8      	cbnz	r0, 80096b0 <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009684:	6823      	ldr	r3, [r4, #0]
 8009686:	9003      	str	r0, [sp, #12]
 8009688:	695a      	ldr	r2, [r3, #20]
 800968a:	9203      	str	r2, [sp, #12]
 800968c:	699b      	ldr	r3, [r3, #24]
 800968e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009690:	4642      	mov	r2, r8
 8009692:	4639      	mov	r1, r7
 8009694:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009696:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009698:	f7ff ffa0 	bl	80095dc <I2C_WaitOnTXEFlagUntilTimeout>
 800969c:	4606      	mov	r6, r0
 800969e:	b160      	cbz	r0, 80096ba <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096a0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80096a2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096a4:	bf01      	itttt	eq
 80096a6:	6822      	ldreq	r2, [r4, #0]
 80096a8:	6813      	ldreq	r3, [r2, #0]
 80096aa:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 80096ae:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 80096b0:	2601      	movs	r6, #1
}
 80096b2:	4630      	mov	r0, r6
 80096b4:	b005      	add	sp, #20
 80096b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80096ba:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80096be:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80096c0:	d102      	bne.n	80096c8 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80096c2:	b2ed      	uxtb	r5, r5
 80096c4:	611d      	str	r5, [r3, #16]
 80096c6:	e7f4      	b.n	80096b2 <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80096c8:	0a2a      	lsrs	r2, r5, #8
 80096ca:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80096cc:	4639      	mov	r1, r7
 80096ce:	4642      	mov	r2, r8
 80096d0:	4620      	mov	r0, r4
 80096d2:	f7ff ff83 	bl	80095dc <I2C_WaitOnTXEFlagUntilTimeout>
 80096d6:	2800      	cmp	r0, #0
 80096d8:	d1e2      	bne.n	80096a0 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80096da:	6823      	ldr	r3, [r4, #0]
 80096dc:	e7f1      	b.n	80096c2 <I2C_RequestMemoryWrite+0x92>
 80096de:	bf00      	nop
 80096e0:	00010002 	.word	0x00010002

080096e4 <I2C_RequestMemoryRead>:
{
 80096e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80096e8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80096ea:	6803      	ldr	r3, [r0, #0]
{
 80096ec:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80096ee:	681a      	ldr	r2, [r3, #0]
 80096f0:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80096f4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80096f6:	681a      	ldr	r2, [r3, #0]
{
 80096f8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80096fc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8009700:	601a      	str	r2, [r3, #0]
{
 8009702:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8009704:	463b      	mov	r3, r7
 8009706:	f8cd 8000 	str.w	r8, [sp]
 800970a:	2200      	movs	r2, #0
 800970c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8009710:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8009712:	f7ff fee1 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 8009716:	6823      	ldr	r3, [r4, #0]
 8009718:	b138      	cbz	r0, 800972a <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800971a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800971c:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800971e:	bf44      	itt	mi
 8009720:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8009724:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8009726:	2003      	movs	r0, #3
 8009728:	e021      	b.n	800976e <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800972a:	fa5f f986 	uxtb.w	r9, r6
 800972e:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8009732:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8009734:	492b      	ldr	r1, [pc, #172]	@ (80097e4 <I2C_RequestMemoryRead+0x100>)
 8009736:	4643      	mov	r3, r8
 8009738:	463a      	mov	r2, r7
 800973a:	4620      	mov	r0, r4
 800973c:	f7ff ff0c 	bl	8009558 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8009740:	b9a0      	cbnz	r0, 800976c <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009742:	6823      	ldr	r3, [r4, #0]
 8009744:	9003      	str	r0, [sp, #12]
 8009746:	695a      	ldr	r2, [r3, #20]
 8009748:	9203      	str	r2, [sp, #12]
 800974a:	699b      	ldr	r3, [r3, #24]
 800974c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800974e:	4642      	mov	r2, r8
 8009750:	4639      	mov	r1, r7
 8009752:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009754:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009756:	f7ff ff41 	bl	80095dc <I2C_WaitOnTXEFlagUntilTimeout>
 800975a:	b158      	cbz	r0, 8009774 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800975c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800975e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009760:	bf01      	itttt	eq
 8009762:	6822      	ldreq	r2, [r4, #0]
 8009764:	6813      	ldreq	r3, [r2, #0]
 8009766:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800976a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800976c:	2001      	movs	r0, #1
}
 800976e:	b004      	add	sp, #16
 8009770:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009774:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009778:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800977a:	d11a      	bne.n	80097b2 <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800977c:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800977e:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009780:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8009782:	4639      	mov	r1, r7
 8009784:	4620      	mov	r0, r4
 8009786:	f7ff ff29 	bl	80095dc <I2C_WaitOnTXEFlagUntilTimeout>
 800978a:	4602      	mov	r2, r0
 800978c:	2800      	cmp	r0, #0
 800978e:	d1e5      	bne.n	800975c <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009790:	6821      	ldr	r1, [r4, #0]
 8009792:	680b      	ldr	r3, [r1, #0]
 8009794:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009798:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800979a:	4620      	mov	r0, r4
 800979c:	f8cd 8000 	str.w	r8, [sp]
 80097a0:	463b      	mov	r3, r7
 80097a2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80097a6:	f7ff fe97 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 80097aa:	6822      	ldr	r2, [r4, #0]
 80097ac:	b160      	cbz	r0, 80097c8 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80097ae:	6813      	ldr	r3, [r2, #0]
 80097b0:	e7b4      	b.n	800971c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80097b2:	0a2a      	lsrs	r2, r5, #8
 80097b4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80097b6:	4639      	mov	r1, r7
 80097b8:	4642      	mov	r2, r8
 80097ba:	4620      	mov	r0, r4
 80097bc:	f7ff ff0e 	bl	80095dc <I2C_WaitOnTXEFlagUntilTimeout>
 80097c0:	2800      	cmp	r0, #0
 80097c2:	d1cb      	bne.n	800975c <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80097c4:	6823      	ldr	r3, [r4, #0]
 80097c6:	e7d9      	b.n	800977c <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80097c8:	f049 0301 	orr.w	r3, r9, #1
 80097cc:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80097ce:	4905      	ldr	r1, [pc, #20]	@ (80097e4 <I2C_RequestMemoryRead+0x100>)
 80097d0:	4643      	mov	r3, r8
 80097d2:	463a      	mov	r2, r7
 80097d4:	4620      	mov	r0, r4
 80097d6:	f7ff febf 	bl	8009558 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80097da:	3800      	subs	r0, #0
 80097dc:	bf18      	it	ne
 80097de:	2001      	movne	r0, #1
 80097e0:	e7c5      	b.n	800976e <I2C_RequestMemoryRead+0x8a>
 80097e2:	bf00      	nop
 80097e4:	00010002 	.word	0x00010002

080097e8 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80097e8:	b570      	push	{r4, r5, r6, lr}
 80097ea:	4604      	mov	r4, r0
 80097ec:	460d      	mov	r5, r1
 80097ee:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80097f0:	6823      	ldr	r3, [r4, #0]
 80097f2:	695b      	ldr	r3, [r3, #20]
 80097f4:	075b      	lsls	r3, r3, #29
 80097f6:	d501      	bpl.n	80097fc <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80097f8:	2000      	movs	r0, #0
 80097fa:	e01e      	b.n	800983a <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80097fc:	4620      	mov	r0, r4
 80097fe:	f7ff fe51 	bl	80094a4 <I2C_IsAcknowledgeFailed>
 8009802:	b9c8      	cbnz	r0, 8009838 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8009804:	1c6a      	adds	r2, r5, #1
 8009806:	d0f3      	beq.n	80097f0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009808:	f7ff f9aa 	bl	8008b60 <HAL_GetTick>
 800980c:	1b80      	subs	r0, r0, r6
 800980e:	42a8      	cmp	r0, r5
 8009810:	d801      	bhi.n	8009816 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8009812:	2d00      	cmp	r5, #0
 8009814:	d1ec      	bne.n	80097f0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8009816:	6823      	ldr	r3, [r4, #0]
 8009818:	695b      	ldr	r3, [r3, #20]
 800981a:	f013 0304 	ands.w	r3, r3, #4
 800981e:	d1e7      	bne.n	80097f0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8009820:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8009822:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8009824:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009828:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800982c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800982e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009832:	f042 0220 	orr.w	r2, r2, #32
 8009836:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8009838:	2001      	movs	r0, #1
}
 800983a:	bd70      	pop	{r4, r5, r6, pc}

0800983c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800983c:	b570      	push	{r4, r5, r6, lr}
 800983e:	4604      	mov	r4, r0
 8009840:	460d      	mov	r5, r1
 8009842:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009844:	6821      	ldr	r1, [r4, #0]
 8009846:	694b      	ldr	r3, [r1, #20]
 8009848:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800984c:	d001      	beq.n	8009852 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800984e:	2000      	movs	r0, #0
 8009850:	e011      	b.n	8009876 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009852:	694a      	ldr	r2, [r1, #20]
 8009854:	06d2      	lsls	r2, r2, #27
 8009856:	d50f      	bpl.n	8009878 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009858:	f06f 0210 	mvn.w	r2, #16
 800985c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800985e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009860:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009862:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009866:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800986a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800986c:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800986e:	2300      	movs	r3, #0
 8009870:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8009874:	2001      	movs	r0, #1
}
 8009876:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009878:	f7ff f972 	bl	8008b60 <HAL_GetTick>
 800987c:	1b80      	subs	r0, r0, r6
 800987e:	42a8      	cmp	r0, r5
 8009880:	d801      	bhi.n	8009886 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8009882:	2d00      	cmp	r5, #0
 8009884:	d1de      	bne.n	8009844 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8009886:	6823      	ldr	r3, [r4, #0]
 8009888:	695b      	ldr	r3, [r3, #20]
 800988a:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800988e:	d1d9      	bne.n	8009844 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8009890:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009892:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009894:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009898:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800989c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800989e:	4313      	orrs	r3, r2
 80098a0:	e7e4      	b.n	800986c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

080098a4 <HAL_I2C_Init>:
{
 80098a4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80098a6:	4604      	mov	r4, r0
 80098a8:	b908      	cbnz	r0, 80098ae <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80098aa:	2001      	movs	r0, #1
}
 80098ac:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80098ae:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80098b2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80098b6:	b91b      	cbnz	r3, 80098c0 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80098b8:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80098bc:	f7f8 fb58 	bl	8001f70 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80098c0:	2324      	movs	r3, #36	@ 0x24
 80098c2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80098c6:	6823      	ldr	r3, [r4, #0]
 80098c8:	681a      	ldr	r2, [r3, #0]
 80098ca:	f022 0201 	bic.w	r2, r2, #1
 80098ce:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80098d0:	681a      	ldr	r2, [r3, #0]
 80098d2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80098d6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80098d8:	681a      	ldr	r2, [r3, #0]
 80098da:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80098de:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80098e0:	f000 fea8 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80098e4:	4b3f      	ldr	r3, [pc, #252]	@ (80099e4 <HAL_I2C_Init+0x140>)
 80098e6:	6865      	ldr	r5, [r4, #4]
 80098e8:	429d      	cmp	r5, r3
 80098ea:	bf94      	ite	ls
 80098ec:	4b3e      	ldrls	r3, [pc, #248]	@ (80099e8 <HAL_I2C_Init+0x144>)
 80098ee:	4b3f      	ldrhi	r3, [pc, #252]	@ (80099ec <HAL_I2C_Init+0x148>)
 80098f0:	4298      	cmp	r0, r3
 80098f2:	bf8c      	ite	hi
 80098f4:	2300      	movhi	r3, #0
 80098f6:	2301      	movls	r3, #1
 80098f8:	2b00      	cmp	r3, #0
 80098fa:	d1d6      	bne.n	80098aa <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80098fc:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80098fe:	4e39      	ldr	r6, [pc, #228]	@ (80099e4 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009900:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009902:	4b3b      	ldr	r3, [pc, #236]	@ (80099f0 <HAL_I2C_Init+0x14c>)
 8009904:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009908:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800990c:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800990e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009910:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009912:	bf88      	it	hi
 8009914:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8009918:	6a11      	ldr	r1, [r2, #32]
 800991a:	bf88      	it	hi
 800991c:	4373      	mulhi	r3, r6
 800991e:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8009922:	bf84      	itt	hi
 8009924:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8009928:	fbb3 f3f6 	udivhi	r3, r3, r6
 800992c:	3301      	adds	r3, #1
 800992e:	430b      	orrs	r3, r1
 8009930:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009932:	69d1      	ldr	r1, [r2, #28]
 8009934:	1e43      	subs	r3, r0, #1
 8009936:	482b      	ldr	r0, [pc, #172]	@ (80099e4 <HAL_I2C_Init+0x140>)
 8009938:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800993c:	4285      	cmp	r5, r0
 800993e:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8009942:	d832      	bhi.n	80099aa <HAL_I2C_Init+0x106>
 8009944:	006d      	lsls	r5, r5, #1
 8009946:	f640 70fc 	movw	r0, #4092	@ 0xffc
 800994a:	fbb3 f3f5 	udiv	r3, r3, r5
 800994e:	3301      	adds	r3, #1
 8009950:	4203      	tst	r3, r0
 8009952:	d042      	beq.n	80099da <HAL_I2C_Init+0x136>
 8009954:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009958:	4319      	orrs	r1, r3
 800995a:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800995c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009960:	6811      	ldr	r1, [r2, #0]
 8009962:	4303      	orrs	r3, r0
 8009964:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8009968:	430b      	orrs	r3, r1
 800996a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800996c:	6891      	ldr	r1, [r2, #8]
 800996e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009972:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8009976:	4303      	orrs	r3, r0
 8009978:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800997c:	430b      	orrs	r3, r1
 800997e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009980:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009984:	68d1      	ldr	r1, [r2, #12]
 8009986:	4303      	orrs	r3, r0
 8009988:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800998c:	430b      	orrs	r3, r1
 800998e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009990:	6813      	ldr	r3, [r2, #0]
 8009992:	f043 0301 	orr.w	r3, r3, #1
 8009996:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009998:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800999a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800999c:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800999e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80099a2:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80099a4:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 80099a8:	e780      	b.n	80098ac <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80099aa:	68a0      	ldr	r0, [r4, #8]
 80099ac:	b950      	cbnz	r0, 80099c4 <HAL_I2C_Init+0x120>
 80099ae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80099b2:	fbb3 f3f5 	udiv	r3, r3, r5
 80099b6:	3301      	adds	r3, #1
 80099b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099bc:	b17b      	cbz	r3, 80099de <HAL_I2C_Init+0x13a>
 80099be:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80099c2:	e7c9      	b.n	8009958 <HAL_I2C_Init+0xb4>
 80099c4:	2019      	movs	r0, #25
 80099c6:	4368      	muls	r0, r5
 80099c8:	fbb3 f3f0 	udiv	r3, r3, r0
 80099cc:	3301      	adds	r3, #1
 80099ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80099d2:	b123      	cbz	r3, 80099de <HAL_I2C_Init+0x13a>
 80099d4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80099d8:	e7be      	b.n	8009958 <HAL_I2C_Init+0xb4>
 80099da:	2304      	movs	r3, #4
 80099dc:	e7bc      	b.n	8009958 <HAL_I2C_Init+0xb4>
 80099de:	2301      	movs	r3, #1
 80099e0:	e7ba      	b.n	8009958 <HAL_I2C_Init+0xb4>
 80099e2:	bf00      	nop
 80099e4:	000186a0 	.word	0x000186a0
 80099e8:	001e847f 	.word	0x001e847f
 80099ec:	003d08ff 	.word	0x003d08ff
 80099f0:	000f4240 	.word	0x000f4240

080099f4 <HAL_I2C_Mem_Write>:
{
 80099f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80099f8:	4604      	mov	r4, r0
 80099fa:	4699      	mov	r9, r3
 80099fc:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80099fe:	460f      	mov	r7, r1
 8009a00:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009a02:	f7ff f8ad 	bl	8008b60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009a06:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8009a0a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8009a0c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009a0e:	d003      	beq.n	8009a18 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8009a10:	2002      	movs	r0, #2
}
 8009a12:	b003      	add	sp, #12
 8009a14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8009a18:	9000      	str	r0, [sp, #0]
 8009a1a:	493c      	ldr	r1, [pc, #240]	@ (8009b0c <HAL_I2C_Mem_Write+0x118>)
 8009a1c:	2319      	movs	r3, #25
 8009a1e:	2201      	movs	r2, #1
 8009a20:	4620      	mov	r0, r4
 8009a22:	f7ff fd59 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 8009a26:	2800      	cmp	r0, #0
 8009a28:	d1f2      	bne.n	8009a10 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8009a2a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8009a2e:	2b01      	cmp	r3, #1
 8009a30:	d0ee      	beq.n	8009a10 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009a32:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8009a34:	2301      	movs	r3, #1
 8009a36:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009a3a:	6803      	ldr	r3, [r0, #0]
 8009a3c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8009a3e:	bf5e      	ittt	pl
 8009a40:	6803      	ldrpl	r3, [r0, #0]
 8009a42:	f043 0301 	orrpl.w	r3, r3, #1
 8009a46:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009a48:	6803      	ldr	r3, [r0, #0]
 8009a4a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009a4e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009a50:	2321      	movs	r3, #33	@ 0x21
 8009a52:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009a56:	2340      	movs	r3, #64	@ 0x40
 8009a58:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009a5c:	2300      	movs	r3, #0
 8009a5e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8009a60:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8009a62:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8009a64:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8009a68:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009a6a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009a6c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009a6e:	4b28      	ldr	r3, [pc, #160]	@ (8009b10 <HAL_I2C_Mem_Write+0x11c>)
 8009a70:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009a72:	4642      	mov	r2, r8
 8009a74:	e9cd 6500 	strd	r6, r5, [sp]
 8009a78:	464b      	mov	r3, r9
 8009a7a:	4639      	mov	r1, r7
 8009a7c:	4620      	mov	r0, r4
 8009a7e:	f7ff fdd7 	bl	8009630 <I2C_RequestMemoryWrite>
 8009a82:	2800      	cmp	r0, #0
 8009a84:	d02a      	beq.n	8009adc <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8009a86:	2001      	movs	r0, #1
 8009a88:	e7c3      	b.n	8009a12 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009a8a:	f7ff fda7 	bl	80095dc <I2C_WaitOnTXEFlagUntilTimeout>
 8009a8e:	b140      	cbz	r0, 8009aa2 <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a90:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8009a92:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a94:	bf01      	itttt	eq
 8009a96:	6822      	ldreq	r2, [r4, #0]
 8009a98:	6813      	ldreq	r3, [r2, #0]
 8009a9a:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8009a9e:	6013      	streq	r3, [r2, #0]
 8009aa0:	e7f1      	b.n	8009a86 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009aa2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009aa4:	6827      	ldr	r7, [r4, #0]
 8009aa6:	461a      	mov	r2, r3
 8009aa8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009aac:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8009aae:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8009ab0:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8009ab2:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8009ab4:	3a01      	subs	r2, #1
 8009ab6:	b292      	uxth	r2, r2
 8009ab8:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009aba:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8009abc:	1e48      	subs	r0, r1, #1
 8009abe:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ac0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8009ac2:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ac4:	d50a      	bpl.n	8009adc <HAL_I2C_Mem_Write+0xe8>
 8009ac6:	b148      	cbz	r0, 8009adc <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ac8:	785a      	ldrb	r2, [r3, #1]
 8009aca:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8009acc:	3302      	adds	r3, #2
 8009ace:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8009ad0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009ad2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8009ad4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8009ad6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8009ad8:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8009ada:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8009adc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009ade:	462a      	mov	r2, r5
 8009ae0:	4631      	mov	r1, r6
 8009ae2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8009ae4:	2b00      	cmp	r3, #0
 8009ae6:	d1d0      	bne.n	8009a8a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009ae8:	f7ff fe7e 	bl	80097e8 <I2C_WaitOnBTFFlagUntilTimeout>
 8009aec:	2800      	cmp	r0, #0
 8009aee:	d1cf      	bne.n	8009a90 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009af0:	6822      	ldr	r2, [r4, #0]
 8009af2:	6813      	ldr	r3, [r2, #0]
 8009af4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8009af8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009afa:	2320      	movs	r3, #32
 8009afc:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8009b00:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009b04:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8009b08:	e783      	b.n	8009a12 <HAL_I2C_Mem_Write+0x1e>
 8009b0a:	bf00      	nop
 8009b0c:	00100002 	.word	0x00100002
 8009b10:	ffff0000 	.word	0xffff0000

08009b14 <HAL_I2C_Mem_Read>:
{
 8009b14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b18:	4604      	mov	r4, r0
 8009b1a:	b087      	sub	sp, #28
 8009b1c:	4699      	mov	r9, r3
 8009b1e:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8009b20:	460d      	mov	r5, r1
 8009b22:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009b24:	f7ff f81c 	bl	8008b60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009b28:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8009b2c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8009b2e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009b30:	d004      	beq.n	8009b3c <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8009b32:	2502      	movs	r5, #2
}
 8009b34:	4628      	mov	r0, r5
 8009b36:	b007      	add	sp, #28
 8009b38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8009b3c:	9000      	str	r0, [sp, #0]
 8009b3e:	497a      	ldr	r1, [pc, #488]	@ (8009d28 <HAL_I2C_Mem_Read+0x214>)
 8009b40:	2319      	movs	r3, #25
 8009b42:	2201      	movs	r2, #1
 8009b44:	4620      	mov	r0, r4
 8009b46:	f7ff fcc7 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 8009b4a:	2800      	cmp	r0, #0
 8009b4c:	d1f1      	bne.n	8009b32 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8009b4e:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8009b52:	2b01      	cmp	r3, #1
 8009b54:	d0ed      	beq.n	8009b32 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009b56:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8009b58:	2301      	movs	r3, #1
 8009b5a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009b5e:	6803      	ldr	r3, [r0, #0]
 8009b60:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8009b62:	bf5e      	ittt	pl
 8009b64:	6803      	ldrpl	r3, [r0, #0]
 8009b66:	f043 0301 	orrpl.w	r3, r3, #1
 8009b6a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009b6c:	6803      	ldr	r3, [r0, #0]
 8009b6e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009b72:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009b74:	2322      	movs	r3, #34	@ 0x22
 8009b76:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009b7a:	2340      	movs	r3, #64	@ 0x40
 8009b7c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b80:	2300      	movs	r3, #0
 8009b82:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8009b84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009b86:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8009b88:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8009b8c:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009b8e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009b90:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009b92:	4b66      	ldr	r3, [pc, #408]	@ (8009d2c <HAL_I2C_Mem_Read+0x218>)
 8009b94:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b96:	4629      	mov	r1, r5
 8009b98:	e9cd 7600 	strd	r7, r6, [sp]
 8009b9c:	464b      	mov	r3, r9
 8009b9e:	4642      	mov	r2, r8
 8009ba0:	4620      	mov	r0, r4
 8009ba2:	f7ff fd9f 	bl	80096e4 <I2C_RequestMemoryRead>
 8009ba6:	4605      	mov	r5, r0
 8009ba8:	b108      	cbz	r0, 8009bae <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8009baa:	2501      	movs	r5, #1
 8009bac:	e7c2      	b.n	8009b34 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8009bae:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009bb0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8009bb2:	b9b2      	cbnz	r2, 8009be2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009bb4:	9002      	str	r0, [sp, #8]
 8009bb6:	695a      	ldr	r2, [r3, #20]
 8009bb8:	9202      	str	r2, [sp, #8]
 8009bba:	699a      	ldr	r2, [r3, #24]
 8009bbc:	9202      	str	r2, [sp, #8]
 8009bbe:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bc0:	681a      	ldr	r2, [r3, #0]
 8009bc2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009bc6:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009bc8:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 8009d30 <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8009bcc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009bce:	2b00      	cmp	r3, #0
 8009bd0:	d12c      	bne.n	8009c2c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8009bd2:	2220      	movs	r2, #32
 8009bd4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8009bd8:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009bdc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 8009be0:	e7a8      	b.n	8009b34 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8009be2:	2a01      	cmp	r2, #1
 8009be4:	d10a      	bne.n	8009bfc <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009be6:	681a      	ldr	r2, [r3, #0]
 8009be8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009bec:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009bee:	9003      	str	r0, [sp, #12]
 8009bf0:	695a      	ldr	r2, [r3, #20]
 8009bf2:	9203      	str	r2, [sp, #12]
 8009bf4:	699a      	ldr	r2, [r3, #24]
 8009bf6:	9203      	str	r2, [sp, #12]
 8009bf8:	9a03      	ldr	r2, [sp, #12]
 8009bfa:	e7e1      	b.n	8009bc0 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8009bfc:	2a02      	cmp	r2, #2
 8009bfe:	d10e      	bne.n	8009c1e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009c00:	681a      	ldr	r2, [r3, #0]
 8009c02:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8009c06:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009c08:	681a      	ldr	r2, [r3, #0]
 8009c0a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8009c0e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009c10:	9004      	str	r0, [sp, #16]
 8009c12:	695a      	ldr	r2, [r3, #20]
 8009c14:	9204      	str	r2, [sp, #16]
 8009c16:	699b      	ldr	r3, [r3, #24]
 8009c18:	9304      	str	r3, [sp, #16]
 8009c1a:	9b04      	ldr	r3, [sp, #16]
 8009c1c:	e7d4      	b.n	8009bc8 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009c1e:	9005      	str	r0, [sp, #20]
 8009c20:	695a      	ldr	r2, [r3, #20]
 8009c22:	9205      	str	r2, [sp, #20]
 8009c24:	699b      	ldr	r3, [r3, #24]
 8009c26:	9305      	str	r3, [sp, #20]
 8009c28:	9b05      	ldr	r3, [sp, #20]
 8009c2a:	e7cd      	b.n	8009bc8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8009c2c:	2b03      	cmp	r3, #3
 8009c2e:	d856      	bhi.n	8009cde <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8009c30:	2b01      	cmp	r3, #1
 8009c32:	d115      	bne.n	8009c60 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009c34:	4632      	mov	r2, r6
 8009c36:	4639      	mov	r1, r7
 8009c38:	4620      	mov	r0, r4
 8009c3a:	f7ff fdff 	bl	800983c <I2C_WaitOnRXNEFlagUntilTimeout>
 8009c3e:	2800      	cmp	r0, #0
 8009c40:	d1b3      	bne.n	8009baa <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009c42:	6823      	ldr	r3, [r4, #0]
 8009c44:	691a      	ldr	r2, [r3, #16]
 8009c46:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009c48:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009c4a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009c4c:	3301      	adds	r3, #1
 8009c4e:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8009c50:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009c52:	3b01      	subs	r3, #1
 8009c54:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8009c56:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009c58:	3b01      	subs	r3, #1
 8009c5a:	b29b      	uxth	r3, r3
 8009c5c:	8563      	strh	r3, [r4, #42]	@ 0x2a
 8009c5e:	e7b5      	b.n	8009bcc <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8009c60:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009c62:	9600      	str	r6, [sp, #0]
 8009c64:	463b      	mov	r3, r7
 8009c66:	f04f 0200 	mov.w	r2, #0
 8009c6a:	4641      	mov	r1, r8
 8009c6c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8009c6e:	d119      	bne.n	8009ca4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009c70:	f7ff fc32 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 8009c74:	2800      	cmp	r0, #0
 8009c76:	d198      	bne.n	8009baa <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c78:	6823      	ldr	r3, [r4, #0]
 8009c7a:	681a      	ldr	r2, [r3, #0]
 8009c7c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009c80:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009c82:	691a      	ldr	r2, [r3, #16]
 8009c84:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009c86:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009c88:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8009c8a:	1c53      	adds	r3, r2, #1
 8009c8c:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8009c8e:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009c90:	3b01      	subs	r3, #1
 8009c92:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8009c94:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009c96:	3b01      	subs	r3, #1
 8009c98:	b29b      	uxth	r3, r3
 8009c9a:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009c9c:	6823      	ldr	r3, [r4, #0]
 8009c9e:	691b      	ldr	r3, [r3, #16]
 8009ca0:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009ca2:	e7d2      	b.n	8009c4a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009ca4:	f7ff fc18 	bl	80094d8 <I2C_WaitOnFlagUntilTimeout>
 8009ca8:	4602      	mov	r2, r0
 8009caa:	2800      	cmp	r0, #0
 8009cac:	f47f af7d 	bne.w	8009baa <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cb0:	6823      	ldr	r3, [r4, #0]
 8009cb2:	6819      	ldr	r1, [r3, #0]
 8009cb4:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8009cb8:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cba:	6919      	ldr	r1, [r3, #16]
 8009cbc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009cbe:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8009cc0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009cc2:	3301      	adds	r3, #1
 8009cc4:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8009cc6:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8009cc8:	3b01      	subs	r3, #1
 8009cca:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8009ccc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8009cce:	3b01      	subs	r3, #1
 8009cd0:	b29b      	uxth	r3, r3
 8009cd2:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8009cd4:	4641      	mov	r1, r8
 8009cd6:	9600      	str	r6, [sp, #0]
 8009cd8:	463b      	mov	r3, r7
 8009cda:	4620      	mov	r0, r4
 8009cdc:	e7c8      	b.n	8009c70 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8009cde:	4632      	mov	r2, r6
 8009ce0:	4639      	mov	r1, r7
 8009ce2:	4620      	mov	r0, r4
 8009ce4:	f7ff fdaa 	bl	800983c <I2C_WaitOnRXNEFlagUntilTimeout>
 8009ce8:	2800      	cmp	r0, #0
 8009cea:	f47f af5e 	bne.w	8009baa <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009cee:	6823      	ldr	r3, [r4, #0]
 8009cf0:	691a      	ldr	r2, [r3, #16]
 8009cf2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8009cf4:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8009cf6:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8009cf8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8009cfa:	3a01      	subs	r2, #1
 8009cfc:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009cfe:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 8009d00:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d02:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 8009d04:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 8009d06:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d08:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 8009d0a:	3b01      	subs	r3, #1
 8009d0c:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d0e:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 8009d10:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009d12:	f57f af5b 	bpl.w	8009bcc <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8009d16:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d18:	bf02      	ittt	eq
 8009d1a:	6813      	ldreq	r3, [r2, #0]
 8009d1c:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 8009d20:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d22:	6913      	ldr	r3, [r2, #16]
 8009d24:	704b      	strb	r3, [r1, #1]
 8009d26:	e790      	b.n	8009c4a <HAL_I2C_Mem_Read+0x136>
 8009d28:	00100002 	.word	0x00100002
 8009d2c:	ffff0000 	.word	0xffff0000
 8009d30:	00010004 	.word	0x00010004

08009d34 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8009d34:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009d36:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009d3a:	2b20      	cmp	r3, #32
 8009d3c:	b2dc      	uxtb	r4, r3
 8009d3e:	d116      	bne.n	8009d6e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009d40:	2324      	movs	r3, #36	@ 0x24
 8009d42:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8009d46:	6803      	ldr	r3, [r0, #0]
 8009d48:	681a      	ldr	r2, [r3, #0]
 8009d4a:	f022 0201 	bic.w	r2, r2, #1
 8009d4e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8009d50:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8009d52:	f022 0210 	bic.w	r2, r2, #16
 8009d56:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8009d58:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8009d5a:	4311      	orrs	r1, r2
 8009d5c:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8009d5e:	681a      	ldr	r2, [r3, #0]
 8009d60:	f042 0201 	orr.w	r2, r2, #1
 8009d64:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8009d66:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8009d6a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8009d6c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8009d6e:	2002      	movs	r0, #2
 8009d70:	e7fc      	b.n	8009d6c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08009d72 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8009d72:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8009d74:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8009d78:	2b20      	cmp	r3, #32
 8009d7a:	b2dc      	uxtb	r4, r3
 8009d7c:	d116      	bne.n	8009dac <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8009d7e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8009d80:	2324      	movs	r3, #36	@ 0x24
 8009d82:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8009d86:	6813      	ldr	r3, [r2, #0]
 8009d88:	f023 0301 	bic.w	r3, r3, #1
 8009d8c:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8009d8e:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8009d90:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8009d94:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8009d96:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8009d98:	b29b      	uxth	r3, r3
 8009d9a:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8009d9c:	6813      	ldr	r3, [r2, #0]
 8009d9e:	f043 0301 	orr.w	r3, r3, #1
 8009da2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8009da4:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8009da8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8009daa:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8009dac:	2002      	movs	r0, #2
 8009dae:	e7fc      	b.n	8009daa <HAL_I2CEx_ConfigDigitalFilter+0x38>

08009db0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009db0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009db2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009db6:	01d2      	lsls	r2, r2, #7
 8009db8:	3284      	adds	r2, #132	@ 0x84
 8009dba:	1883      	adds	r3, r0, r2
{
 8009dbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009dc0:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dc2:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009dc4:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8009dc6:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8009dca:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8009dce:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009dd0:	68c5      	ldr	r5, [r0, #12]
 8009dd2:	f10c 0701 	add.w	r7, ip, #1
 8009dd6:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8009dda:	f3c6 460b 	ubfx	r6, r6, #16, #12
 8009dde:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8009de0:	443d      	add	r5, r7
 8009de2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8009de6:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8009de8:	68c6      	ldr	r6, [r0, #12]
 8009dea:	68cd      	ldr	r5, [r1, #12]
 8009dec:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8009df0:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8009df2:	689d      	ldr	r5, [r3, #8]
 8009df4:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8009df8:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8009dfa:	68c7      	ldr	r7, [r0, #12]
 8009dfc:	688d      	ldr	r5, [r1, #8]
 8009dfe:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8009e02:	3501      	adds	r5, #1
 8009e04:	443d      	add	r5, r7
 8009e06:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8009e0a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009e0c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009e0e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8009e10:	f025 0507 	bic.w	r5, r5, #7
 8009e14:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009e16:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8009e1a:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8009e1c:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009e20:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8009e22:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8009e26:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8009e2a:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 8009e2e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8009e32:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8009e36:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8009e3a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8009e3c:	695d      	ldr	r5, [r3, #20]
 8009e3e:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 8009e42:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8009e44:	694d      	ldr	r5, [r1, #20]
 8009e46:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8009e48:	69dd      	ldr	r5, [r3, #28]
 8009e4a:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 8009e4e:	f025 0507 	bic.w	r5, r5, #7
 8009e52:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8009e54:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8009e58:	433d      	orrs	r5, r7
 8009e5a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009e5c:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e5e:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8009e60:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e64:	2e07      	cmp	r6, #7
 8009e66:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8009e68:	bf9c      	itt	ls
 8009e6a:	4d0e      	ldrls	r5, [pc, #56]	@ (8009ea4 <LTDC_SetConfig+0xf4>)
 8009e6c:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8009e6e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8009e70:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8009e74:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8009e76:	bf88      	it	hi
 8009e78:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009e7a:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009e7c:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009e7e:	eba4 040c 	sub.w	r4, r4, ip
 8009e82:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009e84:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8009e86:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8009e88:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8009e8c:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8009e8e:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 8009e90:	f36f 040a 	bfc	r4, #0, #11
 8009e94:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8009e96:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8009e98:	5883      	ldr	r3, [r0, r2]
 8009e9a:	f043 0301 	orr.w	r3, r3, #1
 8009e9e:	5083      	str	r3, [r0, r2]
}
 8009ea0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ea4:	0802ace8 	.word	0x0802ace8

08009ea8 <HAL_LTDC_Init>:
{
 8009ea8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8009eaa:	4604      	mov	r4, r0
 8009eac:	2800      	cmp	r0, #0
 8009eae:	d063      	beq.n	8009f78 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8009eb0:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8009eb4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8009eb8:	b91b      	cbnz	r3, 8009ec2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8009eba:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 8009ebe:	f7f8 f8b3 	bl	8002028 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8009ec2:	2302      	movs	r3, #2
 8009ec4:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8009ec8:	6823      	ldr	r3, [r4, #0]
 8009eca:	699a      	ldr	r2, [r3, #24]
 8009ecc:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8009ed0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009ed2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8009ed6:	4302      	orrs	r2, r0
 8009ed8:	68e0      	ldr	r0, [r4, #12]
 8009eda:	6999      	ldr	r1, [r3, #24]
 8009edc:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8009ede:	6920      	ldr	r0, [r4, #16]
 8009ee0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8009ee2:	430a      	orrs	r2, r1
 8009ee4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009ee6:	689a      	ldr	r2, [r3, #8]
 8009ee8:	4924      	ldr	r1, [pc, #144]	@ (8009f7c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8009eea:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8009eec:	400a      	ands	r2, r1
 8009eee:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8009ef0:	689a      	ldr	r2, [r3, #8]
 8009ef2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009ef6:	69a0      	ldr	r0, [r4, #24]
 8009ef8:	4302      	orrs	r2, r0
 8009efa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009efc:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8009efe:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8009f00:	400a      	ands	r2, r1
 8009f02:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8009f04:	68da      	ldr	r2, [r3, #12]
 8009f06:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009f0a:	6a20      	ldr	r0, [r4, #32]
 8009f0c:	4302      	orrs	r2, r0
 8009f0e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009f10:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8009f12:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8009f14:	400a      	ands	r2, r1
 8009f16:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8009f18:	691a      	ldr	r2, [r3, #16]
 8009f1a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009f1e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8009f20:	4302      	orrs	r2, r0
 8009f22:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8009f24:	695a      	ldr	r2, [r3, #20]
 8009f26:	400a      	ands	r2, r1
 8009f28:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009f2a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8009f2c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8009f2e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009f32:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8009f34:	430a      	orrs	r2, r1
 8009f36:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009f38:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8009f3a:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8009f3e:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8009f42:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8009f46:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8009f48:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8009f4a:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8009f4e:	432a      	orrs	r2, r5
 8009f50:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8009f54:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009f58:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8009f5a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009f5c:	f042 0206 	orr.w	r2, r2, #6
 8009f60:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8009f62:	699a      	ldr	r2, [r3, #24]
 8009f64:	f042 0201 	orr.w	r2, r2, #1
 8009f68:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009f6a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8009f6c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8009f6e:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8009f72:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8009f76:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009f78:	2001      	movs	r0, #1
 8009f7a:	e7fc      	b.n	8009f76 <HAL_LTDC_Init+0xce>
 8009f7c:	f000f800 	.word	0xf000f800

08009f80 <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8009f80:	4770      	bx	lr

08009f82 <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8009f82:	4770      	bx	lr

08009f84 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8009f84:	6803      	ldr	r3, [r0, #0]
{
 8009f86:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8009f88:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8009f8a:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8009f8c:	0772      	lsls	r2, r6, #29
{
 8009f8e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8009f90:	d514      	bpl.n	8009fbc <HAL_LTDC_IRQHandler+0x38>
 8009f92:	0769      	lsls	r1, r5, #29
 8009f94:	d512      	bpl.n	8009fbc <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8009f96:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009f98:	f022 0204 	bic.w	r2, r2, #4
 8009f9c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8009f9e:	2204      	movs	r2, #4
 8009fa0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8009fa2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8009fa6:	f043 0301 	orr.w	r3, r3, #1
 8009faa:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8009fae:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009fb0:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8009fb4:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009fb8:	f7ff ffe2 	bl	8009f80 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8009fbc:	07b2      	lsls	r2, r6, #30
 8009fbe:	d516      	bpl.n	8009fee <HAL_LTDC_IRQHandler+0x6a>
 8009fc0:	07ab      	lsls	r3, r5, #30
 8009fc2:	d514      	bpl.n	8009fee <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8009fc4:	6823      	ldr	r3, [r4, #0]
 8009fc6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009fc8:	f022 0202 	bic.w	r2, r2, #2
 8009fcc:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8009fce:	2202      	movs	r2, #2
 8009fd0:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8009fd2:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8009fd6:	4313      	orrs	r3, r2
 8009fd8:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8009fdc:	2304      	movs	r3, #4
 8009fde:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8009fe2:	2300      	movs	r3, #0
 8009fe4:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8009fe8:	4620      	mov	r0, r4
 8009fea:	f7ff ffc9 	bl	8009f80 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8009fee:	07f0      	lsls	r0, r6, #31
 8009ff0:	d510      	bpl.n	800a014 <HAL_LTDC_IRQHandler+0x90>
 8009ff2:	07e9      	lsls	r1, r5, #31
 8009ff4:	d50e      	bpl.n	800a014 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8009ff6:	6823      	ldr	r3, [r4, #0]
 8009ff8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009ffa:	f022 0201 	bic.w	r2, r2, #1
 8009ffe:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800a000:	2201      	movs	r2, #1
 800a002:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800a004:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800a006:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800a00a:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800a00e:	4620      	mov	r0, r4
 800a010:	f7f7 fae4 	bl	80015dc <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800a014:	0732      	lsls	r2, r6, #28
 800a016:	d511      	bpl.n	800a03c <HAL_LTDC_IRQHandler+0xb8>
 800a018:	072b      	lsls	r3, r5, #28
 800a01a:	d50f      	bpl.n	800a03c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a01c:	6823      	ldr	r3, [r4, #0]
 800a01e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a020:	f022 0208 	bic.w	r2, r2, #8
 800a024:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a026:	2208      	movs	r2, #8
 800a028:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800a02a:	2301      	movs	r3, #1
 800a02c:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800a030:	2300      	movs	r3, #0
 800a032:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800a036:	4620      	mov	r0, r4
 800a038:	f7ff ffa3 	bl	8009f82 <HAL_LTDC_ReloadEventCallback>
}
 800a03c:	bd70      	pop	{r4, r5, r6, pc}

0800a03e <HAL_LTDC_ConfigLayer>:
{
 800a03e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800a042:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800a046:	2b01      	cmp	r3, #1
{
 800a048:	4606      	mov	r6, r0
 800a04a:	460f      	mov	r7, r1
 800a04c:	4694      	mov	ip, r2
 800a04e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800a052:	d01f      	beq.n	800a094 <HAL_LTDC_ConfigLayer+0x56>
 800a054:	f04f 0801 	mov.w	r8, #1
 800a058:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a05c:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800a060:	2434      	movs	r4, #52	@ 0x34
 800a062:	460d      	mov	r5, r1
 800a064:	fb04 6402 	mla	r4, r4, r2, r6
 800a068:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a06a:	3438      	adds	r4, #56	@ 0x38
 800a06c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a06e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a070:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a072:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a074:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a076:	682b      	ldr	r3, [r5, #0]
 800a078:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800a07a:	4630      	mov	r0, r6
 800a07c:	4662      	mov	r2, ip
 800a07e:	4639      	mov	r1, r7
 800a080:	f7ff fe96 	bl	8009db0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800a084:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800a086:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800a088:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800a08c:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800a090:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800a094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a098 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800a098:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800a09c:	2a01      	cmp	r2, #1
{
 800a09e:	4603      	mov	r3, r0
 800a0a0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800a0a4:	d012      	beq.n	800a0cc <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a0a6:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a0a8:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800a0ac:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800a0ae:	f020 0001 	bic.w	r0, r0, #1
 800a0b2:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800a0b4:	4806      	ldr	r0, [pc, #24]	@ (800a0d0 <HAL_LTDC_ProgramLineEvent+0x38>)
 800a0b6:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800a0b8:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800a0ba:	f041 0101 	orr.w	r1, r1, #1
 800a0be:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800a0c0:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800a0c2:	2201      	movs	r2, #1
 800a0c4:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800a0c8:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800a0cc:	4770      	bx	lr
 800a0ce:	bf00      	nop
 800a0d0:	40016800 	.word	0x40016800

0800a0d4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800a0d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800a0d6:	2300      	movs	r3, #0
 800a0d8:	9301      	str	r3, [sp, #4]
 800a0da:	4b18      	ldr	r3, [pc, #96]	@ (800a13c <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800a0dc:	4d18      	ldr	r5, [pc, #96]	@ (800a140 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800a0de:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a0e0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800a0e4:	641a      	str	r2, [r3, #64]	@ 0x40
 800a0e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a0e8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a0ec:	9301      	str	r3, [sp, #4]
 800a0ee:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800a0f0:	4b14      	ldr	r3, [pc, #80]	@ (800a144 <HAL_PWREx_EnableOverDrive+0x70>)
 800a0f2:	2201      	movs	r2, #1
 800a0f4:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 800a0f6:	f7fe fd33 	bl	8008b60 <HAL_GetTick>
 800a0fa:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800a0fc:	686b      	ldr	r3, [r5, #4]
 800a0fe:	03da      	lsls	r2, r3, #15
 800a100:	d50b      	bpl.n	800a11a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800a102:	4b10      	ldr	r3, [pc, #64]	@ (800a144 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800a104:	4d0e      	ldr	r5, [pc, #56]	@ (800a140 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800a106:	2201      	movs	r2, #1
 800a108:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 800a10a:	f7fe fd29 	bl	8008b60 <HAL_GetTick>
 800a10e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800a110:	686b      	ldr	r3, [r5, #4]
 800a112:	039b      	lsls	r3, r3, #14
 800a114:	d50a      	bpl.n	800a12c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800a116:	2000      	movs	r0, #0
 800a118:	e006      	b.n	800a128 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800a11a:	f7fe fd21 	bl	8008b60 <HAL_GetTick>
 800a11e:	1b00      	subs	r0, r0, r4
 800a120:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800a124:	d9ea      	bls.n	800a0fc <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800a126:	2003      	movs	r0, #3
}
 800a128:	b003      	add	sp, #12
 800a12a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800a12c:	f7fe fd18 	bl	8008b60 <HAL_GetTick>
 800a130:	1b00      	subs	r0, r0, r4
 800a132:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800a136:	d9eb      	bls.n	800a110 <HAL_PWREx_EnableOverDrive+0x3c>
 800a138:	e7f5      	b.n	800a126 <HAL_PWREx_EnableOverDrive+0x52>
 800a13a:	bf00      	nop
 800a13c:	40023800 	.word	0x40023800
 800a140:	40007000 	.word	0x40007000
 800a144:	420e0000 	.word	0x420e0000

0800a148 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800a148:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800a14c:	4604      	mov	r4, r0
 800a14e:	b340      	cbz	r0, 800a1a2 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800a150:	6803      	ldr	r3, [r0, #0]
 800a152:	07de      	lsls	r6, r3, #31
 800a154:	d410      	bmi.n	800a178 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800a156:	6823      	ldr	r3, [r4, #0]
 800a158:	079d      	lsls	r5, r3, #30
 800a15a:	d45b      	bmi.n	800a214 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800a15c:	6823      	ldr	r3, [r4, #0]
 800a15e:	0719      	lsls	r1, r3, #28
 800a160:	f100 809d 	bmi.w	800a29e <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800a164:	6823      	ldr	r3, [r4, #0]
 800a166:	075a      	lsls	r2, r3, #29
 800a168:	f100 80bd 	bmi.w	800a2e6 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800a16c:	69a3      	ldr	r3, [r4, #24]
 800a16e:	2b00      	cmp	r3, #0
 800a170:	f040 8124 	bne.w	800a3bc <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800a174:	2000      	movs	r0, #0
 800a176:	e02c      	b.n	800a1d2 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800a178:	4b8d      	ldr	r3, [pc, #564]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a17a:	689a      	ldr	r2, [r3, #8]
 800a17c:	f002 020c 	and.w	r2, r2, #12
 800a180:	2a04      	cmp	r2, #4
 800a182:	d007      	beq.n	800a194 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a184:	689a      	ldr	r2, [r3, #8]
 800a186:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800a18a:	2a08      	cmp	r2, #8
 800a18c:	d10b      	bne.n	800a1a6 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800a18e:	685b      	ldr	r3, [r3, #4]
 800a190:	0259      	lsls	r1, r3, #9
 800a192:	d508      	bpl.n	800a1a6 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800a194:	4b86      	ldr	r3, [pc, #536]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a196:	681b      	ldr	r3, [r3, #0]
 800a198:	039a      	lsls	r2, r3, #14
 800a19a:	d5dc      	bpl.n	800a156 <HAL_RCC_OscConfig+0xe>
 800a19c:	6863      	ldr	r3, [r4, #4]
 800a19e:	2b00      	cmp	r3, #0
 800a1a0:	d1d9      	bne.n	800a156 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800a1a2:	2001      	movs	r0, #1
 800a1a4:	e015      	b.n	800a1d2 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a1a6:	6863      	ldr	r3, [r4, #4]
 800a1a8:	4d81      	ldr	r5, [pc, #516]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a1aa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a1ae:	d113      	bne.n	800a1d8 <HAL_RCC_OscConfig+0x90>
 800a1b0:	682b      	ldr	r3, [r5, #0]
 800a1b2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800a1b6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800a1b8:	f7fe fcd2 	bl	8008b60 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a1bc:	4e7c      	ldr	r6, [pc, #496]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800a1be:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a1c0:	6833      	ldr	r3, [r6, #0]
 800a1c2:	039b      	lsls	r3, r3, #14
 800a1c4:	d4c7      	bmi.n	800a156 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800a1c6:	f7fe fccb 	bl	8008b60 <HAL_GetTick>
 800a1ca:	1b40      	subs	r0, r0, r5
 800a1cc:	2864      	cmp	r0, #100	@ 0x64
 800a1ce:	d9f7      	bls.n	800a1c0 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800a1d0:	2003      	movs	r0, #3
}
 800a1d2:	b002      	add	sp, #8
 800a1d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800a1d8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800a1dc:	d104      	bne.n	800a1e8 <HAL_RCC_OscConfig+0xa0>
 800a1de:	682b      	ldr	r3, [r5, #0]
 800a1e0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800a1e4:	602b      	str	r3, [r5, #0]
 800a1e6:	e7e3      	b.n	800a1b0 <HAL_RCC_OscConfig+0x68>
 800a1e8:	682a      	ldr	r2, [r5, #0]
 800a1ea:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800a1ee:	602a      	str	r2, [r5, #0]
 800a1f0:	682a      	ldr	r2, [r5, #0]
 800a1f2:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800a1f6:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800a1f8:	2b00      	cmp	r3, #0
 800a1fa:	d1dd      	bne.n	800a1b8 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 800a1fc:	f7fe fcb0 	bl	8008b60 <HAL_GetTick>
 800a200:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800a202:	682b      	ldr	r3, [r5, #0]
 800a204:	039f      	lsls	r7, r3, #14
 800a206:	d5a6      	bpl.n	800a156 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800a208:	f7fe fcaa 	bl	8008b60 <HAL_GetTick>
 800a20c:	1b80      	subs	r0, r0, r6
 800a20e:	2864      	cmp	r0, #100	@ 0x64
 800a210:	d9f7      	bls.n	800a202 <HAL_RCC_OscConfig+0xba>
 800a212:	e7dd      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800a214:	4b66      	ldr	r3, [pc, #408]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a216:	689a      	ldr	r2, [r3, #8]
 800a218:	f012 0f0c 	tst.w	r2, #12
 800a21c:	d007      	beq.n	800a22e <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a21e:	689a      	ldr	r2, [r3, #8]
 800a220:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800a224:	2a08      	cmp	r2, #8
 800a226:	d111      	bne.n	800a24c <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800a228:	685b      	ldr	r3, [r3, #4]
 800a22a:	025d      	lsls	r5, r3, #9
 800a22c:	d40e      	bmi.n	800a24c <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a22e:	4a60      	ldr	r2, [pc, #384]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a230:	6813      	ldr	r3, [r2, #0]
 800a232:	0799      	lsls	r1, r3, #30
 800a234:	d502      	bpl.n	800a23c <HAL_RCC_OscConfig+0xf4>
 800a236:	68e3      	ldr	r3, [r4, #12]
 800a238:	2b01      	cmp	r3, #1
 800a23a:	d1b2      	bne.n	800a1a2 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a23c:	6813      	ldr	r3, [r2, #0]
 800a23e:	6921      	ldr	r1, [r4, #16]
 800a240:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800a244:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a248:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800a24a:	e787      	b.n	800a15c <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800a24c:	68e2      	ldr	r2, [r4, #12]
 800a24e:	4b59      	ldr	r3, [pc, #356]	@ (800a3b4 <HAL_RCC_OscConfig+0x26c>)
 800a250:	b1b2      	cbz	r2, 800a280 <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800a252:	2201      	movs	r2, #1
 800a254:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a256:	f7fe fc83 	bl	8008b60 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a25a:	4d55      	ldr	r5, [pc, #340]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800a25c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a25e:	682b      	ldr	r3, [r5, #0]
 800a260:	079b      	lsls	r3, r3, #30
 800a262:	d507      	bpl.n	800a274 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800a264:	682b      	ldr	r3, [r5, #0]
 800a266:	6922      	ldr	r2, [r4, #16]
 800a268:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800a26c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800a270:	602b      	str	r3, [r5, #0]
 800a272:	e773      	b.n	800a15c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800a274:	f7fe fc74 	bl	8008b60 <HAL_GetTick>
 800a278:	1b80      	subs	r0, r0, r6
 800a27a:	2802      	cmp	r0, #2
 800a27c:	d9ef      	bls.n	800a25e <HAL_RCC_OscConfig+0x116>
 800a27e:	e7a7      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800a280:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800a282:	f7fe fc6d 	bl	8008b60 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a286:	4e4a      	ldr	r6, [pc, #296]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800a288:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800a28a:	6833      	ldr	r3, [r6, #0]
 800a28c:	079f      	lsls	r7, r3, #30
 800a28e:	f57f af65 	bpl.w	800a15c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800a292:	f7fe fc65 	bl	8008b60 <HAL_GetTick>
 800a296:	1b40      	subs	r0, r0, r5
 800a298:	2802      	cmp	r0, #2
 800a29a:	d9f6      	bls.n	800a28a <HAL_RCC_OscConfig+0x142>
 800a29c:	e798      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800a29e:	6962      	ldr	r2, [r4, #20]
 800a2a0:	4b44      	ldr	r3, [pc, #272]	@ (800a3b4 <HAL_RCC_OscConfig+0x26c>)
 800a2a2:	b182      	cbz	r2, 800a2c6 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800a2a4:	2201      	movs	r2, #1
 800a2a6:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800a2aa:	f7fe fc59 	bl	8008b60 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a2ae:	4e40      	ldr	r6, [pc, #256]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800a2b0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800a2b2:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800a2b4:	079b      	lsls	r3, r3, #30
 800a2b6:	f53f af55 	bmi.w	800a164 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800a2ba:	f7fe fc51 	bl	8008b60 <HAL_GetTick>
 800a2be:	1b40      	subs	r0, r0, r5
 800a2c0:	2802      	cmp	r0, #2
 800a2c2:	d9f6      	bls.n	800a2b2 <HAL_RCC_OscConfig+0x16a>
 800a2c4:	e784      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800a2c6:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800a2ca:	f7fe fc49 	bl	8008b60 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a2ce:	4e38      	ldr	r6, [pc, #224]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800a2d0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800a2d2:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800a2d4:	079f      	lsls	r7, r3, #30
 800a2d6:	f57f af45 	bpl.w	800a164 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800a2da:	f7fe fc41 	bl	8008b60 <HAL_GetTick>
 800a2de:	1b40      	subs	r0, r0, r5
 800a2e0:	2802      	cmp	r0, #2
 800a2e2:	d9f6      	bls.n	800a2d2 <HAL_RCC_OscConfig+0x18a>
 800a2e4:	e774      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800a2e6:	4b32      	ldr	r3, [pc, #200]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a2e8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a2ea:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800a2ee:	d128      	bne.n	800a342 <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800a2f0:	9201      	str	r2, [sp, #4]
 800a2f2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a2f4:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800a2f8:	641a      	str	r2, [r3, #64]	@ 0x40
 800a2fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a2fc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a300:	9301      	str	r3, [sp, #4]
 800a302:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800a304:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a306:	4d2c      	ldr	r5, [pc, #176]	@ (800a3b8 <HAL_RCC_OscConfig+0x270>)
 800a308:	682b      	ldr	r3, [r5, #0]
 800a30a:	05d8      	lsls	r0, r3, #23
 800a30c:	d51b      	bpl.n	800a346 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a30e:	68a3      	ldr	r3, [r4, #8]
 800a310:	4d27      	ldr	r5, [pc, #156]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a312:	2b01      	cmp	r3, #1
 800a314:	d127      	bne.n	800a366 <HAL_RCC_OscConfig+0x21e>
 800a316:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a318:	f043 0301 	orr.w	r3, r3, #1
 800a31c:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800a31e:	f7fe fc1f 	bl	8008b60 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a322:	4e23      	ldr	r6, [pc, #140]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800a324:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a326:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a32a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800a32c:	079a      	lsls	r2, r3, #30
 800a32e:	d539      	bpl.n	800a3a4 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 800a330:	2f00      	cmp	r7, #0
 800a332:	f43f af1b 	beq.w	800a16c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800a336:	4a1e      	ldr	r2, [pc, #120]	@ (800a3b0 <HAL_RCC_OscConfig+0x268>)
 800a338:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800a33a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a33e:	6413      	str	r3, [r2, #64]	@ 0x40
 800a340:	e714      	b.n	800a16c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800a342:	2700      	movs	r7, #0
 800a344:	e7df      	b.n	800a306 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800a346:	682b      	ldr	r3, [r5, #0]
 800a348:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800a34c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800a34e:	f7fe fc07 	bl	8008b60 <HAL_GetTick>
 800a352:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800a354:	682b      	ldr	r3, [r5, #0]
 800a356:	05d9      	lsls	r1, r3, #23
 800a358:	d4d9      	bmi.n	800a30e <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a35a:	f7fe fc01 	bl	8008b60 <HAL_GetTick>
 800a35e:	1b80      	subs	r0, r0, r6
 800a360:	2802      	cmp	r0, #2
 800a362:	d9f7      	bls.n	800a354 <HAL_RCC_OscConfig+0x20c>
 800a364:	e734      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800a366:	2b05      	cmp	r3, #5
 800a368:	d104      	bne.n	800a374 <HAL_RCC_OscConfig+0x22c>
 800a36a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a36c:	f043 0304 	orr.w	r3, r3, #4
 800a370:	672b      	str	r3, [r5, #112]	@ 0x70
 800a372:	e7d0      	b.n	800a316 <HAL_RCC_OscConfig+0x1ce>
 800a374:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800a376:	f022 0201 	bic.w	r2, r2, #1
 800a37a:	672a      	str	r2, [r5, #112]	@ 0x70
 800a37c:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800a37e:	f022 0204 	bic.w	r2, r2, #4
 800a382:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800a384:	2b00      	cmp	r3, #0
 800a386:	d1ca      	bne.n	800a31e <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800a388:	f7fe fbea 	bl	8008b60 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a38c:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800a390:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800a392:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a394:	079b      	lsls	r3, r3, #30
 800a396:	d5cb      	bpl.n	800a330 <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a398:	f7fe fbe2 	bl	8008b60 <HAL_GetTick>
 800a39c:	1b80      	subs	r0, r0, r6
 800a39e:	4540      	cmp	r0, r8
 800a3a0:	d9f7      	bls.n	800a392 <HAL_RCC_OscConfig+0x24a>
 800a3a2:	e715      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a3a4:	f7fe fbdc 	bl	8008b60 <HAL_GetTick>
 800a3a8:	1b40      	subs	r0, r0, r5
 800a3aa:	4540      	cmp	r0, r8
 800a3ac:	d9bd      	bls.n	800a32a <HAL_RCC_OscConfig+0x1e2>
 800a3ae:	e70f      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
 800a3b0:	40023800 	.word	0x40023800
 800a3b4:	42470000 	.word	0x42470000
 800a3b8:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800a3bc:	4d37      	ldr	r5, [pc, #220]	@ (800a49c <HAL_RCC_OscConfig+0x354>)
 800a3be:	68aa      	ldr	r2, [r5, #8]
 800a3c0:	f002 020c 	and.w	r2, r2, #12
 800a3c4:	2a08      	cmp	r2, #8
 800a3c6:	d03e      	beq.n	800a446 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a3c8:	2b02      	cmp	r3, #2
 800a3ca:	4b35      	ldr	r3, [pc, #212]	@ (800a4a0 <HAL_RCC_OscConfig+0x358>)
 800a3cc:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800a3d0:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800a3d2:	d12b      	bne.n	800a42c <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800a3d4:	f7fe fbc4 	bl	8008b60 <HAL_GetTick>
 800a3d8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a3da:	682b      	ldr	r3, [r5, #0]
 800a3dc:	0199      	lsls	r1, r3, #6
 800a3de:	d41f      	bmi.n	800a420 <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800a3e0:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800a3e4:	4313      	orrs	r3, r2
 800a3e6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800a3e8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a3ec:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a3ee:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800a3f2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a3f4:	0852      	lsrs	r2, r2, #1
 800a3f6:	3a01      	subs	r2, #1
 800a3f8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a3fc:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800a3fe:	4b28      	ldr	r3, [pc, #160]	@ (800a4a0 <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a400:	4d26      	ldr	r5, [pc, #152]	@ (800a49c <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800a402:	2201      	movs	r2, #1
 800a404:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800a406:	f7fe fbab 	bl	8008b60 <HAL_GetTick>
 800a40a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a40c:	682b      	ldr	r3, [r5, #0]
 800a40e:	019a      	lsls	r2, r3, #6
 800a410:	f53f aeb0 	bmi.w	800a174 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800a414:	f7fe fba4 	bl	8008b60 <HAL_GetTick>
 800a418:	1b00      	subs	r0, r0, r4
 800a41a:	2802      	cmp	r0, #2
 800a41c:	d9f6      	bls.n	800a40c <HAL_RCC_OscConfig+0x2c4>
 800a41e:	e6d7      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800a420:	f7fe fb9e 	bl	8008b60 <HAL_GetTick>
 800a424:	1b80      	subs	r0, r0, r6
 800a426:	2802      	cmp	r0, #2
 800a428:	d9d7      	bls.n	800a3da <HAL_RCC_OscConfig+0x292>
 800a42a:	e6d1      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800a42c:	f7fe fb98 	bl	8008b60 <HAL_GetTick>
 800a430:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800a432:	682b      	ldr	r3, [r5, #0]
 800a434:	019b      	lsls	r3, r3, #6
 800a436:	f57f ae9d 	bpl.w	800a174 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800a43a:	f7fe fb91 	bl	8008b60 <HAL_GetTick>
 800a43e:	1b00      	subs	r0, r0, r4
 800a440:	2802      	cmp	r0, #2
 800a442:	d9f6      	bls.n	800a432 <HAL_RCC_OscConfig+0x2ea>
 800a444:	e6c4      	b.n	800a1d0 <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800a446:	2b01      	cmp	r3, #1
 800a448:	f43f aeab 	beq.w	800a1a2 <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 800a44c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a44e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a450:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800a454:	4291      	cmp	r1, r2
 800a456:	f47f aea4 	bne.w	800a1a2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a45a:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a45c:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800a460:	428a      	cmp	r2, r1
 800a462:	f47f ae9e 	bne.w	800a1a2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a466:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800a468:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800a46c:	401a      	ands	r2, r3
 800a46e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800a472:	f47f ae96 	bne.w	800a1a2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a476:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800a478:	0852      	lsrs	r2, r2, #1
 800a47a:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800a47e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800a480:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800a484:	f47f ae8d 	bne.w	800a1a2 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800a488:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800a48a:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800a48e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800a492:	bf14      	ite	ne
 800a494:	2001      	movne	r0, #1
 800a496:	2000      	moveq	r0, #0
 800a498:	e69b      	b.n	800a1d2 <HAL_RCC_OscConfig+0x8a>
 800a49a:	bf00      	nop
 800a49c:	40023800 	.word	0x40023800
 800a4a0:	42470000 	.word	0x42470000

0800a4a4 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a4a4:	4913      	ldr	r1, [pc, #76]	@ (800a4f4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800a4a6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a4a8:	688b      	ldr	r3, [r1, #8]
 800a4aa:	f003 030c 	and.w	r3, r3, #12
 800a4ae:	2b04      	cmp	r3, #4
 800a4b0:	d01c      	beq.n	800a4ec <HAL_RCC_GetSysClockFreq+0x48>
 800a4b2:	2b08      	cmp	r3, #8
 800a4b4:	d11c      	bne.n	800a4f0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a4b6:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a4b8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4ba:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800a4bc:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4c0:	bf14      	ite	ne
 800a4c2:	480d      	ldrne	r0, [pc, #52]	@ (800a4f8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4c4:	480d      	ldreq	r0, [pc, #52]	@ (800a4fc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4c6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800a4ca:	bf18      	it	ne
 800a4cc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800a4ce:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800a4d2:	fba1 0100 	umull	r0, r1, r1, r0
 800a4d6:	f7f5 ff2b 	bl	8000330 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800a4da:	4b06      	ldr	r3, [pc, #24]	@ (800a4f4 <HAL_RCC_GetSysClockFreq+0x50>)
 800a4dc:	685b      	ldr	r3, [r3, #4]
 800a4de:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800a4e2:	3301      	adds	r3, #1
 800a4e4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800a4e6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800a4ea:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800a4ec:	4802      	ldr	r0, [pc, #8]	@ (800a4f8 <HAL_RCC_GetSysClockFreq+0x54>)
 800a4ee:	e7fc      	b.n	800a4ea <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800a4f0:	4802      	ldr	r0, [pc, #8]	@ (800a4fc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800a4f2:	e7fa      	b.n	800a4ea <HAL_RCC_GetSysClockFreq+0x46>
 800a4f4:	40023800 	.word	0x40023800
 800a4f8:	007a1200 	.word	0x007a1200
 800a4fc:	00f42400 	.word	0x00f42400

0800a500 <HAL_RCC_ClockConfig>:
{
 800a500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a504:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800a506:	4604      	mov	r4, r0
 800a508:	b910      	cbnz	r0, 800a510 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800a50a:	2001      	movs	r0, #1
}
 800a50c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800a510:	4b43      	ldr	r3, [pc, #268]	@ (800a620 <HAL_RCC_ClockConfig+0x120>)
 800a512:	681a      	ldr	r2, [r3, #0]
 800a514:	f002 020f 	and.w	r2, r2, #15
 800a518:	428a      	cmp	r2, r1
 800a51a:	d328      	bcc.n	800a56e <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800a51c:	6821      	ldr	r1, [r4, #0]
 800a51e:	078f      	lsls	r7, r1, #30
 800a520:	d42d      	bmi.n	800a57e <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800a522:	07c8      	lsls	r0, r1, #31
 800a524:	d440      	bmi.n	800a5a8 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800a526:	4b3e      	ldr	r3, [pc, #248]	@ (800a620 <HAL_RCC_ClockConfig+0x120>)
 800a528:	681a      	ldr	r2, [r3, #0]
 800a52a:	f002 020f 	and.w	r2, r2, #15
 800a52e:	42aa      	cmp	r2, r5
 800a530:	d865      	bhi.n	800a5fe <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a532:	6822      	ldr	r2, [r4, #0]
 800a534:	0751      	lsls	r1, r2, #29
 800a536:	d46b      	bmi.n	800a610 <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a538:	0713      	lsls	r3, r2, #28
 800a53a:	d507      	bpl.n	800a54c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800a53c:	4a39      	ldr	r2, [pc, #228]	@ (800a624 <HAL_RCC_ClockConfig+0x124>)
 800a53e:	6921      	ldr	r1, [r4, #16]
 800a540:	6893      	ldr	r3, [r2, #8]
 800a542:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800a546:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800a54a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800a54c:	f7ff ffaa 	bl	800a4a4 <HAL_RCC_GetSysClockFreq>
 800a550:	4b34      	ldr	r3, [pc, #208]	@ (800a624 <HAL_RCC_ClockConfig+0x124>)
 800a552:	4a35      	ldr	r2, [pc, #212]	@ (800a628 <HAL_RCC_ClockConfig+0x128>)
 800a554:	689b      	ldr	r3, [r3, #8]
 800a556:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800a55a:	5cd3      	ldrb	r3, [r2, r3]
 800a55c:	40d8      	lsrs	r0, r3
 800a55e:	4b33      	ldr	r3, [pc, #204]	@ (800a62c <HAL_RCC_ClockConfig+0x12c>)
 800a560:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800a562:	4b33      	ldr	r3, [pc, #204]	@ (800a630 <HAL_RCC_ClockConfig+0x130>)
 800a564:	6818      	ldr	r0, [r3, #0]
 800a566:	f7f7 fedd 	bl	8002324 <HAL_InitTick>
  return HAL_OK;
 800a56a:	2000      	movs	r0, #0
 800a56c:	e7ce      	b.n	800a50c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a56e:	b2ca      	uxtb	r2, r1
 800a570:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800a572:	681b      	ldr	r3, [r3, #0]
 800a574:	f003 030f 	and.w	r3, r3, #15
 800a578:	428b      	cmp	r3, r1
 800a57a:	d1c6      	bne.n	800a50a <HAL_RCC_ClockConfig+0xa>
 800a57c:	e7ce      	b.n	800a51c <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800a57e:	4b29      	ldr	r3, [pc, #164]	@ (800a624 <HAL_RCC_ClockConfig+0x124>)
 800a580:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800a584:	bf1e      	ittt	ne
 800a586:	689a      	ldrne	r2, [r3, #8]
 800a588:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800a58c:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800a58e:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800a590:	bf42      	ittt	mi
 800a592:	689a      	ldrmi	r2, [r3, #8]
 800a594:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800a598:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800a59a:	689a      	ldr	r2, [r3, #8]
 800a59c:	68a0      	ldr	r0, [r4, #8]
 800a59e:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800a5a2:	4302      	orrs	r2, r0
 800a5a4:	609a      	str	r2, [r3, #8]
 800a5a6:	e7bc      	b.n	800a522 <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800a5a8:	6862      	ldr	r2, [r4, #4]
 800a5aa:	4b1e      	ldr	r3, [pc, #120]	@ (800a624 <HAL_RCC_ClockConfig+0x124>)
 800a5ac:	2a01      	cmp	r2, #1
 800a5ae:	d11c      	bne.n	800a5ea <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800a5b0:	681b      	ldr	r3, [r3, #0]
 800a5b2:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a5b6:	d0a8      	beq.n	800a50a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800a5b8:	4e1a      	ldr	r6, [pc, #104]	@ (800a624 <HAL_RCC_ClockConfig+0x124>)
 800a5ba:	68b3      	ldr	r3, [r6, #8]
 800a5bc:	f023 0303 	bic.w	r3, r3, #3
 800a5c0:	4313      	orrs	r3, r2
 800a5c2:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800a5c4:	f7fe facc 	bl	8008b60 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a5c8:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800a5cc:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800a5ce:	68b3      	ldr	r3, [r6, #8]
 800a5d0:	6862      	ldr	r2, [r4, #4]
 800a5d2:	f003 030c 	and.w	r3, r3, #12
 800a5d6:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800a5da:	d0a4      	beq.n	800a526 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800a5dc:	f7fe fac0 	bl	8008b60 <HAL_GetTick>
 800a5e0:	1bc0      	subs	r0, r0, r7
 800a5e2:	4540      	cmp	r0, r8
 800a5e4:	d9f3      	bls.n	800a5ce <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800a5e6:	2003      	movs	r0, #3
 800a5e8:	e790      	b.n	800a50c <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a5ea:	1e91      	subs	r1, r2, #2
 800a5ec:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a5ee:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800a5f0:	d802      	bhi.n	800a5f8 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800a5f2:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800a5f6:	e7de      	b.n	800a5b6 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800a5f8:	f013 0f02 	tst.w	r3, #2
 800a5fc:	e7db      	b.n	800a5b6 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800a5fe:	b2ea      	uxtb	r2, r5
 800a600:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800a602:	681b      	ldr	r3, [r3, #0]
 800a604:	f003 030f 	and.w	r3, r3, #15
 800a608:	42ab      	cmp	r3, r5
 800a60a:	f47f af7e 	bne.w	800a50a <HAL_RCC_ClockConfig+0xa>
 800a60e:	e790      	b.n	800a532 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800a610:	4904      	ldr	r1, [pc, #16]	@ (800a624 <HAL_RCC_ClockConfig+0x124>)
 800a612:	68e0      	ldr	r0, [r4, #12]
 800a614:	688b      	ldr	r3, [r1, #8]
 800a616:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800a61a:	4303      	orrs	r3, r0
 800a61c:	608b      	str	r3, [r1, #8]
 800a61e:	e78b      	b.n	800a538 <HAL_RCC_ClockConfig+0x38>
 800a620:	40023c00 	.word	0x40023c00
 800a624:	40023800 	.word	0x40023800
 800a628:	0802acd8 	.word	0x0802acd8
 800a62c:	20000074 	.word	0x20000074
 800a630:	2000007c 	.word	0x2000007c

0800a634 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800a634:	4b04      	ldr	r3, [pc, #16]	@ (800a648 <HAL_RCC_GetPCLK1Freq+0x14>)
 800a636:	4a05      	ldr	r2, [pc, #20]	@ (800a64c <HAL_RCC_GetPCLK1Freq+0x18>)
 800a638:	689b      	ldr	r3, [r3, #8]
 800a63a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800a63e:	5cd3      	ldrb	r3, [r2, r3]
 800a640:	4a03      	ldr	r2, [pc, #12]	@ (800a650 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800a642:	6810      	ldr	r0, [r2, #0]
}
 800a644:	40d8      	lsrs	r0, r3
 800a646:	4770      	bx	lr
 800a648:	40023800 	.word	0x40023800
 800a64c:	0802acd0 	.word	0x0802acd0
 800a650:	20000074 	.word	0x20000074

0800a654 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 800a654:	4b04      	ldr	r3, [pc, #16]	@ (800a668 <HAL_RCC_GetPCLK2Freq+0x14>)
 800a656:	4a05      	ldr	r2, [pc, #20]	@ (800a66c <HAL_RCC_GetPCLK2Freq+0x18>)
 800a658:	689b      	ldr	r3, [r3, #8]
 800a65a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800a65e:	5cd3      	ldrb	r3, [r2, r3]
 800a660:	4a03      	ldr	r2, [pc, #12]	@ (800a670 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800a662:	6810      	ldr	r0, [r2, #0]
}
 800a664:	40d8      	lsrs	r0, r3
 800a666:	4770      	bx	lr
 800a668:	40023800 	.word	0x40023800
 800a66c:	0802acd0 	.word	0x0802acd0
 800a670:	20000074 	.word	0x20000074

0800a674 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800a674:	230f      	movs	r3, #15
 800a676:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800a678:	4b0b      	ldr	r3, [pc, #44]	@ (800a6a8 <HAL_RCC_GetClockConfig+0x34>)
 800a67a:	689a      	ldr	r2, [r3, #8]
 800a67c:	f002 0203 	and.w	r2, r2, #3
 800a680:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800a682:	689a      	ldr	r2, [r3, #8]
 800a684:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800a688:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800a68a:	689a      	ldr	r2, [r3, #8]
 800a68c:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800a690:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800a692:	689b      	ldr	r3, [r3, #8]
 800a694:	08db      	lsrs	r3, r3, #3
 800a696:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800a69a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800a69c:	4b03      	ldr	r3, [pc, #12]	@ (800a6ac <HAL_RCC_GetClockConfig+0x38>)
 800a69e:	681b      	ldr	r3, [r3, #0]
 800a6a0:	f003 030f 	and.w	r3, r3, #15
 800a6a4:	600b      	str	r3, [r1, #0]
}
 800a6a6:	4770      	bx	lr
 800a6a8:	40023800 	.word	0x40023800
 800a6ac:	40023c00 	.word	0x40023c00

0800a6b0 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800a6b0:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a6b2:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800a6b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a6b8:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800a6ba:	f040 8088 	bne.w	800a7ce <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800a6be:	6823      	ldr	r3, [r4, #0]
 800a6c0:	f013 0f0c 	tst.w	r3, #12
 800a6c4:	d045      	beq.n	800a752 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800a6c6:	4b8c      	ldr	r3, [pc, #560]	@ (800a8f8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a6c8:	4d8c      	ldr	r5, [pc, #560]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800a6ca:	2200      	movs	r2, #0
 800a6cc:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800a6ce:	f7fe fa47 	bl	8008b60 <HAL_GetTick>
 800a6d2:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800a6d4:	682b      	ldr	r3, [r5, #0]
 800a6d6:	0099      	lsls	r1, r3, #2
 800a6d8:	f100 80cb 	bmi.w	800a872 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800a6dc:	6821      	ldr	r1, [r4, #0]
 800a6de:	074a      	lsls	r2, r1, #29
 800a6e0:	d515      	bpl.n	800a70e <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a6e2:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800a6e6:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800a6ea:	061b      	lsls	r3, r3, #24
 800a6ec:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800a6f0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a6f4:	4313      	orrs	r3, r2
 800a6f6:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800a6fa:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800a6fe:	6a22      	ldr	r2, [r4, #32]
 800a700:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800a704:	3a01      	subs	r2, #1
 800a706:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800a70a:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800a70e:	070b      	lsls	r3, r1, #28
 800a710:	d514      	bpl.n	800a73c <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a712:	4a7a      	ldr	r2, [pc, #488]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a714:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800a716:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800a71a:	6920      	ldr	r0, [r4, #16]
 800a71c:	071b      	lsls	r3, r3, #28
 800a71e:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800a722:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800a726:	430b      	orrs	r3, r1
 800a728:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800a72c:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800a730:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800a732:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800a736:	430b      	orrs	r3, r1
 800a738:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800a73c:	4b6e      	ldr	r3, [pc, #440]	@ (800a8f8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a73e:	4e6f      	ldr	r6, [pc, #444]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 800a740:	2201      	movs	r2, #1
 800a742:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800a744:	f7fe fa0c 	bl	8008b60 <HAL_GetTick>
 800a748:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800a74a:	6833      	ldr	r3, [r6, #0]
 800a74c:	009f      	lsls	r7, r3, #2
 800a74e:	f140 8097 	bpl.w	800a880 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800a752:	6823      	ldr	r3, [r4, #0]
 800a754:	0698      	lsls	r0, r3, #26
 800a756:	d534      	bpl.n	800a7c2 <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800a758:	2300      	movs	r3, #0
 800a75a:	9301      	str	r3, [sp, #4]
 800a75c:	4b67      	ldr	r3, [pc, #412]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800a75e:	4d68      	ldr	r5, [pc, #416]	@ (800a900 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800a760:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800a762:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800a766:	641a      	str	r2, [r3, #64]	@ 0x40
 800a768:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a76a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a76e:	9301      	str	r3, [sp, #4]
 800a770:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800a772:	682b      	ldr	r3, [r5, #0]
 800a774:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800a778:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800a77a:	f7fe f9f1 	bl	8008b60 <HAL_GetTick>
 800a77e:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800a780:	682b      	ldr	r3, [r5, #0]
 800a782:	05d8      	lsls	r0, r3, #23
 800a784:	f140 8083 	bpl.w	800a88e <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a788:	4d5c      	ldr	r5, [pc, #368]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a78a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800a78c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a78e:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800a792:	f040 8083 	bne.w	800a89c <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a796:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800a798:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800a79c:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 800a7a0:	4a56      	ldr	r2, [pc, #344]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800a7a2:	f040 809e 	bne.w	800a8e2 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a7a6:	6891      	ldr	r1, [r2, #8]
 800a7a8:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800a7ac:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800a7b0:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800a7b4:	4301      	orrs	r1, r0
 800a7b6:	6091      	str	r1, [r2, #8]
 800a7b8:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800a7ba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a7be:	430b      	orrs	r3, r1
 800a7c0:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800a7c2:	6823      	ldr	r3, [r4, #0]
 800a7c4:	06db      	lsls	r3, r3, #27
 800a7c6:	f100 8090 	bmi.w	800a8ea <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800a7ca:	2000      	movs	r0, #0
 800a7cc:	e04f      	b.n	800a86e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800a7ce:	4b4a      	ldr	r3, [pc, #296]	@ (800a8f8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a7d0:	4e4a      	ldr	r6, [pc, #296]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800a7d2:	2200      	movs	r2, #0
 800a7d4:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800a7d6:	f7fe f9c3 	bl	8008b60 <HAL_GetTick>
 800a7da:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800a7dc:	6833      	ldr	r3, [r6, #0]
 800a7de:	011f      	lsls	r7, r3, #4
 800a7e0:	d43f      	bmi.n	800a862 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800a7e2:	6821      	ldr	r1, [r4, #0]
 800a7e4:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800a7e6:	bf41      	itttt	mi
 800a7e8:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800a7ec:	071b      	lslmi	r3, r3, #28
 800a7ee:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800a7f2:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800a7f6:	078a      	lsls	r2, r1, #30
 800a7f8:	d515      	bpl.n	800a826 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a7fa:	4a40      	ldr	r2, [pc, #256]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800a7fc:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800a7fe:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800a802:	6865      	ldr	r5, [r4, #4]
 800a804:	061b      	lsls	r3, r3, #24
 800a806:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800a80a:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800a80e:	4303      	orrs	r3, r0
 800a810:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800a814:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 800a818:	69e3      	ldr	r3, [r4, #28]
 800a81a:	f020 001f 	bic.w	r0, r0, #31
 800a81e:	3b01      	subs	r3, #1
 800a820:	4303      	orrs	r3, r0
 800a822:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800a826:	064b      	lsls	r3, r1, #25
 800a828:	d50a      	bpl.n	800a840 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800a82a:	68e3      	ldr	r3, [r4, #12]
 800a82c:	6862      	ldr	r2, [r4, #4]
 800a82e:	061b      	lsls	r3, r3, #24
 800a830:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800a834:	68a2      	ldr	r2, [r4, #8]
 800a836:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800a83a:	4a30      	ldr	r2, [pc, #192]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800a83c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800a840:	4b2d      	ldr	r3, [pc, #180]	@ (800a8f8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a842:	4e2e      	ldr	r6, [pc, #184]	@ (800a8fc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 800a844:	2201      	movs	r2, #1
 800a846:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800a848:	f7fe f98a 	bl	8008b60 <HAL_GetTick>
 800a84c:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800a84e:	6833      	ldr	r3, [r6, #0]
 800a850:	011f      	lsls	r7, r3, #4
 800a852:	f53f af34 	bmi.w	800a6be <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800a856:	f7fe f983 	bl	8008b60 <HAL_GetTick>
 800a85a:	1b40      	subs	r0, r0, r5
 800a85c:	2802      	cmp	r0, #2
 800a85e:	d9f6      	bls.n	800a84e <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800a860:	e004      	b.n	800a86c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800a862:	f7fe f97d 	bl	8008b60 <HAL_GetTick>
 800a866:	1b40      	subs	r0, r0, r5
 800a868:	2802      	cmp	r0, #2
 800a86a:	d9b7      	bls.n	800a7dc <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800a86c:	2003      	movs	r0, #3
}
 800a86e:	b003      	add	sp, #12
 800a870:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800a872:	f7fe f975 	bl	8008b60 <HAL_GetTick>
 800a876:	1b80      	subs	r0, r0, r6
 800a878:	2802      	cmp	r0, #2
 800a87a:	f67f af2b 	bls.w	800a6d4 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800a87e:	e7f5      	b.n	800a86c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800a880:	f7fe f96e 	bl	8008b60 <HAL_GetTick>
 800a884:	1b40      	subs	r0, r0, r5
 800a886:	2802      	cmp	r0, #2
 800a888:	f67f af5f 	bls.w	800a74a <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800a88c:	e7ee      	b.n	800a86c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800a88e:	f7fe f967 	bl	8008b60 <HAL_GetTick>
 800a892:	1b80      	subs	r0, r0, r6
 800a894:	2802      	cmp	r0, #2
 800a896:	f67f af73 	bls.w	800a780 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800a89a:	e7e7      	b.n	800a86c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800a89c:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800a8a0:	4293      	cmp	r3, r2
 800a8a2:	f43f af78 	beq.w	800a796 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a8a6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800a8a8:	4a13      	ldr	r2, [pc, #76]	@ (800a8f8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800a8aa:	2101      	movs	r1, #1
 800a8ac:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800a8b0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800a8b4:	2100      	movs	r1, #0
 800a8b6:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800a8ba:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800a8bc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a8be:	07d9      	lsls	r1, r3, #31
 800a8c0:	f57f af69 	bpl.w	800a796 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800a8c4:	f7fe f94c 	bl	8008b60 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a8c8:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800a8cc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800a8ce:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800a8d0:	079a      	lsls	r2, r3, #30
 800a8d2:	f53f af60 	bmi.w	800a796 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800a8d6:	f7fe f943 	bl	8008b60 <HAL_GetTick>
 800a8da:	1b80      	subs	r0, r0, r6
 800a8dc:	42b8      	cmp	r0, r7
 800a8de:	d9f6      	bls.n	800a8ce <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800a8e0:	e7c4      	b.n	800a86c <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800a8e2:	6891      	ldr	r1, [r2, #8]
 800a8e4:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800a8e8:	e765      	b.n	800a7b6 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800a8ea:	4b06      	ldr	r3, [pc, #24]	@ (800a904 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800a8ec:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800a8f0:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800a8f4:	e769      	b.n	800a7ca <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800a8f6:	bf00      	nop
 800a8f8:	42470000 	.word	0x42470000
 800a8fc:	40023800 	.word	0x40023800
 800a900:	40007000 	.word	0x40007000
 800a904:	42471000 	.word	0x42471000

0800a908 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800a908:	b538      	push	{r3, r4, r5, lr}
 800a90a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800a90c:	4604      	mov	r4, r0
 800a90e:	b1c8      	cbz	r0, 800a944 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800a910:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800a914:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800a918:	b91b      	cbnz	r3, 800a922 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800a91a:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800a91e:	f7f7 fc95 	bl	800224c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a922:	2302      	movs	r3, #2
 800a924:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800a928:	1d21      	adds	r1, r4, #4
 800a92a:	6820      	ldr	r0, [r4, #0]
 800a92c:	f000 feed 	bl	800b70a <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800a930:	6862      	ldr	r2, [r4, #4]
 800a932:	6820      	ldr	r0, [r4, #0]
 800a934:	4629      	mov	r1, r5
 800a936:	f000 ff1e 	bl	800b776 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800a93a:	2301      	movs	r3, #1
 800a93c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800a940:	2000      	movs	r0, #0
}
 800a942:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a944:	2001      	movs	r0, #1
 800a946:	e7fc      	b.n	800a942 <HAL_SDRAM_Init+0x3a>

0800a948 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800a948:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a94a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800a94e:	2b02      	cmp	r3, #2
{
 800a950:	4605      	mov	r5, r0
 800a952:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800a954:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800a956:	d012      	beq.n	800a97e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800a958:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800a95c:	2c01      	cmp	r4, #1
 800a95e:	d10f      	bne.n	800a980 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a960:	2302      	movs	r3, #2
 800a962:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800a966:	6828      	ldr	r0, [r5, #0]
 800a968:	f000 ff3b 	bl	800b7e2 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800a96c:	6833      	ldr	r3, [r6, #0]
 800a96e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800a970:	bf06      	itte	eq
 800a972:	2305      	moveq	r3, #5
 800a974:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800a978:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800a97c:	2000      	movs	r0, #0
}
 800a97e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800a980:	2001      	movs	r0, #1
 800a982:	e7fc      	b.n	800a97e <HAL_SDRAM_SendCommand+0x36>

0800a984 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800a984:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a986:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800a98a:	2b02      	cmp	r3, #2
{
 800a98c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800a98e:	b2d8      	uxtb	r0, r3
 800a990:	d00d      	beq.n	800a9ae <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800a992:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800a996:	2b01      	cmp	r3, #1
 800a998:	b2dd      	uxtb	r5, r3
 800a99a:	d109      	bne.n	800a9b0 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a99c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a99e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800a9a0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800a9a4:	f000 ff41 	bl	800b82a <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800a9a8:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800a9ac:	2000      	movs	r0, #0
}
 800a9ae:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a9b0:	2001      	movs	r0, #1
 800a9b2:	e7fc      	b.n	800a9ae <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800a9b4 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800a9b4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a9b8:	461f      	mov	r7, r3
 800a9ba:	4689      	mov	r9, r1
 800a9bc:	4690      	mov	r8, r2
 800a9be:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800a9c0:	f7fe f8ce 	bl	8008b60 <HAL_GetTick>
 800a9c4:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800a9c6:	443d      	add	r5, r7
 800a9c8:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800a9ca:	f7fe f8c9 	bl	8008b60 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a9ce:	4b26      	ldr	r3, [pc, #152]	@ (800aa68 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800a9d0:	681e      	ldr	r6, [r3, #0]
 800a9d2:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800a9d6:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 800a9d8:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800a9da:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800a9dc:	6822      	ldr	r2, [r4, #0]
 800a9de:	6893      	ldr	r3, [r2, #8]
 800a9e0:	ea39 0303 	bics.w	r3, r9, r3
 800a9e4:	bf0c      	ite	eq
 800a9e6:	2301      	moveq	r3, #1
 800a9e8:	2300      	movne	r3, #0
 800a9ea:	4543      	cmp	r3, r8
 800a9ec:	d101      	bne.n	800a9f2 <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800a9ee:	2000      	movs	r0, #0
 800a9f0:	e02e      	b.n	800aa50 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800a9f2:	1c7b      	adds	r3, r7, #1
 800a9f4:	d0f3      	beq.n	800a9de <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800a9f6:	f7fe f8b3 	bl	8008b60 <HAL_GetTick>
 800a9fa:	eba0 000a 	sub.w	r0, r0, sl
 800a9fe:	42a8      	cmp	r0, r5
 800aa00:	d329      	bcc.n	800aa56 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800aa02:	6823      	ldr	r3, [r4, #0]
 800aa04:	685a      	ldr	r2, [r3, #4]
 800aa06:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800aa0a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aa0c:	6862      	ldr	r2, [r4, #4]
 800aa0e:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800aa12:	d10a      	bne.n	800aa2a <SPI_WaitFlagStateUntilTimeout+0x76>
 800aa14:	68a2      	ldr	r2, [r4, #8]
 800aa16:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800aa1a:	d002      	beq.n	800aa22 <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800aa1c:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800aa20:	d103      	bne.n	800aa2a <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800aa22:	681a      	ldr	r2, [r3, #0]
 800aa24:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800aa28:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800aa2a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800aa2c:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800aa30:	d107      	bne.n	800aa42 <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800aa32:	681a      	ldr	r2, [r3, #0]
 800aa34:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800aa38:	601a      	str	r2, [r3, #0]
 800aa3a:	681a      	ldr	r2, [r3, #0]
 800aa3c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800aa40:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800aa42:	2301      	movs	r3, #1
 800aa44:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800aa48:	2300      	movs	r3, #0
 800aa4a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800aa4e:	2003      	movs	r0, #3
}
 800aa50:	b002      	add	sp, #8
 800aa52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800aa56:	9a01      	ldr	r2, [sp, #4]
      count--;
 800aa58:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 800aa5a:	2a00      	cmp	r2, #0
      count--;
 800aa5c:	f103 33ff 	add.w	r3, r3, #4294967295
 800aa60:	9301      	str	r3, [sp, #4]
 800aa62:	bf08      	it	eq
 800aa64:	4615      	moveq	r5, r2
 800aa66:	e7b9      	b.n	800a9dc <SPI_WaitFlagStateUntilTimeout+0x28>
 800aa68:	20000074 	.word	0x20000074

0800aa6c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800aa6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa6e:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800aa70:	460b      	mov	r3, r1
 800aa72:	9200      	str	r2, [sp, #0]
{
 800aa74:	460e      	mov	r6, r1
 800aa76:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800aa78:	2102      	movs	r1, #2
 800aa7a:	2201      	movs	r2, #1
{
 800aa7c:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800aa7e:	f7ff ff99 	bl	800a9b4 <SPI_WaitFlagStateUntilTimeout>
 800aa82:	4605      	mov	r5, r0
 800aa84:	b128      	cbz	r0, 800aa92 <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800aa86:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800aa88:	f043 0320 	orr.w	r3, r3, #32
 800aa8c:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800aa8e:	2503      	movs	r5, #3
 800aa90:	e015      	b.n	800aabe <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800aa92:	4b12      	ldr	r3, [pc, #72]	@ (800aadc <SPI_EndRxTxTransaction+0x70>)
 800aa94:	6818      	ldr	r0, [r3, #0]
 800aa96:	4b12      	ldr	r3, [pc, #72]	@ (800aae0 <SPI_EndRxTxTransaction+0x74>)
 800aa98:	fbb0 f0f3 	udiv	r0, r0, r3
 800aa9c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800aaa0:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800aaa2:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800aaa4:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800aaa6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800aaaa:	d10b      	bne.n	800aac4 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800aaac:	9700      	str	r7, [sp, #0]
 800aaae:	4633      	mov	r3, r6
 800aab0:	462a      	mov	r2, r5
 800aab2:	2180      	movs	r1, #128	@ 0x80
 800aab4:	4620      	mov	r0, r4
 800aab6:	f7ff ff7d 	bl	800a9b4 <SPI_WaitFlagStateUntilTimeout>
 800aaba:	2800      	cmp	r0, #0
 800aabc:	d1e3      	bne.n	800aa86 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800aabe:	4628      	mov	r0, r5
 800aac0:	b005      	add	sp, #20
 800aac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 800aac4:	9b03      	ldr	r3, [sp, #12]
 800aac6:	2b00      	cmp	r3, #0
 800aac8:	d0f9      	beq.n	800aabe <SPI_EndRxTxTransaction+0x52>
      count--;
 800aaca:	9b03      	ldr	r3, [sp, #12]
 800aacc:	3b01      	subs	r3, #1
 800aace:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800aad0:	6823      	ldr	r3, [r4, #0]
 800aad2:	689b      	ldr	r3, [r3, #8]
 800aad4:	061b      	lsls	r3, r3, #24
 800aad6:	d4f5      	bmi.n	800aac4 <SPI_EndRxTxTransaction+0x58>
 800aad8:	e7f1      	b.n	800aabe <SPI_EndRxTxTransaction+0x52>
 800aada:	bf00      	nop
 800aadc:	20000074 	.word	0x20000074
 800aae0:	016e3600 	.word	0x016e3600

0800aae4 <SPI_EndRxTransaction>:
{
 800aae4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aae6:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aae8:	6841      	ldr	r1, [r0, #4]
 800aaea:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800aaee:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800aaf0:	d008      	beq.n	800ab04 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800aaf2:	9200      	str	r2, [sp, #0]
 800aaf4:	2101      	movs	r1, #1
 800aaf6:	2200      	movs	r2, #0
 800aaf8:	f7ff ff5c 	bl	800a9b4 <SPI_WaitFlagStateUntilTimeout>
 800aafc:	b9d0      	cbnz	r0, 800ab34 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800aafe:	2000      	movs	r0, #0
}
 800ab00:	b003      	add	sp, #12
 800ab02:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ab04:	6881      	ldr	r1, [r0, #8]
 800ab06:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800ab0a:	d002      	beq.n	800ab12 <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ab0c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800ab10:	d107      	bne.n	800ab22 <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800ab12:	6825      	ldr	r5, [r4, #0]
 800ab14:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800ab16:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800ab1a:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800ab1e:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800ab20:	d004      	beq.n	800ab2c <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ab22:	9200      	str	r2, [sp, #0]
 800ab24:	2180      	movs	r1, #128	@ 0x80
 800ab26:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ab28:	4620      	mov	r0, r4
 800ab2a:	e7e5      	b.n	800aaf8 <SPI_EndRxTransaction+0x14>
 800ab2c:	9200      	str	r2, [sp, #0]
 800ab2e:	2101      	movs	r1, #1
 800ab30:	2200      	movs	r2, #0
 800ab32:	e7f9      	b.n	800ab28 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ab34:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ab36:	f043 0320 	orr.w	r3, r3, #32
 800ab3a:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800ab3c:	2003      	movs	r0, #3
 800ab3e:	e7df      	b.n	800ab00 <SPI_EndRxTransaction+0x1c>

0800ab40 <HAL_SPI_Init>:
{
 800ab40:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800ab42:	4604      	mov	r4, r0
 800ab44:	2800      	cmp	r0, #0
 800ab46:	d055      	beq.n	800abf4 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ab48:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800ab4a:	2b00      	cmp	r3, #0
 800ab4c:	d14e      	bne.n	800abec <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ab4e:	6842      	ldr	r2, [r0, #4]
 800ab50:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800ab54:	d000      	beq.n	800ab58 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800ab56:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ab58:	2300      	movs	r3, #0
 800ab5a:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ab5c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800ab60:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800ab64:	b923      	cbnz	r3, 800ab70 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800ab66:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800ab6a:	4620      	mov	r0, r4
 800ab6c:	f7f7 fb38 	bl	80021e0 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800ab70:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ab72:	68a0      	ldr	r0, [r4, #8]
 800ab74:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ab76:	2302      	movs	r3, #2
 800ab78:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800ab7c:	680b      	ldr	r3, [r1, #0]
 800ab7e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ab82:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ab84:	6863      	ldr	r3, [r4, #4]
 800ab86:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800ab8a:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800ab8e:	4303      	orrs	r3, r0
 800ab90:	68e0      	ldr	r0, [r4, #12]
 800ab92:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800ab96:	4303      	orrs	r3, r0
 800ab98:	6920      	ldr	r0, [r4, #16]
 800ab9a:	f000 0002 	and.w	r0, r0, #2
 800ab9e:	4303      	orrs	r3, r0
 800aba0:	6960      	ldr	r0, [r4, #20]
 800aba2:	f000 0001 	and.w	r0, r0, #1
 800aba6:	4303      	orrs	r3, r0
 800aba8:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800abac:	4303      	orrs	r3, r0
 800abae:	69e0      	ldr	r0, [r4, #28]
 800abb0:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800abb4:	4303      	orrs	r3, r0
 800abb6:	6a20      	ldr	r0, [r4, #32]
 800abb8:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800abbc:	4303      	orrs	r3, r0
 800abbe:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800abc0:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800abc4:	4303      	orrs	r3, r0
 800abc6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800abc8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800abca:	0c12      	lsrs	r2, r2, #16
 800abcc:	f003 0310 	and.w	r3, r3, #16
 800abd0:	f002 0204 	and.w	r2, r2, #4
 800abd4:	431a      	orrs	r2, r3
 800abd6:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800abd8:	69cb      	ldr	r3, [r1, #28]
 800abda:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800abde:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800abe0:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800abe2:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800abe4:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800abe6:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800abea:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800abec:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800abee:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800abf2:	e7b1      	b.n	800ab58 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800abf4:	2001      	movs	r0, #1
 800abf6:	e7f8      	b.n	800abea <HAL_SPI_Init+0xaa>

0800abf8 <HAL_SPI_Transmit>:
{
 800abf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800abfc:	4604      	mov	r4, r0
 800abfe:	461f      	mov	r7, r3
 800ac00:	460d      	mov	r5, r1
 800ac02:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 800ac04:	f7fd ffac 	bl	8008b60 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ac08:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800ac0c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800ac0e:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ac10:	b2d8      	uxtb	r0, r3
 800ac12:	f040 809f 	bne.w	800ad54 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800ac16:	2d00      	cmp	r5, #0
 800ac18:	d074      	beq.n	800ad04 <HAL_SPI_Transmit+0x10c>
 800ac1a:	f1b8 0f00 	cmp.w	r8, #0
 800ac1e:	d071      	beq.n	800ad04 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 800ac20:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800ac24:	2b01      	cmp	r3, #1
 800ac26:	f000 8095 	beq.w	800ad54 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800ac2a:	2303      	movs	r3, #3
 800ac2c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ac30:	2300      	movs	r3, #0
 800ac32:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800ac34:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 800ac38:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800ac3c:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800ac3e:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800ac40:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ac42:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800ac44:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 800ac46:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ac4a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800ac4e:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800ac50:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ac54:	d107      	bne.n	800ac66 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800ac56:	6833      	ldr	r3, [r6, #0]
 800ac58:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800ac5c:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 800ac5e:	6833      	ldr	r3, [r6, #0]
 800ac60:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800ac64:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ac66:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ac68:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ac6a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800ac6c:	bf5e      	ittt	pl
 800ac6e:	6833      	ldrpl	r3, [r6, #0]
 800ac70:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800ac74:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ac76:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ac7a:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ac7c:	d145      	bne.n	800ad0a <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ac7e:	b113      	cbz	r3, 800ac86 <HAL_SPI_Transmit+0x8e>
 800ac80:	f1b8 0f01 	cmp.w	r8, #1
 800ac84:	d107      	bne.n	800ac96 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800ac86:	f835 3b02 	ldrh.w	r3, [r5], #2
 800ac8a:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ac8c:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800ac8e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ac90:	3b01      	subs	r3, #1
 800ac92:	b29b      	uxth	r3, r3
 800ac94:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800ac96:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ac98:	b29b      	uxth	r3, r3
 800ac9a:	b9d3      	cbnz	r3, 800acd2 <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ac9c:	464a      	mov	r2, r9
 800ac9e:	4639      	mov	r1, r7
 800aca0:	4620      	mov	r0, r4
 800aca2:	f7ff fee3 	bl	800aa6c <SPI_EndRxTxTransaction>
 800aca6:	2800      	cmp	r0, #0
 800aca8:	d151      	bne.n	800ad4e <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800acaa:	68a3      	ldr	r3, [r4, #8]
 800acac:	b933      	cbnz	r3, 800acbc <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800acae:	9301      	str	r3, [sp, #4]
 800acb0:	6823      	ldr	r3, [r4, #0]
 800acb2:	68da      	ldr	r2, [r3, #12]
 800acb4:	9201      	str	r2, [sp, #4]
 800acb6:	689b      	ldr	r3, [r3, #8]
 800acb8:	9301      	str	r3, [sp, #4]
 800acba:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800acbc:	2301      	movs	r3, #1
 800acbe:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800acc2:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800acc4:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800acc6:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800acc8:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800accc:	bf18      	it	ne
 800acce:	2001      	movne	r0, #1
 800acd0:	e018      	b.n	800ad04 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800acd2:	6822      	ldr	r2, [r4, #0]
 800acd4:	6893      	ldr	r3, [r2, #8]
 800acd6:	0798      	lsls	r0, r3, #30
 800acd8:	d505      	bpl.n	800ace6 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800acda:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800acdc:	f833 1b02 	ldrh.w	r1, [r3], #2
 800ace0:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ace2:	6323      	str	r3, [r4, #48]	@ 0x30
 800ace4:	e7d3      	b.n	800ac8e <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ace6:	f7fd ff3b 	bl	8008b60 <HAL_GetTick>
 800acea:	eba0 0009 	sub.w	r0, r0, r9
 800acee:	42b8      	cmp	r0, r7
 800acf0:	d3d1      	bcc.n	800ac96 <HAL_SPI_Transmit+0x9e>
 800acf2:	1c79      	adds	r1, r7, #1
 800acf4:	d0cf      	beq.n	800ac96 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800acf6:	2301      	movs	r3, #1
 800acf8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800acfc:	2300      	movs	r3, #0
 800acfe:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800ad02:	2003      	movs	r0, #3
}
 800ad04:	b003      	add	sp, #12
 800ad06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ad0a:	b113      	cbz	r3, 800ad12 <HAL_SPI_Transmit+0x11a>
 800ad0c:	f1b8 0f01 	cmp.w	r8, #1
 800ad10:	d108      	bne.n	800ad24 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800ad12:	782b      	ldrb	r3, [r5, #0]
 800ad14:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ad16:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ad18:	3301      	adds	r3, #1
 800ad1a:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800ad1c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ad1e:	3b01      	subs	r3, #1
 800ad20:	b29b      	uxth	r3, r3
 800ad22:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800ad24:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ad26:	b29b      	uxth	r3, r3
 800ad28:	2b00      	cmp	r3, #0
 800ad2a:	d0b7      	beq.n	800ac9c <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ad2c:	6823      	ldr	r3, [r4, #0]
 800ad2e:	689a      	ldr	r2, [r3, #8]
 800ad30:	0792      	lsls	r2, r2, #30
 800ad32:	d503      	bpl.n	800ad3c <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800ad34:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800ad36:	7812      	ldrb	r2, [r2, #0]
 800ad38:	731a      	strb	r2, [r3, #12]
 800ad3a:	e7ec      	b.n	800ad16 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ad3c:	f7fd ff10 	bl	8008b60 <HAL_GetTick>
 800ad40:	eba0 0009 	sub.w	r0, r0, r9
 800ad44:	42b8      	cmp	r0, r7
 800ad46:	d3ed      	bcc.n	800ad24 <HAL_SPI_Transmit+0x12c>
 800ad48:	1c7b      	adds	r3, r7, #1
 800ad4a:	d0eb      	beq.n	800ad24 <HAL_SPI_Transmit+0x12c>
 800ad4c:	e7d3      	b.n	800acf6 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ad4e:	2320      	movs	r3, #32
 800ad50:	6563      	str	r3, [r4, #84]	@ 0x54
 800ad52:	e7aa      	b.n	800acaa <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800ad54:	2002      	movs	r0, #2
 800ad56:	e7d5      	b.n	800ad04 <HAL_SPI_Transmit+0x10c>

0800ad58 <HAL_SPI_TransmitReceive>:
{
 800ad58:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ad5c:	4604      	mov	r4, r0
 800ad5e:	460d      	mov	r5, r1
 800ad60:	4691      	mov	r9, r2
 800ad62:	461e      	mov	r6, r3
 800ad64:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 800ad68:	f7fd fefa 	bl	8008b60 <HAL_GetTick>
  tmp_state           = hspi->State;
 800ad6c:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800ad70:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ad72:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800ad74:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800ad76:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ad78:	d00a      	beq.n	800ad90 <HAL_SPI_TransmitReceive+0x38>
 800ad7a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800ad7e:	f040 80e5 	bne.w	800af4c <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800ad82:	68a3      	ldr	r3, [r4, #8]
 800ad84:	2b00      	cmp	r3, #0
 800ad86:	f040 80e1 	bne.w	800af4c <HAL_SPI_TransmitReceive+0x1f4>
 800ad8a:	2904      	cmp	r1, #4
 800ad8c:	f040 80de 	bne.w	800af4c <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800ad90:	2d00      	cmp	r5, #0
 800ad92:	d04b      	beq.n	800ae2c <HAL_SPI_TransmitReceive+0xd4>
 800ad94:	f1b9 0f00 	cmp.w	r9, #0
 800ad98:	d048      	beq.n	800ae2c <HAL_SPI_TransmitReceive+0xd4>
 800ad9a:	2e00      	cmp	r6, #0
 800ad9c:	d046      	beq.n	800ae2c <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800ad9e:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800ada2:	2b01      	cmp	r3, #1
 800ada4:	f000 80d2 	beq.w	800af4c <HAL_SPI_TransmitReceive+0x1f4>
 800ada8:	2301      	movs	r3, #1
 800adaa:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800adae:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800adb2:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800adb6:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800adb8:	bf1c      	itt	ne
 800adba:	2305      	movne	r3, #5
 800adbc:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800adc0:	2300      	movs	r3, #0
 800adc2:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 800adc4:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800adc8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800adca:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800adcc:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800adce:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800add0:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800add2:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800add4:	bf58      	it	pl
 800add6:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800add8:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800adda:	bf58      	it	pl
 800addc:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 800ade0:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800ade2:	bf58      	it	pl
 800ade4:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ade6:	68e1      	ldr	r1, [r4, #12]
 800ade8:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800adec:	d155      	bne.n	800ae9a <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800adee:	b10a      	cbz	r2, 800adf4 <HAL_SPI_TransmitReceive+0x9c>
 800adf0:	2e01      	cmp	r6, #1
 800adf2:	d107      	bne.n	800ae04 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800adf4:	f835 2b02 	ldrh.w	r2, [r5], #2
 800adf8:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800adfa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800adfc:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800adfe:	3b01      	subs	r3, #1
 800ae00:	b29b      	uxth	r3, r3
 800ae02:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800ae04:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ae06:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ae08:	b29b      	uxth	r3, r3
 800ae0a:	b98b      	cbnz	r3, 800ae30 <HAL_SPI_TransmitReceive+0xd8>
 800ae0c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800ae0e:	b29b      	uxth	r3, r3
 800ae10:	b973      	cbnz	r3, 800ae30 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ae12:	463a      	mov	r2, r7
 800ae14:	4641      	mov	r1, r8
 800ae16:	4620      	mov	r0, r4
 800ae18:	f7ff fe28 	bl	800aa6c <SPI_EndRxTxTransaction>
 800ae1c:	2800      	cmp	r0, #0
 800ae1e:	f000 8081 	beq.w	800af24 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ae22:	2320      	movs	r3, #32
 800ae24:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800ae26:	2300      	movs	r3, #0
 800ae28:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 800ae2c:	2001      	movs	r0, #1
 800ae2e:	e031      	b.n	800ae94 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ae30:	6821      	ldr	r1, [r4, #0]
 800ae32:	688b      	ldr	r3, [r1, #8]
 800ae34:	079a      	lsls	r2, r3, #30
 800ae36:	d50d      	bpl.n	800ae54 <HAL_SPI_TransmitReceive+0xfc>
 800ae38:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ae3a:	b29b      	uxth	r3, r3
 800ae3c:	b153      	cbz	r3, 800ae54 <HAL_SPI_TransmitReceive+0xfc>
 800ae3e:	b145      	cbz	r5, 800ae52 <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800ae40:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ae42:	f833 2b02 	ldrh.w	r2, [r3], #2
 800ae46:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ae48:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800ae4a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ae4c:	3b01      	subs	r3, #1
 800ae4e:	b29b      	uxth	r3, r3
 800ae50:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800ae52:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ae54:	688a      	ldr	r2, [r1, #8]
 800ae56:	f012 0201 	ands.w	r2, r2, #1
 800ae5a:	d00c      	beq.n	800ae76 <HAL_SPI_TransmitReceive+0x11e>
 800ae5c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800ae5e:	b29b      	uxth	r3, r3
 800ae60:	b14b      	cbz	r3, 800ae76 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ae62:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800ae64:	68c9      	ldr	r1, [r1, #12]
 800ae66:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ae6a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800ae6c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800ae6e:	3b01      	subs	r3, #1
 800ae70:	b29b      	uxth	r3, r3
 800ae72:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800ae74:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ae76:	f7fd fe73 	bl	8008b60 <HAL_GetTick>
 800ae7a:	1bc0      	subs	r0, r0, r7
 800ae7c:	4540      	cmp	r0, r8
 800ae7e:	d3c2      	bcc.n	800ae06 <HAL_SPI_TransmitReceive+0xae>
 800ae80:	f1b8 3fff 	cmp.w	r8, #4294967295
 800ae84:	d0bf      	beq.n	800ae06 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800ae86:	2301      	movs	r3, #1
 800ae88:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800ae8c:	2300      	movs	r3, #0
 800ae8e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800ae92:	2003      	movs	r0, #3
}
 800ae94:	b003      	add	sp, #12
 800ae96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ae9a:	b10a      	cbz	r2, 800aea0 <HAL_SPI_TransmitReceive+0x148>
 800ae9c:	2e01      	cmp	r6, #1
 800ae9e:	d108      	bne.n	800aeb2 <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800aea0:	782a      	ldrb	r2, [r5, #0]
 800aea2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800aea4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800aea6:	3301      	adds	r3, #1
 800aea8:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800aeaa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800aeac:	3b01      	subs	r3, #1
 800aeae:	b29b      	uxth	r3, r3
 800aeb0:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800aeb2:	2501      	movs	r5, #1
 800aeb4:	e02d      	b.n	800af12 <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800aeb6:	6822      	ldr	r2, [r4, #0]
 800aeb8:	6893      	ldr	r3, [r2, #8]
 800aeba:	079b      	lsls	r3, r3, #30
 800aebc:	d50e      	bpl.n	800aedc <HAL_SPI_TransmitReceive+0x184>
 800aebe:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800aec0:	b29b      	uxth	r3, r3
 800aec2:	b15b      	cbz	r3, 800aedc <HAL_SPI_TransmitReceive+0x184>
 800aec4:	b14d      	cbz	r5, 800aeda <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800aec6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800aec8:	781b      	ldrb	r3, [r3, #0]
 800aeca:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800aecc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800aece:	3301      	adds	r3, #1
 800aed0:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800aed2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800aed4:	3b01      	subs	r3, #1
 800aed6:	b29b      	uxth	r3, r3
 800aed8:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800aeda:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800aedc:	6822      	ldr	r2, [r4, #0]
 800aede:	6891      	ldr	r1, [r2, #8]
 800aee0:	f011 0101 	ands.w	r1, r1, #1
 800aee4:	d00d      	beq.n	800af02 <HAL_SPI_TransmitReceive+0x1aa>
 800aee6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800aee8:	b29b      	uxth	r3, r3
 800aeea:	b153      	cbz	r3, 800af02 <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800aeec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800aeee:	68d2      	ldr	r2, [r2, #12]
 800aef0:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800aef2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800aef4:	3301      	adds	r3, #1
 800aef6:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800aef8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800aefa:	3b01      	subs	r3, #1
 800aefc:	b29b      	uxth	r3, r3
 800aefe:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800af00:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800af02:	f7fd fe2d 	bl	8008b60 <HAL_GetTick>
 800af06:	1bc0      	subs	r0, r0, r7
 800af08:	4540      	cmp	r0, r8
 800af0a:	d302      	bcc.n	800af12 <HAL_SPI_TransmitReceive+0x1ba>
 800af0c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800af10:	d1b9      	bne.n	800ae86 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800af12:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800af14:	b29b      	uxth	r3, r3
 800af16:	2b00      	cmp	r3, #0
 800af18:	d1cd      	bne.n	800aeb6 <HAL_SPI_TransmitReceive+0x15e>
 800af1a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800af1c:	b29b      	uxth	r3, r3
 800af1e:	2b00      	cmp	r3, #0
 800af20:	d1c9      	bne.n	800aeb6 <HAL_SPI_TransmitReceive+0x15e>
 800af22:	e776      	b.n	800ae12 <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800af24:	68a3      	ldr	r3, [r4, #8]
 800af26:	b933      	cbnz	r3, 800af36 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800af28:	9301      	str	r3, [sp, #4]
 800af2a:	6823      	ldr	r3, [r4, #0]
 800af2c:	68da      	ldr	r2, [r3, #12]
 800af2e:	9201      	str	r2, [sp, #4]
 800af30:	689b      	ldr	r3, [r3, #8]
 800af32:	9301      	str	r3, [sp, #4]
 800af34:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800af36:	2301      	movs	r3, #1
 800af38:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800af3c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800af3e:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800af40:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800af42:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800af46:	bf18      	it	ne
 800af48:	2001      	movne	r0, #1
 800af4a:	e7a3      	b.n	800ae94 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 800af4c:	2002      	movs	r0, #2
 800af4e:	e7a1      	b.n	800ae94 <HAL_SPI_TransmitReceive+0x13c>

0800af50 <HAL_SPI_Receive>:
{
 800af50:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800af54:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800af56:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800af5a:	2b01      	cmp	r3, #1
{
 800af5c:	4604      	mov	r4, r0
 800af5e:	4689      	mov	r9, r1
 800af60:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800af62:	b2dd      	uxtb	r5, r3
 800af64:	d004      	beq.n	800af70 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800af66:	2502      	movs	r5, #2
}
 800af68:	4628      	mov	r0, r5
 800af6a:	b003      	add	sp, #12
 800af6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800af70:	6843      	ldr	r3, [r0, #4]
 800af72:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800af76:	d10b      	bne.n	800af90 <HAL_SPI_Receive+0x40>
 800af78:	6883      	ldr	r3, [r0, #8]
 800af7a:	b94b      	cbnz	r3, 800af90 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800af7c:	2304      	movs	r3, #4
 800af7e:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800af82:	4613      	mov	r3, r2
 800af84:	9600      	str	r6, [sp, #0]
 800af86:	460a      	mov	r2, r1
 800af88:	f7ff fee6 	bl	800ad58 <HAL_SPI_TransmitReceive>
 800af8c:	4605      	mov	r5, r0
 800af8e:	e7eb      	b.n	800af68 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 800af90:	f7fd fde6 	bl	8008b60 <HAL_GetTick>
 800af94:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800af96:	f1b9 0f00 	cmp.w	r9, #0
 800af9a:	d0e5      	beq.n	800af68 <HAL_SPI_Receive+0x18>
 800af9c:	2f00      	cmp	r7, #0
 800af9e:	d0e3      	beq.n	800af68 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 800afa0:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800afa4:	2b01      	cmp	r3, #1
 800afa6:	d0de      	beq.n	800af66 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800afa8:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800afaa:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 800afae:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800afb0:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 800afb2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800afb6:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800afba:	f04f 0304 	mov.w	r3, #4
 800afbe:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 800afc2:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800afc6:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800afc8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800afca:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800afcc:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800afce:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 800afd0:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800afd2:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800afd4:	d107      	bne.n	800afe6 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800afd6:	681a      	ldr	r2, [r3, #0]
 800afd8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800afdc:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800afde:	681a      	ldr	r2, [r3, #0]
 800afe0:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800afe4:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800afe6:	681a      	ldr	r2, [r3, #0]
 800afe8:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800afea:	bf5e      	ittt	pl
 800afec:	681a      	ldrpl	r2, [r3, #0]
 800afee:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 800aff2:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800aff4:	68e3      	ldr	r3, [r4, #12]
 800aff6:	b1f3      	cbz	r3, 800b036 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 800aff8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800affa:	b29b      	uxth	r3, r3
 800affc:	b1fb      	cbz	r3, 800b03e <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800affe:	6823      	ldr	r3, [r4, #0]
 800b000:	689a      	ldr	r2, [r3, #8]
 800b002:	07d2      	lsls	r2, r2, #31
 800b004:	d53c      	bpl.n	800b080 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800b006:	68da      	ldr	r2, [r3, #12]
 800b008:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b00a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800b00e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800b010:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b012:	3b01      	subs	r3, #1
 800b014:	b29b      	uxth	r3, r3
 800b016:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800b018:	e7ee      	b.n	800aff8 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800b01a:	6823      	ldr	r3, [r4, #0]
 800b01c:	689a      	ldr	r2, [r3, #8]
 800b01e:	07d0      	lsls	r0, r2, #31
 800b020:	d51e      	bpl.n	800b060 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800b022:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800b024:	7b1b      	ldrb	r3, [r3, #12]
 800b026:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800b028:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800b02a:	3301      	adds	r3, #1
 800b02c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800b02e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b030:	3b01      	subs	r3, #1
 800b032:	b29b      	uxth	r3, r3
 800b034:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800b036:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800b038:	b29b      	uxth	r3, r3
 800b03a:	2b00      	cmp	r3, #0
 800b03c:	d1ed      	bne.n	800b01a <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800b03e:	4642      	mov	r2, r8
 800b040:	4631      	mov	r1, r6
 800b042:	4620      	mov	r0, r4
 800b044:	f7ff fd4e 	bl	800aae4 <SPI_EndRxTransaction>
 800b048:	bb18      	cbnz	r0, 800b092 <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 800b04a:	2301      	movs	r3, #1
 800b04c:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b050:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800b052:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b054:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800b056:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b05a:	bf18      	it	ne
 800b05c:	2501      	movne	r5, #1
 800b05e:	e783      	b.n	800af68 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b060:	f7fd fd7e 	bl	8008b60 <HAL_GetTick>
 800b064:	eba0 0008 	sub.w	r0, r0, r8
 800b068:	42b0      	cmp	r0, r6
 800b06a:	d3e4      	bcc.n	800b036 <HAL_SPI_Receive+0xe6>
 800b06c:	1c71      	adds	r1, r6, #1
 800b06e:	d0e2      	beq.n	800b036 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 800b070:	2301      	movs	r3, #1
 800b072:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800b076:	2300      	movs	r3, #0
 800b078:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800b07c:	2503      	movs	r5, #3
 800b07e:	e773      	b.n	800af68 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b080:	f7fd fd6e 	bl	8008b60 <HAL_GetTick>
 800b084:	eba0 0008 	sub.w	r0, r0, r8
 800b088:	42b0      	cmp	r0, r6
 800b08a:	d3b5      	bcc.n	800aff8 <HAL_SPI_Receive+0xa8>
 800b08c:	1c73      	adds	r3, r6, #1
 800b08e:	d0b3      	beq.n	800aff8 <HAL_SPI_Receive+0xa8>
 800b090:	e7ee      	b.n	800b070 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b092:	2320      	movs	r3, #32
 800b094:	6563      	str	r3, [r4, #84]	@ 0x54
 800b096:	e7d8      	b.n	800b04a <HAL_SPI_Receive+0xfa>

0800b098 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800b098:	4770      	bx	lr
	...

0800b09c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800b09c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800b0a0:	2b01      	cmp	r3, #1
 800b0a2:	d130      	bne.n	800b106 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800b0a4:	2302      	movs	r3, #2
 800b0a6:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800b0aa:	6803      	ldr	r3, [r0, #0]
 800b0ac:	68da      	ldr	r2, [r3, #12]
 800b0ae:	f042 0201 	orr.w	r2, r2, #1
 800b0b2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800b0b4:	4a15      	ldr	r2, [pc, #84]	@ (800b10c <HAL_TIM_Base_Start_IT+0x70>)
 800b0b6:	4293      	cmp	r3, r2
 800b0b8:	d01a      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0ba:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800b0be:	d017      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0c0:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800b0c4:	4293      	cmp	r3, r2
 800b0c6:	d013      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0c8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b0cc:	4293      	cmp	r3, r2
 800b0ce:	d00f      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0d0:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b0d4:	4293      	cmp	r3, r2
 800b0d6:	d00b      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0d8:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800b0dc:	4293      	cmp	r3, r2
 800b0de:	d007      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0e0:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800b0e4:	4293      	cmp	r3, r2
 800b0e6:	d003      	beq.n	800b0f0 <HAL_TIM_Base_Start_IT+0x54>
 800b0e8:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800b0ec:	4293      	cmp	r3, r2
 800b0ee:	d104      	bne.n	800b0fa <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800b0f0:	689a      	ldr	r2, [r3, #8]
 800b0f2:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800b0f6:	2a06      	cmp	r2, #6
 800b0f8:	d003      	beq.n	800b102 <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800b0fa:	681a      	ldr	r2, [r3, #0]
 800b0fc:	f042 0201 	orr.w	r2, r2, #1
 800b100:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 800b102:	2000      	movs	r0, #0
 800b104:	4770      	bx	lr
    return HAL_ERROR;
 800b106:	2001      	movs	r0, #1
}
 800b108:	4770      	bx	lr
 800b10a:	bf00      	nop
 800b10c:	40010000 	.word	0x40010000

0800b110 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800b110:	4770      	bx	lr

0800b112 <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800b112:	4770      	bx	lr

0800b114 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800b114:	4770      	bx	lr

0800b116 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800b116:	4770      	bx	lr

0800b118 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800b118:	6803      	ldr	r3, [r0, #0]
{
 800b11a:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800b11c:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800b11e:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800b120:	07b1      	lsls	r1, r6, #30
{
 800b122:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800b124:	d50d      	bpl.n	800b142 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800b126:	07aa      	lsls	r2, r5, #30
 800b128:	d50b      	bpl.n	800b142 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800b12a:	f06f 0202 	mvn.w	r2, #2
 800b12e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800b130:	2201      	movs	r2, #1
 800b132:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800b134:	699b      	ldr	r3, [r3, #24]
 800b136:	079b      	lsls	r3, r3, #30
 800b138:	d069      	beq.n	800b20e <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800b13a:	f7ff ffea 	bl	800b112 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b13e:	2300      	movs	r3, #0
 800b140:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800b142:	0771      	lsls	r1, r6, #29
 800b144:	d510      	bpl.n	800b168 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800b146:	076a      	lsls	r2, r5, #29
 800b148:	d50e      	bpl.n	800b168 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800b14a:	6823      	ldr	r3, [r4, #0]
 800b14c:	f06f 0204 	mvn.w	r2, #4
 800b150:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800b152:	2202      	movs	r2, #2
 800b154:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b156:	699b      	ldr	r3, [r3, #24]
 800b158:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b15c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800b15e:	d05c      	beq.n	800b21a <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 800b160:	f7ff ffd7 	bl	800b112 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b164:	2300      	movs	r3, #0
 800b166:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800b168:	0733      	lsls	r3, r6, #28
 800b16a:	d50f      	bpl.n	800b18c <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800b16c:	0728      	lsls	r0, r5, #28
 800b16e:	d50d      	bpl.n	800b18c <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800b170:	6823      	ldr	r3, [r4, #0]
 800b172:	f06f 0208 	mvn.w	r2, #8
 800b176:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800b178:	2204      	movs	r2, #4
 800b17a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b17c:	69db      	ldr	r3, [r3, #28]
 800b17e:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800b180:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800b182:	d050      	beq.n	800b226 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 800b184:	f7ff ffc5 	bl	800b112 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b188:	2300      	movs	r3, #0
 800b18a:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800b18c:	06f2      	lsls	r2, r6, #27
 800b18e:	d510      	bpl.n	800b1b2 <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800b190:	06eb      	lsls	r3, r5, #27
 800b192:	d50e      	bpl.n	800b1b2 <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800b194:	6823      	ldr	r3, [r4, #0]
 800b196:	f06f 0210 	mvn.w	r2, #16
 800b19a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800b19c:	2208      	movs	r2, #8
 800b19e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b1a0:	69db      	ldr	r3, [r3, #28]
 800b1a2:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800b1a6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800b1a8:	d043      	beq.n	800b232 <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800b1aa:	f7ff ffb2 	bl	800b112 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800b1ae:	2300      	movs	r3, #0
 800b1b0:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800b1b2:	07f0      	lsls	r0, r6, #31
 800b1b4:	d508      	bpl.n	800b1c8 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800b1b6:	07e9      	lsls	r1, r5, #31
 800b1b8:	d506      	bpl.n	800b1c8 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800b1ba:	6823      	ldr	r3, [r4, #0]
 800b1bc:	f06f 0201 	mvn.w	r2, #1
 800b1c0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800b1c2:	4620      	mov	r0, r4
 800b1c4:	f7f6 fe6e 	bl	8001ea4 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800b1c8:	0632      	lsls	r2, r6, #24
 800b1ca:	d508      	bpl.n	800b1de <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800b1cc:	062b      	lsls	r3, r5, #24
 800b1ce:	d506      	bpl.n	800b1de <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800b1d0:	6823      	ldr	r3, [r4, #0]
 800b1d2:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800b1d6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800b1d8:	4620      	mov	r0, r4
 800b1da:	f000 f8b6 	bl	800b34a <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800b1de:	0670      	lsls	r0, r6, #25
 800b1e0:	d508      	bpl.n	800b1f4 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800b1e2:	0669      	lsls	r1, r5, #25
 800b1e4:	d506      	bpl.n	800b1f4 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800b1e6:	6823      	ldr	r3, [r4, #0]
 800b1e8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800b1ec:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800b1ee:	4620      	mov	r0, r4
 800b1f0:	f7ff ff91 	bl	800b116 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800b1f4:	06b2      	lsls	r2, r6, #26
 800b1f6:	d522      	bpl.n	800b23e <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800b1f8:	06ab      	lsls	r3, r5, #26
 800b1fa:	d520      	bpl.n	800b23e <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800b1fc:	6823      	ldr	r3, [r4, #0]
 800b1fe:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800b202:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800b204:	611a      	str	r2, [r3, #16]
}
 800b206:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800b20a:	f000 b89d 	b.w	800b348 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800b20e:	f7ff ff7f 	bl	800b110 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b212:	4620      	mov	r0, r4
 800b214:	f7ff ff7e 	bl	800b114 <HAL_TIM_PWM_PulseFinishedCallback>
 800b218:	e791      	b.n	800b13e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b21a:	f7ff ff79 	bl	800b110 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b21e:	4620      	mov	r0, r4
 800b220:	f7ff ff78 	bl	800b114 <HAL_TIM_PWM_PulseFinishedCallback>
 800b224:	e79e      	b.n	800b164 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b226:	f7ff ff73 	bl	800b110 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b22a:	4620      	mov	r0, r4
 800b22c:	f7ff ff72 	bl	800b114 <HAL_TIM_PWM_PulseFinishedCallback>
 800b230:	e7aa      	b.n	800b188 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800b232:	f7ff ff6d 	bl	800b110 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800b236:	4620      	mov	r0, r4
 800b238:	f7ff ff6c 	bl	800b114 <HAL_TIM_PWM_PulseFinishedCallback>
 800b23c:	e7b7      	b.n	800b1ae <HAL_TIM_IRQHandler+0x96>
}
 800b23e:	bd70      	pop	{r4, r5, r6, pc}

0800b240 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b240:	4a29      	ldr	r2, [pc, #164]	@ (800b2e8 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 800b242:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800b244:	4290      	cmp	r0, r2
 800b246:	d012      	beq.n	800b26e <TIM_Base_SetConfig+0x2e>
 800b248:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800b24c:	d00f      	beq.n	800b26e <TIM_Base_SetConfig+0x2e>
 800b24e:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800b252:	4290      	cmp	r0, r2
 800b254:	d00b      	beq.n	800b26e <TIM_Base_SetConfig+0x2e>
 800b256:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b25a:	4290      	cmp	r0, r2
 800b25c:	d007      	beq.n	800b26e <TIM_Base_SetConfig+0x2e>
 800b25e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b262:	4290      	cmp	r0, r2
 800b264:	d003      	beq.n	800b26e <TIM_Base_SetConfig+0x2e>
 800b266:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800b26a:	4290      	cmp	r0, r2
 800b26c:	d108      	bne.n	800b280 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800b26e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800b270:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800b274:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b276:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800b278:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800b27c:	4313      	orrs	r3, r2
 800b27e:	e016      	b.n	800b2ae <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800b280:	4a1a      	ldr	r2, [pc, #104]	@ (800b2ec <TIM_Base_SetConfig+0xac>)
 800b282:	4290      	cmp	r0, r2
 800b284:	d0f7      	beq.n	800b276 <TIM_Base_SetConfig+0x36>
 800b286:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b28a:	4290      	cmp	r0, r2
 800b28c:	d0f3      	beq.n	800b276 <TIM_Base_SetConfig+0x36>
 800b28e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b292:	4290      	cmp	r0, r2
 800b294:	d0ef      	beq.n	800b276 <TIM_Base_SetConfig+0x36>
 800b296:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800b29a:	4290      	cmp	r0, r2
 800b29c:	d0eb      	beq.n	800b276 <TIM_Base_SetConfig+0x36>
 800b29e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b2a2:	4290      	cmp	r0, r2
 800b2a4:	d0e7      	beq.n	800b276 <TIM_Base_SetConfig+0x36>
 800b2a6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b2aa:	4290      	cmp	r0, r2
 800b2ac:	d0e3      	beq.n	800b276 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800b2ae:	694a      	ldr	r2, [r1, #20]
 800b2b0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800b2b4:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800b2b6:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800b2b8:	688b      	ldr	r3, [r1, #8]
 800b2ba:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800b2bc:	680b      	ldr	r3, [r1, #0]
 800b2be:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800b2c0:	4b09      	ldr	r3, [pc, #36]	@ (800b2e8 <TIM_Base_SetConfig+0xa8>)
 800b2c2:	4298      	cmp	r0, r3
 800b2c4:	d003      	beq.n	800b2ce <TIM_Base_SetConfig+0x8e>
 800b2c6:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800b2ca:	4298      	cmp	r0, r3
 800b2cc:	d101      	bne.n	800b2d2 <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800b2ce:	690b      	ldr	r3, [r1, #16]
 800b2d0:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800b2d2:	2301      	movs	r3, #1
 800b2d4:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800b2d6:	6903      	ldr	r3, [r0, #16]
 800b2d8:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800b2da:	bf42      	ittt	mi
 800b2dc:	6903      	ldrmi	r3, [r0, #16]
 800b2de:	f023 0301 	bicmi.w	r3, r3, #1
 800b2e2:	6103      	strmi	r3, [r0, #16]
  }
}
 800b2e4:	4770      	bx	lr
 800b2e6:	bf00      	nop
 800b2e8:	40010000 	.word	0x40010000
 800b2ec:	40014000 	.word	0x40014000

0800b2f0 <HAL_TIM_Base_Init>:
{
 800b2f0:	b510      	push	{r4, lr}
  if (htim == NULL)
 800b2f2:	4604      	mov	r4, r0
 800b2f4:	b330      	cbz	r0, 800b344 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800b2f6:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800b2fa:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b2fe:	b91b      	cbnz	r3, 800b308 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800b300:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800b304:	f7ff fec8 	bl	800b098 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800b308:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b30a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800b30c:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800b310:	1d21      	adds	r1, r4, #4
 800b312:	f7ff ff95 	bl	800b240 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800b316:	2301      	movs	r3, #1
 800b318:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 800b31c:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b31e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800b322:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800b326:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800b32a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800b32e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800b332:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b336:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800b33a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800b33e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800b342:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b344:	2001      	movs	r0, #1
 800b346:	e7fc      	b.n	800b342 <HAL_TIM_Base_Init+0x52>

0800b348 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800b348:	4770      	bx	lr

0800b34a <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800b34a:	4770      	bx	lr

0800b34c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800b34c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800b350:	6803      	ldr	r3, [r0, #0]
 800b352:	68c1      	ldr	r1, [r0, #12]
 800b354:	691a      	ldr	r2, [r3, #16]
{
 800b356:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800b358:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 800b35c:	430a      	orrs	r2, r1
 800b35e:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b360:	6925      	ldr	r5, [r4, #16]
 800b362:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800b364:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b366:	69c0      	ldr	r0, [r0, #28]
 800b368:	432a      	orrs	r2, r5
 800b36a:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800b36c:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b370:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800b372:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b376:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 800b378:	430a      	orrs	r2, r1
 800b37a:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800b37c:	695a      	ldr	r2, [r3, #20]
 800b37e:	69a1      	ldr	r1, [r4, #24]
 800b380:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800b384:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b386:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800b38a:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b38c:	4a83      	ldr	r2, [pc, #524]	@ (800b59c <UART_SetConfig+0x250>)
 800b38e:	f040 8085 	bne.w	800b49c <UART_SetConfig+0x150>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800b392:	4293      	cmp	r3, r2
 800b394:	d003      	beq.n	800b39e <UART_SetConfig+0x52>
 800b396:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800b39a:	4293      	cmp	r3, r2
 800b39c:	d149      	bne.n	800b432 <UART_SetConfig+0xe6>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800b39e:	f7ff f959 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b3a2:	6863      	ldr	r3, [r4, #4]
 800b3a4:	f04f 0919 	mov.w	r9, #25
 800b3a8:	005b      	lsls	r3, r3, #1
 800b3aa:	fb09 f700 	mul.w	r7, r9, r0
 800b3ae:	fbb7 f7f3 	udiv	r7, r7, r3
 800b3b2:	f7ff f94f 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b3b6:	6863      	ldr	r3, [r4, #4]
 800b3b8:	fb09 f500 	mul.w	r5, r9, r0
 800b3bc:	005b      	lsls	r3, r3, #1
 800b3be:	fbb5 f5f3 	udiv	r5, r5, r3
 800b3c2:	f7ff f947 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b3c6:	6863      	ldr	r3, [r4, #4]
 800b3c8:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b3cc:	005b      	lsls	r3, r3, #1
 800b3ce:	fb09 f000 	mul.w	r0, r9, r0
 800b3d2:	fbb0 f0f3 	udiv	r0, r0, r3
 800b3d6:	fbb0 f0f8 	udiv	r0, r0, r8
 800b3da:	fb08 5610 	mls	r6, r8, r0, r5
 800b3de:	f7ff f939 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b3e2:	fbb7 f7f8 	udiv	r7, r7, r8
 800b3e6:	6863      	ldr	r3, [r4, #4]
 800b3e8:	00f6      	lsls	r6, r6, #3
 800b3ea:	3632      	adds	r6, #50	@ 0x32
 800b3ec:	fbb6 f6f8 	udiv	r6, r6, r8
 800b3f0:	0076      	lsls	r6, r6, #1
 800b3f2:	fb09 f500 	mul.w	r5, r9, r0
 800b3f6:	005b      	lsls	r3, r3, #1
 800b3f8:	013f      	lsls	r7, r7, #4
 800b3fa:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800b3fe:	fbb5 f5f3 	udiv	r5, r5, r3
 800b402:	f7ff f927 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b406:	6863      	ldr	r3, [r4, #4]
 800b408:	6822      	ldr	r2, [r4, #0]
 800b40a:	005b      	lsls	r3, r3, #1
 800b40c:	fb09 f000 	mul.w	r0, r9, r0
 800b410:	fbb0 f0f3 	udiv	r0, r0, r3
 800b414:	fbb0 f0f8 	udiv	r0, r0, r8
 800b418:	fb08 5310 	mls	r3, r8, r0, r5
 800b41c:	00db      	lsls	r3, r3, #3
 800b41e:	3332      	adds	r3, #50	@ 0x32
 800b420:	fbb3 f3f8 	udiv	r3, r3, r8
 800b424:	f003 0307 	and.w	r3, r3, #7
 800b428:	443b      	add	r3, r7
 800b42a:	4433      	add	r3, r6
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b42c:	6093      	str	r3, [r2, #8]
    }
  }
}
 800b42e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b432:	f7ff f8ff 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b436:	6863      	ldr	r3, [r4, #4]
 800b438:	f04f 0919 	mov.w	r9, #25
 800b43c:	fb09 f700 	mul.w	r7, r9, r0
 800b440:	005b      	lsls	r3, r3, #1
 800b442:	fbb7 f7f3 	udiv	r7, r7, r3
 800b446:	f7ff f8f5 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b44a:	6863      	ldr	r3, [r4, #4]
 800b44c:	fb09 f500 	mul.w	r5, r9, r0
 800b450:	005b      	lsls	r3, r3, #1
 800b452:	fbb5 f5f3 	udiv	r5, r5, r3
 800b456:	f7ff f8ed 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b45a:	6863      	ldr	r3, [r4, #4]
 800b45c:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b460:	005b      	lsls	r3, r3, #1
 800b462:	fb09 f000 	mul.w	r0, r9, r0
 800b466:	fbb0 f0f3 	udiv	r0, r0, r3
 800b46a:	fbb0 f0f8 	udiv	r0, r0, r8
 800b46e:	fb08 5610 	mls	r6, r8, r0, r5
 800b472:	f7ff f8df 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b476:	fbb7 f7f8 	udiv	r7, r7, r8
 800b47a:	6863      	ldr	r3, [r4, #4]
 800b47c:	00f6      	lsls	r6, r6, #3
 800b47e:	3632      	adds	r6, #50	@ 0x32
 800b480:	fbb6 f6f8 	udiv	r6, r6, r8
 800b484:	0076      	lsls	r6, r6, #1
 800b486:	fb09 f500 	mul.w	r5, r9, r0
 800b48a:	005b      	lsls	r3, r3, #1
 800b48c:	013f      	lsls	r7, r7, #4
 800b48e:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800b492:	fbb5 f5f3 	udiv	r5, r5, r3
 800b496:	f7ff f8cd 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b49a:	e7b4      	b.n	800b406 <UART_SetConfig+0xba>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800b49c:	4293      	cmp	r3, r2
 800b49e:	d002      	beq.n	800b4a6 <UART_SetConfig+0x15a>
 800b4a0:	4a3f      	ldr	r2, [pc, #252]	@ (800b5a0 <UART_SetConfig+0x254>)
 800b4a2:	4293      	cmp	r3, r2
 800b4a4:	d146      	bne.n	800b534 <UART_SetConfig+0x1e8>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800b4a6:	f7ff f8d5 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b4aa:	6863      	ldr	r3, [r4, #4]
 800b4ac:	f04f 0919 	mov.w	r9, #25
 800b4b0:	009b      	lsls	r3, r3, #2
 800b4b2:	fb09 f700 	mul.w	r7, r9, r0
 800b4b6:	fbb7 f7f3 	udiv	r7, r7, r3
 800b4ba:	f7ff f8cb 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b4be:	6863      	ldr	r3, [r4, #4]
 800b4c0:	fb09 f500 	mul.w	r5, r9, r0
 800b4c4:	009b      	lsls	r3, r3, #2
 800b4c6:	fbb5 f5f3 	udiv	r5, r5, r3
 800b4ca:	f7ff f8c3 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b4ce:	6863      	ldr	r3, [r4, #4]
 800b4d0:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b4d4:	009b      	lsls	r3, r3, #2
 800b4d6:	fb09 f000 	mul.w	r0, r9, r0
 800b4da:	fbb0 f0f3 	udiv	r0, r0, r3
 800b4de:	fbb0 f0f8 	udiv	r0, r0, r8
 800b4e2:	fb08 5610 	mls	r6, r8, r0, r5
 800b4e6:	f7ff f8b5 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
 800b4ea:	fbb7 f7f8 	udiv	r7, r7, r8
 800b4ee:	6863      	ldr	r3, [r4, #4]
 800b4f0:	0136      	lsls	r6, r6, #4
 800b4f2:	3632      	adds	r6, #50	@ 0x32
 800b4f4:	fb09 f500 	mul.w	r5, r9, r0
 800b4f8:	009b      	lsls	r3, r3, #2
 800b4fa:	fbb6 f6f8 	udiv	r6, r6, r8
 800b4fe:	013f      	lsls	r7, r7, #4
 800b500:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800b504:	fbb5 f5f3 	udiv	r5, r5, r3
 800b508:	f7ff f8a4 	bl	800a654 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800b50c:	6863      	ldr	r3, [r4, #4]
 800b50e:	6822      	ldr	r2, [r4, #0]
 800b510:	009b      	lsls	r3, r3, #2
 800b512:	fb09 f000 	mul.w	r0, r9, r0
 800b516:	fbb0 f0f3 	udiv	r0, r0, r3
 800b51a:	fbb0 f0f8 	udiv	r0, r0, r8
 800b51e:	fb08 5310 	mls	r3, r8, r0, r5
 800b522:	011b      	lsls	r3, r3, #4
 800b524:	3332      	adds	r3, #50	@ 0x32
 800b526:	fbb3 f3f8 	udiv	r3, r3, r8
 800b52a:	f003 030f 	and.w	r3, r3, #15
 800b52e:	4333      	orrs	r3, r6
 800b530:	443b      	add	r3, r7
 800b532:	e77b      	b.n	800b42c <UART_SetConfig+0xe0>
 800b534:	f7ff f87e 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b538:	6863      	ldr	r3, [r4, #4]
 800b53a:	f04f 0919 	mov.w	r9, #25
 800b53e:	fb09 f700 	mul.w	r7, r9, r0
 800b542:	009b      	lsls	r3, r3, #2
 800b544:	fbb7 f7f3 	udiv	r7, r7, r3
 800b548:	f7ff f874 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b54c:	6863      	ldr	r3, [r4, #4]
 800b54e:	fb09 f500 	mul.w	r5, r9, r0
 800b552:	009b      	lsls	r3, r3, #2
 800b554:	fbb5 f5f3 	udiv	r5, r5, r3
 800b558:	f7ff f86c 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b55c:	6863      	ldr	r3, [r4, #4]
 800b55e:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800b562:	009b      	lsls	r3, r3, #2
 800b564:	fb09 f000 	mul.w	r0, r9, r0
 800b568:	fbb0 f0f3 	udiv	r0, r0, r3
 800b56c:	fbb0 f0f8 	udiv	r0, r0, r8
 800b570:	fb08 5610 	mls	r6, r8, r0, r5
 800b574:	f7ff f85e 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b578:	fbb7 f7f8 	udiv	r7, r7, r8
 800b57c:	6863      	ldr	r3, [r4, #4]
 800b57e:	0136      	lsls	r6, r6, #4
 800b580:	fb09 f500 	mul.w	r5, r9, r0
 800b584:	009b      	lsls	r3, r3, #2
 800b586:	013f      	lsls	r7, r7, #4
 800b588:	3632      	adds	r6, #50	@ 0x32
 800b58a:	fbb5 f5f3 	udiv	r5, r5, r3
 800b58e:	fbb6 f6f8 	udiv	r6, r6, r8
 800b592:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800b596:	f7ff f84d 	bl	800a634 <HAL_RCC_GetPCLK1Freq>
 800b59a:	e7b7      	b.n	800b50c <UART_SetConfig+0x1c0>
 800b59c:	40011000 	.word	0x40011000
 800b5a0:	40011400 	.word	0x40011400

0800b5a4 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 800b5a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5a6:	4604      	mov	r4, r0
 800b5a8:	460e      	mov	r6, r1
 800b5aa:	4617      	mov	r7, r2
 800b5ac:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800b5ae:	6822      	ldr	r2, [r4, #0]
 800b5b0:	6813      	ldr	r3, [r2, #0]
 800b5b2:	ea36 0303 	bics.w	r3, r6, r3
 800b5b6:	d101      	bne.n	800b5bc <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 800b5b8:	2000      	movs	r0, #0
 800b5ba:	e014      	b.n	800b5e6 <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
    if (Timeout != HAL_MAX_DELAY)
 800b5bc:	1c6b      	adds	r3, r5, #1
 800b5be:	d0f7      	beq.n	800b5b0 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800b5c0:	b995      	cbnz	r5, 800b5e8 <UART_WaitOnFlagUntilTimeout.constprop.0+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800b5c2:	6823      	ldr	r3, [r4, #0]
 800b5c4:	68da      	ldr	r2, [r3, #12]
 800b5c6:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 800b5ca:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800b5cc:	695a      	ldr	r2, [r3, #20]
 800b5ce:	f022 0201 	bic.w	r2, r2, #1
 800b5d2:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 800b5d4:	2320      	movs	r3, #32
 800b5d6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
        huart->RxState = HAL_UART_STATE_READY;
 800b5da:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
        __HAL_UNLOCK(huart);
 800b5de:	2300      	movs	r3, #0
 800b5e0:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800b5e4:	2003      	movs	r0, #3
}
 800b5e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800b5e8:	f7fd faba 	bl	8008b60 <HAL_GetTick>
 800b5ec:	1bc0      	subs	r0, r0, r7
 800b5ee:	4285      	cmp	r5, r0
 800b5f0:	d2dd      	bcs.n	800b5ae <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800b5f2:	e7e6      	b.n	800b5c2 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1e>

0800b5f4 <HAL_UART_MspInit>:
}
 800b5f4:	4770      	bx	lr

0800b5f6 <HAL_UART_Init>:
{
 800b5f6:	b510      	push	{r4, lr}
  if (huart == NULL)
 800b5f8:	4604      	mov	r4, r0
 800b5fa:	b340      	cbz	r0, 800b64e <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800b5fc:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800b600:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b604:	b91b      	cbnz	r3, 800b60e <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800b606:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    HAL_UART_MspInit(huart);
 800b60a:	f7ff fff3 	bl	800b5f4 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800b60e:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800b610:	2324      	movs	r3, #36	@ 0x24
 800b612:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  __HAL_UART_DISABLE(huart);
 800b616:	68d3      	ldr	r3, [r2, #12]
 800b618:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800b61c:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800b61e:	4620      	mov	r0, r4
 800b620:	f7ff fe94 	bl	800b34c <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800b624:	6823      	ldr	r3, [r4, #0]
 800b626:	691a      	ldr	r2, [r3, #16]
 800b628:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800b62c:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800b62e:	695a      	ldr	r2, [r3, #20]
 800b630:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800b634:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800b636:	68da      	ldr	r2, [r3, #12]
 800b638:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800b63c:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b63e:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800b640:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b642:	63e0      	str	r0, [r4, #60]	@ 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800b644:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800b648:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
}
 800b64c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b64e:	2001      	movs	r0, #1
 800b650:	e7fc      	b.n	800b64c <HAL_UART_Init+0x56>

0800b652 <HAL_UART_Transmit>:
{
 800b652:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b656:	461f      	mov	r7, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800b658:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800b65c:	2b20      	cmp	r3, #32
{
 800b65e:	4604      	mov	r4, r0
 800b660:	460d      	mov	r5, r1
 800b662:	4690      	mov	r8, r2
  if (huart->gState == HAL_UART_STATE_READY)
 800b664:	d14f      	bne.n	800b706 <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 800b666:	2900      	cmp	r1, #0
 800b668:	d04b      	beq.n	800b702 <HAL_UART_Transmit+0xb0>
 800b66a:	2a00      	cmp	r2, #0
 800b66c:	d049      	beq.n	800b702 <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 800b66e:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800b672:	2b01      	cmp	r3, #1
 800b674:	d047      	beq.n	800b706 <HAL_UART_Transmit+0xb4>
 800b676:	2301      	movs	r3, #1
 800b678:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b67c:	2300      	movs	r3, #0
 800b67e:	63c3      	str	r3, [r0, #60]	@ 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800b680:	2321      	movs	r3, #33	@ 0x21
 800b682:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
    tickstart = HAL_GetTick();
 800b686:	f7fd fa6b 	bl	8008b60 <HAL_GetTick>
    huart->TxXferSize = Size;
 800b68a:	f8a4 8024 	strh.w	r8, [r4, #36]	@ 0x24
    tickstart = HAL_GetTick();
 800b68e:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 800b690:	f8a4 8026 	strh.w	r8, [r4, #38]	@ 0x26
    while (huart->TxXferCount > 0U)
 800b694:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800b696:	b29b      	uxth	r3, r3
 800b698:	b963      	cbnz	r3, 800b6b4 <HAL_UART_Transmit+0x62>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800b69a:	463b      	mov	r3, r7
 800b69c:	4632      	mov	r2, r6
 800b69e:	2140      	movs	r1, #64	@ 0x40
 800b6a0:	4620      	mov	r0, r4
 800b6a2:	f7ff ff7f 	bl	800b5a4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800b6a6:	b9a8      	cbnz	r0, 800b6d4 <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
 800b6a8:	2320      	movs	r3, #32
 800b6aa:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    __HAL_UNLOCK(huart);
 800b6ae:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
    return HAL_OK;
 800b6b2:	e010      	b.n	800b6d6 <HAL_UART_Transmit+0x84>
      huart->TxXferCount--;
 800b6b4:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800b6b6:	3b01      	subs	r3, #1
 800b6b8:	b29b      	uxth	r3, r3
 800b6ba:	84e3      	strh	r3, [r4, #38]	@ 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800b6bc:	68a3      	ldr	r3, [r4, #8]
 800b6be:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b6c2:	4632      	mov	r2, r6
 800b6c4:	463b      	mov	r3, r7
 800b6c6:	f04f 0180 	mov.w	r1, #128	@ 0x80
 800b6ca:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800b6cc:	d110      	bne.n	800b6f0 <HAL_UART_Transmit+0x9e>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b6ce:	f7ff ff69 	bl	800b5a4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800b6d2:	b110      	cbz	r0, 800b6da <HAL_UART_Transmit+0x88>
          return HAL_TIMEOUT;
 800b6d4:	2003      	movs	r0, #3
}
 800b6d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 800b6da:	882b      	ldrh	r3, [r5, #0]
 800b6dc:	6822      	ldr	r2, [r4, #0]
 800b6de:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b6e2:	6053      	str	r3, [r2, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800b6e4:	6923      	ldr	r3, [r4, #16]
 800b6e6:	b90b      	cbnz	r3, 800b6ec <HAL_UART_Transmit+0x9a>
          pData += 2U;
 800b6e8:	3502      	adds	r5, #2
 800b6ea:	e7d3      	b.n	800b694 <HAL_UART_Transmit+0x42>
          pData += 1U;
 800b6ec:	3501      	adds	r5, #1
 800b6ee:	e7d1      	b.n	800b694 <HAL_UART_Transmit+0x42>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800b6f0:	f7ff ff58 	bl	800b5a4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800b6f4:	2800      	cmp	r0, #0
 800b6f6:	d1ed      	bne.n	800b6d4 <HAL_UART_Transmit+0x82>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 800b6f8:	6823      	ldr	r3, [r4, #0]
 800b6fa:	f815 2b01 	ldrb.w	r2, [r5], #1
 800b6fe:	605a      	str	r2, [r3, #4]
 800b700:	e7c8      	b.n	800b694 <HAL_UART_Transmit+0x42>
      return  HAL_ERROR;
 800b702:	2001      	movs	r0, #1
 800b704:	e7e7      	b.n	800b6d6 <HAL_UART_Transmit+0x84>
    __HAL_LOCK(huart);
 800b706:	2002      	movs	r0, #2
 800b708:	e7e5      	b.n	800b6d6 <HAL_UART_Transmit+0x84>

0800b70a <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800b70a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b70e:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800b712:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800b716:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800b71a:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800b71e:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800b722:	6809      	ldr	r1, [r1, #0]
 800b724:	ea43 0308 	orr.w	r3, r3, r8
 800b728:	b981      	cbnz	r1, 800b74c <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b72a:	ea43 030e 	orr.w	r3, r3, lr
 800b72e:	4313      	orrs	r3, r2
 800b730:	ea43 030c 	orr.w	r3, r3, ip
 800b734:	433b      	orrs	r3, r7
 800b736:	6801      	ldr	r1, [r0, #0]
 800b738:	4333      	orrs	r3, r6
 800b73a:	432b      	orrs	r3, r5
 800b73c:	4323      	orrs	r3, r4
 800b73e:	f36f 010e 	bfc	r1, #0, #15
 800b742:	430b      	orrs	r3, r1
 800b744:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800b746:	2000      	movs	r0, #0
 800b748:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800b74c:	6801      	ldr	r1, [r0, #0]
 800b74e:	ea43 030e 	orr.w	r3, r3, lr
 800b752:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800b756:	430b      	orrs	r3, r1
 800b758:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800b75a:	ea42 030c 	orr.w	r3, r2, ip
 800b75e:	6841      	ldr	r1, [r0, #4]
 800b760:	433b      	orrs	r3, r7
 800b762:	4333      	orrs	r3, r6
 800b764:	432b      	orrs	r3, r5
 800b766:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800b76a:	4323      	orrs	r3, r4
 800b76c:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800b770:	4313      	orrs	r3, r2
 800b772:	6043      	str	r3, [r0, #4]
 800b774:	e7e7      	b.n	800b746 <FMC_SDRAM_Init+0x3c>

0800b776 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b776:	68cb      	ldr	r3, [r1, #12]
 800b778:	f103 3cff 	add.w	ip, r3, #4294967295
 800b77c:	694b      	ldr	r3, [r1, #20]
{
 800b77e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b780:	684c      	ldr	r4, [r1, #4]
 800b782:	688f      	ldr	r7, [r1, #8]
 800b784:	690e      	ldr	r6, [r1, #16]
 800b786:	698d      	ldr	r5, [r1, #24]
 800b788:	6809      	ldr	r1, [r1, #0]
 800b78a:	3b01      	subs	r3, #1
 800b78c:	051b      	lsls	r3, r3, #20
 800b78e:	3c01      	subs	r4, #1
 800b790:	3f01      	subs	r7, #1
 800b792:	3e01      	subs	r6, #1
 800b794:	3d01      	subs	r5, #1
 800b796:	0124      	lsls	r4, r4, #4
 800b798:	023f      	lsls	r7, r7, #8
 800b79a:	0436      	lsls	r6, r6, #16
 800b79c:	062d      	lsls	r5, r5, #24
 800b79e:	3901      	subs	r1, #1
 800b7a0:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800b7a4:	b95a      	cbnz	r2, 800b7be <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b7a6:	430b      	orrs	r3, r1
 800b7a8:	4323      	orrs	r3, r4
 800b7aa:	6882      	ldr	r2, [r0, #8]
 800b7ac:	433b      	orrs	r3, r7
 800b7ae:	4333      	orrs	r3, r6
 800b7b0:	432b      	orrs	r3, r5
 800b7b2:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800b7b6:	4313      	orrs	r3, r2
 800b7b8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800b7ba:	2000      	movs	r0, #0
 800b7bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800b7be:	6882      	ldr	r2, [r0, #8]
 800b7c0:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800b7c4:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800b7c8:	4313      	orrs	r3, r2
 800b7ca:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800b7cc:	ea44 0307 	orr.w	r3, r4, r7
 800b7d0:	68c2      	ldr	r2, [r0, #12]
 800b7d2:	430b      	orrs	r3, r1
 800b7d4:	4333      	orrs	r3, r6
 800b7d6:	432b      	orrs	r3, r5
 800b7d8:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800b7dc:	4313      	orrs	r3, r2
 800b7de:	60c3      	str	r3, [r0, #12]
 800b7e0:	e7eb      	b.n	800b7ba <FMC_SDRAM_Timing_Init+0x44>

0800b7e2 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800b7e2:	b570      	push	{r4, r5, r6, lr}
 800b7e4:	4604      	mov	r4, r0
 800b7e6:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800b7e8:	6902      	ldr	r2, [r0, #16]
 800b7ea:	e9d1 3000 	ldrd	r3, r0, [r1]
 800b7ee:	4303      	orrs	r3, r0
 800b7f0:	68c8      	ldr	r0, [r1, #12]
 800b7f2:	f36f 0215 	bfc	r2, #0, #22
 800b7f6:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800b7fa:	4313      	orrs	r3, r2
 800b7fc:	688a      	ldr	r2, [r1, #8]
 800b7fe:	3a01      	subs	r2, #1
 800b800:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800b804:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800b806:	f7fd f9ab 	bl	8008b60 <HAL_GetTick>
 800b80a:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800b80c:	69a0      	ldr	r0, [r4, #24]
 800b80e:	f010 0020 	ands.w	r0, r0, #32
 800b812:	d003      	beq.n	800b81c <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800b814:	1c6b      	adds	r3, r5, #1
 800b816:	d0f9      	beq.n	800b80c <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b818:	b90d      	cbnz	r5, 800b81e <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800b81a:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800b81c:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b81e:	f7fd f99f 	bl	8008b60 <HAL_GetTick>
 800b822:	1b80      	subs	r0, r0, r6
 800b824:	42a8      	cmp	r0, r5
 800b826:	d9f1      	bls.n	800b80c <FMC_SDRAM_SendCommand+0x2a>
 800b828:	e7f7      	b.n	800b81a <FMC_SDRAM_SendCommand+0x38>

0800b82a <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800b82a:	6943      	ldr	r3, [r0, #20]
 800b82c:	f36f 034d 	bfc	r3, #1, #13
 800b830:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800b834:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800b836:	2000      	movs	r0, #0
 800b838:	4770      	bx	lr

0800b83a <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800b83a:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800b83c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800b840:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800b842:	f001 fdf3 	bl	800d42c <xTaskGetSchedulerState>
 800b846:	2801      	cmp	r0, #1
 800b848:	d003      	beq.n	800b852 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800b84a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800b84e:	f000 bbe1 	b.w	800c014 <xPortSysTickHandler>
}
 800b852:	bd08      	pop	{r3, pc}

0800b854 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800b854:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800b858:	b92b      	cbnz	r3, 800b866 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800b85a:	4b06      	ldr	r3, [pc, #24]	@ (800b874 <osKernelInitialize+0x20>)
 800b85c:	6818      	ldr	r0, [r3, #0]
 800b85e:	b928      	cbnz	r0, 800b86c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800b860:	2201      	movs	r2, #1
 800b862:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800b864:	4770      	bx	lr
    stat = osErrorISR;
 800b866:	f06f 0005 	mvn.w	r0, #5
 800b86a:	4770      	bx	lr
    } else {
      stat = osError;
 800b86c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800b870:	4770      	bx	lr
 800b872:	bf00      	nop
 800b874:	200038c0 	.word	0x200038c0

0800b878 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800b878:	b510      	push	{r4, lr}
 800b87a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b87e:	b95c      	cbnz	r4, 800b898 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800b880:	4b08      	ldr	r3, [pc, #32]	@ (800b8a4 <osKernelStart+0x2c>)
 800b882:	681a      	ldr	r2, [r3, #0]
 800b884:	2a01      	cmp	r2, #1
 800b886:	d10a      	bne.n	800b89e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b888:	4a07      	ldr	r2, [pc, #28]	@ (800b8a8 <osKernelStart+0x30>)
 800b88a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800b88c:	2202      	movs	r2, #2
 800b88e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800b890:	f001 fb4a 	bl	800cf28 <vTaskStartScheduler>
      stat = osOK;
 800b894:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800b896:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800b898:	f06f 0005 	mvn.w	r0, #5
 800b89c:	e7fb      	b.n	800b896 <osKernelStart+0x1e>
      stat = osError;
 800b89e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800b8a2:	e7f8      	b.n	800b896 <osKernelStart+0x1e>
 800b8a4:	200038c0 	.word	0x200038c0
 800b8a8:	e000ed00 	.word	0xe000ed00

0800b8ac <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b8ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8ae:	b087      	sub	sp, #28
 800b8b0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800b8b2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800b8b4:	460b      	mov	r3, r1
  hTask = NULL;
 800b8b6:	9205      	str	r2, [sp, #20]
 800b8b8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800b8bc:	b9fa      	cbnz	r2, 800b8fe <osThreadNew+0x52>
 800b8be:	b1f0      	cbz	r0, 800b8fe <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800b8c0:	b354      	cbz	r4, 800b918 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800b8c2:	69a5      	ldr	r5, [r4, #24]
 800b8c4:	b125      	cbz	r5, 800b8d0 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b8c6:	1e69      	subs	r1, r5, #1
 800b8c8:	2937      	cmp	r1, #55	@ 0x37
 800b8ca:	d902      	bls.n	800b8d2 <osThreadNew+0x26>
        return (NULL);
 800b8cc:	2000      	movs	r0, #0
 800b8ce:	e017      	b.n	800b900 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800b8d0:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800b8d2:	6862      	ldr	r2, [r4, #4]
 800b8d4:	07d2      	lsls	r2, r2, #31
 800b8d6:	d4f9      	bmi.n	800b8cc <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 800b8d8:	6966      	ldr	r6, [r4, #20]
 800b8da:	b19e      	cbz	r6, 800b904 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800b8dc:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b8de:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800b8e2:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b8e4:	b187      	cbz	r7, 800b908 <osThreadNew+0x5c>
 800b8e6:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800b8ea:	d908      	bls.n	800b8fe <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b8ec:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800b8ee:	b134      	cbz	r4, 800b8fe <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800b8f0:	b12e      	cbz	r6, 800b8fe <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800b8f2:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800b8f6:	9500      	str	r5, [sp, #0]
 800b8f8:	f001 faaf 	bl	800ce5a <xTaskCreateStatic>
 800b8fc:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800b8fe:	9805      	ldr	r0, [sp, #20]
}
 800b900:	b007      	add	sp, #28
 800b902:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800b904:	2280      	movs	r2, #128	@ 0x80
 800b906:	e7ea      	b.n	800b8de <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800b908:	f1bc 0f00 	cmp.w	ip, #0
 800b90c:	d1f7      	bne.n	800b8fe <osThreadNew+0x52>
 800b90e:	6924      	ldr	r4, [r4, #16]
 800b910:	2c00      	cmp	r4, #0
 800b912:	d1f4      	bne.n	800b8fe <osThreadNew+0x52>
 800b914:	460c      	mov	r4, r1
 800b916:	e001      	b.n	800b91c <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 800b918:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800b91a:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800b91c:	a905      	add	r1, sp, #20
 800b91e:	e9cd 5100 	strd	r5, r1, [sp]
 800b922:	b292      	uxth	r2, r2
 800b924:	4621      	mov	r1, r4
 800b926:	f001 fad0 	bl	800ceca <xTaskCreate>
 800b92a:	2801      	cmp	r0, #1
            hTask = NULL;
 800b92c:	bf1c      	itt	ne
 800b92e:	2300      	movne	r3, #0
 800b930:	9305      	strne	r3, [sp, #20]
 800b932:	e7e4      	b.n	800b8fe <osThreadNew+0x52>

0800b934 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800b934:	b508      	push	{r3, lr}
 800b936:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800b93a:	b922      	cbnz	r2, 800b946 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800b93c:	b108      	cbz	r0, 800b942 <osDelay+0xe>
      vTaskDelay(ticks);
 800b93e:	f001 fc51 	bl	800d1e4 <vTaskDelay>
    stat = osOK;
 800b942:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800b944:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800b946:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800b94a:	e7fb      	b.n	800b944 <osDelay+0x10>

0800b94c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800b94c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b94e:	4604      	mov	r4, r0
 800b950:	460e      	mov	r6, r1
 800b952:	4615      	mov	r5, r2
 800b954:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800b958:	b942      	cbnz	r2, 800b96c <osSemaphoreNew+0x20>
 800b95a:	b138      	cbz	r0, 800b96c <osSemaphoreNew+0x20>
 800b95c:	4288      	cmp	r0, r1
 800b95e:	d305      	bcc.n	800b96c <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800b960:	b155      	cbz	r5, 800b978 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800b962:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800b966:	b12b      	cbz	r3, 800b974 <osSemaphoreNew+0x28>
 800b968:	2f4f      	cmp	r7, #79	@ 0x4f
 800b96a:	d822      	bhi.n	800b9b2 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800b96c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800b96e:	4620      	mov	r0, r4
 800b970:	b003      	add	sp, #12
 800b972:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800b974:	2f00      	cmp	r7, #0
 800b976:	d1f9      	bne.n	800b96c <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800b978:	2c01      	cmp	r4, #1
 800b97a:	d00c      	beq.n	800b996 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800b97c:	4620      	mov	r0, r4
 800b97e:	4631      	mov	r1, r6
 800b980:	f000 fd80 	bl	800c484 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800b984:	4604      	mov	r4, r0
 800b986:	2800      	cmp	r0, #0
 800b988:	d0f0      	beq.n	800b96c <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800b98a:	b985      	cbnz	r5, 800b9ae <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800b98c:	4629      	mov	r1, r5
 800b98e:	4620      	mov	r0, r4
 800b990:	f001 f89e 	bl	800cad0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800b994:	e7eb      	b.n	800b96e <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800b996:	2203      	movs	r2, #3
 800b998:	2100      	movs	r1, #0
 800b99a:	2001      	movs	r0, #1
 800b99c:	f000 fd29 	bl	800c3f2 <xQueueGenericCreate>
 800b9a0:	e00e      	b.n	800b9c0 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800b9a2:	461a      	mov	r2, r3
 800b9a4:	f000 fd4c 	bl	800c440 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800b9a8:	4604      	mov	r4, r0
 800b9aa:	2800      	cmp	r0, #0
 800b9ac:	d0de      	beq.n	800b96c <osSemaphoreNew+0x20>
          name = attr->name;
 800b9ae:	682d      	ldr	r5, [r5, #0]
 800b9b0:	e7ec      	b.n	800b98c <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800b9b2:	2801      	cmp	r0, #1
 800b9b4:	d1f5      	bne.n	800b9a2 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800b9b6:	2103      	movs	r1, #3
 800b9b8:	9100      	str	r1, [sp, #0]
 800b9ba:	4611      	mov	r1, r2
 800b9bc:	f000 fccb 	bl	800c356 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800b9c0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800b9c2:	2800      	cmp	r0, #0
 800b9c4:	d0d2      	beq.n	800b96c <osSemaphoreNew+0x20>
 800b9c6:	2e00      	cmp	r6, #0
 800b9c8:	d0df      	beq.n	800b98a <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800b9ca:	2300      	movs	r3, #0
 800b9cc:	461a      	mov	r2, r3
 800b9ce:	4619      	mov	r1, r3
 800b9d0:	f000 fd76 	bl	800c4c0 <xQueueGenericSend>
 800b9d4:	2801      	cmp	r0, #1
 800b9d6:	d0d8      	beq.n	800b98a <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800b9d8:	4620      	mov	r0, r4
 800b9da:	f001 f8a3 	bl	800cb24 <vQueueDelete>
      if (hSemaphore != NULL) {
 800b9de:	e7c5      	b.n	800b96c <osSemaphoreNew+0x20>

0800b9e0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800b9e0:	b513      	push	{r0, r1, r4, lr}
 800b9e2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800b9e4:	b328      	cbz	r0, 800ba32 <osSemaphoreAcquire+0x52>
 800b9e6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800b9ea:	b1cb      	cbz	r3, 800ba20 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800b9ec:	bb09      	cbnz	r1, 800ba32 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800b9ee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800b9f0:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800b9f2:	f001 f820 	bl	800ca36 <xQueueReceiveFromISR>
 800b9f6:	2801      	cmp	r0, #1
 800b9f8:	d003      	beq.n	800ba02 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800b9fa:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800b9fe:	b002      	add	sp, #8
 800ba00:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ba02:	9b01      	ldr	r3, [sp, #4]
 800ba04:	b90b      	cbnz	r3, 800ba0a <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800ba06:	2000      	movs	r0, #0
 800ba08:	e7f9      	b.n	800b9fe <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800ba0a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ba0e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ba12:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ba16:	f3bf 8f4f 	dsb	sy
 800ba1a:	f3bf 8f6f 	isb	sy
 800ba1e:	e7f2      	b.n	800ba06 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800ba20:	f000 ff4c 	bl	800c8bc <xQueueSemaphoreTake>
 800ba24:	2801      	cmp	r0, #1
 800ba26:	d0ee      	beq.n	800ba06 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800ba28:	2c00      	cmp	r4, #0
 800ba2a:	d0e6      	beq.n	800b9fa <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800ba2c:	f06f 0001 	mvn.w	r0, #1
 800ba30:	e7e5      	b.n	800b9fe <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800ba32:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800ba36:	e7e2      	b.n	800b9fe <osSemaphoreAcquire+0x1e>

0800ba38 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800ba38:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ba3a:	b318      	cbz	r0, 800ba84 <osSemaphoreRelease+0x4c>
 800ba3c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ba40:	b1cb      	cbz	r3, 800ba76 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800ba42:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ba44:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800ba46:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ba48:	f000 fe49 	bl	800c6de <xQueueGiveFromISR>
 800ba4c:	2801      	cmp	r0, #1
 800ba4e:	d004      	beq.n	800ba5a <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800ba50:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800ba54:	b003      	add	sp, #12
 800ba56:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800ba5a:	9b01      	ldr	r3, [sp, #4]
 800ba5c:	b14b      	cbz	r3, 800ba72 <osSemaphoreRelease+0x3a>
 800ba5e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ba62:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ba66:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ba6a:	f3bf 8f4f 	dsb	sy
 800ba6e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ba72:	2000      	movs	r0, #0
 800ba74:	e7ee      	b.n	800ba54 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800ba76:	461a      	mov	r2, r3
 800ba78:	4619      	mov	r1, r3
 800ba7a:	f000 fd21 	bl	800c4c0 <xQueueGenericSend>
 800ba7e:	2801      	cmp	r0, #1
 800ba80:	d0f7      	beq.n	800ba72 <osSemaphoreRelease+0x3a>
 800ba82:	e7e5      	b.n	800ba50 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800ba84:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800ba88:	e7e4      	b.n	800ba54 <osSemaphoreRelease+0x1c>

0800ba8a <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800ba8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ba8c:	4605      	mov	r5, r0
 800ba8e:	460e      	mov	r6, r1
 800ba90:	4614      	mov	r4, r2
 800ba92:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ba96:	b11f      	cbz	r7, 800baa0 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800ba98:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ba9a:	4628      	mov	r0, r5
 800ba9c:	b003      	add	sp, #12
 800ba9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800baa0:	2800      	cmp	r0, #0
 800baa2:	d0f9      	beq.n	800ba98 <osMessageQueueNew+0xe>
 800baa4:	2900      	cmp	r1, #0
 800baa6:	d0f7      	beq.n	800ba98 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800baa8:	b1da      	cbz	r2, 800bae2 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800baaa:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800baae:	b183      	cbz	r3, 800bad2 <osMessageQueueNew+0x48>
 800bab0:	2a4f      	cmp	r2, #79	@ 0x4f
 800bab2:	d9f1      	bls.n	800ba98 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800bab4:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800bab6:	2a00      	cmp	r2, #0
 800bab8:	d0ee      	beq.n	800ba98 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800baba:	6966      	ldr	r6, [r4, #20]
 800babc:	434d      	muls	r5, r1
 800babe:	42ae      	cmp	r6, r5
 800bac0:	d3ea      	bcc.n	800ba98 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800bac2:	9700      	str	r7, [sp, #0]
 800bac4:	f000 fc47 	bl	800c356 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800bac8:	4605      	mov	r5, r0
 800baca:	2800      	cmp	r0, #0
 800bacc:	d0e4      	beq.n	800ba98 <osMessageQueueNew+0xe>
        name = attr->name;
 800bace:	6824      	ldr	r4, [r4, #0]
 800bad0:	e011      	b.n	800baf6 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800bad2:	2a00      	cmp	r2, #0
 800bad4:	d1e0      	bne.n	800ba98 <osMessageQueueNew+0xe>
 800bad6:	6923      	ldr	r3, [r4, #16]
 800bad8:	2b00      	cmp	r3, #0
 800bada:	d1dd      	bne.n	800ba98 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800badc:	6963      	ldr	r3, [r4, #20]
 800bade:	2b00      	cmp	r3, #0
 800bae0:	d1da      	bne.n	800ba98 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800bae2:	4628      	mov	r0, r5
 800bae4:	2200      	movs	r2, #0
 800bae6:	4631      	mov	r1, r6
 800bae8:	f000 fc83 	bl	800c3f2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800baec:	4605      	mov	r5, r0
 800baee:	2800      	cmp	r0, #0
 800baf0:	d0d2      	beq.n	800ba98 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800baf2:	2c00      	cmp	r4, #0
 800baf4:	d1eb      	bne.n	800bace <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800baf6:	4621      	mov	r1, r4
 800baf8:	4628      	mov	r0, r5
 800bafa:	f000 ffe9 	bl	800cad0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800bafe:	e7cc      	b.n	800ba9a <osMessageQueueNew+0x10>

0800bb00 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800bb00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bb02:	461c      	mov	r4, r3
 800bb04:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bb08:	b1de      	cbz	r6, 800bb42 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bb0a:	b338      	cbz	r0, 800bb5c <osMessageQueuePut+0x5c>
 800bb0c:	b331      	cbz	r1, 800bb5c <osMessageQueuePut+0x5c>
 800bb0e:	bb2b      	cbnz	r3, 800bb5c <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bb10:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bb12:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800bb14:	f000 fd86 	bl	800c624 <xQueueGenericSendFromISR>
 800bb18:	2801      	cmp	r0, #1
 800bb1a:	d003      	beq.n	800bb24 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800bb1c:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800bb20:	b002      	add	sp, #8
 800bb22:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800bb24:	9b01      	ldr	r3, [sp, #4]
 800bb26:	b90b      	cbnz	r3, 800bb2c <osMessageQueuePut+0x2c>
  stat = osOK;
 800bb28:	2000      	movs	r0, #0
 800bb2a:	e7f9      	b.n	800bb20 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800bb2c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bb30:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bb34:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bb38:	f3bf 8f4f 	dsb	sy
 800bb3c:	f3bf 8f6f 	isb	sy
 800bb40:	e7f2      	b.n	800bb28 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bb42:	b158      	cbz	r0, 800bb5c <osMessageQueuePut+0x5c>
 800bb44:	b151      	cbz	r1, 800bb5c <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bb46:	4633      	mov	r3, r6
 800bb48:	4622      	mov	r2, r4
 800bb4a:	f000 fcb9 	bl	800c4c0 <xQueueGenericSend>
 800bb4e:	2801      	cmp	r0, #1
 800bb50:	d0ea      	beq.n	800bb28 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800bb52:	2c00      	cmp	r4, #0
 800bb54:	d0e2      	beq.n	800bb1c <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800bb56:	f06f 0001 	mvn.w	r0, #1
 800bb5a:	e7e1      	b.n	800bb20 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800bb5c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800bb60:	e7de      	b.n	800bb20 <osMessageQueuePut+0x20>

0800bb62 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800bb62:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb64:	461c      	mov	r4, r3
 800bb66:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800bb6a:	b1db      	cbz	r3, 800bba4 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800bb6c:	b330      	cbz	r0, 800bbbc <osMessageQueueGet+0x5a>
 800bb6e:	b329      	cbz	r1, 800bbbc <osMessageQueueGet+0x5a>
 800bb70:	bb24      	cbnz	r4, 800bbbc <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bb72:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800bb74:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800bb76:	f000 ff5e 	bl	800ca36 <xQueueReceiveFromISR>
 800bb7a:	2801      	cmp	r0, #1
 800bb7c:	d003      	beq.n	800bb86 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800bb7e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800bb82:	b003      	add	sp, #12
 800bb84:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800bb86:	9b01      	ldr	r3, [sp, #4]
 800bb88:	b90b      	cbnz	r3, 800bb8e <osMessageQueueGet+0x2c>
  stat = osOK;
 800bb8a:	2000      	movs	r0, #0
 800bb8c:	e7f9      	b.n	800bb82 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800bb8e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bb92:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800bb96:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800bb9a:	f3bf 8f4f 	dsb	sy
 800bb9e:	f3bf 8f6f 	isb	sy
 800bba2:	e7f2      	b.n	800bb8a <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800bba4:	b150      	cbz	r0, 800bbbc <osMessageQueueGet+0x5a>
 800bba6:	b149      	cbz	r1, 800bbbc <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800bba8:	4622      	mov	r2, r4
 800bbaa:	f000 fde9 	bl	800c780 <xQueueReceive>
 800bbae:	2801      	cmp	r0, #1
 800bbb0:	d0eb      	beq.n	800bb8a <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800bbb2:	2c00      	cmp	r4, #0
 800bbb4:	d0e3      	beq.n	800bb7e <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800bbb6:	f06f 0001 	mvn.w	r0, #1
 800bbba:	e7e2      	b.n	800bb82 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800bbbc:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800bbc0:	e7df      	b.n	800bb82 <osMessageQueueGet+0x20>
	...

0800bbc4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800bbc4:	4b03      	ldr	r3, [pc, #12]	@ (800bbd4 <vApplicationGetIdleTaskMemory+0x10>)
 800bbc6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800bbc8:	4b03      	ldr	r3, [pc, #12]	@ (800bbd8 <vApplicationGetIdleTaskMemory+0x14>)
 800bbca:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800bbcc:	2380      	movs	r3, #128	@ 0x80
 800bbce:	6013      	str	r3, [r2, #0]
}
 800bbd0:	4770      	bx	lr
 800bbd2:	bf00      	nop
 800bbd4:	20003860 	.word	0x20003860
 800bbd8:	20003660 	.word	0x20003660

0800bbdc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800bbdc:	4b03      	ldr	r3, [pc, #12]	@ (800bbec <vApplicationGetTimerTaskMemory+0x10>)
 800bbde:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800bbe0:	4b03      	ldr	r3, [pc, #12]	@ (800bbf0 <vApplicationGetTimerTaskMemory+0x14>)
 800bbe2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800bbe4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800bbe8:	6013      	str	r3, [r2, #0]
}
 800bbea:	4770      	bx	lr
 800bbec:	20003600 	.word	0x20003600
 800bbf0:	20003200 	.word	0x20003200

0800bbf4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800bbf4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800bbf6:	4b10      	ldr	r3, [pc, #64]	@ (800bc38 <prvInsertBlockIntoFreeList+0x44>)
 800bbf8:	461a      	mov	r2, r3
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	4283      	cmp	r3, r0
 800bbfe:	d3fb      	bcc.n	800bbf8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800bc00:	6854      	ldr	r4, [r2, #4]
 800bc02:	1911      	adds	r1, r2, r4
 800bc04:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bc06:	bf01      	itttt	eq
 800bc08:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800bc0a:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800bc0c:	1909      	addeq	r1, r1, r4
 800bc0e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800bc10:	6844      	ldr	r4, [r0, #4]
 800bc12:	1901      	adds	r1, r0, r4
 800bc14:	428b      	cmp	r3, r1
 800bc16:	d10c      	bne.n	800bc32 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800bc18:	4908      	ldr	r1, [pc, #32]	@ (800bc3c <prvInsertBlockIntoFreeList+0x48>)
 800bc1a:	6809      	ldr	r1, [r1, #0]
 800bc1c:	428b      	cmp	r3, r1
 800bc1e:	d003      	beq.n	800bc28 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800bc20:	6859      	ldr	r1, [r3, #4]
 800bc22:	4421      	add	r1, r4
 800bc24:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800bc26:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800bc28:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800bc2a:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800bc2c:	bf18      	it	ne
 800bc2e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800bc30:	bd10      	pop	{r4, pc}
 800bc32:	4619      	mov	r1, r3
 800bc34:	e7f8      	b.n	800bc28 <prvInsertBlockIntoFreeList+0x34>
 800bc36:	bf00      	nop
 800bc38:	200038dc 	.word	0x200038dc
 800bc3c:	200038d8 	.word	0x200038d8

0800bc40 <pvPortMalloc>:
{
 800bc40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc44:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800bc46:	f001 f9b5 	bl	800cfb4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800bc4a:	4942      	ldr	r1, [pc, #264]	@ (800bd54 <pvPortMalloc+0x114>)
 800bc4c:	4d42      	ldr	r5, [pc, #264]	@ (800bd58 <pvPortMalloc+0x118>)
 800bc4e:	680b      	ldr	r3, [r1, #0]
 800bc50:	bb0b      	cbnz	r3, 800bc96 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800bc52:	4a42      	ldr	r2, [pc, #264]	@ (800bd5c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800bc54:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800bc56:	bf1f      	itttt	ne
 800bc58:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800bc5a:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800bc5e:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800bc62:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800bc64:	bf0c      	ite	eq
 800bc66:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800bc6a:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800bc6c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800bc6e:	4e3c      	ldr	r6, [pc, #240]	@ (800bd60 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800bc70:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800bc72:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800bc76:	2000      	movs	r0, #0
 800bc78:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800bc7a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800bc7c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800bc80:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800bc82:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800bc86:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800bc88:	4b36      	ldr	r3, [pc, #216]	@ (800bd64 <pvPortMalloc+0x124>)
 800bc8a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800bc8c:	4b36      	ldr	r3, [pc, #216]	@ (800bd68 <pvPortMalloc+0x128>)
 800bc8e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800bc90:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800bc94:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800bc96:	682e      	ldr	r6, [r5, #0]
 800bc98:	4226      	tst	r6, r4
 800bc9a:	d155      	bne.n	800bd48 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800bc9c:	2c00      	cmp	r4, #0
 800bc9e:	d046      	beq.n	800bd2e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800bca0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800bca4:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800bca6:	bf1c      	itt	ne
 800bca8:	f023 0307 	bicne.w	r3, r3, #7
 800bcac:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800bcae:	2b00      	cmp	r3, #0
 800bcb0:	d04a      	beq.n	800bd48 <pvPortMalloc+0x108>
 800bcb2:	4f2d      	ldr	r7, [pc, #180]	@ (800bd68 <pvPortMalloc+0x128>)
 800bcb4:	683c      	ldr	r4, [r7, #0]
 800bcb6:	429c      	cmp	r4, r3
 800bcb8:	d346      	bcc.n	800bd48 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800bcba:	4a29      	ldr	r2, [pc, #164]	@ (800bd60 <pvPortMalloc+0x120>)
 800bcbc:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800bcbe:	6868      	ldr	r0, [r5, #4]
 800bcc0:	4298      	cmp	r0, r3
 800bcc2:	d204      	bcs.n	800bcce <pvPortMalloc+0x8e>
 800bcc4:	f8d5 c000 	ldr.w	ip, [r5]
 800bcc8:	f1bc 0f00 	cmp.w	ip, #0
 800bccc:	d115      	bne.n	800bcfa <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800bcce:	6809      	ldr	r1, [r1, #0]
 800bcd0:	42a9      	cmp	r1, r5
 800bcd2:	d039      	beq.n	800bd48 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800bcd4:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800bcd6:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800bcda:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800bcdc:	1ac2      	subs	r2, r0, r3
 800bcde:	2a10      	cmp	r2, #16
 800bce0:	d912      	bls.n	800bd08 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800bce2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800bce4:	0741      	lsls	r1, r0, #29
 800bce6:	d00b      	beq.n	800bd00 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800bce8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bcec:	f383 8811 	msr	BASEPRI, r3
 800bcf0:	f3bf 8f6f 	isb	sy
 800bcf4:	f3bf 8f4f 	dsb	sy
 800bcf8:	e7fe      	b.n	800bcf8 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800bcfa:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800bcfc:	4665      	mov	r5, ip
 800bcfe:	e7de      	b.n	800bcbe <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800bd00:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800bd02:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800bd04:	f7ff ff76 	bl	800bbf4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bd08:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bd0a:	4916      	ldr	r1, [pc, #88]	@ (800bd64 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bd0c:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bd0e:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800bd10:	4a16      	ldr	r2, [pc, #88]	@ (800bd6c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bd12:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800bd14:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800bd16:	2300      	movs	r3, #0
 800bd18:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800bd1a:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800bd1c:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800bd1e:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800bd20:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800bd24:	bf38      	it	cc
 800bd26:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 800bd28:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800bd2a:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800bd2e:	f001 f9e5 	bl	800d0fc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800bd32:	0763      	lsls	r3, r4, #29
 800bd34:	d00a      	beq.n	800bd4c <pvPortMalloc+0x10c>
 800bd36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bd3a:	f383 8811 	msr	BASEPRI, r3
 800bd3e:	f3bf 8f6f 	isb	sy
 800bd42:	f3bf 8f4f 	dsb	sy
 800bd46:	e7fe      	b.n	800bd46 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800bd48:	2400      	movs	r4, #0
 800bd4a:	e7f0      	b.n	800bd2e <pvPortMalloc+0xee>
}
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd52:	bf00      	nop
 800bd54:	200038d8 	.word	0x200038d8
 800bd58:	200038c4 	.word	0x200038c4
 800bd5c:	200038e4 	.word	0x200038e4
 800bd60:	200038dc 	.word	0x200038dc
 800bd64:	200038d0 	.word	0x200038d0
 800bd68:	200038d4 	.word	0x200038d4
 800bd6c:	200038cc 	.word	0x200038cc

0800bd70 <vPortFree>:
{
 800bd70:	b510      	push	{r4, lr}
	if( pv != NULL )
 800bd72:	4604      	mov	r4, r0
 800bd74:	b390      	cbz	r0, 800bddc <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800bd76:	4a1a      	ldr	r2, [pc, #104]	@ (800bde0 <vPortFree+0x70>)
 800bd78:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800bd7c:	6812      	ldr	r2, [r2, #0]
 800bd7e:	4213      	tst	r3, r2
 800bd80:	d108      	bne.n	800bd94 <vPortFree+0x24>
 800bd82:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bd86:	f383 8811 	msr	BASEPRI, r3
 800bd8a:	f3bf 8f6f 	isb	sy
 800bd8e:	f3bf 8f4f 	dsb	sy
 800bd92:	e7fe      	b.n	800bd92 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800bd94:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800bd98:	b141      	cbz	r1, 800bdac <vPortFree+0x3c>
 800bd9a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bd9e:	f383 8811 	msr	BASEPRI, r3
 800bda2:	f3bf 8f6f 	isb	sy
 800bda6:	f3bf 8f4f 	dsb	sy
 800bdaa:	e7fe      	b.n	800bdaa <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800bdac:	ea23 0302 	bic.w	r3, r3, r2
 800bdb0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800bdb4:	f001 f8fe 	bl	800cfb4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bdb8:	4a0a      	ldr	r2, [pc, #40]	@ (800bde4 <vPortFree+0x74>)
 800bdba:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bdbe:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800bdc0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800bdc4:	440b      	add	r3, r1
 800bdc6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800bdc8:	f7ff ff14 	bl	800bbf4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800bdcc:	4a06      	ldr	r2, [pc, #24]	@ (800bde8 <vPortFree+0x78>)
 800bdce:	6813      	ldr	r3, [r2, #0]
}
 800bdd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800bdd4:	3301      	adds	r3, #1
 800bdd6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800bdd8:	f001 b990 	b.w	800d0fc <xTaskResumeAll>
}
 800bddc:	bd10      	pop	{r4, pc}
 800bdde:	bf00      	nop
 800bde0:	200038c4 	.word	0x200038c4
 800bde4:	200038d4 	.word	0x200038d4
 800bde8:	200038c8 	.word	0x200038c8

0800bdec <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bdec:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800bdf0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bdf4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bdf8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800bdfa:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800bdfc:	2300      	movs	r3, #0
 800bdfe:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800be00:	4770      	bx	lr

0800be02 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800be02:	2300      	movs	r3, #0
 800be04:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800be06:	4770      	bx	lr

0800be08 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800be08:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800be0a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800be0c:	689a      	ldr	r2, [r3, #8]
 800be0e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800be10:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800be12:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800be14:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800be16:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800be18:	3301      	adds	r3, #1
 800be1a:	6003      	str	r3, [r0, #0]
}
 800be1c:	4770      	bx	lr

0800be1e <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800be1e:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800be20:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800be22:	1c63      	adds	r3, r4, #1
 800be24:	d10a      	bne.n	800be3c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800be26:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800be28:	685a      	ldr	r2, [r3, #4]
 800be2a:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800be2c:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800be2e:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800be30:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800be32:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800be34:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800be36:	3301      	adds	r3, #1
 800be38:	6003      	str	r3, [r0, #0]
}
 800be3a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800be3c:	f100 0208 	add.w	r2, r0, #8
 800be40:	4613      	mov	r3, r2
 800be42:	6852      	ldr	r2, [r2, #4]
 800be44:	6815      	ldr	r5, [r2, #0]
 800be46:	42a5      	cmp	r5, r4
 800be48:	d9fa      	bls.n	800be40 <vListInsert+0x22>
 800be4a:	e7ed      	b.n	800be28 <vListInsert+0xa>

0800be4c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800be4c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800be50:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800be52:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800be54:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800be56:	6859      	ldr	r1, [r3, #4]
 800be58:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800be5a:	bf08      	it	eq
 800be5c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800be5e:	2200      	movs	r2, #0
 800be60:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800be62:	681a      	ldr	r2, [r3, #0]
 800be64:	3a01      	subs	r2, #1
 800be66:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800be68:	6818      	ldr	r0, [r3, #0]
}
 800be6a:	4770      	bx	lr

0800be6c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800be6c:	4808      	ldr	r0, [pc, #32]	@ (800be90 <prvPortStartFirstTask+0x24>)
 800be6e:	6800      	ldr	r0, [r0, #0]
 800be70:	6800      	ldr	r0, [r0, #0]
 800be72:	f380 8808 	msr	MSP, r0
 800be76:	f04f 0000 	mov.w	r0, #0
 800be7a:	f380 8814 	msr	CONTROL, r0
 800be7e:	b662      	cpsie	i
 800be80:	b661      	cpsie	f
 800be82:	f3bf 8f4f 	dsb	sy
 800be86:	f3bf 8f6f 	isb	sy
 800be8a:	df00      	svc	0
 800be8c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800be8e:	0000      	.short	0x0000
 800be90:	e000ed08 	.word	0xe000ed08

0800be94 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800be94:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800bea4 <vPortEnableVFP+0x10>
 800be98:	6801      	ldr	r1, [r0, #0]
 800be9a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800be9e:	6001      	str	r1, [r0, #0]
 800bea0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800bea2:	0000      	.short	0x0000
 800bea4:	e000ed88 	.word	0xe000ed88

0800bea8 <prvTaskExitError>:
{
 800bea8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800beaa:	2300      	movs	r3, #0
 800beac:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800beae:	4b0d      	ldr	r3, [pc, #52]	@ (800bee4 <prvTaskExitError+0x3c>)
 800beb0:	681b      	ldr	r3, [r3, #0]
 800beb2:	3301      	adds	r3, #1
 800beb4:	d008      	beq.n	800bec8 <prvTaskExitError+0x20>
 800beb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800beba:	f383 8811 	msr	BASEPRI, r3
 800bebe:	f3bf 8f6f 	isb	sy
 800bec2:	f3bf 8f4f 	dsb	sy
 800bec6:	e7fe      	b.n	800bec6 <prvTaskExitError+0x1e>
 800bec8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800becc:	f383 8811 	msr	BASEPRI, r3
 800bed0:	f3bf 8f6f 	isb	sy
 800bed4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800bed8:	9b01      	ldr	r3, [sp, #4]
 800beda:	2b00      	cmp	r3, #0
 800bedc:	d0fc      	beq.n	800bed8 <prvTaskExitError+0x30>
}
 800bede:	b002      	add	sp, #8
 800bee0:	4770      	bx	lr
 800bee2:	bf00      	nop
 800bee4:	20000080 	.word	0x20000080

0800bee8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800bee8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800beec:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800bef0:	4b07      	ldr	r3, [pc, #28]	@ (800bf10 <pxPortInitialiseStack+0x28>)
 800bef2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800bef6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800befa:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800befe:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800bf02:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800bf06:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800bf0a:	3844      	subs	r0, #68	@ 0x44
 800bf0c:	4770      	bx	lr
 800bf0e:	bf00      	nop
 800bf10:	0800bea9 	.word	0x0800bea9
	...

0800bf20 <SVC_Handler>:
	__asm volatile (
 800bf20:	4b07      	ldr	r3, [pc, #28]	@ (800bf40 <pxCurrentTCBConst2>)
 800bf22:	6819      	ldr	r1, [r3, #0]
 800bf24:	6808      	ldr	r0, [r1, #0]
 800bf26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf2a:	f380 8809 	msr	PSP, r0
 800bf2e:	f3bf 8f6f 	isb	sy
 800bf32:	f04f 0000 	mov.w	r0, #0
 800bf36:	f380 8811 	msr	BASEPRI, r0
 800bf3a:	4770      	bx	lr
 800bf3c:	f3af 8000 	nop.w

0800bf40 <pxCurrentTCBConst2>:
 800bf40:	20013e24 	.word	0x20013e24

0800bf44 <vPortEnterCritical>:
 800bf44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf48:	f383 8811 	msr	BASEPRI, r3
 800bf4c:	f3bf 8f6f 	isb	sy
 800bf50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800bf54:	4a0a      	ldr	r2, [pc, #40]	@ (800bf80 <vPortEnterCritical+0x3c>)
 800bf56:	6813      	ldr	r3, [r2, #0]
 800bf58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800bf5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800bf5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800bf5e:	d10e      	bne.n	800bf7e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800bf60:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800bf64:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800bf68:	b2db      	uxtb	r3, r3
 800bf6a:	b143      	cbz	r3, 800bf7e <vPortEnterCritical+0x3a>
 800bf6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf70:	f383 8811 	msr	BASEPRI, r3
 800bf74:	f3bf 8f6f 	isb	sy
 800bf78:	f3bf 8f4f 	dsb	sy
 800bf7c:	e7fe      	b.n	800bf7c <vPortEnterCritical+0x38>
}
 800bf7e:	4770      	bx	lr
 800bf80:	20000080 	.word	0x20000080

0800bf84 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800bf84:	4a08      	ldr	r2, [pc, #32]	@ (800bfa8 <vPortExitCritical+0x24>)
 800bf86:	6813      	ldr	r3, [r2, #0]
 800bf88:	b943      	cbnz	r3, 800bf9c <vPortExitCritical+0x18>
 800bf8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800bf8e:	f383 8811 	msr	BASEPRI, r3
 800bf92:	f3bf 8f6f 	isb	sy
 800bf96:	f3bf 8f4f 	dsb	sy
 800bf9a:	e7fe      	b.n	800bf9a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800bf9c:	3b01      	subs	r3, #1
 800bf9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800bfa0:	b90b      	cbnz	r3, 800bfa6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800bfa2:	f383 8811 	msr	BASEPRI, r3
}
 800bfa6:	4770      	bx	lr
 800bfa8:	20000080 	.word	0x20000080
 800bfac:	00000000 	.word	0x00000000

0800bfb0 <PendSV_Handler>:
	__asm volatile
 800bfb0:	f3ef 8009 	mrs	r0, PSP
 800bfb4:	f3bf 8f6f 	isb	sy
 800bfb8:	4b15      	ldr	r3, [pc, #84]	@ (800c010 <pxCurrentTCBConst>)
 800bfba:	681a      	ldr	r2, [r3, #0]
 800bfbc:	f01e 0f10 	tst.w	lr, #16
 800bfc0:	bf08      	it	eq
 800bfc2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800bfc6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfca:	6010      	str	r0, [r2, #0]
 800bfcc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800bfd0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800bfd4:	f380 8811 	msr	BASEPRI, r0
 800bfd8:	f3bf 8f4f 	dsb	sy
 800bfdc:	f3bf 8f6f 	isb	sy
 800bfe0:	f001 f924 	bl	800d22c <vTaskSwitchContext>
 800bfe4:	f04f 0000 	mov.w	r0, #0
 800bfe8:	f380 8811 	msr	BASEPRI, r0
 800bfec:	bc09      	pop	{r0, r3}
 800bfee:	6819      	ldr	r1, [r3, #0]
 800bff0:	6808      	ldr	r0, [r1, #0]
 800bff2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bff6:	f01e 0f10 	tst.w	lr, #16
 800bffa:	bf08      	it	eq
 800bffc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800c000:	f380 8809 	msr	PSP, r0
 800c004:	f3bf 8f6f 	isb	sy
 800c008:	4770      	bx	lr
 800c00a:	bf00      	nop
 800c00c:	f3af 8000 	nop.w

0800c010 <pxCurrentTCBConst>:
 800c010:	20013e24 	.word	0x20013e24

0800c014 <xPortSysTickHandler>:
{
 800c014:	b508      	push	{r3, lr}
	__asm volatile
 800c016:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c01a:	f383 8811 	msr	BASEPRI, r3
 800c01e:	f3bf 8f6f 	isb	sy
 800c022:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800c026:	f000 ffd3 	bl	800cfd0 <xTaskIncrementTick>
 800c02a:	b128      	cbz	r0, 800c038 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800c02c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c030:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c034:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800c038:	2300      	movs	r3, #0
 800c03a:	f383 8811 	msr	BASEPRI, r3
}
 800c03e:	bd08      	pop	{r3, pc}

0800c040 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800c040:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800c044:	2300      	movs	r3, #0
 800c046:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800c048:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800c04a:	4b05      	ldr	r3, [pc, #20]	@ (800c060 <vPortSetupTimerInterrupt+0x20>)
 800c04c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800c050:	681b      	ldr	r3, [r3, #0]
 800c052:	fbb3 f3f1 	udiv	r3, r3, r1
 800c056:	3b01      	subs	r3, #1
 800c058:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800c05a:	2307      	movs	r3, #7
 800c05c:	6113      	str	r3, [r2, #16]
}
 800c05e:	4770      	bx	lr
 800c060:	20000074 	.word	0x20000074

0800c064 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c064:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800c068:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800c06a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800c06e:	4a38      	ldr	r2, [pc, #224]	@ (800c150 <xPortStartScheduler+0xec>)
 800c070:	4291      	cmp	r1, r2
 800c072:	d108      	bne.n	800c086 <xPortStartScheduler+0x22>
	__asm volatile
 800c074:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c078:	f383 8811 	msr	BASEPRI, r3
 800c07c:	f3bf 8f6f 	isb	sy
 800c080:	f3bf 8f4f 	dsb	sy
 800c084:	e7fe      	b.n	800c084 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800c086:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800c08a:	4b32      	ldr	r3, [pc, #200]	@ (800c154 <xPortStartScheduler+0xf0>)
 800c08c:	429a      	cmp	r2, r3
 800c08e:	d108      	bne.n	800c0a2 <xPortStartScheduler+0x3e>
 800c090:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c094:	f383 8811 	msr	BASEPRI, r3
 800c098:	f3bf 8f6f 	isb	sy
 800c09c:	f3bf 8f4f 	dsb	sy
 800c0a0:	e7fe      	b.n	800c0a0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800c0a2:	4b2d      	ldr	r3, [pc, #180]	@ (800c158 <xPortStartScheduler+0xf4>)
 800c0a4:	781a      	ldrb	r2, [r3, #0]
 800c0a6:	b2d2      	uxtb	r2, r2
 800c0a8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800c0aa:	22ff      	movs	r2, #255	@ 0xff
 800c0ac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c0ae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c0b0:	4a2a      	ldr	r2, [pc, #168]	@ (800c15c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800c0b2:	b2db      	uxtb	r3, r3
 800c0b4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800c0b8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800c0bc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800c0c0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800c0c2:	4a27      	ldr	r2, [pc, #156]	@ (800c160 <xPortStartScheduler+0xfc>)
 800c0c4:	2307      	movs	r3, #7
 800c0c6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c0c8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800c0cc:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800c0ce:	0609      	lsls	r1, r1, #24
 800c0d0:	d40a      	bmi.n	800c0e8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800c0d2:	2b03      	cmp	r3, #3
 800c0d4:	d011      	beq.n	800c0fa <xPortStartScheduler+0x96>
 800c0d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c0da:	f383 8811 	msr	BASEPRI, r3
 800c0de:	f3bf 8f6f 	isb	sy
 800c0e2:	f3bf 8f4f 	dsb	sy
 800c0e6:	e7fe      	b.n	800c0e6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800c0e8:	3b01      	subs	r3, #1
 800c0ea:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800c0ec:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800c0f0:	005b      	lsls	r3, r3, #1
 800c0f2:	b2db      	uxtb	r3, r3
 800c0f4:	f88d 3003 	strb.w	r3, [sp, #3]
 800c0f8:	e7e6      	b.n	800c0c8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800c0fa:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800c0fe:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c100:	9b01      	ldr	r3, [sp, #4]
 800c102:	4a15      	ldr	r2, [pc, #84]	@ (800c158 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c104:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800c108:	b2db      	uxtb	r3, r3
 800c10a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800c10c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800c110:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800c114:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800c118:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800c11c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800c120:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800c124:	f7ff ff8c 	bl	800c040 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800c128:	4b0e      	ldr	r3, [pc, #56]	@ (800c164 <xPortStartScheduler+0x100>)
 800c12a:	2500      	movs	r5, #0
 800c12c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800c12e:	f7ff feb1 	bl	800be94 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800c132:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800c136:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800c13a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800c13e:	f7ff fe95 	bl	800be6c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800c142:	f001 f873 	bl	800d22c <vTaskSwitchContext>
	prvTaskExitError();
 800c146:	f7ff feaf 	bl	800bea8 <prvTaskExitError>
}
 800c14a:	4628      	mov	r0, r5
 800c14c:	b003      	add	sp, #12
 800c14e:	bd30      	pop	{r4, r5, pc}
 800c150:	410fc271 	.word	0x410fc271
 800c154:	410fc270 	.word	0x410fc270
 800c158:	e000e400 	.word	0xe000e400
 800c15c:	200138e8 	.word	0x200138e8
 800c160:	200138e4 	.word	0x200138e4
 800c164:	20000080 	.word	0x20000080

0800c168 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800c168:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800c16c:	2b0f      	cmp	r3, #15
 800c16e:	d90e      	bls.n	800c18e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800c170:	4a11      	ldr	r2, [pc, #68]	@ (800c1b8 <vPortValidateInterruptPriority+0x50>)
 800c172:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800c174:	4a11      	ldr	r2, [pc, #68]	@ (800c1bc <vPortValidateInterruptPriority+0x54>)
 800c176:	7812      	ldrb	r2, [r2, #0]
 800c178:	429a      	cmp	r2, r3
 800c17a:	d908      	bls.n	800c18e <vPortValidateInterruptPriority+0x26>
 800c17c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c180:	f383 8811 	msr	BASEPRI, r3
 800c184:	f3bf 8f6f 	isb	sy
 800c188:	f3bf 8f4f 	dsb	sy
 800c18c:	e7fe      	b.n	800c18c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800c18e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c192:	4a0b      	ldr	r2, [pc, #44]	@ (800c1c0 <vPortValidateInterruptPriority+0x58>)
 800c194:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800c198:	6812      	ldr	r2, [r2, #0]
 800c19a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800c19e:	4293      	cmp	r3, r2
 800c1a0:	d908      	bls.n	800c1b4 <vPortValidateInterruptPriority+0x4c>
 800c1a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c1a6:	f383 8811 	msr	BASEPRI, r3
 800c1aa:	f3bf 8f6f 	isb	sy
 800c1ae:	f3bf 8f4f 	dsb	sy
 800c1b2:	e7fe      	b.n	800c1b2 <vPortValidateInterruptPriority+0x4a>
	}
 800c1b4:	4770      	bx	lr
 800c1b6:	bf00      	nop
 800c1b8:	e000e3f0 	.word	0xe000e3f0
 800c1bc:	200138e8 	.word	0x200138e8
 800c1c0:	200138e4 	.word	0x200138e4

0800c1c4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800c1c4:	b510      	push	{r4, lr}
 800c1c6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c1c8:	f7ff febc 	bl	800bf44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800c1cc:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c1ce:	f7ff fed9 	bl	800bf84 <vPortExitCritical>

	return xReturn;
}
 800c1d2:	fab4 f084 	clz	r0, r4
 800c1d6:	0940      	lsrs	r0, r0, #5
 800c1d8:	bd10      	pop	{r4, pc}

0800c1da <prvCopyDataToQueue>:
{
 800c1da:	b570      	push	{r4, r5, r6, lr}
 800c1dc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c1de:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c1e0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800c1e2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800c1e4:	b942      	cbnz	r2, 800c1f8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800c1e6:	6806      	ldr	r6, [r0, #0]
 800c1e8:	b99e      	cbnz	r6, 800c212 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800c1ea:	6880      	ldr	r0, [r0, #8]
 800c1ec:	f001 f96c 	bl	800d4c8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800c1f0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c1f2:	3501      	adds	r5, #1
 800c1f4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800c1f6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800c1f8:	b96e      	cbnz	r6, 800c216 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c1fa:	6840      	ldr	r0, [r0, #4]
 800c1fc:	f01c f82f 	bl	802825e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c200:	6863      	ldr	r3, [r4, #4]
 800c202:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c204:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c206:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c208:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c20a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800c20c:	bf24      	itt	cs
 800c20e:	6823      	ldrcs	r3, [r4, #0]
 800c210:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800c212:	2000      	movs	r0, #0
 800c214:	e7ed      	b.n	800c1f2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800c216:	68c0      	ldr	r0, [r0, #12]
 800c218:	f01c f821 	bl	802825e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c21c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800c21e:	68e3      	ldr	r3, [r4, #12]
 800c220:	4251      	negs	r1, r2
 800c222:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c224:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800c226:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800c228:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800c22a:	bf3e      	ittt	cc
 800c22c:	68a3      	ldrcc	r3, [r4, #8]
 800c22e:	185b      	addcc	r3, r3, r1
 800c230:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800c232:	2e02      	cmp	r6, #2
 800c234:	d1ed      	bne.n	800c212 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c236:	b10d      	cbz	r5, 800c23c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800c238:	3d01      	subs	r5, #1
 800c23a:	e7ea      	b.n	800c212 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800c23c:	4628      	mov	r0, r5
 800c23e:	e7d8      	b.n	800c1f2 <prvCopyDataToQueue+0x18>

0800c240 <prvCopyDataFromQueue>:
{
 800c240:	4603      	mov	r3, r0
 800c242:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800c244:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800c246:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800c248:	b16a      	cbz	r2, 800c266 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c24a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800c24c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c24e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800c250:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800c252:	bf28      	it	cs
 800c254:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800c256:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800c258:	bf28      	it	cs
 800c25a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c25c:	68d9      	ldr	r1, [r3, #12]
}
 800c25e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800c262:	f01b bffc 	b.w	802825e <memcpy>
}
 800c266:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c26a:	4770      	bx	lr

0800c26c <prvUnlockQueue>:
{
 800c26c:	b570      	push	{r4, r5, r6, lr}
 800c26e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800c270:	f7ff fe68 	bl	800bf44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800c274:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c278:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800c27c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800c27e:	2d00      	cmp	r5, #0
 800c280:	dd01      	ble.n	800c286 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c282:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c284:	b9b3      	cbnz	r3, 800c2b4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800c286:	23ff      	movs	r3, #255	@ 0xff
 800c288:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800c28c:	f7ff fe7a 	bl	800bf84 <vPortExitCritical>
	taskENTER_CRITICAL();
 800c290:	f7ff fe58 	bl	800bf44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800c294:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c298:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800c29c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800c29e:	2d00      	cmp	r5, #0
 800c2a0:	dd01      	ble.n	800c2a6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c2a2:	6923      	ldr	r3, [r4, #16]
 800c2a4:	b97b      	cbnz	r3, 800c2c6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800c2a6:	23ff      	movs	r3, #255	@ 0xff
 800c2a8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800c2ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800c2b0:	f7ff be68 	b.w	800bf84 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c2b4:	4630      	mov	r0, r6
 800c2b6:	f001 f82b 	bl	800d310 <xTaskRemoveFromEventList>
 800c2ba:	b108      	cbz	r0, 800c2c0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800c2bc:	f001 f8b0 	bl	800d420 <vTaskMissedYield>
			--cTxLock;
 800c2c0:	3d01      	subs	r5, #1
 800c2c2:	b26d      	sxtb	r5, r5
 800c2c4:	e7db      	b.n	800c27e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c2c6:	4630      	mov	r0, r6
 800c2c8:	f001 f822 	bl	800d310 <xTaskRemoveFromEventList>
 800c2cc:	b108      	cbz	r0, 800c2d2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800c2ce:	f001 f8a7 	bl	800d420 <vTaskMissedYield>
				--cRxLock;
 800c2d2:	3d01      	subs	r5, #1
 800c2d4:	b26d      	sxtb	r5, r5
 800c2d6:	e7e2      	b.n	800c29e <prvUnlockQueue+0x32>

0800c2d8 <xQueueGenericReset>:
{
 800c2d8:	b538      	push	{r3, r4, r5, lr}
 800c2da:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800c2dc:	4604      	mov	r4, r0
 800c2de:	b940      	cbnz	r0, 800c2f2 <xQueueGenericReset+0x1a>
 800c2e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c2e4:	f383 8811 	msr	BASEPRI, r3
 800c2e8:	f3bf 8f6f 	isb	sy
 800c2ec:	f3bf 8f4f 	dsb	sy
 800c2f0:	e7fe      	b.n	800c2f0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800c2f2:	f7ff fe27 	bl	800bf44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c2f6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800c2fa:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800c2fc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c2fe:	434b      	muls	r3, r1
 800c300:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c302:	1a5b      	subs	r3, r3, r1
 800c304:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c306:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800c308:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800c30a:	2000      	movs	r0, #0
 800c30c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c30e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800c310:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800c314:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800c318:	b9a5      	cbnz	r5, 800c344 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c31a:	6923      	ldr	r3, [r4, #16]
 800c31c:	b173      	cbz	r3, 800c33c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c31e:	f104 0010 	add.w	r0, r4, #16
 800c322:	f000 fff5 	bl	800d310 <xTaskRemoveFromEventList>
 800c326:	b148      	cbz	r0, 800c33c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800c328:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c32c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c330:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c334:	f3bf 8f4f 	dsb	sy
 800c338:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800c33c:	f7ff fe22 	bl	800bf84 <vPortExitCritical>
}
 800c340:	2001      	movs	r0, #1
 800c342:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800c344:	f104 0010 	add.w	r0, r4, #16
 800c348:	f7ff fd50 	bl	800bdec <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800c34c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c350:	f7ff fd4c 	bl	800bdec <vListInitialise>
 800c354:	e7f2      	b.n	800c33c <xQueueGenericReset+0x64>

0800c356 <xQueueGenericCreateStatic>:
	{
 800c356:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c358:	460d      	mov	r5, r1
 800c35a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c35c:	b940      	cbnz	r0, 800c370 <xQueueGenericCreateStatic+0x1a>
 800c35e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c362:	f383 8811 	msr	BASEPRI, r3
 800c366:	f3bf 8f6f 	isb	sy
 800c36a:	f3bf 8f4f 	dsb	sy
 800c36e:	e7fe      	b.n	800c36e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800c370:	b943      	cbnz	r3, 800c384 <xQueueGenericCreateStatic+0x2e>
 800c372:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c376:	f383 8811 	msr	BASEPRI, r3
 800c37a:	f3bf 8f6f 	isb	sy
 800c37e:	f3bf 8f4f 	dsb	sy
 800c382:	e7fe      	b.n	800c382 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800c384:	b14a      	cbz	r2, 800c39a <xQueueGenericCreateStatic+0x44>
 800c386:	b991      	cbnz	r1, 800c3ae <xQueueGenericCreateStatic+0x58>
 800c388:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c38c:	f383 8811 	msr	BASEPRI, r3
 800c390:	f3bf 8f6f 	isb	sy
 800c394:	f3bf 8f4f 	dsb	sy
 800c398:	e7fe      	b.n	800c398 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800c39a:	b141      	cbz	r1, 800c3ae <xQueueGenericCreateStatic+0x58>
 800c39c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c3a0:	f383 8811 	msr	BASEPRI, r3
 800c3a4:	f3bf 8f6f 	isb	sy
 800c3a8:	f3bf 8f4f 	dsb	sy
 800c3ac:	e7fe      	b.n	800c3ac <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800c3ae:	2350      	movs	r3, #80	@ 0x50
 800c3b0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800c3b2:	9b01      	ldr	r3, [sp, #4]
 800c3b4:	2b50      	cmp	r3, #80	@ 0x50
 800c3b6:	d008      	beq.n	800c3ca <xQueueGenericCreateStatic+0x74>
 800c3b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c3bc:	f383 8811 	msr	BASEPRI, r3
 800c3c0:	f3bf 8f6f 	isb	sy
 800c3c4:	f3bf 8f4f 	dsb	sy
 800c3c8:	e7fe      	b.n	800c3c8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c3ca:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c3cc:	2d00      	cmp	r5, #0
 800c3ce:	bf08      	it	eq
 800c3d0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800c3d2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800c3d6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800c3da:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800c3dc:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800c3de:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800c3e0:	f7ff ff7a 	bl	800c2d8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800c3e4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c3e8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800c3ec:	4620      	mov	r0, r4
 800c3ee:	b003      	add	sp, #12
 800c3f0:	bd30      	pop	{r4, r5, pc}

0800c3f2 <xQueueGenericCreate>:
	{
 800c3f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c3f4:	460d      	mov	r5, r1
 800c3f6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800c3f8:	4606      	mov	r6, r0
 800c3fa:	b940      	cbnz	r0, 800c40e <xQueueGenericCreate+0x1c>
 800c3fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c400:	f383 8811 	msr	BASEPRI, r3
 800c404:	f3bf 8f6f 	isb	sy
 800c408:	f3bf 8f4f 	dsb	sy
 800c40c:	e7fe      	b.n	800c40c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c40e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800c410:	3050      	adds	r0, #80	@ 0x50
 800c412:	f7ff fc15 	bl	800bc40 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800c416:	4604      	mov	r4, r0
 800c418:	b170      	cbz	r0, 800c438 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800c41a:	2300      	movs	r3, #0
 800c41c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800c420:	b165      	cbz	r5, 800c43c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800c422:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800c426:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800c42a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800c42c:	2101      	movs	r1, #1
 800c42e:	4620      	mov	r0, r4
 800c430:	f7ff ff52 	bl	800c2d8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800c434:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800c438:	4620      	mov	r0, r4
 800c43a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800c43c:	4603      	mov	r3, r0
 800c43e:	e7f2      	b.n	800c426 <xQueueGenericCreate+0x34>

0800c440 <xQueueCreateCountingSemaphoreStatic>:
	{
 800c440:	b513      	push	{r0, r1, r4, lr}
 800c442:	4613      	mov	r3, r2
 800c444:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800c446:	b940      	cbnz	r0, 800c45a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800c448:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c44c:	f383 8811 	msr	BASEPRI, r3
 800c450:	f3bf 8f6f 	isb	sy
 800c454:	f3bf 8f4f 	dsb	sy
 800c458:	e7fe      	b.n	800c458 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c45a:	4288      	cmp	r0, r1
 800c45c:	d208      	bcs.n	800c470 <xQueueCreateCountingSemaphoreStatic+0x30>
 800c45e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c462:	f383 8811 	msr	BASEPRI, r3
 800c466:	f3bf 8f6f 	isb	sy
 800c46a:	f3bf 8f4f 	dsb	sy
 800c46e:	e7fe      	b.n	800c46e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800c470:	2202      	movs	r2, #2
 800c472:	9200      	str	r2, [sp, #0]
 800c474:	2200      	movs	r2, #0
 800c476:	4611      	mov	r1, r2
 800c478:	f7ff ff6d 	bl	800c356 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800c47c:	b100      	cbz	r0, 800c480 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c47e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800c480:	b002      	add	sp, #8
 800c482:	bd10      	pop	{r4, pc}

0800c484 <xQueueCreateCountingSemaphore>:
	{
 800c484:	b510      	push	{r4, lr}
 800c486:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800c488:	b940      	cbnz	r0, 800c49c <xQueueCreateCountingSemaphore+0x18>
 800c48a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c48e:	f383 8811 	msr	BASEPRI, r3
 800c492:	f3bf 8f6f 	isb	sy
 800c496:	f3bf 8f4f 	dsb	sy
 800c49a:	e7fe      	b.n	800c49a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800c49c:	4288      	cmp	r0, r1
 800c49e:	d208      	bcs.n	800c4b2 <xQueueCreateCountingSemaphore+0x2e>
 800c4a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c4a4:	f383 8811 	msr	BASEPRI, r3
 800c4a8:	f3bf 8f6f 	isb	sy
 800c4ac:	f3bf 8f4f 	dsb	sy
 800c4b0:	e7fe      	b.n	800c4b0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800c4b2:	2202      	movs	r2, #2
 800c4b4:	2100      	movs	r1, #0
 800c4b6:	f7ff ff9c 	bl	800c3f2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800c4ba:	b100      	cbz	r0, 800c4be <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800c4bc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800c4be:	bd10      	pop	{r4, pc}

0800c4c0 <xQueueGenericSend>:
{
 800c4c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c4c4:	460f      	mov	r7, r1
 800c4c6:	9201      	str	r2, [sp, #4]
 800c4c8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800c4ca:	4604      	mov	r4, r0
 800c4cc:	b940      	cbnz	r0, 800c4e0 <xQueueGenericSend+0x20>
 800c4ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c4d2:	f383 8811 	msr	BASEPRI, r3
 800c4d6:	f3bf 8f6f 	isb	sy
 800c4da:	f3bf 8f4f 	dsb	sy
 800c4de:	e7fe      	b.n	800c4de <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c4e0:	b951      	cbnz	r1, 800c4f8 <xQueueGenericSend+0x38>
 800c4e2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c4e4:	b143      	cbz	r3, 800c4f8 <xQueueGenericSend+0x38>
 800c4e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c4ea:	f383 8811 	msr	BASEPRI, r3
 800c4ee:	f3bf 8f6f 	isb	sy
 800c4f2:	f3bf 8f4f 	dsb	sy
 800c4f6:	e7fe      	b.n	800c4f6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c4f8:	2e02      	cmp	r6, #2
 800c4fa:	d10b      	bne.n	800c514 <xQueueGenericSend+0x54>
 800c4fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c4fe:	2b01      	cmp	r3, #1
 800c500:	d008      	beq.n	800c514 <xQueueGenericSend+0x54>
 800c502:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c506:	f383 8811 	msr	BASEPRI, r3
 800c50a:	f3bf 8f6f 	isb	sy
 800c50e:	f3bf 8f4f 	dsb	sy
 800c512:	e7fe      	b.n	800c512 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c514:	f000 ff8a 	bl	800d42c <xTaskGetSchedulerState>
 800c518:	4605      	mov	r5, r0
 800c51a:	b320      	cbz	r0, 800c566 <xQueueGenericSend+0xa6>
 800c51c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800c51e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800c522:	f7ff fd0f 	bl	800bf44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c526:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c528:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c52a:	429a      	cmp	r2, r3
 800c52c:	d227      	bcs.n	800c57e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c52e:	4632      	mov	r2, r6
 800c530:	4639      	mov	r1, r7
 800c532:	4620      	mov	r0, r4
 800c534:	f7ff fe51 	bl	800c1da <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c538:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c53a:	b11b      	cbz	r3, 800c544 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c53c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c540:	f000 fee6 	bl	800d310 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800c544:	b148      	cbz	r0, 800c55a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800c546:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c54a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c54e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c552:	f3bf 8f4f 	dsb	sy
 800c556:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c55a:	f7ff fd13 	bl	800bf84 <vPortExitCritical>
				return pdPASS;
 800c55e:	2001      	movs	r0, #1
}
 800c560:	b004      	add	sp, #16
 800c562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c566:	9b01      	ldr	r3, [sp, #4]
 800c568:	2b00      	cmp	r3, #0
 800c56a:	d0d8      	beq.n	800c51e <xQueueGenericSend+0x5e>
 800c56c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c570:	f383 8811 	msr	BASEPRI, r3
 800c574:	f3bf 8f6f 	isb	sy
 800c578:	f3bf 8f4f 	dsb	sy
 800c57c:	e7fe      	b.n	800c57c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c57e:	2e02      	cmp	r6, #2
 800c580:	d0d5      	beq.n	800c52e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c582:	9b01      	ldr	r3, [sp, #4]
 800c584:	b91b      	cbnz	r3, 800c58e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800c586:	f7ff fcfd 	bl	800bf84 <vPortExitCritical>
					return errQUEUE_FULL;
 800c58a:	2000      	movs	r0, #0
 800c58c:	e7e8      	b.n	800c560 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800c58e:	b915      	cbnz	r5, 800c596 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c590:	a802      	add	r0, sp, #8
 800c592:	f000 fefd 	bl	800d390 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800c596:	f7ff fcf5 	bl	800bf84 <vPortExitCritical>
		vTaskSuspendAll();
 800c59a:	f000 fd0b 	bl	800cfb4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c59e:	f7ff fcd1 	bl	800bf44 <vPortEnterCritical>
 800c5a2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800c5a6:	2bff      	cmp	r3, #255	@ 0xff
 800c5a8:	bf08      	it	eq
 800c5aa:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800c5ae:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800c5b2:	2bff      	cmp	r3, #255	@ 0xff
 800c5b4:	bf08      	it	eq
 800c5b6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800c5ba:	f7ff fce3 	bl	800bf84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c5be:	a901      	add	r1, sp, #4
 800c5c0:	a802      	add	r0, sp, #8
 800c5c2:	f000 fef1 	bl	800d3a8 <xTaskCheckForTimeOut>
 800c5c6:	bb38      	cbnz	r0, 800c618 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800c5c8:	f7ff fcbc 	bl	800bf44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800c5cc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c5ce:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c5d0:	429a      	cmp	r2, r3
 800c5d2:	d10e      	bne.n	800c5f2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800c5d4:	f7ff fcd6 	bl	800bf84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800c5d8:	9901      	ldr	r1, [sp, #4]
 800c5da:	f104 0010 	add.w	r0, r4, #16
 800c5de:	f000 fe5f 	bl	800d2a0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800c5e2:	4620      	mov	r0, r4
 800c5e4:	f7ff fe42 	bl	800c26c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800c5e8:	f000 fd88 	bl	800d0fc <xTaskResumeAll>
 800c5ec:	b148      	cbz	r0, 800c602 <xQueueGenericSend+0x142>
 800c5ee:	2501      	movs	r5, #1
 800c5f0:	e797      	b.n	800c522 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800c5f2:	f7ff fcc7 	bl	800bf84 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800c5f6:	4620      	mov	r0, r4
 800c5f8:	f7ff fe38 	bl	800c26c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800c5fc:	f000 fd7e 	bl	800d0fc <xTaskResumeAll>
 800c600:	e7f5      	b.n	800c5ee <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800c602:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c606:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c60a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c60e:	f3bf 8f4f 	dsb	sy
 800c612:	f3bf 8f6f 	isb	sy
 800c616:	e7ea      	b.n	800c5ee <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800c618:	4620      	mov	r0, r4
 800c61a:	f7ff fe27 	bl	800c26c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800c61e:	f000 fd6d 	bl	800d0fc <xTaskResumeAll>
			return errQUEUE_FULL;
 800c622:	e7b2      	b.n	800c58a <xQueueGenericSend+0xca>

0800c624 <xQueueGenericSendFromISR>:
{
 800c624:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c628:	4689      	mov	r9, r1
 800c62a:	4617      	mov	r7, r2
 800c62c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800c62e:	4604      	mov	r4, r0
 800c630:	b940      	cbnz	r0, 800c644 <xQueueGenericSendFromISR+0x20>
 800c632:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c636:	f383 8811 	msr	BASEPRI, r3
 800c63a:	f3bf 8f6f 	isb	sy
 800c63e:	f3bf 8f4f 	dsb	sy
 800c642:	e7fe      	b.n	800c642 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c644:	b951      	cbnz	r1, 800c65c <xQueueGenericSendFromISR+0x38>
 800c646:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c648:	b143      	cbz	r3, 800c65c <xQueueGenericSendFromISR+0x38>
 800c64a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c64e:	f383 8811 	msr	BASEPRI, r3
 800c652:	f3bf 8f6f 	isb	sy
 800c656:	f3bf 8f4f 	dsb	sy
 800c65a:	e7fe      	b.n	800c65a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800c65c:	2e02      	cmp	r6, #2
 800c65e:	d10b      	bne.n	800c678 <xQueueGenericSendFromISR+0x54>
 800c660:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c662:	2b01      	cmp	r3, #1
 800c664:	d008      	beq.n	800c678 <xQueueGenericSendFromISR+0x54>
 800c666:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c66a:	f383 8811 	msr	BASEPRI, r3
 800c66e:	f3bf 8f6f 	isb	sy
 800c672:	f3bf 8f4f 	dsb	sy
 800c676:	e7fe      	b.n	800c676 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c678:	f7ff fd76 	bl	800c168 <vPortValidateInterruptPriority>
	__asm volatile
 800c67c:	f3ef 8811 	mrs	r8, BASEPRI
 800c680:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c684:	f383 8811 	msr	BASEPRI, r3
 800c688:	f3bf 8f6f 	isb	sy
 800c68c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800c690:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800c692:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c694:	429a      	cmp	r2, r3
 800c696:	d301      	bcc.n	800c69c <xQueueGenericSendFromISR+0x78>
 800c698:	2e02      	cmp	r6, #2
 800c69a:	d11e      	bne.n	800c6da <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800c69c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c6a0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800c6a2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800c6a4:	4632      	mov	r2, r6
 800c6a6:	4649      	mov	r1, r9
 800c6a8:	4620      	mov	r0, r4
 800c6aa:	f7ff fd96 	bl	800c1da <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800c6ae:	1c6b      	adds	r3, r5, #1
 800c6b0:	d10e      	bne.n	800c6d0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c6b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c6b4:	b13b      	cbz	r3, 800c6c6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c6b6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c6ba:	f000 fe29 	bl	800d310 <xTaskRemoveFromEventList>
 800c6be:	b110      	cbz	r0, 800c6c6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800c6c0:	b10f      	cbz	r7, 800c6c6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c6c2:	2301      	movs	r3, #1
 800c6c4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800c6c6:	2001      	movs	r0, #1
	__asm volatile
 800c6c8:	f388 8811 	msr	BASEPRI, r8
}
 800c6cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c6d0:	3501      	adds	r5, #1
 800c6d2:	b26d      	sxtb	r5, r5
 800c6d4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800c6d8:	e7f5      	b.n	800c6c6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800c6da:	2000      	movs	r0, #0
 800c6dc:	e7f4      	b.n	800c6c8 <xQueueGenericSendFromISR+0xa4>

0800c6de <xQueueGiveFromISR>:
{
 800c6de:	b570      	push	{r4, r5, r6, lr}
 800c6e0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800c6e2:	4604      	mov	r4, r0
 800c6e4:	b940      	cbnz	r0, 800c6f8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800c6e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c6ea:	f383 8811 	msr	BASEPRI, r3
 800c6ee:	f3bf 8f6f 	isb	sy
 800c6f2:	f3bf 8f4f 	dsb	sy
 800c6f6:	e7fe      	b.n	800c6f6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800c6f8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c6fa:	b143      	cbz	r3, 800c70e <xQueueGiveFromISR+0x30>
 800c6fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c700:	f383 8811 	msr	BASEPRI, r3
 800c704:	f3bf 8f6f 	isb	sy
 800c708:	f3bf 8f4f 	dsb	sy
 800c70c:	e7fe      	b.n	800c70c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800c70e:	6803      	ldr	r3, [r0, #0]
 800c710:	b953      	cbnz	r3, 800c728 <xQueueGiveFromISR+0x4a>
 800c712:	6883      	ldr	r3, [r0, #8]
 800c714:	b143      	cbz	r3, 800c728 <xQueueGiveFromISR+0x4a>
 800c716:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c71a:	f383 8811 	msr	BASEPRI, r3
 800c71e:	f3bf 8f6f 	isb	sy
 800c722:	f3bf 8f4f 	dsb	sy
 800c726:	e7fe      	b.n	800c726 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800c728:	f7ff fd1e 	bl	800c168 <vPortValidateInterruptPriority>
	__asm volatile
 800c72c:	f3ef 8611 	mrs	r6, BASEPRI
 800c730:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c734:	f383 8811 	msr	BASEPRI, r3
 800c738:	f3bf 8f6f 	isb	sy
 800c73c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c740:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800c742:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c744:	4293      	cmp	r3, r2
 800c746:	d919      	bls.n	800c77c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800c748:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c74c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800c74e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800c750:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800c752:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800c754:	d10d      	bne.n	800c772 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800c756:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c758:	b13b      	cbz	r3, 800c76a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800c75a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c75e:	f000 fdd7 	bl	800d310 <xTaskRemoveFromEventList>
 800c762:	b110      	cbz	r0, 800c76a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800c764:	b10d      	cbz	r5, 800c76a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800c766:	2301      	movs	r3, #1
 800c768:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800c76a:	2001      	movs	r0, #1
	__asm volatile
 800c76c:	f386 8811 	msr	BASEPRI, r6
}
 800c770:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800c772:	3301      	adds	r3, #1
 800c774:	b25b      	sxtb	r3, r3
 800c776:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800c77a:	e7f6      	b.n	800c76a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800c77c:	2000      	movs	r0, #0
 800c77e:	e7f5      	b.n	800c76c <xQueueGiveFromISR+0x8e>

0800c780 <xQueueReceive>:
{
 800c780:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c784:	460e      	mov	r6, r1
 800c786:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800c788:	4604      	mov	r4, r0
 800c78a:	b940      	cbnz	r0, 800c79e <xQueueReceive+0x1e>
	__asm volatile
 800c78c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c790:	f383 8811 	msr	BASEPRI, r3
 800c794:	f3bf 8f6f 	isb	sy
 800c798:	f3bf 8f4f 	dsb	sy
 800c79c:	e7fe      	b.n	800c79c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800c79e:	b951      	cbnz	r1, 800c7b6 <xQueueReceive+0x36>
 800c7a0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800c7a2:	b143      	cbz	r3, 800c7b6 <xQueueReceive+0x36>
 800c7a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c7a8:	f383 8811 	msr	BASEPRI, r3
 800c7ac:	f3bf 8f6f 	isb	sy
 800c7b0:	f3bf 8f4f 	dsb	sy
 800c7b4:	e7fe      	b.n	800c7b4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c7b6:	f000 fe39 	bl	800d42c <xTaskGetSchedulerState>
 800c7ba:	4605      	mov	r5, r0
 800c7bc:	b318      	cbz	r0, 800c806 <xQueueReceive+0x86>
 800c7be:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800c7c0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800c7c4:	f7ff fbbe 	bl	800bf44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800c7c8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800c7ca:	b347      	cbz	r7, 800c81e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800c7cc:	4631      	mov	r1, r6
 800c7ce:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c7d0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800c7d2:	f7ff fd35 	bl	800c240 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800c7d6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c7d8:	6923      	ldr	r3, [r4, #16]
 800c7da:	b173      	cbz	r3, 800c7fa <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c7dc:	f104 0010 	add.w	r0, r4, #16
 800c7e0:	f000 fd96 	bl	800d310 <xTaskRemoveFromEventList>
 800c7e4:	b148      	cbz	r0, 800c7fa <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800c7e6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c7ea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c7ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c7f2:	f3bf 8f4f 	dsb	sy
 800c7f6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c7fa:	f7ff fbc3 	bl	800bf84 <vPortExitCritical>
				return pdPASS;
 800c7fe:	2001      	movs	r0, #1
}
 800c800:	b004      	add	sp, #16
 800c802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c806:	9b01      	ldr	r3, [sp, #4]
 800c808:	2b00      	cmp	r3, #0
 800c80a:	d0d9      	beq.n	800c7c0 <xQueueReceive+0x40>
 800c80c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c810:	f383 8811 	msr	BASEPRI, r3
 800c814:	f3bf 8f6f 	isb	sy
 800c818:	f3bf 8f4f 	dsb	sy
 800c81c:	e7fe      	b.n	800c81c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c81e:	9b01      	ldr	r3, [sp, #4]
 800c820:	b91b      	cbnz	r3, 800c82a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800c822:	f7ff fbaf 	bl	800bf84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800c826:	2000      	movs	r0, #0
 800c828:	e7ea      	b.n	800c800 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800c82a:	b915      	cbnz	r5, 800c832 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c82c:	a802      	add	r0, sp, #8
 800c82e:	f000 fdaf 	bl	800d390 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800c832:	f7ff fba7 	bl	800bf84 <vPortExitCritical>
		vTaskSuspendAll();
 800c836:	f000 fbbd 	bl	800cfb4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c83a:	f7ff fb83 	bl	800bf44 <vPortEnterCritical>
 800c83e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800c842:	2bff      	cmp	r3, #255	@ 0xff
 800c844:	bf08      	it	eq
 800c846:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800c84a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800c84e:	2bff      	cmp	r3, #255	@ 0xff
 800c850:	bf08      	it	eq
 800c852:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800c856:	f7ff fb95 	bl	800bf84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c85a:	a901      	add	r1, sp, #4
 800c85c:	a802      	add	r0, sp, #8
 800c85e:	f000 fda3 	bl	800d3a8 <xTaskCheckForTimeOut>
 800c862:	bb00      	cbnz	r0, 800c8a6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800c864:	4620      	mov	r0, r4
 800c866:	f7ff fcad 	bl	800c1c4 <prvIsQueueEmpty>
 800c86a:	b1b0      	cbz	r0, 800c89a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800c86c:	9901      	ldr	r1, [sp, #4]
 800c86e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c872:	f000 fd15 	bl	800d2a0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800c876:	4620      	mov	r0, r4
 800c878:	f7ff fcf8 	bl	800c26c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800c87c:	f000 fc3e 	bl	800d0fc <xTaskResumeAll>
 800c880:	b948      	cbnz	r0, 800c896 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800c882:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c886:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c88a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c88e:	f3bf 8f4f 	dsb	sy
 800c892:	f3bf 8f6f 	isb	sy
 800c896:	2501      	movs	r5, #1
 800c898:	e794      	b.n	800c7c4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800c89a:	4620      	mov	r0, r4
 800c89c:	f7ff fce6 	bl	800c26c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800c8a0:	f000 fc2c 	bl	800d0fc <xTaskResumeAll>
 800c8a4:	e7f7      	b.n	800c896 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800c8a6:	4620      	mov	r0, r4
 800c8a8:	f7ff fce0 	bl	800c26c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800c8ac:	f000 fc26 	bl	800d0fc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800c8b0:	4620      	mov	r0, r4
 800c8b2:	f7ff fc87 	bl	800c1c4 <prvIsQueueEmpty>
 800c8b6:	2800      	cmp	r0, #0
 800c8b8:	d0ed      	beq.n	800c896 <xQueueReceive+0x116>
 800c8ba:	e7b4      	b.n	800c826 <xQueueReceive+0xa6>

0800c8bc <xQueueSemaphoreTake>:
{
 800c8bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c8be:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800c8c0:	4604      	mov	r4, r0
{
 800c8c2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800c8c4:	b940      	cbnz	r0, 800c8d8 <xQueueSemaphoreTake+0x1c>
 800c8c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c8ca:	f383 8811 	msr	BASEPRI, r3
 800c8ce:	f3bf 8f6f 	isb	sy
 800c8d2:	f3bf 8f4f 	dsb	sy
 800c8d6:	e7fe      	b.n	800c8d6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800c8d8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800c8da:	b145      	cbz	r5, 800c8ee <xQueueSemaphoreTake+0x32>
 800c8dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c8e0:	f383 8811 	msr	BASEPRI, r3
 800c8e4:	f3bf 8f6f 	isb	sy
 800c8e8:	f3bf 8f4f 	dsb	sy
 800c8ec:	e7fe      	b.n	800c8ec <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c8ee:	f000 fd9d 	bl	800d42c <xTaskGetSchedulerState>
 800c8f2:	4606      	mov	r6, r0
 800c8f4:	b320      	cbz	r0, 800c940 <xQueueSemaphoreTake+0x84>
 800c8f6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800c8f8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800c8fa:	f7ff fb23 	bl	800bf44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800c8fe:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800c900:	b353      	cbz	r3, 800c958 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800c902:	3b01      	subs	r3, #1
 800c904:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800c906:	6823      	ldr	r3, [r4, #0]
 800c908:	b913      	cbnz	r3, 800c910 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800c90a:	f000 fe6d 	bl	800d5e8 <pvTaskIncrementMutexHeldCount>
 800c90e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800c910:	6923      	ldr	r3, [r4, #16]
 800c912:	b173      	cbz	r3, 800c932 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800c914:	f104 0010 	add.w	r0, r4, #16
 800c918:	f000 fcfa 	bl	800d310 <xTaskRemoveFromEventList>
 800c91c:	b148      	cbz	r0, 800c932 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800c91e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c922:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c926:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c92a:	f3bf 8f4f 	dsb	sy
 800c92e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800c932:	f7ff fb27 	bl	800bf84 <vPortExitCritical>
				return pdPASS;
 800c936:	2001      	movs	r0, #1
}
 800c938:	b005      	add	sp, #20
 800c93a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c93c:	4635      	mov	r5, r6
 800c93e:	e7db      	b.n	800c8f8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800c940:	9b01      	ldr	r3, [sp, #4]
 800c942:	2b00      	cmp	r3, #0
 800c944:	d0fa      	beq.n	800c93c <xQueueSemaphoreTake+0x80>
 800c946:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c94a:	f383 8811 	msr	BASEPRI, r3
 800c94e:	f3bf 8f6f 	isb	sy
 800c952:	f3bf 8f4f 	dsb	sy
 800c956:	e7fe      	b.n	800c956 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800c958:	9b01      	ldr	r3, [sp, #4]
 800c95a:	b953      	cbnz	r3, 800c972 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800c95c:	2d00      	cmp	r5, #0
 800c95e:	d066      	beq.n	800ca2e <xQueueSemaphoreTake+0x172>
 800c960:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800c964:	f383 8811 	msr	BASEPRI, r3
 800c968:	f3bf 8f6f 	isb	sy
 800c96c:	f3bf 8f4f 	dsb	sy
 800c970:	e7fe      	b.n	800c970 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800c972:	b916      	cbnz	r6, 800c97a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800c974:	a802      	add	r0, sp, #8
 800c976:	f000 fd0b 	bl	800d390 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800c97a:	f7ff fb03 	bl	800bf84 <vPortExitCritical>
		vTaskSuspendAll();
 800c97e:	f000 fb19 	bl	800cfb4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800c982:	f7ff fadf 	bl	800bf44 <vPortEnterCritical>
 800c986:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800c98a:	2bff      	cmp	r3, #255	@ 0xff
 800c98c:	bf08      	it	eq
 800c98e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800c992:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800c996:	2bff      	cmp	r3, #255	@ 0xff
 800c998:	bf08      	it	eq
 800c99a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800c99e:	f7ff faf1 	bl	800bf84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800c9a2:	a901      	add	r1, sp, #4
 800c9a4:	a802      	add	r0, sp, #8
 800c9a6:	f000 fcff 	bl	800d3a8 <xTaskCheckForTimeOut>
 800c9aa:	bb50      	cbnz	r0, 800ca02 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800c9ac:	4620      	mov	r0, r4
 800c9ae:	f7ff fc09 	bl	800c1c4 <prvIsQueueEmpty>
 800c9b2:	b300      	cbz	r0, 800c9f6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800c9b4:	6823      	ldr	r3, [r4, #0]
 800c9b6:	b93b      	cbnz	r3, 800c9c8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800c9b8:	f7ff fac4 	bl	800bf44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800c9bc:	68a0      	ldr	r0, [r4, #8]
 800c9be:	f000 fd45 	bl	800d44c <xTaskPriorityInherit>
 800c9c2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800c9c4:	f7ff fade 	bl	800bf84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800c9c8:	9901      	ldr	r1, [sp, #4]
 800c9ca:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800c9ce:	f000 fc67 	bl	800d2a0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800c9d2:	4620      	mov	r0, r4
 800c9d4:	f7ff fc4a 	bl	800c26c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800c9d8:	f000 fb90 	bl	800d0fc <xTaskResumeAll>
 800c9dc:	b948      	cbnz	r0, 800c9f2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800c9de:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800c9e2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800c9e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800c9ea:	f3bf 8f4f 	dsb	sy
 800c9ee:	f3bf 8f6f 	isb	sy
 800c9f2:	2601      	movs	r6, #1
 800c9f4:	e781      	b.n	800c8fa <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800c9f6:	4620      	mov	r0, r4
 800c9f8:	f7ff fc38 	bl	800c26c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800c9fc:	f000 fb7e 	bl	800d0fc <xTaskResumeAll>
 800ca00:	e7f7      	b.n	800c9f2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800ca02:	4620      	mov	r0, r4
 800ca04:	f7ff fc32 	bl	800c26c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ca08:	f000 fb78 	bl	800d0fc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ca0c:	4620      	mov	r0, r4
 800ca0e:	f7ff fbd9 	bl	800c1c4 <prvIsQueueEmpty>
 800ca12:	2800      	cmp	r0, #0
 800ca14:	d0ed      	beq.n	800c9f2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800ca16:	b165      	cbz	r5, 800ca32 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800ca18:	f7ff fa94 	bl	800bf44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ca1c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ca1e:	b119      	cbz	r1, 800ca28 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ca20:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800ca22:	6819      	ldr	r1, [r3, #0]
 800ca24:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ca28:	68a0      	ldr	r0, [r4, #8]
 800ca2a:	f000 fd8f 	bl	800d54c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800ca2e:	f7ff faa9 	bl	800bf84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ca32:	2000      	movs	r0, #0
 800ca34:	e780      	b.n	800c938 <xQueueSemaphoreTake+0x7c>

0800ca36 <xQueueReceiveFromISR>:
{
 800ca36:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ca3a:	4689      	mov	r9, r1
 800ca3c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800ca3e:	4604      	mov	r4, r0
 800ca40:	b940      	cbnz	r0, 800ca54 <xQueueReceiveFromISR+0x1e>
 800ca42:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ca46:	f383 8811 	msr	BASEPRI, r3
 800ca4a:	f3bf 8f6f 	isb	sy
 800ca4e:	f3bf 8f4f 	dsb	sy
 800ca52:	e7fe      	b.n	800ca52 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ca54:	b951      	cbnz	r1, 800ca6c <xQueueReceiveFromISR+0x36>
 800ca56:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ca58:	b143      	cbz	r3, 800ca6c <xQueueReceiveFromISR+0x36>
 800ca5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ca5e:	f383 8811 	msr	BASEPRI, r3
 800ca62:	f3bf 8f6f 	isb	sy
 800ca66:	f3bf 8f4f 	dsb	sy
 800ca6a:	e7fe      	b.n	800ca6a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ca6c:	f7ff fb7c 	bl	800c168 <vPortValidateInterruptPriority>
	__asm volatile
 800ca70:	f3ef 8711 	mrs	r7, BASEPRI
 800ca74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ca78:	f383 8811 	msr	BASEPRI, r3
 800ca7c:	f3bf 8f6f 	isb	sy
 800ca80:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ca84:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ca86:	b30d      	cbz	r5, 800cacc <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ca88:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ca8c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800ca8e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ca90:	4620      	mov	r0, r4
 800ca92:	f7ff fbd5 	bl	800c240 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ca96:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800ca98:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ca9a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800ca9c:	d111      	bne.n	800cac2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ca9e:	6923      	ldr	r3, [r4, #16]
 800caa0:	b153      	cbz	r3, 800cab8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800caa2:	f104 0010 	add.w	r0, r4, #16
 800caa6:	f000 fc33 	bl	800d310 <xTaskRemoveFromEventList>
 800caaa:	b128      	cbz	r0, 800cab8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800caac:	f1b8 0f00 	cmp.w	r8, #0
 800cab0:	d002      	beq.n	800cab8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800cab2:	2301      	movs	r3, #1
 800cab4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800cab8:	2001      	movs	r0, #1
	__asm volatile
 800caba:	f387 8811 	msr	BASEPRI, r7
}
 800cabe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800cac2:	3601      	adds	r6, #1
 800cac4:	b276      	sxtb	r6, r6
 800cac6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800caca:	e7f5      	b.n	800cab8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800cacc:	4628      	mov	r0, r5
 800cace:	e7f4      	b.n	800caba <xQueueReceiveFromISR+0x84>

0800cad0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800cad0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800cad2:	4a07      	ldr	r2, [pc, #28]	@ (800caf0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800cad4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800cad6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800cada:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800cade:	b91d      	cbnz	r5, 800cae8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800cae0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800cae4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800cae6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800cae8:	3301      	adds	r3, #1
 800caea:	2b08      	cmp	r3, #8
 800caec:	d1f3      	bne.n	800cad6 <vQueueAddToRegistry+0x6>
 800caee:	e7fa      	b.n	800cae6 <vQueueAddToRegistry+0x16>
 800caf0:	200138ec 	.word	0x200138ec

0800caf4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800caf4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800caf6:	4a09      	ldr	r2, [pc, #36]	@ (800cb1c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800caf8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800cafa:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800cafe:	4281      	cmp	r1, r0
 800cb00:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800cb04:	d106      	bne.n	800cb14 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800cb06:	4a06      	ldr	r2, [pc, #24]	@ (800cb20 <vQueueUnregisterQueue+0x2c>)
 800cb08:	2100      	movs	r1, #0
 800cb0a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800cb0e:	4422      	add	r2, r4
 800cb10:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800cb12:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800cb14:	3301      	adds	r3, #1
 800cb16:	2b08      	cmp	r3, #8
 800cb18:	d1ef      	bne.n	800cafa <vQueueUnregisterQueue+0x6>
 800cb1a:	e7fa      	b.n	800cb12 <vQueueUnregisterQueue+0x1e>
 800cb1c:	200138f0 	.word	0x200138f0
 800cb20:	200138ec 	.word	0x200138ec

0800cb24 <vQueueDelete>:
{
 800cb24:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800cb26:	b940      	cbnz	r0, 800cb3a <vQueueDelete+0x16>
	__asm volatile
 800cb28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cb2c:	f383 8811 	msr	BASEPRI, r3
 800cb30:	f3bf 8f6f 	isb	sy
 800cb34:	f3bf 8f4f 	dsb	sy
 800cb38:	e7fe      	b.n	800cb38 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800cb3a:	f7ff ffdb 	bl	800caf4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800cb3e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800cb42:	b91b      	cbnz	r3, 800cb4c <vQueueDelete+0x28>
}
 800cb44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800cb48:	f7ff b912 	b.w	800bd70 <vPortFree>
}
 800cb4c:	bd10      	pop	{r4, pc}

0800cb4e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800cb4e:	b570      	push	{r4, r5, r6, lr}
 800cb50:	4604      	mov	r4, r0
 800cb52:	460d      	mov	r5, r1
 800cb54:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800cb56:	f7ff f9f5 	bl	800bf44 <vPortEnterCritical>
 800cb5a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800cb5e:	2bff      	cmp	r3, #255	@ 0xff
 800cb60:	bf04      	itt	eq
 800cb62:	2300      	moveq	r3, #0
 800cb64:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800cb68:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800cb6c:	2bff      	cmp	r3, #255	@ 0xff
 800cb6e:	bf04      	itt	eq
 800cb70:	2300      	moveq	r3, #0
 800cb72:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800cb76:	f7ff fa05 	bl	800bf84 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800cb7a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800cb7c:	b92b      	cbnz	r3, 800cb8a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800cb7e:	4632      	mov	r2, r6
 800cb80:	4629      	mov	r1, r5
 800cb82:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800cb86:	f000 fba5 	bl	800d2d4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800cb8a:	4620      	mov	r0, r4
	}
 800cb8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800cb90:	f7ff bb6c 	b.w	800c26c <prvUnlockQueue>

0800cb94 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800cb94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb98:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800cb9a:	f7ff f9d3 	bl	800bf44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800cb9e:	4b30      	ldr	r3, [pc, #192]	@ (800cc60 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800cba0:	4e30      	ldr	r6, [pc, #192]	@ (800cc64 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800cba2:	681a      	ldr	r2, [r3, #0]
 800cba4:	4f30      	ldr	r7, [pc, #192]	@ (800cc68 <prvAddNewTaskToReadyList+0xd4>)
 800cba6:	3201      	adds	r2, #1
 800cba8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800cbaa:	6835      	ldr	r5, [r6, #0]
 800cbac:	2d00      	cmp	r5, #0
 800cbae:	d14b      	bne.n	800cc48 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800cbb0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800cbb2:	681b      	ldr	r3, [r3, #0]
 800cbb4:	2b01      	cmp	r3, #1
 800cbb6:	d11f      	bne.n	800cbf8 <prvAddNewTaskToReadyList+0x64>
 800cbb8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800cbba:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800cbbc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800cbbe:	f7ff f915 	bl	800bdec <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800cbc2:	2d38      	cmp	r5, #56	@ 0x38
 800cbc4:	f108 0814 	add.w	r8, r8, #20
 800cbc8:	d1f7      	bne.n	800cbba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800cbca:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800cc90 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800cbce:	4d27      	ldr	r5, [pc, #156]	@ (800cc6c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800cbd0:	4640      	mov	r0, r8
 800cbd2:	f7ff f90b 	bl	800bdec <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800cbd6:	4628      	mov	r0, r5
 800cbd8:	f7ff f908 	bl	800bdec <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800cbdc:	4824      	ldr	r0, [pc, #144]	@ (800cc70 <prvAddNewTaskToReadyList+0xdc>)
 800cbde:	f7ff f905 	bl	800bdec <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800cbe2:	4824      	ldr	r0, [pc, #144]	@ (800cc74 <prvAddNewTaskToReadyList+0xe0>)
 800cbe4:	f7ff f902 	bl	800bdec <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800cbe8:	4823      	ldr	r0, [pc, #140]	@ (800cc78 <prvAddNewTaskToReadyList+0xe4>)
 800cbea:	f7ff f8ff 	bl	800bdec <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800cbee:	4b23      	ldr	r3, [pc, #140]	@ (800cc7c <prvAddNewTaskToReadyList+0xe8>)
 800cbf0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800cbf4:	4b22      	ldr	r3, [pc, #136]	@ (800cc80 <prvAddNewTaskToReadyList+0xec>)
 800cbf6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800cbf8:	4a22      	ldr	r2, [pc, #136]	@ (800cc84 <prvAddNewTaskToReadyList+0xf0>)
 800cbfa:	6813      	ldr	r3, [r2, #0]
 800cbfc:	3301      	adds	r3, #1
 800cbfe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800cc00:	4a21      	ldr	r2, [pc, #132]	@ (800cc88 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800cc02:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800cc04:	6811      	ldr	r1, [r2, #0]
 800cc06:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800cc08:	2014      	movs	r0, #20
 800cc0a:	428b      	cmp	r3, r1
 800cc0c:	fb00 7003 	mla	r0, r0, r3, r7
 800cc10:	f104 0104 	add.w	r1, r4, #4
 800cc14:	bf88      	it	hi
 800cc16:	6013      	strhi	r3, [r2, #0]
 800cc18:	f7ff f8f6 	bl	800be08 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800cc1c:	f7ff f9b2 	bl	800bf84 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800cc20:	4b1a      	ldr	r3, [pc, #104]	@ (800cc8c <prvAddNewTaskToReadyList+0xf8>)
 800cc22:	681b      	ldr	r3, [r3, #0]
 800cc24:	b173      	cbz	r3, 800cc44 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800cc26:	6833      	ldr	r3, [r6, #0]
 800cc28:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800cc2a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800cc2c:	429a      	cmp	r2, r3
 800cc2e:	d209      	bcs.n	800cc44 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800cc30:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cc34:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cc38:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800cc3c:	f3bf 8f4f 	dsb	sy
 800cc40:	f3bf 8f6f 	isb	sy
}
 800cc44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800cc48:	4b10      	ldr	r3, [pc, #64]	@ (800cc8c <prvAddNewTaskToReadyList+0xf8>)
 800cc4a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800cc4c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800cc4e:	2a00      	cmp	r2, #0
 800cc50:	d1d2      	bne.n	800cbf8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800cc52:	6832      	ldr	r2, [r6, #0]
 800cc54:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800cc56:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800cc58:	bf98      	it	ls
 800cc5a:	6034      	strls	r4, [r6, #0]
 800cc5c:	e7cc      	b.n	800cbf8 <prvAddNewTaskToReadyList+0x64>
 800cc5e:	bf00      	nop
 800cc60:	20013950 	.word	0x20013950
 800cc64:	20013e24 	.word	0x20013e24
 800cc68:	200139c4 	.word	0x200139c4
 800cc6c:	2001399c 	.word	0x2001399c
 800cc70:	20013980 	.word	0x20013980
 800cc74:	2001396c 	.word	0x2001396c
 800cc78:	20013954 	.word	0x20013954
 800cc7c:	20013998 	.word	0x20013998
 800cc80:	20013994 	.word	0x20013994
 800cc84:	20013934 	.word	0x20013934
 800cc88:	20013948 	.word	0x20013948
 800cc8c:	20013944 	.word	0x20013944
 800cc90:	200139b0 	.word	0x200139b0

0800cc94 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800cc94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800cc96:	4b15      	ldr	r3, [pc, #84]	@ (800ccec <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800cc98:	4d15      	ldr	r5, [pc, #84]	@ (800ccf0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800cc9a:	681c      	ldr	r4, [r3, #0]
{
 800cc9c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800cc9e:	6828      	ldr	r0, [r5, #0]
 800cca0:	3004      	adds	r0, #4
{
 800cca2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800cca4:	f7ff f8d2 	bl	800be4c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800cca8:	1c73      	adds	r3, r6, #1
 800ccaa:	d107      	bne.n	800ccbc <prvAddCurrentTaskToDelayedList+0x28>
 800ccac:	b137      	cbz	r7, 800ccbc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ccae:	6829      	ldr	r1, [r5, #0]
 800ccb0:	4810      	ldr	r0, [pc, #64]	@ (800ccf4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800ccb2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ccb6:	3104      	adds	r1, #4
 800ccb8:	f7ff b8a6 	b.w	800be08 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ccbc:	682b      	ldr	r3, [r5, #0]
 800ccbe:	19a4      	adds	r4, r4, r6
 800ccc0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ccc2:	d307      	bcc.n	800ccd4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ccc4:	4b0c      	ldr	r3, [pc, #48]	@ (800ccf8 <prvAddCurrentTaskToDelayedList+0x64>)
 800ccc6:	6818      	ldr	r0, [r3, #0]
 800ccc8:	6829      	ldr	r1, [r5, #0]
}
 800ccca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ccce:	3104      	adds	r1, #4
 800ccd0:	f7ff b8a5 	b.w	800be1e <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ccd4:	4b09      	ldr	r3, [pc, #36]	@ (800ccfc <prvAddCurrentTaskToDelayedList+0x68>)
 800ccd6:	6818      	ldr	r0, [r3, #0]
 800ccd8:	6829      	ldr	r1, [r5, #0]
 800ccda:	3104      	adds	r1, #4
 800ccdc:	f7ff f89f 	bl	800be1e <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800cce0:	4b07      	ldr	r3, [pc, #28]	@ (800cd00 <prvAddCurrentTaskToDelayedList+0x6c>)
 800cce2:	681a      	ldr	r2, [r3, #0]
 800cce4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800cce6:	bf88      	it	hi
 800cce8:	601c      	strhi	r4, [r3, #0]
}
 800ccea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ccec:	2001394c 	.word	0x2001394c
 800ccf0:	20013e24 	.word	0x20013e24
 800ccf4:	20013954 	.word	0x20013954
 800ccf8:	20013994 	.word	0x20013994
 800ccfc:	20013998 	.word	0x20013998
 800cd00:	20013930 	.word	0x20013930

0800cd04 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800cd04:	4a06      	ldr	r2, [pc, #24]	@ (800cd20 <prvResetNextTaskUnblockTime+0x1c>)
 800cd06:	6813      	ldr	r3, [r2, #0]
 800cd08:	6819      	ldr	r1, [r3, #0]
 800cd0a:	4b06      	ldr	r3, [pc, #24]	@ (800cd24 <prvResetNextTaskUnblockTime+0x20>)
 800cd0c:	b919      	cbnz	r1, 800cd16 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800cd0e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800cd12:	601a      	str	r2, [r3, #0]
}
 800cd14:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cd16:	6812      	ldr	r2, [r2, #0]
 800cd18:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800cd1a:	68d2      	ldr	r2, [r2, #12]
 800cd1c:	6852      	ldr	r2, [r2, #4]
 800cd1e:	e7f8      	b.n	800cd12 <prvResetNextTaskUnblockTime+0xe>
 800cd20:	20013998 	.word	0x20013998
 800cd24:	20013930 	.word	0x20013930

0800cd28 <prvDeleteTCB>:
	{
 800cd28:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800cd2a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800cd2e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800cd30:	b93b      	cbnz	r3, 800cd42 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800cd32:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800cd34:	f7ff f81c 	bl	800bd70 <vPortFree>
				vPortFree( pxTCB );
 800cd38:	4620      	mov	r0, r4
	}
 800cd3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800cd3e:	f7ff b817 	b.w	800bd70 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800cd42:	2b01      	cmp	r3, #1
 800cd44:	d0f9      	beq.n	800cd3a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800cd46:	2b02      	cmp	r3, #2
 800cd48:	d008      	beq.n	800cd5c <prvDeleteTCB+0x34>
 800cd4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cd4e:	f383 8811 	msr	BASEPRI, r3
 800cd52:	f3bf 8f6f 	isb	sy
 800cd56:	f3bf 8f4f 	dsb	sy
 800cd5a:	e7fe      	b.n	800cd5a <prvDeleteTCB+0x32>
	}
 800cd5c:	bd10      	pop	{r4, pc}
	...

0800cd60 <prvIdleTask>:
{
 800cd60:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800cd62:	4c13      	ldr	r4, [pc, #76]	@ (800cdb0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cd64:	4f13      	ldr	r7, [pc, #76]	@ (800cdb4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800cd66:	4d14      	ldr	r5, [pc, #80]	@ (800cdb8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800cd68:	6823      	ldr	r3, [r4, #0]
 800cd6a:	b973      	cbnz	r3, 800cd8a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800cd6c:	4b13      	ldr	r3, [pc, #76]	@ (800cdbc <prvIdleTask+0x5c>)
 800cd6e:	681b      	ldr	r3, [r3, #0]
 800cd70:	2b01      	cmp	r3, #1
 800cd72:	d9f8      	bls.n	800cd66 <prvIdleTask+0x6>
				taskYIELD();
 800cd74:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800cd78:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800cd7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800cd80:	f3bf 8f4f 	dsb	sy
 800cd84:	f3bf 8f6f 	isb	sy
 800cd88:	e7ed      	b.n	800cd66 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800cd8a:	f7ff f8db 	bl	800bf44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800cd8e:	68fb      	ldr	r3, [r7, #12]
 800cd90:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800cd92:	1d30      	adds	r0, r6, #4
 800cd94:	f7ff f85a 	bl	800be4c <uxListRemove>
				--uxCurrentNumberOfTasks;
 800cd98:	682b      	ldr	r3, [r5, #0]
 800cd9a:	3b01      	subs	r3, #1
 800cd9c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800cd9e:	6823      	ldr	r3, [r4, #0]
 800cda0:	3b01      	subs	r3, #1
 800cda2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800cda4:	f7ff f8ee 	bl	800bf84 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800cda8:	4630      	mov	r0, r6
 800cdaa:	f7ff ffbd 	bl	800cd28 <prvDeleteTCB>
 800cdae:	e7db      	b.n	800cd68 <prvIdleTask+0x8>
 800cdb0:	20013968 	.word	0x20013968
 800cdb4:	2001396c 	.word	0x2001396c
 800cdb8:	20013950 	.word	0x20013950
 800cdbc:	200139c4 	.word	0x200139c4

0800cdc0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800cdc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cdc4:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800cdc8:	0096      	lsls	r6, r2, #2
 800cdca:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800cdcc:	4607      	mov	r7, r0
 800cdce:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800cdd0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800cdd2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800cdd4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800cdd6:	f01b f972 	bl	80280be <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800cdda:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800cddc:	3e04      	subs	r6, #4
 800cdde:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800cde0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800cde4:	b3b5      	cbz	r5, 800ce54 <prvInitialiseNewTask.constprop.0+0x94>
 800cde6:	1e6b      	subs	r3, r5, #1
 800cde8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800cdec:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800cdee:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800cdf2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800cdf6:	b109      	cbz	r1, 800cdfc <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800cdf8:	42ab      	cmp	r3, r5
 800cdfa:	d1f8      	bne.n	800cdee <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800cdfc:	2300      	movs	r3, #0
 800cdfe:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ce02:	9d08      	ldr	r5, [sp, #32]
 800ce04:	2d37      	cmp	r5, #55	@ 0x37
 800ce06:	bf28      	it	cs
 800ce08:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ce0a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800ce0e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ce10:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ce12:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ce14:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ce18:	f7fe fff3 	bl	800be02 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ce1c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ce20:	f104 0018 	add.w	r0, r4, #24
 800ce24:	f7fe ffed 	bl	800be02 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800ce28:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800ce2c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ce2e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800ce30:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800ce32:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800ce36:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ce3a:	4642      	mov	r2, r8
 800ce3c:	4639      	mov	r1, r7
 800ce3e:	4630      	mov	r0, r6
 800ce40:	f7ff f852 	bl	800bee8 <pxPortInitialiseStack>
 800ce44:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800ce46:	f1b9 0f00 	cmp.w	r9, #0
 800ce4a:	d001      	beq.n	800ce50 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800ce4c:	f8c9 4000 	str.w	r4, [r9]
}
 800ce50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800ce54:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800ce58:	e7d3      	b.n	800ce02 <prvInitialiseNewTask.constprop.0+0x42>

0800ce5a <xTaskCreateStatic>:
	{
 800ce5a:	b570      	push	{r4, r5, r6, lr}
 800ce5c:	b086      	sub	sp, #24
 800ce5e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800ce62:	b945      	cbnz	r5, 800ce76 <xTaskCreateStatic+0x1c>
 800ce64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ce68:	f383 8811 	msr	BASEPRI, r3
 800ce6c:	f3bf 8f6f 	isb	sy
 800ce70:	f3bf 8f4f 	dsb	sy
 800ce74:	e7fe      	b.n	800ce74 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800ce76:	b944      	cbnz	r4, 800ce8a <xTaskCreateStatic+0x30>
 800ce78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ce7c:	f383 8811 	msr	BASEPRI, r3
 800ce80:	f3bf 8f6f 	isb	sy
 800ce84:	f3bf 8f4f 	dsb	sy
 800ce88:	e7fe      	b.n	800ce88 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ce8a:	2660      	movs	r6, #96	@ 0x60
 800ce8c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ce8e:	9e05      	ldr	r6, [sp, #20]
 800ce90:	2e60      	cmp	r6, #96	@ 0x60
 800ce92:	d008      	beq.n	800cea6 <xTaskCreateStatic+0x4c>
 800ce94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ce98:	f383 8811 	msr	BASEPRI, r3
 800ce9c:	f3bf 8f6f 	isb	sy
 800cea0:	f3bf 8f4f 	dsb	sy
 800cea4:	e7fe      	b.n	800cea4 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800cea6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800cea8:	2502      	movs	r5, #2
 800ceaa:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ceae:	ad04      	add	r5, sp, #16
 800ceb0:	9501      	str	r5, [sp, #4]
 800ceb2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800ceb4:	9402      	str	r4, [sp, #8]
 800ceb6:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ceb8:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ceba:	f7ff ff81 	bl	800cdc0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800cebe:	4620      	mov	r0, r4
 800cec0:	f7ff fe68 	bl	800cb94 <prvAddNewTaskToReadyList>
	}
 800cec4:	9804      	ldr	r0, [sp, #16]
 800cec6:	b006      	add	sp, #24
 800cec8:	bd70      	pop	{r4, r5, r6, pc}

0800ceca <xTaskCreate>:
	{
 800ceca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cece:	4607      	mov	r7, r0
 800ced0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ced2:	0090      	lsls	r0, r2, #2
	{
 800ced4:	4688      	mov	r8, r1
 800ced6:	4616      	mov	r6, r2
 800ced8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ceda:	f7fe feb1 	bl	800bc40 <pvPortMalloc>
			if( pxStack != NULL )
 800cede:	4605      	mov	r5, r0
 800cee0:	b920      	cbnz	r0, 800ceec <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800cee2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800cee6:	b005      	add	sp, #20
 800cee8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ceec:	2060      	movs	r0, #96	@ 0x60
 800ceee:	f7fe fea7 	bl	800bc40 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800cef2:	4604      	mov	r4, r0
 800cef4:	b198      	cbz	r0, 800cf1e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800cef6:	2300      	movs	r3, #0
 800cef8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800cefc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800cefe:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800cf00:	9301      	str	r3, [sp, #4]
 800cf02:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cf04:	9002      	str	r0, [sp, #8]
 800cf06:	9300      	str	r3, [sp, #0]
 800cf08:	4632      	mov	r2, r6
 800cf0a:	464b      	mov	r3, r9
 800cf0c:	4641      	mov	r1, r8
 800cf0e:	4638      	mov	r0, r7
 800cf10:	f7ff ff56 	bl	800cdc0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800cf14:	4620      	mov	r0, r4
 800cf16:	f7ff fe3d 	bl	800cb94 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800cf1a:	2001      	movs	r0, #1
 800cf1c:	e7e3      	b.n	800cee6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800cf1e:	4628      	mov	r0, r5
 800cf20:	f7fe ff26 	bl	800bd70 <vPortFree>
		if( pxNewTCB != NULL )
 800cf24:	e7dd      	b.n	800cee2 <xTaskCreate+0x18>
	...

0800cf28 <vTaskStartScheduler>:
{
 800cf28:	b510      	push	{r4, lr}
 800cf2a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800cf2c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800cf2e:	aa07      	add	r2, sp, #28
 800cf30:	a906      	add	r1, sp, #24
 800cf32:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800cf34:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800cf38:	f7fe fe44 	bl	800bbc4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800cf3c:	9b05      	ldr	r3, [sp, #20]
 800cf3e:	9302      	str	r3, [sp, #8]
 800cf40:	9b06      	ldr	r3, [sp, #24]
 800cf42:	9a07      	ldr	r2, [sp, #28]
 800cf44:	4916      	ldr	r1, [pc, #88]	@ (800cfa0 <vTaskStartScheduler+0x78>)
 800cf46:	4817      	ldr	r0, [pc, #92]	@ (800cfa4 <vTaskStartScheduler+0x7c>)
 800cf48:	e9cd 4300 	strd	r4, r3, [sp]
 800cf4c:	4623      	mov	r3, r4
 800cf4e:	f7ff ff84 	bl	800ce5a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800cf52:	b318      	cbz	r0, 800cf9c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800cf54:	f000 fba6 	bl	800d6a4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800cf58:	2801      	cmp	r0, #1
 800cf5a:	d114      	bne.n	800cf86 <vTaskStartScheduler+0x5e>
 800cf5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cf60:	f383 8811 	msr	BASEPRI, r3
 800cf64:	f3bf 8f6f 	isb	sy
 800cf68:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800cf6c:	4b0e      	ldr	r3, [pc, #56]	@ (800cfa8 <vTaskStartScheduler+0x80>)
 800cf6e:	f04f 32ff 	mov.w	r2, #4294967295
 800cf72:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800cf74:	4b0d      	ldr	r3, [pc, #52]	@ (800cfac <vTaskStartScheduler+0x84>)
 800cf76:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800cf78:	4b0d      	ldr	r3, [pc, #52]	@ (800cfb0 <vTaskStartScheduler+0x88>)
 800cf7a:	601c      	str	r4, [r3, #0]
}
 800cf7c:	b008      	add	sp, #32
 800cf7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800cf82:	f7ff b86f 	b.w	800c064 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800cf86:	3001      	adds	r0, #1
 800cf88:	d108      	bne.n	800cf9c <vTaskStartScheduler+0x74>
 800cf8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cf8e:	f383 8811 	msr	BASEPRI, r3
 800cf92:	f3bf 8f6f 	isb	sy
 800cf96:	f3bf 8f4f 	dsb	sy
 800cf9a:	e7fe      	b.n	800cf9a <vTaskStartScheduler+0x72>
}
 800cf9c:	b008      	add	sp, #32
 800cf9e:	bd10      	pop	{r4, pc}
 800cfa0:	08029fc6 	.word	0x08029fc6
 800cfa4:	0800cd61 	.word	0x0800cd61
 800cfa8:	20013930 	.word	0x20013930
 800cfac:	20013944 	.word	0x20013944
 800cfb0:	2001394c 	.word	0x2001394c

0800cfb4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800cfb4:	4a02      	ldr	r2, [pc, #8]	@ (800cfc0 <vTaskSuspendAll+0xc>)
 800cfb6:	6813      	ldr	r3, [r2, #0]
 800cfb8:	3301      	adds	r3, #1
 800cfba:	6013      	str	r3, [r2, #0]
}
 800cfbc:	4770      	bx	lr
 800cfbe:	bf00      	nop
 800cfc0:	2001392c 	.word	0x2001392c

0800cfc4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800cfc4:	4b01      	ldr	r3, [pc, #4]	@ (800cfcc <xTaskGetTickCount+0x8>)
 800cfc6:	6818      	ldr	r0, [r3, #0]
}
 800cfc8:	4770      	bx	lr
 800cfca:	bf00      	nop
 800cfcc:	2001394c 	.word	0x2001394c

0800cfd0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800cfd0:	4b3f      	ldr	r3, [pc, #252]	@ (800d0d0 <xTaskIncrementTick+0x100>)
 800cfd2:	681b      	ldr	r3, [r3, #0]
{
 800cfd4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800cfd8:	2b00      	cmp	r3, #0
 800cfda:	d172      	bne.n	800d0c2 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800cfdc:	4b3d      	ldr	r3, [pc, #244]	@ (800d0d4 <xTaskIncrementTick+0x104>)
 800cfde:	681c      	ldr	r4, [r3, #0]
 800cfe0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800cfe2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800cfe4:	b9bc      	cbnz	r4, 800d016 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800cfe6:	4b3c      	ldr	r3, [pc, #240]	@ (800d0d8 <xTaskIncrementTick+0x108>)
 800cfe8:	681a      	ldr	r2, [r3, #0]
 800cfea:	6812      	ldr	r2, [r2, #0]
 800cfec:	b142      	cbz	r2, 800d000 <xTaskIncrementTick+0x30>
 800cfee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800cff2:	f383 8811 	msr	BASEPRI, r3
 800cff6:	f3bf 8f6f 	isb	sy
 800cffa:	f3bf 8f4f 	dsb	sy
 800cffe:	e7fe      	b.n	800cffe <xTaskIncrementTick+0x2e>
 800d000:	4a36      	ldr	r2, [pc, #216]	@ (800d0dc <xTaskIncrementTick+0x10c>)
 800d002:	6819      	ldr	r1, [r3, #0]
 800d004:	6810      	ldr	r0, [r2, #0]
 800d006:	6018      	str	r0, [r3, #0]
 800d008:	6011      	str	r1, [r2, #0]
 800d00a:	4a35      	ldr	r2, [pc, #212]	@ (800d0e0 <xTaskIncrementTick+0x110>)
 800d00c:	6813      	ldr	r3, [r2, #0]
 800d00e:	3301      	adds	r3, #1
 800d010:	6013      	str	r3, [r2, #0]
 800d012:	f7ff fe77 	bl	800cd04 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d016:	4d33      	ldr	r5, [pc, #204]	@ (800d0e4 <xTaskIncrementTick+0x114>)
 800d018:	4e33      	ldr	r6, [pc, #204]	@ (800d0e8 <xTaskIncrementTick+0x118>)
 800d01a:	682b      	ldr	r3, [r5, #0]
 800d01c:	4f33      	ldr	r7, [pc, #204]	@ (800d0ec <xTaskIncrementTick+0x11c>)
 800d01e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800d020:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800d024:	d212      	bcs.n	800d04c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800d026:	683a      	ldr	r2, [r7, #0]
 800d028:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d02a:	2114      	movs	r1, #20
 800d02c:	434a      	muls	r2, r1
 800d02e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800d030:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800d032:	4a2f      	ldr	r2, [pc, #188]	@ (800d0f0 <xTaskIncrementTick+0x120>)
 800d034:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800d036:	bf28      	it	cs
 800d038:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800d03c:	2a00      	cmp	r2, #0
 800d03e:	bf18      	it	ne
 800d040:	f04f 0b01 	movne.w	fp, #1
}
 800d044:	4658      	mov	r0, fp
 800d046:	b003      	add	sp, #12
 800d048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d04c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800d0d8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800d050:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800d0f8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800d054:	f8d9 2000 	ldr.w	r2, [r9]
 800d058:	6812      	ldr	r2, [r2, #0]
 800d05a:	b91a      	cbnz	r2, 800d064 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d05c:	f04f 32ff 	mov.w	r2, #4294967295
 800d060:	602a      	str	r2, [r5, #0]
					break;
 800d062:	e7e0      	b.n	800d026 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d064:	f8d9 2000 	ldr.w	r2, [r9]
 800d068:	68d2      	ldr	r2, [r2, #12]
 800d06a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800d06e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800d072:	428c      	cmp	r4, r1
 800d074:	d201      	bcs.n	800d07a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800d076:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800d078:	e7d5      	b.n	800d026 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d07a:	f108 0304 	add.w	r3, r8, #4
 800d07e:	4618      	mov	r0, r3
 800d080:	9301      	str	r3, [sp, #4]
 800d082:	f7fe fee3 	bl	800be4c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800d086:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800d08a:	b119      	cbz	r1, 800d094 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d08c:	f108 0018 	add.w	r0, r8, #24
 800d090:	f7fe fedc 	bl	800be4c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d094:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800d098:	f8da 1000 	ldr.w	r1, [sl]
 800d09c:	2314      	movs	r3, #20
 800d09e:	4288      	cmp	r0, r1
 800d0a0:	bf88      	it	hi
 800d0a2:	f8ca 0000 	strhi.w	r0, [sl]
 800d0a6:	9901      	ldr	r1, [sp, #4]
 800d0a8:	fb03 6000 	mla	r0, r3, r0, r6
 800d0ac:	f7fe feac 	bl	800be08 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d0b0:	6838      	ldr	r0, [r7, #0]
 800d0b2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800d0b6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800d0b8:	4291      	cmp	r1, r2
 800d0ba:	bf28      	it	cs
 800d0bc:	f04f 0b01 	movcs.w	fp, #1
 800d0c0:	e7c8      	b.n	800d054 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800d0c2:	4a0c      	ldr	r2, [pc, #48]	@ (800d0f4 <xTaskIncrementTick+0x124>)
 800d0c4:	6813      	ldr	r3, [r2, #0]
 800d0c6:	3301      	adds	r3, #1
 800d0c8:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800d0ca:	f04f 0b00 	mov.w	fp, #0
 800d0ce:	e7b9      	b.n	800d044 <xTaskIncrementTick+0x74>
 800d0d0:	2001392c 	.word	0x2001392c
 800d0d4:	2001394c 	.word	0x2001394c
 800d0d8:	20013998 	.word	0x20013998
 800d0dc:	20013994 	.word	0x20013994
 800d0e0:	20013938 	.word	0x20013938
 800d0e4:	20013930 	.word	0x20013930
 800d0e8:	200139c4 	.word	0x200139c4
 800d0ec:	20013e24 	.word	0x20013e24
 800d0f0:	2001393c 	.word	0x2001393c
 800d0f4:	20013940 	.word	0x20013940
 800d0f8:	20013948 	.word	0x20013948

0800d0fc <xTaskResumeAll>:
{
 800d0fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800d100:	4c30      	ldr	r4, [pc, #192]	@ (800d1c4 <xTaskResumeAll+0xc8>)
 800d102:	6823      	ldr	r3, [r4, #0]
 800d104:	b943      	cbnz	r3, 800d118 <xTaskResumeAll+0x1c>
 800d106:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d10a:	f383 8811 	msr	BASEPRI, r3
 800d10e:	f3bf 8f6f 	isb	sy
 800d112:	f3bf 8f4f 	dsb	sy
 800d116:	e7fe      	b.n	800d116 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800d118:	f7fe ff14 	bl	800bf44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800d11c:	6823      	ldr	r3, [r4, #0]
 800d11e:	3b01      	subs	r3, #1
 800d120:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d122:	6824      	ldr	r4, [r4, #0]
 800d124:	b12c      	cbz	r4, 800d132 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800d126:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800d128:	f7fe ff2c 	bl	800bf84 <vPortExitCritical>
}
 800d12c:	4620      	mov	r0, r4
 800d12e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800d132:	4b25      	ldr	r3, [pc, #148]	@ (800d1c8 <xTaskResumeAll+0xcc>)
 800d134:	681b      	ldr	r3, [r3, #0]
 800d136:	2b00      	cmp	r3, #0
 800d138:	d0f5      	beq.n	800d126 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d13a:	4d24      	ldr	r5, [pc, #144]	@ (800d1cc <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800d13c:	4e24      	ldr	r6, [pc, #144]	@ (800d1d0 <xTaskResumeAll+0xd4>)
 800d13e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800d1e0 <xTaskResumeAll+0xe4>
 800d142:	e01d      	b.n	800d180 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d144:	68eb      	ldr	r3, [r5, #12]
 800d146:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d148:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800d14a:	f104 0018 	add.w	r0, r4, #24
 800d14e:	f7fe fe7d 	bl	800be4c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800d152:	4638      	mov	r0, r7
 800d154:	f7fe fe7a 	bl	800be4c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800d158:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d15a:	6832      	ldr	r2, [r6, #0]
 800d15c:	2014      	movs	r0, #20
 800d15e:	4293      	cmp	r3, r2
 800d160:	fb00 8003 	mla	r0, r0, r3, r8
 800d164:	4639      	mov	r1, r7
 800d166:	bf88      	it	hi
 800d168:	6033      	strhi	r3, [r6, #0]
 800d16a:	f7fe fe4d 	bl	800be08 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800d16e:	4b19      	ldr	r3, [pc, #100]	@ (800d1d4 <xTaskResumeAll+0xd8>)
 800d170:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d172:	681b      	ldr	r3, [r3, #0]
 800d174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d176:	429a      	cmp	r2, r3
 800d178:	d302      	bcc.n	800d180 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800d17a:	4b17      	ldr	r3, [pc, #92]	@ (800d1d8 <xTaskResumeAll+0xdc>)
 800d17c:	2201      	movs	r2, #1
 800d17e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800d180:	682b      	ldr	r3, [r5, #0]
 800d182:	2b00      	cmp	r3, #0
 800d184:	d1de      	bne.n	800d144 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800d186:	b10c      	cbz	r4, 800d18c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800d188:	f7ff fdbc 	bl	800cd04 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800d18c:	4d13      	ldr	r5, [pc, #76]	@ (800d1dc <xTaskResumeAll+0xe0>)
 800d18e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800d190:	b144      	cbz	r4, 800d1a4 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800d192:	4e11      	ldr	r6, [pc, #68]	@ (800d1d8 <xTaskResumeAll+0xdc>)
 800d194:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800d196:	f7ff ff1b 	bl	800cfd0 <xTaskIncrementTick>
 800d19a:	b100      	cbz	r0, 800d19e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800d19c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800d19e:	3c01      	subs	r4, #1
 800d1a0:	d1f9      	bne.n	800d196 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800d1a2:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800d1a4:	4b0c      	ldr	r3, [pc, #48]	@ (800d1d8 <xTaskResumeAll+0xdc>)
 800d1a6:	681b      	ldr	r3, [r3, #0]
 800d1a8:	2b00      	cmp	r3, #0
 800d1aa:	d0bc      	beq.n	800d126 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800d1ac:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d1b0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d1b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d1b8:	f3bf 8f4f 	dsb	sy
 800d1bc:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800d1c0:	2401      	movs	r4, #1
 800d1c2:	e7b1      	b.n	800d128 <xTaskResumeAll+0x2c>
 800d1c4:	2001392c 	.word	0x2001392c
 800d1c8:	20013950 	.word	0x20013950
 800d1cc:	20013980 	.word	0x20013980
 800d1d0:	20013948 	.word	0x20013948
 800d1d4:	20013e24 	.word	0x20013e24
 800d1d8:	2001393c 	.word	0x2001393c
 800d1dc:	20013940 	.word	0x20013940
 800d1e0:	200139c4 	.word	0x200139c4

0800d1e4 <vTaskDelay>:
	{
 800d1e4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800d1e6:	b950      	cbnz	r0, 800d1fe <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800d1e8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d1ec:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d1f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d1f4:	f3bf 8f4f 	dsb	sy
 800d1f8:	f3bf 8f6f 	isb	sy
	}
 800d1fc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800d1fe:	4b0a      	ldr	r3, [pc, #40]	@ (800d228 <vTaskDelay+0x44>)
 800d200:	6819      	ldr	r1, [r3, #0]
 800d202:	b141      	cbz	r1, 800d216 <vTaskDelay+0x32>
 800d204:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d208:	f383 8811 	msr	BASEPRI, r3
 800d20c:	f3bf 8f6f 	isb	sy
 800d210:	f3bf 8f4f 	dsb	sy
 800d214:	e7fe      	b.n	800d214 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800d216:	f7ff fecd 	bl	800cfb4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800d21a:	f7ff fd3b 	bl	800cc94 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800d21e:	f7ff ff6d 	bl	800d0fc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800d222:	2800      	cmp	r0, #0
 800d224:	d0e0      	beq.n	800d1e8 <vTaskDelay+0x4>
 800d226:	e7e9      	b.n	800d1fc <vTaskDelay+0x18>
 800d228:	2001392c 	.word	0x2001392c

0800d22c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800d22c:	4b17      	ldr	r3, [pc, #92]	@ (800d28c <vTaskSwitchContext+0x60>)
 800d22e:	681a      	ldr	r2, [r3, #0]
 800d230:	4b17      	ldr	r3, [pc, #92]	@ (800d290 <vTaskSwitchContext+0x64>)
{
 800d232:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800d234:	b112      	cbz	r2, 800d23c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800d236:	2201      	movs	r2, #1
 800d238:	601a      	str	r2, [r3, #0]
}
 800d23a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d23c:	4d15      	ldr	r5, [pc, #84]	@ (800d294 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800d23e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d240:	682a      	ldr	r2, [r5, #0]
 800d242:	4915      	ldr	r1, [pc, #84]	@ (800d298 <vTaskSwitchContext+0x6c>)
 800d244:	2614      	movs	r6, #20
 800d246:	fb06 f302 	mul.w	r3, r6, r2
 800d24a:	18c8      	adds	r0, r1, r3
 800d24c:	58cc      	ldr	r4, [r1, r3]
 800d24e:	b18c      	cbz	r4, 800d274 <vTaskSwitchContext+0x48>
 800d250:	6844      	ldr	r4, [r0, #4]
 800d252:	3308      	adds	r3, #8
 800d254:	6864      	ldr	r4, [r4, #4]
 800d256:	6044      	str	r4, [r0, #4]
 800d258:	440b      	add	r3, r1
 800d25a:	429c      	cmp	r4, r3
 800d25c:	bf04      	itt	eq
 800d25e:	6863      	ldreq	r3, [r4, #4]
 800d260:	6043      	streq	r3, [r0, #4]
 800d262:	2314      	movs	r3, #20
 800d264:	fb03 1102 	mla	r1, r3, r2, r1
 800d268:	684b      	ldr	r3, [r1, #4]
 800d26a:	68d9      	ldr	r1, [r3, #12]
 800d26c:	4b0b      	ldr	r3, [pc, #44]	@ (800d29c <vTaskSwitchContext+0x70>)
 800d26e:	6019      	str	r1, [r3, #0]
 800d270:	602a      	str	r2, [r5, #0]
}
 800d272:	e7e2      	b.n	800d23a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d274:	b942      	cbnz	r2, 800d288 <vTaskSwitchContext+0x5c>
 800d276:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d27a:	f383 8811 	msr	BASEPRI, r3
 800d27e:	f3bf 8f6f 	isb	sy
 800d282:	f3bf 8f4f 	dsb	sy
 800d286:	e7fe      	b.n	800d286 <vTaskSwitchContext+0x5a>
 800d288:	3a01      	subs	r2, #1
 800d28a:	e7dc      	b.n	800d246 <vTaskSwitchContext+0x1a>
 800d28c:	2001392c 	.word	0x2001392c
 800d290:	2001393c 	.word	0x2001393c
 800d294:	20013948 	.word	0x20013948
 800d298:	200139c4 	.word	0x200139c4
 800d29c:	20013e24 	.word	0x20013e24

0800d2a0 <vTaskPlaceOnEventList>:
{
 800d2a0:	b510      	push	{r4, lr}
 800d2a2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800d2a4:	b940      	cbnz	r0, 800d2b8 <vTaskPlaceOnEventList+0x18>
 800d2a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d2aa:	f383 8811 	msr	BASEPRI, r3
 800d2ae:	f3bf 8f6f 	isb	sy
 800d2b2:	f3bf 8f4f 	dsb	sy
 800d2b6:	e7fe      	b.n	800d2b6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800d2b8:	4b05      	ldr	r3, [pc, #20]	@ (800d2d0 <vTaskPlaceOnEventList+0x30>)
 800d2ba:	6819      	ldr	r1, [r3, #0]
 800d2bc:	3118      	adds	r1, #24
 800d2be:	f7fe fdae 	bl	800be1e <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800d2c2:	4620      	mov	r0, r4
 800d2c4:	2101      	movs	r1, #1
}
 800d2c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800d2ca:	f7ff bce3 	b.w	800cc94 <prvAddCurrentTaskToDelayedList>
 800d2ce:	bf00      	nop
 800d2d0:	20013e24 	.word	0x20013e24

0800d2d4 <vTaskPlaceOnEventListRestricted>:
	{
 800d2d4:	b538      	push	{r3, r4, r5, lr}
 800d2d6:	460d      	mov	r5, r1
 800d2d8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800d2da:	b940      	cbnz	r0, 800d2ee <vTaskPlaceOnEventListRestricted+0x1a>
 800d2dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d2e0:	f383 8811 	msr	BASEPRI, r3
 800d2e4:	f3bf 8f6f 	isb	sy
 800d2e8:	f3bf 8f4f 	dsb	sy
 800d2ec:	e7fe      	b.n	800d2ec <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800d2ee:	4b07      	ldr	r3, [pc, #28]	@ (800d30c <vTaskPlaceOnEventListRestricted+0x38>)
 800d2f0:	6819      	ldr	r1, [r3, #0]
 800d2f2:	3118      	adds	r1, #24
 800d2f4:	f7fe fd88 	bl	800be08 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800d2f8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800d2fa:	4621      	mov	r1, r4
 800d2fc:	bf0c      	ite	eq
 800d2fe:	4628      	moveq	r0, r5
 800d300:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800d304:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800d308:	f7ff bcc4 	b.w	800cc94 <prvAddCurrentTaskToDelayedList>
 800d30c:	20013e24 	.word	0x20013e24

0800d310 <xTaskRemoveFromEventList>:
{
 800d310:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d312:	68c3      	ldr	r3, [r0, #12]
 800d314:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800d316:	b944      	cbnz	r4, 800d32a <xTaskRemoveFromEventList+0x1a>
 800d318:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d31c:	f383 8811 	msr	BASEPRI, r3
 800d320:	f3bf 8f6f 	isb	sy
 800d324:	f3bf 8f4f 	dsb	sy
 800d328:	e7fe      	b.n	800d328 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800d32a:	f104 0518 	add.w	r5, r4, #24
 800d32e:	4628      	mov	r0, r5
 800d330:	f7fe fd8c 	bl	800be4c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d334:	4b10      	ldr	r3, [pc, #64]	@ (800d378 <xTaskRemoveFromEventList+0x68>)
 800d336:	681b      	ldr	r3, [r3, #0]
 800d338:	b9db      	cbnz	r3, 800d372 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800d33a:	1d25      	adds	r5, r4, #4
 800d33c:	4628      	mov	r0, r5
 800d33e:	f7fe fd85 	bl	800be4c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800d342:	4a0e      	ldr	r2, [pc, #56]	@ (800d37c <xTaskRemoveFromEventList+0x6c>)
 800d344:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d346:	6811      	ldr	r1, [r2, #0]
 800d348:	428b      	cmp	r3, r1
 800d34a:	bf88      	it	hi
 800d34c:	6013      	strhi	r3, [r2, #0]
 800d34e:	4a0c      	ldr	r2, [pc, #48]	@ (800d380 <xTaskRemoveFromEventList+0x70>)
 800d350:	2014      	movs	r0, #20
 800d352:	4629      	mov	r1, r5
 800d354:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800d358:	f7fe fd56 	bl	800be08 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800d35c:	4b09      	ldr	r3, [pc, #36]	@ (800d384 <xTaskRemoveFromEventList+0x74>)
 800d35e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d360:	681b      	ldr	r3, [r3, #0]
 800d362:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d364:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800d366:	bf83      	ittte	hi
 800d368:	4b07      	ldrhi	r3, [pc, #28]	@ (800d388 <xTaskRemoveFromEventList+0x78>)
 800d36a:	2001      	movhi	r0, #1
 800d36c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800d36e:	2000      	movls	r0, #0
}
 800d370:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800d372:	4806      	ldr	r0, [pc, #24]	@ (800d38c <xTaskRemoveFromEventList+0x7c>)
 800d374:	4629      	mov	r1, r5
 800d376:	e7ef      	b.n	800d358 <xTaskRemoveFromEventList+0x48>
 800d378:	2001392c 	.word	0x2001392c
 800d37c:	20013948 	.word	0x20013948
 800d380:	200139c4 	.word	0x200139c4
 800d384:	20013e24 	.word	0x20013e24
 800d388:	2001393c 	.word	0x2001393c
 800d38c:	20013980 	.word	0x20013980

0800d390 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800d390:	4b03      	ldr	r3, [pc, #12]	@ (800d3a0 <vTaskInternalSetTimeOutState+0x10>)
 800d392:	681b      	ldr	r3, [r3, #0]
 800d394:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800d396:	4b03      	ldr	r3, [pc, #12]	@ (800d3a4 <vTaskInternalSetTimeOutState+0x14>)
 800d398:	681b      	ldr	r3, [r3, #0]
 800d39a:	6043      	str	r3, [r0, #4]
}
 800d39c:	4770      	bx	lr
 800d39e:	bf00      	nop
 800d3a0:	20013938 	.word	0x20013938
 800d3a4:	2001394c 	.word	0x2001394c

0800d3a8 <xTaskCheckForTimeOut>:
{
 800d3a8:	b570      	push	{r4, r5, r6, lr}
 800d3aa:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800d3ac:	4605      	mov	r5, r0
 800d3ae:	b940      	cbnz	r0, 800d3c2 <xTaskCheckForTimeOut+0x1a>
 800d3b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d3b4:	f383 8811 	msr	BASEPRI, r3
 800d3b8:	f3bf 8f6f 	isb	sy
 800d3bc:	f3bf 8f4f 	dsb	sy
 800d3c0:	e7fe      	b.n	800d3c0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800d3c2:	b941      	cbnz	r1, 800d3d6 <xTaskCheckForTimeOut+0x2e>
 800d3c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d3c8:	f383 8811 	msr	BASEPRI, r3
 800d3cc:	f3bf 8f6f 	isb	sy
 800d3d0:	f3bf 8f4f 	dsb	sy
 800d3d4:	e7fe      	b.n	800d3d4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800d3d6:	f7fe fdb5 	bl	800bf44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800d3da:	4b0f      	ldr	r3, [pc, #60]	@ (800d418 <xTaskCheckForTimeOut+0x70>)
 800d3dc:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800d3de:	6823      	ldr	r3, [r4, #0]
 800d3e0:	1c5a      	adds	r2, r3, #1
 800d3e2:	d010      	beq.n	800d406 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800d3e4:	480d      	ldr	r0, [pc, #52]	@ (800d41c <xTaskCheckForTimeOut+0x74>)
 800d3e6:	682e      	ldr	r6, [r5, #0]
 800d3e8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800d3ea:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800d3ec:	4286      	cmp	r6, r0
 800d3ee:	d001      	beq.n	800d3f4 <xTaskCheckForTimeOut+0x4c>
 800d3f0:	428a      	cmp	r2, r1
 800d3f2:	d90f      	bls.n	800d414 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800d3f4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800d3f6:	4283      	cmp	r3, r0
 800d3f8:	d90a      	bls.n	800d410 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800d3fa:	1a5b      	subs	r3, r3, r1
 800d3fc:	4413      	add	r3, r2
 800d3fe:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800d400:	4628      	mov	r0, r5
 800d402:	f7ff ffc5 	bl	800d390 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800d406:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800d408:	f7fe fdbc 	bl	800bf84 <vPortExitCritical>
}
 800d40c:	4620      	mov	r0, r4
 800d40e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800d410:	2300      	movs	r3, #0
 800d412:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800d414:	2401      	movs	r4, #1
 800d416:	e7f7      	b.n	800d408 <xTaskCheckForTimeOut+0x60>
 800d418:	2001394c 	.word	0x2001394c
 800d41c:	20013938 	.word	0x20013938

0800d420 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800d420:	4b01      	ldr	r3, [pc, #4]	@ (800d428 <vTaskMissedYield+0x8>)
 800d422:	2201      	movs	r2, #1
 800d424:	601a      	str	r2, [r3, #0]
}
 800d426:	4770      	bx	lr
 800d428:	2001393c 	.word	0x2001393c

0800d42c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800d42c:	4b05      	ldr	r3, [pc, #20]	@ (800d444 <xTaskGetSchedulerState+0x18>)
 800d42e:	681b      	ldr	r3, [r3, #0]
 800d430:	b133      	cbz	r3, 800d440 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800d432:	4b05      	ldr	r3, [pc, #20]	@ (800d448 <xTaskGetSchedulerState+0x1c>)
 800d434:	6818      	ldr	r0, [r3, #0]
 800d436:	fab0 f080 	clz	r0, r0
 800d43a:	0940      	lsrs	r0, r0, #5
 800d43c:	0040      	lsls	r0, r0, #1
 800d43e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800d440:	2001      	movs	r0, #1
	}
 800d442:	4770      	bx	lr
 800d444:	20013944 	.word	0x20013944
 800d448:	2001392c 	.word	0x2001392c

0800d44c <xTaskPriorityInherit>:
	{
 800d44c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800d44e:	4604      	mov	r4, r0
 800d450:	b338      	cbz	r0, 800d4a2 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800d452:	4d1a      	ldr	r5, [pc, #104]	@ (800d4bc <xTaskPriorityInherit+0x70>)
 800d454:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800d456:	682a      	ldr	r2, [r5, #0]
 800d458:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800d45a:	4293      	cmp	r3, r2
 800d45c:	d226      	bcs.n	800d4ac <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d45e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800d460:	4e17      	ldr	r6, [pc, #92]	@ (800d4c0 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d462:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d464:	bfa1      	itttt	ge
 800d466:	682a      	ldrge	r2, [r5, #0]
 800d468:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800d46a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800d46e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800d470:	2214      	movs	r2, #20
 800d472:	fb02 6303 	mla	r3, r2, r3, r6
 800d476:	6942      	ldr	r2, [r0, #20]
 800d478:	429a      	cmp	r2, r3
 800d47a:	d113      	bne.n	800d4a4 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d47c:	1d07      	adds	r7, r0, #4
 800d47e:	4638      	mov	r0, r7
 800d480:	f7fe fce4 	bl	800be4c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d484:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800d486:	4a0f      	ldr	r2, [pc, #60]	@ (800d4c4 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d488:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800d48a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d48c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800d48e:	2014      	movs	r0, #20
 800d490:	428b      	cmp	r3, r1
 800d492:	fb00 6003 	mla	r0, r0, r3, r6
 800d496:	4639      	mov	r1, r7
 800d498:	bf88      	it	hi
 800d49a:	6013      	strhi	r3, [r2, #0]
 800d49c:	f7fe fcb4 	bl	800be08 <vListInsertEnd>
				xReturn = pdTRUE;
 800d4a0:	2001      	movs	r0, #1
	}
 800d4a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800d4a4:	682b      	ldr	r3, [r5, #0]
 800d4a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d4a8:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800d4aa:	e7f9      	b.n	800d4a0 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800d4ac:	682b      	ldr	r3, [r5, #0]
 800d4ae:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800d4b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d4b2:	4298      	cmp	r0, r3
 800d4b4:	bf2c      	ite	cs
 800d4b6:	2000      	movcs	r0, #0
 800d4b8:	2001      	movcc	r0, #1
 800d4ba:	e7f2      	b.n	800d4a2 <xTaskPriorityInherit+0x56>
 800d4bc:	20013e24 	.word	0x20013e24
 800d4c0:	200139c4 	.word	0x200139c4
 800d4c4:	20013948 	.word	0x20013948

0800d4c8 <xTaskPriorityDisinherit>:
	{
 800d4c8:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800d4ca:	b908      	cbnz	r0, 800d4d0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800d4cc:	2000      	movs	r0, #0
	}
 800d4ce:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800d4d0:	4b1b      	ldr	r3, [pc, #108]	@ (800d540 <xTaskPriorityDisinherit+0x78>)
 800d4d2:	681c      	ldr	r4, [r3, #0]
 800d4d4:	4284      	cmp	r4, r0
 800d4d6:	d008      	beq.n	800d4ea <xTaskPriorityDisinherit+0x22>
 800d4d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d4dc:	f383 8811 	msr	BASEPRI, r3
 800d4e0:	f3bf 8f6f 	isb	sy
 800d4e4:	f3bf 8f4f 	dsb	sy
 800d4e8:	e7fe      	b.n	800d4e8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800d4ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800d4ec:	b943      	cbnz	r3, 800d500 <xTaskPriorityDisinherit+0x38>
 800d4ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d4f2:	f383 8811 	msr	BASEPRI, r3
 800d4f6:	f3bf 8f6f 	isb	sy
 800d4fa:	f3bf 8f4f 	dsb	sy
 800d4fe:	e7fe      	b.n	800d4fe <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800d500:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800d502:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800d504:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800d506:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800d508:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800d50a:	d0df      	beq.n	800d4cc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800d50c:	2b00      	cmp	r3, #0
 800d50e:	d1dd      	bne.n	800d4cc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d510:	1d25      	adds	r5, r4, #4
 800d512:	4628      	mov	r0, r5
 800d514:	f7fe fc9a 	bl	800be4c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800d518:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800d51a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d51c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800d520:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800d522:	4a08      	ldr	r2, [pc, #32]	@ (800d544 <xTaskPriorityDisinherit+0x7c>)
 800d524:	6811      	ldr	r1, [r2, #0]
 800d526:	428b      	cmp	r3, r1
 800d528:	bf88      	it	hi
 800d52a:	6013      	strhi	r3, [r2, #0]
 800d52c:	4a06      	ldr	r2, [pc, #24]	@ (800d548 <xTaskPriorityDisinherit+0x80>)
 800d52e:	2014      	movs	r0, #20
 800d530:	fb00 2003 	mla	r0, r0, r3, r2
 800d534:	4629      	mov	r1, r5
 800d536:	f7fe fc67 	bl	800be08 <vListInsertEnd>
					xReturn = pdTRUE;
 800d53a:	2001      	movs	r0, #1
		return xReturn;
 800d53c:	e7c7      	b.n	800d4ce <xTaskPriorityDisinherit+0x6>
 800d53e:	bf00      	nop
 800d540:	20013e24 	.word	0x20013e24
 800d544:	20013948 	.word	0x20013948
 800d548:	200139c4 	.word	0x200139c4

0800d54c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800d54c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800d54e:	4604      	mov	r4, r0
 800d550:	2800      	cmp	r0, #0
 800d552:	d041      	beq.n	800d5d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800d554:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800d556:	b942      	cbnz	r2, 800d56a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800d558:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d55c:	f383 8811 	msr	BASEPRI, r3
 800d560:	f3bf 8f6f 	isb	sy
 800d564:	f3bf 8f4f 	dsb	sy
 800d568:	e7fe      	b.n	800d568 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800d56a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800d56c:	4299      	cmp	r1, r3
 800d56e:	bf38      	it	cc
 800d570:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800d572:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800d574:	428b      	cmp	r3, r1
 800d576:	d02f      	beq.n	800d5d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800d578:	2a01      	cmp	r2, #1
 800d57a:	d12d      	bne.n	800d5d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800d57c:	4a17      	ldr	r2, [pc, #92]	@ (800d5dc <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800d57e:	6812      	ldr	r2, [r2, #0]
 800d580:	4282      	cmp	r2, r0
 800d582:	d108      	bne.n	800d596 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800d584:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d588:	f383 8811 	msr	BASEPRI, r3
 800d58c:	f3bf 8f6f 	isb	sy
 800d590:	f3bf 8f4f 	dsb	sy
 800d594:	e7fe      	b.n	800d594 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d596:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800d598:	4d11      	ldr	r5, [pc, #68]	@ (800d5e0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800d59a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800d59c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800d59e:	f04f 0214 	mov.w	r2, #20
 800d5a2:	fb02 5303 	mla	r3, r2, r3, r5
 800d5a6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d5a8:	bfa4      	itt	ge
 800d5aa:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800d5ae:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800d5b0:	429a      	cmp	r2, r3
 800d5b2:	d111      	bne.n	800d5d8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800d5b4:	1d06      	adds	r6, r0, #4
 800d5b6:	4630      	mov	r0, r6
 800d5b8:	f7fe fc48 	bl	800be4c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800d5bc:	4a09      	ldr	r2, [pc, #36]	@ (800d5e4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800d5be:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d5c0:	6811      	ldr	r1, [r2, #0]
 800d5c2:	2014      	movs	r0, #20
 800d5c4:	428b      	cmp	r3, r1
 800d5c6:	fb00 5003 	mla	r0, r0, r3, r5
 800d5ca:	4631      	mov	r1, r6
	}
 800d5cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800d5d0:	bf88      	it	hi
 800d5d2:	6013      	strhi	r3, [r2, #0]
 800d5d4:	f7fe bc18 	b.w	800be08 <vListInsertEnd>
	}
 800d5d8:	bd70      	pop	{r4, r5, r6, pc}
 800d5da:	bf00      	nop
 800d5dc:	20013e24 	.word	0x20013e24
 800d5e0:	200139c4 	.word	0x200139c4
 800d5e4:	20013948 	.word	0x20013948

0800d5e8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800d5e8:	4b04      	ldr	r3, [pc, #16]	@ (800d5fc <pvTaskIncrementMutexHeldCount+0x14>)
 800d5ea:	681a      	ldr	r2, [r3, #0]
 800d5ec:	b11a      	cbz	r2, 800d5f6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800d5ee:	6819      	ldr	r1, [r3, #0]
 800d5f0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800d5f2:	3201      	adds	r2, #1
 800d5f4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800d5f6:	6818      	ldr	r0, [r3, #0]
	}
 800d5f8:	4770      	bx	lr
 800d5fa:	bf00      	nop
 800d5fc:	20013e24 	.word	0x20013e24

0800d600 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800d600:	4291      	cmp	r1, r2
{
 800d602:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800d604:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800d606:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800d608:	d80a      	bhi.n	800d620 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d60a:	1ad2      	subs	r2, r2, r3
 800d60c:	6983      	ldr	r3, [r0, #24]
 800d60e:	429a      	cmp	r2, r3
 800d610:	d20d      	bcs.n	800d62e <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800d612:	4b08      	ldr	r3, [pc, #32]	@ (800d634 <prvInsertTimerInActiveList+0x34>)
 800d614:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d616:	6818      	ldr	r0, [r3, #0]
 800d618:	f7fe fc01 	bl	800be1e <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800d61c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800d61e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800d620:	429a      	cmp	r2, r3
 800d622:	d201      	bcs.n	800d628 <prvInsertTimerInActiveList+0x28>
 800d624:	4299      	cmp	r1, r3
 800d626:	d202      	bcs.n	800d62e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d628:	4b03      	ldr	r3, [pc, #12]	@ (800d638 <prvInsertTimerInActiveList+0x38>)
 800d62a:	1d01      	adds	r1, r0, #4
 800d62c:	e7f3      	b.n	800d616 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800d62e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800d630:	e7f5      	b.n	800d61e <prvInsertTimerInActiveList+0x1e>
 800d632:	bf00      	nop
 800d634:	20013f24 	.word	0x20013f24
 800d638:	20013f28 	.word	0x20013f28

0800d63c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800d63c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800d63e:	4c11      	ldr	r4, [pc, #68]	@ (800d684 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800d640:	f7fe fc80 	bl	800bf44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800d644:	6825      	ldr	r5, [r4, #0]
 800d646:	b9bd      	cbnz	r5, 800d678 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800d648:	4f0f      	ldr	r7, [pc, #60]	@ (800d688 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800d64a:	4e10      	ldr	r6, [pc, #64]	@ (800d68c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800d64c:	4638      	mov	r0, r7
 800d64e:	f7fe fbcd 	bl	800bdec <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800d652:	4630      	mov	r0, r6
 800d654:	f7fe fbca 	bl	800bdec <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800d658:	4b0d      	ldr	r3, [pc, #52]	@ (800d690 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800d65a:	4a0e      	ldr	r2, [pc, #56]	@ (800d694 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800d65c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800d65e:	4b0e      	ldr	r3, [pc, #56]	@ (800d698 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800d660:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800d662:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800d664:	200a      	movs	r0, #10
 800d666:	4b0d      	ldr	r3, [pc, #52]	@ (800d69c <prvCheckForValidListAndQueue+0x60>)
 800d668:	9500      	str	r5, [sp, #0]
 800d66a:	f7fe fe74 	bl	800c356 <xQueueGenericCreateStatic>
 800d66e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800d670:	b110      	cbz	r0, 800d678 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800d672:	490b      	ldr	r1, [pc, #44]	@ (800d6a0 <prvCheckForValidListAndQueue+0x64>)
 800d674:	f7ff fa2c 	bl	800cad0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800d678:	b003      	add	sp, #12
 800d67a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800d67e:	f7fe bc81 	b.w	800bf84 <vPortExitCritical>
 800d682:	bf00      	nop
 800d684:	20013f20 	.word	0x20013f20
 800d688:	20013f40 	.word	0x20013f40
 800d68c:	20013f2c 	.word	0x20013f2c
 800d690:	20013f28 	.word	0x20013f28
 800d694:	20013e78 	.word	0x20013e78
 800d698:	20013f24 	.word	0x20013f24
 800d69c:	20013e28 	.word	0x20013e28
 800d6a0:	08029fcb 	.word	0x08029fcb

0800d6a4 <xTimerCreateTimerTask>:
{
 800d6a4:	b510      	push	{r4, lr}
 800d6a6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800d6a8:	f7ff ffc8 	bl	800d63c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800d6ac:	4b12      	ldr	r3, [pc, #72]	@ (800d6f8 <xTimerCreateTimerTask+0x54>)
 800d6ae:	681b      	ldr	r3, [r3, #0]
 800d6b0:	b1b3      	cbz	r3, 800d6e0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800d6b2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800d6b4:	aa07      	add	r2, sp, #28
 800d6b6:	a906      	add	r1, sp, #24
 800d6b8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800d6ba:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800d6be:	f7fe fa8d 	bl	800bbdc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800d6c2:	9b05      	ldr	r3, [sp, #20]
 800d6c4:	9302      	str	r3, [sp, #8]
 800d6c6:	9b06      	ldr	r3, [sp, #24]
 800d6c8:	9301      	str	r3, [sp, #4]
 800d6ca:	2302      	movs	r3, #2
 800d6cc:	9300      	str	r3, [sp, #0]
 800d6ce:	9a07      	ldr	r2, [sp, #28]
 800d6d0:	490a      	ldr	r1, [pc, #40]	@ (800d6fc <xTimerCreateTimerTask+0x58>)
 800d6d2:	480b      	ldr	r0, [pc, #44]	@ (800d700 <xTimerCreateTimerTask+0x5c>)
 800d6d4:	4623      	mov	r3, r4
 800d6d6:	f7ff fbc0 	bl	800ce5a <xTaskCreateStatic>
 800d6da:	4b0a      	ldr	r3, [pc, #40]	@ (800d704 <xTimerCreateTimerTask+0x60>)
 800d6dc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800d6de:	b940      	cbnz	r0, 800d6f2 <xTimerCreateTimerTask+0x4e>
 800d6e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d6e4:	f383 8811 	msr	BASEPRI, r3
 800d6e8:	f3bf 8f6f 	isb	sy
 800d6ec:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800d6f0:	e7fe      	b.n	800d6f0 <xTimerCreateTimerTask+0x4c>
}
 800d6f2:	2001      	movs	r0, #1
 800d6f4:	b008      	add	sp, #32
 800d6f6:	bd10      	pop	{r4, pc}
 800d6f8:	20013f20 	.word	0x20013f20
 800d6fc:	08029fd0 	.word	0x08029fd0
 800d700:	0800d805 	.word	0x0800d805
 800d704:	20013f1c 	.word	0x20013f1c

0800d708 <xTimerGenericCommand>:
{
 800d708:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d70a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800d70c:	4604      	mov	r4, r0
{
 800d70e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800d710:	b940      	cbnz	r0, 800d724 <xTimerGenericCommand+0x1c>
 800d712:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d716:	f383 8811 	msr	BASEPRI, r3
 800d71a:	f3bf 8f6f 	isb	sy
 800d71e:	f3bf 8f4f 	dsb	sy
 800d722:	e7fe      	b.n	800d722 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800d724:	4d0d      	ldr	r5, [pc, #52]	@ (800d75c <xTimerGenericCommand+0x54>)
 800d726:	6828      	ldr	r0, [r5, #0]
 800d728:	b180      	cbz	r0, 800d74c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800d72a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800d72c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800d730:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800d732:	dc0d      	bgt.n	800d750 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800d734:	f7ff fe7a 	bl	800d42c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800d738:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800d73a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800d73c:	bf08      	it	eq
 800d73e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800d740:	6828      	ldr	r0, [r5, #0]
 800d742:	bf18      	it	ne
 800d744:	461a      	movne	r2, r3
 800d746:	4669      	mov	r1, sp
 800d748:	f7fe feba 	bl	800c4c0 <xQueueGenericSend>
}
 800d74c:	b004      	add	sp, #16
 800d74e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800d750:	2300      	movs	r3, #0
 800d752:	4669      	mov	r1, sp
 800d754:	f7fe ff66 	bl	800c624 <xQueueGenericSendFromISR>
 800d758:	e7f8      	b.n	800d74c <xTimerGenericCommand+0x44>
 800d75a:	bf00      	nop
 800d75c:	20013f20 	.word	0x20013f20

0800d760 <prvSampleTimeNow>:
{
 800d760:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800d764:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800d800 <prvSampleTimeNow+0xa0>
{
 800d768:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800d76a:	f7ff fc2b 	bl	800cfc4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800d76e:	f8d8 3000 	ldr.w	r3, [r8]
 800d772:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800d774:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800d776:	d909      	bls.n	800d78c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800d778:	4f1f      	ldr	r7, [pc, #124]	@ (800d7f8 <prvSampleTimeNow+0x98>)
 800d77a:	683b      	ldr	r3, [r7, #0]
 800d77c:	681a      	ldr	r2, [r3, #0]
 800d77e:	b96a      	cbnz	r2, 800d79c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800d780:	4a1e      	ldr	r2, [pc, #120]	@ (800d7fc <prvSampleTimeNow+0x9c>)
 800d782:	6811      	ldr	r1, [r2, #0]
 800d784:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800d786:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800d788:	2301      	movs	r3, #1
 800d78a:	e000      	b.n	800d78e <prvSampleTimeNow+0x2e>
 800d78c:	2300      	movs	r3, #0
}
 800d78e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800d790:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800d792:	f8c8 5000 	str.w	r5, [r8]
}
 800d796:	b002      	add	sp, #8
 800d798:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800d79c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d79e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800d7a0:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800d7a4:	f104 0a04 	add.w	sl, r4, #4
 800d7a8:	4650      	mov	r0, sl
 800d7aa:	f7fe fb4f 	bl	800be4c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800d7ae:	6a23      	ldr	r3, [r4, #32]
 800d7b0:	4620      	mov	r0, r4
 800d7b2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800d7b4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800d7b8:	075b      	lsls	r3, r3, #29
 800d7ba:	d5de      	bpl.n	800d77a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800d7bc:	69a3      	ldr	r3, [r4, #24]
 800d7be:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800d7c0:	4599      	cmp	r9, r3
 800d7c2:	d206      	bcs.n	800d7d2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d7c4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800d7c6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800d7c8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800d7ca:	4651      	mov	r1, sl
 800d7cc:	f7fe fb27 	bl	800be1e <vListInsert>
 800d7d0:	e7d3      	b.n	800d77a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800d7d2:	2300      	movs	r3, #0
 800d7d4:	9300      	str	r3, [sp, #0]
 800d7d6:	464a      	mov	r2, r9
 800d7d8:	4619      	mov	r1, r3
 800d7da:	4620      	mov	r0, r4
 800d7dc:	f7ff ff94 	bl	800d708 <xTimerGenericCommand>
				configASSERT( xResult );
 800d7e0:	2800      	cmp	r0, #0
 800d7e2:	d1ca      	bne.n	800d77a <prvSampleTimeNow+0x1a>
 800d7e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d7e8:	f383 8811 	msr	BASEPRI, r3
 800d7ec:	f3bf 8f6f 	isb	sy
 800d7f0:	f3bf 8f4f 	dsb	sy
 800d7f4:	e7fe      	b.n	800d7f4 <prvSampleTimeNow+0x94>
 800d7f6:	bf00      	nop
 800d7f8:	20013f28 	.word	0x20013f28
 800d7fc:	20013f24 	.word	0x20013f24
 800d800:	20013f18 	.word	0x20013f18

0800d804 <prvTimerTask>:
{
 800d804:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d808:	4d6e      	ldr	r5, [pc, #440]	@ (800d9c4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800d80a:	4e6f      	ldr	r6, [pc, #444]	@ (800d9c8 <prvTimerTask+0x1c4>)
{
 800d80c:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d80e:	682b      	ldr	r3, [r5, #0]
 800d810:	f8d3 8000 	ldr.w	r8, [r3]
 800d814:	f1b8 0f00 	cmp.w	r8, #0
 800d818:	d035      	beq.n	800d886 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800d81a:	68db      	ldr	r3, [r3, #12]
 800d81c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d820:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800d822:	f7ff fbc7 	bl	800cfb4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800d826:	a804      	add	r0, sp, #16
 800d828:	f7ff ff9a 	bl	800d760 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800d82c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800d82e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800d830:	2b00      	cmp	r3, #0
 800d832:	d169      	bne.n	800d908 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800d834:	2c00      	cmp	r4, #0
 800d836:	d14c      	bne.n	800d8d2 <prvTimerTask+0xce>
 800d838:	4540      	cmp	r0, r8
 800d83a:	d350      	bcc.n	800d8de <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800d83c:	f7ff fc5e 	bl	800d0fc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800d840:	682b      	ldr	r3, [r5, #0]
 800d842:	68db      	ldr	r3, [r3, #12]
 800d844:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800d846:	1d38      	adds	r0, r7, #4
 800d848:	f7fe fb00 	bl	800be4c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800d84c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800d850:	0758      	lsls	r0, r3, #29
 800d852:	d51a      	bpl.n	800d88a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800d854:	69b9      	ldr	r1, [r7, #24]
 800d856:	4643      	mov	r3, r8
 800d858:	464a      	mov	r2, r9
 800d85a:	4441      	add	r1, r8
 800d85c:	4638      	mov	r0, r7
 800d85e:	f7ff fecf 	bl	800d600 <prvInsertTimerInActiveList>
 800d862:	b1b0      	cbz	r0, 800d892 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800d864:	9400      	str	r4, [sp, #0]
 800d866:	4623      	mov	r3, r4
 800d868:	4642      	mov	r2, r8
 800d86a:	4621      	mov	r1, r4
 800d86c:	4638      	mov	r0, r7
 800d86e:	f7ff ff4b 	bl	800d708 <xTimerGenericCommand>
			configASSERT( xResult );
 800d872:	b970      	cbnz	r0, 800d892 <prvTimerTask+0x8e>
 800d874:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d878:	f383 8811 	msr	BASEPRI, r3
 800d87c:	f3bf 8f6f 	isb	sy
 800d880:	f3bf 8f4f 	dsb	sy
 800d884:	e7fe      	b.n	800d884 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800d886:	2401      	movs	r4, #1
 800d888:	e7cb      	b.n	800d822 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800d88a:	f023 0301 	bic.w	r3, r3, #1
 800d88e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800d892:	6a3b      	ldr	r3, [r7, #32]
 800d894:	4638      	mov	r0, r7
 800d896:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800d898:	6830      	ldr	r0, [r6, #0]
 800d89a:	2200      	movs	r2, #0
 800d89c:	a904      	add	r1, sp, #16
 800d89e:	f7fe ff6f 	bl	800c780 <xQueueReceive>
 800d8a2:	2800      	cmp	r0, #0
 800d8a4:	d0b3      	beq.n	800d80e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800d8a6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800d8a8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800d8aa:	2b00      	cmp	r3, #0
 800d8ac:	db2f      	blt.n	800d90e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800d8ae:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800d8b0:	6963      	ldr	r3, [r4, #20]
 800d8b2:	2b00      	cmp	r3, #0
 800d8b4:	d132      	bne.n	800d91c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800d8b6:	a803      	add	r0, sp, #12
 800d8b8:	f7ff ff52 	bl	800d760 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800d8bc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800d8be:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800d8c0:	2b09      	cmp	r3, #9
 800d8c2:	d8e9      	bhi.n	800d898 <prvTimerTask+0x94>
 800d8c4:	e8df f003 	tbb	[pc, r3]
 800d8c8:	572e2e2e 	.word	0x572e2e2e
 800d8cc:	2e2e765e 	.word	0x2e2e765e
 800d8d0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800d8d2:	4b3e      	ldr	r3, [pc, #248]	@ (800d9cc <prvTimerTask+0x1c8>)
 800d8d4:	681b      	ldr	r3, [r3, #0]
 800d8d6:	681c      	ldr	r4, [r3, #0]
 800d8d8:	fab4 f484 	clz	r4, r4
 800d8dc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800d8de:	6830      	ldr	r0, [r6, #0]
 800d8e0:	4622      	mov	r2, r4
 800d8e2:	eba8 0109 	sub.w	r1, r8, r9
 800d8e6:	f7ff f932 	bl	800cb4e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800d8ea:	f7ff fc07 	bl	800d0fc <xTaskResumeAll>
 800d8ee:	2800      	cmp	r0, #0
 800d8f0:	d1d2      	bne.n	800d898 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800d8f2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800d8f6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800d8fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800d8fe:	f3bf 8f4f 	dsb	sy
 800d902:	f3bf 8f6f 	isb	sy
 800d906:	e7c7      	b.n	800d898 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800d908:	f7ff fbf8 	bl	800d0fc <xTaskResumeAll>
}
 800d90c:	e7c4      	b.n	800d898 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800d90e:	9b05      	ldr	r3, [sp, #20]
 800d910:	9907      	ldr	r1, [sp, #28]
 800d912:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800d914:	9b04      	ldr	r3, [sp, #16]
 800d916:	2b00      	cmp	r3, #0
 800d918:	dbbe      	blt.n	800d898 <prvTimerTask+0x94>
 800d91a:	e7c8      	b.n	800d8ae <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800d91c:	1d20      	adds	r0, r4, #4
 800d91e:	f7fe fa95 	bl	800be4c <uxListRemove>
 800d922:	e7c8      	b.n	800d8b6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800d924:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800d928:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800d92a:	f043 0301 	orr.w	r3, r3, #1
 800d92e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800d932:	9b05      	ldr	r3, [sp, #20]
 800d934:	4620      	mov	r0, r4
 800d936:	4419      	add	r1, r3
 800d938:	f7ff fe62 	bl	800d600 <prvInsertTimerInActiveList>
 800d93c:	2800      	cmp	r0, #0
 800d93e:	d0ab      	beq.n	800d898 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800d940:	6a23      	ldr	r3, [r4, #32]
 800d942:	4620      	mov	r0, r4
 800d944:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800d946:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800d94a:	0759      	lsls	r1, r3, #29
 800d94c:	d5a4      	bpl.n	800d898 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800d94e:	69a2      	ldr	r2, [r4, #24]
 800d950:	9905      	ldr	r1, [sp, #20]
 800d952:	2300      	movs	r3, #0
 800d954:	440a      	add	r2, r1
 800d956:	9300      	str	r3, [sp, #0]
 800d958:	4619      	mov	r1, r3
 800d95a:	4620      	mov	r0, r4
 800d95c:	f7ff fed4 	bl	800d708 <xTimerGenericCommand>
							configASSERT( xResult );
 800d960:	2800      	cmp	r0, #0
 800d962:	d199      	bne.n	800d898 <prvTimerTask+0x94>
 800d964:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d968:	f383 8811 	msr	BASEPRI, r3
 800d96c:	f3bf 8f6f 	isb	sy
 800d970:	f3bf 8f4f 	dsb	sy
 800d974:	e7fe      	b.n	800d974 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800d976:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800d97a:	f023 0301 	bic.w	r3, r3, #1
 800d97e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 800d982:	e789      	b.n	800d898 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800d984:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800d988:	f043 0301 	orr.w	r3, r3, #1
 800d98c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800d990:	9905      	ldr	r1, [sp, #20]
 800d992:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800d994:	b941      	cbnz	r1, 800d9a8 <prvTimerTask+0x1a4>
 800d996:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800d99a:	f383 8811 	msr	BASEPRI, r3
 800d99e:	f3bf 8f6f 	isb	sy
 800d9a2:	f3bf 8f4f 	dsb	sy
 800d9a6:	e7fe      	b.n	800d9a6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800d9a8:	4603      	mov	r3, r0
 800d9aa:	4401      	add	r1, r0
 800d9ac:	4620      	mov	r0, r4
 800d9ae:	f7ff fe27 	bl	800d600 <prvInsertTimerInActiveList>
					break;
 800d9b2:	e771      	b.n	800d898 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800d9b4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800d9b8:	079a      	lsls	r2, r3, #30
 800d9ba:	d4de      	bmi.n	800d97a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800d9bc:	4620      	mov	r0, r4
 800d9be:	f7fe f9d7 	bl	800bd70 <vPortFree>
 800d9c2:	e769      	b.n	800d898 <prvTimerTask+0x94>
 800d9c4:	20013f28 	.word	0x20013f28
 800d9c8:	20013f20 	.word	0x20013f20
 800d9cc:	20013f24 	.word	0x20013f24

0800d9d0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800d9d0:	8880      	ldrh	r0, [r0, #4]
 800d9d2:	4770      	bx	lr

0800d9d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800d9d4:	b570      	push	{r4, r5, r6, lr}
 800d9d6:	6803      	ldr	r3, [r0, #0]
 800d9d8:	4605      	mov	r5, r0
 800d9da:	460c      	mov	r4, r1
 800d9dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d9de:	2100      	movs	r1, #0
 800d9e0:	4798      	blx	r3
 800d9e2:	682b      	ldr	r3, [r5, #0]
 800d9e4:	4606      	mov	r6, r0
 800d9e6:	6a1b      	ldr	r3, [r3, #32]
 800d9e8:	4628      	mov	r0, r5
 800d9ea:	4798      	blx	r3
 800d9ec:	1ba4      	subs	r4, r4, r6
 800d9ee:	b2a4      	uxth	r4, r4
 800d9f0:	fbb4 f0f0 	udiv	r0, r4, r0
 800d9f4:	bd70      	pop	{r4, r5, r6, pc}

0800d9f6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800d9f6:	2300      	movs	r3, #0
 800d9f8:	8083      	strh	r3, [r0, #4]
 800d9fa:	4770      	bx	lr

0800d9fc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800d9fc:	b510      	push	{r4, lr}
 800d9fe:	6803      	ldr	r3, [r0, #0]
 800da00:	8881      	ldrh	r1, [r0, #4]
 800da02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800da04:	4604      	mov	r4, r0
 800da06:	4798      	blx	r3
 800da08:	88a3      	ldrh	r3, [r4, #4]
 800da0a:	3301      	adds	r3, #1
 800da0c:	80a3      	strh	r3, [r4, #4]
 800da0e:	bd10      	pop	{r4, pc}

0800da10 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800da10:	6803      	ldr	r3, [r0, #0]
 800da12:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800da14:	4718      	bx	r3

0800da16 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800da16:	4770      	bx	lr

0800da18 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800da18:	4a02      	ldr	r2, [pc, #8]	@ (800da24 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800da1a:	6002      	str	r2, [r0, #0]
 800da1c:	2200      	movs	r2, #0
 800da1e:	8082      	strh	r2, [r0, #4]
 800da20:	4770      	bx	lr
 800da22:	bf00      	nop
 800da24:	0802acf8 	.word	0x0802acf8

0800da28 <_ZN8touchgfx9Container13getFirstChildEv>:
 800da28:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800da2a:	4770      	bx	lr

0800da2c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800da2c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800da2e:	2000      	movs	r0, #0
 800da30:	b12b      	cbz	r3, 800da3e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800da32:	b920      	cbnz	r0, 800da3e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800da34:	1a5a      	subs	r2, r3, r1
 800da36:	4250      	negs	r0, r2
 800da38:	4150      	adcs	r0, r2
 800da3a:	699b      	ldr	r3, [r3, #24]
 800da3c:	e7f8      	b.n	800da30 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800da3e:	4770      	bx	lr

0800da40 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800da40:	2300      	movs	r3, #0
 800da42:	6148      	str	r0, [r1, #20]
 800da44:	618b      	str	r3, [r1, #24]
 800da46:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800da48:	b913      	cbnz	r3, 800da50 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800da4a:	6281      	str	r1, [r0, #40]	@ 0x28
 800da4c:	4770      	bx	lr
 800da4e:	4613      	mov	r3, r2
 800da50:	699a      	ldr	r2, [r3, #24]
 800da52:	2a00      	cmp	r2, #0
 800da54:	d1fb      	bne.n	800da4e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800da56:	6199      	str	r1, [r3, #24]
 800da58:	4770      	bx	lr

0800da5a <_ZN8touchgfx9Container9removeAllEv>:
 800da5a:	2200      	movs	r2, #0
 800da5c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800da5e:	b123      	cbz	r3, 800da6a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800da60:	6999      	ldr	r1, [r3, #24]
 800da62:	6281      	str	r1, [r0, #40]	@ 0x28
 800da64:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800da68:	e7f8      	b.n	800da5c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800da6a:	4770      	bx	lr

0800da6c <_ZN8touchgfx9Container6unlinkEv>:
 800da6c:	2300      	movs	r3, #0
 800da6e:	6283      	str	r3, [r0, #40]	@ 0x28
 800da70:	4770      	bx	lr

0800da72 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800da72:	2200      	movs	r2, #0
 800da74:	8002      	strh	r2, [r0, #0]
 800da76:	8042      	strh	r2, [r0, #2]
 800da78:	8082      	strh	r2, [r0, #4]
 800da7a:	80c2      	strh	r2, [r0, #6]
 800da7c:	4770      	bx	lr

0800da7e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800da7e:	b570      	push	{r4, r5, r6, lr}
 800da80:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800da82:	460d      	mov	r5, r1
 800da84:	4616      	mov	r6, r2
 800da86:	b13c      	cbz	r4, 800da98 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800da88:	6823      	ldr	r3, [r4, #0]
 800da8a:	4620      	mov	r0, r4
 800da8c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800da8e:	4632      	mov	r2, r6
 800da90:	4629      	mov	r1, r5
 800da92:	4798      	blx	r3
 800da94:	69a4      	ldr	r4, [r4, #24]
 800da96:	e7f6      	b.n	800da86 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800da98:	bd70      	pop	{r4, r5, r6, pc}

0800da9a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800da9a:	b538      	push	{r3, r4, r5, lr}
 800da9c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800da9e:	460d      	mov	r5, r1
 800daa0:	b134      	cbz	r4, 800dab0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800daa2:	682b      	ldr	r3, [r5, #0]
 800daa4:	4621      	mov	r1, r4
 800daa6:	689b      	ldr	r3, [r3, #8]
 800daa8:	4628      	mov	r0, r5
 800daaa:	4798      	blx	r3
 800daac:	69a4      	ldr	r4, [r4, #24]
 800daae:	e7f7      	b.n	800daa0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800dab0:	bd38      	pop	{r3, r4, r5, pc}

0800dab2 <_ZN8touchgfx9ContainerD1Ev>:
 800dab2:	4770      	bx	lr

0800dab4 <_ZN8touchgfx9ContainerD0Ev>:
 800dab4:	b510      	push	{r4, lr}
 800dab6:	212c      	movs	r1, #44	@ 0x2c
 800dab8:	4604      	mov	r4, r0
 800daba:	f019 f9ab 	bl	8026e14 <_ZdlPvj>
 800dabe:	4620      	mov	r0, r4
 800dac0:	bd10      	pop	{r4, pc}

0800dac2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800dac2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800dac4:	b19b      	cbz	r3, 800daee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800dac6:	428b      	cmp	r3, r1
 800dac8:	d109      	bne.n	800dade <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800daca:	699a      	ldr	r2, [r3, #24]
 800dacc:	2100      	movs	r1, #0
 800dace:	6159      	str	r1, [r3, #20]
 800dad0:	6282      	str	r2, [r0, #40]	@ 0x28
 800dad2:	b902      	cbnz	r2, 800dad6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800dad4:	4770      	bx	lr
 800dad6:	6199      	str	r1, [r3, #24]
 800dad8:	4770      	bx	lr
 800dada:	4613      	mov	r3, r2
 800dadc:	b13a      	cbz	r2, 800daee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800dade:	699a      	ldr	r2, [r3, #24]
 800dae0:	428a      	cmp	r2, r1
 800dae2:	d1fa      	bne.n	800dada <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800dae4:	698a      	ldr	r2, [r1, #24]
 800dae6:	619a      	str	r2, [r3, #24]
 800dae8:	2300      	movs	r3, #0
 800daea:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800daee:	4770      	bx	lr

0800daf0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800daf0:	b410      	push	{r4}
 800daf2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800daf4:	4604      	mov	r4, r0
 800daf6:	b92b      	cbnz	r3, 800db04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800daf8:	6803      	ldr	r3, [r0, #0]
 800dafa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dafe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800db00:	4611      	mov	r1, r2
 800db02:	4718      	bx	r3
 800db04:	b941      	cbnz	r1, 800db18 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800db06:	6193      	str	r3, [r2, #24]
 800db08:	6282      	str	r2, [r0, #40]	@ 0x28
 800db0a:	6154      	str	r4, [r2, #20]
 800db0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800db10:	4770      	bx	lr
 800db12:	4603      	mov	r3, r0
 800db14:	2800      	cmp	r0, #0
 800db16:	d0f9      	beq.n	800db0c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800db18:	4299      	cmp	r1, r3
 800db1a:	6998      	ldr	r0, [r3, #24]
 800db1c:	d1f9      	bne.n	800db12 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800db1e:	6190      	str	r0, [r2, #24]
 800db20:	618a      	str	r2, [r1, #24]
 800db22:	e7f2      	b.n	800db0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800db24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800db24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db28:	461f      	mov	r7, r3
 800db2a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800db2e:	460d      	mov	r5, r1
 800db30:	4616      	mov	r6, r2
 800db32:	b103      	cbz	r3, 800db36 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800db34:	6038      	str	r0, [r7, #0]
 800db36:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800db38:	b314      	cbz	r4, 800db80 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800db3a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800db3e:	b1eb      	cbz	r3, 800db7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800db40:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800db44:	428d      	cmp	r5, r1
 800db46:	db19      	blt.n	800db7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800db48:	8923      	ldrh	r3, [r4, #8]
 800db4a:	b289      	uxth	r1, r1
 800db4c:	440b      	add	r3, r1
 800db4e:	b21b      	sxth	r3, r3
 800db50:	429d      	cmp	r5, r3
 800db52:	da13      	bge.n	800db7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800db54:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800db58:	4296      	cmp	r6, r2
 800db5a:	db0f      	blt.n	800db7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800db5c:	8963      	ldrh	r3, [r4, #10]
 800db5e:	b292      	uxth	r2, r2
 800db60:	4413      	add	r3, r2
 800db62:	b21b      	sxth	r3, r3
 800db64:	429e      	cmp	r6, r3
 800db66:	da09      	bge.n	800db7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800db68:	6823      	ldr	r3, [r4, #0]
 800db6a:	1ab2      	subs	r2, r6, r2
 800db6c:	1a69      	subs	r1, r5, r1
 800db6e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800db72:	b212      	sxth	r2, r2
 800db74:	463b      	mov	r3, r7
 800db76:	b209      	sxth	r1, r1
 800db78:	4620      	mov	r0, r4
 800db7a:	47c0      	blx	r8
 800db7c:	69a4      	ldr	r4, [r4, #24]
 800db7e:	e7db      	b.n	800db38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800db80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800db84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800db84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db88:	4c6e      	ldr	r4, [pc, #440]	@ (800dd44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800db8a:	b0a1      	sub	sp, #132	@ 0x84
 800db8c:	6824      	ldr	r4, [r4, #0]
 800db8e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800db90:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800db94:	9303      	str	r3, [sp, #12]
 800db96:	2400      	movs	r4, #0
 800db98:	802c      	strh	r4, [r5, #0]
 800db9a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800db9c:	802c      	strh	r4, [r5, #0]
 800db9e:	601c      	str	r4, [r3, #0]
 800dba0:	4606      	mov	r6, r0
 800dba2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800dba6:	f7ff ffbd 	bl	800db24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dbaa:	f1b9 0f03 	cmp.w	r9, #3
 800dbae:	f340 80c2 	ble.w	800dd36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800dbb2:	4631      	mov	r1, r6
 800dbb4:	a80c      	add	r0, sp, #48	@ 0x30
 800dbb6:	f007 fd8f 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dbba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800dbbe:	9306      	str	r3, [sp, #24]
 800dbc0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800dbc4:	9307      	str	r3, [sp, #28]
 800dbc6:	9b03      	ldr	r3, [sp, #12]
 800dbc8:	f8d3 a000 	ldr.w	sl, [r3]
 800dbcc:	f1ba 0f00 	cmp.w	sl, #0
 800dbd0:	f000 80b4 	beq.w	800dd3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800dbd4:	4651      	mov	r1, sl
 800dbd6:	a810      	add	r0, sp, #64	@ 0x40
 800dbd8:	f007 fd7e 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dbdc:	9b01      	ldr	r3, [sp, #4]
 800dbde:	9a06      	ldr	r2, [sp, #24]
 800dbe0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800dbe4:	189d      	adds	r5, r3, r2
 800dbe6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800dbea:	9a07      	ldr	r2, [sp, #28]
 800dbec:	2002      	movs	r0, #2
 800dbee:	fb91 f1f0 	sdiv	r1, r1, r0
 800dbf2:	4419      	add	r1, r3
 800dbf4:	1a6d      	subs	r5, r5, r1
 800dbf6:	9b02      	ldr	r3, [sp, #8]
 800dbf8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800dbfc:	4413      	add	r3, r2
 800dbfe:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800dc02:	fb92 f2f0 	sdiv	r2, r2, r0
 800dc06:	440a      	add	r2, r1
 800dc08:	1a9b      	subs	r3, r3, r2
 800dc0a:	435b      	muls	r3, r3
 800dc0c:	fb05 3505 	mla	r5, r5, r5, r3
 800dc10:	4f4d      	ldr	r7, [pc, #308]	@ (800dd48 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800dc12:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800dc14:	ac10      	add	r4, sp, #64	@ 0x40
 800dc16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dc18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800dc1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dc1c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800dc1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dc20:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800dc24:	f1b9 0f0c 	cmp.w	r9, #12
 800dc28:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800dc2c:	f04f 0303 	mov.w	r3, #3
 800dc30:	bfc8      	it	gt
 800dc32:	4698      	movgt	r8, r3
 800dc34:	f8cd 9000 	str.w	r9, [sp]
 800dc38:	f04f 0400 	mov.w	r4, #0
 800dc3c:	bfdc      	itt	le
 800dc3e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800dc42:	fb92 f8f3 	sdivle	r8, r2, r3
 800dc46:	1c63      	adds	r3, r4, #1
 800dc48:	aa10      	add	r2, sp, #64	@ 0x40
 800dc4a:	f004 0401 	and.w	r4, r4, #1
 800dc4e:	9308      	str	r3, [sp, #32]
 800dc50:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800dc54:	9b00      	ldr	r3, [sp, #0]
 800dc56:	fb93 f3f8 	sdiv	r3, r3, r8
 800dc5a:	b29b      	uxth	r3, r3
 800dc5c:	3404      	adds	r4, #4
 800dc5e:	f04f 0b00 	mov.w	fp, #0
 800dc62:	9304      	str	r3, [sp, #16]
 800dc64:	9a04      	ldr	r2, [sp, #16]
 800dc66:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800dc6a:	fb13 f302 	smulbb	r3, r3, r2
 800dc6e:	9a01      	ldr	r2, [sp, #4]
 800dc70:	b29b      	uxth	r3, r3
 800dc72:	1899      	adds	r1, r3, r2
 800dc74:	9305      	str	r3, [sp, #20]
 800dc76:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800dc7a:	b209      	sxth	r1, r1
 800dc7c:	4299      	cmp	r1, r3
 800dc7e:	db4d      	blt.n	800dd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dc80:	8932      	ldrh	r2, [r6, #8]
 800dc82:	4413      	add	r3, r2
 800dc84:	b21b      	sxth	r3, r3
 800dc86:	4299      	cmp	r1, r3
 800dc88:	da48      	bge.n	800dd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dc8a:	9b04      	ldr	r3, [sp, #16]
 800dc8c:	6827      	ldr	r7, [r4, #0]
 800dc8e:	fb17 f703 	smulbb	r7, r7, r3
 800dc92:	9b02      	ldr	r3, [sp, #8]
 800dc94:	b2bf      	uxth	r7, r7
 800dc96:	18fa      	adds	r2, r7, r3
 800dc98:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800dc9c:	b212      	sxth	r2, r2
 800dc9e:	429a      	cmp	r2, r3
 800dca0:	db3c      	blt.n	800dd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dca2:	8970      	ldrh	r0, [r6, #10]
 800dca4:	4403      	add	r3, r0
 800dca6:	b21b      	sxth	r3, r3
 800dca8:	429a      	cmp	r2, r3
 800dcaa:	da37      	bge.n	800dd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dcac:	2300      	movs	r3, #0
 800dcae:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dcb0:	4630      	mov	r0, r6
 800dcb2:	ab0b      	add	r3, sp, #44	@ 0x2c
 800dcb4:	f7ff ff36 	bl	800db24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dcb8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800dcba:	b37a      	cbz	r2, 800dd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dcbc:	4552      	cmp	r2, sl
 800dcbe:	d02d      	beq.n	800dd1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dcc0:	4611      	mov	r1, r2
 800dcc2:	a80e      	add	r0, sp, #56	@ 0x38
 800dcc4:	9209      	str	r2, [sp, #36]	@ 0x24
 800dcc6:	f007 fd07 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcca:	9a06      	ldr	r2, [sp, #24]
 800dccc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800dcd0:	9b01      	ldr	r3, [sp, #4]
 800dcd2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800dcd6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800dcda:	4413      	add	r3, r2
 800dcdc:	f04f 0e02 	mov.w	lr, #2
 800dce0:	fb91 f1fe 	sdiv	r1, r1, lr
 800dce4:	4401      	add	r1, r0
 800dce6:	1a58      	subs	r0, r3, r1
 800dce8:	9a07      	ldr	r2, [sp, #28]
 800dcea:	9b02      	ldr	r3, [sp, #8]
 800dcec:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800dcf0:	fb9c fcfe 	sdiv	ip, ip, lr
 800dcf4:	4413      	add	r3, r2
 800dcf6:	448c      	add	ip, r1
 800dcf8:	eba3 030c 	sub.w	r3, r3, ip
 800dcfc:	435b      	muls	r3, r3
 800dcfe:	fb00 3300 	mla	r3, r0, r0, r3
 800dd02:	42ab      	cmp	r3, r5
 800dd04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800dd06:	d208      	bcs.n	800dd1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800dd08:	9803      	ldr	r0, [sp, #12]
 800dd0a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800dd0c:	6001      	str	r1, [r0, #0]
 800dd0e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800dd10:	9805      	ldr	r0, [sp, #20]
 800dd12:	8008      	strh	r0, [r1, #0]
 800dd14:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800dd16:	461d      	mov	r5, r3
 800dd18:	800f      	strh	r7, [r1, #0]
 800dd1a:	4692      	mov	sl, r2
 800dd1c:	f10b 0b01 	add.w	fp, fp, #1
 800dd20:	f1bb 0f04 	cmp.w	fp, #4
 800dd24:	f104 0408 	add.w	r4, r4, #8
 800dd28:	d19c      	bne.n	800dc64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800dd2a:	9b00      	ldr	r3, [sp, #0]
 800dd2c:	9c08      	ldr	r4, [sp, #32]
 800dd2e:	444b      	add	r3, r9
 800dd30:	4544      	cmp	r4, r8
 800dd32:	9300      	str	r3, [sp, #0]
 800dd34:	d187      	bne.n	800dc46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800dd36:	b021      	add	sp, #132	@ 0x84
 800dd38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd3c:	f04f 35ff 	mov.w	r5, #4294967295
 800dd40:	e766      	b.n	800dc10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800dd42:	bf00      	nop
 800dd44:	20013f60 	.word	0x20013f60
 800dd48:	08028d04 	.word	0x08028d04

0800dd4c <_ZN8touchgfx4RectaNERKS0_>:
 800dd4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dd50:	f9b1 7000 	ldrsh.w	r7, [r1]
 800dd54:	888c      	ldrh	r4, [r1, #4]
 800dd56:	f9b0 9000 	ldrsh.w	r9, [r0]
 800dd5a:	443c      	add	r4, r7
 800dd5c:	b2a4      	uxth	r4, r4
 800dd5e:	fa0f f884 	sxth.w	r8, r4
 800dd62:	45c1      	cmp	r9, r8
 800dd64:	da2f      	bge.n	800ddc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dd66:	8882      	ldrh	r2, [r0, #4]
 800dd68:	444a      	add	r2, r9
 800dd6a:	b292      	uxth	r2, r2
 800dd6c:	fa0f fe82 	sxth.w	lr, r2
 800dd70:	4577      	cmp	r7, lr
 800dd72:	da28      	bge.n	800ddc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dd74:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800dd78:	88cb      	ldrh	r3, [r1, #6]
 800dd7a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800dd7e:	442b      	add	r3, r5
 800dd80:	b21b      	sxth	r3, r3
 800dd82:	429e      	cmp	r6, r3
 800dd84:	da1f      	bge.n	800ddc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dd86:	88c3      	ldrh	r3, [r0, #6]
 800dd88:	4433      	add	r3, r6
 800dd8a:	b29b      	uxth	r3, r3
 800dd8c:	fa0f fc83 	sxth.w	ip, r3
 800dd90:	4565      	cmp	r5, ip
 800dd92:	da18      	bge.n	800ddc6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dd94:	454f      	cmp	r7, r9
 800dd96:	bfb8      	it	lt
 800dd98:	464f      	movlt	r7, r9
 800dd9a:	42b5      	cmp	r5, r6
 800dd9c:	bfb8      	it	lt
 800dd9e:	4635      	movlt	r5, r6
 800dda0:	45f0      	cmp	r8, lr
 800dda2:	bfd8      	it	le
 800dda4:	4622      	movle	r2, r4
 800dda6:	1bd2      	subs	r2, r2, r7
 800dda8:	8082      	strh	r2, [r0, #4]
 800ddaa:	884a      	ldrh	r2, [r1, #2]
 800ddac:	88c9      	ldrh	r1, [r1, #6]
 800ddae:	8007      	strh	r7, [r0, #0]
 800ddb0:	440a      	add	r2, r1
 800ddb2:	b292      	uxth	r2, r2
 800ddb4:	b211      	sxth	r1, r2
 800ddb6:	458c      	cmp	ip, r1
 800ddb8:	bfa8      	it	ge
 800ddba:	4613      	movge	r3, r2
 800ddbc:	1b5b      	subs	r3, r3, r5
 800ddbe:	80c3      	strh	r3, [r0, #6]
 800ddc0:	8045      	strh	r5, [r0, #2]
 800ddc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ddc6:	2300      	movs	r3, #0
 800ddc8:	8003      	strh	r3, [r0, #0]
 800ddca:	8043      	strh	r3, [r0, #2]
 800ddcc:	8083      	strh	r3, [r0, #4]
 800ddce:	80c3      	strh	r3, [r0, #6]
 800ddd0:	e7f7      	b.n	800ddc2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ddd2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ddd6:	2b00      	cmp	r3, #0
 800ddd8:	dd06      	ble.n	800dde8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ddda:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ddde:	2800      	cmp	r0, #0
 800dde0:	bfcc      	ite	gt
 800dde2:	2000      	movgt	r0, #0
 800dde4:	2001      	movle	r0, #1
 800dde6:	4770      	bx	lr
 800dde8:	2001      	movs	r0, #1
 800ddea:	4770      	bx	lr

0800ddec <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ddec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ddf0:	2300      	movs	r3, #0
 800ddf2:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800ddf4:	8003      	strh	r3, [r0, #0]
 800ddf6:	4604      	mov	r4, r0
 800ddf8:	8043      	strh	r3, [r0, #2]
 800ddfa:	8083      	strh	r3, [r0, #4]
 800ddfc:	80c3      	strh	r3, [r0, #6]
 800ddfe:	2d00      	cmp	r5, #0
 800de00:	d040      	beq.n	800de84 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800de02:	1d28      	adds	r0, r5, #4
 800de04:	f7ff ffe5 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de08:	b988      	cbnz	r0, 800de2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800de0a:	4620      	mov	r0, r4
 800de0c:	f7ff ffe1 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800de10:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800de14:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800de18:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800de1c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800de20:	b138      	cbz	r0, 800de32 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800de22:	8022      	strh	r2, [r4, #0]
 800de24:	8063      	strh	r3, [r4, #2]
 800de26:	f8a4 e004 	strh.w	lr, [r4, #4]
 800de2a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800de2e:	69ad      	ldr	r5, [r5, #24]
 800de30:	e7e5      	b.n	800ddfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800de32:	f9b4 0000 	ldrsh.w	r0, [r4]
 800de36:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800de3a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800de3e:	4290      	cmp	r0, r2
 800de40:	4607      	mov	r7, r0
 800de42:	bfa8      	it	ge
 800de44:	4617      	movge	r7, r2
 800de46:	4472      	add	r2, lr
 800de48:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800de4c:	8027      	strh	r7, [r4, #0]
 800de4e:	4299      	cmp	r1, r3
 800de50:	460e      	mov	r6, r1
 800de52:	4440      	add	r0, r8
 800de54:	bfa8      	it	ge
 800de56:	461e      	movge	r6, r3
 800de58:	4471      	add	r1, lr
 800de5a:	4463      	add	r3, ip
 800de5c:	b200      	sxth	r0, r0
 800de5e:	b212      	sxth	r2, r2
 800de60:	b209      	sxth	r1, r1
 800de62:	b21b      	sxth	r3, r3
 800de64:	4290      	cmp	r0, r2
 800de66:	bfac      	ite	ge
 800de68:	ebc7 0200 	rsbge	r2, r7, r0
 800de6c:	ebc7 0202 	rsblt	r2, r7, r2
 800de70:	4299      	cmp	r1, r3
 800de72:	bfac      	ite	ge
 800de74:	ebc6 0301 	rsbge	r3, r6, r1
 800de78:	ebc6 0303 	rsblt	r3, r6, r3
 800de7c:	8066      	strh	r6, [r4, #2]
 800de7e:	80a2      	strh	r2, [r4, #4]
 800de80:	80e3      	strh	r3, [r4, #6]
 800de82:	e7d4      	b.n	800de2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800de84:	4620      	mov	r0, r4
 800de86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800de8a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800de8a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800de8e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800de92:	b383      	cbz	r3, 800def6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800de94:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800de96:	b374      	cbz	r4, 800def6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800de98:	f9b1 5000 	ldrsh.w	r5, [r1]
 800de9c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800dea0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800dea4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800dea8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800deac:	b303      	cbz	r3, 800def0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800deae:	4668      	mov	r0, sp
 800deb0:	1d21      	adds	r1, r4, #4
 800deb2:	f8ad 5000 	strh.w	r5, [sp]
 800deb6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800deba:	f8ad 7004 	strh.w	r7, [sp, #4]
 800debe:	f8ad 8006 	strh.w	r8, [sp, #6]
 800dec2:	f7ff ff43 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 800dec6:	4668      	mov	r0, sp
 800dec8:	f7ff ff83 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800decc:	b980      	cbnz	r0, 800def0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800dece:	f8bd 3000 	ldrh.w	r3, [sp]
 800ded2:	88a2      	ldrh	r2, [r4, #4]
 800ded4:	1a9b      	subs	r3, r3, r2
 800ded6:	f8ad 3000 	strh.w	r3, [sp]
 800deda:	88e2      	ldrh	r2, [r4, #6]
 800dedc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800dee0:	1a9b      	subs	r3, r3, r2
 800dee2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800dee6:	6823      	ldr	r3, [r4, #0]
 800dee8:	4669      	mov	r1, sp
 800deea:	689b      	ldr	r3, [r3, #8]
 800deec:	4620      	mov	r0, r4
 800deee:	4798      	blx	r3
 800def0:	69a4      	ldr	r4, [r4, #24]
 800def2:	2c00      	cmp	r4, #0
 800def4:	d1d8      	bne.n	800dea8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800def6:	b002      	add	sp, #8
 800def8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800defc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800defc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800defe:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800df02:	460d      	mov	r5, r1
 800df04:	4616      	mov	r6, r2
 800df06:	b323      	cbz	r3, 800df52 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800df08:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800df0a:	b314      	cbz	r4, 800df52 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800df0c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800df10:	b1eb      	cbz	r3, 800df4e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800df12:	6828      	ldr	r0, [r5, #0]
 800df14:	6869      	ldr	r1, [r5, #4]
 800df16:	466b      	mov	r3, sp
 800df18:	c303      	stmia	r3!, {r0, r1}
 800df1a:	4668      	mov	r0, sp
 800df1c:	1d21      	adds	r1, r4, #4
 800df1e:	f7ff ff15 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 800df22:	4668      	mov	r0, sp
 800df24:	f7ff ff55 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800df28:	b988      	cbnz	r0, 800df4e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800df2a:	f8bd 3000 	ldrh.w	r3, [sp]
 800df2e:	88a2      	ldrh	r2, [r4, #4]
 800df30:	1a9b      	subs	r3, r3, r2
 800df32:	f8ad 3000 	strh.w	r3, [sp]
 800df36:	88e2      	ldrh	r2, [r4, #6]
 800df38:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800df3c:	1a9b      	subs	r3, r3, r2
 800df3e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800df42:	6823      	ldr	r3, [r4, #0]
 800df44:	4632      	mov	r2, r6
 800df46:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800df48:	4669      	mov	r1, sp
 800df4a:	4620      	mov	r0, r4
 800df4c:	4798      	blx	r3
 800df4e:	69a4      	ldr	r4, [r4, #24]
 800df50:	e7db      	b.n	800df0a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800df52:	b002      	add	sp, #8
 800df54:	bd70      	pop	{r4, r5, r6, pc}

0800df56 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800df56:	b513      	push	{r0, r1, r4, lr}
 800df58:	6803      	ldr	r3, [r0, #0]
 800df5a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800df5e:	2300      	movs	r3, #0
 800df60:	e9cd 3300 	strd	r3, r3, [sp]
 800df64:	466b      	mov	r3, sp
 800df66:	47a0      	blx	r4
 800df68:	b002      	add	sp, #8
 800df6a:	bd10      	pop	{r4, pc}

0800df6c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800df6c:	2301      	movs	r3, #1
 800df6e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800df72:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800df76:	4770      	bx	lr

0800df78 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800df78:	2301      	movs	r3, #1
 800df7a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800df7e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800df82:	4770      	bx	lr

0800df84 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800df84:	6843      	ldr	r3, [r0, #4]
 800df86:	2201      	movs	r2, #1
 800df88:	725a      	strb	r2, [r3, #9]
 800df8a:	6840      	ldr	r0, [r0, #4]
 800df8c:	6803      	ldr	r3, [r0, #0]
 800df8e:	691b      	ldr	r3, [r3, #16]
 800df90:	4718      	bx	r3

0800df92 <_ZN8touchgfx3HAL8flushDMAEv>:
 800df92:	6840      	ldr	r0, [r0, #4]
 800df94:	6803      	ldr	r3, [r0, #0]
 800df96:	689b      	ldr	r3, [r3, #8]
 800df98:	4718      	bx	r3

0800df9a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800df9a:	b530      	push	{r4, r5, lr}
 800df9c:	b08b      	sub	sp, #44	@ 0x2c
 800df9e:	6804      	ldr	r4, [r0, #0]
 800dfa0:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800dfa4:	9509      	str	r5, [sp, #36]	@ 0x24
 800dfa6:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800dfaa:	9508      	str	r5, [sp, #32]
 800dfac:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800dfb0:	9507      	str	r5, [sp, #28]
 800dfb2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800dfb6:	9506      	str	r5, [sp, #24]
 800dfb8:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800dfbc:	9505      	str	r5, [sp, #20]
 800dfbe:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800dfc2:	9504      	str	r5, [sp, #16]
 800dfc4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800dfc8:	9503      	str	r5, [sp, #12]
 800dfca:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800dfce:	9502      	str	r5, [sp, #8]
 800dfd0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800dfd4:	e9cd 3500 	strd	r3, r5, [sp]
 800dfd8:	4613      	mov	r3, r2
 800dfda:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800dfdc:	2200      	movs	r2, #0
 800dfde:	47a0      	blx	r4
 800dfe0:	b00b      	add	sp, #44	@ 0x2c
 800dfe2:	bd30      	pop	{r4, r5, pc}

0800dfe4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800dfe4:	4b04      	ldr	r3, [pc, #16]	@ (800dff8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800dfe6:	781b      	ldrb	r3, [r3, #0]
 800dfe8:	b123      	cbz	r3, 800dff4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800dfea:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800dfee:	f080 0001 	eor.w	r0, r0, #1
 800dff2:	4770      	bx	lr
 800dff4:	2001      	movs	r0, #1
 800dff6:	4770      	bx	lr
 800dff8:	20013f5e 	.word	0x20013f5e

0800dffc <_ZN8touchgfx3HAL8endFrameEv>:
 800dffc:	b510      	push	{r4, lr}
 800dffe:	4604      	mov	r4, r0
 800e000:	6840      	ldr	r0, [r0, #4]
 800e002:	6803      	ldr	r3, [r0, #0]
 800e004:	689b      	ldr	r3, [r3, #8]
 800e006:	4798      	blx	r3
 800e008:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800e00c:	b113      	cbz	r3, 800e014 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800e00e:	2301      	movs	r3, #1
 800e010:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800e014:	bd10      	pop	{r4, pc}

0800e016 <_ZN8touchgfx3HAL10initializeEv>:
 800e016:	b510      	push	{r4, lr}
 800e018:	4604      	mov	r4, r0
 800e01a:	f7f2 fd75 	bl	8000b08 <_ZN8touchgfx10OSWrappers10initializeEv>
 800e01e:	f7f2 fc81 	bl	8000924 <_ZN8touchgfx4GPIO4initEv>
 800e022:	6860      	ldr	r0, [r4, #4]
 800e024:	6803      	ldr	r3, [r0, #0]
 800e026:	68db      	ldr	r3, [r3, #12]
 800e028:	4798      	blx	r3
 800e02a:	68e0      	ldr	r0, [r4, #12]
 800e02c:	6803      	ldr	r3, [r0, #0]
 800e02e:	689b      	ldr	r3, [r3, #8]
 800e030:	4798      	blx	r3
 800e032:	6823      	ldr	r3, [r4, #0]
 800e034:	4620      	mov	r0, r4
 800e036:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800e038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e03c:	4718      	bx	r3
	...

0800e040 <_ZN8touchgfx3HAL4tickEv>:
 800e040:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e042:	6803      	ldr	r3, [r0, #0]
 800e044:	4d5b      	ldr	r5, [pc, #364]	@ (800e1b4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800e046:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800e04a:	4604      	mov	r4, r0
 800e04c:	4798      	blx	r3
 800e04e:	2800      	cmp	r0, #0
 800e050:	f000 8095 	beq.w	800e17e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800e054:	2001      	movs	r0, #1
 800e056:	f7f2 fbe3 	bl	8000820 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800e05a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800e05e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800e062:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800e066:	2600      	movs	r6, #0
 800e068:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800e06c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800e070:	b133      	cbz	r3, 800e080 <_ZN8touchgfx3HAL4tickEv+0x40>
 800e072:	6823      	ldr	r3, [r4, #0]
 800e074:	4620      	mov	r0, r4
 800e076:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800e07a:	4798      	blx	r3
 800e07c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800e080:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800e084:	6862      	ldr	r2, [r4, #4]
 800e086:	f083 0301 	eor.w	r3, r3, #1
 800e08a:	7253      	strb	r3, [r2, #9]
 800e08c:	2601      	movs	r6, #1
 800e08e:	702e      	strb	r6, [r5, #0]
 800e090:	f006 f9e8 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
 800e094:	6803      	ldr	r3, [r0, #0]
 800e096:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e098:	4798      	blx	r3
 800e09a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800e09e:	b90b      	cbnz	r3, 800e0a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800e0a0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800e0a4:	f006 f9de 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
 800e0a8:	6803      	ldr	r3, [r0, #0]
 800e0aa:	695b      	ldr	r3, [r3, #20]
 800e0ac:	4798      	blx	r3
 800e0ae:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800e0b0:	6803      	ldr	r3, [r0, #0]
 800e0b2:	691b      	ldr	r3, [r3, #16]
 800e0b4:	4798      	blx	r3
 800e0b6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800e0ba:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800e0be:	3b01      	subs	r3, #1
 800e0c0:	b2db      	uxtb	r3, r3
 800e0c2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800e0c6:	b10a      	cbz	r2, 800e0cc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800e0c8:	2b00      	cmp	r3, #0
 800e0ca:	d1eb      	bne.n	800e0a4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800e0cc:	4a3a      	ldr	r2, [pc, #232]	@ (800e1b8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800e0ce:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800e0d2:	7813      	ldrb	r3, [r2, #0]
 800e0d4:	3301      	adds	r3, #1
 800e0d6:	b25b      	sxtb	r3, r3
 800e0d8:	4299      	cmp	r1, r3
 800e0da:	7013      	strb	r3, [r2, #0]
 800e0dc:	dc10      	bgt.n	800e100 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e0de:	68e0      	ldr	r0, [r4, #12]
 800e0e0:	2300      	movs	r3, #0
 800e0e2:	7013      	strb	r3, [r2, #0]
 800e0e4:	6803      	ldr	r3, [r0, #0]
 800e0e6:	aa03      	add	r2, sp, #12
 800e0e8:	68db      	ldr	r3, [r3, #12]
 800e0ea:	a902      	add	r1, sp, #8
 800e0ec:	4798      	blx	r3
 800e0ee:	6823      	ldr	r3, [r4, #0]
 800e0f0:	2800      	cmp	r0, #0
 800e0f2:	d050      	beq.n	800e196 <_ZN8touchgfx3HAL4tickEv+0x156>
 800e0f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800e0f8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800e0fc:	4620      	mov	r0, r4
 800e0fe:	4798      	blx	r3
 800e100:	6960      	ldr	r0, [r4, #20]
 800e102:	2300      	movs	r3, #0
 800e104:	f88d 3007 	strb.w	r3, [sp, #7]
 800e108:	b158      	cbz	r0, 800e122 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e10a:	6803      	ldr	r3, [r0, #0]
 800e10c:	f10d 0107 	add.w	r1, sp, #7
 800e110:	68db      	ldr	r3, [r3, #12]
 800e112:	4798      	blx	r3
 800e114:	b128      	cbz	r0, 800e122 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e116:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800e118:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e11c:	6803      	ldr	r3, [r0, #0]
 800e11e:	68db      	ldr	r3, [r3, #12]
 800e120:	4798      	blx	r3
 800e122:	f104 001c 	add.w	r0, r4, #28
 800e126:	f018 f855 	bl	80261d4 <_ZN8touchgfx8Gestures4tickEv>
 800e12a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800e12e:	b30b      	cbz	r3, 800e174 <_ZN8touchgfx3HAL4tickEv+0x134>
 800e130:	6920      	ldr	r0, [r4, #16]
 800e132:	6803      	ldr	r3, [r0, #0]
 800e134:	691b      	ldr	r3, [r3, #16]
 800e136:	4798      	blx	r3
 800e138:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e13a:	4606      	mov	r6, r0
 800e13c:	b903      	cbnz	r3, 800e140 <_ZN8touchgfx3HAL4tickEv+0x100>
 800e13e:	6760      	str	r0, [r4, #116]	@ 0x74
 800e140:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e142:	4a1e      	ldr	r2, [pc, #120]	@ (800e1bc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800e144:	1af3      	subs	r3, r6, r3
 800e146:	4293      	cmp	r3, r2
 800e148:	d914      	bls.n	800e174 <_ZN8touchgfx3HAL4tickEv+0x134>
 800e14a:	6920      	ldr	r0, [r4, #16]
 800e14c:	6803      	ldr	r3, [r0, #0]
 800e14e:	699b      	ldr	r3, [r3, #24]
 800e150:	4798      	blx	r3
 800e152:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e154:	2264      	movs	r2, #100	@ 0x64
 800e156:	1af3      	subs	r3, r6, r3
 800e158:	fbb3 f3f2 	udiv	r3, r3, r2
 800e15c:	fbb0 f0f3 	udiv	r0, r0, r3
 800e160:	2800      	cmp	r0, #0
 800e162:	dc1d      	bgt.n	800e1a0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800e164:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800e168:	6920      	ldr	r0, [r4, #16]
 800e16a:	6803      	ldr	r3, [r0, #0]
 800e16c:	2100      	movs	r1, #0
 800e16e:	69db      	ldr	r3, [r3, #28]
 800e170:	4798      	blx	r3
 800e172:	6766      	str	r6, [r4, #116]	@ 0x74
 800e174:	f006 f976 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
 800e178:	6803      	ldr	r3, [r0, #0]
 800e17a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e17c:	4798      	blx	r3
 800e17e:	6823      	ldr	r3, [r4, #0]
 800e180:	4620      	mov	r0, r4
 800e182:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800e186:	4798      	blx	r3
 800e188:	2001      	movs	r0, #1
 800e18a:	f7f2 fb73 	bl	8000874 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800e18e:	2300      	movs	r3, #0
 800e190:	702b      	strb	r3, [r5, #0]
 800e192:	b004      	add	sp, #16
 800e194:	bd70      	pop	{r4, r5, r6, pc}
 800e196:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800e19a:	4620      	mov	r0, r4
 800e19c:	4798      	blx	r3
 800e19e:	e7af      	b.n	800e100 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e1a0:	2863      	cmp	r0, #99	@ 0x63
 800e1a2:	bfcb      	itete	gt
 800e1a4:	2300      	movgt	r3, #0
 800e1a6:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800e1aa:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800e1ae:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800e1b2:	e7d9      	b.n	800e168 <_ZN8touchgfx3HAL4tickEv+0x128>
 800e1b4:	20013f64 	.word	0x20013f64
 800e1b8:	20013f65 	.word	0x20013f65
 800e1bc:	05f5e100 	.word	0x05f5e100

0800e1c0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800e1c0:	b510      	push	{r4, lr}
 800e1c2:	4604      	mov	r4, r0
 800e1c4:	f7f2 fcd0 	bl	8000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800e1c8:	6863      	ldr	r3, [r4, #4]
 800e1ca:	2200      	movs	r2, #0
 800e1cc:	729a      	strb	r2, [r3, #10]
 800e1ce:	bd10      	pop	{r4, pc}

0800e1d0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800e1d0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800e1d2:	301c      	adds	r0, #28
 800e1d4:	f017 bffc 	b.w	80261d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800e1d8 <_ZN8touchgfx3HAL5touchEll>:
 800e1d8:	b530      	push	{r4, r5, lr}
 800e1da:	b087      	sub	sp, #28
 800e1dc:	4604      	mov	r4, r0
 800e1de:	a804      	add	r0, sp, #16
 800e1e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800e1e4:	f005 ff26 	bl	8014034 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800e1e8:	9b04      	ldr	r3, [sp, #16]
 800e1ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e1ee:	a906      	add	r1, sp, #24
 800e1f0:	9b05      	ldr	r3, [sp, #20]
 800e1f2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800e1f6:	a803      	add	r0, sp, #12
 800e1f8:	f005 ff6e 	bl	80140d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800e1fc:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800e200:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e204:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800e208:	f104 001c 	add.w	r0, r4, #28
 800e20c:	b189      	cbz	r1, 800e232 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800e20e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800e212:	9300      	str	r3, [sp, #0]
 800e214:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800e218:	4613      	mov	r3, r2
 800e21a:	462a      	mov	r2, r5
 800e21c:	f017 ffe8 	bl	80261f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800e220:	b128      	cbz	r0, 800e22e <_ZN8touchgfx3HAL5touchEll+0x56>
 800e222:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800e226:	6623      	str	r3, [r4, #96]	@ 0x60
 800e228:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e22c:	6663      	str	r3, [r4, #100]	@ 0x64
 800e22e:	b007      	add	sp, #28
 800e230:	bd30      	pop	{r4, r5, pc}
 800e232:	f018 f81d 	bl	8026270 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800e236:	2301      	movs	r3, #1
 800e238:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800e23c:	e7f1      	b.n	800e222 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800e23e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800e23e:	b510      	push	{r4, lr}
 800e240:	2b00      	cmp	r3, #0
 800e242:	d046      	beq.n	800e2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e244:	ea81 0002 	eor.w	r0, r1, r2
 800e248:	07c4      	lsls	r4, r0, #31
 800e24a:	d508      	bpl.n	800e25e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800e24c:	440b      	add	r3, r1
 800e24e:	3a01      	subs	r2, #1
 800e250:	428b      	cmp	r3, r1
 800e252:	d93e      	bls.n	800e2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e254:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e258:	f801 0b01 	strb.w	r0, [r1], #1
 800e25c:	e7f8      	b.n	800e250 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800e25e:	07d0      	lsls	r0, r2, #31
 800e260:	bf42      	ittt	mi
 800e262:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800e266:	f801 0b01 	strbmi.w	r0, [r1], #1
 800e26a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800e26e:	2b01      	cmp	r3, #1
 800e270:	d911      	bls.n	800e296 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e272:	ea81 0402 	eor.w	r4, r1, r2
 800e276:	07a4      	lsls	r4, r4, #30
 800e278:	4610      	mov	r0, r2
 800e27a:	d022      	beq.n	800e2c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800e27c:	f023 0401 	bic.w	r4, r3, #1
 800e280:	440c      	add	r4, r1
 800e282:	428c      	cmp	r4, r1
 800e284:	4602      	mov	r2, r0
 800e286:	d904      	bls.n	800e292 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800e288:	8812      	ldrh	r2, [r2, #0]
 800e28a:	f821 2b02 	strh.w	r2, [r1], #2
 800e28e:	3002      	adds	r0, #2
 800e290:	e7f7      	b.n	800e282 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800e292:	f003 0301 	and.w	r3, r3, #1
 800e296:	f023 0003 	bic.w	r0, r3, #3
 800e29a:	4408      	add	r0, r1
 800e29c:	4288      	cmp	r0, r1
 800e29e:	4614      	mov	r4, r2
 800e2a0:	d904      	bls.n	800e2ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800e2a2:	6824      	ldr	r4, [r4, #0]
 800e2a4:	f841 4b04 	str.w	r4, [r1], #4
 800e2a8:	3204      	adds	r2, #4
 800e2aa:	e7f7      	b.n	800e29c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800e2ac:	f003 0303 	and.w	r3, r3, #3
 800e2b0:	440b      	add	r3, r1
 800e2b2:	3a01      	subs	r2, #1
 800e2b4:	428b      	cmp	r3, r1
 800e2b6:	d90c      	bls.n	800e2d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e2b8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e2bc:	f801 0b01 	strb.w	r0, [r1], #1
 800e2c0:	e7f8      	b.n	800e2b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800e2c2:	0790      	lsls	r0, r2, #30
 800e2c4:	d0e7      	beq.n	800e296 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e2c6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800e2ca:	f821 0b02 	strh.w	r0, [r1], #2
 800e2ce:	3b02      	subs	r3, #2
 800e2d0:	e7e1      	b.n	800e296 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e2d2:	2001      	movs	r0, #1
 800e2d4:	bd10      	pop	{r4, pc}

0800e2d6 <_ZN8touchgfx3HAL7noTouchEv>:
 800e2d6:	b510      	push	{r4, lr}
 800e2d8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800e2dc:	4604      	mov	r4, r0
 800e2de:	b153      	cbz	r3, 800e2f6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800e2e0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800e2e4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800e2e8:	2101      	movs	r1, #1
 800e2ea:	301c      	adds	r0, #28
 800e2ec:	f017 ffc0 	bl	8026270 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800e2f0:	2300      	movs	r3, #0
 800e2f2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800e2f6:	bd10      	pop	{r4, pc}

0800e2f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800e2f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e2fc:	b085      	sub	sp, #20
 800e2fe:	ad04      	add	r5, sp, #16
 800e300:	4604      	mov	r4, r0
 800e302:	2000      	movs	r0, #0
 800e304:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e308:	69a0      	ldr	r0, [r4, #24]
 800e30a:	6806      	ldr	r6, [r0, #0]
 800e30c:	9501      	str	r5, [sp, #4]
 800e30e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800e312:	9500      	str	r5, [sp, #0]
 800e314:	6835      	ldr	r5, [r6, #0]
 800e316:	4699      	mov	r9, r3
 800e318:	460f      	mov	r7, r1
 800e31a:	4690      	mov	r8, r2
 800e31c:	47a8      	blx	r5
 800e31e:	4d10      	ldr	r5, [pc, #64]	@ (800e360 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800e320:	4606      	mov	r6, r0
 800e322:	f8a5 9000 	strh.w	r9, [r5]
 800e326:	f7f5 f93f 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e32a:	6803      	ldr	r3, [r0, #0]
 800e32c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e32e:	4798      	blx	r3
 800e330:	b128      	cbz	r0, 800e33e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800e332:	2801      	cmp	r0, #1
 800e334:	d00b      	beq.n	800e34e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800e336:	4630      	mov	r0, r6
 800e338:	b005      	add	sp, #20
 800e33a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e33e:	882b      	ldrh	r3, [r5, #0]
 800e340:	fb08 7203 	mla	r2, r8, r3, r7
 800e344:	9b03      	ldr	r3, [sp, #12]
 800e346:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800e34a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800e34c:	e7f3      	b.n	800e336 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800e34e:	882a      	ldrh	r2, [r5, #0]
 800e350:	9b03      	ldr	r3, [sp, #12]
 800e352:	fb08 7202 	mla	r2, r8, r2, r7
 800e356:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e35a:	1a9a      	subs	r2, r3, r2
 800e35c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800e35e:	e7ea      	b.n	800e336 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800e360:	20013f5a 	.word	0x20013f5a

0800e364 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800e364:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e366:	b08b      	sub	sp, #44	@ 0x2c
 800e368:	4617      	mov	r7, r2
 800e36a:	4604      	mov	r4, r0
 800e36c:	460e      	mov	r6, r1
 800e36e:	461d      	mov	r5, r3
 800e370:	f7f5 f91a 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e374:	6803      	ldr	r3, [r0, #0]
 800e376:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e378:	4798      	blx	r3
 800e37a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800e37e:	9007      	str	r0, [sp, #28]
 800e380:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800e384:	4b0d      	ldr	r3, [pc, #52]	@ (800e3bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800e386:	6822      	ldr	r2, [r4, #0]
 800e388:	881b      	ldrh	r3, [r3, #0]
 800e38a:	9306      	str	r3, [sp, #24]
 800e38c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e390:	9305      	str	r3, [sp, #20]
 800e392:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800e396:	9304      	str	r3, [sp, #16]
 800e398:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e39c:	9303      	str	r3, [sp, #12]
 800e39e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e3a2:	9302      	str	r3, [sp, #8]
 800e3a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e3a8:	e9cd 5300 	strd	r5, r3, [sp]
 800e3ac:	4631      	mov	r1, r6
 800e3ae:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800e3b0:	463b      	mov	r3, r7
 800e3b2:	2200      	movs	r2, #0
 800e3b4:	4620      	mov	r0, r4
 800e3b6:	47a8      	blx	r5
 800e3b8:	b00b      	add	sp, #44	@ 0x2c
 800e3ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e3bc:	20013f5a 	.word	0x20013f5a

0800e3c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800e3c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e3c4:	4698      	mov	r8, r3
 800e3c6:	6803      	ldr	r3, [r0, #0]
 800e3c8:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800e3ca:	4b15      	ldr	r3, [pc, #84]	@ (800e420 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800e3cc:	b08b      	sub	sp, #44	@ 0x2c
 800e3ce:	4617      	mov	r7, r2
 800e3d0:	f8b3 9000 	ldrh.w	r9, [r3]
 800e3d4:	460e      	mov	r6, r1
 800e3d6:	4604      	mov	r4, r0
 800e3d8:	f7f5 f8e6 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e3dc:	6803      	ldr	r3, [r0, #0]
 800e3de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e3e0:	4798      	blx	r3
 800e3e2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800e3e6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800e3ea:	2302      	movs	r3, #2
 800e3ec:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800e3f0:	2301      	movs	r3, #1
 800e3f2:	9305      	str	r3, [sp, #20]
 800e3f4:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800e3f8:	9304      	str	r3, [sp, #16]
 800e3fa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800e3fe:	9303      	str	r3, [sp, #12]
 800e400:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e404:	9302      	str	r3, [sp, #8]
 800e406:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e40a:	2200      	movs	r2, #0
 800e40c:	e9cd 8300 	strd	r8, r3, [sp]
 800e410:	4631      	mov	r1, r6
 800e412:	463b      	mov	r3, r7
 800e414:	4620      	mov	r0, r4
 800e416:	47a8      	blx	r5
 800e418:	b00b      	add	sp, #44	@ 0x2c
 800e41a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e41e:	bf00      	nop
 800e420:	20013f5a 	.word	0x20013f5a

0800e424 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800e424:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e428:	4698      	mov	r8, r3
 800e42a:	6803      	ldr	r3, [r0, #0]
 800e42c:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800e42e:	4b11      	ldr	r3, [pc, #68]	@ (800e474 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800e430:	b087      	sub	sp, #28
 800e432:	f8b3 9000 	ldrh.w	r9, [r3]
 800e436:	460e      	mov	r6, r1
 800e438:	4617      	mov	r7, r2
 800e43a:	4604      	mov	r4, r0
 800e43c:	f7f5 f8b4 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e440:	6803      	ldr	r3, [r0, #0]
 800e442:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e444:	4798      	blx	r3
 800e446:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800e44a:	f8cd 900c 	str.w	r9, [sp, #12]
 800e44e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800e452:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800e456:	9302      	str	r3, [sp, #8]
 800e458:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800e45c:	9301      	str	r3, [sp, #4]
 800e45e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e462:	9300      	str	r3, [sp, #0]
 800e464:	463a      	mov	r2, r7
 800e466:	4643      	mov	r3, r8
 800e468:	4631      	mov	r1, r6
 800e46a:	4620      	mov	r0, r4
 800e46c:	47a8      	blx	r5
 800e46e:	b007      	add	sp, #28
 800e470:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e474:	20013f5a 	.word	0x20013f5a

0800e478 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800e478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e47c:	4604      	mov	r4, r0
 800e47e:	b08f      	sub	sp, #60	@ 0x3c
 800e480:	4610      	mov	r0, r2
 800e482:	460d      	mov	r5, r1
 800e484:	4691      	mov	r9, r2
 800e486:	461e      	mov	r6, r3
 800e488:	f009 fbe8 	bl	8017c5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800e48c:	2800      	cmp	r0, #0
 800e48e:	f000 809d 	beq.w	800e5cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800e492:	6823      	ldr	r3, [r4, #0]
 800e494:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800e630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800e498:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e49a:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800e634 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800e49e:	4f61      	ldr	r7, [pc, #388]	@ (800e624 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e4a0:	4620      	mov	r0, r4
 800e4a2:	4798      	blx	r3
 800e4a4:	6823      	ldr	r3, [r4, #0]
 800e4a6:	4620      	mov	r0, r4
 800e4a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4aa:	4798      	blx	r3
 800e4ac:	f8bb 3000 	ldrh.w	r3, [fp]
 800e4b0:	9301      	str	r3, [sp, #4]
 800e4b2:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800e4b6:	f8ba 3000 	ldrh.w	r3, [sl]
 800e4ba:	9302      	str	r3, [sp, #8]
 800e4bc:	883b      	ldrh	r3, [r7, #0]
 800e4be:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800e4c2:	9303      	str	r3, [sp, #12]
 800e4c4:	4b58      	ldr	r3, [pc, #352]	@ (800e628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e4c6:	9305      	str	r3, [sp, #20]
 800e4c8:	881a      	ldrh	r2, [r3, #0]
 800e4ca:	9204      	str	r2, [sp, #16]
 800e4cc:	4640      	mov	r0, r8
 800e4ce:	f009 fc59 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e4d2:	8038      	strh	r0, [r7, #0]
 800e4d4:	4640      	mov	r0, r8
 800e4d6:	f009 fc89 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e4da:	9b05      	ldr	r3, [sp, #20]
 800e4dc:	b280      	uxth	r0, r0
 800e4de:	8018      	strh	r0, [r3, #0]
 800e4e0:	4b52      	ldr	r3, [pc, #328]	@ (800e62c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800e4e2:	781b      	ldrb	r3, [r3, #0]
 800e4e4:	2b00      	cmp	r3, #0
 800e4e6:	d174      	bne.n	800e5d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800e4e8:	883b      	ldrh	r3, [r7, #0]
 800e4ea:	f8ab 3000 	strh.w	r3, [fp]
 800e4ee:	f8aa 0000 	strh.w	r0, [sl]
 800e4f2:	4648      	mov	r0, r9
 800e4f4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800e4f8:	f009 fbb0 	bl	8017c5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800e4fc:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800e500:	2200      	movs	r2, #0
 800e502:	4611      	mov	r1, r2
 800e504:	4628      	mov	r0, r5
 800e506:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800e50a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800e50e:	f7f4 f8fc 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800e512:	2301      	movs	r3, #1
 800e514:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800e518:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800e51c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800e520:	2b00      	cmp	r3, #0
 800e522:	dd5c      	ble.n	800e5de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800e524:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800e528:	2b00      	cmp	r3, #0
 800e52a:	dd58      	ble.n	800e5de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800e52c:	462a      	mov	r2, r5
 800e52e:	ab0a      	add	r3, sp, #40	@ 0x28
 800e530:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e534:	6851      	ldr	r1, [r2, #4]
 800e536:	c303      	stmia	r3!, {r0, r1}
 800e538:	4631      	mov	r1, r6
 800e53a:	a80a      	add	r0, sp, #40	@ 0x28
 800e53c:	f7ff fc06 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 800e540:	4b38      	ldr	r3, [pc, #224]	@ (800e624 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e542:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e546:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800e54a:	2100      	movs	r1, #0
 800e54c:	aa0a      	add	r2, sp, #40	@ 0x28
 800e54e:	4b36      	ldr	r3, [pc, #216]	@ (800e628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e550:	910c      	str	r1, [sp, #48]	@ 0x30
 800e552:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e556:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e55a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e55e:	ab08      	add	r3, sp, #32
 800e560:	e883 0003 	stmia.w	r3, {r0, r1}
 800e564:	4618      	mov	r0, r3
 800e566:	a90c      	add	r1, sp, #48	@ 0x30
 800e568:	f7ff fbf0 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 800e56c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800e56e:	2b00      	cmp	r3, #0
 800e570:	d13c      	bne.n	800e5ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800e572:	2000      	movs	r0, #0
 800e574:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800e578:	2600      	movs	r6, #0
 800e57a:	682a      	ldr	r2, [r5, #0]
 800e57c:	696b      	ldr	r3, [r5, #20]
 800e57e:	616e      	str	r6, [r5, #20]
 800e580:	9305      	str	r3, [sp, #20]
 800e582:	6892      	ldr	r2, [r2, #8]
 800e584:	a908      	add	r1, sp, #32
 800e586:	4628      	mov	r0, r5
 800e588:	4790      	blx	r2
 800e58a:	9b05      	ldr	r3, [sp, #20]
 800e58c:	616b      	str	r3, [r5, #20]
 800e58e:	4652      	mov	r2, sl
 800e590:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800e594:	4649      	mov	r1, r9
 800e596:	4628      	mov	r0, r5
 800e598:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800e59c:	f7f4 f8b5 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 800e5a0:	4b23      	ldr	r3, [pc, #140]	@ (800e630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800e5a2:	9a01      	ldr	r2, [sp, #4]
 800e5a4:	801a      	strh	r2, [r3, #0]
 800e5a6:	4b23      	ldr	r3, [pc, #140]	@ (800e634 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800e5a8:	9a02      	ldr	r2, [sp, #8]
 800e5aa:	801a      	strh	r2, [r3, #0]
 800e5ac:	4b1d      	ldr	r3, [pc, #116]	@ (800e624 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e5ae:	9a03      	ldr	r2, [sp, #12]
 800e5b0:	801a      	strh	r2, [r3, #0]
 800e5b2:	4b1d      	ldr	r3, [pc, #116]	@ (800e628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e5b4:	9a04      	ldr	r2, [sp, #16]
 800e5b6:	801a      	strh	r2, [r3, #0]
 800e5b8:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800e5bc:	6823      	ldr	r3, [r4, #0]
 800e5be:	4620      	mov	r0, r4
 800e5c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e5c2:	4798      	blx	r3
 800e5c4:	6823      	ldr	r3, [r4, #0]
 800e5c6:	4620      	mov	r0, r4
 800e5c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e5ca:	4798      	blx	r3
 800e5cc:	b00f      	add	sp, #60	@ 0x3c
 800e5ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5d2:	883b      	ldrh	r3, [r7, #0]
 800e5d4:	f8ab 0000 	strh.w	r0, [fp]
 800e5d8:	f8aa 3000 	strh.w	r3, [sl]
 800e5dc:	e789      	b.n	800e4f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800e5de:	462a      	mov	r2, r5
 800e5e0:	ab0a      	add	r3, sp, #40	@ 0x28
 800e5e2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e5e6:	6851      	ldr	r1, [r2, #4]
 800e5e8:	c303      	stmia	r3!, {r0, r1}
 800e5ea:	e7a9      	b.n	800e540 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800e5ec:	a807      	add	r0, sp, #28
 800e5ee:	f009 fd3f 	bl	8018070 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e5f2:	4606      	mov	r6, r0
 800e5f4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800e5f6:	6803      	ldr	r3, [r0, #0]
 800e5f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e5fa:	4798      	blx	r3
 800e5fc:	4286      	cmp	r6, r0
 800e5fe:	d1b8      	bne.n	800e572 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800e600:	f7f4 ffd2 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e604:	6803      	ldr	r3, [r0, #0]
 800e606:	4606      	mov	r6, r0
 800e608:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e60a:	9305      	str	r3, [sp, #20]
 800e60c:	a807      	add	r0, sp, #28
 800e60e:	f009 fd2f 	bl	8018070 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e612:	9b05      	ldr	r3, [sp, #20]
 800e614:	4601      	mov	r1, r0
 800e616:	4630      	mov	r0, r6
 800e618:	4798      	blx	r3
 800e61a:	f080 0001 	eor.w	r0, r0, #1
 800e61e:	b2c0      	uxtb	r0, r0
 800e620:	e7a8      	b.n	800e574 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800e622:	bf00      	nop
 800e624:	20013f54 	.word	0x20013f54
 800e628:	20013f56 	.word	0x20013f56
 800e62c:	20013f58 	.word	0x20013f58
 800e630:	20013f5a 	.word	0x20013f5a
 800e634:	20013f5c 	.word	0x20013f5c

0800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800e638:	b510      	push	{r4, lr}
 800e63a:	4b07      	ldr	r3, [pc, #28]	@ (800e658 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800e63c:	781b      	ldrb	r3, [r3, #0]
 800e63e:	4604      	mov	r4, r0
 800e640:	b13b      	cbz	r3, 800e652 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800e642:	6803      	ldr	r3, [r0, #0]
 800e644:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e646:	4798      	blx	r3
 800e648:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800e64a:	4283      	cmp	r3, r0
 800e64c:	d101      	bne.n	800e652 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800e64e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800e650:	bd10      	pop	{r4, pc}
 800e652:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800e654:	e7fc      	b.n	800e650 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800e656:	bf00      	nop
 800e658:	20013f5e 	.word	0x20013f5e

0800e65c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800e65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e660:	b08a      	sub	sp, #40	@ 0x28
 800e662:	461d      	mov	r5, r3
 800e664:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e668:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e66c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e670:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e674:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e678:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e67c:	2400      	movs	r4, #0
 800e67e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e682:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800e686:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e68a:	4690      	mov	r8, r2
 800e68c:	4607      	mov	r7, r0
 800e68e:	9404      	str	r4, [sp, #16]
 800e690:	f88d 4020 	strb.w	r4, [sp, #32]
 800e694:	f7ff ffd0 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e698:	fb06 8505 	mla	r5, r6, r5, r8
 800e69c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e6a0:	6878      	ldr	r0, [r7, #4]
 800e6a2:	9505      	str	r5, [sp, #20]
 800e6a4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e6a8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e6ac:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800e6b0:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800e6b4:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800e6b8:	6803      	ldr	r3, [r0, #0]
 800e6ba:	a901      	add	r1, sp, #4
 800e6bc:	685b      	ldr	r3, [r3, #4]
 800e6be:	4798      	blx	r3
 800e6c0:	b00a      	add	sp, #40	@ 0x28
 800e6c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e6c6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800e6c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e6ca:	b08b      	sub	sp, #44	@ 0x2c
 800e6cc:	2400      	movs	r4, #0
 800e6ce:	461d      	mov	r5, r3
 800e6d0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e6d4:	4688      	mov	r8, r1
 800e6d6:	4691      	mov	r9, r2
 800e6d8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800e6dc:	9404      	str	r4, [sp, #16]
 800e6de:	4607      	mov	r7, r0
 800e6e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e6e4:	f7ff ffa8 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e6e8:	fb06 9505 	mla	r5, r6, r5, r9
 800e6ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e6f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e6f4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e6f8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e6fc:	6878      	ldr	r0, [r7, #4]
 800e6fe:	9505      	str	r5, [sp, #20]
 800e700:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e704:	f8ad 401c 	strh.w	r4, [sp, #28]
 800e708:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e70c:	f8cd 8010 	str.w	r8, [sp, #16]
 800e710:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e714:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e718:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800e71c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800e720:	6803      	ldr	r3, [r0, #0]
 800e722:	a901      	add	r1, sp, #4
 800e724:	685b      	ldr	r3, [r3, #4]
 800e726:	4798      	blx	r3
 800e728:	b00b      	add	sp, #44	@ 0x2c
 800e72a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800e730 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800e730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e734:	b08a      	sub	sp, #40	@ 0x28
 800e736:	4698      	mov	r8, r3
 800e738:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800e73c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800e740:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800e744:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800e748:	2300      	movs	r3, #0
 800e74a:	2d0b      	cmp	r5, #11
 800e74c:	4606      	mov	r6, r0
 800e74e:	9304      	str	r3, [sp, #16]
 800e750:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800e754:	d138      	bne.n	800e7c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800e756:	2380      	movs	r3, #128	@ 0x80
 800e758:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e75c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e760:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e764:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e768:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e76c:	f88d 0020 	strb.w	r0, [sp, #32]
 800e770:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e774:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e778:	4630      	mov	r0, r6
 800e77a:	9203      	str	r2, [sp, #12]
 800e77c:	f7ff ff5c 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e780:	2c0b      	cmp	r4, #11
 800e782:	bf98      	it	ls
 800e784:	4b1b      	ldrls	r3, [pc, #108]	@ (800e7f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800e786:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800e78a:	bf98      	it	ls
 800e78c:	5d19      	ldrbls	r1, [r3, r4]
 800e78e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800e792:	bf88      	it	hi
 800e794:	2100      	movhi	r1, #0
 800e796:	fb02 8307 	mla	r3, r2, r7, r8
 800e79a:	10c9      	asrs	r1, r1, #3
 800e79c:	fb01 0003 	mla	r0, r1, r3, r0
 800e7a0:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800e7a4:	9005      	str	r0, [sp, #20]
 800e7a6:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800e7aa:	6870      	ldr	r0, [r6, #4]
 800e7ac:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800e7b0:	2300      	movs	r3, #0
 800e7b2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e7b6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800e7ba:	6803      	ldr	r3, [r0, #0]
 800e7bc:	a901      	add	r1, sp, #4
 800e7be:	685b      	ldr	r3, [r3, #4]
 800e7c0:	4798      	blx	r3
 800e7c2:	b00a      	add	sp, #40	@ 0x28
 800e7c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7c8:	2d02      	cmp	r5, #2
 800e7ca:	d109      	bne.n	800e7e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800e7cc:	28ff      	cmp	r0, #255	@ 0xff
 800e7ce:	d105      	bne.n	800e7dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800e7d0:	f1bc 0f00 	cmp.w	ip, #0
 800e7d4:	bf14      	ite	ne
 800e7d6:	2340      	movne	r3, #64	@ 0x40
 800e7d8:	2320      	moveq	r3, #32
 800e7da:	e7bd      	b.n	800e758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e7dc:	2340      	movs	r3, #64	@ 0x40
 800e7de:	e7bb      	b.n	800e758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e7e0:	28ff      	cmp	r0, #255	@ 0xff
 800e7e2:	d105      	bne.n	800e7f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800e7e4:	f1bc 0f00 	cmp.w	ip, #0
 800e7e8:	bf14      	ite	ne
 800e7ea:	2304      	movne	r3, #4
 800e7ec:	2301      	moveq	r3, #1
 800e7ee:	e7b3      	b.n	800e758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e7f0:	2304      	movs	r3, #4
 800e7f2:	e7b1      	b.n	800e758 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e7f4:	0802adb4 	.word	0x0802adb4

0800e7f8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800e7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7fc:	b08b      	sub	sp, #44	@ 0x2c
 800e7fe:	461d      	mov	r5, r3
 800e800:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800e804:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800e808:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800e80c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800e810:	bf14      	ite	ne
 800e812:	2308      	movne	r3, #8
 800e814:	2302      	moveq	r3, #2
 800e816:	2400      	movs	r4, #0
 800e818:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e81c:	4688      	mov	r8, r1
 800e81e:	4693      	mov	fp, r2
 800e820:	9404      	str	r4, [sp, #16]
 800e822:	4607      	mov	r7, r0
 800e824:	f7ff ff08 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e828:	2e0b      	cmp	r6, #11
 800e82a:	bf98      	it	ls
 800e82c:	4b15      	ldrls	r3, [pc, #84]	@ (800e884 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800e82e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800e832:	bf98      	it	ls
 800e834:	5d9c      	ldrbls	r4, [r3, r6]
 800e836:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800e83a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e83e:	fb05 b50a 	mla	r5, r5, sl, fp
 800e842:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800e846:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e84a:	10e4      	asrs	r4, r4, #3
 800e84c:	fb04 0405 	mla	r4, r4, r5, r0
 800e850:	2300      	movs	r3, #0
 800e852:	6878      	ldr	r0, [r7, #4]
 800e854:	9405      	str	r4, [sp, #20]
 800e856:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e85a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800e85e:	f8cd 8010 	str.w	r8, [sp, #16]
 800e862:	f88d 9020 	strb.w	r9, [sp, #32]
 800e866:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800e86a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800e86e:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800e872:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800e876:	6803      	ldr	r3, [r0, #0]
 800e878:	a901      	add	r1, sp, #4
 800e87a:	685b      	ldr	r3, [r3, #4]
 800e87c:	4798      	blx	r3
 800e87e:	b00b      	add	sp, #44	@ 0x2c
 800e880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e884:	0802adb4 	.word	0x0802adb4

0800e888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800e888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e88c:	461e      	mov	r6, r3
 800e88e:	4b0a      	ldr	r3, [pc, #40]	@ (800e8b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800e890:	460f      	mov	r7, r1
 800e892:	881d      	ldrh	r5, [r3, #0]
 800e894:	4690      	mov	r8, r2
 800e896:	f7f4 fe87 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e89a:	6803      	ldr	r3, [r0, #0]
 800e89c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e89e:	4798      	blx	r3
 800e8a0:	280b      	cmp	r0, #11
 800e8a2:	bf9a      	itte	ls
 800e8a4:	4b05      	ldrls	r3, [pc, #20]	@ (800e8bc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800e8a6:	5c1c      	ldrbls	r4, [r3, r0]
 800e8a8:	2400      	movhi	r4, #0
 800e8aa:	fb08 7005 	mla	r0, r8, r5, r7
 800e8ae:	10e4      	asrs	r4, r4, #3
 800e8b0:	fb04 6000 	mla	r0, r4, r0, r6
 800e8b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e8b8:	20013f5a 	.word	0x20013f5a
 800e8bc:	0802adb4 	.word	0x0802adb4

0800e8c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800e8c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e8c2:	b08b      	sub	sp, #44	@ 0x2c
 800e8c4:	461f      	mov	r7, r3
 800e8c6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800e8ca:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e8ce:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e8d2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e8d6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e8da:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e8de:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e8e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e8e6:	2500      	movs	r5, #0
 800e8e8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e8ec:	f88d 3020 	strb.w	r3, [sp, #32]
 800e8f0:	4604      	mov	r4, r0
 800e8f2:	4616      	mov	r6, r2
 800e8f4:	9504      	str	r5, [sp, #16]
 800e8f6:	f7ff fe9f 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e8fa:	463a      	mov	r2, r7
 800e8fc:	4631      	mov	r1, r6
 800e8fe:	4603      	mov	r3, r0
 800e900:	4620      	mov	r0, r4
 800e902:	f7ff ffc1 	bl	800e888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e906:	4b0e      	ldr	r3, [pc, #56]	@ (800e940 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800e908:	9005      	str	r0, [sp, #20]
 800e90a:	881b      	ldrh	r3, [r3, #0]
 800e90c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e910:	f7f4 fe4a 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e914:	6803      	ldr	r3, [r0, #0]
 800e916:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e918:	4798      	blx	r3
 800e91a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800e91c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800e920:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e924:	9304      	str	r3, [sp, #16]
 800e926:	6860      	ldr	r0, [r4, #4]
 800e928:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800e92c:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800e930:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800e934:	6803      	ldr	r3, [r0, #0]
 800e936:	a901      	add	r1, sp, #4
 800e938:	685b      	ldr	r3, [r3, #4]
 800e93a:	4798      	blx	r3
 800e93c:	b00b      	add	sp, #44	@ 0x2c
 800e93e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e940:	20013f5a 	.word	0x20013f5a

0800e944 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800e944:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e946:	b08d      	sub	sp, #52	@ 0x34
 800e948:	466b      	mov	r3, sp
 800e94a:	e883 0006 	stmia.w	r3, {r1, r2}
 800e94e:	2300      	movs	r3, #0
 800e950:	9306      	str	r3, [sp, #24]
 800e952:	6803      	ldr	r3, [r0, #0]
 800e954:	f8bd 6000 	ldrh.w	r6, [sp]
 800e958:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e95a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800e95e:	2501      	movs	r5, #1
 800e960:	9503      	str	r5, [sp, #12]
 800e962:	4604      	mov	r4, r0
 800e964:	4798      	blx	r3
 800e966:	463a      	mov	r2, r7
 800e968:	4631      	mov	r1, r6
 800e96a:	4603      	mov	r3, r0
 800e96c:	4620      	mov	r0, r4
 800e96e:	f7ff ff8b 	bl	800e888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e972:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e974:	9307      	str	r3, [sp, #28]
 800e976:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e97a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e97e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e982:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e986:	4b0f      	ldr	r3, [pc, #60]	@ (800e9c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800e988:	9004      	str	r0, [sp, #16]
 800e98a:	881b      	ldrh	r3, [r3, #0]
 800e98c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800e990:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800e994:	f7f4 fe08 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800e998:	6803      	ldr	r3, [r0, #0]
 800e99a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e99c:	4798      	blx	r3
 800e99e:	23ff      	movs	r3, #255	@ 0xff
 800e9a0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800e9a4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e9a8:	6860      	ldr	r0, [r4, #4]
 800e9aa:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e9ae:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e9b2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e9b6:	6803      	ldr	r3, [r0, #0]
 800e9b8:	a903      	add	r1, sp, #12
 800e9ba:	685b      	ldr	r3, [r3, #4]
 800e9bc:	4798      	blx	r3
 800e9be:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800e9c0:	b00d      	add	sp, #52	@ 0x34
 800e9c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e9c4:	20013f5a 	.word	0x20013f5a

0800e9c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800e9c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e9cc:	b08c      	sub	sp, #48	@ 0x30
 800e9ce:	461e      	mov	r6, r3
 800e9d0:	466d      	mov	r5, sp
 800e9d2:	2300      	movs	r3, #0
 800e9d4:	e885 0006 	stmia.w	r5, {r1, r2}
 800e9d8:	9306      	str	r3, [sp, #24]
 800e9da:	6803      	ldr	r3, [r0, #0]
 800e9dc:	f8bd 7000 	ldrh.w	r7, [sp]
 800e9e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e9e2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800e9e6:	2501      	movs	r5, #1
 800e9e8:	9503      	str	r5, [sp, #12]
 800e9ea:	4604      	mov	r4, r0
 800e9ec:	4798      	blx	r3
 800e9ee:	4642      	mov	r2, r8
 800e9f0:	4639      	mov	r1, r7
 800e9f2:	4603      	mov	r3, r0
 800e9f4:	4620      	mov	r0, r4
 800e9f6:	f7ff ff47 	bl	800e888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e9fa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e9fe:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ea02:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ea06:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800ea0a:	4b11      	ldr	r3, [pc, #68]	@ (800ea50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ea0c:	9004      	str	r0, [sp, #16]
 800ea0e:	881b      	ldrh	r3, [r3, #0]
 800ea10:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800ea14:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800ea16:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800ea1a:	9607      	str	r6, [sp, #28]
 800ea1c:	f7f4 fdc4 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 800ea20:	6803      	ldr	r3, [r0, #0]
 800ea22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea24:	4798      	blx	r3
 800ea26:	23ff      	movs	r3, #255	@ 0xff
 800ea28:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800ea2c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800ea30:	6860      	ldr	r0, [r4, #4]
 800ea32:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800ea36:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800ea3a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800ea3e:	6803      	ldr	r3, [r0, #0]
 800ea40:	a903      	add	r1, sp, #12
 800ea42:	685b      	ldr	r3, [r3, #4]
 800ea44:	4798      	blx	r3
 800ea46:	4630      	mov	r0, r6
 800ea48:	b00c      	add	sp, #48	@ 0x30
 800ea4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea4e:	bf00      	nop
 800ea50:	20013f5a 	.word	0x20013f5a

0800ea54 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ea54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea56:	b085      	sub	sp, #20
 800ea58:	ac02      	add	r4, sp, #8
 800ea5a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ea5e:	4605      	mov	r5, r0
 800ea60:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ea64:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ea68:	f7ff fde6 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ea6c:	463a      	mov	r2, r7
 800ea6e:	4603      	mov	r3, r0
 800ea70:	4631      	mov	r1, r6
 800ea72:	4628      	mov	r0, r5
 800ea74:	f7ff ff08 	bl	800e888 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ea78:	4a05      	ldr	r2, [pc, #20]	@ (800ea90 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ea7a:	682b      	ldr	r3, [r5, #0]
 800ea7c:	8812      	ldrh	r2, [r2, #0]
 800ea7e:	9200      	str	r2, [sp, #0]
 800ea80:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800ea82:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ea86:	4603      	mov	r3, r0
 800ea88:	4628      	mov	r0, r5
 800ea8a:	47b0      	blx	r6
 800ea8c:	b005      	add	sp, #20
 800ea8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ea90:	20013f5a 	.word	0x20013f5a

0800ea94 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ea94:	b570      	push	{r4, r5, r6, lr}
 800ea96:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800ea9a:	4604      	mov	r4, r0
 800ea9c:	b19b      	cbz	r3, 800eac6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ea9e:	2002      	movs	r0, #2
 800eaa0:	f7f1 ff12 	bl	80008c8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800eaa4:	2300      	movs	r3, #0
 800eaa6:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800eaaa:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800eaae:	6823      	ldr	r3, [r4, #0]
 800eab0:	4620      	mov	r0, r4
 800eab2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800eab6:	f7ff fdbf 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800eaba:	462b      	mov	r3, r5
 800eabc:	4601      	mov	r1, r0
 800eabe:	4620      	mov	r0, r4
 800eac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eac4:	4718      	bx	r3
 800eac6:	bd70      	pop	{r4, r5, r6, pc}

0800eac8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800eac8:	b538      	push	{r3, r4, r5, lr}
 800eaca:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800eace:	428b      	cmp	r3, r1
 800ead0:	4604      	mov	r4, r0
 800ead2:	460d      	mov	r5, r1
 800ead4:	d006      	beq.n	800eae4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ead6:	6803      	ldr	r3, [r0, #0]
 800ead8:	b929      	cbnz	r1, 800eae6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800eada:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800eade:	4798      	blx	r3
 800eae0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800eae4:	bd38      	pop	{r3, r4, r5, pc}
 800eae6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800eaea:	e7f8      	b.n	800eade <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800eaec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800eaec:	b510      	push	{r4, lr}
 800eaee:	4b0d      	ldr	r3, [pc, #52]	@ (800eb24 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800eaf0:	781b      	ldrb	r3, [r3, #0]
 800eaf2:	4604      	mov	r4, r0
 800eaf4:	b95b      	cbnz	r3, 800eb0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800eaf6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800eafa:	2b02      	cmp	r3, #2
 800eafc:	d007      	beq.n	800eb0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800eafe:	6840      	ldr	r0, [r0, #4]
 800eb00:	f000 f92c 	bl	800ed5c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800eb04:	b118      	cbz	r0, 800eb0e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800eb06:	6862      	ldr	r2, [r4, #4]
 800eb08:	7a53      	ldrb	r3, [r2, #9]
 800eb0a:	2b00      	cmp	r3, #0
 800eb0c:	d0fc      	beq.n	800eb08 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800eb0e:	f7f2 f823 	bl	8000b58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800eb12:	4620      	mov	r0, r4
 800eb14:	2100      	movs	r1, #0
 800eb16:	f7ff ffd7 	bl	800eac8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800eb1a:	4620      	mov	r0, r4
 800eb1c:	f7ff fd8c 	bl	800e638 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800eb20:	bd10      	pop	{r4, pc}
 800eb22:	bf00      	nop
 800eb24:	20013f5e 	.word	0x20013f5e

0800eb28 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800eb28:	b570      	push	{r4, r5, r6, lr}
 800eb2a:	4604      	mov	r4, r0
 800eb2c:	6803      	ldr	r3, [r0, #0]
 800eb2e:	b919      	cbnz	r1, 800eb38 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800eb30:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800eb32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eb36:	4718      	bx	r3
 800eb38:	2200      	movs	r2, #0
 800eb3a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800eb3e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800eb42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800eb44:	4798      	blx	r3
 800eb46:	6863      	ldr	r3, [r4, #4]
 800eb48:	2101      	movs	r1, #1
 800eb4a:	4605      	mov	r5, r0
 800eb4c:	7299      	strb	r1, [r3, #10]
 800eb4e:	4620      	mov	r0, r4
 800eb50:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800eb54:	f7ff ffb8 	bl	800eac8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800eb58:	4628      	mov	r0, r5
 800eb5a:	bd70      	pop	{r4, r5, r6, pc}

0800eb5c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800eb5c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800eb60:	1a13      	subs	r3, r2, r0
 800eb62:	4258      	negs	r0, r3
 800eb64:	4158      	adcs	r0, r3
 800eb66:	4770      	bx	lr

0800eb68 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800eb68:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800eb6c:	1a9b      	subs	r3, r3, r2
 800eb6e:	2b00      	cmp	r3, #0
 800eb70:	bfdc      	itt	le
 800eb72:	6882      	ldrle	r2, [r0, #8]
 800eb74:	189b      	addle	r3, r3, r2
 800eb76:	2b01      	cmp	r3, #1
 800eb78:	bfcc      	ite	gt
 800eb7a:	2000      	movgt	r0, #0
 800eb7c:	2001      	movle	r0, #1
 800eb7e:	4770      	bx	lr

0800eb80 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800eb80:	6902      	ldr	r2, [r0, #16]
 800eb82:	6843      	ldr	r3, [r0, #4]
 800eb84:	2024      	movs	r0, #36	@ 0x24
 800eb86:	fb00 3002 	mla	r0, r0, r2, r3
 800eb8a:	4770      	bx	lr

0800eb8c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800eb8c:	6803      	ldr	r3, [r0, #0]
 800eb8e:	691b      	ldr	r3, [r3, #16]
 800eb90:	4718      	bx	r3

0800eb92 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800eb92:	b570      	push	{r4, r5, r6, lr}
 800eb94:	2301      	movs	r3, #1
 800eb96:	7203      	strb	r3, [r0, #8]
 800eb98:	4604      	mov	r4, r0
 800eb9a:	6840      	ldr	r0, [r0, #4]
 800eb9c:	6803      	ldr	r3, [r0, #0]
 800eb9e:	699b      	ldr	r3, [r3, #24]
 800eba0:	4798      	blx	r3
 800eba2:	6803      	ldr	r3, [r0, #0]
 800eba4:	2b40      	cmp	r3, #64	@ 0x40
 800eba6:	4605      	mov	r5, r0
 800eba8:	d00c      	beq.n	800ebc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ebaa:	d810      	bhi.n	800ebce <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800ebac:	2b04      	cmp	r3, #4
 800ebae:	d01d      	beq.n	800ebec <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800ebb0:	d804      	bhi.n	800ebbc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800ebb2:	2b01      	cmp	r3, #1
 800ebb4:	d006      	beq.n	800ebc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ebb6:	2b02      	cmp	r3, #2
 800ebb8:	d02c      	beq.n	800ec14 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800ebba:	bd70      	pop	{r4, r5, r6, pc}
 800ebbc:	2b08      	cmp	r3, #8
 800ebbe:	d01d      	beq.n	800ebfc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800ebc0:	2b20      	cmp	r3, #32
 800ebc2:	d1fa      	bne.n	800ebba <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800ebc4:	6823      	ldr	r3, [r4, #0]
 800ebc6:	4620      	mov	r0, r4
 800ebc8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ebca:	4798      	blx	r3
 800ebcc:	e013      	b.n	800ebf6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800ebce:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ebd2:	d0f7      	beq.n	800ebc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ebd4:	d804      	bhi.n	800ebe0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800ebd6:	2b80      	cmp	r3, #128	@ 0x80
 800ebd8:	d0f4      	beq.n	800ebc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ebda:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800ebde:	e7f0      	b.n	800ebc2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800ebe0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800ebe4:	d0ee      	beq.n	800ebc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ebe6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800ebea:	e7e5      	b.n	800ebb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800ebec:	6823      	ldr	r3, [r4, #0]
 800ebee:	7f01      	ldrb	r1, [r0, #28]
 800ebf0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ebf2:	4620      	mov	r0, r4
 800ebf4:	4798      	blx	r3
 800ebf6:	6823      	ldr	r3, [r4, #0]
 800ebf8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ebfa:	e006      	b.n	800ec0a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800ebfc:	6823      	ldr	r3, [r4, #0]
 800ebfe:	7f01      	ldrb	r1, [r0, #28]
 800ec00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ec02:	4620      	mov	r0, r4
 800ec04:	4798      	blx	r3
 800ec06:	6823      	ldr	r3, [r4, #0]
 800ec08:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ec0a:	4629      	mov	r1, r5
 800ec0c:	4620      	mov	r0, r4
 800ec0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec12:	4718      	bx	r3
 800ec14:	6823      	ldr	r3, [r4, #0]
 800ec16:	4620      	mov	r0, r4
 800ec18:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ec1a:	4798      	blx	r3
 800ec1c:	e7f3      	b.n	800ec06 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800ec1e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800ec1e:	4770      	bx	lr

0800ec20 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800ec20:	4770      	bx	lr

0800ec22 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800ec22:	4770      	bx	lr

0800ec24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800ec24:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800ec28:	1ad2      	subs	r2, r2, r3
 800ec2a:	2a00      	cmp	r2, #0
 800ec2c:	b510      	push	{r4, lr}
 800ec2e:	bfdc      	itt	le
 800ec30:	6884      	ldrle	r4, [r0, #8]
 800ec32:	1912      	addle	r2, r2, r4
 800ec34:	2a01      	cmp	r2, #1
 800ec36:	dd16      	ble.n	800ec66 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800ec38:	6842      	ldr	r2, [r0, #4]
 800ec3a:	2424      	movs	r4, #36	@ 0x24
 800ec3c:	fb04 2303 	mla	r3, r4, r3, r2
 800ec40:	f101 0220 	add.w	r2, r1, #32
 800ec44:	f851 4b04 	ldr.w	r4, [r1], #4
 800ec48:	f843 4b04 	str.w	r4, [r3], #4
 800ec4c:	4291      	cmp	r1, r2
 800ec4e:	d1f9      	bne.n	800ec44 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ec50:	780a      	ldrb	r2, [r1, #0]
 800ec52:	701a      	strb	r2, [r3, #0]
 800ec54:	68c3      	ldr	r3, [r0, #12]
 800ec56:	6882      	ldr	r2, [r0, #8]
 800ec58:	f3bf 8f5b 	dmb	ish
 800ec5c:	3301      	adds	r3, #1
 800ec5e:	429a      	cmp	r2, r3
 800ec60:	bfd8      	it	le
 800ec62:	1a9b      	suble	r3, r3, r2
 800ec64:	60c3      	str	r3, [r0, #12]
 800ec66:	bd10      	pop	{r4, pc}

0800ec68 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ec68:	6903      	ldr	r3, [r0, #16]
 800ec6a:	6882      	ldr	r2, [r0, #8]
 800ec6c:	f3bf 8f5b 	dmb	ish
 800ec70:	3301      	adds	r3, #1
 800ec72:	429a      	cmp	r2, r3
 800ec74:	bfd8      	it	le
 800ec76:	1a9b      	suble	r3, r3, r2
 800ec78:	6103      	str	r3, [r0, #16]
 800ec7a:	4770      	bx	lr

0800ec7c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ec7c:	b570      	push	{r4, r5, r6, lr}
 800ec7e:	4604      	mov	r4, r0
 800ec80:	460e      	mov	r6, r1
 800ec82:	6860      	ldr	r0, [r4, #4]
 800ec84:	6803      	ldr	r3, [r0, #0]
 800ec86:	685b      	ldr	r3, [r3, #4]
 800ec88:	4798      	blx	r3
 800ec8a:	2800      	cmp	r0, #0
 800ec8c:	d1f9      	bne.n	800ec82 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ec8e:	4d0d      	ldr	r5, [pc, #52]	@ (800ecc4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ec90:	6828      	ldr	r0, [r5, #0]
 800ec92:	6803      	ldr	r3, [r0, #0]
 800ec94:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ec96:	4798      	blx	r3
 800ec98:	f7f1 ff6c 	bl	8000b74 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ec9c:	6828      	ldr	r0, [r5, #0]
 800ec9e:	2101      	movs	r1, #1
 800eca0:	f7ff ff12 	bl	800eac8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800eca4:	6860      	ldr	r0, [r4, #4]
 800eca6:	6803      	ldr	r3, [r0, #0]
 800eca8:	4631      	mov	r1, r6
 800ecaa:	689b      	ldr	r3, [r3, #8]
 800ecac:	4798      	blx	r3
 800ecae:	6823      	ldr	r3, [r4, #0]
 800ecb0:	4620      	mov	r0, r4
 800ecb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ecb4:	4798      	blx	r3
 800ecb6:	6828      	ldr	r0, [r5, #0]
 800ecb8:	6803      	ldr	r3, [r0, #0]
 800ecba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ecbe:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800ecc0:	4718      	bx	r3
 800ecc2:	bf00      	nop
 800ecc4:	20013f60 	.word	0x20013f60

0800ecc8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ecc8:	b508      	push	{r3, lr}
 800ecca:	f7f1 ff45 	bl	8000b58 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ecce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ecd2:	f7f1 bf49 	b.w	8000b68 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ecd6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ecd6:	b510      	push	{r4, lr}
 800ecd8:	2114      	movs	r1, #20
 800ecda:	4604      	mov	r4, r0
 800ecdc:	f018 f89a 	bl	8026e14 <_ZdlPvj>
 800ece0:	4620      	mov	r0, r4
 800ece2:	bd10      	pop	{r4, pc}

0800ece4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800ece4:	b510      	push	{r4, lr}
 800ece6:	4604      	mov	r4, r0
 800ece8:	6840      	ldr	r0, [r0, #4]
 800ecea:	6803      	ldr	r3, [r0, #0]
 800ecec:	681b      	ldr	r3, [r3, #0]
 800ecee:	4798      	blx	r3
 800ecf0:	b948      	cbnz	r0, 800ed06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ecf2:	7a63      	ldrb	r3, [r4, #9]
 800ecf4:	b13b      	cbz	r3, 800ed06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ecf6:	7a23      	ldrb	r3, [r4, #8]
 800ecf8:	b92b      	cbnz	r3, 800ed06 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ecfa:	6823      	ldr	r3, [r4, #0]
 800ecfc:	4620      	mov	r0, r4
 800ecfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ed00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed04:	4718      	bx	r3
 800ed06:	bd10      	pop	{r4, pc}

0800ed08 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800ed08:	b570      	push	{r4, r5, r6, lr}
 800ed0a:	4604      	mov	r4, r0
 800ed0c:	6840      	ldr	r0, [r0, #4]
 800ed0e:	6803      	ldr	r3, [r0, #0]
 800ed10:	681b      	ldr	r3, [r3, #0]
 800ed12:	4798      	blx	r3
 800ed14:	4605      	mov	r5, r0
 800ed16:	b930      	cbnz	r0, 800ed26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ed18:	7a23      	ldrb	r3, [r4, #8]
 800ed1a:	b123      	cbz	r3, 800ed26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ed1c:	6860      	ldr	r0, [r4, #4]
 800ed1e:	6803      	ldr	r3, [r0, #0]
 800ed20:	695b      	ldr	r3, [r3, #20]
 800ed22:	4798      	blx	r3
 800ed24:	7225      	strb	r5, [r4, #8]
 800ed26:	6860      	ldr	r0, [r4, #4]
 800ed28:	6803      	ldr	r3, [r0, #0]
 800ed2a:	681b      	ldr	r3, [r3, #0]
 800ed2c:	4798      	blx	r3
 800ed2e:	b928      	cbnz	r0, 800ed3c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ed30:	6823      	ldr	r3, [r4, #0]
 800ed32:	4620      	mov	r0, r4
 800ed34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ed36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed3a:	4718      	bx	r3
 800ed3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed40:	f7f1 bf20 	b.w	8000b84 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800ed44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ed44:	b510      	push	{r4, lr}
 800ed46:	4c04      	ldr	r4, [pc, #16]	@ (800ed58 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ed48:	6082      	str	r2, [r0, #8]
 800ed4a:	2200      	movs	r2, #0
 800ed4c:	e9c0 4100 	strd	r4, r1, [r0]
 800ed50:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800ed54:	bd10      	pop	{r4, pc}
 800ed56:	bf00      	nop
 800ed58:	0802adc8 	.word	0x0802adc8

0800ed5c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ed5c:	6840      	ldr	r0, [r0, #4]
 800ed5e:	6803      	ldr	r3, [r0, #0]
 800ed60:	681b      	ldr	r3, [r3, #0]
 800ed62:	4718      	bx	r3
 800ed64:	0000      	movs	r0, r0
	...

0800ed68 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800ed68:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800ed6c:	4f20      	ldr	r7, [pc, #128]	@ (800edf0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800ed6e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800ed72:	fb80 0101 	smull	r0, r1, r0, r1
 800ed76:	fba0 bc07 	umull	fp, ip, r0, r7
 800ed7a:	fb07 cc01 	mla	ip, r7, r1, ip
 800ed7e:	fb0b f70c 	mul.w	r7, fp, ip
 800ed82:	fbab 010b 	umull	r0, r1, fp, fp
 800ed86:	461c      	mov	r4, r3
 800ed88:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800ed8c:	fb00 f30c 	mul.w	r3, r0, ip
 800ed90:	fb0b 3301 	mla	r3, fp, r1, r3
 800ed94:	fba0 010b 	umull	r0, r1, r0, fp
 800ed98:	4616      	mov	r6, r2
 800ed9a:	4419      	add	r1, r3
 800ed9c:	a312      	add	r3, pc, #72	@ (adr r3, 800ede8 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800ed9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eda2:	f7f1 fa75 	bl	8000290 <__aeabi_ldivmod>
 800eda6:	2ef7      	cmp	r6, #247	@ 0xf7
 800eda8:	b290      	uxth	r0, r2
 800edaa:	bf9e      	ittt	ls
 800edac:	f002 0207 	andls.w	r2, r2, #7
 800edb0:	18b6      	addls	r6, r6, r2
 800edb2:	b2f6      	uxtbls	r6, r6
 800edb4:	2cfb      	cmp	r4, #251	@ 0xfb
 800edb6:	bf9e      	ittt	ls
 800edb8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800edbc:	18e4      	addls	r4, r4, r3
 800edbe:	b2e4      	uxtbls	r4, r4
 800edc0:	2df7      	cmp	r5, #247	@ 0xf7
 800edc2:	bf9c      	itt	ls
 800edc4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800edc8:	182d      	addls	r5, r5, r0
 800edca:	480a      	ldr	r0, [pc, #40]	@ (800edf4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800edcc:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800edd0:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800edd4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800edd8:	bf98      	it	ls
 800edda:	b2ed      	uxtbls	r5, r5
 800eddc:	4304      	orrs	r4, r0
 800edde:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800ede2:	b280      	uxth	r0, r0
 800ede4:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800ede8:	797a8d77 	.word	0x797a8d77
 800edec:	00000000 	.word	0x00000000
 800edf0:	00ec4ba7 	.word	0x00ec4ba7
 800edf4:	fffff800 	.word	0xfffff800

0800edf8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800edf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edfc:	ed2d 8b02 	vpush	{d8}
 800ee00:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800ee04:	b087      	sub	sp, #28
 800ee06:	7c41      	ldrb	r1, [r0, #17]
 800ee08:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800ee0c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800ee10:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800ee14:	4605      	mov	r5, r0
 800ee16:	2900      	cmp	r1, #0
 800ee18:	f000 809a 	beq.w	800ef50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800ee1c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ee20:	ed90 7a08 	vldr	s14, [r0, #32]
 800ee24:	68c0      	ldr	r0, [r0, #12]
 800ee26:	454a      	cmp	r2, r9
 800ee28:	db25      	blt.n	800ee76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800ee2a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800ee2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ee32:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800ee36:	bfc8      	it	gt
 800ee38:	2200      	movgt	r2, #0
 800ee3a:	5882      	ldr	r2, [r0, r2]
 800ee3c:	2100      	movs	r1, #0
 800ee3e:	7c2d      	ldrb	r5, [r5, #16]
 800ee40:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800ee44:	0950      	lsrs	r0, r2, #5
 800ee46:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800ee4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800ee4e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800ee52:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800ee56:	2d00      	cmp	r5, #0
 800ee58:	d044      	beq.n	800eee4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800ee5a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800ee5e:	d141      	bne.n	800eee4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800ee60:	bb61      	cbnz	r1, 800eebc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800ee62:	ea4e 0000 	orr.w	r0, lr, r0
 800ee66:	ea4c 0500 	orr.w	r5, ip, r0
 800ee6a:	42bc      	cmp	r4, r7
 800ee6c:	f080 8217 	bcs.w	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800ee70:	f824 5b02 	strh.w	r5, [r4], #2
 800ee74:	e7f9      	b.n	800ee6a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800ee76:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800ee7a:	454f      	cmp	r7, r9
 800ee7c:	dc08      	bgt.n	800ee90 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800ee7e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800ee82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ee86:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800ee8a:	bfd8      	it	le
 800ee8c:	2200      	movle	r2, #0
 800ee8e:	e7d4      	b.n	800ee3a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800ee90:	eba9 0202 	sub.w	r2, r9, r2
 800ee94:	ee07 2a90 	vmov	s15, r2
 800ee98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ee9c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800eea0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800eea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eea8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eeac:	ee17 2a90 	vmov	r2, s15
 800eeb0:	bfd8      	it	le
 800eeb2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800eeb6:	0092      	lsls	r2, r2, #2
 800eeb8:	5882      	ldr	r2, [r0, r2]
 800eeba:	e7c0      	b.n	800ee3e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800eebc:	b2d5      	uxtb	r5, r2
 800eebe:	fa5f f888 	uxtb.w	r8, r8
 800eec2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800eec6:	461e      	mov	r6, r3
 800eec8:	42bc      	cmp	r4, r7
 800eeca:	f080 81e8 	bcs.w	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800eece:	4630      	mov	r0, r6
 800eed0:	9500      	str	r5, [sp, #0]
 800eed2:	4643      	mov	r3, r8
 800eed4:	4652      	mov	r2, sl
 800eed6:	4649      	mov	r1, r9
 800eed8:	f7ff ff46 	bl	800ed68 <_ZN8touchgfxL10applyNoiseEiihhh>
 800eedc:	3601      	adds	r6, #1
 800eede:	f824 0b02 	strh.w	r0, [r4], #2
 800eee2:	e7f1      	b.n	800eec8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800eee4:	0e12      	lsrs	r2, r2, #24
 800eee6:	fb02 f20a 	mul.w	r2, r2, sl
 800eeea:	1c53      	adds	r3, r2, #1
 800eeec:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800eef0:	1212      	asrs	r2, r2, #8
 800eef2:	fb02 f50c 	mul.w	r5, r2, ip
 800eef6:	fb02 f10e 	mul.w	r1, r2, lr
 800eefa:	4350      	muls	r0, r2
 800eefc:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800f2b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800ef00:	43d2      	mvns	r2, r2
 800ef02:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800ef06:	26ff      	movs	r6, #255	@ 0xff
 800ef08:	42bc      	cmp	r4, r7
 800ef0a:	f080 81c8 	bcs.w	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800ef0e:	f8b4 e000 	ldrh.w	lr, [r4]
 800ef12:	ea0e 030c 	and.w	r3, lr, ip
 800ef16:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800ef1a:	fb02 1303 	mla	r3, r2, r3, r1
 800ef1e:	fb02 0808 	mla	r8, r2, r8, r0
 800ef22:	fb93 f3f6 	sdiv	r3, r3, r6
 800ef26:	fb98 f8f6 	sdiv	r8, r8, r6
 800ef2a:	ea03 030c 	and.w	r3, r3, ip
 800ef2e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800ef32:	f00e 0e1f 	and.w	lr, lr, #31
 800ef36:	ea43 0308 	orr.w	r3, r3, r8
 800ef3a:	fb02 5e0e 	mla	lr, r2, lr, r5
 800ef3e:	fb9e fef6 	sdiv	lr, lr, r6
 800ef42:	f00e 0e1f 	and.w	lr, lr, #31
 800ef46:	ea43 030e 	orr.w	r3, r3, lr
 800ef4a:	f824 3b02 	strh.w	r3, [r4], #2
 800ef4e:	e7db      	b.n	800ef08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800ef50:	7c82      	ldrb	r2, [r0, #18]
 800ef52:	2a00      	cmp	r2, #0
 800ef54:	d04f      	beq.n	800eff6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800ef56:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ef5a:	ee07 2a90 	vmov	s15, r2
 800ef5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ef62:	ee07 3a10 	vmov	s14, r3
 800ef66:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ef6a:	461f      	mov	r7, r3
 800ef6c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800ef70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef74:	f200 8095 	bhi.w	800f0a2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800ef78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ef7c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800ef80:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800ef84:	ee37 7a66 	vsub.f32	s14, s14, s13
 800ef88:	ee06 6a90 	vmov	s13, r6
 800ef8c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ef90:	68ea      	ldr	r2, [r5, #12]
 800ef92:	f895 c010 	ldrb.w	ip, [r5, #16]
 800ef96:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800ef9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef9e:	bf4a      	itet	mi
 800efa0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800efa4:	9602      	strpl	r6, [sp, #8]
 800efa6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800efaa:	ed95 7a08 	vldr	s14, [r5, #32]
 800efae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800efb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efb6:	bfc8      	it	gt
 800efb8:	2100      	movgt	r1, #0
 800efba:	5852      	ldr	r2, [r2, r1]
 800efbc:	9902      	ldr	r1, [sp, #8]
 800efbe:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800efc2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800efc6:	0950      	lsrs	r0, r2, #5
 800efc8:	9103      	str	r1, [sp, #12]
 800efca:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800efce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800efd2:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800efd6:	f1bc 0f00 	cmp.w	ip, #0
 800efda:	d024      	beq.n	800f026 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800efdc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800efe0:	d121      	bne.n	800f026 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800efe2:	ea4b 0b00 	orr.w	fp, fp, r0
 800efe6:	ea41 010b 	orr.w	r1, r1, fp
 800efea:	9a03      	ldr	r2, [sp, #12]
 800efec:	4294      	cmp	r4, r2
 800efee:	d255      	bcs.n	800f09c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800eff0:	f824 1b02 	strh.w	r1, [r4], #2
 800eff4:	e7f9      	b.n	800efea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800eff6:	ee07 9a10 	vmov	s14, r9
 800effa:	edd0 7a06 	vldr	s15, [r0, #24]
 800effe:	edd0 6a05 	vldr	s13, [r0, #20]
 800f002:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f006:	ee37 7a67 	vsub.f32	s14, s14, s15
 800f00a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800f00e:	ed90 7a08 	vldr	s14, [r0, #32]
 800f012:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f01a:	bf44      	itt	mi
 800f01c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800f020:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800f024:	e79d      	b.n	800ef62 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800f026:	0e12      	lsrs	r2, r2, #24
 800f028:	fb02 f20a 	mul.w	r2, r2, sl
 800f02c:	f102 0c01 	add.w	ip, r2, #1
 800f030:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800f034:	1212      	asrs	r2, r2, #8
 800f036:	4350      	muls	r0, r2
 800f038:	4351      	muls	r1, r2
 800f03a:	fb02 fb0b 	mul.w	fp, r2, fp
 800f03e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800f2b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f042:	9004      	str	r0, [sp, #16]
 800f044:	43d2      	mvns	r2, r2
 800f046:	9105      	str	r1, [sp, #20]
 800f048:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800f04c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800f050:	9903      	ldr	r1, [sp, #12]
 800f052:	428c      	cmp	r4, r1
 800f054:	d222      	bcs.n	800f09c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800f056:	8820      	ldrh	r0, [r4, #0]
 800f058:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800f05c:	460f      	mov	r7, r1
 800f05e:	9904      	ldr	r1, [sp, #16]
 800f060:	ea00 0c08 	and.w	ip, r0, r8
 800f064:	fb02 bc0c 	mla	ip, r2, ip, fp
 800f068:	fb02 1107 	mla	r1, r2, r7, r1
 800f06c:	fb9c fcfe 	sdiv	ip, ip, lr
 800f070:	fb91 f1fe 	sdiv	r1, r1, lr
 800f074:	ea0c 0c08 	and.w	ip, ip, r8
 800f078:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800f07c:	ea4c 0101 	orr.w	r1, ip, r1
 800f080:	f000 0c1f 	and.w	ip, r0, #31
 800f084:	9805      	ldr	r0, [sp, #20]
 800f086:	fb02 0c0c 	mla	ip, r2, ip, r0
 800f08a:	fb9c fcfe 	sdiv	ip, ip, lr
 800f08e:	f00c 0c1f 	and.w	ip, ip, #31
 800f092:	ea41 010c 	orr.w	r1, r1, ip
 800f096:	f824 1b02 	strh.w	r1, [r4], #2
 800f09a:	e7d9      	b.n	800f050 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800f09c:	9a02      	ldr	r2, [sp, #8]
 800f09e:	441a      	add	r2, r3
 800f0a0:	4617      	mov	r7, r2
 800f0a2:	441e      	add	r6, r3
 800f0a4:	b236      	sxth	r6, r6
 800f0a6:	42be      	cmp	r6, r7
 800f0a8:	f340 80f9 	ble.w	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f0ac:	ed95 7a07 	vldr	s14, [r5, #28]
 800f0b0:	ee06 7a90 	vmov	s13, r7
 800f0b4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800f0b8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f0bc:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800f0c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0c4:	f340 80b5 	ble.w	800f232 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800f0c8:	ee06 6a10 	vmov	s12, r6
 800f0cc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800f0d0:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800f2a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800f0d4:	7c2b      	ldrb	r3, [r5, #16]
 800f0d6:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800f0da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f0de:	bfd8      	it	le
 800f0e0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800f0e4:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800f2ac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800f0e8:	bfd8      	it	le
 800f0ea:	ee17 8a10 	vmovle	r8, s14
 800f0ee:	ed95 7a08 	vldr	s14, [r5, #32]
 800f0f2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800f0f6:	bfc8      	it	gt
 800f0f8:	46b0      	movgt	r8, r6
 800f0fa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800f0fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f102:	eba8 0707 	sub.w	r7, r8, r7
 800f106:	bfd8      	it	le
 800f108:	eeb0 8a46 	vmovle.f32	s16, s12
 800f10c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800f110:	eea7 8a27 	vfma.f32	s16, s14, s15
 800f114:	b1db      	cbz	r3, 800f14e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800f116:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800f11a:	d118      	bne.n	800f14e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800f11c:	42bc      	cmp	r4, r7
 800f11e:	d262      	bcs.n	800f1e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800f120:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800f124:	68eb      	ldr	r3, [r5, #12]
 800f126:	ee17 0a90 	vmov	r0, s15
 800f12a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800f12e:	b2d3      	uxtb	r3, r2
 800f130:	9300      	str	r3, [sp, #0]
 800f132:	4649      	mov	r1, r9
 800f134:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800f138:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800f13c:	f7ff fe14 	bl	800ed68 <_ZN8touchgfxL10applyNoiseEiihhh>
 800f140:	f824 0b02 	strh.w	r0, [r4], #2
 800f144:	edd5 7a08 	vldr	s15, [r5, #32]
 800f148:	ee38 8a27 	vadd.f32	s16, s16, s15
 800f14c:	e7e6      	b.n	800f11c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800f14e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800f2b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f152:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800f156:	42bc      	cmp	r4, r7
 800f158:	d245      	bcs.n	800f1e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800f15a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800f15e:	68eb      	ldr	r3, [r5, #12]
 800f160:	f8b4 e000 	ldrh.w	lr, [r4]
 800f164:	ee17 2a90 	vmov	r2, s15
 800f168:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800f16c:	0e13      	lsrs	r3, r2, #24
 800f16e:	fb03 f30a 	mul.w	r3, r3, sl
 800f172:	1c58      	adds	r0, r3, #1
 800f174:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800f178:	1200      	asrs	r0, r0, #8
 800f17a:	ea6f 0c00 	mvn.w	ip, r0
 800f17e:	fa5f fc8c 	uxtb.w	ip, ip
 800f182:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800f186:	ea0e 030b 	and.w	r3, lr, fp
 800f18a:	fb0c f303 	mul.w	r3, ip, r3
 800f18e:	b289      	uxth	r1, r1
 800f190:	fb00 3101 	mla	r1, r0, r1, r3
 800f194:	fb91 f1f9 	sdiv	r1, r1, r9
 800f198:	ea01 030b 	and.w	r3, r1, fp
 800f19c:	9302      	str	r3, [sp, #8]
 800f19e:	0953      	lsrs	r3, r2, #5
 800f1a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800f1a4:	4619      	mov	r1, r3
 800f1a6:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800f1aa:	fb0c f303 	mul.w	r3, ip, r3
 800f1ae:	fb00 3301 	mla	r3, r0, r1, r3
 800f1b2:	f00e 0e1f 	and.w	lr, lr, #31
 800f1b6:	9902      	ldr	r1, [sp, #8]
 800f1b8:	fb93 f3f9 	sdiv	r3, r3, r9
 800f1bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800f1c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800f1c4:	fb0c fc0e 	mul.w	ip, ip, lr
 800f1c8:	4319      	orrs	r1, r3
 800f1ca:	fb00 c002 	mla	r0, r0, r2, ip
 800f1ce:	fb90 f0f9 	sdiv	r0, r0, r9
 800f1d2:	f000 001f 	and.w	r0, r0, #31
 800f1d6:	4301      	orrs	r1, r0
 800f1d8:	f824 1b02 	strh.w	r1, [r4], #2
 800f1dc:	edd5 7a08 	vldr	s15, [r5, #32]
 800f1e0:	ee38 8a27 	vadd.f32	s16, s16, s15
 800f1e4:	e7b7      	b.n	800f156 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800f1e6:	4546      	cmp	r6, r8
 800f1e8:	dd59      	ble.n	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f1ea:	edd5 7a08 	vldr	s15, [r5, #32]
 800f1ee:	68ea      	ldr	r2, [r5, #12]
 800f1f0:	7c29      	ldrb	r1, [r5, #16]
 800f1f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f1f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1fa:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800f1fe:	bfd8      	it	le
 800f200:	2300      	movle	r3, #0
 800f202:	eba6 0608 	sub.w	r6, r6, r8
 800f206:	58d2      	ldr	r2, [r2, r3]
 800f208:	0a10      	lsrs	r0, r2, #8
 800f20a:	0953      	lsrs	r3, r2, #5
 800f20c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800f210:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800f214:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800f218:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800f21c:	b159      	cbz	r1, 800f236 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800f21e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800f222:	d108      	bne.n	800f236 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800f224:	4318      	orrs	r0, r3
 800f226:	4338      	orrs	r0, r7
 800f228:	42b4      	cmp	r4, r6
 800f22a:	d238      	bcs.n	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f22c:	f824 0b02 	strh.w	r0, [r4], #2
 800f230:	e7fa      	b.n	800f228 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800f232:	46b8      	mov	r8, r7
 800f234:	e7d9      	b.n	800f1ea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800f236:	0e12      	lsrs	r2, r2, #24
 800f238:	fb02 f10a 	mul.w	r1, r2, sl
 800f23c:	1c4a      	adds	r2, r1, #1
 800f23e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800f242:	1212      	asrs	r2, r2, #8
 800f244:	fb02 f507 	mul.w	r5, r2, r7
 800f248:	4350      	muls	r0, r2
 800f24a:	4353      	muls	r3, r2
 800f24c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800f2b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800f250:	43d2      	mvns	r2, r2
 800f252:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800f256:	27ff      	movs	r7, #255	@ 0xff
 800f258:	42b4      	cmp	r4, r6
 800f25a:	d220      	bcs.n	800f29e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800f25c:	f8b4 e000 	ldrh.w	lr, [r4]
 800f260:	ea0e 010c 	and.w	r1, lr, ip
 800f264:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800f268:	fb02 0101 	mla	r1, r2, r1, r0
 800f26c:	fb02 3808 	mla	r8, r2, r8, r3
 800f270:	fb91 f1f7 	sdiv	r1, r1, r7
 800f274:	fb98 f8f7 	sdiv	r8, r8, r7
 800f278:	ea01 010c 	and.w	r1, r1, ip
 800f27c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800f280:	f00e 0e1f 	and.w	lr, lr, #31
 800f284:	ea41 0108 	orr.w	r1, r1, r8
 800f288:	fb02 5e0e 	mla	lr, r2, lr, r5
 800f28c:	fb9e fef7 	sdiv	lr, lr, r7
 800f290:	f00e 0e1f 	and.w	lr, lr, #31
 800f294:	ea41 010e 	orr.w	r1, r1, lr
 800f298:	f824 1b02 	strh.w	r1, [r4], #2
 800f29c:	e7dc      	b.n	800f258 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800f29e:	b007      	add	sp, #28
 800f2a0:	ecbd 8b02 	vpop	{d8}
 800f2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2a8:	00000000 	.word	0x00000000
 800f2ac:	447ffffe 	.word	0x447ffffe
 800f2b0:	fffff800 	.word	0xfffff800

0800f2b4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800f2b4:	4770      	bx	lr

0800f2b6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800f2b6:	4770      	bx	lr

0800f2b8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800f2b8:	b510      	push	{r4, lr}
 800f2ba:	2124      	movs	r1, #36	@ 0x24
 800f2bc:	4604      	mov	r4, r0
 800f2be:	f017 fda9 	bl	8026e14 <_ZdlPvj>
 800f2c2:	4620      	mov	r0, r4
 800f2c4:	bd10      	pop	{r4, pc}
	...

0800f2c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800f2c8:	4b06      	ldr	r3, [pc, #24]	@ (800f2e4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800f2ca:	60c1      	str	r1, [r0, #12]
 800f2cc:	094a      	lsrs	r2, r1, #5
 800f2ce:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800f2d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800f2d6:	4313      	orrs	r3, r2
 800f2d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800f2dc:	4319      	orrs	r1, r3
 800f2de:	8201      	strh	r1, [r0, #16]
 800f2e0:	4770      	bx	lr
 800f2e2:	bf00      	nop
 800f2e4:	fffff800 	.word	0xfffff800

0800f2e8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800f2e8:	f1a0 0008 	sub.w	r0, r0, #8
 800f2ec:	e7ec      	b.n	800f2c8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800f2ee:	bf00      	nop

0800f2f0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800f2f0:	b508      	push	{r3, lr}
 800f2f2:	4b05      	ldr	r3, [pc, #20]	@ (800f308 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800f2f4:	6818      	ldr	r0, [r3, #0]
 800f2f6:	6803      	ldr	r3, [r0, #0]
 800f2f8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800f2fc:	4798      	blx	r3
 800f2fe:	1e43      	subs	r3, r0, #1
 800f300:	4258      	negs	r0, r3
 800f302:	4158      	adcs	r0, r3
 800f304:	bd08      	pop	{r3, pc}
 800f306:	bf00      	nop
 800f308:	20013f60 	.word	0x20013f60

0800f30c <_ZN8touchgfx13PainterRGB565D1Ev>:
 800f30c:	4770      	bx	lr

0800f30e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800f30e:	3808      	subs	r0, #8
 800f310:	4770      	bx	lr

0800f312 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800f312:	b430      	push	{r4, r5}
 800f314:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800f318:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800f31c:	8a02      	ldrh	r2, [r0, #16]
 800f31e:	9202      	str	r2, [sp, #8]
 800f320:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800f324:	68c2      	ldr	r2, [r0, #12]
 800f326:	4629      	mov	r1, r5
 800f328:	4620      	mov	r0, r4
 800f32a:	bc30      	pop	{r4, r5}
 800f32c:	f7f1 bdf2 	b.w	8000f14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800f330 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800f330:	f7f1 bde4 	b.w	8000efc <_ZN8touchgfx5paint8tearDownEv>

0800f334 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800f334:	b510      	push	{r4, lr}
 800f336:	2114      	movs	r1, #20
 800f338:	4604      	mov	r4, r0
 800f33a:	f017 fd6b 	bl	8026e14 <_ZdlPvj>
 800f33e:	4620      	mov	r0, r4
 800f340:	bd10      	pop	{r4, pc}

0800f342 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800f342:	f1a0 0008 	sub.w	r0, r0, #8
 800f346:	e7f5      	b.n	800f334 <_ZN8touchgfx13PainterRGB565D0Ev>

0800f348 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800f348:	2300      	movs	r3, #0
 800f34a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800f34c:	8503      	strh	r3, [r0, #40]	@ 0x28
 800f34e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800f350:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800f352:	6980      	ldr	r0, [r0, #24]
 800f354:	b110      	cbz	r0, 800f35c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800f356:	6803      	ldr	r3, [r0, #0]
 800f358:	691b      	ldr	r3, [r3, #16]
 800f35a:	4718      	bx	r3
 800f35c:	4770      	bx	lr

0800f35e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800f35e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800f362:	4770      	bx	lr

0800f364 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800f364:	b538      	push	{r3, r4, r5, lr}
 800f366:	0e0b      	lsrs	r3, r1, #24
 800f368:	7783      	strb	r3, [r0, #30]
 800f36a:	6803      	ldr	r3, [r0, #0]
 800f36c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f36e:	4604      	mov	r4, r0
 800f370:	460d      	mov	r5, r1
 800f372:	4798      	blx	r3
 800f374:	6803      	ldr	r3, [r0, #0]
 800f376:	4629      	mov	r1, r5
 800f378:	689b      	ldr	r3, [r3, #8]
 800f37a:	4798      	blx	r3
 800f37c:	6823      	ldr	r3, [r4, #0]
 800f37e:	4620      	mov	r0, r4
 800f380:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f382:	4798      	blx	r3
 800f384:	61a0      	str	r0, [r4, #24]
 800f386:	bd38      	pop	{r3, r4, r5, pc}

0800f388 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800f388:	7741      	strb	r1, [r0, #29]
 800f38a:	4770      	bx	lr

0800f38c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800f38c:	b530      	push	{r4, r5, lr}
 800f38e:	460d      	mov	r5, r1
 800f390:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800f394:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f396:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f398:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f39a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f39c:	682b      	ldr	r3, [r5, #0]
 800f39e:	6023      	str	r3, [r4, #0]
 800f3a0:	bd30      	pop	{r4, r5, pc}

0800f3a2 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800f3a2:	b538      	push	{r3, r4, r5, lr}
 800f3a4:	4604      	mov	r4, r0
 800f3a6:	1d03      	adds	r3, r0, #4
 800f3a8:	6808      	ldr	r0, [r1, #0]
 800f3aa:	6849      	ldr	r1, [r1, #4]
 800f3ac:	c303      	stmia	r3!, {r0, r1}
 800f3ae:	6813      	ldr	r3, [r2, #0]
 800f3b0:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800f3b4:	6853      	ldr	r3, [r2, #4]
 800f3b6:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800f3ba:	2500      	movs	r5, #0
 800f3bc:	61a5      	str	r5, [r4, #24]
 800f3be:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800f3c2:	f006 fbf5 	bl	8015bb0 <_ZN8touchgfx9Matrix3x35resetEv>
 800f3c6:	23ff      	movs	r3, #255	@ 0xff
 800f3c8:	7763      	strb	r3, [r4, #29]
 800f3ca:	77a3      	strb	r3, [r4, #30]
 800f3cc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800f3d0:	6323      	str	r3, [r4, #48]	@ 0x30
 800f3d2:	2301      	movs	r3, #1
 800f3d4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800f3d8:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800f3dc:	bd38      	pop	{r3, r4, r5, pc}
	...

0800f3e0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800f3e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3e4:	ed2d 8b0a 	vpush	{d8-d12}
 800f3e8:	ee70 7a41 	vsub.f32	s15, s0, s2
 800f3ec:	b086      	sub	sp, #24
 800f3ee:	eef5 7a40 	vcmp.f32	s15, #0.0
 800f3f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3f6:	4605      	mov	r5, r0
 800f3f8:	eeb0 ba40 	vmov.f32	s22, s0
 800f3fc:	eef0 ba60 	vmov.f32	s23, s1
 800f400:	eef0 aa41 	vmov.f32	s21, s2
 800f404:	eeb0 aa61 	vmov.f32	s20, s3
 800f408:	eeb0 ca42 	vmov.f32	s24, s4
 800f40c:	eef0 ca62 	vmov.f32	s25, s5
 800f410:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
 800f414:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 800f416:	6802      	ldr	r2, [r0, #0]
 800f418:	d112      	bne.n	800f440 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800f41a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800f41e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800f422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f426:	d10b      	bne.n	800f440 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800f428:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800f42c:	3901      	subs	r1, #1
 800f42e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800f430:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800f434:	b006      	add	sp, #24
 800f436:	ecbd 8b0a 	vpop	{d8-d12}
 800f43a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f43e:	4710      	bx	r2
 800f440:	23ff      	movs	r3, #255	@ 0xff
 800f442:	77ab      	strb	r3, [r5, #30]
 800f444:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800f446:	4628      	mov	r0, r5
 800f448:	4798      	blx	r3
 800f44a:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800f44e:	eef0 0a6b 	vmov.f32	s1, s23
 800f452:	eeb0 0a4b 	vmov.f32	s0, s22
 800f456:	4604      	mov	r4, r0
 800f458:	4640      	mov	r0, r8
 800f45a:	f006 fc58 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f45e:	4640      	mov	r0, r8
 800f460:	eef0 8a40 	vmov.f32	s17, s0
 800f464:	eef0 9a60 	vmov.f32	s19, s1
 800f468:	ed8d 0a00 	vstr	s0, [sp]
 800f46c:	edcd 0a01 	vstr	s1, [sp, #4]
 800f470:	eeb0 0a6a 	vmov.f32	s0, s21
 800f474:	eef0 0a4a 	vmov.f32	s1, s20
 800f478:	f006 fc49 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f47c:	eef4 8a40 	vcmp.f32	s17, s0
 800f480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f484:	eef4 9a60 	vcmp.f32	s19, s1
 800f488:	bf0c      	ite	eq
 800f48a:	2301      	moveq	r3, #1
 800f48c:	2300      	movne	r3, #0
 800f48e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f492:	eef4 8a40 	vcmp.f32	s17, s0
 800f496:	7463      	strb	r3, [r4, #17]
 800f498:	bf0c      	ite	eq
 800f49a:	2301      	moveq	r3, #1
 800f49c:	2300      	movne	r3, #0
 800f49e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f4a2:	eeb0 8a40 	vmov.f32	s16, s0
 800f4a6:	eeb0 9a60 	vmov.f32	s18, s1
 800f4aa:	ed8d 0a02 	vstr	s0, [sp, #8]
 800f4ae:	edcd 0a03 	vstr	s1, [sp, #12]
 800f4b2:	74a3      	strb	r3, [r4, #18]
 800f4b4:	d024      	beq.n	800f500 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 800f4b6:	eef4 9a60 	vcmp.f32	s19, s1
 800f4ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f4be:	d01f      	beq.n	800f500 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 800f4c0:	ee7a aacb 	vsub.f32	s21, s21, s22
 800f4c4:	ee3a aa6b 	vsub.f32	s20, s20, s23
 800f4c8:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
 800f4cc:	4640      	mov	r0, r8
 800f4ce:	eeca 7a2c 	vdiv.f32	s15, s20, s25
 800f4d2:	eef0 0a6b 	vmov.f32	s1, s23
 800f4d6:	eeb0 0a4b 	vmov.f32	s0, s22
 800f4da:	eea7 0acc 	vfms.f32	s0, s15, s24
 800f4de:	eeec 0a87 	vfma.f32	s1, s25, s14
 800f4e2:	f006 fc14 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f4e6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800f4ea:	ee30 0a68 	vsub.f32	s0, s0, s17
 800f4ee:	edcd 0a05 	vstr	s1, [sp, #20]
 800f4f2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800f4f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f4fa:	d120      	bne.n	800f53e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x15e>
 800f4fc:	2301      	movs	r3, #1
 800f4fe:	74a3      	strb	r3, [r4, #18]
 800f500:	7c63      	ldrb	r3, [r4, #17]
 800f502:	2b00      	cmp	r3, #0
 800f504:	d050      	beq.n	800f5a8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c8>
 800f506:	ee39 7a69 	vsub.f32	s14, s18, s19
 800f50a:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 800f5fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 800f50e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800f512:	eef4 9ac9 	vcmpe.f32	s19, s18
 800f516:	edc4 7a08 	vstr	s15, [r4, #32]
 800f51a:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 800f51e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f522:	ee17 3a90 	vmov	r3, s15
 800f526:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 800f52a:	b21a      	sxth	r2, r3
 800f52c:	ee17 3a90 	vmov	r3, s15
 800f530:	b21b      	sxth	r3, r3
 800f532:	bf47      	ittee	mi
 800f534:	80e3      	strhmi	r3, [r4, #6]
 800f536:	8122      	strhmi	r2, [r4, #8]
 800f538:	80e2      	strhpl	r2, [r4, #6]
 800f53a:	8123      	strhpl	r3, [r4, #8]
 800f53c:	e02c      	b.n	800f598 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f53e:	ee70 0ae9 	vsub.f32	s1, s1, s19
 800f542:	eec0 7a80 	vdiv.f32	s15, s1, s0
 800f546:	eef5 7a40 	vcmp.f32	s15, #0.0
 800f54a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f54e:	edc4 7a05 	vstr	s15, [r4, #20]
 800f552:	d102      	bne.n	800f55a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17a>
 800f554:	2301      	movs	r3, #1
 800f556:	7463      	strb	r3, [r4, #17]
 800f558:	e7d2      	b.n	800f500 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 800f55a:	eeb0 7a69 	vmov.f32	s14, s19
 800f55e:	eea8 7ae7 	vfms.f32	s14, s17, s15
 800f562:	ee39 9a69 	vsub.f32	s18, s18, s19
 800f566:	ed84 7a06 	vstr	s14, [r4, #24]
 800f56a:	ee89 7a27 	vdiv.f32	s14, s18, s15
 800f56e:	ee38 8a68 	vsub.f32	s16, s16, s17
 800f572:	ee38 8a47 	vsub.f32	s16, s16, s14
 800f576:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 800f600 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
 800f57a:	ed84 8a07 	vstr	s16, [r4, #28]
 800f57e:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800f582:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800f586:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f58a:	edc4 7a08 	vstr	s15, [r4, #32]
 800f58e:	d503      	bpl.n	800f598 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f590:	eeb1 8a48 	vneg.f32	s16, s16
 800f594:	ed84 8a07 	vstr	s16, [r4, #28]
 800f598:	60e7      	str	r7, [r4, #12]
 800f59a:	7426      	strb	r6, [r4, #16]
 800f59c:	61ac      	str	r4, [r5, #24]
 800f59e:	b006      	add	sp, #24
 800f5a0:	ecbd 8b0a 	vpop	{d8-d12}
 800f5a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5a8:	7ca3      	ldrb	r3, [r4, #18]
 800f5aa:	2b00      	cmp	r3, #0
 800f5ac:	d0f4      	beq.n	800f598 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f5ae:	ee38 7a68 	vsub.f32	s14, s16, s17
 800f5b2:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800f5fc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 800f5b6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800f5ba:	eef4 8ac8 	vcmpe.f32	s17, s16
 800f5be:	edc4 7a08 	vstr	s15, [r4, #32]
 800f5c2:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800f5c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f5ca:	ee17 3a90 	vmov	r3, s15
 800f5ce:	eefd 7ae8 	vcvt.s32.f32	s15, s17
 800f5d2:	b21a      	sxth	r2, r3
 800f5d4:	ee17 3a90 	vmov	r3, s15
 800f5d8:	b21b      	sxth	r3, r3
 800f5da:	bf47      	ittee	mi
 800f5dc:	80e3      	strhmi	r3, [r4, #6]
 800f5de:	8122      	strhmi	r2, [r4, #8]
 800f5e0:	80e2      	strhpl	r2, [r4, #6]
 800f5e2:	8123      	strhpl	r3, [r4, #8]
 800f5e4:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f5e8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f5ec:	1a9b      	subs	r3, r3, r2
 800f5ee:	ee07 3a90 	vmov	s15, r3
 800f5f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f5f6:	edc4 7a07 	vstr	s15, [r4, #28]
 800f5fa:	e7cd      	b.n	800f598 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 800f5fc:	447ffffe 	.word	0x447ffffe
 800f600:	44800000 	.word	0x44800000

0800f604 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800f604:	b510      	push	{r4, lr}
 800f606:	2100      	movs	r1, #0
 800f608:	ed2d 8b02 	vpush	{d8}
 800f60c:	eef0 8a62 	vmov.f32	s17, s5
 800f610:	4604      	mov	r4, r0
 800f612:	eeb0 8a42 	vmov.f32	s16, s4
 800f616:	f017 f96d 	bl	80268f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800f61a:	eef0 7a68 	vmov.f32	s15, s17
 800f61e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f622:	6823      	ldr	r3, [r4, #0]
 800f624:	ee17 2a90 	vmov	r2, s15
 800f628:	eef0 7a48 	vmov.f32	s15, s16
 800f62c:	ecbd 8b02 	vpop	{d8}
 800f630:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f634:	4620      	mov	r0, r4
 800f636:	689b      	ldr	r3, [r3, #8]
 800f638:	ee17 1a90 	vmov	r1, s15
 800f63c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f640:	4718      	bx	r3

0800f642 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800f642:	b510      	push	{r4, lr}
 800f644:	2100      	movs	r1, #0
 800f646:	ed2d 8b02 	vpush	{d8}
 800f64a:	eef0 8a63 	vmov.f32	s17, s7
 800f64e:	4604      	mov	r4, r0
 800f650:	eeb0 8a43 	vmov.f32	s16, s6
 800f654:	f017 fa10 	bl	8026a78 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800f658:	eef0 7a68 	vmov.f32	s15, s17
 800f65c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f660:	6823      	ldr	r3, [r4, #0]
 800f662:	ee17 2a90 	vmov	r2, s15
 800f666:	eef0 7a48 	vmov.f32	s15, s16
 800f66a:	ecbd 8b02 	vpop	{d8}
 800f66e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f672:	4620      	mov	r0, r4
 800f674:	689b      	ldr	r3, [r3, #8]
 800f676:	ee17 1a90 	vmov	r1, s15
 800f67a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f67e:	4718      	bx	r3

0800f680 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800f680:	b513      	push	{r0, r1, r4, lr}
 800f682:	4604      	mov	r4, r0
 800f684:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800f686:	f006 fb42 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f68a:	eef0 7a60 	vmov.f32	s15, s1
 800f68e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f692:	4620      	mov	r0, r4
 800f694:	ee17 2a90 	vmov	r2, s15
 800f698:	eef0 7a40 	vmov.f32	s15, s0
 800f69c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f6a0:	ee17 1a90 	vmov	r1, s15
 800f6a4:	b002      	add	sp, #8
 800f6a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6aa:	f017 b87d 	b.w	80267a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800f6ae:	b513      	push	{r0, r1, r4, lr}
 800f6b0:	4604      	mov	r4, r0
 800f6b2:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800f6b4:	f006 fb2b 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800f6b8:	eef0 7a60 	vmov.f32	s15, s1
 800f6bc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f6c0:	4620      	mov	r0, r4
 800f6c2:	ee17 2a90 	vmov	r2, s15
 800f6c6:	eef0 7a40 	vmov.f32	s15, s0
 800f6ca:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800f6ce:	ee17 1a90 	vmov	r1, s15
 800f6d2:	b002      	add	sp, #8
 800f6d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6d8:	f017 b8b3 	b.w	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800f6dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800f6dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6de:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800f6e2:	2400      	movs	r4, #0
 800f6e4:	9f07      	ldr	r7, [sp, #28]
 800f6e6:	4463      	add	r3, ip
 800f6e8:	4626      	mov	r6, r4
 800f6ea:	f04f 0e01 	mov.w	lr, #1
 800f6ee:	4563      	cmp	r3, ip
 800f6f0:	d02d      	beq.n	800f74e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800f6f2:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800f6f6:	2d06      	cmp	r5, #6
 800f6f8:	d8f9      	bhi.n	800f6ee <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f6fa:	fa0e f505 	lsl.w	r5, lr, r5
 800f6fe:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800f702:	d10d      	bne.n	800f720 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800f704:	f015 0f10 	tst.w	r5, #16
 800f708:	d117      	bne.n	800f73a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800f70a:	072d      	lsls	r5, r5, #28
 800f70c:	d5ef      	bpl.n	800f6ee <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f70e:	3801      	subs	r0, #1
 800f710:	b91e      	cbnz	r6, 800f71a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800f712:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800f716:	682d      	ldr	r5, [r5, #0]
 800f718:	600d      	str	r5, [r1, #0]
 800f71a:	b96c      	cbnz	r4, 800f738 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f71c:	2601      	movs	r6, #1
 800f71e:	e7e6      	b.n	800f6ee <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f720:	b926      	cbnz	r6, 800f72c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800f722:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800f726:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800f72a:	600b      	str	r3, [r1, #0]
 800f72c:	b924      	cbnz	r4, 800f738 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f72e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f732:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800f736:	6013      	str	r3, [r2, #0]
 800f738:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f73a:	3801      	subs	r0, #1
 800f73c:	b91c      	cbnz	r4, 800f746 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800f73e:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800f742:	6824      	ldr	r4, [r4, #0]
 800f744:	6014      	str	r4, [r2, #0]
 800f746:	2e00      	cmp	r6, #0
 800f748:	d1f6      	bne.n	800f738 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f74a:	2401      	movs	r4, #1
 800f74c:	e7cf      	b.n	800f6ee <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800f74e:	b90e      	cbnz	r6, 800f754 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800f750:	2300      	movs	r3, #0
 800f752:	600b      	str	r3, [r1, #0]
 800f754:	2c00      	cmp	r4, #0
 800f756:	d1ef      	bne.n	800f738 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800f758:	2300      	movs	r3, #0
 800f75a:	e7ec      	b.n	800f736 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800f75c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800f75c:	b538      	push	{r3, r4, r5, lr}
 800f75e:	4604      	mov	r4, r0
 800f760:	ed2d 8b0a 	vpush	{d8-d12}
 800f764:	460d      	mov	r5, r1
 800f766:	eef0 ba40 	vmov.f32	s23, s0
 800f76a:	eeb0 ca60 	vmov.f32	s24, s1
 800f76e:	eef0 aa41 	vmov.f32	s21, s2
 800f772:	eeb0 ba61 	vmov.f32	s22, s3
 800f776:	eeb0 9a42 	vmov.f32	s18, s4
 800f77a:	eef0 9a62 	vmov.f32	s19, s5
 800f77e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800f782:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800f786:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800f78a:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800f78e:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800f792:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800f796:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800f79a:	ee20 0a00 	vmul.f32	s0, s0, s0
 800f79e:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800f7a2:	f017 fb61 	bl	8026e68 <sqrtf>
 800f7a6:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800f7aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f7ae:	d12e      	bne.n	800f80e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800f7b0:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800f7b4:	ee39 7acb 	vsub.f32	s14, s19, s22
 800f7b8:	eeb0 8a6a 	vmov.f32	s16, s21
 800f7bc:	eef0 8a4b 	vmov.f32	s17, s22
 800f7c0:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800f7c4:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800f7c8:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800f7cc:	eee7 8aca 	vfms.f32	s17, s15, s20
 800f7d0:	2d02      	cmp	r5, #2
 800f7d2:	dc2f      	bgt.n	800f834 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800f7d4:	3501      	adds	r5, #1
 800f7d6:	eef0 1a4b 	vmov.f32	s3, s22
 800f7da:	eeb0 1a6a 	vmov.f32	s2, s21
 800f7de:	4629      	mov	r1, r5
 800f7e0:	eef0 2a68 	vmov.f32	s5, s17
 800f7e4:	eeb0 2a48 	vmov.f32	s4, s16
 800f7e8:	eef0 0a4c 	vmov.f32	s1, s24
 800f7ec:	eeb0 0a6b 	vmov.f32	s0, s23
 800f7f0:	4620      	mov	r0, r4
 800f7f2:	f7ff ffb3 	bl	800f75c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800f7f6:	eef0 0a68 	vmov.f32	s1, s17
 800f7fa:	eeb0 0a48 	vmov.f32	s0, s16
 800f7fe:	4620      	mov	r0, r4
 800f800:	f7ff ff55 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f804:	eeb0 ba68 	vmov.f32	s22, s17
 800f808:	eef0 aa48 	vmov.f32	s21, s16
 800f80c:	e7b9      	b.n	800f782 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800f80e:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800f812:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800f816:	ee78 8acc 	vsub.f32	s17, s17, s24
 800f81a:	ee28 7a27 	vmul.f32	s14, s16, s15
 800f81e:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800f822:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800f826:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800f82a:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800f82e:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800f832:	e7cd      	b.n	800f7d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800f834:	eef0 0a68 	vmov.f32	s1, s17
 800f838:	eeb0 0a48 	vmov.f32	s0, s16
 800f83c:	4620      	mov	r0, r4
 800f83e:	f7ff ff36 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f842:	ecbd 8b0a 	vpop	{d8-d12}
 800f846:	bd38      	pop	{r3, r4, r5, pc}

0800f848 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800f848:	b510      	push	{r4, lr}
 800f84a:	ed2d 8b0a 	vpush	{d8-d12}
 800f84e:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800f852:	2b02      	cmp	r3, #2
 800f854:	4604      	mov	r4, r0
 800f856:	eeb0 ca40 	vmov.f32	s24, s0
 800f85a:	eeb0 9a60 	vmov.f32	s18, s1
 800f85e:	eef0 9a41 	vmov.f32	s19, s2
 800f862:	eef0 8a61 	vmov.f32	s17, s3
 800f866:	eeb0 ba42 	vmov.f32	s22, s4
 800f86a:	eef0 ba62 	vmov.f32	s23, s5
 800f86e:	eeb0 aa43 	vmov.f32	s20, s6
 800f872:	eef0 aa63 	vmov.f32	s21, s7
 800f876:	eeb0 8a44 	vmov.f32	s16, s8
 800f87a:	eef0 ca64 	vmov.f32	s25, s9
 800f87e:	d12c      	bne.n	800f8da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800f880:	eef0 0a62 	vmov.f32	s1, s5
 800f884:	eeb0 0a42 	vmov.f32	s0, s4
 800f888:	f7ff ff11 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f88c:	ee79 9acb 	vsub.f32	s19, s19, s22
 800f890:	ee7a caec 	vsub.f32	s25, s21, s25
 800f894:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800f898:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800f89c:	ee69 9aac 	vmul.f32	s19, s19, s25
 800f8a0:	ee28 8a88 	vmul.f32	s16, s17, s16
 800f8a4:	eef4 9ac8 	vcmpe.f32	s19, s16
 800f8a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f8ac:	db0f      	blt.n	800f8ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800f8ae:	2101      	movs	r1, #1
 800f8b0:	eef0 2a6a 	vmov.f32	s5, s21
 800f8b4:	eeb0 2a4a 	vmov.f32	s4, s20
 800f8b8:	eef0 1a6b 	vmov.f32	s3, s23
 800f8bc:	eeb0 1a4b 	vmov.f32	s2, s22
 800f8c0:	eef0 0a49 	vmov.f32	s1, s18
 800f8c4:	eeb0 0a4c 	vmov.f32	s0, s24
 800f8c8:	4620      	mov	r0, r4
 800f8ca:	f7ff ff47 	bl	800f75c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800f8ce:	eef0 0a6a 	vmov.f32	s1, s21
 800f8d2:	eeb0 0a4a 	vmov.f32	s0, s20
 800f8d6:	4620      	mov	r0, r4
 800f8d8:	e035      	b.n	800f946 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800f8da:	2b01      	cmp	r3, #1
 800f8dc:	d138      	bne.n	800f950 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800f8de:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800f8e2:	ee33 6a48 	vsub.f32	s12, s6, s16
 800f8e6:	ee71 7a42 	vsub.f32	s15, s2, s4
 800f8ea:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800f8ee:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800f8f2:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800f8f6:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800f8fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f8fe:	d027      	beq.n	800f950 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800f900:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800f904:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800f908:	eea4 8a83 	vfma.f32	s16, s9, s6
 800f90c:	eee1 8a22 	vfma.f32	s17, s2, s5
 800f910:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800f914:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800f918:	eee6 7a28 	vfma.f32	s15, s12, s17
 800f91c:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800f920:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800f924:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800f928:	ee3c ca40 	vsub.f32	s24, s24, s0
 800f92c:	ee39 9a60 	vsub.f32	s18, s18, s1
 800f930:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800f934:	ee29 9a09 	vmul.f32	s18, s18, s18
 800f938:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800f93c:	eef4 7ac9 	vcmpe.f32	s15, s18
 800f940:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f944:	db04      	blt.n	800f950 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800f946:	f7ff feb2 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f94a:	ecbd 8b0a 	vpop	{d8-d12}
 800f94e:	bd10      	pop	{r4, pc}
 800f950:	eef0 0a6b 	vmov.f32	s1, s23
 800f954:	eeb0 0a4b 	vmov.f32	s0, s22
 800f958:	4620      	mov	r0, r4
 800f95a:	f7ff fea8 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f95e:	e7b6      	b.n	800f8ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800f960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800f960:	b510      	push	{r4, lr}
 800f962:	ed2d 8b0c 	vpush	{d8-d13}
 800f966:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800f96a:	4604      	mov	r4, r0
 800f96c:	eeb0 9a40 	vmov.f32	s18, s0
 800f970:	eef0 9a60 	vmov.f32	s19, s1
 800f974:	eef0 aa41 	vmov.f32	s21, s2
 800f978:	eeb0 ba61 	vmov.f32	s22, s3
 800f97c:	b933      	cbnz	r3, 800f98c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800f97e:	f7ff fe96 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f982:	eef0 0a4b 	vmov.f32	s1, s22
 800f986:	eeb0 0a6a 	vmov.f32	s0, s21
 800f98a:	e015      	b.n	800f9b8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800f98c:	ee71 8a40 	vsub.f32	s17, s2, s0
 800f990:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800f994:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800f998:	2b02      	cmp	r3, #2
 800f99a:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800f99e:	ee28 8a27 	vmul.f32	s16, s16, s15
 800f9a2:	d10f      	bne.n	800f9c4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800f9a4:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800f9a8:	ee30 0a08 	vadd.f32	s0, s0, s16
 800f9ac:	f7ff fe7f 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f9b0:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800f9b4:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800f9b8:	4620      	mov	r0, r4
 800f9ba:	f7ff fe78 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f9be:	ecbd 8b0c 	vpop	{d8-d13}
 800f9c2:	bd10      	pop	{r4, pc}
 800f9c4:	f7ff fe73 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f9c8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800fb00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800f9cc:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800fb04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800f9d0:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800fb08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800f9d4:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800fb0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800f9d8:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800fb10 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800f9dc:	eef0 0a69 	vmov.f32	s1, s19
 800f9e0:	eeb0 0a49 	vmov.f32	s0, s18
 800f9e4:	eee8 0a27 	vfma.f32	s1, s16, s15
 800f9e8:	4620      	mov	r0, r4
 800f9ea:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800f9ee:	eeb1 aa68 	vneg.f32	s20, s17
 800f9f2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800f9f6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800f9fa:	f7ff fe58 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800f9fe:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800fb14 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800fa02:	eef0 0a69 	vmov.f32	s1, s19
 800fa06:	eeb0 0a49 	vmov.f32	s0, s18
 800fa0a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fa0e:	4620      	mov	r0, r4
 800fa10:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fa14:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800fa18:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800fa1c:	f7ff fe47 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa20:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800fb18 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800fa24:	eef0 0a69 	vmov.f32	s1, s19
 800fa28:	eeb0 0a49 	vmov.f32	s0, s18
 800fa2c:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fa30:	4620      	mov	r0, r4
 800fa32:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fa36:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800fa3a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800fa3e:	f7ff fe36 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa42:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800fb1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800fa46:	eef0 0a69 	vmov.f32	s1, s19
 800fa4a:	eeb0 0a49 	vmov.f32	s0, s18
 800fa4e:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fa52:	4620      	mov	r0, r4
 800fa54:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fa58:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800fa5c:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800fa60:	f7ff fe25 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa64:	ee79 0a88 	vadd.f32	s1, s19, s16
 800fa68:	ee39 0a28 	vadd.f32	s0, s18, s17
 800fa6c:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800fa70:	ee30 0a08 	vadd.f32	s0, s0, s16
 800fa74:	4620      	mov	r0, r4
 800fa76:	f7ff fe1a 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa7a:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800fb20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800fa7e:	eef0 0a69 	vmov.f32	s1, s19
 800fa82:	eeb0 0a49 	vmov.f32	s0, s18
 800fa86:	eee8 0a27 	vfma.f32	s1, s16, s15
 800fa8a:	4620      	mov	r0, r4
 800fa8c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fa90:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800fa94:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800fa98:	f7ff fe09 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fa9c:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800fb24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800faa0:	eef0 0a69 	vmov.f32	s1, s19
 800faa4:	eeb0 0a49 	vmov.f32	s0, s18
 800faa8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800faac:	4620      	mov	r0, r4
 800faae:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fab2:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800fab6:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800faba:	f7ff fdf8 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fabe:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800fb28 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800fac2:	eef0 0a69 	vmov.f32	s1, s19
 800fac6:	eeb0 0a49 	vmov.f32	s0, s18
 800faca:	eee8 0a27 	vfma.f32	s1, s16, s15
 800face:	4620      	mov	r0, r4
 800fad0:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800fad4:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800fad8:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800fadc:	f7ff fde7 	bl	800f6ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800fae0:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800fb2c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800fae4:	eef0 0a69 	vmov.f32	s1, s19
 800fae8:	eeb0 0a49 	vmov.f32	s0, s18
 800faec:	eee8 0a27 	vfma.f32	s1, s16, s15
 800faf0:	4620      	mov	r0, r4
 800faf2:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800faf6:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800fafa:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800fafe:	e73e      	b.n	800f97e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800fb00:	3d23d70a 	.word	0x3d23d70a
 800fb04:	3e8f5c29 	.word	0x3e8f5c29
 800fb08:	3f19999a 	.word	0x3f19999a
 800fb0c:	3f4ccccd 	.word	0x3f4ccccd
 800fb10:	3f75c28f 	.word	0x3f75c28f
 800fb14:	3e4ccccd 	.word	0x3e4ccccd
 800fb18:	3ecccccd 	.word	0x3ecccccd
 800fb1c:	3f3851ec 	.word	0x3f3851ec
 800fb20:	3fa3d70a 	.word	0x3fa3d70a
 800fb24:	3fcccccd 	.word	0x3fcccccd
 800fb28:	3fe66666 	.word	0x3fe66666
 800fb2c:	3ffae148 	.word	0x3ffae148

0800fb30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800fb30:	b570      	push	{r4, r5, r6, lr}
 800fb32:	ed2d 8b06 	vpush	{d8-d10}
 800fb36:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800fb3a:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800fb3e:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800fb42:	ee30 9a49 	vsub.f32	s18, s0, s18
 800fb46:	eef0 aa40 	vmov.f32	s21, s0
 800fb4a:	ee28 0a08 	vmul.f32	s0, s16, s16
 800fb4e:	4604      	mov	r4, r0
 800fb50:	eea9 0a09 	vfma.f32	s0, s18, s18
 800fb54:	eeb0 aa60 	vmov.f32	s20, s1
 800fb58:	f017 f986 	bl	8026e68 <sqrtf>
 800fb5c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800fb60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb64:	dd36      	ble.n	800fbd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800fb66:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800fb6a:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800fb6e:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800fb72:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800fb76:	2600      	movs	r6, #0
 800fb78:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800fb7c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800fb80:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800fb84:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800fb88:	ee70 9a28 	vadd.f32	s19, s0, s17
 800fb8c:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800fb90:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800fb94:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800fb98:	b1fd      	cbz	r5, 800fbda <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800fb9a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800fb9e:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800fba2:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800fba6:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800fbaa:	eef0 0a49 	vmov.f32	s1, s18
 800fbae:	eeb0 0a69 	vmov.f32	s0, s19
 800fbb2:	4620      	mov	r0, r4
 800fbb4:	f7ff fd64 	bl	800f680 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800fbb8:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800fbbc:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800fbc0:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800fbc4:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800fbc8:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800fbcc:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800fbd0:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800fbd4:	ecbd 8b06 	vpop	{d8-d10}
 800fbd8:	bd70      	pop	{r4, r5, r6, pc}
 800fbda:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800fbde:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800fbe2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800fbe6:	b16b      	cbz	r3, 800fc04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800fbe8:	eef0 1a49 	vmov.f32	s3, s18
 800fbec:	eeb0 1a69 	vmov.f32	s2, s19
 800fbf0:	eef0 0a62 	vmov.f32	s1, s5
 800fbf4:	eeb0 0a42 	vmov.f32	s0, s4
 800fbf8:	4620      	mov	r0, r4
 800fbfa:	f7ff feb1 	bl	800f960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800fbfe:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800fc02:	e7db      	b.n	800fbbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800fc04:	eef0 4a48 	vmov.f32	s9, s16
 800fc08:	eeb0 4a68 	vmov.f32	s8, s17
 800fc0c:	eef0 3a49 	vmov.f32	s7, s18
 800fc10:	eeb0 3a69 	vmov.f32	s6, s19
 800fc14:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800fc18:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800fc1c:	4620      	mov	r0, r4
 800fc1e:	f7ff fe13 	bl	800f848 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800fc22:	e7cb      	b.n	800fbbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800fc24 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800fc24:	ee07 2a90 	vmov	s15, r2
 800fc28:	ee07 1a10 	vmov	s14, r1
 800fc2c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800fc30:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800fc34:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800fc44 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800fc38:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800fc3c:	ee20 0a27 	vmul.f32	s0, s0, s15
 800fc40:	f7ff bf76 	b.w	800fb30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800fc44:	3d000000 	.word	0x3d000000

0800fc48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800fc48:	b538      	push	{r3, r4, r5, lr}
 800fc4a:	ed2d 8b02 	vpush	{d8}
 800fc4e:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800fc52:	4604      	mov	r4, r0
 800fc54:	b31d      	cbz	r5, 800fc9e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800fc56:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800fc5a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800fc5e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800fc62:	ee78 8a67 	vsub.f32	s17, s16, s15
 800fc66:	ee38 8a27 	vadd.f32	s16, s16, s15
 800fc6a:	eef0 0a68 	vmov.f32	s1, s17
 800fc6e:	f7ff fd07 	bl	800f680 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800fc72:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800fc76:	eef0 1a48 	vmov.f32	s3, s16
 800fc7a:	eeb0 0a41 	vmov.f32	s0, s2
 800fc7e:	eef0 0a68 	vmov.f32	s1, s17
 800fc82:	4620      	mov	r0, r4
 800fc84:	f7ff fe6c 	bl	800f960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800fc88:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800fc8c:	eef0 1a68 	vmov.f32	s3, s17
 800fc90:	eef0 0a48 	vmov.f32	s1, s16
 800fc94:	eeb0 0a41 	vmov.f32	s0, s2
 800fc98:	4620      	mov	r0, r4
 800fc9a:	f7ff fe61 	bl	800f960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800fc9e:	ecbd 8b02 	vpop	{d8}
 800fca2:	4628      	mov	r0, r5
 800fca4:	bd38      	pop	{r3, r4, r5, pc}

0800fca6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800fca6:	b510      	push	{r4, lr}
 800fca8:	ed2d 8b02 	vpush	{d8}
 800fcac:	4604      	mov	r4, r0
 800fcae:	eeb0 8a40 	vmov.f32	s16, s0
 800fcb2:	eef0 8a60 	vmov.f32	s17, s1
 800fcb6:	f7ff ffc7 	bl	800fc48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800fcba:	b9d0      	cbnz	r0, 800fcf2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800fcbc:	4620      	mov	r0, r4
 800fcbe:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800fcc2:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800fcc6:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800fcca:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800fcce:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800fcd2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800fcd6:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800fcda:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800fcde:	eef0 0a68 	vmov.f32	s1, s17
 800fce2:	eeb0 0a48 	vmov.f32	s0, s16
 800fce6:	f7ff fdaf 	bl	800f848 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800fcea:	2001      	movs	r0, #1
 800fcec:	ecbd 8b02 	vpop	{d8}
 800fcf0:	bd10      	pop	{r4, pc}
 800fcf2:	2000      	movs	r0, #0
 800fcf4:	e7fa      	b.n	800fcec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800fcf6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800fcf6:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800fcfa:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800fcfe:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800fd02:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800fd06:	f7ff be2b 	b.w	800f960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800fd0c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800fd0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd10:	b089      	sub	sp, #36	@ 0x24
 800fd12:	461c      	mov	r4, r3
 800fd14:	f10d 0820 	add.w	r8, sp, #32
 800fd18:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800fd1c:	9304      	str	r3, [sp, #16]
 800fd1e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800fd20:	9105      	str	r1, [sp, #20]
 800fd22:	2300      	movs	r3, #0
 800fd24:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800fd28:	9306      	str	r3, [sp, #24]
 800fd2a:	f848 3d04 	str.w	r3, [r8, #-4]!
 800fd2e:	9b04      	ldr	r3, [sp, #16]
 800fd30:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800fd34:	4682      	mov	sl, r0
 800fd36:	4615      	mov	r5, r2
 800fd38:	9b05      	ldr	r3, [sp, #20]
 800fd3a:	429d      	cmp	r5, r3
 800fd3c:	d96d      	bls.n	800fe1a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800fd3e:	3d01      	subs	r5, #1
 800fd40:	f819 3005 	ldrb.w	r3, [r9, r5]
 800fd44:	2b06      	cmp	r3, #6
 800fd46:	d8f7      	bhi.n	800fd38 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800fd48:	a201      	add	r2, pc, #4	@ (adr r2, 800fd50 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800fd4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fd4e:	bf00      	nop
 800fd50:	0800fd6f 	.word	0x0800fd6f
 800fd54:	0800fd39 	.word	0x0800fd39
 800fd58:	0800fd6d 	.word	0x0800fd6d
 800fd5c:	0800fd91 	.word	0x0800fd91
 800fd60:	0800fd91 	.word	0x0800fd91
 800fd64:	0800fd95 	.word	0x0800fd95
 800fd68:	0800fdd5 	.word	0x0800fdd5
 800fd6c:	3c02      	subs	r4, #2
 800fd6e:	4650      	mov	r0, sl
 800fd70:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800fd74:	9400      	str	r4, [sp, #0]
 800fd76:	462b      	mov	r3, r5
 800fd78:	4642      	mov	r2, r8
 800fd7a:	a906      	add	r1, sp, #24
 800fd7c:	f7ff fcae 	bl	800f6dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800fd80:	eddd 0a07 	vldr	s1, [sp, #28]
 800fd84:	ed9d 0a06 	vldr	s0, [sp, #24]
 800fd88:	4630      	mov	r0, r6
 800fd8a:	f7ff fed1 	bl	800fb30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800fd8e:	e7d3      	b.n	800fd38 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800fd90:	3c01      	subs	r4, #1
 800fd92:	e7ec      	b.n	800fd6e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800fd94:	f1a4 0b04 	sub.w	fp, r4, #4
 800fd98:	3c02      	subs	r4, #2
 800fd9a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800fd9e:	4650      	mov	r0, sl
 800fda0:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800fda4:	f8cd b000 	str.w	fp, [sp]
 800fda8:	462b      	mov	r3, r5
 800fdaa:	4642      	mov	r2, r8
 800fdac:	a906      	add	r1, sp, #24
 800fdae:	f7ff fc95 	bl	800f6dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800fdb2:	eddd 2a07 	vldr	s5, [sp, #28]
 800fdb6:	ed9d 2a06 	vldr	s4, [sp, #24]
 800fdba:	ed54 1a01 	vldr	s3, [r4, #-4]
 800fdbe:	ed14 1a02 	vldr	s2, [r4, #-8]
 800fdc2:	edd4 0a01 	vldr	s1, [r4, #4]
 800fdc6:	ed94 0a00 	vldr	s0, [r4]
 800fdca:	4630      	mov	r0, r6
 800fdcc:	f7ff fc1a 	bl	800f604 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800fdd0:	465c      	mov	r4, fp
 800fdd2:	e7b1      	b.n	800fd38 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800fdd4:	f1a4 0b06 	sub.w	fp, r4, #6
 800fdd8:	3c02      	subs	r4, #2
 800fdda:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800fdde:	4650      	mov	r0, sl
 800fde0:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800fde4:	f8cd b000 	str.w	fp, [sp]
 800fde8:	462b      	mov	r3, r5
 800fdea:	4642      	mov	r2, r8
 800fdec:	a906      	add	r1, sp, #24
 800fdee:	f7ff fc75 	bl	800f6dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800fdf2:	eddd 3a07 	vldr	s7, [sp, #28]
 800fdf6:	ed9d 3a06 	vldr	s6, [sp, #24]
 800fdfa:	ed54 2a03 	vldr	s5, [r4, #-12]
 800fdfe:	ed14 2a04 	vldr	s4, [r4, #-16]
 800fe02:	ed54 1a01 	vldr	s3, [r4, #-4]
 800fe06:	ed14 1a02 	vldr	s2, [r4, #-8]
 800fe0a:	edd4 0a01 	vldr	s1, [r4, #4]
 800fe0e:	ed94 0a00 	vldr	s0, [r4]
 800fe12:	4630      	mov	r0, r6
 800fe14:	f7ff fc15 	bl	800f642 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800fe18:	e7da      	b.n	800fdd0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800fe1a:	9b04      	ldr	r3, [sp, #16]
 800fe1c:	b113      	cbz	r3, 800fe24 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800fe1e:	4630      	mov	r0, r6
 800fe20:	f7ff ff69 	bl	800fcf6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800fe24:	b009      	add	sp, #36	@ 0x24
 800fe26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe2a:	bf00      	nop

0800fe2c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800fe2c:	eef0 7a60 	vmov.f32	s15, s1
 800fe30:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800fe34:	6803      	ldr	r3, [r0, #0]
 800fe36:	ee17 2a90 	vmov	r2, s15
 800fe3a:	eef0 7a40 	vmov.f32	s15, s0
 800fe3e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800fe42:	689b      	ldr	r3, [r3, #8]
 800fe44:	ee17 1a90 	vmov	r1, s15
 800fe48:	4718      	bx	r3
	...

0800fe4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800fe4c:	b510      	push	{r4, lr}
 800fe4e:	4b04      	ldr	r3, [pc, #16]	@ (800fe60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800fe50:	4604      	mov	r4, r0
 800fe52:	f840 3b14 	str.w	r3, [r0], #20
 800fe56:	f001 ff73 	bl	8011d40 <_ZN8touchgfx7OutlineD1Ev>
 800fe5a:	4620      	mov	r0, r4
 800fe5c:	bd10      	pop	{r4, pc}
 800fe5e:	bf00      	nop
 800fe60:	0802b6d0 	.word	0x0802b6d0

0800fe64 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800fe64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe68:	ed2d 8b04 	vpush	{d8-d9}
 800fe6c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800fe70:	b0b5      	sub	sp, #212	@ 0xd4
 800fe72:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fe76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fe7a:	4605      	mov	r5, r0
 800fe7c:	468b      	mov	fp, r1
 800fe7e:	9206      	str	r2, [sp, #24]
 800fe80:	461e      	mov	r6, r3
 800fe82:	f04f 0400 	mov.w	r4, #0
 800fe86:	f240 814e 	bls.w	8010126 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800fe8a:	23ff      	movs	r3, #255	@ 0xff
 800fe8c:	9300      	str	r3, [sp, #0]
 800fe8e:	1d02      	adds	r2, r0, #4
 800fe90:	6981      	ldr	r1, [r0, #24]
 800fe92:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800fe94:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 801012c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800fe98:	a808      	add	r0, sp, #32
 800fe9a:	f016 fb39 	bl	8026510 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800fe9e:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800fea2:	4ba3      	ldr	r3, [pc, #652]	@ (8010130 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800fea4:	edd5 6a08 	vldr	s13, [r5, #32]
 800fea8:	9308      	str	r3, [sp, #32]
 800feaa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800feae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800feb2:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800feb6:	bf48      	it	mi
 800feb8:	eef1 7a67 	vnegmi.f32	s15, s15
 800febc:	ee67 7a87 	vmul.f32	s15, s15, s14
 800fec0:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800fec4:	2201      	movs	r2, #1
 800fec6:	9325      	str	r3, [sp, #148]	@ 0x94
 800fec8:	2300      	movs	r3, #0
 800feca:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800fece:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800fed2:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800fed6:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800feda:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800fede:	7f6a      	ldrb	r2, [r5, #29]
 800fee0:	7fab      	ldrb	r3, [r5, #30]
 800fee2:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800fee6:	435a      	muls	r2, r3
 800fee8:	ee27 7a26 	vmul.f32	s14, s14, s13
 800feec:	1c53      	adds	r3, r2, #1
 800feee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800fef2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800fef6:	f04f 0800 	mov.w	r8, #0
 800fefa:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800fefe:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800ff02:	942a      	str	r4, [sp, #168]	@ 0xa8
 800ff04:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800ff08:	942b      	str	r4, [sp, #172]	@ 0xac
 800ff0a:	942c      	str	r4, [sp, #176]	@ 0xb0
 800ff0c:	942d      	str	r4, [sp, #180]	@ 0xb4
 800ff0e:	942e      	str	r4, [sp, #184]	@ 0xb8
 800ff10:	942f      	str	r4, [sp, #188]	@ 0xbc
 800ff12:	9430      	str	r4, [sp, #192]	@ 0xc0
 800ff14:	9431      	str	r4, [sp, #196]	@ 0xc4
 800ff16:	9432      	str	r4, [sp, #200]	@ 0xc8
 800ff18:	9433      	str	r4, [sp, #204]	@ 0xcc
 800ff1a:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800ff1e:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800ff22:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800ff26:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800ff2a:	eef0 9a49 	vmov.f32	s19, s18
 800ff2e:	eeb0 8a49 	vmov.f32	s16, s18
 800ff32:	eef0 8a49 	vmov.f32	s17, s18
 800ff36:	4644      	mov	r4, r8
 800ff38:	46c1      	mov	r9, r8
 800ff3a:	af08      	add	r7, sp, #32
 800ff3c:	f04f 0a01 	mov.w	sl, #1
 800ff40:	9b06      	ldr	r3, [sp, #24]
 800ff42:	454b      	cmp	r3, r9
 800ff44:	f000 80cc 	beq.w	80100e0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800ff48:	f109 0301 	add.w	r3, r9, #1
 800ff4c:	9305      	str	r3, [sp, #20]
 800ff4e:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800ff52:	2b06      	cmp	r3, #6
 800ff54:	d839      	bhi.n	800ffca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800ff56:	e8df f003 	tbb	[pc, r3]
 800ff5a:	3b04      	.short	0x3b04
 800ff5c:	817c6f60 	.word	0x817c6f60
 800ff60:	a0          	.byte	0xa0
 800ff61:	00          	.byte	0x00
 800ff62:	45c1      	cmp	r9, r8
 800ff64:	d92b      	bls.n	800ffbe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800ff66:	eef0 0a49 	vmov.f32	s1, s18
 800ff6a:	eeb0 0a69 	vmov.f32	s0, s19
 800ff6e:	4638      	mov	r0, r7
 800ff70:	f7ff fdde 	bl	800fb30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800ff74:	4638      	mov	r0, r7
 800ff76:	f7ff fe67 	bl	800fc48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ff7a:	4681      	mov	r9, r0
 800ff7c:	b9f8      	cbnz	r0, 800ffbe <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800ff7e:	eef0 0a49 	vmov.f32	s1, s18
 800ff82:	eeb0 0a69 	vmov.f32	s0, s19
 800ff86:	4638      	mov	r0, r7
 800ff88:	f7ff fe8d 	bl	800fca6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800ff8c:	4628      	mov	r0, r5
 800ff8e:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800ff92:	e9cd b600 	strd	fp, r6, [sp]
 800ff96:	4623      	mov	r3, r4
 800ff98:	9a05      	ldr	r2, [sp, #20]
 800ff9a:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800ff9e:	4641      	mov	r1, r8
 800ffa0:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800ffa4:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800ffa8:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800ffac:	f7ff feae 	bl	800fd0c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800ffb0:	eef0 0a49 	vmov.f32	s1, s18
 800ffb4:	eeb0 0a69 	vmov.f32	s0, s19
 800ffb8:	4638      	mov	r0, r7
 800ffba:	f7ff fe74 	bl	800fca6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800ffbe:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800ffc2:	eeb0 8a49 	vmov.f32	s16, s18
 800ffc6:	eef0 8a69 	vmov.f32	s17, s19
 800ffca:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800ffce:	e7b7      	b.n	800ff40 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800ffd0:	45c1      	cmp	r9, r8
 800ffd2:	d90d      	bls.n	800fff0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800ffd4:	4638      	mov	r0, r7
 800ffd6:	f7ff fe37 	bl	800fc48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800ffda:	b948      	cbnz	r0, 800fff0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800ffdc:	e9cd a702 	strd	sl, r7, [sp, #8]
 800ffe0:	e9cd b600 	strd	fp, r6, [sp]
 800ffe4:	4623      	mov	r3, r4
 800ffe6:	464a      	mov	r2, r9
 800ffe8:	4641      	mov	r1, r8
 800ffea:	4628      	mov	r0, r5
 800ffec:	f7ff fe8e 	bl	800fd0c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800fff0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800fff4:	edd3 8a00 	vldr	s17, [r3]
 800fff8:	ed93 8a01 	vldr	s16, [r3, #4]
 800fffc:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 8010000:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 8010004:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8010008:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 801000c:	3402      	adds	r4, #2
 801000e:	46c8      	mov	r8, r9
 8010010:	eeb0 9a48 	vmov.f32	s18, s16
 8010014:	eef0 9a68 	vmov.f32	s19, s17
 8010018:	e7d7      	b.n	800ffca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801001a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 801001e:	edd3 8a00 	vldr	s17, [r3]
 8010022:	ed93 8a01 	vldr	s16, [r3, #4]
 8010026:	eeb0 0a68 	vmov.f32	s0, s17
 801002a:	eef0 0a48 	vmov.f32	s1, s16
 801002e:	4638      	mov	r0, r7
 8010030:	f7ff fd7e 	bl	800fb30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8010034:	3402      	adds	r4, #2
 8010036:	e7c8      	b.n	800ffca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8010038:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 801003c:	edd3 8a00 	vldr	s17, [r3]
 8010040:	eef0 0a48 	vmov.f32	s1, s16
 8010044:	eeb0 0a68 	vmov.f32	s0, s17
 8010048:	4638      	mov	r0, r7
 801004a:	f7ff fd71 	bl	800fb30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 801004e:	3401      	adds	r4, #1
 8010050:	e7bb      	b.n	800ffca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8010052:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8010056:	ed93 8a00 	vldr	s16, [r3]
 801005a:	e7f1      	b.n	8010040 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 801005c:	00a3      	lsls	r3, r4, #2
 801005e:	f103 0208 	add.w	r2, r3, #8
 8010062:	f103 090c 	add.w	r9, r3, #12
 8010066:	4432      	add	r2, r6
 8010068:	4433      	add	r3, r6
 801006a:	44b1      	add	r9, r6
 801006c:	ed92 2a00 	vldr	s4, [r2]
 8010070:	edd9 2a00 	vldr	s5, [r9]
 8010074:	edd3 1a01 	vldr	s3, [r3, #4]
 8010078:	ed93 1a00 	vldr	s2, [r3]
 801007c:	9207      	str	r2, [sp, #28]
 801007e:	eef0 0a48 	vmov.f32	s1, s16
 8010082:	eeb0 0a68 	vmov.f32	s0, s17
 8010086:	4638      	mov	r0, r7
 8010088:	f7ff fabc 	bl	800f604 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 801008c:	9a07      	ldr	r2, [sp, #28]
 801008e:	ed99 8a00 	vldr	s16, [r9]
 8010092:	edd2 8a00 	vldr	s17, [r2]
 8010096:	3404      	adds	r4, #4
 8010098:	e797      	b.n	800ffca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801009a:	00a3      	lsls	r3, r4, #2
 801009c:	f103 0210 	add.w	r2, r3, #16
 80100a0:	f103 0914 	add.w	r9, r3, #20
 80100a4:	4432      	add	r2, r6
 80100a6:	4433      	add	r3, r6
 80100a8:	44b1      	add	r9, r6
 80100aa:	ed92 3a00 	vldr	s6, [r2]
 80100ae:	edd9 3a00 	vldr	s7, [r9]
 80100b2:	edd3 2a03 	vldr	s5, [r3, #12]
 80100b6:	ed93 2a02 	vldr	s4, [r3, #8]
 80100ba:	edd3 1a01 	vldr	s3, [r3, #4]
 80100be:	ed93 1a00 	vldr	s2, [r3]
 80100c2:	9207      	str	r2, [sp, #28]
 80100c4:	eef0 0a48 	vmov.f32	s1, s16
 80100c8:	eeb0 0a68 	vmov.f32	s0, s17
 80100cc:	4638      	mov	r0, r7
 80100ce:	f7ff fab8 	bl	800f642 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 80100d2:	9a07      	ldr	r2, [sp, #28]
 80100d4:	ed99 8a00 	vldr	s16, [r9]
 80100d8:	edd2 8a00 	vldr	s17, [r2]
 80100dc:	3406      	adds	r4, #6
 80100de:	e774      	b.n	800ffca <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80100e0:	9b06      	ldr	r3, [sp, #24]
 80100e2:	4543      	cmp	r3, r8
 80100e4:	af08      	add	r7, sp, #32
 80100e6:	d90f      	bls.n	8010108 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80100e8:	4638      	mov	r0, r7
 80100ea:	f7ff fdad 	bl	800fc48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80100ee:	b958      	cbnz	r0, 8010108 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 80100f0:	2301      	movs	r3, #1
 80100f2:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80100f6:	9703      	str	r7, [sp, #12]
 80100f8:	f8cd b000 	str.w	fp, [sp]
 80100fc:	4623      	mov	r3, r4
 80100fe:	9a06      	ldr	r2, [sp, #24]
 8010100:	4641      	mov	r1, r8
 8010102:	4628      	mov	r0, r5
 8010104:	f7ff fe02 	bl	800fd0c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8010108:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 801010c:	4638      	mov	r0, r7
 801010e:	f016 fa93 	bl	8026638 <_ZN8touchgfx6Canvas6renderEh>
 8010112:	4604      	mov	r4, r0
 8010114:	4638      	mov	r0, r7
 8010116:	f7ff fe99 	bl	800fe4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 801011a:	4620      	mov	r0, r4
 801011c:	b035      	add	sp, #212	@ 0xd4
 801011e:	ecbd 8b04 	vpop	{d8-d9}
 8010122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010126:	2401      	movs	r4, #1
 8010128:	e7f7      	b.n	801011a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 801012a:	bf00      	nop
 801012c:	00000000 	.word	0x00000000
 8010130:	0802ae44 	.word	0x0802ae44

08010134 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 8010134:	b510      	push	{r4, lr}
 8010136:	4604      	mov	r4, r0
 8010138:	f7ff fe88 	bl	800fe4c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 801013c:	4620      	mov	r0, r4
 801013e:	21b0      	movs	r1, #176	@ 0xb0
 8010140:	f016 fe68 	bl	8026e14 <_ZdlPvj>
 8010144:	4620      	mov	r0, r4
 8010146:	bd10      	pop	{r4, pc}

08010148 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 8010148:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801014c:	ed2d 8b06 	vpush	{d8-d10}
 8010150:	b0aa      	sub	sp, #168	@ 0xa8
 8010152:	4698      	mov	r8, r3
 8010154:	23ff      	movs	r3, #255	@ 0xff
 8010156:	4607      	mov	r7, r0
 8010158:	9300      	str	r3, [sp, #0]
 801015a:	4689      	mov	r9, r1
 801015c:	4692      	mov	sl, r2
 801015e:	6981      	ldr	r1, [r0, #24]
 8010160:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 8010162:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 801036c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8010166:	1d02      	adds	r2, r0, #4
 8010168:	a80d      	add	r0, sp, #52	@ 0x34
 801016a:	f016 f9d1 	bl	8026510 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 801016e:	7f3b      	ldrb	r3, [r7, #28]
 8010170:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 801036c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8010174:	1e5a      	subs	r2, r3, #1
 8010176:	4253      	negs	r3, r2
 8010178:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 801017c:	4153      	adcs	r3, r2
 801017e:	eeb0 0a60 	vmov.f32	s0, s1
 8010182:	4628      	mov	r0, r5
 8010184:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 8010188:	f005 fdc1 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801018c:	44ca      	add	sl, r9
 801018e:	eeb0 9a40 	vmov.f32	s18, s0
 8010192:	eef0 9a60 	vmov.f32	s19, s1
 8010196:	eef0 8a48 	vmov.f32	s17, s16
 801019a:	2400      	movs	r4, #0
 801019c:	45ca      	cmp	sl, r9
 801019e:	f000 80cd 	beq.w	801033c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 80101a2:	f819 3b01 	ldrb.w	r3, [r9], #1
 80101a6:	2b06      	cmp	r3, #6
 80101a8:	d8f8      	bhi.n	801019c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80101aa:	e8df f003 	tbb	[pc, r3]
 80101ae:	0804      	.short	0x0804
 80101b0:	58533f2a 	.word	0x58533f2a
 80101b4:	8a          	.byte	0x8a
 80101b5:	00          	.byte	0x00
 80101b6:	a80d      	add	r0, sp, #52	@ 0x34
 80101b8:	f016 fa1c 	bl	80265f4 <_ZN8touchgfx6Canvas5closeEv>
 80101bc:	e7ee      	b.n	801019c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80101be:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80101c2:	edd3 8a00 	vldr	s17, [r3]
 80101c6:	ed93 8a01 	vldr	s16, [r3, #4]
 80101ca:	eeb0 0a68 	vmov.f32	s0, s17
 80101ce:	eef0 0a48 	vmov.f32	s1, s16
 80101d2:	4628      	mov	r0, r5
 80101d4:	f005 fd9b 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80101d8:	eef0 7a60 	vmov.f32	s15, s1
 80101dc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80101e0:	a80d      	add	r0, sp, #52	@ 0x34
 80101e2:	ee17 2a90 	vmov	r2, s15
 80101e6:	eef0 7a40 	vmov.f32	s15, s0
 80101ea:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80101ee:	eeb0 9a40 	vmov.f32	s18, s0
 80101f2:	ee17 1a90 	vmov	r1, s15
 80101f6:	eef0 9a60 	vmov.f32	s19, s1
 80101fa:	f016 fad5 	bl	80267a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80101fe:	3402      	adds	r4, #2
 8010200:	e7cc      	b.n	801019c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8010202:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8010206:	edd3 8a00 	vldr	s17, [r3]
 801020a:	ed93 8a01 	vldr	s16, [r3, #4]
 801020e:	eeb0 0a68 	vmov.f32	s0, s17
 8010212:	eef0 0a48 	vmov.f32	s1, s16
 8010216:	4628      	mov	r0, r5
 8010218:	f005 fd79 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801021c:	a80d      	add	r0, sp, #52	@ 0x34
 801021e:	eeb0 9a40 	vmov.f32	s18, s0
 8010222:	eef0 9a60 	vmov.f32	s19, s1
 8010226:	f7ff fe01 	bl	800fe2c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 801022a:	e7e8      	b.n	80101fe <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 801022c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8010230:	edd3 8a00 	vldr	s17, [r3]
 8010234:	eef0 0a48 	vmov.f32	s1, s16
 8010238:	eeb0 0a68 	vmov.f32	s0, s17
 801023c:	4628      	mov	r0, r5
 801023e:	f005 fd66 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010242:	a80d      	add	r0, sp, #52	@ 0x34
 8010244:	eeb0 9a40 	vmov.f32	s18, s0
 8010248:	eef0 9a60 	vmov.f32	s19, s1
 801024c:	3401      	adds	r4, #1
 801024e:	f7ff fded 	bl	800fe2c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8010252:	e7a3      	b.n	801019c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8010254:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8010258:	ed93 8a00 	vldr	s16, [r3]
 801025c:	e7ea      	b.n	8010234 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 801025e:	1ca3      	adds	r3, r4, #2
 8010260:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8010264:	ed53 0a01 	vldr	s1, [r3, #-4]
 8010268:	ed13 0a02 	vldr	s0, [r3, #-8]
 801026c:	edd3 8a00 	vldr	s17, [r3]
 8010270:	ed93 8a01 	vldr	s16, [r3, #4]
 8010274:	4628      	mov	r0, r5
 8010276:	f005 fd4a 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801027a:	4628      	mov	r0, r5
 801027c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8010280:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8010284:	eeb0 0a68 	vmov.f32	s0, s17
 8010288:	eef0 0a48 	vmov.f32	s1, s16
 801028c:	f005 fd3f 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8010290:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 8010294:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 8010298:	eef0 2a60 	vmov.f32	s5, s1
 801029c:	eeb0 2a40 	vmov.f32	s4, s0
 80102a0:	eeb0 aa40 	vmov.f32	s20, s0
 80102a4:	eef0 aa60 	vmov.f32	s21, s1
 80102a8:	eeb0 0a49 	vmov.f32	s0, s18
 80102ac:	eef0 0a69 	vmov.f32	s1, s19
 80102b0:	a80d      	add	r0, sp, #52	@ 0x34
 80102b2:	f7ff f9a7 	bl	800f604 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 80102b6:	3404      	adds	r4, #4
 80102b8:	eef0 9a6a 	vmov.f32	s19, s21
 80102bc:	eeb0 9a4a 	vmov.f32	s18, s20
 80102c0:	e76c      	b.n	801019c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80102c2:	1d26      	adds	r6, r4, #4
 80102c4:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 80102c8:	ed56 0a03 	vldr	s1, [r6, #-12]
 80102cc:	ed16 0a04 	vldr	s0, [r6, #-16]
 80102d0:	edd6 8a00 	vldr	s17, [r6]
 80102d4:	ed96 8a01 	vldr	s16, [r6, #4]
 80102d8:	4628      	mov	r0, r5
 80102da:	f005 fd18 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80102de:	4628      	mov	r0, r5
 80102e0:	ed8d 0a07 	vstr	s0, [sp, #28]
 80102e4:	edcd 0a08 	vstr	s1, [sp, #32]
 80102e8:	ed16 0a02 	vldr	s0, [r6, #-8]
 80102ec:	ed56 0a01 	vldr	s1, [r6, #-4]
 80102f0:	f005 fd0d 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80102f4:	4628      	mov	r0, r5
 80102f6:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80102fa:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 80102fe:	eeb0 0a68 	vmov.f32	s0, s17
 8010302:	eef0 0a48 	vmov.f32	s1, s16
 8010306:	f005 fd02 	bl	8015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801030a:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 801030e:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 8010312:	eddd 1a08 	vldr	s3, [sp, #32]
 8010316:	ed9d 1a07 	vldr	s2, [sp, #28]
 801031a:	eef0 3a60 	vmov.f32	s7, s1
 801031e:	eeb0 3a40 	vmov.f32	s6, s0
 8010322:	eeb0 aa40 	vmov.f32	s20, s0
 8010326:	eef0 aa60 	vmov.f32	s21, s1
 801032a:	eeb0 0a49 	vmov.f32	s0, s18
 801032e:	eef0 0a69 	vmov.f32	s1, s19
 8010332:	a80d      	add	r0, sp, #52	@ 0x34
 8010334:	f7ff f985 	bl	800f642 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8010338:	3406      	adds	r4, #6
 801033a:	e7bd      	b.n	80102b8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 801033c:	7f7b      	ldrb	r3, [r7, #29]
 801033e:	7fb9      	ldrb	r1, [r7, #30]
 8010340:	4359      	muls	r1, r3
 8010342:	1c4b      	adds	r3, r1, #1
 8010344:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8010348:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801034c:	a80d      	add	r0, sp, #52	@ 0x34
 801034e:	f016 f973 	bl	8026638 <_ZN8touchgfx6Canvas6renderEh>
 8010352:	4b07      	ldr	r3, [pc, #28]	@ (8010370 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8010354:	930d      	str	r3, [sp, #52]	@ 0x34
 8010356:	4604      	mov	r4, r0
 8010358:	a812      	add	r0, sp, #72	@ 0x48
 801035a:	f001 fcf1 	bl	8011d40 <_ZN8touchgfx7OutlineD1Ev>
 801035e:	4620      	mov	r0, r4
 8010360:	b02a      	add	sp, #168	@ 0xa8
 8010362:	ecbd 8b06 	vpop	{d8-d10}
 8010366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801036a:	bf00      	nop
 801036c:	00000000 	.word	0x00000000
 8010370:	0802b6d0 	.word	0x0802b6d0

08010374 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8010374:	b410      	push	{r4}
 8010376:	7f04      	ldrb	r4, [r0, #28]
 8010378:	b11c      	cbz	r4, 8010382 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 801037a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801037e:	f7ff bee3 	b.w	8010148 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 8010382:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010386:	f7ff bd6d 	b.w	800fe64 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

0801038a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 801038a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801038e:	4691      	mov	r9, r2
 8010390:	4602      	mov	r2, r0
 8010392:	4606      	mov	r6, r0
 8010394:	f852 0f26 	ldr.w	r0, [r2, #38]!
 8010398:	4688      	mov	r8, r1
 801039a:	6851      	ldr	r1, [r2, #4]
 801039c:	469a      	mov	sl, r3
 801039e:	ab02      	add	r3, sp, #8
 80103a0:	c303      	stmia	r3!, {r0, r1}
 80103a2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80103a6:	2b00      	cmp	r3, #0
 80103a8:	af02      	add	r7, sp, #8
 80103aa:	dd2f      	ble.n	801040c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 80103ac:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 80103b0:	2c00      	cmp	r4, #0
 80103b2:	dd2b      	ble.n	801040c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 80103b4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80103b8:	441c      	add	r4, r3
 80103ba:	b2a4      	uxth	r4, r4
 80103bc:	b225      	sxth	r5, r4
 80103be:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80103c2:	42ab      	cmp	r3, r5
 80103c4:	da22      	bge.n	801040c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 80103c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80103c8:	9300      	str	r3, [sp, #0]
 80103ca:	9701      	str	r7, [sp, #4]
 80103cc:	4653      	mov	r3, sl
 80103ce:	464a      	mov	r2, r9
 80103d0:	4641      	mov	r1, r8
 80103d2:	4630      	mov	r0, r6
 80103d4:	f7ff ffce 	bl	8010374 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 80103d8:	b940      	cbnz	r0, 80103ec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 80103da:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80103de:	2b01      	cmp	r3, #1
 80103e0:	d004      	beq.n	80103ec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 80103e2:	3301      	adds	r3, #1
 80103e4:	105b      	asrs	r3, r3, #1
 80103e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80103ea:	e7ec      	b.n	80103c6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
 80103ec:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80103f0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80103f4:	4413      	add	r3, r2
 80103f6:	b29b      	uxth	r3, r3
 80103f8:	441a      	add	r2, r3
 80103fa:	b212      	sxth	r2, r2
 80103fc:	4295      	cmp	r5, r2
 80103fe:	f8ad 300a 	strh.w	r3, [sp, #10]
 8010402:	dadc      	bge.n	80103be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8010404:	1ae3      	subs	r3, r4, r3
 8010406:	f8ad 300e 	strh.w	r3, [sp, #14]
 801040a:	e7d8      	b.n	80103be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 801040c:	b004      	add	sp, #16
 801040e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08010412 <_ZN8touchgfx6CircleD1Ev>:
 8010412:	4770      	bx	lr

08010414 <_ZN8touchgfx6CircleD0Ev>:
 8010414:	b510      	push	{r4, lr}
 8010416:	2148      	movs	r1, #72	@ 0x48
 8010418:	4604      	mov	r4, r0
 801041a:	f016 fcfb 	bl	8026e14 <_ZdlPvj>
 801041e:	4620      	mov	r0, r4
 8010420:	bd10      	pop	{r4, pc}

08010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010422:	b507      	push	{r0, r1, r2, lr}
 8010424:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8010428:	ab01      	add	r3, sp, #4
 801042a:	6809      	ldr	r1, [r1, #0]
 801042c:	6800      	ldr	r0, [r0, #0]
 801042e:	f005 fd87 	bl	8015f40 <_ZN8touchgfx6muldivElllRl>
 8010432:	b003      	add	sp, #12
 8010434:	f85d fb04 	ldr.w	pc, [sp], #4

08010438 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010438:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 801043c:	fb90 f2f3 	sdiv	r2, r0, r3
 8010440:	fb02 0013 	mls	r0, r2, r3, r0
 8010444:	2800      	cmp	r0, #0
 8010446:	bfb8      	it	lt
 8010448:	18c0      	addlt	r0, r0, r3
 801044a:	285a      	cmp	r0, #90	@ 0x5a
 801044c:	4b09      	ldr	r3, [pc, #36]	@ (8010474 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 801044e:	dc02      	bgt.n	8010456 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010450:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010454:	4770      	bx	lr
 8010456:	28b4      	cmp	r0, #180	@ 0xb4
 8010458:	dc02      	bgt.n	8010460 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801045a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 801045e:	e7f7      	b.n	8010450 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010460:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 8010464:	bfd4      	ite	le
 8010466:	38b4      	suble	r0, #180	@ 0xb4
 8010468:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 801046c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010470:	4240      	negs	r0, r0
 8010472:	4770      	bx	lr
 8010474:	0802ae9c 	.word	0x0802ae9c

08010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010478:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 801047c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801047e:	fb90 f2f3 	sdiv	r2, r0, r3
 8010482:	fb02 0013 	mls	r0, r2, r3, r0
 8010486:	2800      	cmp	r0, #0
 8010488:	bfb8      	it	lt
 801048a:	18c0      	addlt	r0, r0, r3
 801048c:	1144      	asrs	r4, r0, #5
 801048e:	f000 061f 	and.w	r6, r0, #31
 8010492:	4620      	mov	r0, r4
 8010494:	f7ff ffd0 	bl	8010438 <_ZN8touchgfx7CWRUtil4sineEi>
 8010498:	4605      	mov	r5, r0
 801049a:	b90e      	cbnz	r6, 80104a0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 801049c:	b002      	add	sp, #8
 801049e:	bd70      	pop	{r4, r5, r6, pc}
 80104a0:	1c60      	adds	r0, r4, #1
 80104a2:	f7ff ffc9 	bl	8010438 <_ZN8touchgfx7CWRUtil4sineEi>
 80104a6:	ab01      	add	r3, sp, #4
 80104a8:	2220      	movs	r2, #32
 80104aa:	4631      	mov	r1, r6
 80104ac:	1b40      	subs	r0, r0, r5
 80104ae:	f005 fd47 	bl	8015f40 <_ZN8touchgfx6muldivElllRl>
 80104b2:	4428      	add	r0, r5
 80104b4:	e7f2      	b.n	801049c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80104b6:	b508      	push	{r3, lr}
 80104b8:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 80104bc:	f7ff ffdc 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80104c0:	bd08      	pop	{r3, pc}
	...

080104c4 <_ZN8touchgfx6CircleC1Ev>:
 80104c4:	b510      	push	{r4, lr}
 80104c6:	4604      	mov	r4, r0
 80104c8:	f000 fd0a 	bl	8010ee0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80104cc:	4b08      	ldr	r3, [pc, #32]	@ (80104f0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80104ce:	6023      	str	r3, [r4, #0]
 80104d0:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 80104d4:	2300      	movs	r3, #0
 80104d6:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 80104da:	f24b 4205 	movw	r2, #46085	@ 0xb405
 80104de:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 80104e2:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 80104e6:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 80104ea:	60a3      	str	r3, [r4, #8]
 80104ec:	4620      	mov	r0, r4
 80104ee:	bd10      	pop	{r4, pc}
 80104f0:	0802af5c 	.word	0x0802af5c

080104f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80104f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104f8:	428a      	cmp	r2, r1
 80104fa:	4680      	mov	r8, r0
 80104fc:	4610      	mov	r0, r2
 80104fe:	4699      	mov	r9, r3
 8010500:	bfa6      	itte	ge
 8010502:	460a      	movge	r2, r1
 8010504:	4603      	movge	r3, r0
 8010506:	460b      	movlt	r3, r1
 8010508:	1a99      	subs	r1, r3, r2
 801050a:	b085      	sub	sp, #20
 801050c:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 8010510:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 8010514:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8010516:	bfa4      	itt	ge
 8010518:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 801051c:	2200      	movge	r2, #0
 801051e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 8010522:	9300      	str	r3, [sp, #0]
 8010524:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 8010528:	f102 0b01 	add.w	fp, r2, #1
 801052c:	2c00      	cmp	r4, #0
 801052e:	f040 80af 	bne.w	8010690 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8010532:	4610      	mov	r0, r2
 8010534:	9201      	str	r2, [sp, #4]
 8010536:	f7ff ff9f 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801053a:	a903      	add	r1, sp, #12
 801053c:	9003      	str	r0, [sp, #12]
 801053e:	4650      	mov	r0, sl
 8010540:	f7ff ff6f 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010544:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8010548:	9a01      	ldr	r2, [sp, #4]
 801054a:	4408      	add	r0, r1
 801054c:	f8d9 1000 	ldr.w	r1, [r9]
 8010550:	4281      	cmp	r1, r0
 8010552:	bfc8      	it	gt
 8010554:	f8c9 0000 	strgt.w	r0, [r9]
 8010558:	6839      	ldr	r1, [r7, #0]
 801055a:	4288      	cmp	r0, r1
 801055c:	bfc8      	it	gt
 801055e:	6038      	strgt	r0, [r7, #0]
 8010560:	4610      	mov	r0, r2
 8010562:	f7ff ffa8 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010566:	a903      	add	r1, sp, #12
 8010568:	9003      	str	r0, [sp, #12]
 801056a:	4650      	mov	r0, sl
 801056c:	f7ff ff59 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010570:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8010574:	1a10      	subs	r0, r2, r0
 8010576:	6832      	ldr	r2, [r6, #0]
 8010578:	4282      	cmp	r2, r0
 801057a:	bfc8      	it	gt
 801057c:	6030      	strgt	r0, [r6, #0]
 801057e:	682a      	ldr	r2, [r5, #0]
 8010580:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8010584:	4290      	cmp	r0, r2
 8010586:	fb9b f2f1 	sdiv	r2, fp, r1
 801058a:	fb01 b212 	mls	r2, r1, r2, fp
 801058e:	eba1 0202 	sub.w	r2, r1, r2
 8010592:	bfc8      	it	gt
 8010594:	6028      	strgt	r0, [r5, #0]
 8010596:	fb92 f0f1 	sdiv	r0, r2, r1
 801059a:	fb01 2210 	mls	r2, r1, r0, r2
 801059e:	4493      	add	fp, r2
 80105a0:	9b00      	ldr	r3, [sp, #0]
 80105a2:	455b      	cmp	r3, fp
 80105a4:	db2a      	blt.n	80105fc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80105a6:	4658      	mov	r0, fp
 80105a8:	f7ff ff66 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80105ac:	a903      	add	r1, sp, #12
 80105ae:	9003      	str	r0, [sp, #12]
 80105b0:	4650      	mov	r0, sl
 80105b2:	f7ff ff36 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80105b6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 80105ba:	4410      	add	r0, r2
 80105bc:	f8d9 2000 	ldr.w	r2, [r9]
 80105c0:	4282      	cmp	r2, r0
 80105c2:	bfc8      	it	gt
 80105c4:	f8c9 0000 	strgt.w	r0, [r9]
 80105c8:	683a      	ldr	r2, [r7, #0]
 80105ca:	4290      	cmp	r0, r2
 80105cc:	bfc8      	it	gt
 80105ce:	6038      	strgt	r0, [r7, #0]
 80105d0:	4658      	mov	r0, fp
 80105d2:	f7ff ff70 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80105d6:	a903      	add	r1, sp, #12
 80105d8:	9003      	str	r0, [sp, #12]
 80105da:	4650      	mov	r0, sl
 80105dc:	f7ff ff21 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80105e0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80105e4:	1a10      	subs	r0, r2, r0
 80105e6:	6832      	ldr	r2, [r6, #0]
 80105e8:	4282      	cmp	r2, r0
 80105ea:	bfc8      	it	gt
 80105ec:	6030      	strgt	r0, [r6, #0]
 80105ee:	682a      	ldr	r2, [r5, #0]
 80105f0:	4290      	cmp	r0, r2
 80105f2:	bfc8      	it	gt
 80105f4:	6028      	strgt	r0, [r5, #0]
 80105f6:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 80105fa:	e7d1      	b.n	80105a0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80105fc:	9b00      	ldr	r3, [sp, #0]
 80105fe:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8010602:	455b      	cmp	r3, fp
 8010604:	dd27      	ble.n	8010656 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8010606:	4618      	mov	r0, r3
 8010608:	f7ff ff36 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801060c:	a903      	add	r1, sp, #12
 801060e:	9003      	str	r0, [sp, #12]
 8010610:	4650      	mov	r0, sl
 8010612:	f7ff ff06 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010616:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801061a:	4410      	add	r0, r2
 801061c:	f8d9 2000 	ldr.w	r2, [r9]
 8010620:	4282      	cmp	r2, r0
 8010622:	bfc8      	it	gt
 8010624:	f8c9 0000 	strgt.w	r0, [r9]
 8010628:	683a      	ldr	r2, [r7, #0]
 801062a:	4290      	cmp	r0, r2
 801062c:	bfc8      	it	gt
 801062e:	6038      	strgt	r0, [r7, #0]
 8010630:	9800      	ldr	r0, [sp, #0]
 8010632:	f7ff ff40 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010636:	a903      	add	r1, sp, #12
 8010638:	9003      	str	r0, [sp, #12]
 801063a:	4650      	mov	r0, sl
 801063c:	f7ff fef1 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010640:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8010644:	1a10      	subs	r0, r2, r0
 8010646:	6832      	ldr	r2, [r6, #0]
 8010648:	4282      	cmp	r2, r0
 801064a:	bfc8      	it	gt
 801064c:	6030      	strgt	r0, [r6, #0]
 801064e:	682a      	ldr	r2, [r5, #0]
 8010650:	4290      	cmp	r0, r2
 8010652:	bfc8      	it	gt
 8010654:	6028      	strgt	r0, [r5, #0]
 8010656:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801065a:	f8d9 1000 	ldr.w	r1, [r9]
 801065e:	4291      	cmp	r1, r2
 8010660:	bfc8      	it	gt
 8010662:	f8c9 2000 	strgt.w	r2, [r9]
 8010666:	683a      	ldr	r2, [r7, #0]
 8010668:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 801066c:	429a      	cmp	r2, r3
 801066e:	bfb8      	it	lt
 8010670:	603b      	strlt	r3, [r7, #0]
 8010672:	6832      	ldr	r2, [r6, #0]
 8010674:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8010678:	429a      	cmp	r2, r3
 801067a:	bfc8      	it	gt
 801067c:	6033      	strgt	r3, [r6, #0]
 801067e:	682a      	ldr	r2, [r5, #0]
 8010680:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8010684:	429a      	cmp	r2, r3
 8010686:	da00      	bge.n	801068a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8010688:	602b      	str	r3, [r5, #0]
 801068a:	b005      	add	sp, #20
 801068c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010690:	2002      	movs	r0, #2
 8010692:	3401      	adds	r4, #1
 8010694:	fb94 f4f0 	sdiv	r4, r4, r0
 8010698:	4610      	mov	r0, r2
 801069a:	9201      	str	r2, [sp, #4]
 801069c:	f7ff feec 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80106a0:	a903      	add	r1, sp, #12
 80106a2:	9003      	str	r0, [sp, #12]
 80106a4:	4650      	mov	r0, sl
 80106a6:	f7ff febc 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80106aa:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 80106ae:	9a01      	ldr	r2, [sp, #4]
 80106b0:	4408      	add	r0, r1
 80106b2:	f8d9 1000 	ldr.w	r1, [r9]
 80106b6:	1b03      	subs	r3, r0, r4
 80106b8:	4299      	cmp	r1, r3
 80106ba:	bfc8      	it	gt
 80106bc:	f8c9 3000 	strgt.w	r3, [r9]
 80106c0:	6839      	ldr	r1, [r7, #0]
 80106c2:	428b      	cmp	r3, r1
 80106c4:	bfc8      	it	gt
 80106c6:	603b      	strgt	r3, [r7, #0]
 80106c8:	f8d9 1000 	ldr.w	r1, [r9]
 80106cc:	4420      	add	r0, r4
 80106ce:	4281      	cmp	r1, r0
 80106d0:	bfc8      	it	gt
 80106d2:	f8c9 0000 	strgt.w	r0, [r9]
 80106d6:	6839      	ldr	r1, [r7, #0]
 80106d8:	4288      	cmp	r0, r1
 80106da:	bfc8      	it	gt
 80106dc:	6038      	strgt	r0, [r7, #0]
 80106de:	4610      	mov	r0, r2
 80106e0:	f7ff fee9 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80106e4:	a903      	add	r1, sp, #12
 80106e6:	9003      	str	r0, [sp, #12]
 80106e8:	4650      	mov	r0, sl
 80106ea:	f7ff fe9a 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80106ee:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80106f2:	1a10      	subs	r0, r2, r0
 80106f4:	6832      	ldr	r2, [r6, #0]
 80106f6:	1b01      	subs	r1, r0, r4
 80106f8:	428a      	cmp	r2, r1
 80106fa:	bfc8      	it	gt
 80106fc:	6031      	strgt	r1, [r6, #0]
 80106fe:	682a      	ldr	r2, [r5, #0]
 8010700:	4291      	cmp	r1, r2
 8010702:	bfc8      	it	gt
 8010704:	6029      	strgt	r1, [r5, #0]
 8010706:	6832      	ldr	r2, [r6, #0]
 8010708:	4420      	add	r0, r4
 801070a:	4282      	cmp	r2, r0
 801070c:	bfc8      	it	gt
 801070e:	6030      	strgt	r0, [r6, #0]
 8010710:	682a      	ldr	r2, [r5, #0]
 8010712:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8010716:	4290      	cmp	r0, r2
 8010718:	fb9b f2f1 	sdiv	r2, fp, r1
 801071c:	fb01 b212 	mls	r2, r1, r2, fp
 8010720:	eba1 0202 	sub.w	r2, r1, r2
 8010724:	bfc8      	it	gt
 8010726:	6028      	strgt	r0, [r5, #0]
 8010728:	fb92 f0f1 	sdiv	r0, r2, r1
 801072c:	fb01 2210 	mls	r2, r1, r0, r2
 8010730:	4493      	add	fp, r2
 8010732:	9b00      	ldr	r3, [sp, #0]
 8010734:	455b      	cmp	r3, fp
 8010736:	db40      	blt.n	80107ba <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8010738:	4658      	mov	r0, fp
 801073a:	f7ff fe9d 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 801073e:	a903      	add	r1, sp, #12
 8010740:	9003      	str	r0, [sp, #12]
 8010742:	4650      	mov	r0, sl
 8010744:	f7ff fe6d 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010748:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801074c:	4410      	add	r0, r2
 801074e:	f8d9 2000 	ldr.w	r2, [r9]
 8010752:	1b01      	subs	r1, r0, r4
 8010754:	428a      	cmp	r2, r1
 8010756:	bfc8      	it	gt
 8010758:	f8c9 1000 	strgt.w	r1, [r9]
 801075c:	683a      	ldr	r2, [r7, #0]
 801075e:	4291      	cmp	r1, r2
 8010760:	bfc8      	it	gt
 8010762:	6039      	strgt	r1, [r7, #0]
 8010764:	f8d9 2000 	ldr.w	r2, [r9]
 8010768:	4420      	add	r0, r4
 801076a:	4282      	cmp	r2, r0
 801076c:	bfc8      	it	gt
 801076e:	f8c9 0000 	strgt.w	r0, [r9]
 8010772:	683a      	ldr	r2, [r7, #0]
 8010774:	4290      	cmp	r0, r2
 8010776:	bfc8      	it	gt
 8010778:	6038      	strgt	r0, [r7, #0]
 801077a:	4658      	mov	r0, fp
 801077c:	f7ff fe9b 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010780:	a903      	add	r1, sp, #12
 8010782:	9003      	str	r0, [sp, #12]
 8010784:	4650      	mov	r0, sl
 8010786:	f7ff fe4c 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801078a:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 801078e:	1a10      	subs	r0, r2, r0
 8010790:	6832      	ldr	r2, [r6, #0]
 8010792:	1b01      	subs	r1, r0, r4
 8010794:	428a      	cmp	r2, r1
 8010796:	bfc8      	it	gt
 8010798:	6031      	strgt	r1, [r6, #0]
 801079a:	682a      	ldr	r2, [r5, #0]
 801079c:	4291      	cmp	r1, r2
 801079e:	bfc8      	it	gt
 80107a0:	6029      	strgt	r1, [r5, #0]
 80107a2:	6832      	ldr	r2, [r6, #0]
 80107a4:	4420      	add	r0, r4
 80107a6:	4282      	cmp	r2, r0
 80107a8:	bfc8      	it	gt
 80107aa:	6030      	strgt	r0, [r6, #0]
 80107ac:	682a      	ldr	r2, [r5, #0]
 80107ae:	4290      	cmp	r0, r2
 80107b0:	bfc8      	it	gt
 80107b2:	6028      	strgt	r0, [r5, #0]
 80107b4:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 80107b8:	e7bb      	b.n	8010732 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80107ba:	9b00      	ldr	r3, [sp, #0]
 80107bc:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 80107c0:	455b      	cmp	r3, fp
 80107c2:	f77f af62 	ble.w	801068a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80107c6:	4618      	mov	r0, r3
 80107c8:	f7ff fe56 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80107cc:	a903      	add	r1, sp, #12
 80107ce:	9003      	str	r0, [sp, #12]
 80107d0:	4650      	mov	r0, sl
 80107d2:	f7ff fe26 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80107d6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 80107da:	4410      	add	r0, r2
 80107dc:	f8d9 2000 	ldr.w	r2, [r9]
 80107e0:	1b01      	subs	r1, r0, r4
 80107e2:	428a      	cmp	r2, r1
 80107e4:	bfc8      	it	gt
 80107e6:	f8c9 1000 	strgt.w	r1, [r9]
 80107ea:	683a      	ldr	r2, [r7, #0]
 80107ec:	4291      	cmp	r1, r2
 80107ee:	bfc8      	it	gt
 80107f0:	6039      	strgt	r1, [r7, #0]
 80107f2:	f8d9 2000 	ldr.w	r2, [r9]
 80107f6:	4420      	add	r0, r4
 80107f8:	4282      	cmp	r2, r0
 80107fa:	bfc8      	it	gt
 80107fc:	f8c9 0000 	strgt.w	r0, [r9]
 8010800:	683b      	ldr	r3, [r7, #0]
 8010802:	4298      	cmp	r0, r3
 8010804:	bfc8      	it	gt
 8010806:	6038      	strgt	r0, [r7, #0]
 8010808:	9800      	ldr	r0, [sp, #0]
 801080a:	f7ff fe54 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801080e:	a903      	add	r1, sp, #12
 8010810:	9003      	str	r0, [sp, #12]
 8010812:	4650      	mov	r0, sl
 8010814:	f7ff fe05 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010818:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 801081c:	6832      	ldr	r2, [r6, #0]
 801081e:	1a18      	subs	r0, r3, r0
 8010820:	1b03      	subs	r3, r0, r4
 8010822:	429a      	cmp	r2, r3
 8010824:	bfc8      	it	gt
 8010826:	6033      	strgt	r3, [r6, #0]
 8010828:	682a      	ldr	r2, [r5, #0]
 801082a:	4293      	cmp	r3, r2
 801082c:	bfc8      	it	gt
 801082e:	602b      	strgt	r3, [r5, #0]
 8010830:	6833      	ldr	r3, [r6, #0]
 8010832:	4404      	add	r4, r0
 8010834:	42a3      	cmp	r3, r4
 8010836:	bfc8      	it	gt
 8010838:	6034      	strgt	r4, [r6, #0]
 801083a:	682b      	ldr	r3, [r5, #0]
 801083c:	429c      	cmp	r4, r3
 801083e:	bfc8      	it	gt
 8010840:	602c      	strgt	r4, [r5, #0]
 8010842:	e722      	b.n	801068a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08010844 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8010844:	b530      	push	{r4, r5, lr}
 8010846:	4604      	mov	r4, r0
 8010848:	4608      	mov	r0, r1
 801084a:	4611      	mov	r1, r2
 801084c:	461a      	mov	r2, r3
 801084e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010852:	b089      	sub	sp, #36	@ 0x24
 8010854:	015b      	lsls	r3, r3, #5
 8010856:	9304      	str	r3, [sp, #16]
 8010858:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801085c:	2500      	movs	r5, #0
 801085e:	015b      	lsls	r3, r3, #5
 8010860:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8010864:	ab07      	add	r3, sp, #28
 8010866:	9302      	str	r3, [sp, #8]
 8010868:	ab06      	add	r3, sp, #24
 801086a:	9301      	str	r3, [sp, #4]
 801086c:	ab05      	add	r3, sp, #20
 801086e:	9300      	str	r3, [sp, #0]
 8010870:	ab04      	add	r3, sp, #16
 8010872:	9505      	str	r5, [sp, #20]
 8010874:	f7ff fe3e 	bl	80104f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8010878:	2520      	movs	r5, #32
 801087a:	9a04      	ldr	r2, [sp, #16]
 801087c:	9805      	ldr	r0, [sp, #20]
 801087e:	fb92 f2f5 	sdiv	r2, r2, r5
 8010882:	fb90 f0f5 	sdiv	r0, r0, r5
 8010886:	b292      	uxth	r2, r2
 8010888:	3002      	adds	r0, #2
 801088a:	1a80      	subs	r0, r0, r2
 801088c:	9b06      	ldr	r3, [sp, #24]
 801088e:	9907      	ldr	r1, [sp, #28]
 8010890:	fb93 f3f5 	sdiv	r3, r3, r5
 8010894:	fb91 f1f5 	sdiv	r1, r1, r5
 8010898:	b29b      	uxth	r3, r3
 801089a:	3102      	adds	r1, #2
 801089c:	1ac9      	subs	r1, r1, r3
 801089e:	3a01      	subs	r2, #1
 80108a0:	3b01      	subs	r3, #1
 80108a2:	80a0      	strh	r0, [r4, #4]
 80108a4:	4620      	mov	r0, r4
 80108a6:	8022      	strh	r2, [r4, #0]
 80108a8:	8063      	strh	r3, [r4, #2]
 80108aa:	80e1      	strh	r1, [r4, #6]
 80108ac:	b009      	add	sp, #36	@ 0x24
 80108ae:	bd30      	pop	{r4, r5, pc}

080108b0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80108b0:	b510      	push	{r4, lr}
 80108b2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 80108b6:	4604      	mov	r4, r0
 80108b8:	f7ff ffc4 	bl	8010844 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80108bc:	4620      	mov	r0, r4
 80108be:	bd10      	pop	{r4, pc}

080108c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80108c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108c4:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 80108c8:	42b5      	cmp	r5, r6
 80108ca:	bfa2      	ittt	ge
 80108cc:	462b      	movge	r3, r5
 80108ce:	4635      	movge	r5, r6
 80108d0:	461e      	movge	r6, r3
 80108d2:	1b73      	subs	r3, r6, r5
 80108d4:	468a      	mov	sl, r1
 80108d6:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 80108d8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 80108dc:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 80108e0:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 80108e2:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 80108e6:	b0af      	sub	sp, #188	@ 0xbc
 80108e8:	f04f 0320 	mov.w	r3, #32
 80108ec:	4604      	mov	r4, r0
 80108ee:	bfa4      	itt	ge
 80108f0:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 80108f4:	2500      	movge	r5, #0
 80108f6:	fb99 f9f3 	sdiv	r9, r9, r3
 80108fa:	fb9b fbf3 	sdiv	fp, fp, r3
 80108fe:	2900      	cmp	r1, #0
 8010900:	f000 80ff 	beq.w	8010b02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 8010904:	f9ba 0000 	ldrsh.w	r0, [sl]
 8010908:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 801090c:	eba9 0700 	sub.w	r7, r9, r0
 8010910:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8010914:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8010918:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 801091c:	ebab 0803 	sub.w	r8, fp, r3
 8010920:	4407      	add	r7, r0
 8010922:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8010926:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 801092a:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 801092e:	b23f      	sxth	r7, r7
 8010930:	4498      	add	r8, r3
 8010932:	eba9 0707 	sub.w	r7, r9, r7
 8010936:	fa0f f888 	sxth.w	r8, r8
 801093a:	ebab 0808 	sub.w	r8, fp, r8
 801093e:	2f00      	cmp	r7, #0
 8010940:	bfb8      	it	lt
 8010942:	427f      	neglt	r7, r7
 8010944:	f1b8 0f00 	cmp.w	r8, #0
 8010948:	bfb8      	it	lt
 801094a:	f1c8 0800 	rsblt	r8, r8, #0
 801094e:	45bc      	cmp	ip, r7
 8010950:	bfcc      	ite	gt
 8010952:	f10c 0701 	addgt.w	r7, ip, #1
 8010956:	3701      	addle	r7, #1
 8010958:	4540      	cmp	r0, r8
 801095a:	bfc8      	it	gt
 801095c:	f100 0801 	addgt.w	r8, r0, #1
 8010960:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 8010964:	f100 0001 	add.w	r0, r0, #1
 8010968:	ea4f 0060 	mov.w	r0, r0, asr #1
 801096c:	f04f 0302 	mov.w	r3, #2
 8010970:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 8010974:	fb91 f1f3 	sdiv	r1, r1, r3
 8010978:	eba2 0201 	sub.w	r2, r2, r1
 801097c:	bfd8      	it	le
 801097e:	f108 0801 	addle.w	r8, r8, #1
 8010982:	9303      	str	r3, [sp, #12]
 8010984:	920f      	str	r2, [sp, #60]	@ 0x3c
 8010986:	f7ff fd57 	bl	8010438 <_ZN8touchgfx7CWRUtil4sineEi>
 801098a:	a92e      	add	r1, sp, #184	@ 0xb8
 801098c:	fb08 f808 	mul.w	r8, r8, r8
 8010990:	f841 0d74 	str.w	r0, [r1, #-116]!
 8010994:	a80f      	add	r0, sp, #60	@ 0x3c
 8010996:	f7ff fd44 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801099a:	fb07 8707 	mla	r7, r7, r7, r8
 801099e:	f04f 0c20 	mov.w	ip, #32
 80109a2:	fb90 f0fc 	sdiv	r0, r0, ip
 80109a6:	4340      	muls	r0, r0
 80109a8:	4287      	cmp	r7, r0
 80109aa:	9b03      	ldr	r3, [sp, #12]
 80109ac:	da04      	bge.n	80109b8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80109ae:	2401      	movs	r4, #1
 80109b0:	4620      	mov	r0, r4
 80109b2:	b02f      	add	sp, #188	@ 0xbc
 80109b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109b8:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 80109ba:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 80109bc:	fb91 f2f3 	sdiv	r2, r1, r3
 80109c0:	4402      	add	r2, r0
 80109c2:	fb92 f2fc 	sdiv	r2, r2, ip
 80109c6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80109ca:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 80109ce:	440b      	add	r3, r1
 80109d0:	b21b      	sxth	r3, r3
 80109d2:	454b      	cmp	r3, r9
 80109d4:	bfa8      	it	ge
 80109d6:	464b      	movge	r3, r9
 80109d8:	428b      	cmp	r3, r1
 80109da:	bfac      	ite	ge
 80109dc:	eba9 0903 	subge.w	r9, r9, r3
 80109e0:	eba9 0901 	sublt.w	r9, r9, r1
 80109e4:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 80109e8:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 80109ec:	440b      	add	r3, r1
 80109ee:	b21b      	sxth	r3, r3
 80109f0:	455b      	cmp	r3, fp
 80109f2:	bfa8      	it	ge
 80109f4:	465b      	movge	r3, fp
 80109f6:	428b      	cmp	r3, r1
 80109f8:	bfac      	ite	ge
 80109fa:	ebab 0b03 	subge.w	fp, fp, r3
 80109fe:	ebab 0b01 	sublt.w	fp, fp, r1
 8010a02:	3201      	adds	r2, #1
 8010a04:	fb0b fb0b 	mul.w	fp, fp, fp
 8010a08:	fb09 b909 	mla	r9, r9, r9, fp
 8010a0c:	4352      	muls	r2, r2
 8010a0e:	4591      	cmp	r9, r2
 8010a10:	dccd      	bgt.n	80109ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8010a12:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 8010a16:	4621      	mov	r1, r4
 8010a18:	4648      	mov	r0, r9
 8010a1a:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 8010a1c:	f004 fe5c 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a20:	6823      	ldr	r3, [r4, #0]
 8010a22:	4620      	mov	r0, r4
 8010a24:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8010a26:	4798      	blx	r3
 8010a28:	4653      	mov	r3, sl
 8010a2a:	9000      	str	r0, [sp, #0]
 8010a2c:	464a      	mov	r2, r9
 8010a2e:	4639      	mov	r1, r7
 8010a30:	a811      	add	r0, sp, #68	@ 0x44
 8010a32:	f015 fd6d 	bl	8026510 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8010a36:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 8010a38:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8010a3a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8010a3c:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8010a40:	930c      	str	r3, [sp, #48]	@ 0x30
 8010a42:	dd07      	ble.n	8010a54 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 8010a44:	2102      	movs	r1, #2
 8010a46:	fb93 f3f1 	sdiv	r3, r3, r1
 8010a4a:	4413      	add	r3, r2
 8010a4c:	930c      	str	r3, [sp, #48]	@ 0x30
 8010a4e:	fb93 f3f1 	sdiv	r3, r3, r1
 8010a52:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010a54:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010a58:	4628      	mov	r0, r5
 8010a5a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010a5e:	930d      	str	r3, [sp, #52]	@ 0x34
 8010a60:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 8010a64:	f7ff fd08 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010a68:	4649      	mov	r1, r9
 8010a6a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010a6c:	a80d      	add	r0, sp, #52	@ 0x34
 8010a6e:	f7ff fcd8 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010a72:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010a74:	f04f 0a02 	mov.w	sl, #2
 8010a78:	fb90 f0fa 	sdiv	r0, r0, sl
 8010a7c:	eb00 0b03 	add.w	fp, r0, r3
 8010a80:	4628      	mov	r0, r5
 8010a82:	f7ff fd18 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010a86:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 8010a8a:	017f      	lsls	r7, r7, #5
 8010a8c:	f848 0d80 	str.w	r0, [r8, #-128]!
 8010a90:	a80d      	add	r0, sp, #52	@ 0x34
 8010a92:	4641      	mov	r1, r8
 8010a94:	f7ff fcc5 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010a98:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010a9a:	fb90 f0fa 	sdiv	r0, r0, sl
 8010a9e:	4659      	mov	r1, fp
 8010aa0:	1a12      	subs	r2, r2, r0
 8010aa2:	a811      	add	r0, sp, #68	@ 0x44
 8010aa4:	f015 fe80 	bl	80267a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8010aa8:	f105 0a20 	add.w	sl, r5, #32
 8010aac:	bb67      	cbnz	r7, 8010b08 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 8010aae:	46ab      	mov	fp, r5
 8010ab0:	45b2      	cmp	sl, r6
 8010ab2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8010ab4:	dc33      	bgt.n	8010b1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 8010ab6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8010ab8:	4650      	mov	r0, sl
 8010aba:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8010abe:	920d      	str	r2, [sp, #52]	@ 0x34
 8010ac0:	f7ff fcda 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010ac4:	4641      	mov	r1, r8
 8010ac6:	900e      	str	r0, [sp, #56]	@ 0x38
 8010ac8:	a80d      	add	r0, sp, #52	@ 0x34
 8010aca:	f7ff fcaa 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010ace:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8010ad0:	2302      	movs	r3, #2
 8010ad2:	fb90 f0f3 	sdiv	r0, r0, r3
 8010ad6:	eb00 0b02 	add.w	fp, r0, r2
 8010ada:	4650      	mov	r0, sl
 8010adc:	f7ff fceb 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010ae0:	4649      	mov	r1, r9
 8010ae2:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010ae4:	a80d      	add	r0, sp, #52	@ 0x34
 8010ae6:	f7ff fc9c 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010aea:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010aec:	2302      	movs	r3, #2
 8010aee:	4659      	mov	r1, fp
 8010af0:	fb90 f0f3 	sdiv	r0, r0, r3
 8010af4:	1a12      	subs	r2, r2, r0
 8010af6:	a811      	add	r0, sp, #68	@ 0x44
 8010af8:	46d3      	mov	fp, sl
 8010afa:	f015 fea2 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010afe:	44ba      	add	sl, r7
 8010b00:	e7d6      	b.n	8010ab0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 8010b02:	fb92 f2f3 	sdiv	r2, r2, r3
 8010b06:	e75e      	b.n	80109c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8010b08:	fb9a f2f7 	sdiv	r2, sl, r7
 8010b0c:	fb07 a212 	mls	r2, r7, r2, sl
 8010b10:	1aba      	subs	r2, r7, r2
 8010b12:	fb92 f1f7 	sdiv	r1, r2, r7
 8010b16:	fb07 2211 	mls	r2, r7, r1, r2
 8010b1a:	4492      	add	sl, r2
 8010b1c:	e7c7      	b.n	8010aae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 8010b1e:	455e      	cmp	r6, fp
 8010b20:	dd23      	ble.n	8010b6a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 8010b22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8010b24:	4630      	mov	r0, r6
 8010b26:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8010b2a:	920d      	str	r2, [sp, #52]	@ 0x34
 8010b2c:	f7ff fca4 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010b30:	4641      	mov	r1, r8
 8010b32:	900e      	str	r0, [sp, #56]	@ 0x38
 8010b34:	a80d      	add	r0, sp, #52	@ 0x34
 8010b36:	f7ff fc74 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010b3a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010b3c:	f04f 0a02 	mov.w	sl, #2
 8010b40:	fb90 f0fa 	sdiv	r0, r0, sl
 8010b44:	4403      	add	r3, r0
 8010b46:	4630      	mov	r0, r6
 8010b48:	9303      	str	r3, [sp, #12]
 8010b4a:	f7ff fcb4 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010b4e:	4649      	mov	r1, r9
 8010b50:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010b52:	a80d      	add	r0, sp, #52	@ 0x34
 8010b54:	f7ff fc65 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010b58:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010b5a:	9b03      	ldr	r3, [sp, #12]
 8010b5c:	fb90 f0fa 	sdiv	r0, r0, sl
 8010b60:	4619      	mov	r1, r3
 8010b62:	1a12      	subs	r2, r2, r0
 8010b64:	a811      	add	r0, sp, #68	@ 0x44
 8010b66:	f015 fe6c 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010b6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010b6c:	b99b      	cbnz	r3, 8010b96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 8010b6e:	1b75      	subs	r5, r6, r5
 8010b70:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 8010b74:	da04      	bge.n	8010b80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8010b76:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 8010b7a:	a811      	add	r0, sp, #68	@ 0x44
 8010b7c:	f015 fe61 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010b80:	21ff      	movs	r1, #255	@ 0xff
 8010b82:	a811      	add	r0, sp, #68	@ 0x44
 8010b84:	f015 fd58 	bl	8026638 <_ZN8touchgfx6Canvas6renderEh>
 8010b88:	4604      	mov	r4, r0
 8010b8a:	4b8a      	ldr	r3, [pc, #552]	@ (8010db4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 8010b8c:	9311      	str	r3, [sp, #68]	@ 0x44
 8010b8e:	a816      	add	r0, sp, #88	@ 0x58
 8010b90:	f001 f8d6 	bl	8011d40 <_ZN8touchgfx7OutlineD1Ev>
 8010b94:	e70c      	b.n	80109b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8010b96:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 8010b9a:	429a      	cmp	r2, r3
 8010b9c:	f0c0 8107 	bcc.w	8010dae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 8010ba0:	1b73      	subs	r3, r6, r5
 8010ba2:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 8010ba6:	9303      	str	r3, [sp, #12]
 8010ba8:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8010bac:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8010bb0:	da43      	bge.n	8010c3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8010bb2:	4630      	mov	r0, r6
 8010bb4:	f7ff fc60 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010bb8:	4649      	mov	r1, r9
 8010bba:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010bbc:	a80b      	add	r0, sp, #44	@ 0x2c
 8010bbe:	f7ff fc30 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010bc2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010bc4:	18c3      	adds	r3, r0, r3
 8010bc6:	4630      	mov	r0, r6
 8010bc8:	9305      	str	r3, [sp, #20]
 8010bca:	f7ff fc74 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010bce:	4649      	mov	r1, r9
 8010bd0:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010bd2:	a80b      	add	r0, sp, #44	@ 0x2c
 8010bd4:	f7ff fc25 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010bd8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010bda:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 8010bde:	1a1b      	subs	r3, r3, r0
 8010be0:	9304      	str	r3, [sp, #16]
 8010be2:	9206      	str	r2, [sp, #24]
 8010be4:	eb06 030a 	add.w	r3, r6, sl
 8010be8:	9a06      	ldr	r2, [sp, #24]
 8010bea:	4293      	cmp	r3, r2
 8010bec:	da25      	bge.n	8010c3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8010bee:	4618      	mov	r0, r3
 8010bf0:	9308      	str	r3, [sp, #32]
 8010bf2:	f7ff fc41 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010bf6:	4649      	mov	r1, r9
 8010bf8:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010bfa:	a80c      	add	r0, sp, #48	@ 0x30
 8010bfc:	f7ff fc11 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c00:	9b05      	ldr	r3, [sp, #20]
 8010c02:	2202      	movs	r2, #2
 8010c04:	fb90 f0f2 	sdiv	r0, r0, r2
 8010c08:	18c3      	adds	r3, r0, r3
 8010c0a:	9307      	str	r3, [sp, #28]
 8010c0c:	9b08      	ldr	r3, [sp, #32]
 8010c0e:	9209      	str	r2, [sp, #36]	@ 0x24
 8010c10:	4618      	mov	r0, r3
 8010c12:	f7ff fc50 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010c16:	a92e      	add	r1, sp, #184	@ 0xb8
 8010c18:	f841 0d80 	str.w	r0, [r1, #-128]!
 8010c1c:	a80c      	add	r0, sp, #48	@ 0x30
 8010c1e:	f7ff fc00 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c22:	9b04      	ldr	r3, [sp, #16]
 8010c24:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010c26:	9907      	ldr	r1, [sp, #28]
 8010c28:	fb90 f2f2 	sdiv	r2, r0, r2
 8010c2c:	a811      	add	r0, sp, #68	@ 0x44
 8010c2e:	1a9a      	subs	r2, r3, r2
 8010c30:	f015 fe07 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c34:	9b08      	ldr	r3, [sp, #32]
 8010c36:	4453      	add	r3, sl
 8010c38:	e7d6      	b.n	8010be8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 8010c3a:	455e      	cmp	r6, fp
 8010c3c:	dd25      	ble.n	8010c8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 8010c3e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010c42:	4630      	mov	r0, r6
 8010c44:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8010c48:	930d      	str	r3, [sp, #52]	@ 0x34
 8010c4a:	f7ff fc15 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010c4e:	4641      	mov	r1, r8
 8010c50:	900e      	str	r0, [sp, #56]	@ 0x38
 8010c52:	a80d      	add	r0, sp, #52	@ 0x34
 8010c54:	f7ff fbe5 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c58:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010c5a:	2202      	movs	r2, #2
 8010c5c:	fb90 f0f2 	sdiv	r0, r0, r2
 8010c60:	eb00 0903 	add.w	r9, r0, r3
 8010c64:	4630      	mov	r0, r6
 8010c66:	9204      	str	r2, [sp, #16]
 8010c68:	f7ff fc25 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010c6c:	a92e      	add	r1, sp, #184	@ 0xb8
 8010c6e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8010c72:	a80d      	add	r0, sp, #52	@ 0x34
 8010c74:	f7ff fbd5 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010c78:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010c7a:	9a04      	ldr	r2, [sp, #16]
 8010c7c:	fb90 f2f2 	sdiv	r2, r0, r2
 8010c80:	4649      	mov	r1, r9
 8010c82:	1a9a      	subs	r2, r3, r2
 8010c84:	a811      	add	r0, sp, #68	@ 0x44
 8010c86:	f015 fddc 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010c8a:	46d9      	mov	r9, fp
 8010c8c:	2602      	movs	r6, #2
 8010c8e:	45a9      	cmp	r9, r5
 8010c90:	db25      	blt.n	8010cde <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 8010c92:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010c96:	4648      	mov	r0, r9
 8010c98:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8010c9c:	930d      	str	r3, [sp, #52]	@ 0x34
 8010c9e:	f7ff fbeb 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010ca2:	4641      	mov	r1, r8
 8010ca4:	900e      	str	r0, [sp, #56]	@ 0x38
 8010ca6:	a80d      	add	r0, sp, #52	@ 0x34
 8010ca8:	f7ff fbbb 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010cac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010cae:	fb90 f0f6 	sdiv	r0, r0, r6
 8010cb2:	eb00 0b03 	add.w	fp, r0, r3
 8010cb6:	4648      	mov	r0, r9
 8010cb8:	f7ff fbfd 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010cbc:	a90f      	add	r1, sp, #60	@ 0x3c
 8010cbe:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010cc0:	a80d      	add	r0, sp, #52	@ 0x34
 8010cc2:	f7ff fbae 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010cc6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010cc8:	fb90 f0f6 	sdiv	r0, r0, r6
 8010ccc:	4659      	mov	r1, fp
 8010cce:	1a12      	subs	r2, r2, r0
 8010cd0:	a811      	add	r0, sp, #68	@ 0x44
 8010cd2:	46cb      	mov	fp, r9
 8010cd4:	f015 fdb5 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010cd8:	eba9 0907 	sub.w	r9, r9, r7
 8010cdc:	e7d7      	b.n	8010c8e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 8010cde:	455d      	cmp	r5, fp
 8010ce0:	da22      	bge.n	8010d28 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 8010ce2:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8010ce6:	4628      	mov	r0, r5
 8010ce8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8010cec:	930d      	str	r3, [sp, #52]	@ 0x34
 8010cee:	f7ff fbc3 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010cf2:	4641      	mov	r1, r8
 8010cf4:	900e      	str	r0, [sp, #56]	@ 0x38
 8010cf6:	a80d      	add	r0, sp, #52	@ 0x34
 8010cf8:	f7ff fb93 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010cfc:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8010cfe:	2602      	movs	r6, #2
 8010d00:	fb90 f0f6 	sdiv	r0, r0, r6
 8010d04:	4407      	add	r7, r0
 8010d06:	4628      	mov	r0, r5
 8010d08:	f7ff fbd5 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010d0c:	a92e      	add	r1, sp, #184	@ 0xb8
 8010d0e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8010d12:	a80d      	add	r0, sp, #52	@ 0x34
 8010d14:	f7ff fb85 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d18:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8010d1a:	fb90 f0f6 	sdiv	r0, r0, r6
 8010d1e:	4639      	mov	r1, r7
 8010d20:	1a12      	subs	r2, r2, r0
 8010d22:	a811      	add	r0, sp, #68	@ 0x44
 8010d24:	f015 fd8d 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010d28:	9b03      	ldr	r3, [sp, #12]
 8010d2a:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8010d2e:	f6bf af27 	bge.w	8010b80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8010d32:	4628      	mov	r0, r5
 8010d34:	f7ff fba0 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010d38:	ae2e      	add	r6, sp, #184	@ 0xb8
 8010d3a:	f04f 0b02 	mov.w	fp, #2
 8010d3e:	f846 0d7c 	str.w	r0, [r6, #-124]!
 8010d42:	a80b      	add	r0, sp, #44	@ 0x2c
 8010d44:	4631      	mov	r1, r6
 8010d46:	f7ff fb6c 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d4a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010d4c:	eb00 0903 	add.w	r9, r0, r3
 8010d50:	4628      	mov	r0, r5
 8010d52:	f7ff fbb0 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010d56:	4631      	mov	r1, r6
 8010d58:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010d5a:	a80b      	add	r0, sp, #44	@ 0x2c
 8010d5c:	f7ff fb61 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d60:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8010d62:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 8010d66:	eba3 0800 	sub.w	r8, r3, r0
 8010d6a:	4454      	add	r4, sl
 8010d6c:	42a5      	cmp	r5, r4
 8010d6e:	f77f af07 	ble.w	8010b80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8010d72:	4620      	mov	r0, r4
 8010d74:	f7ff fb80 	bl	8010478 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8010d78:	4631      	mov	r1, r6
 8010d7a:	900f      	str	r0, [sp, #60]	@ 0x3c
 8010d7c:	a80c      	add	r0, sp, #48	@ 0x30
 8010d7e:	f7ff fb50 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d82:	fb90 f0fb 	sdiv	r0, r0, fp
 8010d86:	eb00 0709 	add.w	r7, r0, r9
 8010d8a:	4620      	mov	r0, r4
 8010d8c:	f7ff fb93 	bl	80104b6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8010d90:	a90e      	add	r1, sp, #56	@ 0x38
 8010d92:	900e      	str	r0, [sp, #56]	@ 0x38
 8010d94:	a80c      	add	r0, sp, #48	@ 0x30
 8010d96:	f7ff fb44 	bl	8010422 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8010d9a:	4639      	mov	r1, r7
 8010d9c:	fb90 f2fb 	sdiv	r2, r0, fp
 8010da0:	a811      	add	r0, sp, #68	@ 0x44
 8010da2:	eba8 0202 	sub.w	r2, r8, r2
 8010da6:	f015 fd4c 	bl	8026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8010daa:	4454      	add	r4, sl
 8010dac:	e7de      	b.n	8010d6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 8010dae:	2400      	movs	r4, #0
 8010db0:	e6eb      	b.n	8010b8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 8010db2:	bf00      	nop
 8010db4:	0802b6d0 	.word	0x0802b6d0

08010db8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010db8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010dba:	6803      	ldr	r3, [r0, #0]
 8010dbc:	460d      	mov	r5, r1
 8010dbe:	4604      	mov	r4, r0
 8010dc0:	4601      	mov	r1, r0
 8010dc2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8010dc4:	a802      	add	r0, sp, #8
 8010dc6:	4798      	blx	r3
 8010dc8:	6828      	ldr	r0, [r5, #0]
 8010dca:	6869      	ldr	r1, [r5, #4]
 8010dcc:	466b      	mov	r3, sp
 8010dce:	c303      	stmia	r3!, {r0, r1}
 8010dd0:	4668      	mov	r0, sp
 8010dd2:	4619      	mov	r1, r3
 8010dd4:	f7fc ffba 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8010dd8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8010dda:	b188      	cbz	r0, 8010e00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010ddc:	6803      	ldr	r3, [r0, #0]
 8010dde:	1d21      	adds	r1, r4, #4
 8010de0:	68db      	ldr	r3, [r3, #12]
 8010de2:	4798      	blx	r3
 8010de4:	b160      	cbz	r0, 8010e00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010de6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010dea:	2b00      	cmp	r3, #0
 8010dec:	dd08      	ble.n	8010e00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010dee:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010df2:	2d00      	cmp	r5, #0
 8010df4:	dd04      	ble.n	8010e00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010df6:	4a2b      	ldr	r2, [pc, #172]	@ (8010ea4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010df8:	7812      	ldrb	r2, [r2, #0]
 8010dfa:	b11a      	cbz	r2, 8010e04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010dfc:	2a01      	cmp	r2, #1
 8010dfe:	d029      	beq.n	8010e54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010e00:	b004      	add	sp, #16
 8010e02:	bd70      	pop	{r4, r5, r6, pc}
 8010e04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010e08:	441d      	add	r5, r3
 8010e0a:	b2ad      	uxth	r5, r5
 8010e0c:	b22e      	sxth	r6, r5
 8010e0e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010e12:	42b3      	cmp	r3, r6
 8010e14:	daf4      	bge.n	8010e00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010e16:	6823      	ldr	r3, [r4, #0]
 8010e18:	4669      	mov	r1, sp
 8010e1a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8010e1c:	4620      	mov	r0, r4
 8010e1e:	4798      	blx	r3
 8010e20:	b940      	cbnz	r0, 8010e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010e22:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010e26:	2b01      	cmp	r3, #1
 8010e28:	d004      	beq.n	8010e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010e2a:	3301      	adds	r3, #1
 8010e2c:	105b      	asrs	r3, r3, #1
 8010e2e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e32:	e7f0      	b.n	8010e16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010e34:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010e38:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010e3c:	4413      	add	r3, r2
 8010e3e:	b29b      	uxth	r3, r3
 8010e40:	441a      	add	r2, r3
 8010e42:	b212      	sxth	r2, r2
 8010e44:	4296      	cmp	r6, r2
 8010e46:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010e4a:	dae0      	bge.n	8010e0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010e4c:	1aeb      	subs	r3, r5, r3
 8010e4e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010e52:	e7dc      	b.n	8010e0e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010e54:	f8bd 5000 	ldrh.w	r5, [sp]
 8010e58:	441d      	add	r5, r3
 8010e5a:	b2ad      	uxth	r5, r5
 8010e5c:	b22e      	sxth	r6, r5
 8010e5e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010e62:	42b3      	cmp	r3, r6
 8010e64:	dacc      	bge.n	8010e00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010e66:	6823      	ldr	r3, [r4, #0]
 8010e68:	4669      	mov	r1, sp
 8010e6a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8010e6c:	4620      	mov	r0, r4
 8010e6e:	4798      	blx	r3
 8010e70:	b940      	cbnz	r0, 8010e84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010e72:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010e76:	2b01      	cmp	r3, #1
 8010e78:	d004      	beq.n	8010e84 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010e7a:	3301      	adds	r3, #1
 8010e7c:	105b      	asrs	r3, r3, #1
 8010e7e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010e82:	e7f0      	b.n	8010e66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010e84:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010e88:	f8bd 3000 	ldrh.w	r3, [sp]
 8010e8c:	4413      	add	r3, r2
 8010e8e:	b29b      	uxth	r3, r3
 8010e90:	441a      	add	r2, r3
 8010e92:	b212      	sxth	r2, r2
 8010e94:	4296      	cmp	r6, r2
 8010e96:	f8ad 3000 	strh.w	r3, [sp]
 8010e9a:	dae0      	bge.n	8010e5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010e9c:	1aeb      	subs	r3, r5, r3
 8010e9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010ea2:	e7dc      	b.n	8010e5e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010ea4:	20013f58 	.word	0x20013f58

08010ea8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010ea8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010eaa:	6803      	ldr	r3, [r0, #0]
 8010eac:	4604      	mov	r4, r0
 8010eae:	4601      	mov	r1, r0
 8010eb0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8010eb2:	4668      	mov	r0, sp
 8010eb4:	4798      	blx	r3
 8010eb6:	2100      	movs	r1, #0
 8010eb8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010ebc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010ec0:	9102      	str	r1, [sp, #8]
 8010ec2:	4668      	mov	r0, sp
 8010ec4:	a902      	add	r1, sp, #8
 8010ec6:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010eca:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010ece:	f7fc ff3d 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8010ed2:	6823      	ldr	r3, [r4, #0]
 8010ed4:	4669      	mov	r1, sp
 8010ed6:	691b      	ldr	r3, [r3, #16]
 8010ed8:	4620      	mov	r0, r4
 8010eda:	4798      	blx	r3
 8010edc:	b004      	add	sp, #16
 8010ede:	bd10      	pop	{r4, pc}

08010ee0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010ee0:	2101      	movs	r1, #1
 8010ee2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8010ee6:	490b      	ldr	r1, [pc, #44]	@ (8010f14 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010ee8:	6001      	str	r1, [r0, #0]
 8010eea:	2200      	movs	r2, #0
 8010eec:	21ff      	movs	r1, #255	@ 0xff
 8010eee:	8082      	strh	r2, [r0, #4]
 8010ef0:	80c2      	strh	r2, [r0, #6]
 8010ef2:	8102      	strh	r2, [r0, #8]
 8010ef4:	8142      	strh	r2, [r0, #10]
 8010ef6:	8182      	strh	r2, [r0, #12]
 8010ef8:	81c2      	strh	r2, [r0, #14]
 8010efa:	8202      	strh	r2, [r0, #16]
 8010efc:	8242      	strh	r2, [r0, #18]
 8010efe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010f02:	61c2      	str	r2, [r0, #28]
 8010f04:	8402      	strh	r2, [r0, #32]
 8010f06:	8442      	strh	r2, [r0, #34]	@ 0x22
 8010f08:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8010f0c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8010f10:	6282      	str	r2, [r0, #40]	@ 0x28
 8010f12:	4770      	bx	lr
 8010f14:	0802afd4 	.word	0x0802afd4

08010f18 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8010f18:	2000      	movs	r0, #0
 8010f1a:	4770      	bx	lr

08010f1c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8010f1c:	4b07      	ldr	r3, [pc, #28]	@ (8010f3c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8010f1e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8010f20:	881b      	ldrh	r3, [r3, #0]
 8010f22:	4293      	cmp	r3, r2
 8010f24:	bf81      	itttt	hi
 8010f26:	4b06      	ldrhi	r3, [pc, #24]	@ (8010f40 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8010f28:	681b      	ldrhi	r3, [r3, #0]
 8010f2a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8010f2e:	7858      	ldrbhi	r0, [r3, #1]
 8010f30:	bf8c      	ite	hi
 8010f32:	f000 0003 	andhi.w	r0, r0, #3
 8010f36:	2000      	movls	r0, #0
 8010f38:	4770      	bx	lr
 8010f3a:	bf00      	nop
 8010f3c:	20013fbc 	.word	0x20013fbc
 8010f40:	20013fb8 	.word	0x20013fb8

08010f44 <_ZN8touchgfx8TextAreaD1Ev>:
 8010f44:	4770      	bx	lr
	...

08010f48 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8010f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f4c:	4b10      	ldr	r3, [pc, #64]	@ (8010f90 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8010f4e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8010f50:	881b      	ldrh	r3, [r3, #0]
 8010f52:	428b      	cmp	r3, r1
 8010f54:	4604      	mov	r4, r0
 8010f56:	d918      	bls.n	8010f8a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8010f58:	6803      	ldr	r3, [r0, #0]
 8010f5a:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8010f5c:	4b0d      	ldr	r3, [pc, #52]	@ (8010f94 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8010f5e:	6818      	ldr	r0, [r3, #0]
 8010f60:	f7f5 fbd2 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8010f64:	6823      	ldr	r3, [r4, #0]
 8010f66:	4606      	mov	r6, r0
 8010f68:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8010f6a:	4620      	mov	r0, r4
 8010f6c:	4798      	blx	r3
 8010f6e:	6823      	ldr	r3, [r4, #0]
 8010f70:	4607      	mov	r7, r0
 8010f72:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010f76:	4620      	mov	r0, r4
 8010f78:	4798      	blx	r3
 8010f7a:	463a      	mov	r2, r7
 8010f7c:	4603      	mov	r3, r0
 8010f7e:	4631      	mov	r1, r6
 8010f80:	4620      	mov	r0, r4
 8010f82:	46ac      	mov	ip, r5
 8010f84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010f88:	4760      	bx	ip
 8010f8a:	2000      	movs	r0, #0
 8010f8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f90:	20013fbc 	.word	0x20013fbc
 8010f94:	20013fc4 	.word	0x20013fc4

08010f98 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8010f98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010f9c:	4b17      	ldr	r3, [pc, #92]	@ (8010ffc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8010f9e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8010fa0:	881b      	ldrh	r3, [r3, #0]
 8010fa2:	428b      	cmp	r3, r1
 8010fa4:	4604      	mov	r4, r0
 8010fa6:	d926      	bls.n	8010ff6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8010fa8:	4b15      	ldr	r3, [pc, #84]	@ (8011000 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8010faa:	681b      	ldr	r3, [r3, #0]
 8010fac:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8010fb0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8010fb4:	4b13      	ldr	r3, [pc, #76]	@ (8011004 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8010fb6:	7855      	ldrb	r5, [r2, #1]
 8010fb8:	681b      	ldr	r3, [r3, #0]
 8010fba:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8010fbe:	6833      	ldr	r3, [r6, #0]
 8010fc0:	69df      	ldr	r7, [r3, #28]
 8010fc2:	4b11      	ldr	r3, [pc, #68]	@ (8011008 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8010fc4:	6818      	ldr	r0, [r3, #0]
 8010fc6:	f7f5 fb9f 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8010fca:	6823      	ldr	r3, [r4, #0]
 8010fcc:	4680      	mov	r8, r0
 8010fce:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8010fd0:	4620      	mov	r0, r4
 8010fd2:	4798      	blx	r3
 8010fd4:	6823      	ldr	r3, [r4, #0]
 8010fd6:	4681      	mov	r9, r0
 8010fd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010fdc:	4620      	mov	r0, r4
 8010fde:	4798      	blx	r3
 8010fe0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8010fe4:	9000      	str	r0, [sp, #0]
 8010fe6:	464b      	mov	r3, r9
 8010fe8:	4642      	mov	r2, r8
 8010fea:	4629      	mov	r1, r5
 8010fec:	4630      	mov	r0, r6
 8010fee:	47b8      	blx	r7
 8010ff0:	b003      	add	sp, #12
 8010ff2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010ff6:	2000      	movs	r0, #0
 8010ff8:	e7fa      	b.n	8010ff0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8010ffa:	bf00      	nop
 8010ffc:	20013fbc 	.word	0x20013fbc
 8011000:	20013fb8 	.word	0x20013fb8
 8011004:	20013fc0 	.word	0x20013fc0
 8011008:	20013fc4 	.word	0x20013fc4

0801100c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801100c:	b40e      	push	{r1, r2, r3}
 801100e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011012:	4b2f      	ldr	r3, [pc, #188]	@ (80110d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011014:	881a      	ldrh	r2, [r3, #0]
 8011016:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8011018:	429a      	cmp	r2, r3
 801101a:	b09d      	sub	sp, #116	@ 0x74
 801101c:	4604      	mov	r4, r0
 801101e:	d954      	bls.n	80110ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011020:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 80110d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011024:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 80110d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011028:	aa26      	add	r2, sp, #152	@ 0x98
 801102a:	9202      	str	r2, [sp, #8]
 801102c:	f8d9 2000 	ldr.w	r2, [r9]
 8011030:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011034:	f8d8 3000 	ldr.w	r3, [r8]
 8011038:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801103c:	682b      	ldr	r3, [r5, #0]
 801103e:	4628      	mov	r0, r5
 8011040:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011042:	4798      	blx	r3
 8011044:	b207      	sxth	r7, r0
 8011046:	4606      	mov	r6, r0
 8011048:	a803      	add	r0, sp, #12
 801104a:	f005 fae6 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 801104e:	682b      	ldr	r3, [r5, #0]
 8011050:	4628      	mov	r0, r5
 8011052:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011054:	4798      	blx	r3
 8011056:	682b      	ldr	r3, [r5, #0]
 8011058:	4682      	mov	sl, r0
 801105a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801105c:	4628      	mov	r0, r5
 801105e:	4798      	blx	r3
 8011060:	4653      	mov	r3, sl
 8011062:	9000      	str	r0, [sp, #0]
 8011064:	9a02      	ldr	r2, [sp, #8]
 8011066:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8011068:	a803      	add	r0, sp, #12
 801106a:	f005 fb31 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801106e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011070:	f8d9 3000 	ldr.w	r3, [r9]
 8011074:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8011078:	8925      	ldrh	r5, [r4, #8]
 801107a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801107e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011082:	eba5 050c 	sub.w	r5, r5, ip
 8011086:	784a      	ldrb	r2, [r1, #1]
 8011088:	f8d8 3000 	ldr.w	r3, [r8]
 801108c:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8011090:	b22d      	sxth	r5, r5
 8011092:	9500      	str	r5, [sp, #0]
 8011094:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011098:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801109c:	a803      	add	r0, sp, #12
 801109e:	f002 fd4f 	bl	8013b40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80110a2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 80110a6:	18b9      	adds	r1, r7, r2
 80110a8:	2900      	cmp	r1, #0
 80110aa:	b203      	sxth	r3, r0
 80110ac:	dd0b      	ble.n	80110c6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80110ae:	3b01      	subs	r3, #1
 80110b0:	fb13 f302 	smulbb	r3, r3, r2
 80110b4:	fb16 3300 	smlabb	r3, r6, r0, r3
 80110b8:	b21f      	sxth	r7, r3
 80110ba:	4638      	mov	r0, r7
 80110bc:	b01d      	add	sp, #116	@ 0x74
 80110be:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80110c2:	b003      	add	sp, #12
 80110c4:	4770      	bx	lr
 80110c6:	2b00      	cmp	r3, #0
 80110c8:	dcf7      	bgt.n	80110ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80110ca:	2700      	movs	r7, #0
 80110cc:	e7f5      	b.n	80110ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 80110ce:	bf00      	nop
 80110d0:	20013fbc 	.word	0x20013fbc
 80110d4:	20013fb8 	.word	0x20013fb8
 80110d8:	20013fc0 	.word	0x20013fc0

080110dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80110dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110e0:	4bbc      	ldr	r3, [pc, #752]	@ (80113d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80110e2:	460c      	mov	r4, r1
 80110e4:	881b      	ldrh	r3, [r3, #0]
 80110e6:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 80110e8:	428b      	cmp	r3, r1
 80110ea:	b0a9      	sub	sp, #164	@ 0xa4
 80110ec:	4680      	mov	r8, r0
 80110ee:	d809      	bhi.n	8011104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80110f0:	2300      	movs	r3, #0
 80110f2:	f04f 32ff 	mov.w	r2, #4294967295
 80110f6:	e9c0 3200 	strd	r3, r2, [r0]
 80110fa:	6083      	str	r3, [r0, #8]
 80110fc:	4640      	mov	r0, r8
 80110fe:	b029      	add	sp, #164	@ 0xa4
 8011100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011104:	4eb4      	ldr	r6, [pc, #720]	@ (80113d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011106:	6833      	ldr	r3, [r6, #0]
 8011108:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801110c:	4bb3      	ldr	r3, [pc, #716]	@ (80113dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801110e:	681b      	ldr	r3, [r3, #0]
 8011110:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011114:	4bb2      	ldr	r3, [pc, #712]	@ (80113e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011116:	6818      	ldr	r0, [r3, #0]
 8011118:	f7f5 faf6 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 801111c:	682b      	ldr	r3, [r5, #0]
 801111e:	4681      	mov	r9, r0
 8011120:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011122:	4628      	mov	r0, r5
 8011124:	4798      	blx	r3
 8011126:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8011128:	b203      	sxth	r3, r0
 801112a:	4407      	add	r7, r0
 801112c:	9304      	str	r3, [sp, #16]
 801112e:	b2bb      	uxth	r3, r7
 8011130:	9303      	str	r3, [sp, #12]
 8011132:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8011136:	4682      	mov	sl, r0
 8011138:	a80f      	add	r0, sp, #60	@ 0x3c
 801113a:	2b00      	cmp	r3, #0
 801113c:	f040 80a6 	bne.w	801128c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011140:	f005 fa6b 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 8011144:	682b      	ldr	r3, [r5, #0]
 8011146:	4628      	mov	r0, r5
 8011148:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801114a:	4798      	blx	r3
 801114c:	682b      	ldr	r3, [r5, #0]
 801114e:	4606      	mov	r6, r0
 8011150:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011152:	4628      	mov	r0, r5
 8011154:	4798      	blx	r3
 8011156:	6823      	ldr	r3, [r4, #0]
 8011158:	4607      	mov	r7, r0
 801115a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801115c:	4620      	mov	r0, r4
 801115e:	4798      	blx	r3
 8011160:	6823      	ldr	r3, [r4, #0]
 8011162:	4683      	mov	fp, r0
 8011164:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011168:	4620      	mov	r0, r4
 801116a:	4798      	blx	r3
 801116c:	463b      	mov	r3, r7
 801116e:	e9cd b000 	strd	fp, r0, [sp]
 8011172:	4649      	mov	r1, r9
 8011174:	4632      	mov	r2, r6
 8011176:	a80f      	add	r0, sp, #60	@ 0x3c
 8011178:	f005 fabf 	bl	80166fa <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801117c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011180:	f8df b254 	ldr.w	fp, [pc, #596]	@ 80113d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011184:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011188:	f04f 0600 	mov.w	r6, #0
 801118c:	bf0c      	ite	eq
 801118e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011192:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011196:	4637      	mov	r7, r6
 8011198:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801119a:	f8db 3000 	ldr.w	r3, [fp]
 801119e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80111a2:	4629      	mov	r1, r5
 80111a4:	785b      	ldrb	r3, [r3, #1]
 80111a6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80111aa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80111ae:	a80f      	add	r0, sp, #60	@ 0x3c
 80111b0:	f002 f9cd 	bl	801354e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80111b4:	9b03      	ldr	r3, [sp, #12]
 80111b6:	4286      	cmp	r6, r0
 80111b8:	bfb8      	it	lt
 80111ba:	4606      	movlt	r6, r0
 80111bc:	3701      	adds	r7, #1
 80111be:	eba9 0903 	sub.w	r9, r9, r3
 80111c2:	a80f      	add	r0, sp, #60	@ 0x3c
 80111c4:	b236      	sxth	r6, r6
 80111c6:	b2bf      	uxth	r7, r7
 80111c8:	fa0f f989 	sxth.w	r9, r9
 80111cc:	f005 fa4c 	bl	8016668 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80111d0:	b918      	cbnz	r0, 80111da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80111d2:	7a2b      	ldrb	r3, [r5, #8]
 80111d4:	444b      	add	r3, r9
 80111d6:	2b00      	cmp	r3, #0
 80111d8:	dcde      	bgt.n	8011198 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80111da:	9b03      	ldr	r3, [sp, #12]
 80111dc:	9a04      	ldr	r2, [sp, #16]
 80111de:	f895 9009 	ldrb.w	r9, [r5, #9]
 80111e2:	fb13 f707 	smulbb	r7, r3, r7
 80111e6:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80111e8:	1aff      	subs	r7, r7, r3
 80111ea:	b2bf      	uxth	r7, r7
 80111ec:	b23b      	sxth	r3, r7
 80111ee:	429a      	cmp	r2, r3
 80111f0:	bfa8      	it	ge
 80111f2:	4657      	movge	r7, sl
 80111f4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80111f8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80111fc:	6823      	ldr	r3, [r4, #0]
 80111fe:	bf08      	it	eq
 8011200:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011204:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011206:	bf18      	it	ne
 8011208:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801120c:	4620      	mov	r0, r4
 801120e:	4798      	blx	r3
 8011210:	444f      	add	r7, r9
 8011212:	fa1f f987 	uxth.w	r9, r7
 8011216:	2801      	cmp	r0, #1
 8011218:	fa0f f789 	sxth.w	r7, r9
 801121c:	b2b3      	uxth	r3, r6
 801121e:	f000 80e1 	beq.w	80113e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011222:	2802      	cmp	r0, #2
 8011224:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8011228:	f000 80e2 	beq.w	80113f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801122c:	7aea      	ldrb	r2, [r5, #11]
 801122e:	7b2d      	ldrb	r5, [r5, #12]
 8011230:	b236      	sxth	r6, r6
 8011232:	1ab6      	subs	r6, r6, r2
 8011234:	442a      	add	r2, r5
 8011236:	4413      	add	r3, r2
 8011238:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 801123c:	fa1f fa86 	uxth.w	sl, r6
 8011240:	b29b      	uxth	r3, r3
 8011242:	2a02      	cmp	r2, #2
 8011244:	fa0f fb8a 	sxth.w	fp, sl
 8011248:	b21e      	sxth	r6, r3
 801124a:	f000 80d5 	beq.w	80113f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801124e:	2a03      	cmp	r2, #3
 8011250:	f000 80dd 	beq.w	801140e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011254:	2a01      	cmp	r2, #1
 8011256:	f040 80e5 	bne.w	8011424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801125a:	8925      	ldrh	r5, [r4, #8]
 801125c:	4633      	mov	r3, r6
 801125e:	eba5 0909 	sub.w	r9, r5, r9
 8011262:	463e      	mov	r6, r7
 8011264:	465d      	mov	r5, fp
 8011266:	461f      	mov	r7, r3
 8011268:	fa0f fb89 	sxth.w	fp, r9
 801126c:	4b5c      	ldr	r3, [pc, #368]	@ (80113e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801126e:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011270:	6818      	ldr	r0, [r3, #0]
 8011272:	f7f5 fa49 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011276:	f8a8 b000 	strh.w	fp, [r8]
 801127a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801127e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011282:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011286:	f8c8 0008 	str.w	r0, [r8, #8]
 801128a:	e737      	b.n	80110fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801128c:	f005 f9c5 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 8011290:	682b      	ldr	r3, [r5, #0]
 8011292:	4628      	mov	r0, r5
 8011294:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011296:	4798      	blx	r3
 8011298:	682b      	ldr	r3, [r5, #0]
 801129a:	4607      	mov	r7, r0
 801129c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801129e:	4628      	mov	r0, r5
 80112a0:	4798      	blx	r3
 80112a2:	6823      	ldr	r3, [r4, #0]
 80112a4:	4683      	mov	fp, r0
 80112a6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80112a8:	4620      	mov	r0, r4
 80112aa:	4798      	blx	r3
 80112ac:	6822      	ldr	r2, [r4, #0]
 80112ae:	9005      	str	r0, [sp, #20]
 80112b0:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 80112b4:	4620      	mov	r0, r4
 80112b6:	4790      	blx	r2
 80112b8:	9b05      	ldr	r3, [sp, #20]
 80112ba:	9001      	str	r0, [sp, #4]
 80112bc:	463a      	mov	r2, r7
 80112be:	4649      	mov	r1, r9
 80112c0:	9300      	str	r3, [sp, #0]
 80112c2:	a80f      	add	r0, sp, #60	@ 0x3c
 80112c4:	465b      	mov	r3, fp
 80112c6:	f005 fa18 	bl	80166fa <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80112ca:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80112ce:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80112d2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80112d4:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 80112d8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80112dc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80112e0:	bf0a      	itet	eq
 80112e2:	464a      	moveq	r2, r9
 80112e4:	461a      	movne	r2, r3
 80112e6:	4699      	moveq	r9, r3
 80112e8:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 80112ec:	1ad2      	subs	r2, r2, r3
 80112ee:	6833      	ldr	r3, [r6, #0]
 80112f0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 80112f4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80112f8:	af0f      	add	r7, sp, #60	@ 0x3c
 80112fa:	7859      	ldrb	r1, [r3, #1]
 80112fc:	9707      	str	r7, [sp, #28]
 80112fe:	2300      	movs	r3, #0
 8011300:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011304:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011308:	f88d 1020 	strb.w	r1, [sp, #32]
 801130c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8011310:	9509      	str	r5, [sp, #36]	@ 0x24
 8011312:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8011316:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 801131a:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 801131e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011322:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8011326:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801132a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801132e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011332:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011336:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801133a:	b350      	cbz	r0, 8011392 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801133c:	682b      	ldr	r3, [r5, #0]
 801133e:	4628      	mov	r0, r5
 8011340:	695b      	ldr	r3, [r3, #20]
 8011342:	4798      	blx	r3
 8011344:	4607      	mov	r7, r0
 8011346:	b320      	cbz	r0, 8011392 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011348:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801134a:	6803      	ldr	r3, [r0, #0]
 801134c:	4639      	mov	r1, r7
 801134e:	68db      	ldr	r3, [r3, #12]
 8011350:	4798      	blx	r3
 8011352:	4606      	mov	r6, r0
 8011354:	b1e8      	cbz	r0, 8011392 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011356:	7b43      	ldrb	r3, [r0, #13]
 8011358:	7a82      	ldrb	r2, [r0, #10]
 801135a:	005b      	lsls	r3, r3, #1
 801135c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011360:	4313      	orrs	r3, r2
 8011362:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011366:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 801136a:	2b06      	cmp	r3, #6
 801136c:	d111      	bne.n	8011392 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801136e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011370:	6803      	ldr	r3, [r0, #0]
 8011372:	4632      	mov	r2, r6
 8011374:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011376:	4639      	mov	r1, r7
 8011378:	4798      	blx	r3
 801137a:	7b73      	ldrb	r3, [r6, #13]
 801137c:	005b      	lsls	r3, r3, #1
 801137e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011382:	7ab3      	ldrb	r3, [r6, #10]
 8011384:	4313      	orrs	r3, r2
 8011386:	4418      	add	r0, r3
 8011388:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801138c:	4418      	add	r0, r3
 801138e:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8011392:	2600      	movs	r6, #0
 8011394:	4637      	mov	r7, r6
 8011396:	a806      	add	r0, sp, #24
 8011398:	f002 face 	bl	8013938 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801139c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 80113a0:	9b03      	ldr	r3, [sp, #12]
 80113a2:	4286      	cmp	r6, r0
 80113a4:	eba9 0903 	sub.w	r9, r9, r3
 80113a8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80113ac:	bfb8      	it	lt
 80113ae:	4606      	movlt	r6, r0
 80113b0:	3701      	adds	r7, #1
 80113b2:	b236      	sxth	r6, r6
 80113b4:	b2bf      	uxth	r7, r7
 80113b6:	fa0f f989 	sxth.w	r9, r9
 80113ba:	2b00      	cmp	r3, #0
 80113bc:	f43f af0d 	beq.w	80111da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80113c0:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 80113c4:	2b00      	cmp	r3, #0
 80113c6:	f47f af08 	bne.w	80111da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80113ca:	7a2b      	ldrb	r3, [r5, #8]
 80113cc:	444b      	add	r3, r9
 80113ce:	2b00      	cmp	r3, #0
 80113d0:	dce1      	bgt.n	8011396 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80113d2:	e702      	b.n	80111da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80113d4:	20013fbc 	.word	0x20013fbc
 80113d8:	20013fb8 	.word	0x20013fb8
 80113dc:	20013fc0 	.word	0x20013fc0
 80113e0:	20013fc4 	.word	0x20013fc4
 80113e4:	ebaa 0606 	sub.w	r6, sl, r6
 80113e8:	2002      	movs	r0, #2
 80113ea:	fb96 f6f0 	sdiv	r6, r6, r0
 80113ee:	e71d      	b.n	801122c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80113f0:	441e      	add	r6, r3
 80113f2:	ebaa 0606 	sub.w	r6, sl, r6
 80113f6:	e719      	b.n	801122c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80113f8:	8925      	ldrh	r5, [r4, #8]
 80113fa:	1aed      	subs	r5, r5, r3
 80113fc:	eba5 050a 	sub.w	r5, r5, sl
 8011400:	fa0f fb85 	sxth.w	fp, r5
 8011404:	8965      	ldrh	r5, [r4, #10]
 8011406:	eba5 0509 	sub.w	r5, r5, r9
 801140a:	b22d      	sxth	r5, r5
 801140c:	e72e      	b.n	801126c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801140e:	8965      	ldrh	r5, [r4, #10]
 8011410:	1aed      	subs	r5, r5, r3
 8011412:	eba5 050a 	sub.w	r5, r5, sl
 8011416:	4633      	mov	r3, r6
 8011418:	b22d      	sxth	r5, r5
 801141a:	463e      	mov	r6, r7
 801141c:	f04f 0b00 	mov.w	fp, #0
 8011420:	461f      	mov	r7, r3
 8011422:	e723      	b.n	801126c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011424:	2500      	movs	r5, #0
 8011426:	e721      	b.n	801126c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011428 <_ZN8touchgfx8TextAreaD0Ev>:
 8011428:	b510      	push	{r4, lr}
 801142a:	2148      	movs	r1, #72	@ 0x48
 801142c:	4604      	mov	r4, r0
 801142e:	f015 fcf1 	bl	8026e14 <_ZdlPvj>
 8011432:	4620      	mov	r0, r4
 8011434:	bd10      	pop	{r4, pc}
	...

08011438 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011438:	b513      	push	{r0, r1, r4, lr}
 801143a:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 801143e:	4604      	mov	r4, r0
 8011440:	b1fb      	cbz	r3, 8011482 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011442:	4b16      	ldr	r3, [pc, #88]	@ (801149c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011444:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011446:	881b      	ldrh	r3, [r3, #0]
 8011448:	428b      	cmp	r3, r1
 801144a:	d91a      	bls.n	8011482 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801144c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011450:	2b00      	cmp	r3, #0
 8011452:	dd16      	ble.n	8011482 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011454:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011458:	2b00      	cmp	r3, #0
 801145a:	dd12      	ble.n	8011482 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801145c:	4b10      	ldr	r3, [pc, #64]	@ (80114a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801145e:	6818      	ldr	r0, [r3, #0]
 8011460:	f7f5 f952 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011464:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8011468:	6822      	ldr	r2, [r4, #0]
 801146a:	2b00      	cmp	r3, #0
 801146c:	db06      	blt.n	801147c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801146e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011472:	2b00      	cmp	r3, #0
 8011474:	db02      	blt.n	801147c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011476:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011478:	4298      	cmp	r0, r3
 801147a:	d004      	beq.n	8011486 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801147c:	6953      	ldr	r3, [r2, #20]
 801147e:	4620      	mov	r0, r4
 8011480:	4798      	blx	r3
 8011482:	b002      	add	sp, #8
 8011484:	bd10      	pop	{r4, pc}
 8011486:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 801148a:	c903      	ldmia	r1, {r0, r1}
 801148c:	466b      	mov	r3, sp
 801148e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011492:	6912      	ldr	r2, [r2, #16]
 8011494:	4619      	mov	r1, r3
 8011496:	4620      	mov	r0, r4
 8011498:	4790      	blx	r2
 801149a:	e7f2      	b.n	8011482 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801149c:	20013fbc 	.word	0x20013fbc
 80114a0:	20013fc4 	.word	0x20013fc4

080114a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80114a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114a8:	4b44      	ldr	r3, [pc, #272]	@ (80115bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80114aa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80114ac:	881b      	ldrh	r3, [r3, #0]
 80114ae:	4293      	cmp	r3, r2
 80114b0:	b08e      	sub	sp, #56	@ 0x38
 80114b2:	4604      	mov	r4, r0
 80114b4:	d97e      	bls.n	80115b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80114b6:	6808      	ldr	r0, [r1, #0]
 80114b8:	4d41      	ldr	r5, [pc, #260]	@ (80115c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80114ba:	6849      	ldr	r1, [r1, #4]
 80114bc:	ab05      	add	r3, sp, #20
 80114be:	c303      	stmia	r3!, {r0, r1}
 80114c0:	4611      	mov	r1, r2
 80114c2:	6828      	ldr	r0, [r5, #0]
 80114c4:	f7f5 f920 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 80114c8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 80114cc:	2b00      	cmp	r3, #0
 80114ce:	db11      	blt.n	80114f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80114d0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 80114d4:	2b00      	cmp	r3, #0
 80114d6:	db0d      	blt.n	80114f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80114d8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80114da:	4298      	cmp	r0, r3
 80114dc:	d10a      	bne.n	80114f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80114de:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 80114e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80114e6:	ab09      	add	r3, sp, #36	@ 0x24
 80114e8:	e883 0003 	stmia.w	r3, {r0, r1}
 80114ec:	4619      	mov	r1, r3
 80114ee:	a805      	add	r0, sp, #20
 80114f0:	f7fc fc2c 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 80114f4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80114f8:	2b00      	cmp	r3, #0
 80114fa:	dd5b      	ble.n	80115b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80114fc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011500:	2b00      	cmp	r3, #0
 8011502:	dd57      	ble.n	80115b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011504:	4f2f      	ldr	r7, [pc, #188]	@ (80115c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011506:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011508:	683b      	ldr	r3, [r7, #0]
 801150a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801150e:	4b2e      	ldr	r3, [pc, #184]	@ (80115c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011510:	681b      	ldr	r3, [r3, #0]
 8011512:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011516:	2e00      	cmp	r6, #0
 8011518:	d04c      	beq.n	80115b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801151a:	6823      	ldr	r3, [r4, #0]
 801151c:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8011520:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011522:	4620      	mov	r0, r4
 8011524:	4798      	blx	r3
 8011526:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011528:	683b      	ldr	r3, [r7, #0]
 801152a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 801152e:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8011532:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8011536:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011538:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801153c:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8011540:	785b      	ldrb	r3, [r3, #1]
 8011542:	9609      	str	r6, [sp, #36]	@ 0x24
 8011544:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011548:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801154c:	4b1f      	ldr	r3, [pc, #124]	@ (80115cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801154e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8011552:	681b      	ldr	r3, [r3, #0]
 8011554:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8011558:	910b      	str	r1, [sp, #44]	@ 0x2c
 801155a:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 801155e:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8011562:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8011566:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 801156a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801156e:	b10a      	cbz	r2, 8011574 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011570:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8011572:	b906      	cbnz	r6, 8011576 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011574:	689e      	ldr	r6, [r3, #8]
 8011576:	af07      	add	r7, sp, #28
 8011578:	4621      	mov	r1, r4
 801157a:	4638      	mov	r0, r7
 801157c:	f004 f8ac 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011580:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011582:	6828      	ldr	r0, [r5, #0]
 8011584:	f7f5 f8c0 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011588:	6823      	ldr	r3, [r4, #0]
 801158a:	4605      	mov	r5, r0
 801158c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801158e:	4620      	mov	r0, r4
 8011590:	4798      	blx	r3
 8011592:	6823      	ldr	r3, [r4, #0]
 8011594:	4680      	mov	r8, r0
 8011596:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801159a:	4620      	mov	r0, r4
 801159c:	4798      	blx	r3
 801159e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80115a2:	ab09      	add	r3, sp, #36	@ 0x24
 80115a4:	9300      	str	r3, [sp, #0]
 80115a6:	9501      	str	r5, [sp, #4]
 80115a8:	ab05      	add	r3, sp, #20
 80115aa:	e897 0006 	ldmia.w	r7, {r1, r2}
 80115ae:	4630      	mov	r0, r6
 80115b0:	f7f5 f85c 	bl	800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80115b4:	b00e      	add	sp, #56	@ 0x38
 80115b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115ba:	bf00      	nop
 80115bc:	20013fbc 	.word	0x20013fbc
 80115c0:	20013fc4 	.word	0x20013fc4
 80115c4:	20013fb8 	.word	0x20013fb8
 80115c8:	20013fc0 	.word	0x20013fc0
 80115cc:	20013f60 	.word	0x20013f60

080115d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80115d0:	b570      	push	{r4, r5, r6, lr}
 80115d2:	6803      	ldr	r3, [r0, #0]
 80115d4:	4604      	mov	r4, r0
 80115d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80115d8:	4615      	mov	r5, r2
 80115da:	4798      	blx	r3
 80115dc:	6823      	ldr	r3, [r4, #0]
 80115de:	4629      	mov	r1, r5
 80115e0:	4620      	mov	r0, r4
 80115e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80115e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80115e8:	4718      	bx	r3
	...

080115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80115ec:	b538      	push	{r3, r4, r5, lr}
 80115ee:	4b0e      	ldr	r3, [pc, #56]	@ (8011628 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80115f0:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80115f2:	881b      	ldrh	r3, [r3, #0]
 80115f4:	429a      	cmp	r2, r3
 80115f6:	4604      	mov	r4, r0
 80115f8:	d214      	bcs.n	8011624 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80115fa:	6803      	ldr	r3, [r0, #0]
 80115fc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80115fe:	4798      	blx	r3
 8011600:	6823      	ldr	r3, [r4, #0]
 8011602:	4605      	mov	r5, r0
 8011604:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8011606:	4620      	mov	r0, r4
 8011608:	4798      	blx	r3
 801160a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801160e:	b22d      	sxth	r5, r5
 8011610:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011614:	4601      	mov	r1, r0
 8011616:	bf06      	itte	eq
 8011618:	4602      	moveq	r2, r0
 801161a:	4629      	moveq	r1, r5
 801161c:	462a      	movne	r2, r5
 801161e:	4620      	mov	r0, r4
 8011620:	f7ff ffd6 	bl	80115d0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011624:	bd38      	pop	{r3, r4, r5, pc}
 8011626:	bf00      	nop
 8011628:	20013fbc 	.word	0x20013fbc

0801162c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 801162c:	b530      	push	{r4, r5, lr}
 801162e:	888b      	ldrh	r3, [r1, #4]
 8011630:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8011632:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011636:	b085      	sub	sp, #20
 8011638:	4604      	mov	r4, r0
 801163a:	b923      	cbnz	r3, 8011646 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801163c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011640:	b90b      	cbnz	r3, 8011646 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011642:	f7ff ffd3 	bl	80115ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011646:	6823      	ldr	r3, [r4, #0]
 8011648:	466d      	mov	r5, sp
 801164a:	4621      	mov	r1, r4
 801164c:	4628      	mov	r0, r5
 801164e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8011652:	4798      	blx	r3
 8011654:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011658:	343c      	adds	r4, #60	@ 0x3c
 801165a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801165e:	b005      	add	sp, #20
 8011660:	bd30      	pop	{r4, r5, pc}

08011662 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011662:	2300      	movs	r3, #0
 8011664:	8083      	strh	r3, [r0, #4]
 8011666:	80c3      	strh	r3, [r0, #6]
 8011668:	8003      	strh	r3, [r0, #0]
 801166a:	8043      	strh	r3, [r0, #2]
 801166c:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8011670:	2bff      	cmp	r3, #255	@ 0xff
 8011672:	bf01      	itttt	eq
 8011674:	890b      	ldrheq	r3, [r1, #8]
 8011676:	8083      	strheq	r3, [r0, #4]
 8011678:	894b      	ldrheq	r3, [r1, #10]
 801167a:	80c3      	strheq	r3, [r0, #6]
 801167c:	4770      	bx	lr
	...

08011680 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011680:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011682:	4604      	mov	r4, r0
 8011684:	6808      	ldr	r0, [r1, #0]
 8011686:	6849      	ldr	r1, [r1, #4]
 8011688:	466b      	mov	r3, sp
 801168a:	c303      	stmia	r3!, {r0, r1}
 801168c:	6823      	ldr	r3, [r4, #0]
 801168e:	4669      	mov	r1, sp
 8011690:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011692:	4620      	mov	r0, r4
 8011694:	4798      	blx	r3
 8011696:	4b08      	ldr	r3, [pc, #32]	@ (80116b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011698:	681b      	ldr	r3, [r3, #0]
 801169a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801169e:	b10a      	cbz	r2, 80116a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80116a0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80116a2:	b900      	cbnz	r0, 80116a6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80116a4:	6898      	ldr	r0, [r3, #8]
 80116a6:	6803      	ldr	r3, [r0, #0]
 80116a8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80116aa:	6a1d      	ldr	r5, [r3, #32]
 80116ac:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80116b0:	4669      	mov	r1, sp
 80116b2:	47a8      	blx	r5
 80116b4:	b003      	add	sp, #12
 80116b6:	bd30      	pop	{r4, r5, pc}
 80116b8:	20013f60 	.word	0x20013f60

080116bc <_ZN8touchgfx3BoxD1Ev>:
 80116bc:	4770      	bx	lr

080116be <_ZN8touchgfx3BoxD0Ev>:
 80116be:	b510      	push	{r4, lr}
 80116c0:	212c      	movs	r1, #44	@ 0x2c
 80116c2:	4604      	mov	r4, r0
 80116c4:	f015 fba6 	bl	8026e14 <_ZdlPvj>
 80116c8:	4620      	mov	r0, r4
 80116ca:	bd10      	pop	{r4, pc}

080116cc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80116cc:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 80116d0:	4770      	bx	lr

080116d2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80116d2:	b570      	push	{r4, r5, r6, lr}
 80116d4:	880b      	ldrh	r3, [r1, #0]
 80116d6:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80116d8:	4605      	mov	r5, r0
 80116da:	8813      	ldrh	r3, [r2, #0]
 80116dc:	f825 3f30 	strh.w	r3, [r5, #48]!
 80116e0:	4604      	mov	r4, r0
 80116e2:	4628      	mov	r0, r5
 80116e4:	f006 fb4e 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80116e8:	4606      	mov	r6, r0
 80116ea:	4628      	mov	r0, r5
 80116ec:	f006 fb7e 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 80116f0:	6823      	ldr	r3, [r4, #0]
 80116f2:	4605      	mov	r5, r0
 80116f4:	4631      	mov	r1, r6
 80116f6:	4620      	mov	r0, r4
 80116f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80116fa:	4798      	blx	r3
 80116fc:	6823      	ldr	r3, [r4, #0]
 80116fe:	4629      	mov	r1, r5
 8011700:	4620      	mov	r0, r4
 8011702:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011708:	4718      	bx	r3

0801170a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801170a:	b510      	push	{r4, lr}
 801170c:	4604      	mov	r4, r0
 801170e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8011710:	b150      	cbz	r0, 8011728 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011712:	6803      	ldr	r3, [r0, #0]
 8011714:	68db      	ldr	r3, [r3, #12]
 8011716:	4798      	blx	r3
 8011718:	b130      	cbz	r0, 8011728 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801171a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 801171c:	6803      	ldr	r3, [r0, #0]
 801171e:	4621      	mov	r1, r4
 8011720:	689b      	ldr	r3, [r3, #8]
 8011722:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011726:	4718      	bx	r3
 8011728:	bd10      	pop	{r4, pc}

0801172a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801172a:	b510      	push	{r4, lr}
 801172c:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8011730:	2bff      	cmp	r3, #255	@ 0xff
 8011732:	4604      	mov	r4, r0
 8011734:	d006      	beq.n	8011744 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011736:	2300      	movs	r3, #0
 8011738:	8003      	strh	r3, [r0, #0]
 801173a:	8043      	strh	r3, [r0, #2]
 801173c:	8083      	strh	r3, [r0, #4]
 801173e:	80c3      	strh	r3, [r0, #6]
 8011740:	4620      	mov	r0, r4
 8011742:	bd10      	pop	{r4, pc}
 8011744:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8011748:	b11b      	cbz	r3, 8011752 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801174a:	3130      	adds	r1, #48	@ 0x30
 801174c:	f006 fb82 	bl	8017e54 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011750:	e7f6      	b.n	8011740 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011752:	312e      	adds	r1, #46	@ 0x2e
 8011754:	e7fa      	b.n	801174c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011758 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801175c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011760:	b08a      	sub	sp, #40	@ 0x28
 8011762:	4604      	mov	r4, r0
 8011764:	4688      	mov	r8, r1
 8011766:	2b00      	cmp	r3, #0
 8011768:	d066      	beq.n	8011838 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801176a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801176c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011770:	a805      	add	r0, sp, #20
 8011772:	f006 fb07 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011776:	4607      	mov	r7, r0
 8011778:	a805      	add	r0, sp, #20
 801177a:	f006 fb37 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 801177e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011782:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011786:	4432      	add	r2, r6
 8011788:	b292      	uxth	r2, r2
 801178a:	2300      	movs	r3, #0
 801178c:	fa0f fc82 	sxth.w	ip, r2
 8011790:	459c      	cmp	ip, r3
 8011792:	9306      	str	r3, [sp, #24]
 8011794:	dd52      	ble.n	801183c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011796:	42b7      	cmp	r7, r6
 8011798:	dd50      	ble.n	801183c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801179a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801179e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80117a2:	442b      	add	r3, r5
 80117a4:	b29b      	uxth	r3, r3
 80117a6:	b219      	sxth	r1, r3
 80117a8:	2900      	cmp	r1, #0
 80117aa:	dd47      	ble.n	801183c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80117ac:	42a8      	cmp	r0, r5
 80117ae:	dd45      	ble.n	801183c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80117b0:	4567      	cmp	r7, ip
 80117b2:	bfb8      	it	lt
 80117b4:	b2ba      	uxthlt	r2, r7
 80117b6:	4288      	cmp	r0, r1
 80117b8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80117bc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80117c0:	bfb8      	it	lt
 80117c2:	b283      	uxthlt	r3, r0
 80117c4:	1b92      	subs	r2, r2, r6
 80117c6:	1b5b      	subs	r3, r3, r5
 80117c8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80117cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80117d0:	f8ad 6018 	strh.w	r6, [sp, #24]
 80117d4:	f8ad 501a 	strh.w	r5, [sp, #26]
 80117d8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80117dc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80117e0:	429a      	cmp	r2, r3
 80117e2:	d026      	beq.n	8011832 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80117e4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80117e8:	2b00      	cmp	r3, #0
 80117ea:	dd22      	ble.n	8011832 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80117ec:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80117f0:	2b00      	cmp	r3, #0
 80117f2:	dd1e      	ble.n	8011832 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80117f4:	2300      	movs	r3, #0
 80117f6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80117fa:	6823      	ldr	r3, [r4, #0]
 80117fc:	a908      	add	r1, sp, #32
 80117fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011800:	4620      	mov	r0, r4
 8011802:	4798      	blx	r3
 8011804:	4b0f      	ldr	r3, [pc, #60]	@ (8011844 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011806:	681b      	ldr	r3, [r3, #0]
 8011808:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801180c:	b10a      	cbz	r2, 8011812 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801180e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8011810:	b900      	cbnz	r0, 8011814 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011812:	6898      	ldr	r0, [r3, #8]
 8011814:	6801      	ldr	r1, [r0, #0]
 8011816:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801181a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801181e:	2501      	movs	r5, #1
 8011820:	9502      	str	r5, [sp, #8]
 8011822:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8011826:	9401      	str	r4, [sp, #4]
 8011828:	ac06      	add	r4, sp, #24
 801182a:	9400      	str	r4, [sp, #0]
 801182c:	688c      	ldr	r4, [r1, #8]
 801182e:	a905      	add	r1, sp, #20
 8011830:	47a0      	blx	r4
 8011832:	b00a      	add	sp, #40	@ 0x28
 8011834:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011838:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801183a:	e797      	b.n	801176c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801183c:	2300      	movs	r3, #0
 801183e:	9307      	str	r3, [sp, #28]
 8011840:	e7ca      	b.n	80117d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011842:	bf00      	nop
 8011844:	20013f60 	.word	0x20013f60

08011848 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011848:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 801184c:	b12a      	cbz	r2, 801185a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801184e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8011852:	b112      	cbz	r2, 801185a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011854:	6803      	ldr	r3, [r0, #0]
 8011856:	695b      	ldr	r3, [r3, #20]
 8011858:	4718      	bx	r3
 801185a:	4770      	bx	lr

0801185c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801185c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011860:	4b2f      	ldr	r3, [pc, #188]	@ (8011920 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011862:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011864:	881b      	ldrh	r3, [r3, #0]
 8011866:	4293      	cmp	r3, r2
 8011868:	b08d      	sub	sp, #52	@ 0x34
 801186a:	4604      	mov	r4, r0
 801186c:	460f      	mov	r7, r1
 801186e:	d954      	bls.n	801191a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011870:	4b2c      	ldr	r3, [pc, #176]	@ (8011924 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011872:	6819      	ldr	r1, [r3, #0]
 8011874:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011878:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801187c:	4a2a      	ldr	r2, [pc, #168]	@ (8011928 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801187e:	6812      	ldr	r2, [r2, #0]
 8011880:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011884:	2900      	cmp	r1, #0
 8011886:	d048      	beq.n	801191a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011888:	785a      	ldrb	r2, [r3, #1]
 801188a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 801188e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8011892:	4b26      	ldr	r3, [pc, #152]	@ (801192c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011894:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8011898:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 801189c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 80118a0:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 80118a2:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 80118a6:	9107      	str	r1, [sp, #28]
 80118a8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80118ac:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80118b0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 80118b4:	681a      	ldr	r2, [r3, #0]
 80118b6:	f88d 8020 	strb.w	r8, [sp, #32]
 80118ba:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 80118be:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 80118c2:	9609      	str	r6, [sp, #36]	@ 0x24
 80118c4:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 80118c8:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 80118cc:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 80118d0:	b10b      	cbz	r3, 80118d6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80118d2:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 80118d4:	b905      	cbnz	r5, 80118d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80118d6:	6895      	ldr	r5, [r2, #8]
 80118d8:	ae05      	add	r6, sp, #20
 80118da:	4621      	mov	r1, r4
 80118dc:	4630      	mov	r0, r6
 80118de:	f003 fefb 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118e2:	4b13      	ldr	r3, [pc, #76]	@ (8011930 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80118e4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80118e6:	6818      	ldr	r0, [r3, #0]
 80118e8:	f7f4 ff0e 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 80118ec:	6823      	ldr	r3, [r4, #0]
 80118ee:	4680      	mov	r8, r0
 80118f0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80118f2:	4620      	mov	r0, r4
 80118f4:	4798      	blx	r3
 80118f6:	6823      	ldr	r3, [r4, #0]
 80118f8:	4681      	mov	r9, r0
 80118fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80118fe:	4620      	mov	r0, r4
 8011900:	4798      	blx	r3
 8011902:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011906:	ab07      	add	r3, sp, #28
 8011908:	9300      	str	r3, [sp, #0]
 801190a:	f8cd 8004 	str.w	r8, [sp, #4]
 801190e:	463b      	mov	r3, r7
 8011910:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011914:	4628      	mov	r0, r5
 8011916:	f7f4 fea9 	bl	800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801191a:	b00d      	add	sp, #52	@ 0x34
 801191c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011920:	20013fbc 	.word	0x20013fbc
 8011924:	20013fb8 	.word	0x20013fb8
 8011928:	20013fc0 	.word	0x20013fc0
 801192c:	20013f60 	.word	0x20013f60
 8011930:	20013fc4 	.word	0x20013fc4

08011934 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8011934:	4770      	bx	lr

08011936 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8011936:	b510      	push	{r4, lr}
 8011938:	2134      	movs	r1, #52	@ 0x34
 801193a:	4604      	mov	r4, r0
 801193c:	f015 fa6a 	bl	8026e14 <_ZdlPvj>
 8011940:	4620      	mov	r0, r4
 8011942:	bd10      	pop	{r4, pc}

08011944 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8011944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011948:	4604      	mov	r4, r0
 801194a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801194c:	8962      	ldrh	r2, [r4, #10]
 801194e:	b218      	sxth	r0, r3
 8011950:	460e      	mov	r6, r1
 8011952:	005b      	lsls	r3, r3, #1
 8011954:	8921      	ldrh	r1, [r4, #8]
 8011956:	b29b      	uxth	r3, r3
 8011958:	1ac9      	subs	r1, r1, r3
 801195a:	b08e      	sub	sp, #56	@ 0x38
 801195c:	b209      	sxth	r1, r1
 801195e:	1ad3      	subs	r3, r2, r3
 8011960:	b21b      	sxth	r3, r3
 8011962:	2900      	cmp	r1, #0
 8011964:	f8ad 0000 	strh.w	r0, [sp]
 8011968:	f8ad 0002 	strh.w	r0, [sp, #2]
 801196c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011970:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011974:	dd5e      	ble.n	8011a34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8011976:	2b00      	cmp	r3, #0
 8011978:	dd5c      	ble.n	8011a34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801197a:	6830      	ldr	r0, [r6, #0]
 801197c:	6871      	ldr	r1, [r6, #4]
 801197e:	ab02      	add	r3, sp, #8
 8011980:	c303      	stmia	r3!, {r0, r1}
 8011982:	4669      	mov	r1, sp
 8011984:	a802      	add	r0, sp, #8
 8011986:	f7fc f9e1 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 801198a:	4620      	mov	r0, r4
 801198c:	a902      	add	r1, sp, #8
 801198e:	f7ff fe77 	bl	8011680 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8011992:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8011994:	2800      	cmp	r0, #0
 8011996:	d05f      	beq.n	8011a58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8011998:	8963      	ldrh	r3, [r4, #10]
 801199a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801199e:	f8ad 101c 	strh.w	r1, [sp, #28]
 80119a2:	1a1f      	subs	r7, r3, r0
 80119a4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80119a8:	b202      	sxth	r2, r0
 80119aa:	2500      	movs	r5, #0
 80119ac:	b21b      	sxth	r3, r3
 80119ae:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 80119b2:	1a09      	subs	r1, r1, r0
 80119b4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80119b8:	9506      	str	r5, [sp, #24]
 80119ba:	f8ad 201e 	strh.w	r2, [sp, #30]
 80119be:	f8ad 5020 	strh.w	r5, [sp, #32]
 80119c2:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 80119c6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80119ca:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80119ce:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80119d2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80119d6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80119da:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80119de:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80119e2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80119e6:	af04      	add	r7, sp, #16
 80119e8:	ab06      	add	r3, sp, #24
 80119ea:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80119ee:	e893 0003 	ldmia.w	r3, {r0, r1}
 80119f2:	e887 0003 	stmia.w	r7, {r0, r1}
 80119f6:	4631      	mov	r1, r6
 80119f8:	4638      	mov	r0, r7
 80119fa:	f7fc f9a7 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 80119fe:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011a02:	2b00      	cmp	r3, #0
 8011a04:	dd12      	ble.n	8011a2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8011a06:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011a0a:	2b00      	cmp	r3, #0
 8011a0c:	dd0e      	ble.n	8011a2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8011a0e:	6823      	ldr	r3, [r4, #0]
 8011a10:	4639      	mov	r1, r7
 8011a12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011a14:	4620      	mov	r0, r4
 8011a16:	4798      	blx	r3
 8011a18:	f7f1 fdc6 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8011a1c:	6803      	ldr	r3, [r0, #0]
 8011a1e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011a20:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8011a24:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8011a28:	4639      	mov	r1, r7
 8011a2a:	47c0      	blx	r8
 8011a2c:	3501      	adds	r5, #1
 8011a2e:	2d04      	cmp	r5, #4
 8011a30:	d1da      	bne.n	80119e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8011a32:	e011      	b.n	8011a58 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8011a34:	6830      	ldr	r0, [r6, #0]
 8011a36:	6871      	ldr	r1, [r6, #4]
 8011a38:	ab06      	add	r3, sp, #24
 8011a3a:	c303      	stmia	r3!, {r0, r1}
 8011a3c:	6823      	ldr	r3, [r4, #0]
 8011a3e:	a906      	add	r1, sp, #24
 8011a40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011a42:	4620      	mov	r0, r4
 8011a44:	4798      	blx	r3
 8011a46:	f7f1 fdaf 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8011a4a:	6803      	ldr	r3, [r0, #0]
 8011a4c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8011a4e:	6a1d      	ldr	r5, [r3, #32]
 8011a50:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8011a54:	a906      	add	r1, sp, #24
 8011a56:	47a8      	blx	r5
 8011a58:	b00e      	add	sp, #56	@ 0x38
 8011a5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a5e <_ZN8touchgfx5ImageD1Ev>:
 8011a5e:	4770      	bx	lr

08011a60 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8011a60:	b570      	push	{r4, r5, r6, lr}
 8011a62:	880b      	ldrh	r3, [r1, #0]
 8011a64:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011a66:	4604      	mov	r4, r0
 8011a68:	4608      	mov	r0, r1
 8011a6a:	460d      	mov	r5, r1
 8011a6c:	f006 f98a 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011a70:	4606      	mov	r6, r0
 8011a72:	4628      	mov	r0, r5
 8011a74:	f006 f9ba 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011a78:	6823      	ldr	r3, [r4, #0]
 8011a7a:	4605      	mov	r5, r0
 8011a7c:	4631      	mov	r1, r6
 8011a7e:	4620      	mov	r0, r4
 8011a80:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011a82:	4798      	blx	r3
 8011a84:	6823      	ldr	r3, [r4, #0]
 8011a86:	4629      	mov	r1, r5
 8011a88:	4620      	mov	r0, r4
 8011a8a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011a8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a90:	4718      	bx	r3

08011a92 <_ZN8touchgfx5ImageD0Ev>:
 8011a92:	b510      	push	{r4, lr}
 8011a94:	212c      	movs	r1, #44	@ 0x2c
 8011a96:	4604      	mov	r4, r0
 8011a98:	f015 f9bc 	bl	8026e14 <_ZdlPvj>
 8011a9c:	4620      	mov	r0, r4
 8011a9e:	bd10      	pop	{r4, pc}

08011aa0 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8011aa0:	b510      	push	{r4, lr}
 8011aa2:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8011aa6:	2bff      	cmp	r3, #255	@ 0xff
 8011aa8:	4604      	mov	r4, r0
 8011aaa:	d006      	beq.n	8011aba <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8011aac:	2300      	movs	r3, #0
 8011aae:	8003      	strh	r3, [r0, #0]
 8011ab0:	8043      	strh	r3, [r0, #2]
 8011ab2:	8083      	strh	r3, [r0, #4]
 8011ab4:	80c3      	strh	r3, [r0, #6]
 8011ab6:	4620      	mov	r0, r4
 8011ab8:	bd10      	pop	{r4, pc}
 8011aba:	3126      	adds	r1, #38	@ 0x26
 8011abc:	f006 f9ca 	bl	8017e54 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011ac0:	e7f9      	b.n	8011ab6 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08011ac2 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011ac2:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 8011ac6:	b12a      	cbz	r2, 8011ad4 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011ac8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8011acc:	b112      	cbz	r2, 8011ad4 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011ace:	6803      	ldr	r3, [r0, #0]
 8011ad0:	695b      	ldr	r3, [r3, #20]
 8011ad2:	4718      	bx	r3
 8011ad4:	4770      	bx	lr
	...

08011ad8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8011ad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011adc:	4604      	mov	r4, r0
 8011ade:	b088      	sub	sp, #32
 8011ae0:	f854 3b26 	ldr.w	r3, [r4], #38
 8011ae4:	2500      	movs	r5, #0
 8011ae6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011ae8:	460f      	mov	r7, r1
 8011aea:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8011aee:	a904      	add	r1, sp, #16
 8011af0:	4606      	mov	r6, r0
 8011af2:	4798      	blx	r3
 8011af4:	4620      	mov	r0, r4
 8011af6:	f006 f945 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011afa:	4680      	mov	r8, r0
 8011afc:	4620      	mov	r0, r4
 8011afe:	f006 f975 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011b02:	9506      	str	r5, [sp, #24]
 8011b04:	ad06      	add	r5, sp, #24
 8011b06:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011b0a:	4639      	mov	r1, r7
 8011b0c:	4628      	mov	r0, r5
 8011b0e:	f8ad 801c 	strh.w	r8, [sp, #28]
 8011b12:	f7fc f91b 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8011b16:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011b1a:	2b00      	cmp	r3, #0
 8011b1c:	dd19      	ble.n	8011b52 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011b1e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011b22:	2b00      	cmp	r3, #0
 8011b24:	dd15      	ble.n	8011b52 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8011b26:	4b0c      	ldr	r3, [pc, #48]	@ (8011b58 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8011b28:	681b      	ldr	r3, [r3, #0]
 8011b2a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8011b2e:	b10a      	cbz	r2, 8011b34 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8011b30:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8011b32:	b900      	cbnz	r0, 8011b36 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8011b34:	6898      	ldr	r0, [r3, #8]
 8011b36:	6801      	ldr	r1, [r0, #0]
 8011b38:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011b3c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011b40:	2701      	movs	r7, #1
 8011b42:	9702      	str	r7, [sp, #8]
 8011b44:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8011b48:	e9cd 5600 	strd	r5, r6, [sp]
 8011b4c:	688d      	ldr	r5, [r1, #8]
 8011b4e:	4621      	mov	r1, r4
 8011b50:	47a8      	blx	r5
 8011b52:	b008      	add	sp, #32
 8011b54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b58:	20013f60 	.word	0x20013f60

08011b5c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8011b5c:	4770      	bx	lr

08011b5e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8011b5e:	b510      	push	{r4, lr}
 8011b60:	2148      	movs	r1, #72	@ 0x48
 8011b62:	4604      	mov	r4, r0
 8011b64:	f015 f956 	bl	8026e14 <_ZdlPvj>
 8011b68:	4620      	mov	r0, r4
 8011b6a:	bd10      	pop	{r4, pc}

08011b6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8011b6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b70:	b08d      	sub	sp, #52	@ 0x34
 8011b72:	4604      	mov	r4, r0
 8011b74:	460f      	mov	r7, r1
 8011b76:	f7ff fdef 	bl	8011758 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011b7a:	4a55      	ldr	r2, [pc, #340]	@ (8011cd0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8011b7c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011b7e:	8812      	ldrh	r2, [r2, #0]
 8011b80:	429a      	cmp	r2, r3
 8011b82:	f240 8082 	bls.w	8011c8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011b86:	4d53      	ldr	r5, [pc, #332]	@ (8011cd4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8011b88:	682a      	ldr	r2, [r5, #0]
 8011b8a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011b8e:	4b52      	ldr	r3, [pc, #328]	@ (8011cd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8011b90:	681b      	ldr	r3, [r3, #0]
 8011b92:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011b96:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 8011b9a:	2200      	movs	r2, #0
 8011b9c:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8011ba0:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 8011ba4:	2a03      	cmp	r2, #3
 8011ba6:	d811      	bhi.n	8011bcc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011ba8:	e8df f002 	tbb	[pc, r2]
 8011bac:	89727902 	.word	0x89727902
 8011bb0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011bb4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011bb8:	1ad2      	subs	r2, r2, r3
 8011bba:	2002      	movs	r0, #2
 8011bbc:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011bc0:	fb92 f2f0 	sdiv	r2, r2, r0
 8011bc4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011bc8:	f8ad 200e 	strh.w	r2, [sp, #14]
 8011bcc:	f10d 080c 	add.w	r8, sp, #12
 8011bd0:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011bd4:	f10d 0914 	add.w	r9, sp, #20
 8011bd8:	e889 0003 	stmia.w	r9, {r0, r1}
 8011bdc:	4639      	mov	r1, r7
 8011bde:	4648      	mov	r0, r9
 8011be0:	f7fc f8b4 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8011be4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011be8:	2b00      	cmp	r3, #0
 8011bea:	dd4e      	ble.n	8011c8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011bec:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011bf0:	2b00      	cmp	r3, #0
 8011bf2:	dd4a      	ble.n	8011c8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8011bf4:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8011bf8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011bfc:	1a9b      	subs	r3, r3, r2
 8011bfe:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011c02:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8011c06:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011c0a:	1a9b      	subs	r3, r3, r2
 8011c0c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011c10:	6823      	ldr	r3, [r4, #0]
 8011c12:	4641      	mov	r1, r8
 8011c14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011c16:	4620      	mov	r0, r4
 8011c18:	4798      	blx	r3
 8011c1a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8011c1e:	2b00      	cmp	r3, #0
 8011c20:	d053      	beq.n	8011cca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8011c22:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8011c24:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 8011c26:	682b      	ldr	r3, [r5, #0]
 8011c28:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 8011c2c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 8011c30:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011c34:	785b      	ldrb	r3, [r3, #1]
 8011c36:	9209      	str	r2, [sp, #36]	@ 0x24
 8011c38:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8011c3c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c40:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8011c44:	2300      	movs	r3, #0
 8011c46:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8011c4a:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 8011c4e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8011c52:	4b22      	ldr	r3, [pc, #136]	@ (8011cdc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8011c54:	9607      	str	r6, [sp, #28]
 8011c56:	681b      	ldr	r3, [r3, #0]
 8011c58:	f88d 5020 	strb.w	r5, [sp, #32]
 8011c5c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8011c60:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011c64:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011c68:	b10a      	cbz	r2, 8011c6e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8011c6a:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 8011c6c:	b904      	cbnz	r4, 8011c70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8011c6e:	689c      	ldr	r4, [r3, #8]
 8011c70:	4b1b      	ldr	r3, [pc, #108]	@ (8011ce0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8011c72:	6818      	ldr	r0, [r3, #0]
 8011c74:	f7f4 fd48 	bl	8006708 <_ZNK8touchgfx5Texts7getTextEt>
 8011c78:	ab07      	add	r3, sp, #28
 8011c7a:	9001      	str	r0, [sp, #4]
 8011c7c:	9300      	str	r3, [sp, #0]
 8011c7e:	e898 0006 	ldmia.w	r8, {r1, r2}
 8011c82:	464b      	mov	r3, r9
 8011c84:	4620      	mov	r0, r4
 8011c86:	f7f4 fcf1 	bl	800666c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011c8a:	b00d      	add	sp, #52	@ 0x34
 8011c8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c90:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011c94:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011c98:	1ad2      	subs	r2, r2, r3
 8011c9a:	3201      	adds	r2, #1
 8011c9c:	e78d      	b.n	8011bba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8011c9e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011ca2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011ca6:	1ad2      	subs	r2, r2, r3
 8011ca8:	3201      	adds	r2, #1
 8011caa:	2002      	movs	r0, #2
 8011cac:	f8ad 3010 	strh.w	r3, [sp, #16]
 8011cb0:	fb92 f2f0 	sdiv	r2, r2, r0
 8011cb4:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011cb8:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011cbc:	e786      	b.n	8011bcc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8011cbe:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011cc2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8011cc6:	1ad2      	subs	r2, r2, r3
 8011cc8:	e7ef      	b.n	8011caa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8011cca:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8011ccc:	e7aa      	b.n	8011c24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8011cce:	bf00      	nop
 8011cd0:	20013fbc 	.word	0x20013fbc
 8011cd4:	20013fb8 	.word	0x20013fb8
 8011cd8:	20013fc0 	.word	0x20013fc0
 8011cdc:	20013f60 	.word	0x20013f60
 8011ce0:	20013fc4 	.word	0x20013fc4

08011ce4 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8011ce4:	b510      	push	{r4, lr}
 8011ce6:	2101      	movs	r1, #1
 8011ce8:	4c13      	ldr	r4, [pc, #76]	@ (8011d38 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8011cea:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8011cee:	2200      	movs	r2, #0
 8011cf0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8011cf4:	6004      	str	r4, [r0, #0]
 8011cf6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8011cfa:	4c10      	ldr	r4, [pc, #64]	@ (8011d3c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8011cfc:	8082      	strh	r2, [r0, #4]
 8011cfe:	80c2      	strh	r2, [r0, #6]
 8011d00:	8102      	strh	r2, [r0, #8]
 8011d02:	8142      	strh	r2, [r0, #10]
 8011d04:	8182      	strh	r2, [r0, #12]
 8011d06:	81c2      	strh	r2, [r0, #14]
 8011d08:	8202      	strh	r2, [r0, #16]
 8011d0a:	8242      	strh	r2, [r0, #18]
 8011d0c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011d10:	61c2      	str	r2, [r0, #28]
 8011d12:	8402      	strh	r2, [r0, #32]
 8011d14:	8442      	strh	r2, [r0, #34]	@ 0x22
 8011d16:	6282      	str	r2, [r0, #40]	@ 0x28
 8011d18:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8011d1c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8011d1e:	8601      	strh	r1, [r0, #48]	@ 0x30
 8011d20:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8011d24:	6344      	str	r4, [r0, #52]	@ 0x34
 8011d26:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011d28:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8011d2c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8011d30:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8011d34:	bd10      	pop	{r4, pc}
 8011d36:	bf00      	nop
 8011d38:	0802b218 	.word	0x0802b218
 8011d3c:	0802a408 	.word	0x0802a408

08011d40 <_ZN8touchgfx7OutlineD1Ev>:
 8011d40:	4770      	bx	lr

08011d42 <_ZN8touchgfx7OutlineD0Ev>:
 8011d42:	b510      	push	{r4, lr}
 8011d44:	2130      	movs	r1, #48	@ 0x30
 8011d46:	4604      	mov	r4, r0
 8011d48:	f015 f864 	bl	8026e14 <_ZdlPvj>
 8011d4c:	4620      	mov	r0, r4
 8011d4e:	bd10      	pop	{r4, pc}

08011d50 <_ZN8touchgfx7Outline5resetEv>:
 8011d50:	b510      	push	{r4, lr}
 8011d52:	4604      	mov	r4, r0
 8011d54:	f000 fe96 	bl	8012a84 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8011d58:	60e0      	str	r0, [r4, #12]
 8011d5a:	f000 fe99 	bl	8012a90 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8011d5e:	68e3      	ldr	r3, [r4, #12]
 8011d60:	6123      	str	r3, [r4, #16]
 8011d62:	08c0      	lsrs	r0, r0, #3
 8011d64:	2200      	movs	r2, #0
 8011d66:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 8011d6a:	3801      	subs	r0, #1
 8011d6c:	6060      	str	r0, [r4, #4]
 8011d6e:	60a2      	str	r2, [r4, #8]
 8011d70:	8019      	strh	r1, [r3, #0]
 8011d72:	8059      	strh	r1, [r3, #2]
 8011d74:	809a      	strh	r2, [r3, #4]
 8011d76:	80da      	strh	r2, [r3, #6]
 8011d78:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8011d7a:	f023 0301 	bic.w	r3, r3, #1
 8011d7e:	f043 0302 	orr.w	r3, r3, #2
 8011d82:	6263      	str	r3, [r4, #36]	@ 0x24
 8011d84:	bd10      	pop	{r4, pc}
	...

08011d88 <_ZN8touchgfx7OutlineC1Ev>:
 8011d88:	b510      	push	{r4, lr}
 8011d8a:	4b0a      	ldr	r3, [pc, #40]	@ (8011db4 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8011d8c:	6003      	str	r3, [r0, #0]
 8011d8e:	2300      	movs	r3, #0
 8011d90:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8011d94:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8011d98:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8011d9c:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8011da0:	6243      	str	r3, [r0, #36]	@ 0x24
 8011da2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8011da6:	4604      	mov	r4, r0
 8011da8:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 8011dac:	f7ff ffd0 	bl	8011d50 <_ZN8touchgfx7Outline5resetEv>
 8011db0:	4620      	mov	r0, r4
 8011db2:	bd10      	pop	{r4, pc}
 8011db4:	0802b28c 	.word	0x0802b28c

08011db8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8011db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dbc:	b093      	sub	sp, #76	@ 0x4c
 8011dbe:	1156      	asrs	r6, r2, #5
 8011dc0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8011dc2:	9305      	str	r3, [sp, #20]
 8011dc4:	f004 051f 	and.w	r5, r4, #31
 8011dc8:	1153      	asrs	r3, r2, #5
 8011dca:	9504      	str	r5, [sp, #16]
 8011dcc:	1165      	asrs	r5, r4, #5
 8011dce:	9303      	str	r3, [sp, #12]
 8011dd0:	42ae      	cmp	r6, r5
 8011dd2:	ea4f 1364 	mov.w	r3, r4, asr #5
 8011dd6:	9306      	str	r3, [sp, #24]
 8011dd8:	f002 031f 	and.w	r3, r2, #31
 8011ddc:	f040 80f8 	bne.w	8011fd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8011de0:	9c04      	ldr	r4, [sp, #16]
 8011de2:	9a05      	ldr	r2, [sp, #20]
 8011de4:	42a3      	cmp	r3, r4
 8011de6:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8011dea:	6902      	ldr	r2, [r0, #16]
 8011dec:	d125      	bne.n	8011e3a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8011dee:	f9b2 3000 	ldrsh.w	r3, [r2]
 8011df2:	459e      	cmp	lr, r3
 8011df4:	d103      	bne.n	8011dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8011df6:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011dfa:	429e      	cmp	r6, r3
 8011dfc:	d035      	beq.n	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011dfe:	88d1      	ldrh	r1, [r2, #6]
 8011e00:	8893      	ldrh	r3, [r2, #4]
 8011e02:	430b      	orrs	r3, r1
 8011e04:	d010      	beq.n	8011e28 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011e06:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8011e0a:	2b00      	cmp	r3, #0
 8011e0c:	db0c      	blt.n	8011e28 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011e0e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8011e10:	428b      	cmp	r3, r1
 8011e12:	da09      	bge.n	8011e28 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8011e14:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8011e18:	428b      	cmp	r3, r1
 8011e1a:	bf38      	it	cc
 8011e1c:	3208      	addcc	r2, #8
 8011e1e:	f103 0301 	add.w	r3, r3, #1
 8011e22:	bf38      	it	cc
 8011e24:	6102      	strcc	r2, [r0, #16]
 8011e26:	6083      	str	r3, [r0, #8]
 8011e28:	6903      	ldr	r3, [r0, #16]
 8011e2a:	9a03      	ldr	r2, [sp, #12]
 8011e2c:	f8a3 e000 	strh.w	lr, [r3]
 8011e30:	805a      	strh	r2, [r3, #2]
 8011e32:	2200      	movs	r2, #0
 8011e34:	809a      	strh	r2, [r3, #4]
 8011e36:	80da      	strh	r2, [r3, #6]
 8011e38:	e017      	b.n	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011e3a:	9c05      	ldr	r4, [sp, #20]
 8011e3c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8011e40:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8011e44:	f004 041f 	and.w	r4, r4, #31
 8011e48:	114e      	asrs	r6, r1, #5
 8011e4a:	9402      	str	r4, [sp, #8]
 8011e4c:	9c04      	ldr	r4, [sp, #16]
 8011e4e:	4576      	cmp	r6, lr
 8011e50:	f001 0c1f 	and.w	ip, r1, #31
 8011e54:	eba4 0403 	sub.w	r4, r4, r3
 8011e58:	d10a      	bne.n	8011e70 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8011e5a:	9b02      	ldr	r3, [sp, #8]
 8011e5c:	449c      	add	ip, r3
 8011e5e:	44a0      	add	r8, r4
 8011e60:	fb04 a40c 	mla	r4, r4, ip, sl
 8011e64:	f8a2 8004 	strh.w	r8, [r2, #4]
 8011e68:	80d4      	strh	r4, [r2, #6]
 8011e6a:	b013      	add	sp, #76	@ 0x4c
 8011e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e70:	9d05      	ldr	r5, [sp, #20]
 8011e72:	1a69      	subs	r1, r5, r1
 8011e74:	bf5b      	ittet	pl
 8011e76:	f1cc 0520 	rsbpl	r5, ip, #32
 8011e7a:	436c      	mulpl	r4, r5
 8011e7c:	2500      	movmi	r5, #0
 8011e7e:	2520      	movpl	r5, #32
 8011e80:	bf44      	itt	mi
 8011e82:	fb04 f40c 	mulmi.w	r4, r4, ip
 8011e86:	4249      	negmi	r1, r1
 8011e88:	9501      	str	r5, [sp, #4]
 8011e8a:	9f01      	ldr	r7, [sp, #4]
 8011e8c:	fb94 f5f1 	sdiv	r5, r4, r1
 8011e90:	fb01 4415 	mls	r4, r1, r5, r4
 8011e94:	bf54      	ite	pl
 8011e96:	f04f 0901 	movpl.w	r9, #1
 8011e9a:	f04f 39ff 	movmi.w	r9, #4294967295
 8011e9e:	2c00      	cmp	r4, #0
 8011ea0:	bfb8      	it	lt
 8011ea2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8011ea6:	44bc      	add	ip, r7
 8011ea8:	44a8      	add	r8, r5
 8011eaa:	fb05 ac0c 	mla	ip, r5, ip, sl
 8011eae:	f8a2 8004 	strh.w	r8, [r2, #4]
 8011eb2:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011eb6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011eba:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8011ebe:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8011ec2:	bfb8      	it	lt
 8011ec4:	1864      	addlt	r4, r4, r1
 8011ec6:	ea58 0202 	orrs.w	r2, r8, r2
 8011eca:	444e      	add	r6, r9
 8011ecc:	d011      	beq.n	8011ef2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011ece:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8011ed2:	f1b8 0f00 	cmp.w	r8, #0
 8011ed6:	db0c      	blt.n	8011ef2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011ed8:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8011eda:	4590      	cmp	r8, r2
 8011edc:	da09      	bge.n	8011ef2 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8011ede:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8011ee2:	4590      	cmp	r8, r2
 8011ee4:	bf3c      	itt	cc
 8011ee6:	f10c 0208 	addcc.w	r2, ip, #8
 8011eea:	6102      	strcc	r2, [r0, #16]
 8011eec:	f108 0201 	add.w	r2, r8, #1
 8011ef0:	6082      	str	r2, [r0, #8]
 8011ef2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011ef6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011efa:	f8ac 6000 	strh.w	r6, [ip]
 8011efe:	2700      	movs	r7, #0
 8011f00:	45b6      	cmp	lr, r6
 8011f02:	f8ac 2002 	strh.w	r2, [ip, #2]
 8011f06:	f8ac 7004 	strh.w	r7, [ip, #4]
 8011f0a:	f8ac 7006 	strh.w	r7, [ip, #6]
 8011f0e:	442b      	add	r3, r5
 8011f10:	d04d      	beq.n	8011fae <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8011f12:	9f04      	ldr	r7, [sp, #16]
 8011f14:	1aff      	subs	r7, r7, r3
 8011f16:	443d      	add	r5, r7
 8011f18:	016d      	lsls	r5, r5, #5
 8011f1a:	fb95 f8f1 	sdiv	r8, r5, r1
 8011f1e:	fb01 5518 	mls	r5, r1, r8, r5
 8011f22:	2d00      	cmp	r5, #0
 8011f24:	bfb8      	it	lt
 8011f26:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8011f2a:	f108 0701 	add.w	r7, r8, #1
 8011f2e:	bfb8      	it	lt
 8011f30:	186d      	addlt	r5, r5, r1
 8011f32:	1a64      	subs	r4, r4, r1
 8011f34:	9703      	str	r7, [sp, #12]
 8011f36:	f04f 0a00 	mov.w	sl, #0
 8011f3a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011f3e:	1964      	adds	r4, r4, r5
 8011f40:	bf58      	it	pl
 8011f42:	9f03      	ldrpl	r7, [sp, #12]
 8011f44:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8011f48:	bf48      	it	mi
 8011f4a:	4647      	movmi	r7, r8
 8011f4c:	44bb      	add	fp, r7
 8011f4e:	f8ac b004 	strh.w	fp, [ip, #4]
 8011f52:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011f56:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8011f5a:	f8ac b006 	strh.w	fp, [ip, #6]
 8011f5e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8011f62:	443b      	add	r3, r7
 8011f64:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8011f68:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8011f6c:	bf58      	it	pl
 8011f6e:	1a64      	subpl	r4, r4, r1
 8011f70:	ea5b 0707 	orrs.w	r7, fp, r7
 8011f74:	444e      	add	r6, r9
 8011f76:	d011      	beq.n	8011f9c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011f78:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8011f7c:	f1bb 0f00 	cmp.w	fp, #0
 8011f80:	db0c      	blt.n	8011f9c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011f82:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8011f84:	45bb      	cmp	fp, r7
 8011f86:	da09      	bge.n	8011f9c <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8011f88:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8011f8c:	45bb      	cmp	fp, r7
 8011f8e:	bf3c      	itt	cc
 8011f90:	f10c 0708 	addcc.w	r7, ip, #8
 8011f94:	6107      	strcc	r7, [r0, #16]
 8011f96:	f10b 0701 	add.w	r7, fp, #1
 8011f9a:	6087      	str	r7, [r0, #8]
 8011f9c:	6907      	ldr	r7, [r0, #16]
 8011f9e:	45b6      	cmp	lr, r6
 8011fa0:	803e      	strh	r6, [r7, #0]
 8011fa2:	807a      	strh	r2, [r7, #2]
 8011fa4:	f8a7 a004 	strh.w	sl, [r7, #4]
 8011fa8:	f8a7 a006 	strh.w	sl, [r7, #6]
 8011fac:	d1c5      	bne.n	8011f3a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8011fae:	9a04      	ldr	r2, [sp, #16]
 8011fb0:	1ad3      	subs	r3, r2, r3
 8011fb2:	6902      	ldr	r2, [r0, #16]
 8011fb4:	8891      	ldrh	r1, [r2, #4]
 8011fb6:	88d6      	ldrh	r6, [r2, #6]
 8011fb8:	4419      	add	r1, r3
 8011fba:	8091      	strh	r1, [r2, #4]
 8011fbc:	9902      	ldr	r1, [sp, #8]
 8011fbe:	f101 0c20 	add.w	ip, r1, #32
 8011fc2:	9901      	ldr	r1, [sp, #4]
 8011fc4:	ebac 0c01 	sub.w	ip, ip, r1
 8011fc8:	fb03 630c 	mla	r3, r3, ip, r6
 8011fcc:	80d3      	strh	r3, [r2, #6]
 8011fce:	e74c      	b.n	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011fd0:	9d05      	ldr	r5, [sp, #20]
 8011fd2:	1aa2      	subs	r2, r4, r2
 8011fd4:	eba5 0501 	sub.w	r5, r5, r1
 8011fd8:	9508      	str	r5, [sp, #32]
 8011fda:	9202      	str	r2, [sp, #8]
 8011fdc:	f140 8128 	bpl.w	8012230 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8011fe0:	9a03      	ldr	r2, [sp, #12]
 8011fe2:	2a00      	cmp	r2, #0
 8011fe4:	f6ff af41 	blt.w	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8011fe8:	9a02      	ldr	r2, [sp, #8]
 8011fea:	4252      	negs	r2, r2
 8011fec:	9202      	str	r2, [sp, #8]
 8011fee:	9a06      	ldr	r2, [sp, #24]
 8011ff0:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8011ff4:	f04f 34ff 	mov.w	r4, #4294967295
 8011ff8:	9206      	str	r2, [sp, #24]
 8011ffa:	462a      	mov	r2, r5
 8011ffc:	940b      	str	r4, [sp, #44]	@ 0x2c
 8011ffe:	435a      	muls	r2, r3
 8012000:	2400      	movs	r4, #0
 8012002:	9d02      	ldr	r5, [sp, #8]
 8012004:	9401      	str	r4, [sp, #4]
 8012006:	9c02      	ldr	r4, [sp, #8]
 8012008:	fb92 f4f4 	sdiv	r4, r2, r4
 801200c:	fb05 2214 	mls	r2, r5, r4, r2
 8012010:	2a00      	cmp	r2, #0
 8012012:	9207      	str	r2, [sp, #28]
 8012014:	bfbc      	itt	lt
 8012016:	1952      	addlt	r2, r2, r5
 8012018:	9207      	strlt	r2, [sp, #28]
 801201a:	9a01      	ldr	r2, [sp, #4]
 801201c:	6905      	ldr	r5, [r0, #16]
 801201e:	bfb8      	it	lt
 8012020:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012024:	eb04 0901 	add.w	r9, r4, r1
 8012028:	429a      	cmp	r2, r3
 801202a:	ea4f 1669 	mov.w	r6, r9, asr #5
 801202e:	f040 8112 	bne.w	8012256 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012032:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012036:	429e      	cmp	r6, r3
 8012038:	d104      	bne.n	8012044 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801203a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801203e:	9a03      	ldr	r2, [sp, #12]
 8012040:	429a      	cmp	r2, r3
 8012042:	d01b      	beq.n	801207c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012044:	88ea      	ldrh	r2, [r5, #6]
 8012046:	88ab      	ldrh	r3, [r5, #4]
 8012048:	4313      	orrs	r3, r2
 801204a:	d010      	beq.n	801206e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801204c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012050:	2a00      	cmp	r2, #0
 8012052:	db0c      	blt.n	801206e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012054:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012056:	429a      	cmp	r2, r3
 8012058:	da09      	bge.n	801206e <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801205a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801205e:	429a      	cmp	r2, r3
 8012060:	bf38      	it	cc
 8012062:	3508      	addcc	r5, #8
 8012064:	f102 0201 	add.w	r2, r2, #1
 8012068:	bf38      	it	cc
 801206a:	6105      	strcc	r5, [r0, #16]
 801206c:	6082      	str	r2, [r0, #8]
 801206e:	6903      	ldr	r3, [r0, #16]
 8012070:	9a03      	ldr	r2, [sp, #12]
 8012072:	805a      	strh	r2, [r3, #2]
 8012074:	2200      	movs	r2, #0
 8012076:	801e      	strh	r6, [r3, #0]
 8012078:	809a      	strh	r2, [r3, #4]
 801207a:	80da      	strh	r2, [r3, #6]
 801207c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801207e:	9a03      	ldr	r2, [sp, #12]
 8012080:	6901      	ldr	r1, [r0, #16]
 8012082:	441a      	add	r2, r3
 8012084:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012088:	42b3      	cmp	r3, r6
 801208a:	d103      	bne.n	8012094 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 801208c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012090:	429a      	cmp	r2, r3
 8012092:	d01a      	beq.n	80120ca <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012094:	88cc      	ldrh	r4, [r1, #6]
 8012096:	888b      	ldrh	r3, [r1, #4]
 8012098:	4323      	orrs	r3, r4
 801209a:	d010      	beq.n	80120be <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801209c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80120a0:	2c00      	cmp	r4, #0
 80120a2:	db0c      	blt.n	80120be <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80120a4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80120a6:	429c      	cmp	r4, r3
 80120a8:	da09      	bge.n	80120be <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80120aa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80120ae:	429c      	cmp	r4, r3
 80120b0:	bf38      	it	cc
 80120b2:	3108      	addcc	r1, #8
 80120b4:	f104 0401 	add.w	r4, r4, #1
 80120b8:	bf38      	it	cc
 80120ba:	6101      	strcc	r1, [r0, #16]
 80120bc:	6084      	str	r4, [r0, #8]
 80120be:	6903      	ldr	r3, [r0, #16]
 80120c0:	2100      	movs	r1, #0
 80120c2:	801e      	strh	r6, [r3, #0]
 80120c4:	805a      	strh	r2, [r3, #2]
 80120c6:	8099      	strh	r1, [r3, #4]
 80120c8:	80d9      	strh	r1, [r3, #6]
 80120ca:	9b06      	ldr	r3, [sp, #24]
 80120cc:	4293      	cmp	r3, r2
 80120ce:	f000 8082 	beq.w	80121d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80120d2:	9b08      	ldr	r3, [sp, #32]
 80120d4:	9c02      	ldr	r4, [sp, #8]
 80120d6:	9902      	ldr	r1, [sp, #8]
 80120d8:	015b      	lsls	r3, r3, #5
 80120da:	fb93 f1f1 	sdiv	r1, r3, r1
 80120de:	fb04 3311 	mls	r3, r4, r1, r3
 80120e2:	2b00      	cmp	r3, #0
 80120e4:	9103      	str	r1, [sp, #12]
 80120e6:	9308      	str	r3, [sp, #32]
 80120e8:	da04      	bge.n	80120f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80120ea:	1e4b      	subs	r3, r1, #1
 80120ec:	9303      	str	r3, [sp, #12]
 80120ee:	9b08      	ldr	r3, [sp, #32]
 80120f0:	4423      	add	r3, r4
 80120f2:	9308      	str	r3, [sp, #32]
 80120f4:	9b07      	ldr	r3, [sp, #28]
 80120f6:	9902      	ldr	r1, [sp, #8]
 80120f8:	1a5b      	subs	r3, r3, r1
 80120fa:	9307      	str	r3, [sp, #28]
 80120fc:	9b01      	ldr	r3, [sp, #4]
 80120fe:	f1c3 0320 	rsb	r3, r3, #32
 8012102:	930e      	str	r3, [sp, #56]	@ 0x38
 8012104:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8012106:	9b01      	ldr	r3, [sp, #4]
 8012108:	1a5b      	subs	r3, r3, r1
 801210a:	464f      	mov	r7, r9
 801210c:	930a      	str	r3, [sp, #40]	@ 0x28
 801210e:	2600      	movs	r6, #0
 8012110:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012114:	185b      	adds	r3, r3, r1
 8012116:	bf58      	it	pl
 8012118:	9902      	ldrpl	r1, [sp, #8]
 801211a:	9307      	str	r3, [sp, #28]
 801211c:	bf5d      	ittte	pl
 801211e:	1a5b      	subpl	r3, r3, r1
 8012120:	9307      	strpl	r3, [sp, #28]
 8012122:	9b03      	ldrpl	r3, [sp, #12]
 8012124:	9903      	ldrmi	r1, [sp, #12]
 8012126:	bf58      	it	pl
 8012128:	1c59      	addpl	r1, r3, #1
 801212a:	4489      	add	r9, r1
 801212c:	2a00      	cmp	r2, #0
 801212e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012132:	db2e      	blt.n	8012192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012134:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012136:	4293      	cmp	r3, r2
 8012138:	dd2b      	ble.n	8012192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801213a:	9c01      	ldr	r4, [sp, #4]
 801213c:	6905      	ldr	r5, [r0, #16]
 801213e:	46a0      	mov	r8, r4
 8012140:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8012142:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012146:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801214a:	45a0      	cmp	r8, r4
 801214c:	f040 814f 	bne.w	80123ee <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012150:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012154:	4551      	cmp	r1, sl
 8012156:	d103      	bne.n	8012160 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012158:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801215c:	4291      	cmp	r1, r2
 801215e:	d018      	beq.n	8012192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012160:	ea5c 010e 	orrs.w	r1, ip, lr
 8012164:	d00f      	beq.n	8012186 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012166:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801216a:	2900      	cmp	r1, #0
 801216c:	db0b      	blt.n	8012186 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801216e:	428b      	cmp	r3, r1
 8012170:	dd09      	ble.n	8012186 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012172:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012176:	4299      	cmp	r1, r3
 8012178:	bf38      	it	cc
 801217a:	3508      	addcc	r5, #8
 801217c:	f101 0101 	add.w	r1, r1, #1
 8012180:	bf38      	it	cc
 8012182:	6105      	strcc	r5, [r0, #16]
 8012184:	6081      	str	r1, [r0, #8]
 8012186:	6903      	ldr	r3, [r0, #16]
 8012188:	f8a3 a000 	strh.w	sl, [r3]
 801218c:	805a      	strh	r2, [r3, #2]
 801218e:	809e      	strh	r6, [r3, #4]
 8012190:	80de      	strh	r6, [r3, #6]
 8012192:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8012194:	6901      	ldr	r1, [r0, #16]
 8012196:	441a      	add	r2, r3
 8012198:	88cc      	ldrh	r4, [r1, #6]
 801219a:	888b      	ldrh	r3, [r1, #4]
 801219c:	4323      	orrs	r3, r4
 801219e:	d010      	beq.n	80121c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80121a0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80121a4:	2c00      	cmp	r4, #0
 80121a6:	db0c      	blt.n	80121c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80121a8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80121aa:	429c      	cmp	r4, r3
 80121ac:	da09      	bge.n	80121c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80121ae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80121b2:	429c      	cmp	r4, r3
 80121b4:	bf38      	it	cc
 80121b6:	3108      	addcc	r1, #8
 80121b8:	f104 0401 	add.w	r4, r4, #1
 80121bc:	bf38      	it	cc
 80121be:	6101      	strcc	r1, [r0, #16]
 80121c0:	6084      	str	r4, [r0, #8]
 80121c2:	6903      	ldr	r3, [r0, #16]
 80121c4:	f8a3 a000 	strh.w	sl, [r3]
 80121c8:	805a      	strh	r2, [r3, #2]
 80121ca:	809e      	strh	r6, [r3, #4]
 80121cc:	80de      	strh	r6, [r3, #6]
 80121ce:	9b06      	ldr	r3, [sp, #24]
 80121d0:	4293      	cmp	r3, r2
 80121d2:	464f      	mov	r7, r9
 80121d4:	d19c      	bne.n	8012110 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80121d6:	9b01      	ldr	r3, [sp, #4]
 80121d8:	6907      	ldr	r7, [r0, #16]
 80121da:	f1c3 0620 	rsb	r6, r3, #32
 80121de:	9b05      	ldr	r3, [sp, #20]
 80121e0:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80121e4:	9b04      	ldr	r3, [sp, #16]
 80121e6:	429e      	cmp	r6, r3
 80121e8:	f040 81cc 	bne.w	8012584 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80121ec:	f9b7 3000 	ldrsh.w	r3, [r7]
 80121f0:	459e      	cmp	lr, r3
 80121f2:	d104      	bne.n	80121fe <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80121f4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80121f8:	429a      	cmp	r2, r3
 80121fa:	f43f ae36 	beq.w	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80121fe:	88f9      	ldrh	r1, [r7, #6]
 8012200:	88bb      	ldrh	r3, [r7, #4]
 8012202:	430b      	orrs	r3, r1
 8012204:	d010      	beq.n	8012228 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012206:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801220a:	2b00      	cmp	r3, #0
 801220c:	db0c      	blt.n	8012228 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801220e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8012210:	428b      	cmp	r3, r1
 8012212:	da09      	bge.n	8012228 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012214:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012218:	428b      	cmp	r3, r1
 801221a:	bf38      	it	cc
 801221c:	3708      	addcc	r7, #8
 801221e:	f103 0301 	add.w	r3, r3, #1
 8012222:	bf38      	it	cc
 8012224:	6107      	strcc	r7, [r0, #16]
 8012226:	6083      	str	r3, [r0, #8]
 8012228:	6903      	ldr	r3, [r0, #16]
 801222a:	f8a3 e000 	strh.w	lr, [r3]
 801222e:	e5ff      	b.n	8011e30 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012230:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8012232:	9c03      	ldr	r4, [sp, #12]
 8012234:	42a2      	cmp	r2, r4
 8012236:	f6ff ae18 	blt.w	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801223a:	9c06      	ldr	r4, [sp, #24]
 801223c:	42a2      	cmp	r2, r4
 801223e:	bfb8      	it	lt
 8012240:	3201      	addlt	r2, #1
 8012242:	9c08      	ldr	r4, [sp, #32]
 8012244:	bfb8      	it	lt
 8012246:	9206      	strlt	r2, [sp, #24]
 8012248:	f1c3 0220 	rsb	r2, r3, #32
 801224c:	4362      	muls	r2, r4
 801224e:	2401      	movs	r4, #1
 8012250:	940b      	str	r4, [sp, #44]	@ 0x2c
 8012252:	2420      	movs	r4, #32
 8012254:	e6d5      	b.n	8012002 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012256:	f009 021f 	and.w	r2, r9, #31
 801225a:	ea4f 1861 	mov.w	r8, r1, asr #5
 801225e:	920c      	str	r2, [sp, #48]	@ 0x30
 8012260:	9a01      	ldr	r2, [sp, #4]
 8012262:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012266:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 801226a:	45b0      	cmp	r8, r6
 801226c:	f001 011f 	and.w	r1, r1, #31
 8012270:	eba2 0203 	sub.w	r2, r2, r3
 8012274:	d108      	bne.n	8012288 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012276:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012278:	4419      	add	r1, r3
 801227a:	4496      	add	lr, r2
 801227c:	fb02 a101 	mla	r1, r2, r1, sl
 8012280:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012284:	80e9      	strh	r1, [r5, #6]
 8012286:	e6f9      	b.n	801207c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012288:	2c00      	cmp	r4, #0
 801228a:	f2c0 80a9 	blt.w	80123e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801228e:	2701      	movs	r7, #1
 8012290:	f1c1 0c20 	rsb	ip, r1, #32
 8012294:	970a      	str	r7, [sp, #40]	@ 0x28
 8012296:	fb02 f20c 	mul.w	r2, r2, ip
 801229a:	2720      	movs	r7, #32
 801229c:	9709      	str	r7, [sp, #36]	@ 0x24
 801229e:	fb92 fcf4 	sdiv	ip, r2, r4
 80122a2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80122a4:	fb04 221c 	mls	r2, r4, ip, r2
 80122a8:	2a00      	cmp	r2, #0
 80122aa:	bfb8      	it	lt
 80122ac:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80122b0:	4439      	add	r1, r7
 80122b2:	fb0c a101 	mla	r1, ip, r1, sl
 80122b6:	80e9      	strh	r1, [r5, #6]
 80122b8:	44e6      	add	lr, ip
 80122ba:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80122bc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80122c0:	eb08 0501 	add.w	r5, r8, r1
 80122c4:	6901      	ldr	r1, [r0, #16]
 80122c6:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80122ca:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80122ce:	bfb8      	it	lt
 80122d0:	1912      	addlt	r2, r2, r4
 80122d2:	ea58 070e 	orrs.w	r7, r8, lr
 80122d6:	d010      	beq.n	80122fa <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80122d8:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80122dc:	f1be 0f00 	cmp.w	lr, #0
 80122e0:	db0b      	blt.n	80122fa <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80122e2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80122e4:	45be      	cmp	lr, r7
 80122e6:	da08      	bge.n	80122fa <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80122e8:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80122ec:	45be      	cmp	lr, r7
 80122ee:	bf3c      	itt	cc
 80122f0:	3108      	addcc	r1, #8
 80122f2:	6101      	strcc	r1, [r0, #16]
 80122f4:	f10e 0101 	add.w	r1, lr, #1
 80122f8:	6081      	str	r1, [r0, #8]
 80122fa:	6901      	ldr	r1, [r0, #16]
 80122fc:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012300:	800d      	strh	r5, [r1, #0]
 8012302:	f04f 0e00 	mov.w	lr, #0
 8012306:	42ae      	cmp	r6, r5
 8012308:	f8a1 8002 	strh.w	r8, [r1, #2]
 801230c:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012310:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012314:	4463      	add	r3, ip
 8012316:	d054      	beq.n	80123c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012318:	9901      	ldr	r1, [sp, #4]
 801231a:	1ac9      	subs	r1, r1, r3
 801231c:	4461      	add	r1, ip
 801231e:	0149      	lsls	r1, r1, #5
 8012320:	fb91 fef4 	sdiv	lr, r1, r4
 8012324:	fb04 111e 	mls	r1, r4, lr, r1
 8012328:	2900      	cmp	r1, #0
 801232a:	bfb8      	it	lt
 801232c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012330:	f10e 0701 	add.w	r7, lr, #1
 8012334:	bfb8      	it	lt
 8012336:	1909      	addlt	r1, r1, r4
 8012338:	1b12      	subs	r2, r2, r4
 801233a:	970d      	str	r7, [sp, #52]	@ 0x34
 801233c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012340:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8012342:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012346:	1852      	adds	r2, r2, r1
 8012348:	bf54      	ite	pl
 801234a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 801234e:	46f4      	movmi	ip, lr
 8012350:	44e3      	add	fp, ip
 8012352:	f8aa b004 	strh.w	fp, [sl, #4]
 8012356:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801235a:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801235e:	f8aa b006 	strh.w	fp, [sl, #6]
 8012362:	4463      	add	r3, ip
 8012364:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012368:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801236c:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012370:	bf58      	it	pl
 8012372:	1b12      	subpl	r2, r2, r4
 8012374:	443d      	add	r5, r7
 8012376:	ea5b 070a 	orrs.w	r7, fp, sl
 801237a:	d014      	beq.n	80123a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801237c:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012380:	f1ba 0f00 	cmp.w	sl, #0
 8012384:	db0f      	blt.n	80123a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012386:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012388:	45ba      	cmp	sl, r7
 801238a:	da0c      	bge.n	80123a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801238c:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012390:	45ba      	cmp	sl, r7
 8012392:	bf38      	it	cc
 8012394:	f10c 0c08 	addcc.w	ip, ip, #8
 8012398:	f10a 0a01 	add.w	sl, sl, #1
 801239c:	bf38      	it	cc
 801239e:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80123a2:	f8c0 a008 	str.w	sl, [r0, #8]
 80123a6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80123aa:	f04f 0700 	mov.w	r7, #0
 80123ae:	42ae      	cmp	r6, r5
 80123b0:	f8ac 5000 	strh.w	r5, [ip]
 80123b4:	f8ac 8002 	strh.w	r8, [ip, #2]
 80123b8:	f8ac 7004 	strh.w	r7, [ip, #4]
 80123bc:	f8ac 7006 	strh.w	r7, [ip, #6]
 80123c0:	d1bc      	bne.n	801233c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80123c2:	6904      	ldr	r4, [r0, #16]
 80123c4:	9a01      	ldr	r2, [sp, #4]
 80123c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80123c8:	1ad3      	subs	r3, r2, r3
 80123ca:	88a2      	ldrh	r2, [r4, #4]
 80123cc:	441a      	add	r2, r3
 80123ce:	80a2      	strh	r2, [r4, #4]
 80123d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80123d2:	3120      	adds	r1, #32
 80123d4:	1a89      	subs	r1, r1, r2
 80123d6:	88e2      	ldrh	r2, [r4, #6]
 80123d8:	fb03 2301 	mla	r3, r3, r1, r2
 80123dc:	80e3      	strh	r3, [r4, #6]
 80123de:	e64d      	b.n	801207c <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80123e0:	f04f 37ff 	mov.w	r7, #4294967295
 80123e4:	970a      	str	r7, [sp, #40]	@ 0x28
 80123e6:	434a      	muls	r2, r1
 80123e8:	4264      	negs	r4, r4
 80123ea:	2700      	movs	r7, #0
 80123ec:	e756      	b.n	801229c <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80123ee:	ea4f 1867 	mov.w	r8, r7, asr #5
 80123f2:	f009 031f 	and.w	r3, r9, #31
 80123f6:	45d0      	cmp	r8, sl
 80123f8:	f007 071f 	and.w	r7, r7, #31
 80123fc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80123fe:	fa1f fc8c 	uxth.w	ip, ip
 8012402:	fa1f fe8e 	uxth.w	lr, lr
 8012406:	d10a      	bne.n	801241e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012408:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801240a:	449c      	add	ip, r3
 801240c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801240e:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012412:	441f      	add	r7, r3
 8012414:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012416:	fb03 e707 	mla	r7, r3, r7, lr
 801241a:	80ef      	strh	r7, [r5, #6]
 801241c:	e6b9      	b.n	8012192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801241e:	2900      	cmp	r1, #0
 8012420:	f2c0 80a8 	blt.w	8012574 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012424:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8012426:	f1c7 0320 	rsb	r3, r7, #32
 801242a:	4363      	muls	r3, r4
 801242c:	2401      	movs	r4, #1
 801242e:	940d      	str	r4, [sp, #52]	@ 0x34
 8012430:	2420      	movs	r4, #32
 8012432:	940c      	str	r4, [sp, #48]	@ 0x30
 8012434:	fb93 f4f1 	sdiv	r4, r3, r1
 8012438:	fb01 3b14 	mls	fp, r1, r4, r3
 801243c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801243e:	f1bb 0f00 	cmp.w	fp, #0
 8012442:	bfb8      	it	lt
 8012444:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012448:	441f      	add	r7, r3
 801244a:	fb04 e707 	mla	r7, r4, r7, lr
 801244e:	44a4      	add	ip, r4
 8012450:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012454:	80ef      	strh	r7, [r5, #6]
 8012456:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801245a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801245c:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012460:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012464:	bfb8      	it	lt
 8012466:	448b      	addlt	fp, r1
 8012468:	eb08 0503 	add.w	r5, r8, r3
 801246c:	ea5e 0307 	orrs.w	r3, lr, r7
 8012470:	d011      	beq.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012472:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012476:	f1be 0f00 	cmp.w	lr, #0
 801247a:	db0c      	blt.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801247c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801247e:	45be      	cmp	lr, r7
 8012480:	da09      	bge.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012482:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012486:	45be      	cmp	lr, r7
 8012488:	bf3c      	itt	cc
 801248a:	f10c 0708 	addcc.w	r7, ip, #8
 801248e:	6107      	strcc	r7, [r0, #16]
 8012490:	f10e 0701 	add.w	r7, lr, #1
 8012494:	6087      	str	r7, [r0, #8]
 8012496:	6907      	ldr	r7, [r0, #16]
 8012498:	b213      	sxth	r3, r2
 801249a:	9310      	str	r3, [sp, #64]	@ 0x40
 801249c:	807b      	strh	r3, [r7, #2]
 801249e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80124a0:	803d      	strh	r5, [r7, #0]
 80124a2:	4555      	cmp	r5, sl
 80124a4:	80be      	strh	r6, [r7, #4]
 80124a6:	80fe      	strh	r6, [r7, #6]
 80124a8:	eb04 0c03 	add.w	ip, r4, r3
 80124ac:	d051      	beq.n	8012552 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80124ae:	9b01      	ldr	r3, [sp, #4]
 80124b0:	eba3 070c 	sub.w	r7, r3, ip
 80124b4:	443c      	add	r4, r7
 80124b6:	0164      	lsls	r4, r4, #5
 80124b8:	fb94 f8f1 	sdiv	r8, r4, r1
 80124bc:	fb01 4418 	mls	r4, r1, r8, r4
 80124c0:	2c00      	cmp	r4, #0
 80124c2:	bfb8      	it	lt
 80124c4:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80124c8:	ebab 0301 	sub.w	r3, fp, r1
 80124cc:	f108 0701 	add.w	r7, r8, #1
 80124d0:	bfb8      	it	lt
 80124d2:	1864      	addlt	r4, r4, r1
 80124d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80124d6:	9711      	str	r7, [sp, #68]	@ 0x44
 80124d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80124da:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80124de:	191b      	adds	r3, r3, r4
 80124e0:	bf58      	it	pl
 80124e2:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 80124e4:	f8be b004 	ldrh.w	fp, [lr, #4]
 80124e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80124ea:	bf48      	it	mi
 80124ec:	4647      	movmi	r7, r8
 80124ee:	44bb      	add	fp, r7
 80124f0:	f8ae b004 	strh.w	fp, [lr, #4]
 80124f4:	f8be b006 	ldrh.w	fp, [lr, #6]
 80124f8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80124fc:	f8ae b006 	strh.w	fp, [lr, #6]
 8012500:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012504:	44bc      	add	ip, r7
 8012506:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8012508:	f8be b006 	ldrh.w	fp, [lr, #6]
 801250c:	443d      	add	r5, r7
 801250e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012512:	bf5c      	itt	pl
 8012514:	1a5b      	subpl	r3, r3, r1
 8012516:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8012518:	ea5b 0307 	orrs.w	r3, fp, r7
 801251c:	d011      	beq.n	8012542 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801251e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012522:	f1bb 0f00 	cmp.w	fp, #0
 8012526:	db0c      	blt.n	8012542 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012528:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801252a:	45bb      	cmp	fp, r7
 801252c:	da09      	bge.n	8012542 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801252e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012532:	45bb      	cmp	fp, r7
 8012534:	bf3c      	itt	cc
 8012536:	f10e 0708 	addcc.w	r7, lr, #8
 801253a:	6107      	strcc	r7, [r0, #16]
 801253c:	f10b 0701 	add.w	r7, fp, #1
 8012540:	6087      	str	r7, [r0, #8]
 8012542:	6907      	ldr	r7, [r0, #16]
 8012544:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012546:	803d      	strh	r5, [r7, #0]
 8012548:	4555      	cmp	r5, sl
 801254a:	807b      	strh	r3, [r7, #2]
 801254c:	80be      	strh	r6, [r7, #4]
 801254e:	80fe      	strh	r6, [r7, #6]
 8012550:	d1c2      	bne.n	80124d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012552:	9b01      	ldr	r3, [sp, #4]
 8012554:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8012556:	eba3 0c0c 	sub.w	ip, r3, ip
 801255a:	6903      	ldr	r3, [r0, #16]
 801255c:	8899      	ldrh	r1, [r3, #4]
 801255e:	4461      	add	r1, ip
 8012560:	8099      	strh	r1, [r3, #4]
 8012562:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012564:	3720      	adds	r7, #32
 8012566:	1a7f      	subs	r7, r7, r1
 8012568:	88d9      	ldrh	r1, [r3, #6]
 801256a:	fb0c 1c07 	mla	ip, ip, r7, r1
 801256e:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012572:	e60e      	b.n	8012192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012574:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8012576:	f04f 34ff 	mov.w	r4, #4294967295
 801257a:	940d      	str	r4, [sp, #52]	@ 0x34
 801257c:	437b      	muls	r3, r7
 801257e:	4249      	negs	r1, r1
 8012580:	2400      	movs	r4, #0
 8012582:	e756      	b.n	8012432 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012584:	9905      	ldr	r1, [sp, #20]
 8012586:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801258a:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801258e:	f001 011f 	and.w	r1, r1, #31
 8012592:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012596:	9102      	str	r1, [sp, #8]
 8012598:	9904      	ldr	r1, [sp, #16]
 801259a:	45f3      	cmp	fp, lr
 801259c:	f009 0c1f 	and.w	ip, r9, #31
 80125a0:	eba1 0406 	sub.w	r4, r1, r6
 80125a4:	d108      	bne.n	80125b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80125a6:	9b02      	ldr	r3, [sp, #8]
 80125a8:	449c      	add	ip, r3
 80125aa:	44a0      	add	r8, r4
 80125ac:	fb04 a40c 	mla	r4, r4, ip, sl
 80125b0:	f8a7 8004 	strh.w	r8, [r7, #4]
 80125b4:	80fc      	strh	r4, [r7, #6]
 80125b6:	e458      	b.n	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80125b8:	9905      	ldr	r1, [sp, #20]
 80125ba:	ebb1 0109 	subs.w	r1, r1, r9
 80125be:	bf5b      	ittet	pl
 80125c0:	f1cc 0520 	rsbpl	r5, ip, #32
 80125c4:	436c      	mulpl	r4, r5
 80125c6:	2500      	movmi	r5, #0
 80125c8:	2520      	movpl	r5, #32
 80125ca:	bf44      	itt	mi
 80125cc:	fb04 f40c 	mulmi.w	r4, r4, ip
 80125d0:	4249      	negmi	r1, r1
 80125d2:	9501      	str	r5, [sp, #4]
 80125d4:	9b01      	ldr	r3, [sp, #4]
 80125d6:	fb94 f5f1 	sdiv	r5, r4, r1
 80125da:	fb01 4415 	mls	r4, r1, r5, r4
 80125de:	bf54      	ite	pl
 80125e0:	f04f 0901 	movpl.w	r9, #1
 80125e4:	f04f 39ff 	movmi.w	r9, #4294967295
 80125e8:	2c00      	cmp	r4, #0
 80125ea:	bfb8      	it	lt
 80125ec:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80125f0:	449c      	add	ip, r3
 80125f2:	44a8      	add	r8, r5
 80125f4:	fb05 ac0c 	mla	ip, r5, ip, sl
 80125f8:	f8a7 8004 	strh.w	r8, [r7, #4]
 80125fc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012600:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012604:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012608:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801260c:	bfb8      	it	lt
 801260e:	1864      	addlt	r4, r4, r1
 8012610:	ea58 0707 	orrs.w	r7, r8, r7
 8012614:	eb0b 0309 	add.w	r3, fp, r9
 8012618:	d011      	beq.n	801263e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801261a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801261e:	f1b8 0f00 	cmp.w	r8, #0
 8012622:	db0c      	blt.n	801263e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012624:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8012626:	45b8      	cmp	r8, r7
 8012628:	da09      	bge.n	801263e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801262a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801262e:	45b8      	cmp	r8, r7
 8012630:	bf3c      	itt	cc
 8012632:	f10c 0708 	addcc.w	r7, ip, #8
 8012636:	6107      	strcc	r7, [r0, #16]
 8012638:	f108 0701 	add.w	r7, r8, #1
 801263c:	6087      	str	r7, [r0, #8]
 801263e:	6907      	ldr	r7, [r0, #16]
 8012640:	f04f 0c00 	mov.w	ip, #0
 8012644:	b212      	sxth	r2, r2
 8012646:	459e      	cmp	lr, r3
 8012648:	803b      	strh	r3, [r7, #0]
 801264a:	807a      	strh	r2, [r7, #2]
 801264c:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012650:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012654:	442e      	add	r6, r5
 8012656:	d04d      	beq.n	80126f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012658:	9f04      	ldr	r7, [sp, #16]
 801265a:	1bbf      	subs	r7, r7, r6
 801265c:	443d      	add	r5, r7
 801265e:	016d      	lsls	r5, r5, #5
 8012660:	fb95 f8f1 	sdiv	r8, r5, r1
 8012664:	fb01 5518 	mls	r5, r1, r8, r5
 8012668:	4565      	cmp	r5, ip
 801266a:	bfb8      	it	lt
 801266c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012670:	f108 0701 	add.w	r7, r8, #1
 8012674:	bfb8      	it	lt
 8012676:	186d      	addlt	r5, r5, r1
 8012678:	1a64      	subs	r4, r4, r1
 801267a:	9703      	str	r7, [sp, #12]
 801267c:	f04f 0a00 	mov.w	sl, #0
 8012680:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012684:	1964      	adds	r4, r4, r5
 8012686:	bf58      	it	pl
 8012688:	9f03      	ldrpl	r7, [sp, #12]
 801268a:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801268e:	bf48      	it	mi
 8012690:	4647      	movmi	r7, r8
 8012692:	44bb      	add	fp, r7
 8012694:	f8ac b004 	strh.w	fp, [ip, #4]
 8012698:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801269c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80126a0:	f8ac b006 	strh.w	fp, [ip, #6]
 80126a4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126a8:	443e      	add	r6, r7
 80126aa:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80126ae:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80126b2:	bf58      	it	pl
 80126b4:	1a64      	subpl	r4, r4, r1
 80126b6:	ea5b 0707 	orrs.w	r7, fp, r7
 80126ba:	444b      	add	r3, r9
 80126bc:	d011      	beq.n	80126e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80126be:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80126c2:	f1bb 0f00 	cmp.w	fp, #0
 80126c6:	db0c      	blt.n	80126e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80126c8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80126ca:	45bb      	cmp	fp, r7
 80126cc:	da09      	bge.n	80126e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80126ce:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80126d2:	45bb      	cmp	fp, r7
 80126d4:	bf3c      	itt	cc
 80126d6:	f10c 0708 	addcc.w	r7, ip, #8
 80126da:	6107      	strcc	r7, [r0, #16]
 80126dc:	f10b 0701 	add.w	r7, fp, #1
 80126e0:	6087      	str	r7, [r0, #8]
 80126e2:	6907      	ldr	r7, [r0, #16]
 80126e4:	459e      	cmp	lr, r3
 80126e6:	803b      	strh	r3, [r7, #0]
 80126e8:	807a      	strh	r2, [r7, #2]
 80126ea:	f8a7 a004 	strh.w	sl, [r7, #4]
 80126ee:	f8a7 a006 	strh.w	sl, [r7, #6]
 80126f2:	d1c5      	bne.n	8012680 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80126f4:	9b04      	ldr	r3, [sp, #16]
 80126f6:	1b9e      	subs	r6, r3, r6
 80126f8:	6903      	ldr	r3, [r0, #16]
 80126fa:	889a      	ldrh	r2, [r3, #4]
 80126fc:	4432      	add	r2, r6
 80126fe:	809a      	strh	r2, [r3, #4]
 8012700:	9a02      	ldr	r2, [sp, #8]
 8012702:	f102 0c20 	add.w	ip, r2, #32
 8012706:	9a01      	ldr	r2, [sp, #4]
 8012708:	ebac 0c02 	sub.w	ip, ip, r2
 801270c:	88da      	ldrh	r2, [r3, #6]
 801270e:	fb06 260c 	mla	r6, r6, ip, r2
 8012712:	80de      	strh	r6, [r3, #6]
 8012714:	f7ff bba9 	b.w	8011e6a <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012718 <_ZN8touchgfx7Outline6lineToEii>:
 8012718:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801271a:	079b      	lsls	r3, r3, #30
 801271c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801271e:	460e      	mov	r6, r1
 8012720:	4615      	mov	r5, r2
 8012722:	d511      	bpl.n	8012748 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012724:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012728:	ea86 0701 	eor.w	r7, r6, r1
 801272c:	ea85 0302 	eor.w	r3, r5, r2
 8012730:	433b      	orrs	r3, r7
 8012732:	d009      	beq.n	8012748 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012734:	4633      	mov	r3, r6
 8012736:	9500      	str	r5, [sp, #0]
 8012738:	f7ff fb3e 	bl	8011db8 <_ZN8touchgfx7Outline10renderLineEiiii>
 801273c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801273e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012742:	f043 0301 	orr.w	r3, r3, #1
 8012746:	6243      	str	r3, [r0, #36]	@ 0x24
 8012748:	b003      	add	sp, #12
 801274a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801274c <_ZN8touchgfx7Outline6moveToEii>:
 801274c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801274e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012750:	4615      	mov	r5, r2
 8012752:	079a      	lsls	r2, r3, #30
 8012754:	4604      	mov	r4, r0
 8012756:	460e      	mov	r6, r1
 8012758:	d401      	bmi.n	801275e <_ZN8touchgfx7Outline6moveToEii+0x12>
 801275a:	f7ff faf9 	bl	8011d50 <_ZN8touchgfx7Outline5resetEv>
 801275e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012760:	07db      	lsls	r3, r3, #31
 8012762:	d504      	bpl.n	801276e <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012764:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012768:	4620      	mov	r0, r4
 801276a:	f7ff ffd5 	bl	8012718 <_ZN8touchgfx7Outline6lineToEii>
 801276e:	6923      	ldr	r3, [r4, #16]
 8012770:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012774:	1170      	asrs	r0, r6, #5
 8012776:	4290      	cmp	r0, r2
 8012778:	ea4f 1165 	mov.w	r1, r5, asr #5
 801277c:	d103      	bne.n	8012786 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801277e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012782:	4291      	cmp	r1, r2
 8012784:	d01a      	beq.n	80127bc <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012786:	88df      	ldrh	r7, [r3, #6]
 8012788:	889a      	ldrh	r2, [r3, #4]
 801278a:	433a      	orrs	r2, r7
 801278c:	d010      	beq.n	80127b0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801278e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012792:	2a00      	cmp	r2, #0
 8012794:	db0c      	blt.n	80127b0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012796:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8012798:	42ba      	cmp	r2, r7
 801279a:	da09      	bge.n	80127b0 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801279c:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80127a0:	42ba      	cmp	r2, r7
 80127a2:	bf38      	it	cc
 80127a4:	3308      	addcc	r3, #8
 80127a6:	f102 0201 	add.w	r2, r2, #1
 80127aa:	bf38      	it	cc
 80127ac:	6123      	strcc	r3, [r4, #16]
 80127ae:	60a2      	str	r2, [r4, #8]
 80127b0:	6923      	ldr	r3, [r4, #16]
 80127b2:	2200      	movs	r2, #0
 80127b4:	8018      	strh	r0, [r3, #0]
 80127b6:	8059      	strh	r1, [r3, #2]
 80127b8:	809a      	strh	r2, [r3, #4]
 80127ba:	80da      	strh	r2, [r3, #6]
 80127bc:	6166      	str	r6, [r4, #20]
 80127be:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80127c2:	6225      	str	r5, [r4, #32]
 80127c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080127c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80127c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80127ca:	b0d0      	sub	sp, #320	@ 0x140
 80127cc:	466c      	mov	r4, sp
 80127ce:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80127d2:	4627      	mov	r7, r4
 80127d4:	1a0d      	subs	r5, r1, r0
 80127d6:	2d48      	cmp	r5, #72	@ 0x48
 80127d8:	f100 0308 	add.w	r3, r0, #8
 80127dc:	f340 80d5 	ble.w	801298a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80127e0:	112d      	asrs	r5, r5, #4
 80127e2:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80127e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80127ea:	6816      	ldr	r6, [r2, #0]
 80127ec:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80127f0:	6006      	str	r6, [r0, #0]
 80127f2:	6856      	ldr	r6, [r2, #4]
 80127f4:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80127f8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80127fc:	6046      	str	r6, [r0, #4]
 80127fe:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012802:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012806:	f8a2 e004 	strh.w	lr, [r2, #4]
 801280a:	f8a2 c006 	strh.w	ip, [r2, #6]
 801280e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012812:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012816:	4565      	cmp	r5, ip
 8012818:	f1a1 0208 	sub.w	r2, r1, #8
 801281c:	db06      	blt.n	801282c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801281e:	d119      	bne.n	8012854 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012820:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012824:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012828:	42ae      	cmp	r6, r5
 801282a:	dd13      	ble.n	8012854 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801282c:	460e      	mov	r6, r1
 801282e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012832:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012836:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801283a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801283e:	601d      	str	r5, [r3, #0]
 8012840:	6875      	ldr	r5, [r6, #4]
 8012842:	605d      	str	r5, [r3, #4]
 8012844:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012848:	f821 cc06 	strh.w	ip, [r1, #-6]
 801284c:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012850:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012854:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012858:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 801285c:	42ae      	cmp	r6, r5
 801285e:	db06      	blt.n	801286e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012860:	d116      	bne.n	8012890 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012862:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012866:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801286a:	45ac      	cmp	ip, r5
 801286c:	da10      	bge.n	8012890 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801286e:	681d      	ldr	r5, [r3, #0]
 8012870:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012874:	6005      	str	r5, [r0, #0]
 8012876:	685d      	ldr	r5, [r3, #4]
 8012878:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801287c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012880:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012884:	6045      	str	r5, [r0, #4]
 8012886:	8146      	strh	r6, [r0, #10]
 8012888:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801288c:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8012890:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012894:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012898:	4565      	cmp	r5, ip
 801289a:	db06      	blt.n	80128aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 801289c:	d119      	bne.n	80128d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801289e:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80128a2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80128a6:	42ae      	cmp	r6, r5
 80128a8:	da13      	bge.n	80128d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80128aa:	460e      	mov	r6, r1
 80128ac:	f9b0 9000 	ldrsh.w	r9, [r0]
 80128b0:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80128b4:	6005      	str	r5, [r0, #0]
 80128b6:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80128ba:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80128be:	6875      	ldr	r5, [r6, #4]
 80128c0:	6045      	str	r5, [r0, #4]
 80128c2:	f821 9c08 	strh.w	r9, [r1, #-8]
 80128c6:	f821 cc06 	strh.w	ip, [r1, #-6]
 80128ca:	f821 8c04 	strh.w	r8, [r1, #-4]
 80128ce:	f821 ec02 	strh.w	lr, [r1, #-2]
 80128d2:	3308      	adds	r3, #8
 80128d4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80128d8:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80128dc:	45e6      	cmp	lr, ip
 80128de:	dbf8      	blt.n	80128d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80128e0:	d105      	bne.n	80128ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80128e2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80128e6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80128ea:	42ae      	cmp	r6, r5
 80128ec:	dbf1      	blt.n	80128d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80128ee:	4615      	mov	r5, r2
 80128f0:	3a08      	subs	r2, #8
 80128f2:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80128f6:	45b4      	cmp	ip, r6
 80128f8:	dbf9      	blt.n	80128ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80128fa:	d105      	bne.n	8012908 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80128fc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012900:	f9b2 6000 	ldrsh.w	r6, [r2]
 8012904:	45b0      	cmp	r8, r6
 8012906:	dbf2      	blt.n	80128ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012908:	4293      	cmp	r3, r2
 801290a:	f1a5 0608 	sub.w	r6, r5, #8
 801290e:	d816      	bhi.n	801293e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8012910:	f8d6 c000 	ldr.w	ip, [r6]
 8012914:	f9b3 a000 	ldrsh.w	sl, [r3]
 8012918:	f8c3 c000 	str.w	ip, [r3]
 801291c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8012920:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8012924:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8012928:	f8c3 c004 	str.w	ip, [r3, #4]
 801292c:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012930:	f825 ec06 	strh.w	lr, [r5, #-6]
 8012934:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012938:	f825 8c02 	strh.w	r8, [r5, #-2]
 801293c:	e7c9      	b.n	80128d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801293e:	f8d6 e000 	ldr.w	lr, [r6]
 8012942:	f9b0 a000 	ldrsh.w	sl, [r0]
 8012946:	f8c0 e000 	str.w	lr, [r0]
 801294a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801294e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8012952:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8012956:	f8c0 e004 	str.w	lr, [r0, #4]
 801295a:	f825 ac08 	strh.w	sl, [r5, #-8]
 801295e:	f825 cc06 	strh.w	ip, [r5, #-6]
 8012962:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012966:	f825 8c02 	strh.w	r8, [r5, #-2]
 801296a:	1acd      	subs	r5, r1, r3
 801296c:	1a16      	subs	r6, r2, r0
 801296e:	10ed      	asrs	r5, r5, #3
 8012970:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012974:	bfb5      	itete	lt
 8012976:	e9c4 0200 	strdlt	r0, r2, [r4]
 801297a:	e9c4 3100 	strdge	r3, r1, [r4]
 801297e:	460a      	movlt	r2, r1
 8012980:	4603      	movge	r3, r0
 8012982:	3408      	adds	r4, #8
 8012984:	4618      	mov	r0, r3
 8012986:	4611      	mov	r1, r2
 8012988:	e724      	b.n	80127d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801298a:	4299      	cmp	r1, r3
 801298c:	d928      	bls.n	80129e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801298e:	f1a3 0210 	sub.w	r2, r3, #16
 8012992:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8012996:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801299a:	45ac      	cmp	ip, r5
 801299c:	db06      	blt.n	80129ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801299e:	d11d      	bne.n	80129dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80129a0:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80129a4:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80129a8:	42ae      	cmp	r6, r5
 80129aa:	da17      	bge.n	80129dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80129ac:	4615      	mov	r5, r2
 80129ae:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80129b2:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80129b6:	6116      	str	r6, [r2, #16]
 80129b8:	686e      	ldr	r6, [r5, #4]
 80129ba:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80129be:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80129c2:	f8a2 9008 	strh.w	r9, [r2, #8]
 80129c6:	42a8      	cmp	r0, r5
 80129c8:	6156      	str	r6, [r2, #20]
 80129ca:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80129ce:	f8a2 800c 	strh.w	r8, [r2, #12]
 80129d2:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80129d6:	f1a2 0208 	sub.w	r2, r2, #8
 80129da:	d1da      	bne.n	8012992 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80129dc:	3308      	adds	r3, #8
 80129de:	e7d4      	b.n	801298a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80129e0:	42bc      	cmp	r4, r7
 80129e2:	d903      	bls.n	80129ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80129e4:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80129e8:	3c08      	subs	r4, #8
 80129ea:	e6f3      	b.n	80127d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80129ec:	b050      	add	sp, #320	@ 0x140
 80129ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080129f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80129f2:	b510      	push	{r4, lr}
 80129f4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80129f6:	07da      	lsls	r2, r3, #31
 80129f8:	4604      	mov	r4, r0
 80129fa:	d507      	bpl.n	8012a0c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80129fc:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8012a00:	f7ff fe8a 	bl	8012718 <_ZN8touchgfx7Outline6lineToEii>
 8012a04:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012a06:	f023 0301 	bic.w	r3, r3, #1
 8012a0a:	6243      	str	r3, [r0, #36]	@ 0x24
 8012a0c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012a0e:	079b      	lsls	r3, r3, #30
 8012a10:	d521      	bpl.n	8012a56 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8012a12:	6923      	ldr	r3, [r4, #16]
 8012a14:	88d9      	ldrh	r1, [r3, #6]
 8012a16:	889a      	ldrh	r2, [r3, #4]
 8012a18:	430a      	orrs	r2, r1
 8012a1a:	d010      	beq.n	8012a3e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012a1c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012a20:	2a00      	cmp	r2, #0
 8012a22:	db0c      	blt.n	8012a3e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012a24:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8012a26:	428a      	cmp	r2, r1
 8012a28:	da09      	bge.n	8012a3e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8012a2a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8012a2e:	4291      	cmp	r1, r2
 8012a30:	bf88      	it	hi
 8012a32:	3308      	addhi	r3, #8
 8012a34:	f102 0201 	add.w	r2, r2, #1
 8012a38:	bf88      	it	hi
 8012a3a:	6123      	strhi	r3, [r4, #16]
 8012a3c:	60a2      	str	r2, [r4, #8]
 8012a3e:	68a1      	ldr	r1, [r4, #8]
 8012a40:	b129      	cbz	r1, 8012a4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012a42:	6863      	ldr	r3, [r4, #4]
 8012a44:	4299      	cmp	r1, r3
 8012a46:	d802      	bhi.n	8012a4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8012a48:	68e0      	ldr	r0, [r4, #12]
 8012a4a:	f7ff febc 	bl	80127c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8012a4e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8012a50:	f023 0302 	bic.w	r3, r3, #2
 8012a54:	6263      	str	r3, [r4, #36]	@ 0x24
 8012a56:	68e0      	ldr	r0, [r4, #12]
 8012a58:	bd10      	pop	{r4, pc}
	...

08012a5c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8012a5c:	4b02      	ldr	r3, [pc, #8]	@ (8012a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8012a5e:	6018      	str	r0, [r3, #0]
 8012a60:	4b02      	ldr	r3, [pc, #8]	@ (8012a6c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8012a62:	6019      	str	r1, [r3, #0]
 8012a64:	4770      	bx	lr
 8012a66:	bf00      	nop
 8012a68:	20013f68 	.word	0x20013f68
 8012a6c:	20013f6c 	.word	0x20013f6c

08012a70 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8012a70:	4a02      	ldr	r2, [pc, #8]	@ (8012a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8012a72:	2300      	movs	r3, #0
 8012a74:	6013      	str	r3, [r2, #0]
 8012a76:	4a02      	ldr	r2, [pc, #8]	@ (8012a80 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8012a78:	6013      	str	r3, [r2, #0]
 8012a7a:	4770      	bx	lr
 8012a7c:	20013f68 	.word	0x20013f68
 8012a80:	20013f6c 	.word	0x20013f6c

08012a84 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8012a84:	4b01      	ldr	r3, [pc, #4]	@ (8012a8c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8012a86:	6818      	ldr	r0, [r3, #0]
 8012a88:	4770      	bx	lr
 8012a8a:	bf00      	nop
 8012a8c:	20013f68 	.word	0x20013f68

08012a90 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8012a90:	4b01      	ldr	r3, [pc, #4]	@ (8012a98 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8012a92:	6818      	ldr	r0, [r3, #0]
 8012a94:	4770      	bx	lr
 8012a96:	bf00      	nop
 8012a98:	20013f6c 	.word	0x20013f6c

08012a9c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012a9c:	b510      	push	{r4, lr}
 8012a9e:	6803      	ldr	r3, [r0, #0]
 8012aa0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012aa2:	460c      	mov	r4, r1
 8012aa4:	4798      	blx	r3
 8012aa6:	1b03      	subs	r3, r0, r4
 8012aa8:	4258      	negs	r0, r3
 8012aaa:	4158      	adcs	r0, r3
 8012aac:	bd10      	pop	{r4, pc}
	...

08012ab0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8012ab0:	4b01      	ldr	r3, [pc, #4]	@ (8012ab8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8012ab2:	6019      	str	r1, [r3, #0]
 8012ab4:	4770      	bx	lr
 8012ab6:	bf00      	nop
 8012ab8:	20013f70 	.word	0x20013f70

08012abc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ac0:	4696      	mov	lr, r2
 8012ac2:	4605      	mov	r5, r0
 8012ac4:	4614      	mov	r4, r2
 8012ac6:	460e      	mov	r6, r1
 8012ac8:	461f      	mov	r7, r3
 8012aca:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012ace:	b097      	sub	sp, #92	@ 0x5c
 8012ad0:	f10d 0c1c 	add.w	ip, sp, #28
 8012ad4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012ad8:	f8de 3000 	ldr.w	r3, [lr]
 8012adc:	f8cc 3000 	str.w	r3, [ip]
 8012ae0:	f104 0e14 	add.w	lr, r4, #20
 8012ae4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012ae8:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012aec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012af0:	f8de 3000 	ldr.w	r3, [lr]
 8012af4:	f8cc 3000 	str.w	r3, [ip]
 8012af8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012afc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012b00:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012b04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012b08:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8012b0c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8012b10:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8012b14:	f8de 3000 	ldr.w	r3, [lr]
 8012b18:	f8cc 3000 	str.w	r3, [ip]
 8012b1c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012b1e:	682b      	ldr	r3, [r5, #0]
 8012b20:	9201      	str	r2, [sp, #4]
 8012b22:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012b26:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012b28:	9200      	str	r2, [sp, #0]
 8012b2a:	f8cd 8008 	str.w	r8, [sp, #8]
 8012b2e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8012b32:	aa07      	add	r2, sp, #28
 8012b34:	463b      	mov	r3, r7
 8012b36:	4631      	mov	r1, r6
 8012b38:	4628      	mov	r0, r5
 8012b3a:	47d8      	blx	fp
 8012b3c:	46a6      	mov	lr, r4
 8012b3e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012b42:	f10d 0c1c 	add.w	ip, sp, #28
 8012b46:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012b4a:	f8de 3000 	ldr.w	r3, [lr]
 8012b4e:	f8cc 3000 	str.w	r3, [ip]
 8012b52:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012b56:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012b5a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012b5e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012b62:	343c      	adds	r4, #60	@ 0x3c
 8012b64:	f8de 3000 	ldr.w	r3, [lr]
 8012b68:	f8cc 3000 	str.w	r3, [ip]
 8012b6c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012b6e:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012b72:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012b76:	6823      	ldr	r3, [r4, #0]
 8012b78:	f8cc 3000 	str.w	r3, [ip]
 8012b7c:	682b      	ldr	r3, [r5, #0]
 8012b7e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012b82:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012b84:	9201      	str	r2, [sp, #4]
 8012b86:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012b88:	9200      	str	r2, [sp, #0]
 8012b8a:	f8cd 8008 	str.w	r8, [sp, #8]
 8012b8e:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 8012b90:	aa07      	add	r2, sp, #28
 8012b92:	463b      	mov	r3, r7
 8012b94:	4631      	mov	r1, r6
 8012b96:	4628      	mov	r0, r5
 8012b98:	47a0      	blx	r4
 8012b9a:	b017      	add	sp, #92	@ 0x5c
 8012b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012ba0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8012ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ba4:	b08d      	sub	sp, #52	@ 0x34
 8012ba6:	4688      	mov	r8, r1
 8012ba8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8012baa:	f8d3 c000 	ldr.w	ip, [r3]
 8012bae:	680f      	ldr	r7, [r1, #0]
 8012bb0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8012bb4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8012bb8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 8012bbc:	edd3 6a07 	vldr	s13, [r3, #28]
 8012bc0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8012bc2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8012bc6:	f9b1 9000 	ldrsh.w	r9, [r1]
 8012bca:	f9ba 1000 	ldrsh.w	r1, [sl]
 8012bce:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8012bd2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8012bd6:	eba7 070c 	sub.w	r7, r7, ip
 8012bda:	42bc      	cmp	r4, r7
 8012bdc:	bfa8      	it	ge
 8012bde:	463c      	movge	r4, r7
 8012be0:	ee07 4a90 	vmov	s15, r4
 8012be4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012be8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8012bec:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012bf0:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012bf4:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012bf8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012bfc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8012c00:	eb09 0e0c 	add.w	lr, r9, ip
 8012c04:	4571      	cmp	r1, lr
 8012c06:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012c0a:	ee32 1a05 	vadd.f32	s2, s4, s10
 8012c0e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8012c12:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012c16:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012c1a:	f340 808d 	ble.w	8012d38 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8012c1e:	eba1 060e 	sub.w	r6, r1, lr
 8012c22:	fb96 f5f4 	sdiv	r5, r6, r4
 8012c26:	ee07 5a10 	vmov	s14, r5
 8012c2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c2e:	2d00      	cmp	r5, #0
 8012c30:	fb04 6615 	mls	r6, r4, r5, r6
 8012c34:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012c38:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012c3c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8012c40:	dd13      	ble.n	8012c6a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8012c42:	ee70 6a44 	vsub.f32	s13, s0, s8
 8012c46:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8012c4a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8012c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012c52:	bf18      	it	ne
 8012c54:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8012c58:	ee31 2a45 	vsub.f32	s4, s2, s10
 8012c5c:	bf08      	it	eq
 8012c5e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8012c62:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012c66:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012c6a:	fb05 f204 	mul.w	r2, r5, r4
 8012c6e:	1abf      	subs	r7, r7, r2
 8012c70:	4494      	add	ip, r2
 8012c72:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012c76:	4411      	add	r1, r2
 8012c78:	eb09 020c 	add.w	r2, r9, ip
 8012c7c:	443a      	add	r2, r7
 8012c7e:	b209      	sxth	r1, r1
 8012c80:	428a      	cmp	r2, r1
 8012c82:	bfc4      	itt	gt
 8012c84:	eba1 0209 	subgt.w	r2, r1, r9
 8012c88:	eba2 070c 	subgt.w	r7, r2, ip
 8012c8c:	2f00      	cmp	r7, #0
 8012c8e:	dd50      	ble.n	8012d32 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8012c90:	fb97 f1f4 	sdiv	r1, r7, r4
 8012c94:	fb04 7211 	mls	r2, r4, r1, r7
 8012c98:	b90a      	cbnz	r2, 8012c9e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8012c9a:	3901      	subs	r1, #1
 8012c9c:	4622      	mov	r2, r4
 8012c9e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8012ca2:	6840      	ldr	r0, [r0, #4]
 8012ca4:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012ca6:	f8d0 a000 	ldr.w	sl, [r0]
 8012caa:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8012cac:	9008      	str	r0, [sp, #32]
 8012cae:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8012cb2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8012cb4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8012cb8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8012cbc:	695b      	ldr	r3, [r3, #20]
 8012cbe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8012cc0:	445b      	add	r3, fp
 8012cc2:	eef0 6a42 	vmov.f32	s13, s4
 8012cc6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8012cca:	ee21 3a23 	vmul.f32	s6, s2, s7
 8012cce:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8012cd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012cd6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012cda:	9307      	str	r3, [sp, #28]
 8012cdc:	ee17 7a90 	vmov	r7, s15
 8012ce0:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012ce4:	eeb0 7a61 	vmov.f32	s14, s3
 8012ce8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012cec:	ee16 3a90 	vmov	r3, s13
 8012cf0:	fb97 f7f4 	sdiv	r7, r7, r4
 8012cf4:	ee17 ca90 	vmov	ip, s15
 8012cf8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012cfc:	fb9c fcf4 	sdiv	ip, ip, r4
 8012d00:	fb0c 3306 	mla	r3, ip, r6, r3
 8012d04:	9302      	str	r3, [sp, #8]
 8012d06:	ee17 3a10 	vmov	r3, s14
 8012d0a:	44b6      	add	lr, r6
 8012d0c:	fb04 e505 	mla	r5, r4, r5, lr
 8012d10:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012d14:	fb07 3706 	mla	r7, r7, r6, r3
 8012d18:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012d1c:	e9cd 4700 	strd	r4, r7, [sp]
 8012d20:	2900      	cmp	r1, #0
 8012d22:	bfcc      	ite	gt
 8012d24:	46a1      	movgt	r9, r4
 8012d26:	4691      	movle	r9, r2
 8012d28:	eba9 0306 	sub.w	r3, r9, r6
 8012d2c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012d30:	47a0      	blx	r4
 8012d32:	b00d      	add	sp, #52	@ 0x34
 8012d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d38:	2500      	movs	r5, #0
 8012d3a:	462e      	mov	r6, r5
 8012d3c:	e799      	b.n	8012c72 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08012d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012d40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d44:	b0db      	sub	sp, #364	@ 0x16c
 8012d46:	461d      	mov	r5, r3
 8012d48:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8012d4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8012d4e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8012d52:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012d54:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8012d58:	9310      	str	r3, [sp, #64]	@ 0x40
 8012d5a:	6803      	ldr	r3, [r0, #0]
 8012d5c:	910f      	str	r1, [sp, #60]	@ 0x3c
 8012d5e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8012d60:	9009      	str	r0, [sp, #36]	@ 0x24
 8012d62:	4614      	mov	r4, r2
 8012d64:	4629      	mov	r1, r5
 8012d66:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8012d6a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8012d6e:	47b8      	blx	r7
 8012d70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012d72:	6058      	str	r0, [r3, #4]
 8012d74:	2800      	cmp	r0, #0
 8012d76:	f000 83a1 	beq.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012d7a:	682b      	ldr	r3, [r5, #0]
 8012d7c:	9314      	str	r3, [sp, #80]	@ 0x50
 8012d7e:	686b      	ldr	r3, [r5, #4]
 8012d80:	9315      	str	r3, [sp, #84]	@ 0x54
 8012d82:	4bc4      	ldr	r3, [pc, #784]	@ (8013094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012d84:	ed94 7a02 	vldr	s14, [r4, #8]
 8012d88:	7819      	ldrb	r1, [r3, #0]
 8012d8a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8012d8e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8012d92:	2900      	cmp	r1, #0
 8012d94:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012d98:	bf16      	itet	ne
 8012d9a:	4619      	movne	r1, r3
 8012d9c:	4611      	moveq	r1, r2
 8012d9e:	4613      	movne	r3, r2
 8012da0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012da4:	9116      	str	r1, [sp, #88]	@ 0x58
 8012da6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8012daa:	f240 8387 	bls.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012dae:	ed94 7a07 	vldr	s14, [r4, #28]
 8012db2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012db6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012dba:	f240 837f 	bls.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012dbe:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8012dc2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012dc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012dca:	f240 8377 	bls.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012dce:	6822      	ldr	r2, [r4, #0]
 8012dd0:	4bb1      	ldr	r3, [pc, #708]	@ (8013098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012dd2:	429a      	cmp	r2, r3
 8012dd4:	f2c0 8372 	blt.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012dd8:	49b0      	ldr	r1, [pc, #704]	@ (801309c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012dda:	6963      	ldr	r3, [r4, #20]
 8012ddc:	428a      	cmp	r2, r1
 8012dde:	f300 836d 	bgt.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012de2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012de6:	48ae      	ldr	r0, [pc, #696]	@ (80130a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012de8:	33ff      	adds	r3, #255	@ 0xff
 8012dea:	4283      	cmp	r3, r0
 8012dec:	f200 8366 	bhi.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012df0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8012df2:	4dac      	ldr	r5, [pc, #688]	@ (80130a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012df4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012df8:	33ff      	adds	r3, #255	@ 0xff
 8012dfa:	42ab      	cmp	r3, r5
 8012dfc:	f200 835e 	bhi.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e00:	6862      	ldr	r2, [r4, #4]
 8012e02:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8012e06:	33ff      	adds	r3, #255	@ 0xff
 8012e08:	4283      	cmp	r3, r0
 8012e0a:	f200 8357 	bhi.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e0e:	69a1      	ldr	r1, [r4, #24]
 8012e10:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8012e14:	33ff      	adds	r3, #255	@ 0xff
 8012e16:	4283      	cmp	r3, r0
 8012e18:	f200 8350 	bhi.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e1c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012e1e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8012e22:	30ff      	adds	r0, #255	@ 0xff
 8012e24:	42a8      	cmp	r0, r5
 8012e26:	f200 8349 	bhi.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012e2a:	428a      	cmp	r2, r1
 8012e2c:	f280 8110 	bge.w	8013050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012e30:	429a      	cmp	r2, r3
 8012e32:	f300 8119 	bgt.w	8013068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012e36:	4299      	cmp	r1, r3
 8012e38:	f280 811d 	bge.w	8013076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012e3c:	2502      	movs	r5, #2
 8012e3e:	2701      	movs	r7, #1
 8012e40:	46a9      	mov	r9, r5
 8012e42:	46b8      	mov	r8, r7
 8012e44:	f04f 0a00 	mov.w	sl, #0
 8012e48:	4621      	mov	r1, r4
 8012e4a:	a849      	add	r0, sp, #292	@ 0x124
 8012e4c:	f004 f956 	bl	80170fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8012e50:	4622      	mov	r2, r4
 8012e52:	4653      	mov	r3, sl
 8012e54:	a949      	add	r1, sp, #292	@ 0x124
 8012e56:	f8cd 9000 	str.w	r9, [sp]
 8012e5a:	a819      	add	r0, sp, #100	@ 0x64
 8012e5c:	f004 fa7e 	bl	801735c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012e60:	4622      	mov	r2, r4
 8012e62:	4653      	mov	r3, sl
 8012e64:	a949      	add	r1, sp, #292	@ 0x124
 8012e66:	f8cd 8000 	str.w	r8, [sp]
 8012e6a:	a829      	add	r0, sp, #164	@ 0xa4
 8012e6c:	f004 fa76 	bl	801735c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012e70:	4643      	mov	r3, r8
 8012e72:	4622      	mov	r2, r4
 8012e74:	a949      	add	r1, sp, #292	@ 0x124
 8012e76:	f8cd 9000 	str.w	r9, [sp]
 8012e7a:	a839      	add	r0, sp, #228	@ 0xe4
 8012e7c:	f004 fa6e 	bl	801735c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012e80:	42af      	cmp	r7, r5
 8012e82:	bfb5      	itete	lt
 8012e84:	2300      	movlt	r3, #0
 8012e86:	2301      	movge	r3, #1
 8012e88:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8012e8a:	930e      	strge	r3, [sp, #56]	@ 0x38
 8012e8c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012e8e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012e92:	af12      	add	r7, sp, #72	@ 0x48
 8012e94:	bfb9      	ittee	lt
 8012e96:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8012e98:	ac19      	addlt	r4, sp, #100	@ 0x64
 8012e9a:	ad19      	addge	r5, sp, #100	@ 0x64
 8012e9c:	ac29      	addge	r4, sp, #164	@ 0xa4
 8012e9e:	e887 0003 	stmia.w	r7, {r0, r1}
 8012ea2:	b928      	cbnz	r0, 8012eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012ea4:	4b80      	ldr	r3, [pc, #512]	@ (80130a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012ea6:	6818      	ldr	r0, [r3, #0]
 8012ea8:	6803      	ldr	r3, [r0, #0]
 8012eaa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012eac:	4798      	blx	r3
 8012eae:	6038      	str	r0, [r7, #0]
 8012eb0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012eb2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012eb6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012eba:	930c      	str	r3, [sp, #48]	@ 0x30
 8012ebc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012ebe:	6963      	ldr	r3, [r4, #20]
 8012ec0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8012ec2:	440b      	add	r3, r1
 8012ec4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012ec8:	4408      	add	r0, r1
 8012eca:	b200      	sxth	r0, r0
 8012ecc:	4283      	cmp	r3, r0
 8012ece:	900d      	str	r0, [sp, #52]	@ 0x34
 8012ed0:	f280 80dd 	bge.w	801308e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012ed4:	428b      	cmp	r3, r1
 8012ed6:	da08      	bge.n	8012eea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012ed8:	2a00      	cmp	r2, #0
 8012eda:	dd06      	ble.n	8012eea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012edc:	1acb      	subs	r3, r1, r3
 8012ede:	429a      	cmp	r2, r3
 8012ee0:	f2c0 80e4 	blt.w	80130ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012ee4:	2b00      	cmp	r3, #0
 8012ee6:	f300 80e2 	bgt.w	80130ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012eea:	6967      	ldr	r7, [r4, #20]
 8012eec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012eee:	443b      	add	r3, r7
 8012ef0:	461f      	mov	r7, r3
 8012ef2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012ef4:	1bdf      	subs	r7, r3, r7
 8012ef6:	4297      	cmp	r7, r2
 8012ef8:	bfa8      	it	ge
 8012efa:	4617      	movge	r7, r2
 8012efc:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8012f00:	2f00      	cmp	r7, #0
 8012f02:	f340 8166 	ble.w	80131d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012f06:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012f08:	6829      	ldr	r1, [r5, #0]
 8012f0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f0e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012f12:	6820      	ldr	r0, [r4, #0]
 8012f14:	4411      	add	r1, r2
 8012f16:	4299      	cmp	r1, r3
 8012f18:	dd1a      	ble.n	8012f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012f1a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012f1e:	440b      	add	r3, r1
 8012f20:	4402      	add	r2, r0
 8012f22:	b21b      	sxth	r3, r3
 8012f24:	429a      	cmp	r2, r3
 8012f26:	dc13      	bgt.n	8012f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012f28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012f2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012f2c:	681b      	ldr	r3, [r3, #0]
 8012f2e:	9206      	str	r2, [sp, #24]
 8012f30:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012f32:	9205      	str	r2, [sp, #20]
 8012f34:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012f36:	9500      	str	r5, [sp, #0]
 8012f38:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012f3c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8012f3e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012f40:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012f44:	a912      	add	r1, sp, #72	@ 0x48
 8012f46:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8012f4a:	aa49      	add	r2, sp, #292	@ 0x124
 8012f4c:	4623      	mov	r3, r4
 8012f4e:	47c8      	blx	r9
 8012f50:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012f54:	441a      	add	r2, r3
 8012f56:	6963      	ldr	r3, [r4, #20]
 8012f58:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012f5c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8012f60:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8012f64:	68a1      	ldr	r1, [r4, #8]
 8012f66:	ed94 6a08 	vldr	s12, [r4, #32]
 8012f6a:	6022      	str	r2, [r4, #0]
 8012f6c:	3301      	adds	r3, #1
 8012f6e:	6163      	str	r3, [r4, #20]
 8012f70:	69a3      	ldr	r3, [r4, #24]
 8012f72:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012f76:	3b01      	subs	r3, #1
 8012f78:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8012f7c:	61a3      	str	r3, [r4, #24]
 8012f7e:	6923      	ldr	r3, [r4, #16]
 8012f80:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012f84:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012f88:	edd4 6a07 	vldr	s13, [r4, #28]
 8012f8c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012f90:	440b      	add	r3, r1
 8012f92:	68e1      	ldr	r1, [r4, #12]
 8012f94:	6123      	str	r3, [r4, #16]
 8012f96:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012f9a:	428b      	cmp	r3, r1
 8012f9c:	edc4 6a07 	vstr	s13, [r4, #28]
 8012fa0:	db15      	blt.n	8012fce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8012fa2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8012fa6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012faa:	3201      	adds	r2, #1
 8012fac:	edc4 6a07 	vstr	s13, [r4, #28]
 8012fb0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8012fb4:	6022      	str	r2, [r4, #0]
 8012fb6:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012fba:	1a5b      	subs	r3, r3, r1
 8012fbc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012fc0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8012fc4:	6123      	str	r3, [r4, #16]
 8012fc6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012fca:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012fce:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012fd2:	441a      	add	r2, r3
 8012fd4:	696b      	ldr	r3, [r5, #20]
 8012fd6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012fda:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8012fde:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8012fe2:	68a9      	ldr	r1, [r5, #8]
 8012fe4:	ed95 6a08 	vldr	s12, [r5, #32]
 8012fe8:	602a      	str	r2, [r5, #0]
 8012fea:	3301      	adds	r3, #1
 8012fec:	616b      	str	r3, [r5, #20]
 8012fee:	69ab      	ldr	r3, [r5, #24]
 8012ff0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012ff4:	3b01      	subs	r3, #1
 8012ff6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8012ffa:	61ab      	str	r3, [r5, #24]
 8012ffc:	692b      	ldr	r3, [r5, #16]
 8012ffe:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013002:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013006:	edd5 6a07 	vldr	s13, [r5, #28]
 801300a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801300e:	440b      	add	r3, r1
 8013010:	68e9      	ldr	r1, [r5, #12]
 8013012:	612b      	str	r3, [r5, #16]
 8013014:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013018:	428b      	cmp	r3, r1
 801301a:	edc5 6a07 	vstr	s13, [r5, #28]
 801301e:	db15      	blt.n	801304c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013020:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013024:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013028:	3201      	adds	r2, #1
 801302a:	edc5 6a07 	vstr	s13, [r5, #28]
 801302e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8013032:	602a      	str	r2, [r5, #0]
 8013034:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013038:	1a5b      	subs	r3, r3, r1
 801303a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801303e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013042:	612b      	str	r3, [r5, #16]
 8013044:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013048:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801304c:	3f01      	subs	r7, #1
 801304e:	e757      	b.n	8012f00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013050:	4299      	cmp	r1, r3
 8013052:	dc13      	bgt.n	801307c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013054:	429a      	cmp	r2, r3
 8013056:	da14      	bge.n	8013082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013058:	2502      	movs	r5, #2
 801305a:	2703      	movs	r7, #3
 801305c:	46a9      	mov	r9, r5
 801305e:	f04f 0800 	mov.w	r8, #0
 8013062:	f04f 0a01 	mov.w	sl, #1
 8013066:	e6ef      	b.n	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013068:	2501      	movs	r5, #1
 801306a:	2700      	movs	r7, #0
 801306c:	46a9      	mov	r9, r5
 801306e:	46b8      	mov	r8, r7
 8013070:	f04f 0a02 	mov.w	sl, #2
 8013074:	e6e8      	b.n	8012e48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013076:	2501      	movs	r5, #1
 8013078:	2702      	movs	r7, #2
 801307a:	e6e1      	b.n	8012e40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801307c:	2500      	movs	r5, #0
 801307e:	2701      	movs	r7, #1
 8013080:	e7f4      	b.n	801306c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013082:	2702      	movs	r7, #2
 8013084:	2503      	movs	r5, #3
 8013086:	f04f 0900 	mov.w	r9, #0
 801308a:	46b8      	mov	r8, r7
 801308c:	e7e9      	b.n	8013062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801308e:	4613      	mov	r3, r2
 8013090:	e728      	b.n	8012ee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013092:	bf00      	nop
 8013094:	20013f58 	.word	0x20013f58
 8013098:	fffd8f01 	.word	0xfffd8f01
 801309c:	00027100 	.word	0x00027100
 80130a0:	0004e1ff 	.word	0x0004e1ff
 80130a4:	0004e1fe 	.word	0x0004e1fe
 80130a8:	20013f60 	.word	0x20013f60
 80130ac:	4613      	mov	r3, r2
 80130ae:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80130b0:	9111      	str	r1, [sp, #68]	@ 0x44
 80130b2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80130b6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80130ba:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80130bc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80130c0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80130c4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 80130c8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 80130cc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 80130d0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80130d4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 80130d8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 80130dc:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 80130e0:	469e      	mov	lr, r3
 80130e2:	469c      	mov	ip, r3
 80130e4:	f04f 0900 	mov.w	r9, #0
 80130e8:	f1bc 0f00 	cmp.w	ip, #0
 80130ec:	d147      	bne.n	801317e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80130ee:	eb03 0c07 	add.w	ip, r3, r7
 80130f2:	1ad7      	subs	r7, r2, r3
 80130f4:	f1b9 0f00 	cmp.w	r9, #0
 80130f8:	d009      	beq.n	801310e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80130fa:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 80130fe:	9029      	str	r0, [sp, #164]	@ 0xa4
 8013100:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8013104:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8013108:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 801310c:	912d      	str	r1, [sp, #180]	@ 0xb4
 801310e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8013110:	9111      	str	r1, [sp, #68]	@ 0x44
 8013112:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8013116:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801311a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801311e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8013122:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8013126:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801312a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801312e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8013132:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8013136:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801313a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801313e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8013142:	f04f 0800 	mov.w	r8, #0
 8013146:	f1be 0f00 	cmp.w	lr, #0
 801314a:	d031      	beq.n	80131b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801314c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801314e:	4431      	add	r1, r6
 8013150:	4549      	cmp	r1, r9
 8013152:	4450      	add	r0, sl
 8013154:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013158:	ee37 7a04 	vadd.f32	s14, s14, s8
 801315c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013160:	db08      	blt.n	8013174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013162:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013166:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801316a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801316e:	3001      	adds	r0, #1
 8013170:	eba1 0109 	sub.w	r1, r1, r9
 8013174:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013178:	f04f 0801 	mov.w	r8, #1
 801317c:	e7e3      	b.n	8013146 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801317e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8013180:	4431      	add	r1, r6
 8013182:	4541      	cmp	r1, r8
 8013184:	4450      	add	r0, sl
 8013186:	ee37 7a24 	vadd.f32	s14, s14, s9
 801318a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801318e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013192:	db08      	blt.n	80131a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013194:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013198:	ee37 7a25 	vadd.f32	s14, s14, s11
 801319c:	ee77 7a86 	vadd.f32	s15, s15, s12
 80131a0:	3001      	adds	r0, #1
 80131a2:	eba1 0108 	sub.w	r1, r1, r8
 80131a6:	f10c 3cff 	add.w	ip, ip, #4294967295
 80131aa:	f04f 0901 	mov.w	r9, #1
 80131ae:	e79b      	b.n	80130e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80131b0:	449c      	add	ip, r3
 80131b2:	1aff      	subs	r7, r7, r3
 80131b4:	f1b8 0f00 	cmp.w	r8, #0
 80131b8:	d009      	beq.n	80131ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80131ba:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80131be:	9019      	str	r0, [sp, #100]	@ 0x64
 80131c0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80131c4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80131c8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80131cc:	911d      	str	r1, [sp, #116]	@ 0x74
 80131ce:	1ad2      	subs	r2, r2, r3
 80131d0:	e68b      	b.n	8012eea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80131d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80131d4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 80131d6:	2b00      	cmp	r3, #0
 80131d8:	f000 80d1 	beq.w	801337e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80131dc:	ad19      	add	r5, sp, #100	@ 0x64
 80131de:	ac39      	add	r4, sp, #228	@ 0xe4
 80131e0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80131e2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80131e6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80131ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80131ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80131ee:	6963      	ldr	r3, [r4, #20]
 80131f0:	440b      	add	r3, r1
 80131f2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80131f6:	4408      	add	r0, r1
 80131f8:	b200      	sxth	r0, r0
 80131fa:	4283      	cmp	r3, r0
 80131fc:	900d      	str	r0, [sp, #52]	@ 0x34
 80131fe:	f280 80c1 	bge.w	8013384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013202:	428b      	cmp	r3, r1
 8013204:	da08      	bge.n	8013218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013206:	2a00      	cmp	r2, #0
 8013208:	dd06      	ble.n	8013218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801320a:	1acb      	subs	r3, r1, r3
 801320c:	429a      	cmp	r2, r3
 801320e:	f2c0 80bb 	blt.w	8013388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013212:	2b00      	cmp	r3, #0
 8013214:	f300 80b9 	bgt.w	801338a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013218:	6967      	ldr	r7, [r4, #20]
 801321a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801321c:	443b      	add	r3, r7
 801321e:	461f      	mov	r7, r3
 8013220:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013222:	1bdf      	subs	r7, r3, r7
 8013224:	4297      	cmp	r7, r2
 8013226:	bfa8      	it	ge
 8013228:	4617      	movge	r7, r2
 801322a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 801322e:	2f00      	cmp	r7, #0
 8013230:	f340 813c 	ble.w	80134ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013234:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8013236:	6829      	ldr	r1, [r5, #0]
 8013238:	f9b3 2000 	ldrsh.w	r2, [r3]
 801323c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013240:	6820      	ldr	r0, [r4, #0]
 8013242:	4411      	add	r1, r2
 8013244:	4299      	cmp	r1, r3
 8013246:	dd1a      	ble.n	801327e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013248:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801324c:	440b      	add	r3, r1
 801324e:	4402      	add	r2, r0
 8013250:	b21b      	sxth	r3, r3
 8013252:	429a      	cmp	r2, r3
 8013254:	dc13      	bgt.n	801327e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013256:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013258:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801325a:	681b      	ldr	r3, [r3, #0]
 801325c:	9206      	str	r2, [sp, #24]
 801325e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013260:	9205      	str	r2, [sp, #20]
 8013262:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013264:	9500      	str	r5, [sp, #0]
 8013266:	e9cd b203 	strd	fp, r2, [sp, #12]
 801326a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 801326c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801326e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013272:	a912      	add	r1, sp, #72	@ 0x48
 8013274:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8013278:	aa49      	add	r2, sp, #292	@ 0x124
 801327a:	4623      	mov	r3, r4
 801327c:	47c8      	blx	r9
 801327e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013282:	441a      	add	r2, r3
 8013284:	6963      	ldr	r3, [r4, #20]
 8013286:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 801328a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801328e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8013292:	68a1      	ldr	r1, [r4, #8]
 8013294:	ed94 6a08 	vldr	s12, [r4, #32]
 8013298:	6022      	str	r2, [r4, #0]
 801329a:	3301      	adds	r3, #1
 801329c:	6163      	str	r3, [r4, #20]
 801329e:	69a3      	ldr	r3, [r4, #24]
 80132a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80132a4:	3b01      	subs	r3, #1
 80132a6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80132aa:	61a3      	str	r3, [r4, #24]
 80132ac:	6923      	ldr	r3, [r4, #16]
 80132ae:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80132b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80132b6:	edd4 6a07 	vldr	s13, [r4, #28]
 80132ba:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80132be:	440b      	add	r3, r1
 80132c0:	68e1      	ldr	r1, [r4, #12]
 80132c2:	6123      	str	r3, [r4, #16]
 80132c4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80132c8:	428b      	cmp	r3, r1
 80132ca:	edc4 6a07 	vstr	s13, [r4, #28]
 80132ce:	db15      	blt.n	80132fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80132d0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80132d4:	ee76 6a26 	vadd.f32	s13, s12, s13
 80132d8:	3201      	adds	r2, #1
 80132da:	edc4 6a07 	vstr	s13, [r4, #28]
 80132de:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80132e2:	6022      	str	r2, [r4, #0]
 80132e4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80132e8:	1a5b      	subs	r3, r3, r1
 80132ea:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80132ee:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80132f2:	6123      	str	r3, [r4, #16]
 80132f4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80132f8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80132fc:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013300:	441a      	add	r2, r3
 8013302:	696b      	ldr	r3, [r5, #20]
 8013304:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8013308:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 801330c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8013310:	68a9      	ldr	r1, [r5, #8]
 8013312:	ed95 6a08 	vldr	s12, [r5, #32]
 8013316:	602a      	str	r2, [r5, #0]
 8013318:	3301      	adds	r3, #1
 801331a:	616b      	str	r3, [r5, #20]
 801331c:	69ab      	ldr	r3, [r5, #24]
 801331e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013322:	3b01      	subs	r3, #1
 8013324:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8013328:	61ab      	str	r3, [r5, #24]
 801332a:	692b      	ldr	r3, [r5, #16]
 801332c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013330:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013334:	edd5 6a07 	vldr	s13, [r5, #28]
 8013338:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801333c:	440b      	add	r3, r1
 801333e:	68e9      	ldr	r1, [r5, #12]
 8013340:	612b      	str	r3, [r5, #16]
 8013342:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013346:	428b      	cmp	r3, r1
 8013348:	edc5 6a07 	vstr	s13, [r5, #28]
 801334c:	db15      	blt.n	801337a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801334e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013352:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013356:	3201      	adds	r2, #1
 8013358:	edc5 6a07 	vstr	s13, [r5, #28]
 801335c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8013360:	602a      	str	r2, [r5, #0]
 8013362:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013366:	1a5b      	subs	r3, r3, r1
 8013368:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801336c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013370:	612b      	str	r3, [r5, #16]
 8013372:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013376:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801337a:	3f01      	subs	r7, #1
 801337c:	e757      	b.n	801322e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801337e:	ad39      	add	r5, sp, #228	@ 0xe4
 8013380:	ac19      	add	r4, sp, #100	@ 0x64
 8013382:	e72d      	b.n	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013384:	4613      	mov	r3, r2
 8013386:	e744      	b.n	8013212 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013388:	4613      	mov	r3, r2
 801338a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801338e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8013390:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8013394:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8013398:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 801339c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80133a0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80133a4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80133a8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80133ac:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80133ae:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80133b2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80133b6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80133ba:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80133be:	960e      	str	r6, [sp, #56]	@ 0x38
 80133c0:	469e      	mov	lr, r3
 80133c2:	461f      	mov	r7, r3
 80133c4:	f04f 0900 	mov.w	r9, #0
 80133c8:	2f00      	cmp	r7, #0
 80133ca:	d146      	bne.n	801345a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80133cc:	449c      	add	ip, r3
 80133ce:	1ad7      	subs	r7, r2, r3
 80133d0:	f1b9 0f00 	cmp.w	r9, #0
 80133d4:	d009      	beq.n	80133ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80133d6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 80133da:	9039      	str	r0, [sp, #228]	@ 0xe4
 80133dc:	913d      	str	r1, [sp, #244]	@ 0xf4
 80133de:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 80133e2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 80133e6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 80133ea:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80133ec:	910e      	str	r1, [sp, #56]	@ 0x38
 80133ee:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 80133f2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 80133f6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 80133fa:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 80133fe:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8013402:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8013406:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801340a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801340e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8013412:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8013416:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801341a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801341e:	f04f 0800 	mov.w	r8, #0
 8013422:	f1be 0f00 	cmp.w	lr, #0
 8013426:	d030      	beq.n	801348a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013428:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801342a:	4431      	add	r1, r6
 801342c:	4549      	cmp	r1, r9
 801342e:	4450      	add	r0, sl
 8013430:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013434:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013438:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801343c:	db08      	blt.n	8013450 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801343e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013442:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013446:	ee37 7a06 	vadd.f32	s14, s14, s12
 801344a:	3001      	adds	r0, #1
 801344c:	eba1 0109 	sub.w	r1, r1, r9
 8013450:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013454:	f04f 0801 	mov.w	r8, #1
 8013458:	e7e3      	b.n	8013422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801345a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801345c:	4431      	add	r1, r6
 801345e:	4541      	cmp	r1, r8
 8013460:	4450      	add	r0, sl
 8013462:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013466:	ee77 7a84 	vadd.f32	s15, s15, s8
 801346a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801346e:	db08      	blt.n	8013482 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013470:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013474:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013478:	ee77 7a86 	vadd.f32	s15, s15, s12
 801347c:	3001      	adds	r0, #1
 801347e:	eba1 0108 	sub.w	r1, r1, r8
 8013482:	3f01      	subs	r7, #1
 8013484:	f04f 0901 	mov.w	r9, #1
 8013488:	e79e      	b.n	80133c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801348a:	449c      	add	ip, r3
 801348c:	1aff      	subs	r7, r7, r3
 801348e:	f1b8 0f00 	cmp.w	r8, #0
 8013492:	d009      	beq.n	80134a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013494:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8013498:	9019      	str	r0, [sp, #100]	@ 0x64
 801349a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801349e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80134a2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80134a6:	911d      	str	r1, [sp, #116]	@ 0x74
 80134a8:	1ad2      	subs	r2, r2, r3
 80134aa:	e6b5      	b.n	8013218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80134ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80134ae:	681b      	ldr	r3, [r3, #0]
 80134b0:	b923      	cbnz	r3, 80134bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134b2:	4b04      	ldr	r3, [pc, #16]	@ (80134c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80134b4:	6818      	ldr	r0, [r3, #0]
 80134b6:	6803      	ldr	r3, [r0, #0]
 80134b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80134ba:	4798      	blx	r3
 80134bc:	b05b      	add	sp, #364	@ 0x16c
 80134be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134c2:	bf00      	nop
 80134c4:	20013f60 	.word	0x20013f60

080134c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80134c8:	b570      	push	{r4, r5, r6, lr}
 80134ca:	4604      	mov	r4, r0
 80134cc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80134d0:	9805      	ldr	r0, [sp, #20]
 80134d2:	6061      	str	r1, [r4, #4]
 80134d4:	2500      	movs	r5, #0
 80134d6:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80134da:	8263      	strh	r3, [r4, #18]
 80134dc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80134e0:	8025      	strh	r5, [r4, #0]
 80134e2:	7221      	strb	r1, [r4, #8]
 80134e4:	7266      	strb	r6, [r4, #9]
 80134e6:	60e0      	str	r0, [r4, #12]
 80134e8:	8222      	strh	r2, [r4, #16]
 80134ea:	82a3      	strh	r3, [r4, #20]
 80134ec:	82e5      	strh	r5, [r4, #22]
 80134ee:	8325      	strh	r5, [r4, #24]
 80134f0:	8365      	strh	r5, [r4, #26]
 80134f2:	83a5      	strh	r5, [r4, #28]
 80134f4:	83e5      	strh	r5, [r4, #30]
 80134f6:	8425      	strh	r5, [r4, #32]
 80134f8:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 80134fc:	b32e      	cbz	r6, 801354a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80134fe:	6803      	ldr	r3, [r0, #0]
 8013500:	695b      	ldr	r3, [r3, #20]
 8013502:	4798      	blx	r3
 8013504:	4606      	mov	r6, r0
 8013506:	b300      	cbz	r0, 801354a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013508:	68e0      	ldr	r0, [r4, #12]
 801350a:	6803      	ldr	r3, [r0, #0]
 801350c:	4631      	mov	r1, r6
 801350e:	68db      	ldr	r3, [r3, #12]
 8013510:	4798      	blx	r3
 8013512:	4605      	mov	r5, r0
 8013514:	b1c8      	cbz	r0, 801354a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013516:	7b43      	ldrb	r3, [r0, #13]
 8013518:	7a82      	ldrb	r2, [r0, #10]
 801351a:	005b      	lsls	r3, r3, #1
 801351c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013520:	4313      	orrs	r3, r2
 8013522:	8423      	strh	r3, [r4, #32]
 8013524:	7a63      	ldrb	r3, [r4, #9]
 8013526:	2b06      	cmp	r3, #6
 8013528:	d10f      	bne.n	801354a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801352a:	68e0      	ldr	r0, [r4, #12]
 801352c:	6803      	ldr	r3, [r0, #0]
 801352e:	462a      	mov	r2, r5
 8013530:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013532:	4631      	mov	r1, r6
 8013534:	4798      	blx	r3
 8013536:	7b6b      	ldrb	r3, [r5, #13]
 8013538:	005b      	lsls	r3, r3, #1
 801353a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801353e:	7aab      	ldrb	r3, [r5, #10]
 8013540:	4313      	orrs	r3, r2
 8013542:	4418      	add	r0, r3
 8013544:	8c23      	ldrh	r3, [r4, #32]
 8013546:	4418      	add	r0, r3
 8013548:	8420      	strh	r0, [r4, #32]
 801354a:	4620      	mov	r0, r4
 801354c:	bd70      	pop	{r4, r5, r6, pc}

0801354e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801354e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013552:	2400      	movs	r4, #0
 8013554:	b085      	sub	sp, #20
 8013556:	4681      	mov	r9, r0
 8013558:	4688      	mov	r8, r1
 801355a:	4692      	mov	sl, r2
 801355c:	469b      	mov	fp, r3
 801355e:	4627      	mov	r7, r4
 8013560:	4625      	mov	r5, r4
 8013562:	4626      	mov	r6, r4
 8013564:	4554      	cmp	r4, sl
 8013566:	da2a      	bge.n	80135be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013568:	2300      	movs	r3, #0
 801356a:	9303      	str	r3, [sp, #12]
 801356c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013570:	429d      	cmp	r5, r3
 8013572:	d004      	beq.n	801357e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013574:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013578:	429d      	cmp	r5, r3
 801357a:	bf18      	it	ne
 801357c:	462f      	movne	r7, r5
 801357e:	ab03      	add	r3, sp, #12
 8013580:	4642      	mov	r2, r8
 8013582:	4659      	mov	r1, fp
 8013584:	4648      	mov	r0, r9
 8013586:	f003 fbcf 	bl	8016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801358a:	4605      	mov	r5, r0
 801358c:	b1b8      	cbz	r0, 80135be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801358e:	280a      	cmp	r0, #10
 8013590:	d015      	beq.n	80135be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013592:	9a03      	ldr	r2, [sp, #12]
 8013594:	b18a      	cbz	r2, 80135ba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013596:	7b50      	ldrb	r0, [r2, #13]
 8013598:	7a93      	ldrb	r3, [r2, #10]
 801359a:	8895      	ldrh	r5, [r2, #4]
 801359c:	0040      	lsls	r0, r0, #1
 801359e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80135a2:	4303      	orrs	r3, r0
 80135a4:	9301      	str	r3, [sp, #4]
 80135a6:	f8d8 3000 	ldr.w	r3, [r8]
 80135aa:	4639      	mov	r1, r7
 80135ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80135ae:	4640      	mov	r0, r8
 80135b0:	4798      	blx	r3
 80135b2:	9b01      	ldr	r3, [sp, #4]
 80135b4:	4418      	add	r0, r3
 80135b6:	4406      	add	r6, r0
 80135b8:	b2b6      	uxth	r6, r6
 80135ba:	3401      	adds	r4, #1
 80135bc:	e7d2      	b.n	8013564 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80135be:	4630      	mov	r0, r6
 80135c0:	b005      	add	sp, #20
 80135c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080135c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80135c6:	2a02      	cmp	r2, #2
 80135c8:	b530      	push	{r4, r5, lr}
 80135ca:	d011      	beq.n	80135f0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80135cc:	2a03      	cmp	r2, #3
 80135ce:	d01c      	beq.n	801360a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80135d0:	2a01      	cmp	r2, #1
 80135d2:	d10c      	bne.n	80135ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80135d4:	888b      	ldrh	r3, [r1, #4]
 80135d6:	8801      	ldrh	r1, [r0, #0]
 80135d8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80135dc:	8844      	ldrh	r4, [r0, #2]
 80135de:	8004      	strh	r4, [r0, #0]
 80135e0:	1a5b      	subs	r3, r3, r1
 80135e2:	1a9b      	subs	r3, r3, r2
 80135e4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80135e8:	8043      	strh	r3, [r0, #2]
 80135ea:	8081      	strh	r1, [r0, #4]
 80135ec:	80c2      	strh	r2, [r0, #6]
 80135ee:	bd30      	pop	{r4, r5, pc}
 80135f0:	88cb      	ldrh	r3, [r1, #6]
 80135f2:	8842      	ldrh	r2, [r0, #2]
 80135f4:	1a9b      	subs	r3, r3, r2
 80135f6:	88c2      	ldrh	r2, [r0, #6]
 80135f8:	1a9b      	subs	r3, r3, r2
 80135fa:	888a      	ldrh	r2, [r1, #4]
 80135fc:	8801      	ldrh	r1, [r0, #0]
 80135fe:	8043      	strh	r3, [r0, #2]
 8013600:	1a52      	subs	r2, r2, r1
 8013602:	8881      	ldrh	r1, [r0, #4]
 8013604:	1a52      	subs	r2, r2, r1
 8013606:	8002      	strh	r2, [r0, #0]
 8013608:	e7f1      	b.n	80135ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801360a:	88cb      	ldrh	r3, [r1, #6]
 801360c:	8841      	ldrh	r1, [r0, #2]
 801360e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013612:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013616:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801361a:	8045      	strh	r5, [r0, #2]
 801361c:	1a5b      	subs	r3, r3, r1
 801361e:	1a9b      	subs	r3, r3, r2
 8013620:	8003      	strh	r3, [r0, #0]
 8013622:	8082      	strh	r2, [r0, #4]
 8013624:	80c4      	strh	r4, [r0, #6]
 8013626:	e7e2      	b.n	80135ee <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013628 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801362c:	b09f      	sub	sp, #124	@ 0x7c
 801362e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8013630:	9312      	str	r3, [sp, #72]	@ 0x48
 8013632:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013634:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013636:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8013638:	8812      	ldrh	r2, [r2, #0]
 801363a:	889b      	ldrh	r3, [r3, #4]
 801363c:	900e      	str	r0, [sp, #56]	@ 0x38
 801363e:	4413      	add	r3, r2
 8013640:	6828      	ldr	r0, [r5, #0]
 8013642:	9117      	str	r1, [sp, #92]	@ 0x5c
 8013644:	b21b      	sxth	r3, r3
 8013646:	9311      	str	r3, [sp, #68]	@ 0x44
 8013648:	6803      	ldr	r3, [r0, #0]
 801364a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801364e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013650:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8013654:	4798      	blx	r3
 8013656:	682b      	ldr	r3, [r5, #0]
 8013658:	9013      	str	r0, [sp, #76]	@ 0x4c
 801365a:	7b1a      	ldrb	r2, [r3, #12]
 801365c:	7adb      	ldrb	r3, [r3, #11]
 801365e:	9215      	str	r2, [sp, #84]	@ 0x54
 8013660:	9316      	str	r3, [sp, #88]	@ 0x58
 8013662:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8013666:	2c00      	cmp	r4, #0
 8013668:	d067      	beq.n	801373a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801366a:	7c2b      	ldrb	r3, [r5, #16]
 801366c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801366e:	2b06      	cmp	r3, #6
 8013670:	bf14      	ite	ne
 8013672:	2301      	movne	r3, #1
 8013674:	2302      	moveq	r3, #2
 8013676:	4413      	add	r3, r2
 8013678:	f04f 0900 	mov.w	r9, #0
 801367c:	9310      	str	r3, [sp, #64]	@ 0x40
 801367e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8013682:	464c      	mov	r4, r9
 8013684:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8013688:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801368a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801368c:	4293      	cmp	r3, r2
 801368e:	f280 808b 	bge.w	80137a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013692:	2300      	movs	r3, #0
 8013694:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8013698:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 801369c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80136a0:	429c      	cmp	r4, r3
 80136a2:	d006      	beq.n	80136b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 80136a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80136a6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80136aa:	4294      	cmp	r4, r2
 80136ac:	bf18      	it	ne
 80136ae:	4623      	movne	r3, r4
 80136b0:	930c      	str	r3, [sp, #48]	@ 0x30
 80136b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80136b4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80136b6:	682a      	ldr	r2, [r5, #0]
 80136b8:	428b      	cmp	r3, r1
 80136ba:	db40      	blt.n	801373e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80136bc:	6813      	ldr	r3, [r2, #0]
 80136be:	4610      	mov	r0, r2
 80136c0:	695b      	ldr	r3, [r3, #20]
 80136c2:	4798      	blx	r3
 80136c4:	4604      	mov	r4, r0
 80136c6:	6828      	ldr	r0, [r5, #0]
 80136c8:	6803      	ldr	r3, [r0, #0]
 80136ca:	aa1d      	add	r2, sp, #116	@ 0x74
 80136cc:	689f      	ldr	r7, [r3, #8]
 80136ce:	4621      	mov	r1, r4
 80136d0:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80136d4:	47b8      	blx	r7
 80136d6:	901c      	str	r0, [sp, #112]	@ 0x70
 80136d8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80136dc:	429c      	cmp	r4, r3
 80136de:	f000 80ea 	beq.w	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80136e2:	f242 030b 	movw	r3, #8203	@ 0x200b
 80136e6:	429c      	cmp	r4, r3
 80136e8:	f000 80e5 	beq.w	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80136ec:	2c00      	cmp	r4, #0
 80136ee:	f000 810c 	beq.w	801390a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80136f2:	2c0a      	cmp	r4, #10
 80136f4:	d05e      	beq.n	80137b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80136f6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80136f8:	b36a      	cbz	r2, 8013756 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80136fa:	8894      	ldrh	r4, [r2, #4]
 80136fc:	f1bb 0f00 	cmp.w	fp, #0
 8013700:	d03a      	beq.n	8013778 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8013702:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013706:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801370a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801370e:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013712:	f1bb 0f01 	cmp.w	fp, #1
 8013716:	ea49 0903 	orr.w	r9, r9, r3
 801371a:	d133      	bne.n	8013784 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 801371c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801371e:	eba6 0609 	sub.w	r6, r6, r9
 8013722:	2b00      	cmp	r3, #0
 8013724:	d14d      	bne.n	80137c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013726:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8013728:	eb09 0306 	add.w	r3, r9, r6
 801372c:	4413      	add	r3, r2
 801372e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013730:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013734:	4293      	cmp	r3, r2
 8013736:	da4e      	bge.n	80137d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013738:	e036      	b.n	80137a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801373a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801373c:	e79c      	b.n	8013678 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 801373e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013742:	9301      	str	r3, [sp, #4]
 8013744:	ab1d      	add	r3, sp, #116	@ 0x74
 8013746:	9300      	str	r3, [sp, #0]
 8013748:	4659      	mov	r1, fp
 801374a:	ab1c      	add	r3, sp, #112	@ 0x70
 801374c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801374e:	f003 fb34 	bl	8016dba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013752:	4604      	mov	r4, r0
 8013754:	e7c0      	b.n	80136d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013756:	6828      	ldr	r0, [r5, #0]
 8013758:	6803      	ldr	r3, [r0, #0]
 801375a:	691b      	ldr	r3, [r3, #16]
 801375c:	4798      	blx	r3
 801375e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013762:	4298      	cmp	r0, r3
 8013764:	f000 80a7 	beq.w	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013768:	f242 030b 	movw	r3, #8203	@ 0x200b
 801376c:	4298      	cmp	r0, r3
 801376e:	f000 80a2 	beq.w	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013772:	f1bb 0f00 	cmp.w	fp, #0
 8013776:	d100      	bne.n	801377a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013778:	444e      	add	r6, r9
 801377a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801377c:	2a00      	cmp	r2, #0
 801377e:	d1c0      	bne.n	8013702 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013780:	4691      	mov	r9, r2
 8013782:	e098      	b.n	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013784:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013786:	2b00      	cmp	r3, #0
 8013788:	f000 80c1 	beq.w	801390e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801378c:	f1bb 0f00 	cmp.w	fp, #0
 8013790:	d117      	bne.n	80137c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013792:	6828      	ldr	r0, [r5, #0]
 8013794:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013796:	6803      	ldr	r3, [r0, #0]
 8013798:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801379a:	4798      	blx	r3
 801379c:	4406      	add	r6, r0
 801379e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80137a0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80137a2:	1af3      	subs	r3, r6, r3
 80137a4:	4293      	cmp	r3, r2
 80137a6:	dd16      	ble.n	80137d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80137a8:	2c00      	cmp	r4, #0
 80137aa:	f000 80ae 	beq.w	801390a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80137ae:	2c0a      	cmp	r4, #10
 80137b0:	f040 809c 	bne.w	80138ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80137b4:	240a      	movs	r4, #10
 80137b6:	fab4 f084 	clz	r0, r4
 80137ba:	0940      	lsrs	r0, r0, #5
 80137bc:	b01f      	add	sp, #124	@ 0x7c
 80137be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137c2:	6828      	ldr	r0, [r5, #0]
 80137c4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80137c6:	6803      	ldr	r3, [r0, #0]
 80137c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80137ca:	4798      	blx	r3
 80137cc:	f1bb 0f01 	cmp.w	fp, #1
 80137d0:	eba6 0600 	sub.w	r6, r6, r0
 80137d4:	d0a7      	beq.n	8013726 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80137d6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80137d8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80137da:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80137de:	f9b3 8000 	ldrsh.w	r8, [r3]
 80137e2:	7b43      	ldrb	r3, [r0, #13]
 80137e4:	015b      	lsls	r3, r3, #5
 80137e6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80137ea:	7983      	ldrb	r3, [r0, #6]
 80137ec:	4431      	add	r1, r6
 80137ee:	4313      	orrs	r3, r2
 80137f0:	440b      	add	r3, r1
 80137f2:	4543      	cmp	r3, r8
 80137f4:	db5f      	blt.n	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80137f6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80137f8:	4299      	cmp	r1, r3
 80137fa:	da5c      	bge.n	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80137fc:	6828      	ldr	r0, [r5, #0]
 80137fe:	6803      	ldr	r3, [r0, #0]
 8013800:	45b0      	cmp	r8, r6
 8013802:	bfc8      	it	gt
 8013804:	eba8 0806 	subgt.w	r8, r8, r6
 8013808:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801380a:	bfcc      	ite	gt
 801380c:	fa1f f888 	uxthgt.w	r8, r8
 8013810:	f04f 0800 	movle.w	r8, #0
 8013814:	4798      	blx	r3
 8013816:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013818:	7b53      	ldrb	r3, [r2, #13]
 801381a:	00d9      	lsls	r1, r3, #3
 801381c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8013820:	7a11      	ldrb	r1, [r2, #8]
 8013822:	4339      	orrs	r1, r7
 8013824:	065f      	lsls	r7, r3, #25
 8013826:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013828:	bf44      	itt	mi
 801382a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801382e:	b209      	sxthmi	r1, r1
 8013830:	19c7      	adds	r7, r0, r7
 8013832:	1a7f      	subs	r7, r7, r1
 8013834:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8013836:	b2bf      	uxth	r7, r7
 8013838:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801383c:	fa0f fa87 	sxth.w	sl, r7
 8013840:	4551      	cmp	r1, sl
 8013842:	dd3c      	ble.n	80138be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8013844:	011b      	lsls	r3, r3, #4
 8013846:	79d0      	ldrb	r0, [r2, #7]
 8013848:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801384c:	4303      	orrs	r3, r0
 801384e:	449a      	add	sl, r3
 8013850:	4551      	cmp	r1, sl
 8013852:	dc30      	bgt.n	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013854:	1bcf      	subs	r7, r1, r7
 8013856:	b23f      	sxth	r7, r7
 8013858:	468a      	mov	sl, r1
 801385a:	9219      	str	r2, [sp, #100]	@ 0x64
 801385c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801385e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8013860:	6828      	ldr	r0, [r5, #0]
 8013862:	2a00      	cmp	r2, #0
 8013864:	d12d      	bne.n	80138c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8013866:	9318      	str	r3, [sp, #96]	@ 0x60
 8013868:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801386a:	6819      	ldr	r1, [r3, #0]
 801386c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801386e:	6801      	ldr	r1, [r0, #0]
 8013870:	9314      	str	r3, [sp, #80]	@ 0x50
 8013872:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8013874:	4788      	blx	r1
 8013876:	79a9      	ldrb	r1, [r5, #6]
 8013878:	910b      	str	r1, [sp, #44]	@ 0x2c
 801387a:	7ba9      	ldrb	r1, [r5, #14]
 801387c:	910a      	str	r1, [sp, #40]	@ 0x28
 801387e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8013882:	9109      	str	r1, [sp, #36]	@ 0x24
 8013884:	68a9      	ldr	r1, [r5, #8]
 8013886:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013888:	9306      	str	r3, [sp, #24]
 801388a:	b2bf      	uxth	r7, r7
 801388c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8013890:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013892:	9304      	str	r3, [sp, #16]
 8013894:	44b0      	add	r8, r6
 8013896:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801389a:	fa0f f388 	sxth.w	r3, r8
 801389e:	9300      	str	r3, [sp, #0]
 80138a0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80138a2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80138a4:	9205      	str	r2, [sp, #20]
 80138a6:	f8cd a004 	str.w	sl, [sp, #4]
 80138aa:	681a      	ldr	r2, [r3, #0]
 80138ac:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80138ae:	685b      	ldr	r3, [r3, #4]
 80138b0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80138b2:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80138b4:	47b8      	blx	r7
 80138b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80138b8:	3301      	adds	r3, #1
 80138ba:	930d      	str	r3, [sp, #52]	@ 0x34
 80138bc:	e6e4      	b.n	8013688 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80138be:	2700      	movs	r7, #0
 80138c0:	e7cb      	b.n	801385a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80138c2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80138c4:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80138c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80138ca:	f8dc 1000 	ldr.w	r1, [ip]
 80138ce:	e9cd 6204 	strd	r6, r2, [sp, #16]
 80138d2:	79aa      	ldrb	r2, [r5, #6]
 80138d4:	9203      	str	r2, [sp, #12]
 80138d6:	7baa      	ldrb	r2, [r5, #14]
 80138d8:	9202      	str	r2, [sp, #8]
 80138da:	68aa      	ldr	r2, [r5, #8]
 80138dc:	e9cd 0200 	strd	r0, r2, [sp]
 80138e0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80138e2:	688f      	ldr	r7, [r1, #8]
 80138e4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80138e6:	4660      	mov	r0, ip
 80138e8:	47b8      	blx	r7
 80138ea:	e7e4      	b.n	80138b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80138ec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80138ee:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80138f0:	3501      	adds	r5, #1
 80138f2:	429d      	cmp	r5, r3
 80138f4:	f6bf af5f 	bge.w	80137b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80138f8:	4659      	mov	r1, fp
 80138fa:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80138fc:	f7f2 fe72 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013900:	4604      	mov	r4, r0
 8013902:	b110      	cbz	r0, 801390a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8013904:	280a      	cmp	r0, #10
 8013906:	d1f2      	bne.n	80138ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8013908:	e754      	b.n	80137b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801390a:	2400      	movs	r4, #0
 801390c:	e753      	b.n	80137b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801390e:	f1bb 0f00 	cmp.w	fp, #0
 8013912:	f43f af44 	beq.w	801379e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8013916:	e75e      	b.n	80137d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08013918 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013918:	b530      	push	{r4, r5, lr}
 801391a:	8ac4      	ldrh	r4, [r0, #22]
 801391c:	8b45      	ldrh	r5, [r0, #26]
 801391e:	8343      	strh	r3, [r0, #26]
 8013920:	442c      	add	r4, r5
 8013922:	1ae4      	subs	r4, r4, r3
 8013924:	82c4      	strh	r4, [r0, #22]
 8013926:	8b83      	ldrh	r3, [r0, #28]
 8013928:	8b04      	ldrh	r4, [r0, #24]
 801392a:	4422      	add	r2, r4
 801392c:	440c      	add	r4, r1
 801392e:	1a59      	subs	r1, r3, r1
 8013930:	83c2      	strh	r2, [r0, #30]
 8013932:	8304      	strh	r4, [r0, #24]
 8013934:	8381      	strh	r1, [r0, #28]
 8013936:	bd30      	pop	{r4, r5, pc}

08013938 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801393c:	4604      	mov	r4, r0
 801393e:	8a47      	ldrh	r7, [r0, #18]
 8013940:	68c0      	ldr	r0, [r0, #12]
 8013942:	6803      	ldr	r3, [r0, #0]
 8013944:	b085      	sub	sp, #20
 8013946:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013948:	4798      	blx	r3
 801394a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801394e:	7a63      	ldrb	r3, [r4, #9]
 8013950:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013954:	42b7      	cmp	r7, r6
 8013956:	f103 33ff 	add.w	r3, r3, #4294967295
 801395a:	bfac      	ite	ge
 801395c:	f04f 0900 	movge.w	r9, #0
 8013960:	f04f 0901 	movlt.w	r9, #1
 8013964:	2b05      	cmp	r3, #5
 8013966:	d804      	bhi.n	8013972 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013968:	e8df f003 	tbb	[pc, r3]
 801396c:	470e0854 	.word	0x470e0854
 8013970:	4c4c      	.short	0x4c4c
 8013972:	2500      	movs	r5, #0
 8013974:	46a9      	mov	r9, r5
 8013976:	462e      	mov	r6, r5
 8013978:	462f      	mov	r7, r5
 801397a:	e00d      	b.n	8013998 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801397c:	42b7      	cmp	r7, r6
 801397e:	bfb4      	ite	lt
 8013980:	2600      	movlt	r6, #0
 8013982:	2601      	movge	r6, #1
 8013984:	2500      	movs	r5, #0
 8013986:	e7f7      	b.n	8013978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013988:	42b7      	cmp	r7, r6
 801398a:	464d      	mov	r5, r9
 801398c:	f04f 0900 	mov.w	r9, #0
 8013990:	bfb4      	ite	lt
 8013992:	2600      	movlt	r6, #0
 8013994:	2601      	movge	r6, #1
 8013996:	464f      	mov	r7, r9
 8013998:	f04f 0800 	mov.w	r8, #0
 801399c:	f8a4 8016 	strh.w	r8, [r4, #22]
 80139a0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80139a4:	f8cd 8004 	str.w	r8, [sp, #4]
 80139a8:	2300      	movs	r3, #0
 80139aa:	9303      	str	r3, [sp, #12]
 80139ac:	8823      	ldrh	r3, [r4, #0]
 80139ae:	2b20      	cmp	r3, #32
 80139b0:	d034      	beq.n	8013a1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80139b2:	f242 010b 	movw	r1, #8203	@ 0x200b
 80139b6:	1a5a      	subs	r2, r3, r1
 80139b8:	f1d2 0a00 	rsbs	sl, r2, #0
 80139bc:	eb4a 0a02 	adc.w	sl, sl, r2
 80139c0:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80139c4:	4293      	cmp	r3, r2
 80139c6:	d009      	beq.n	80139dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80139c8:	428b      	cmp	r3, r1
 80139ca:	9a01      	ldr	r2, [sp, #4]
 80139cc:	bf18      	it	ne
 80139ce:	461a      	movne	r2, r3
 80139d0:	9201      	str	r2, [sp, #4]
 80139d2:	bf0c      	ite	eq
 80139d4:	f04f 0a01 	moveq.w	sl, #1
 80139d8:	f04f 0a00 	movne.w	sl, #0
 80139dc:	ab03      	add	r3, sp, #12
 80139de:	68e2      	ldr	r2, [r4, #12]
 80139e0:	7a21      	ldrb	r1, [r4, #8]
 80139e2:	6860      	ldr	r0, [r4, #4]
 80139e4:	f003 f9a0 	bl	8016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80139e8:	8020      	strh	r0, [r4, #0]
 80139ea:	b9d8      	cbnz	r0, 8013a24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80139ec:	8ba2      	ldrh	r2, [r4, #28]
 80139ee:	2300      	movs	r3, #0
 80139f0:	4611      	mov	r1, r2
 80139f2:	4620      	mov	r0, r4
 80139f4:	f7ff ff90 	bl	8013918 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80139f8:	e06e      	b.n	8013ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80139fa:	2500      	movs	r5, #0
 80139fc:	46a9      	mov	r9, r5
 80139fe:	462e      	mov	r6, r5
 8013a00:	2701      	movs	r7, #1
 8013a02:	e7c9      	b.n	8013998 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013a04:	42b7      	cmp	r7, r6
 8013a06:	f04f 0500 	mov.w	r5, #0
 8013a0a:	bfb4      	ite	lt
 8013a0c:	2700      	movlt	r7, #0
 8013a0e:	2701      	movge	r7, #1
 8013a10:	462e      	mov	r6, r5
 8013a12:	e7c1      	b.n	8013998 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013a14:	2500      	movs	r5, #0
 8013a16:	46a9      	mov	r9, r5
 8013a18:	2601      	movs	r6, #1
 8013a1a:	e7ad      	b.n	8013978 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013a1c:	9301      	str	r3, [sp, #4]
 8013a1e:	f04f 0a01 	mov.w	sl, #1
 8013a22:	e7db      	b.n	80139dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013a24:	8b63      	ldrh	r3, [r4, #26]
 8013a26:	280a      	cmp	r0, #10
 8013a28:	f103 0301 	add.w	r3, r3, #1
 8013a2c:	8363      	strh	r3, [r4, #26]
 8013a2e:	d0dd      	beq.n	80139ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013a30:	9a03      	ldr	r2, [sp, #12]
 8013a32:	bb62      	cbnz	r2, 8013a8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013a34:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013a38:	4298      	cmp	r0, r3
 8013a3a:	d003      	beq.n	8013a44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013a3c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013a40:	4298      	cmp	r0, r3
 8013a42:	d1b1      	bne.n	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013a44:	8823      	ldrh	r3, [r4, #0]
 8013a46:	8ba1      	ldrh	r1, [r4, #28]
 8013a48:	2b20      	cmp	r3, #32
 8013a4a:	d003      	beq.n	8013a54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8013a4c:	f242 000b 	movw	r0, #8203	@ 0x200b
 8013a50:	4283      	cmp	r3, r0
 8013a52:	d131      	bne.n	8013ab8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8013a54:	f1ba 0f00 	cmp.w	sl, #0
 8013a58:	bf0a      	itet	eq
 8013a5a:	4688      	moveq	r8, r1
 8013a5c:	4650      	movne	r0, sl
 8013a5e:	2001      	moveq	r0, #1
 8013a60:	440a      	add	r2, r1
 8013a62:	8b23      	ldrh	r3, [r4, #24]
 8013a64:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013a68:	b292      	uxth	r2, r2
 8013a6a:	83a2      	strh	r2, [r4, #28]
 8013a6c:	4413      	add	r3, r2
 8013a6e:	f1b9 0f00 	cmp.w	r9, #0
 8013a72:	d102      	bne.n	8013a7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8013a74:	2d00      	cmp	r5, #0
 8013a76:	d042      	beq.n	8013afe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8013a78:	b300      	cbz	r0, 8013abc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8013a7a:	8c21      	ldrh	r1, [r4, #32]
 8013a7c:	4419      	add	r1, r3
 8013a7e:	458c      	cmp	ip, r1
 8013a80:	da37      	bge.n	8013af2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013a82:	8ae1      	ldrh	r1, [r4, #22]
 8013a84:	2900      	cmp	r1, #0
 8013a86:	d034      	beq.n	8013af2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013a88:	4563      	cmp	r3, ip
 8013a8a:	dd8d      	ble.n	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013a8c:	e01d      	b.n	8013aca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8013a8e:	8893      	ldrh	r3, [r2, #4]
 8013a90:	8023      	strh	r3, [r4, #0]
 8013a92:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8013a96:	9901      	ldr	r1, [sp, #4]
 8013a98:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8013a9c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8013aa0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013aa4:	ea4b 0b00 	orr.w	fp, fp, r0
 8013aa8:	68e0      	ldr	r0, [r4, #12]
 8013aaa:	6803      	ldr	r3, [r0, #0]
 8013aac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013aae:	4798      	blx	r3
 8013ab0:	eb0b 0200 	add.w	r2, fp, r0
 8013ab4:	b292      	uxth	r2, r2
 8013ab6:	e7c5      	b.n	8013a44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8013ab8:	2000      	movs	r0, #0
 8013aba:	e7d1      	b.n	8013a60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8013abc:	4563      	cmp	r3, ip
 8013abe:	f77f af73 	ble.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013ac2:	8ae3      	ldrh	r3, [r4, #22]
 8013ac4:	2b00      	cmp	r3, #0
 8013ac6:	f43f af6f 	beq.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013aca:	2301      	movs	r3, #1
 8013acc:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8013ad0:	8c22      	ldrh	r2, [r4, #32]
 8013ad2:	8be3      	ldrh	r3, [r4, #30]
 8013ad4:	4413      	add	r3, r2
 8013ad6:	83e3      	strh	r3, [r4, #30]
 8013ad8:	68e0      	ldr	r0, [r4, #12]
 8013ada:	6803      	ldr	r3, [r0, #0]
 8013adc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013ade:	4798      	blx	r3
 8013ae0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013ae4:	4418      	add	r0, r3
 8013ae6:	8a63      	ldrh	r3, [r4, #18]
 8013ae8:	1a18      	subs	r0, r3, r0
 8013aea:	8260      	strh	r0, [r4, #18]
 8013aec:	b005      	add	sp, #20
 8013aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013af2:	2300      	movs	r3, #0
 8013af4:	4611      	mov	r1, r2
 8013af6:	4620      	mov	r0, r4
 8013af8:	f7ff ff0e 	bl	8013918 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013afc:	e754      	b.n	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013afe:	4563      	cmp	r3, ip
 8013b00:	dd14      	ble.n	8013b2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013b02:	b117      	cbz	r7, 8013b0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013b04:	2301      	movs	r3, #1
 8013b06:	460a      	mov	r2, r1
 8013b08:	e772      	b.n	80139f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8013b0a:	2e00      	cmp	r6, #0
 8013b0c:	f43f af4c 	beq.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b10:	2800      	cmp	r0, #0
 8013b12:	f47f af49 	bne.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b16:	f1ba 0f00 	cmp.w	sl, #0
 8013b1a:	d002      	beq.n	8013b22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8013b1c:	2301      	movs	r3, #1
 8013b1e:	4642      	mov	r2, r8
 8013b20:	e767      	b.n	80139f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013b22:	8ae3      	ldrh	r3, [r4, #22]
 8013b24:	2b00      	cmp	r3, #0
 8013b26:	f43f af3f 	beq.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b2a:	e7d5      	b.n	8013ad8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013b2c:	2800      	cmp	r0, #0
 8013b2e:	f47f af3b 	bne.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b32:	f1ba 0f00 	cmp.w	sl, #0
 8013b36:	f43f af37 	beq.w	80139a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013b3a:	2301      	movs	r3, #1
 8013b3c:	4642      	mov	r2, r8
 8013b3e:	e7da      	b.n	8013af6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013b40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b42:	4605      	mov	r5, r0
 8013b44:	b08f      	sub	sp, #60	@ 0x3c
 8013b46:	4617      	mov	r7, r2
 8013b48:	461c      	mov	r4, r3
 8013b4a:	460e      	mov	r6, r1
 8013b4c:	b1d1      	cbz	r1, 8013b84 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8013b4e:	681b      	ldr	r3, [r3, #0]
 8013b50:	4620      	mov	r0, r4
 8013b52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b54:	4798      	blx	r3
 8013b56:	4240      	negs	r0, r0
 8013b58:	b200      	sxth	r0, r0
 8013b5a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8013b5e:	9603      	str	r6, [sp, #12]
 8013b60:	9700      	str	r7, [sp, #0]
 8013b62:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013b66:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8013b6a:	4629      	mov	r1, r5
 8013b6c:	a805      	add	r0, sp, #20
 8013b6e:	f7ff fcab 	bl	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013b72:	2401      	movs	r4, #1
 8013b74:	a805      	add	r0, sp, #20
 8013b76:	f7ff fedf 	bl	8013938 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013b7a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013b7e:	b163      	cbz	r3, 8013b9a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8013b80:	3401      	adds	r4, #1
 8013b82:	e7f7      	b.n	8013b74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013b84:	f003 f99e 	bl	8016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013b88:	2401      	movs	r4, #1
 8013b8a:	280a      	cmp	r0, #10
 8013b8c:	4628      	mov	r0, r5
 8013b8e:	bf08      	it	eq
 8013b90:	3401      	addeq	r4, #1
 8013b92:	f003 f997 	bl	8016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013b96:	2800      	cmp	r0, #0
 8013b98:	d1f7      	bne.n	8013b8a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8013b9a:	b2a0      	uxth	r0, r4
 8013b9c:	b00f      	add	sp, #60	@ 0x3c
 8013b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013ba0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ba4:	b0e3      	sub	sp, #396	@ 0x18c
 8013ba6:	461c      	mov	r4, r3
 8013ba8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 8013baa:	4683      	mov	fp, r0
 8013bac:	4688      	mov	r8, r1
 8013bae:	2b00      	cmp	r3, #0
 8013bb0:	f000 8112 	beq.w	8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013bb4:	6823      	ldr	r3, [r4, #0]
 8013bb6:	2b00      	cmp	r3, #0
 8013bb8:	f000 810e 	beq.w	8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013bbc:	7ba3      	ldrb	r3, [r4, #14]
 8013bbe:	2b00      	cmp	r3, #0
 8013bc0:	f000 810a 	beq.w	8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013bc4:	6810      	ldr	r0, [r2, #0]
 8013bc6:	6851      	ldr	r1, [r2, #4]
 8013bc8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8013bcc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8013bd0:	ad0a      	add	r5, sp, #40	@ 0x28
 8013bd2:	462b      	mov	r3, r5
 8013bd4:	c303      	stmia	r3!, {r0, r1}
 8013bd6:	2100      	movs	r1, #0
 8013bd8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013bdc:	910c      	str	r1, [sp, #48]	@ 0x30
 8013bde:	79a2      	ldrb	r2, [r4, #6]
 8013be0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013be4:	a90c      	add	r1, sp, #48	@ 0x30
 8013be6:	4628      	mov	r0, r5
 8013be8:	f7ff fced 	bl	80135c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013bec:	a90c      	add	r1, sp, #48	@ 0x30
 8013bee:	4608      	mov	r0, r1
 8013bf0:	79a2      	ldrb	r2, [r4, #6]
 8013bf2:	f7ff fce8 	bl	80135c6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013bf6:	a817      	add	r0, sp, #92	@ 0x5c
 8013bf8:	f002 fd0f 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 8013bfc:	6820      	ldr	r0, [r4, #0]
 8013bfe:	6803      	ldr	r3, [r0, #0]
 8013c00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013c02:	4798      	blx	r3
 8013c04:	4606      	mov	r6, r0
 8013c06:	6820      	ldr	r0, [r4, #0]
 8013c08:	6803      	ldr	r3, [r0, #0]
 8013c0a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013c0c:	4798      	blx	r3
 8013c0e:	4633      	mov	r3, r6
 8013c10:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013c12:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013c14:	9000      	str	r0, [sp, #0]
 8013c16:	a817      	add	r0, sp, #92	@ 0x5c
 8013c18:	f002 fd5a 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013c1c:	6820      	ldr	r0, [r4, #0]
 8013c1e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013c22:	6803      	ldr	r3, [r0, #0]
 8013c24:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c26:	4798      	blx	r3
 8013c28:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013c2c:	6823      	ldr	r3, [r4, #0]
 8013c2e:	4607      	mov	r7, r0
 8013c30:	4406      	add	r6, r0
 8013c32:	a830      	add	r0, sp, #192	@ 0xc0
 8013c34:	f893 9009 	ldrb.w	r9, [r3, #9]
 8013c38:	f002 fcef 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 8013c3c:	7c23      	ldrb	r3, [r4, #16]
 8013c3e:	b17b      	cbz	r3, 8013c60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013c40:	6820      	ldr	r0, [r4, #0]
 8013c42:	6803      	ldr	r3, [r0, #0]
 8013c44:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013c46:	4798      	blx	r3
 8013c48:	9009      	str	r0, [sp, #36]	@ 0x24
 8013c4a:	6820      	ldr	r0, [r4, #0]
 8013c4c:	6802      	ldr	r2, [r0, #0]
 8013c4e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8013c50:	4790      	blx	r2
 8013c52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013c54:	9000      	str	r0, [sp, #0]
 8013c56:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013c58:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013c5a:	a830      	add	r0, sp, #192	@ 0xc0
 8013c5c:	f002 fd38 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013c60:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8013c64:	7be2      	ldrb	r2, [r4, #15]
 8013c66:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8013c6a:	1a8a      	subs	r2, r1, r2
 8013c6c:	7c21      	ldrb	r1, [r4, #16]
 8013c6e:	9103      	str	r1, [sp, #12]
 8013c70:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8013c74:	9102      	str	r1, [sp, #8]
 8013c76:	6821      	ldr	r1, [r4, #0]
 8013c78:	9101      	str	r1, [sp, #4]
 8013c7a:	7961      	ldrb	r1, [r4, #5]
 8013c7c:	9100      	str	r1, [sp, #0]
 8013c7e:	b292      	uxth	r2, r2
 8013c80:	a930      	add	r1, sp, #192	@ 0xc0
 8013c82:	a80e      	add	r0, sp, #56	@ 0x38
 8013c84:	f7ff fc20 	bl	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013c88:	2e00      	cmp	r6, #0
 8013c8a:	dc5b      	bgt.n	8013d44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8013c8c:	af17      	add	r7, sp, #92	@ 0x5c
 8013c8e:	f04f 0900 	mov.w	r9, #0
 8013c92:	7c23      	ldrb	r3, [r4, #16]
 8013c94:	2b00      	cmp	r3, #0
 8013c96:	f000 80b1 	beq.w	8013dfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8013c9a:	a80e      	add	r0, sp, #56	@ 0x38
 8013c9c:	f7ff fe4c 	bl	8013938 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013ca0:	f1ba 0f00 	cmp.w	sl, #0
 8013ca4:	f000 80a5 	beq.w	8013df2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013ca8:	7c23      	ldrb	r3, [r4, #16]
 8013caa:	9309      	str	r3, [sp, #36]	@ 0x24
 8013cac:	2264      	movs	r2, #100	@ 0x64
 8013cae:	4639      	mov	r1, r7
 8013cb0:	a849      	add	r0, sp, #292	@ 0x124
 8013cb2:	f014 fad4 	bl	802825e <memcpy>
 8013cb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013cb8:	2b00      	cmp	r3, #0
 8013cba:	f000 80a7 	beq.w	8013e0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8013cbe:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8013cc2:	7922      	ldrb	r2, [r4, #4]
 8013cc4:	2a01      	cmp	r2, #1
 8013cc6:	f040 808a 	bne.w	8013dde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8013cca:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8013cce:	1ac0      	subs	r0, r0, r3
 8013cd0:	2302      	movs	r3, #2
 8013cd2:	fb90 f0f3 	sdiv	r0, r0, r3
 8013cd6:	b200      	sxth	r0, r0
 8013cd8:	7c23      	ldrb	r3, [r4, #16]
 8013cda:	2b00      	cmp	r3, #0
 8013cdc:	f000 808b 	beq.w	8013df6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013ce0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8013ce4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8013ce8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013cec:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013cf0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8013cf4:	4410      	add	r0, r2
 8013cf6:	b200      	sxth	r0, r0
 8013cf8:	9000      	str	r0, [sp, #0]
 8013cfa:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8013cfe:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013d02:	4642      	mov	r2, r8
 8013d04:	2100      	movs	r1, #0
 8013d06:	4658      	mov	r0, fp
 8013d08:	f7ff fc8e 	bl	8013628 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013d0c:	2800      	cmp	r0, #0
 8013d0e:	d163      	bne.n	8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d10:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013d14:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8013d18:	b2b2      	uxth	r2, r6
 8013d1a:	4413      	add	r3, r2
 8013d1c:	1a8a      	subs	r2, r1, r2
 8013d1e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8013d22:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8013d26:	b21b      	sxth	r3, r3
 8013d28:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013d2c:	2a00      	cmp	r2, #0
 8013d2e:	d153      	bne.n	8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d30:	6822      	ldr	r2, [r4, #0]
 8013d32:	8869      	ldrh	r1, [r5, #2]
 8013d34:	7a12      	ldrb	r2, [r2, #8]
 8013d36:	1a9b      	subs	r3, r3, r2
 8013d38:	88ea      	ldrh	r2, [r5, #6]
 8013d3a:	440a      	add	r2, r1
 8013d3c:	b212      	sxth	r2, r2
 8013d3e:	4293      	cmp	r3, r2
 8013d40:	dda7      	ble.n	8013c92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013d42:	e049      	b.n	8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d44:	7c23      	ldrb	r3, [r4, #16]
 8013d46:	444f      	add	r7, r9
 8013d48:	b1c3      	cbz	r3, 8013d7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8013d4a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8013d4e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013d52:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013d56:	443b      	add	r3, r7
 8013d58:	4293      	cmp	r3, r2
 8013d5a:	da97      	bge.n	8013c8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013d5c:	a80e      	add	r0, sp, #56	@ 0x38
 8013d5e:	f7ff fdeb 	bl	8013938 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013d62:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8013d66:	3b01      	subs	r3, #1
 8013d68:	b29b      	uxth	r3, r3
 8013d6a:	454b      	cmp	r3, r9
 8013d6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8013d6e:	d021      	beq.n	8013db4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8013d70:	7961      	ldrb	r1, [r4, #5]
 8013d72:	a817      	add	r0, sp, #92	@ 0x5c
 8013d74:	f7f2 fc36 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013d78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013d7a:	e7f4      	b.n	8013d66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8013d7c:	fa1f f986 	uxth.w	r9, r6
 8013d80:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013d84:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013d88:	443b      	add	r3, r7
 8013d8a:	4293      	cmp	r3, r2
 8013d8c:	f6bf af7e 	bge.w	8013c8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013d90:	a817      	add	r0, sp, #92	@ 0x5c
 8013d92:	f003 f897 	bl	8016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013d96:	b1f8      	cbz	r0, 8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013d98:	280a      	cmp	r0, #10
 8013d9a:	d1f1      	bne.n	8013d80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013d9c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013da0:	444b      	add	r3, r9
 8013da2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013da6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8013daa:	eba3 0309 	sub.w	r3, r3, r9
 8013dae:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013db2:	e7e5      	b.n	8013d80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013db4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8013db8:	b2b3      	uxth	r3, r6
 8013dba:	441a      	add	r2, r3
 8013dbc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013dc0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8013dc4:	1ad3      	subs	r3, r2, r3
 8013dc6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013dca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8013dce:	b11b      	cbz	r3, 8013dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013dd0:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8013dd4:	2b00      	cmp	r3, #0
 8013dd6:	d0ba      	beq.n	8013d4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013dd8:	b063      	add	sp, #396	@ 0x18c
 8013dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013dde:	2a02      	cmp	r2, #2
 8013de0:	d105      	bne.n	8013dee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013de2:	7be2      	ldrb	r2, [r4, #15]
 8013de4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8013de8:	1a80      	subs	r0, r0, r2
 8013dea:	1ac0      	subs	r0, r0, r3
 8013dec:	e773      	b.n	8013cd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8013dee:	2000      	movs	r0, #0
 8013df0:	e772      	b.n	8013cd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013df2:	7be0      	ldrb	r0, [r4, #15]
 8013df4:	e770      	b.n	8013cd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013df6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013dfa:	e773      	b.n	8013ce4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8013dfc:	f1ba 0f00 	cmp.w	sl, #0
 8013e00:	d0f7      	beq.n	8013df2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013e02:	2264      	movs	r2, #100	@ 0x64
 8013e04:	4639      	mov	r1, r7
 8013e06:	a849      	add	r0, sp, #292	@ 0x124
 8013e08:	f014 fa29 	bl	802825e <memcpy>
 8013e0c:	2300      	movs	r3, #0
 8013e0e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013e12:	6821      	ldr	r1, [r4, #0]
 8013e14:	a849      	add	r0, sp, #292	@ 0x124
 8013e16:	f7ff fb9a 	bl	801354e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013e1a:	b203      	sxth	r3, r0
 8013e1c:	e751      	b.n	8013cc2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013e1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013e1e:	2b03      	cmp	r3, #3
 8013e20:	d818      	bhi.n	8013e54 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013e22:	e8df f003 	tbb	[pc, r3]
 8013e26:	0602      	.short	0x0602
 8013e28:	130d      	.short	0x130d
 8013e2a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013e2e:	1850      	adds	r0, r2, r1
 8013e30:	4770      	bx	lr
 8013e32:	8803      	ldrh	r3, [r0, #0]
 8013e34:	8880      	ldrh	r0, [r0, #4]
 8013e36:	4418      	add	r0, r3
 8013e38:	b200      	sxth	r0, r0
 8013e3a:	1a80      	subs	r0, r0, r2
 8013e3c:	3801      	subs	r0, #1
 8013e3e:	4770      	bx	lr
 8013e40:	8803      	ldrh	r3, [r0, #0]
 8013e42:	8880      	ldrh	r0, [r0, #4]
 8013e44:	4418      	add	r0, r3
 8013e46:	b200      	sxth	r0, r0
 8013e48:	1a40      	subs	r0, r0, r1
 8013e4a:	e7f7      	b.n	8013e3c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013e4c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013e50:	4410      	add	r0, r2
 8013e52:	4770      	bx	lr
 8013e54:	2000      	movs	r0, #0
 8013e56:	4770      	bx	lr

08013e58 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8013e58:	2b03      	cmp	r3, #3
 8013e5a:	d817      	bhi.n	8013e8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013e5c:	e8df f003 	tbb	[pc, r3]
 8013e60:	10090602 	.word	0x10090602
 8013e64:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013e68:	1850      	adds	r0, r2, r1
 8013e6a:	4770      	bx	lr
 8013e6c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013e70:	e7fa      	b.n	8013e68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8013e72:	8843      	ldrh	r3, [r0, #2]
 8013e74:	88c0      	ldrh	r0, [r0, #6]
 8013e76:	4418      	add	r0, r3
 8013e78:	b200      	sxth	r0, r0
 8013e7a:	1a80      	subs	r0, r0, r2
 8013e7c:	3801      	subs	r0, #1
 8013e7e:	4770      	bx	lr
 8013e80:	8843      	ldrh	r3, [r0, #2]
 8013e82:	88c0      	ldrh	r0, [r0, #6]
 8013e84:	4418      	add	r0, r3
 8013e86:	b200      	sxth	r0, r0
 8013e88:	1a40      	subs	r0, r0, r1
 8013e8a:	e7f7      	b.n	8013e7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013e8c:	2000      	movs	r0, #0
 8013e8e:	4770      	bx	lr

08013e90 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8013e90:	4b01      	ldr	r3, [pc, #4]	@ (8013e98 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8013e92:	2200      	movs	r2, #0
 8013e94:	601a      	str	r2, [r3, #0]
 8013e96:	4770      	bx	lr
 8013e98:	20013f70 	.word	0x20013f70

08013e9c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013e9c:	4603      	mov	r3, r0
 8013e9e:	b1c8      	cbz	r0, 8013ed4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013ea0:	0c02      	lsrs	r2, r0, #16
 8013ea2:	0412      	lsls	r2, r2, #16
 8013ea4:	b9a2      	cbnz	r2, 8013ed0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8013ea6:	0403      	lsls	r3, r0, #16
 8013ea8:	2010      	movs	r0, #16
 8013eaa:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8013eae:	bf04      	itt	eq
 8013eb0:	021b      	lsleq	r3, r3, #8
 8013eb2:	3008      	addeq	r0, #8
 8013eb4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8013eb8:	bf04      	itt	eq
 8013eba:	011b      	lsleq	r3, r3, #4
 8013ebc:	3004      	addeq	r0, #4
 8013ebe:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8013ec2:	bf04      	itt	eq
 8013ec4:	009b      	lsleq	r3, r3, #2
 8013ec6:	3002      	addeq	r0, #2
 8013ec8:	2b00      	cmp	r3, #0
 8013eca:	db04      	blt.n	8013ed6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013ecc:	3001      	adds	r0, #1
 8013ece:	4770      	bx	lr
 8013ed0:	2000      	movs	r0, #0
 8013ed2:	e7ea      	b.n	8013eaa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013ed4:	2020      	movs	r0, #32
 8013ed6:	4770      	bx	lr

08013ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013edc:	b087      	sub	sp, #28
 8013ede:	460d      	mov	r5, r1
 8013ee0:	4616      	mov	r6, r2
 8013ee2:	4698      	mov	r8, r3
 8013ee4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8013ee8:	4601      	mov	r1, r0
 8013eea:	b120      	cbz	r0, 8013ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013eec:	b11a      	cbz	r2, 8013ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013eee:	2d1f      	cmp	r5, #31
 8013ef0:	d801      	bhi.n	8013ef6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013ef2:	2b1f      	cmp	r3, #31
 8013ef4:	d904      	bls.n	8013f00 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8013ef6:	2000      	movs	r0, #0
 8013ef8:	6038      	str	r0, [r7, #0]
 8013efa:	b007      	add	sp, #28
 8013efc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f00:	b97d      	cbnz	r5, 8013f22 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013f02:	b143      	cbz	r3, 8013f16 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013f04:	4602      	mov	r2, r0
 8013f06:	e9cd 4700 	strd	r4, r7, [sp]
 8013f0a:	462b      	mov	r3, r5
 8013f0c:	4641      	mov	r1, r8
 8013f0e:	4630      	mov	r0, r6
 8013f10:	f7ff ffe2 	bl	8013ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013f14:	e7f1      	b.n	8013efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013f16:	f04f 33ff 	mov.w	r3, #4294967295
 8013f1a:	603b      	str	r3, [r7, #0]
 8013f1c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8013f20:	e7eb      	b.n	8013efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013f22:	fa32 fa05 	lsrs.w	sl, r2, r5
 8013f26:	d106      	bne.n	8013f36 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8013f28:	4346      	muls	r6, r0
 8013f2a:	fbb6 f0f4 	udiv	r0, r6, r4
 8013f2e:	fb04 6610 	mls	r6, r4, r0, r6
 8013f32:	603e      	str	r6, [r7, #0]
 8013f34:	e7e1      	b.n	8013efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013f36:	2201      	movs	r2, #1
 8013f38:	40aa      	lsls	r2, r5
 8013f3a:	3a01      	subs	r2, #1
 8013f3c:	4016      	ands	r6, r2
 8013f3e:	fa00 fb05 	lsl.w	fp, r0, r5
 8013f42:	4630      	mov	r0, r6
 8013f44:	fbbb f9f4 	udiv	r9, fp, r4
 8013f48:	fb0a f309 	mul.w	r3, sl, r9
 8013f4c:	9303      	str	r3, [sp, #12]
 8013f4e:	f7ff ffa5 	bl	8013e9c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013f52:	462b      	mov	r3, r5
 8013f54:	460a      	mov	r2, r1
 8013f56:	e9cd 4700 	strd	r4, r7, [sp]
 8013f5a:	4601      	mov	r1, r0
 8013f5c:	4630      	mov	r0, r6
 8013f5e:	f7ff ffbb 	bl	8013ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013f62:	fb04 b919 	mls	r9, r4, r9, fp
 8013f66:	4606      	mov	r6, r0
 8013f68:	4648      	mov	r0, r9
 8013f6a:	eb05 0108 	add.w	r1, r5, r8
 8013f6e:	f7ff ff95 	bl	8013e9c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013f72:	ab05      	add	r3, sp, #20
 8013f74:	e9cd 4300 	strd	r4, r3, [sp]
 8013f78:	464a      	mov	r2, r9
 8013f7a:	4603      	mov	r3, r0
 8013f7c:	4650      	mov	r0, sl
 8013f7e:	f7ff ffab 	bl	8013ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013f82:	6839      	ldr	r1, [r7, #0]
 8013f84:	9a05      	ldr	r2, [sp, #20]
 8013f86:	9b03      	ldr	r3, [sp, #12]
 8013f88:	4411      	add	r1, r2
 8013f8a:	fbb1 f2f4 	udiv	r2, r1, r4
 8013f8e:	18d3      	adds	r3, r2, r3
 8013f90:	441e      	add	r6, r3
 8013f92:	fb04 1412 	mls	r4, r4, r2, r1
 8013f96:	4430      	add	r0, r6
 8013f98:	603c      	str	r4, [r7, #0]
 8013f9a:	e7ae      	b.n	8013efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013f9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013fa0:	b085      	sub	sp, #20
 8013fa2:	f1b0 0900 	subs.w	r9, r0, #0
 8013fa6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013fa8:	461d      	mov	r5, r3
 8013faa:	bfbf      	itttt	lt
 8013fac:	6823      	ldrlt	r3, [r4, #0]
 8013fae:	425b      	neglt	r3, r3
 8013fb0:	f1c9 0900 	rsblt	r9, r9, #0
 8013fb4:	6023      	strlt	r3, [r4, #0]
 8013fb6:	bfb4      	ite	lt
 8013fb8:	f04f 36ff 	movlt.w	r6, #4294967295
 8013fbc:	2601      	movge	r6, #1
 8013fbe:	2a00      	cmp	r2, #0
 8013fc0:	4617      	mov	r7, r2
 8013fc2:	da04      	bge.n	8013fce <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013fc4:	6823      	ldr	r3, [r4, #0]
 8013fc6:	425b      	negs	r3, r3
 8013fc8:	4257      	negs	r7, r2
 8013fca:	4276      	negs	r6, r6
 8013fcc:	6023      	str	r3, [r4, #0]
 8013fce:	2d00      	cmp	r5, #0
 8013fd0:	4638      	mov	r0, r7
 8013fd2:	bfba      	itte	lt
 8013fd4:	426d      	neglt	r5, r5
 8013fd6:	f04f 38ff 	movlt.w	r8, #4294967295
 8013fda:	f04f 0801 	movge.w	r8, #1
 8013fde:	f7ff ff5d 	bl	8013e9c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013fe2:	ab03      	add	r3, sp, #12
 8013fe4:	e9cd 5300 	strd	r5, r3, [sp]
 8013fe8:	463a      	mov	r2, r7
 8013fea:	4603      	mov	r3, r0
 8013fec:	4648      	mov	r0, r9
 8013fee:	f7ff ff73 	bl	8013ed8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013ff2:	6823      	ldr	r3, [r4, #0]
 8013ff4:	9a03      	ldr	r2, [sp, #12]
 8013ff6:	4546      	cmp	r6, r8
 8013ff8:	441a      	add	r2, r3
 8013ffa:	fb92 f3f5 	sdiv	r3, r2, r5
 8013ffe:	4418      	add	r0, r3
 8014000:	bf18      	it	ne
 8014002:	4240      	negne	r0, r0
 8014004:	fb05 2313 	mls	r3, r5, r3, r2
 8014008:	1c72      	adds	r2, r6, #1
 801400a:	6023      	str	r3, [r4, #0]
 801400c:	d105      	bne.n	801401a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801400e:	2b00      	cmp	r3, #0
 8014010:	f1c3 0200 	rsb	r2, r3, #0
 8014014:	db0b      	blt.n	801402e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014016:	6022      	str	r2, [r4, #0]
 8014018:	e006      	b.n	8014028 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801401a:	2e01      	cmp	r6, #1
 801401c:	d104      	bne.n	8014028 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801401e:	2b00      	cmp	r3, #0
 8014020:	da02      	bge.n	8014028 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014022:	442b      	add	r3, r5
 8014024:	3801      	subs	r0, #1
 8014026:	6023      	str	r3, [r4, #0]
 8014028:	b005      	add	sp, #20
 801402a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801402e:	3801      	subs	r0, #1
 8014030:	1b52      	subs	r2, r2, r5
 8014032:	e7f0      	b.n	8014016 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014034 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014034:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014038:	4c1c      	ldr	r4, [pc, #112]	@ (80140ac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801403a:	6807      	ldr	r7, [r0, #0]
 801403c:	69a3      	ldr	r3, [r4, #24]
 801403e:	4605      	mov	r5, r0
 8014040:	b92b      	cbnz	r3, 801404e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014042:	6840      	ldr	r0, [r0, #4]
 8014044:	e9c5 7000 	strd	r7, r0, [r5]
 8014048:	b004      	add	sp, #16
 801404a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801404e:	68a2      	ldr	r2, [r4, #8]
 8014050:	6820      	ldr	r0, [r4, #0]
 8014052:	ae04      	add	r6, sp, #16
 8014054:	f04f 0802 	mov.w	r8, #2
 8014058:	fb93 f1f8 	sdiv	r1, r3, r8
 801405c:	440a      	add	r2, r1
 801405e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014062:	69e1      	ldr	r1, [r4, #28]
 8014064:	9600      	str	r6, [sp, #0]
 8014066:	463a      	mov	r2, r7
 8014068:	f7ff ff98 	bl	8013f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801406c:	69a3      	ldr	r3, [r4, #24]
 801406e:	686a      	ldr	r2, [r5, #4]
 8014070:	6a21      	ldr	r1, [r4, #32]
 8014072:	9600      	str	r6, [sp, #0]
 8014074:	4607      	mov	r7, r0
 8014076:	6860      	ldr	r0, [r4, #4]
 8014078:	f7ff ff90 	bl	8013f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801407c:	6962      	ldr	r2, [r4, #20]
 801407e:	69a3      	ldr	r3, [r4, #24]
 8014080:	fb93 f8f8 	sdiv	r8, r3, r8
 8014084:	4442      	add	r2, r8
 8014086:	9203      	str	r2, [sp, #12]
 8014088:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 801408a:	682a      	ldr	r2, [r5, #0]
 801408c:	9600      	str	r6, [sp, #0]
 801408e:	4407      	add	r7, r0
 8014090:	68e0      	ldr	r0, [r4, #12]
 8014092:	f7ff ff83 	bl	8013f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014096:	9600      	str	r6, [sp, #0]
 8014098:	4680      	mov	r8, r0
 801409a:	69a3      	ldr	r3, [r4, #24]
 801409c:	686a      	ldr	r2, [r5, #4]
 801409e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80140a0:	6920      	ldr	r0, [r4, #16]
 80140a2:	f7ff ff7b 	bl	8013f9c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80140a6:	4440      	add	r0, r8
 80140a8:	e7cc      	b.n	8014044 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80140aa:	bf00      	nop
 80140ac:	20013f74 	.word	0x20013f74

080140b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80140b0:	4b07      	ldr	r3, [pc, #28]	@ (80140d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80140b2:	781b      	ldrb	r3, [r3, #0]
 80140b4:	2b01      	cmp	r3, #1
 80140b6:	d109      	bne.n	80140cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80140b8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80140bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80140c0:	8003      	strh	r3, [r0, #0]
 80140c2:	4b04      	ldr	r3, [pc, #16]	@ (80140d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80140c4:	881b      	ldrh	r3, [r3, #0]
 80140c6:	3b01      	subs	r3, #1
 80140c8:	1a9b      	subs	r3, r3, r2
 80140ca:	800b      	strh	r3, [r1, #0]
 80140cc:	4770      	bx	lr
 80140ce:	bf00      	nop
 80140d0:	20013f58 	.word	0x20013f58
 80140d4:	20013f54 	.word	0x20013f54

080140d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80140d8:	b510      	push	{r4, lr}
 80140da:	4b07      	ldr	r3, [pc, #28]	@ (80140f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80140dc:	781b      	ldrb	r3, [r3, #0]
 80140de:	2b01      	cmp	r3, #1
 80140e0:	d108      	bne.n	80140f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80140e2:	4b06      	ldr	r3, [pc, #24]	@ (80140fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80140e4:	880c      	ldrh	r4, [r1, #0]
 80140e6:	881b      	ldrh	r3, [r3, #0]
 80140e8:	f9b0 2000 	ldrsh.w	r2, [r0]
 80140ec:	3b01      	subs	r3, #1
 80140ee:	1b1b      	subs	r3, r3, r4
 80140f0:	8003      	strh	r3, [r0, #0]
 80140f2:	800a      	strh	r2, [r1, #0]
 80140f4:	bd10      	pop	{r4, pc}
 80140f6:	bf00      	nop
 80140f8:	20013f58 	.word	0x20013f58
 80140fc:	20013f54 	.word	0x20013f54

08014100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014100:	b510      	push	{r4, lr}
 8014102:	4b0a      	ldr	r3, [pc, #40]	@ (801412c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014104:	781b      	ldrb	r3, [r3, #0]
 8014106:	2b01      	cmp	r3, #1
 8014108:	d10e      	bne.n	8014128 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801410a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801410e:	8843      	ldrh	r3, [r0, #2]
 8014110:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014114:	8044      	strh	r4, [r0, #2]
 8014116:	18ca      	adds	r2, r1, r3
 8014118:	4b05      	ldr	r3, [pc, #20]	@ (8014130 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801411a:	881b      	ldrh	r3, [r3, #0]
 801411c:	1a9b      	subs	r3, r3, r2
 801411e:	8003      	strh	r3, [r0, #0]
 8014120:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014124:	80c3      	strh	r3, [r0, #6]
 8014126:	8081      	strh	r1, [r0, #4]
 8014128:	bd10      	pop	{r4, pc}
 801412a:	bf00      	nop
 801412c:	20013f58 	.word	0x20013f58
 8014130:	20013f54 	.word	0x20013f54

08014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014134:	4b08      	ldr	r3, [pc, #32]	@ (8014158 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014136:	781b      	ldrb	r3, [r3, #0]
 8014138:	2b01      	cmp	r3, #1
 801413a:	d10c      	bne.n	8014156 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801413c:	8803      	ldrh	r3, [r0, #0]
 801413e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014142:	8842      	ldrh	r2, [r0, #2]
 8014144:	8002      	strh	r2, [r0, #0]
 8014146:	185a      	adds	r2, r3, r1
 8014148:	4b04      	ldr	r3, [pc, #16]	@ (801415c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801414a:	881b      	ldrh	r3, [r3, #0]
 801414c:	1a9b      	subs	r3, r3, r2
 801414e:	8043      	strh	r3, [r0, #2]
 8014150:	88c3      	ldrh	r3, [r0, #6]
 8014152:	8083      	strh	r3, [r0, #4]
 8014154:	80c1      	strh	r1, [r0, #6]
 8014156:	4770      	bx	lr
 8014158:	20013f58 	.word	0x20013f58
 801415c:	20013f54 	.word	0x20013f54

08014160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014160:	b510      	push	{r4, lr}
 8014162:	4b07      	ldr	r3, [pc, #28]	@ (8014180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014164:	781b      	ldrb	r3, [r3, #0]
 8014166:	2b01      	cmp	r3, #1
 8014168:	d108      	bne.n	801417c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801416a:	f9b1 3000 	ldrsh.w	r3, [r1]
 801416e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014172:	8003      	strh	r3, [r0, #0]
 8014174:	8893      	ldrh	r3, [r2, #4]
 8014176:	3b01      	subs	r3, #1
 8014178:	1b1b      	subs	r3, r3, r4
 801417a:	800b      	strh	r3, [r1, #0]
 801417c:	bd10      	pop	{r4, pc}
 801417e:	bf00      	nop
 8014180:	20013f58 	.word	0x20013f58

08014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014184:	b510      	push	{r4, lr}
 8014186:	4b0a      	ldr	r3, [pc, #40]	@ (80141b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014188:	781b      	ldrb	r3, [r3, #0]
 801418a:	2b01      	cmp	r3, #1
 801418c:	460a      	mov	r2, r1
 801418e:	d10d      	bne.n	80141ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014190:	8881      	ldrh	r1, [r0, #4]
 8014192:	8803      	ldrh	r3, [r0, #0]
 8014194:	440b      	add	r3, r1
 8014196:	4601      	mov	r1, r0
 8014198:	3b01      	subs	r3, #1
 801419a:	f821 3b02 	strh.w	r3, [r1], #2
 801419e:	f7ff ffdf 	bl	8014160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80141a2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80141a6:	88c2      	ldrh	r2, [r0, #6]
 80141a8:	8082      	strh	r2, [r0, #4]
 80141aa:	80c3      	strh	r3, [r0, #6]
 80141ac:	bd10      	pop	{r4, pc}
 80141ae:	bf00      	nop
 80141b0:	20013f58 	.word	0x20013f58

080141b4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80141b4:	4b06      	ldr	r3, [pc, #24]	@ (80141d0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80141b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80141ba:	4b06      	ldr	r3, [pc, #24]	@ (80141d4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80141bc:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 80141c0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80141c4:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 80141c8:	2100      	movs	r1, #0
 80141ca:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 80141ce:	4770      	bx	lr
 80141d0:	20013f54 	.word	0x20013f54
 80141d4:	20013f56 	.word	0x20013f56

080141d8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80141d8:	4b03      	ldr	r3, [pc, #12]	@ (80141e8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80141da:	6818      	ldr	r0, [r3, #0]
 80141dc:	b110      	cbz	r0, 80141e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80141de:	6803      	ldr	r3, [r0, #0]
 80141e0:	699b      	ldr	r3, [r3, #24]
 80141e2:	4718      	bx	r3
 80141e4:	4770      	bx	lr
 80141e6:	bf00      	nop
 80141e8:	20013fa4 	.word	0x20013fa4

080141ec <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80141ec:	4770      	bx	lr
	...

080141f0 <_ZN8touchgfx11Application4drawEv>:
 80141f0:	b507      	push	{r0, r1, r2, lr}
 80141f2:	4b09      	ldr	r3, [pc, #36]	@ (8014218 <_ZN8touchgfx11Application4drawEv+0x28>)
 80141f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80141f8:	4b08      	ldr	r3, [pc, #32]	@ (801421c <_ZN8touchgfx11Application4drawEv+0x2c>)
 80141fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80141fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014202:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014206:	6803      	ldr	r3, [r0, #0]
 8014208:	2100      	movs	r1, #0
 801420a:	9100      	str	r1, [sp, #0]
 801420c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801420e:	4669      	mov	r1, sp
 8014210:	4798      	blx	r3
 8014212:	b003      	add	sp, #12
 8014214:	f85d fb04 	ldr.w	pc, [sp], #4
 8014218:	20013f54 	.word	0x20013f54
 801421c:	20013f56 	.word	0x20013f56

08014220 <_ZN8touchgfx11Application10invalidateEv>:
 8014220:	4b09      	ldr	r3, [pc, #36]	@ (8014248 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014222:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014226:	4b09      	ldr	r3, [pc, #36]	@ (801424c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014228:	b082      	sub	sp, #8
 801422a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801422e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014232:	2100      	movs	r1, #0
 8014234:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014238:	9100      	str	r1, [sp, #0]
 801423a:	6803      	ldr	r3, [r0, #0]
 801423c:	aa02      	add	r2, sp, #8
 801423e:	e912 0006 	ldmdb	r2, {r1, r2}
 8014242:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014244:	b002      	add	sp, #8
 8014246:	4718      	bx	r3
 8014248:	20013f54 	.word	0x20013f54
 801424c:	20013f56 	.word	0x20013f56

08014250 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014250:	4b03      	ldr	r3, [pc, #12]	@ (8014260 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014252:	6818      	ldr	r0, [r3, #0]
 8014254:	b110      	cbz	r0, 801425c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014256:	6803      	ldr	r3, [r0, #0]
 8014258:	69db      	ldr	r3, [r3, #28]
 801425a:	4718      	bx	r3
 801425c:	4770      	bx	lr
 801425e:	bf00      	nop
 8014260:	20013fa4 	.word	0x20013fa4

08014264 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014264:	4b03      	ldr	r3, [pc, #12]	@ (8014274 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014266:	6818      	ldr	r0, [r3, #0]
 8014268:	b110      	cbz	r0, 8014270 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801426a:	6803      	ldr	r3, [r0, #0]
 801426c:	6a1b      	ldr	r3, [r3, #32]
 801426e:	4718      	bx	r3
 8014270:	4770      	bx	lr
 8014272:	bf00      	nop
 8014274:	20013fa4 	.word	0x20013fa4

08014278 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014278:	2300      	movs	r3, #0
 801427a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801427e:	4770      	bx	lr

08014280 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014280:	4b03      	ldr	r3, [pc, #12]	@ (8014290 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014282:	6818      	ldr	r0, [r3, #0]
 8014284:	b110      	cbz	r0, 801428c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014286:	6803      	ldr	r3, [r0, #0]
 8014288:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801428a:	4718      	bx	r3
 801428c:	4770      	bx	lr
 801428e:	bf00      	nop
 8014290:	20013fa4 	.word	0x20013fa4

08014294 <_ZN8touchgfx11ApplicationD1Ev>:
 8014294:	4770      	bx	lr

08014296 <_ZN8touchgfx11ApplicationD0Ev>:
 8014296:	b510      	push	{r4, lr}
 8014298:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 801429c:	4604      	mov	r4, r0
 801429e:	f012 fdb9 	bl	8026e14 <_ZdlPvj>
 80142a2:	4620      	mov	r0, r4
 80142a4:	bd10      	pop	{r4, pc}

080142a6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80142a6:	b510      	push	{r4, lr}
 80142a8:	f9b1 4000 	ldrsh.w	r4, [r1]
 80142ac:	888a      	ldrh	r2, [r1, #4]
 80142ae:	f9b0 3000 	ldrsh.w	r3, [r0]
 80142b2:	4422      	add	r2, r4
 80142b4:	b212      	sxth	r2, r2
 80142b6:	4293      	cmp	r3, r2
 80142b8:	da15      	bge.n	80142e6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80142ba:	8882      	ldrh	r2, [r0, #4]
 80142bc:	4413      	add	r3, r2
 80142be:	b21b      	sxth	r3, r3
 80142c0:	429c      	cmp	r4, r3
 80142c2:	da10      	bge.n	80142e6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80142c4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80142c8:	88c9      	ldrh	r1, [r1, #6]
 80142ca:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80142ce:	4419      	add	r1, r3
 80142d0:	b209      	sxth	r1, r1
 80142d2:	428a      	cmp	r2, r1
 80142d4:	da07      	bge.n	80142e6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80142d6:	88c0      	ldrh	r0, [r0, #6]
 80142d8:	4410      	add	r0, r2
 80142da:	b200      	sxth	r0, r0
 80142dc:	4283      	cmp	r3, r0
 80142de:	bfac      	ite	ge
 80142e0:	2000      	movge	r0, #0
 80142e2:	2001      	movlt	r0, #1
 80142e4:	bd10      	pop	{r4, pc}
 80142e6:	2000      	movs	r0, #0
 80142e8:	e7fc      	b.n	80142e4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080142ea <_ZN8touchgfx4Rect10restrictToEss>:
 80142ea:	f9b0 3000 	ldrsh.w	r3, [r0]
 80142ee:	2b00      	cmp	r3, #0
 80142f0:	b510      	push	{r4, lr}
 80142f2:	da04      	bge.n	80142fe <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80142f4:	8884      	ldrh	r4, [r0, #4]
 80142f6:	4423      	add	r3, r4
 80142f8:	8083      	strh	r3, [r0, #4]
 80142fa:	2300      	movs	r3, #0
 80142fc:	8003      	strh	r3, [r0, #0]
 80142fe:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014302:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014306:	1b09      	subs	r1, r1, r4
 8014308:	428b      	cmp	r3, r1
 801430a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801430e:	bfc8      	it	gt
 8014310:	8081      	strhgt	r1, [r0, #4]
 8014312:	2b00      	cmp	r3, #0
 8014314:	da04      	bge.n	8014320 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014316:	88c1      	ldrh	r1, [r0, #6]
 8014318:	440b      	add	r3, r1
 801431a:	80c3      	strh	r3, [r0, #6]
 801431c:	2300      	movs	r3, #0
 801431e:	8043      	strh	r3, [r0, #2]
 8014320:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014324:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014328:	1a52      	subs	r2, r2, r1
 801432a:	4293      	cmp	r3, r2
 801432c:	bfc8      	it	gt
 801432e:	80c2      	strhgt	r2, [r0, #6]
 8014330:	bd10      	pop	{r4, pc}
	...

08014334 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014334:	b510      	push	{r4, lr}
 8014336:	4b10      	ldr	r3, [pc, #64]	@ (8014378 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014338:	f9b3 2000 	ldrsh.w	r2, [r3]
 801433c:	4b0f      	ldr	r3, [pc, #60]	@ (801437c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801433e:	460c      	mov	r4, r1
 8014340:	4620      	mov	r0, r4
 8014342:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014346:	f7ff ffd0 	bl	80142ea <_ZN8touchgfx4Rect10restrictToEss>
 801434a:	4b0d      	ldr	r3, [pc, #52]	@ (8014380 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801434c:	6818      	ldr	r0, [r3, #0]
 801434e:	b190      	cbz	r0, 8014376 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014350:	6803      	ldr	r3, [r0, #0]
 8014352:	4621      	mov	r1, r4
 8014354:	689b      	ldr	r3, [r3, #8]
 8014356:	4798      	blx	r3
 8014358:	4b0a      	ldr	r3, [pc, #40]	@ (8014384 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801435a:	6818      	ldr	r0, [r3, #0]
 801435c:	b118      	cbz	r0, 8014366 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801435e:	6803      	ldr	r3, [r0, #0]
 8014360:	4621      	mov	r1, r4
 8014362:	689b      	ldr	r3, [r3, #8]
 8014364:	4798      	blx	r3
 8014366:	4b08      	ldr	r3, [pc, #32]	@ (8014388 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014368:	6818      	ldr	r0, [r3, #0]
 801436a:	6803      	ldr	r3, [r0, #0]
 801436c:	4621      	mov	r1, r4
 801436e:	69db      	ldr	r3, [r3, #28]
 8014370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014374:	4718      	bx	r3
 8014376:	bd10      	pop	{r4, pc}
 8014378:	20013f56 	.word	0x20013f56
 801437c:	20013f54 	.word	0x20013f54
 8014380:	20013fa4 	.word	0x20013fa4
 8014384:	20013fa0 	.word	0x20013fa0
 8014388:	20013f60 	.word	0x20013f60

0801438c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801438c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801438e:	4606      	mov	r6, r0
 8014390:	4608      	mov	r0, r1
 8014392:	460f      	mov	r7, r1
 8014394:	f7f9 fd1d 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014398:	b9e8      	cbnz	r0, 80143d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801439a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801439e:	f9b6 4000 	ldrsh.w	r4, [r6]
 80143a2:	42a5      	cmp	r5, r4
 80143a4:	db17      	blt.n	80143d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80143a6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80143aa:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80143ae:	429a      	cmp	r2, r3
 80143b0:	db11      	blt.n	80143d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80143b2:	88b9      	ldrh	r1, [r7, #4]
 80143b4:	440d      	add	r5, r1
 80143b6:	88b1      	ldrh	r1, [r6, #4]
 80143b8:	440c      	add	r4, r1
 80143ba:	b22d      	sxth	r5, r5
 80143bc:	b224      	sxth	r4, r4
 80143be:	42a5      	cmp	r5, r4
 80143c0:	dc09      	bgt.n	80143d6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80143c2:	88f8      	ldrh	r0, [r7, #6]
 80143c4:	4410      	add	r0, r2
 80143c6:	88f2      	ldrh	r2, [r6, #6]
 80143c8:	4413      	add	r3, r2
 80143ca:	b200      	sxth	r0, r0
 80143cc:	b21b      	sxth	r3, r3
 80143ce:	4298      	cmp	r0, r3
 80143d0:	bfcc      	ite	gt
 80143d2:	2000      	movgt	r0, #0
 80143d4:	2001      	movle	r0, #1
 80143d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080143d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80143d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80143da:	4604      	mov	r4, r0
 80143dc:	4608      	mov	r0, r1
 80143de:	460d      	mov	r5, r1
 80143e0:	f7f9 fcf7 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80143e4:	b978      	cbnz	r0, 8014406 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80143e6:	4620      	mov	r0, r4
 80143e8:	f7f9 fcf3 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80143ec:	f9b5 6000 	ldrsh.w	r6, [r5]
 80143f0:	b150      	cbz	r0, 8014408 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80143f2:	8026      	strh	r6, [r4, #0]
 80143f4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80143f8:	8063      	strh	r3, [r4, #2]
 80143fa:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80143fe:	80a3      	strh	r3, [r4, #4]
 8014400:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014404:	80e3      	strh	r3, [r4, #6]
 8014406:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014408:	f9b4 1000 	ldrsh.w	r1, [r4]
 801440c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014410:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014414:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014418:	88ed      	ldrh	r5, [r5, #6]
 801441a:	42b1      	cmp	r1, r6
 801441c:	460f      	mov	r7, r1
 801441e:	bfa8      	it	ge
 8014420:	4637      	movge	r7, r6
 8014422:	4293      	cmp	r3, r2
 8014424:	4618      	mov	r0, r3
 8014426:	4466      	add	r6, ip
 8014428:	bfa8      	it	ge
 801442a:	4610      	movge	r0, r2
 801442c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014430:	8027      	strh	r7, [r4, #0]
 8014432:	442a      	add	r2, r5
 8014434:	88e5      	ldrh	r5, [r4, #6]
 8014436:	8060      	strh	r0, [r4, #2]
 8014438:	4461      	add	r1, ip
 801443a:	442b      	add	r3, r5
 801443c:	b236      	sxth	r6, r6
 801443e:	b209      	sxth	r1, r1
 8014440:	b212      	sxth	r2, r2
 8014442:	b21b      	sxth	r3, r3
 8014444:	428e      	cmp	r6, r1
 8014446:	bfac      	ite	ge
 8014448:	ebc7 0106 	rsbge	r1, r7, r6
 801444c:	ebc7 0101 	rsblt	r1, r7, r1
 8014450:	429a      	cmp	r2, r3
 8014452:	bfac      	ite	ge
 8014454:	ebc0 0202 	rsbge	r2, r0, r2
 8014458:	ebc0 0203 	rsblt	r2, r0, r3
 801445c:	80a1      	strh	r1, [r4, #4]
 801445e:	80e2      	strh	r2, [r4, #6]
 8014460:	e7d1      	b.n	8014406 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014464 <_ZN8touchgfx11Application11getInstanceEv>:
 8014464:	4b01      	ldr	r3, [pc, #4]	@ (801446c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014466:	6818      	ldr	r0, [r3, #0]
 8014468:	4770      	bx	lr
 801446a:	bf00      	nop
 801446c:	20013fb4 	.word	0x20013fb4

08014470 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014470:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014472:	4b10      	ldr	r3, [pc, #64]	@ (80144b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014474:	781b      	ldrb	r3, [r3, #0]
 8014476:	4605      	mov	r5, r0
 8014478:	b1d3      	cbz	r3, 80144b0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801447a:	4b0f      	ldr	r3, [pc, #60]	@ (80144b8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 801447c:	4f0f      	ldr	r7, [pc, #60]	@ (80144bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801447e:	881c      	ldrh	r4, [r3, #0]
 8014480:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 8014484:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 8014488:	42a3      	cmp	r3, r4
 801448a:	d90e      	bls.n	80144aa <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 801448c:	683b      	ldr	r3, [r7, #0]
 801448e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8014492:	b10a      	cbz	r2, 8014498 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014494:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8014496:	b900      	cbnz	r0, 801449a <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014498:	6898      	ldr	r0, [r3, #8]
 801449a:	6803      	ldr	r3, [r0, #0]
 801449c:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80144a0:	69db      	ldr	r3, [r3, #28]
 80144a2:	3401      	adds	r4, #1
 80144a4:	4798      	blx	r3
 80144a6:	b2a4      	uxth	r4, r4
 80144a8:	e7ec      	b.n	8014484 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80144aa:	2300      	movs	r3, #0
 80144ac:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 80144b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80144b2:	bf00      	nop
 80144b4:	20013f5e 	.word	0x20013f5e
 80144b8:	20000084 	.word	0x20000084
 80144bc:	20013f60 	.word	0x20013f60

080144c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80144c0:	b510      	push	{r4, lr}
 80144c2:	2300      	movs	r3, #0
 80144c4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 80144c8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80144cc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80144d0:	4604      	mov	r4, r0
 80144d2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80144d6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 80144da:	429a      	cmp	r2, r3
 80144dc:	d90e      	bls.n	80144fc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80144de:	18e2      	adds	r2, r4, r3
 80144e0:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 80144e4:	b122      	cbz	r2, 80144f0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80144e6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80144ea:	6803      	ldr	r3, [r0, #0]
 80144ec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80144ee:	4798      	blx	r3
 80144f0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80144f4:	3301      	adds	r3, #1
 80144f6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80144fa:	e7ea      	b.n	80144d2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80144fc:	bd10      	pop	{r4, pc}

080144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80144fe:	2300      	movs	r3, #0
 8014500:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8014504:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8014508:	30a4      	adds	r0, #164	@ 0xa4
 801450a:	f802 3b01 	strb.w	r3, [r2], #1
 801450e:	4282      	cmp	r2, r0
 8014510:	d1fb      	bne.n	801450a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014512:	4770      	bx	lr

08014514 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014514:	b570      	push	{r4, r5, r6, lr}
 8014516:	4c0b      	ldr	r4, [pc, #44]	@ (8014544 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014518:	4605      	mov	r5, r0
 801451a:	6820      	ldr	r0, [r4, #0]
 801451c:	460e      	mov	r6, r1
 801451e:	b110      	cbz	r0, 8014526 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014520:	6803      	ldr	r3, [r0, #0]
 8014522:	695b      	ldr	r3, [r3, #20]
 8014524:	4798      	blx	r3
 8014526:	1d28      	adds	r0, r5, #4
 8014528:	f7ff ffe9 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801452c:	6026      	str	r6, [r4, #0]
 801452e:	6833      	ldr	r3, [r6, #0]
 8014530:	4630      	mov	r0, r6
 8014532:	68db      	ldr	r3, [r3, #12]
 8014534:	4798      	blx	r3
 8014536:	682b      	ldr	r3, [r5, #0]
 8014538:	4628      	mov	r0, r5
 801453a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801453c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014540:	4718      	bx	r3
 8014542:	bf00      	nop
 8014544:	20013fa4 	.word	0x20013fa4

08014548 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014548:	2300      	movs	r3, #0
 801454a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801454e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8014552:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014554:	461a      	mov	r2, r3
 8014556:	461c      	mov	r4, r3
 8014558:	461d      	mov	r5, r3
 801455a:	459c      	cmp	ip, r3
 801455c:	dd1a      	ble.n	8014594 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801455e:	18c6      	adds	r6, r0, r3
 8014560:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8014564:	b16e      	cbz	r6, 8014582 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014566:	429a      	cmp	r2, r3
 8014568:	d008      	beq.n	801457c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801456a:	fa1f fe82 	uxth.w	lr, r2
 801456e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014572:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014576:	1887      	adds	r7, r0, r2
 8014578:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 801457c:	3201      	adds	r2, #1
 801457e:	3301      	adds	r3, #1
 8014580:	e7eb      	b.n	801455a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014582:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8014586:	4299      	cmp	r1, r3
 8014588:	bfa8      	it	ge
 801458a:	3501      	addge	r5, #1
 801458c:	429e      	cmp	r6, r3
 801458e:	bfc8      	it	gt
 8014590:	3401      	addgt	r4, #1
 8014592:	e7f4      	b.n	801457e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014594:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8014598:	1b49      	subs	r1, r1, r5
 801459a:	1b1b      	subs	r3, r3, r4
 801459c:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 80145a0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80145a4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80145a8:	4293      	cmp	r3, r2
 80145aa:	dd03      	ble.n	80145b4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80145ac:	3b01      	subs	r3, #1
 80145ae:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80145b2:	e7f7      	b.n	80145a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80145b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080145b8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80145b8:	b570      	push	{r4, r5, r6, lr}
 80145ba:	4d16      	ldr	r5, [pc, #88]	@ (8014614 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80145bc:	4604      	mov	r4, r0
 80145be:	6828      	ldr	r0, [r5, #0]
 80145c0:	b140      	cbz	r0, 80145d4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80145c2:	7a03      	ldrb	r3, [r0, #8]
 80145c4:	b933      	cbnz	r3, 80145d4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80145c6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80145ca:	6803      	ldr	r3, [r0, #0]
 80145cc:	689b      	ldr	r3, [r3, #8]
 80145ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80145d2:	4718      	bx	r3
 80145d4:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80145d8:	4e0f      	ldr	r6, [pc, #60]	@ (8014618 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80145da:	b973      	cbnz	r3, 80145fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80145dc:	b168      	cbz	r0, 80145fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80145de:	7a03      	ldrb	r3, [r0, #8]
 80145e0:	b15b      	cbz	r3, 80145fa <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80145e2:	6830      	ldr	r0, [r6, #0]
 80145e4:	b110      	cbz	r0, 80145ec <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80145e6:	6803      	ldr	r3, [r0, #0]
 80145e8:	691b      	ldr	r3, [r3, #16]
 80145ea:	4798      	blx	r3
 80145ec:	6828      	ldr	r0, [r5, #0]
 80145ee:	6803      	ldr	r3, [r0, #0]
 80145f0:	68db      	ldr	r3, [r3, #12]
 80145f2:	4798      	blx	r3
 80145f4:	2301      	movs	r3, #1
 80145f6:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80145fa:	3404      	adds	r4, #4
 80145fc:	4620      	mov	r0, r4
 80145fe:	f7ff ff5f 	bl	80144c0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014602:	4620      	mov	r0, r4
 8014604:	f7ff ffa0 	bl	8014548 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014608:	6830      	ldr	r0, [r6, #0]
 801460a:	b110      	cbz	r0, 8014612 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801460c:	6803      	ldr	r3, [r0, #0]
 801460e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014610:	e7dd      	b.n	80145ce <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014612:	bd70      	pop	{r4, r5, r6, pc}
 8014614:	20013fa8 	.word	0x20013fa8
 8014618:	20013fa4 	.word	0x20013fa4

0801461c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801461c:	4603      	mov	r3, r0
 801461e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8014622:	2200      	movs	r2, #0
 8014624:	801a      	strh	r2, [r3, #0]
 8014626:	805a      	strh	r2, [r3, #2]
 8014628:	809a      	strh	r2, [r3, #4]
 801462a:	80da      	strh	r2, [r3, #6]
 801462c:	3308      	adds	r3, #8
 801462e:	428b      	cmp	r3, r1
 8014630:	d1f8      	bne.n	8014624 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014632:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8014636:	4770      	bx	lr

08014638 <_ZN8touchgfx11ApplicationC1Ev>:
 8014638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801463a:	4606      	mov	r6, r0
 801463c:	4b1c      	ldr	r3, [pc, #112]	@ (80146b0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801463e:	f846 3b04 	str.w	r3, [r6], #4
 8014642:	4604      	mov	r4, r0
 8014644:	2500      	movs	r5, #0
 8014646:	22a8      	movs	r2, #168	@ 0xa8
 8014648:	2100      	movs	r1, #0
 801464a:	4630      	mov	r0, r6
 801464c:	f013 fd37 	bl	80280be <memset>
 8014650:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8014654:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014658:	f7ff ffe0 	bl	801461c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801465c:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014660:	f7ff ffdc 	bl	801461c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014664:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8014668:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 801466c:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8014670:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8014674:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8014678:	490e      	ldr	r1, [pc, #56]	@ (80146b4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801467a:	480f      	ldr	r0, [pc, #60]	@ (80146b8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801467c:	4f0f      	ldr	r7, [pc, #60]	@ (80146bc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801467e:	f011 fd35 	bl	80260ec <CRC_Lock>
 8014682:	4b0f      	ldr	r3, [pc, #60]	@ (80146c0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014684:	b158      	cbz	r0, 801469e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014686:	801d      	strh	r5, [r3, #0]
 8014688:	4a0e      	ldr	r2, [pc, #56]	@ (80146c4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801468a:	2300      	movs	r3, #0
 801468c:	6013      	str	r3, [r2, #0]
 801468e:	4a0e      	ldr	r2, [pc, #56]	@ (80146c8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014690:	603b      	str	r3, [r7, #0]
 8014692:	4630      	mov	r0, r6
 8014694:	6013      	str	r3, [r2, #0]
 8014696:	f7ff ff32 	bl	80144fe <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801469a:	4620      	mov	r0, r4
 801469c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801469e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80146a2:	2002      	movs	r0, #2
 80146a4:	801a      	strh	r2, [r3, #0]
 80146a6:	6038      	str	r0, [r7, #0]
 80146a8:	f001 fe0a 	bl	80162c0 <_ZN8touchgfx6Screen4drawEv>
 80146ac:	e7ec      	b.n	8014688 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80146ae:	bf00      	nop
 80146b0:	0802b29c 	.word	0x0802b29c
 80146b4:	b5e8b5cd 	.word	0xb5e8b5cd
 80146b8:	f407a5c2 	.word	0xf407a5c2
 80146bc:	20013fa4 	.word	0x20013fa4
 80146c0:	20000084 	.word	0x20000084
 80146c4:	20013fb4 	.word	0x20013fb4
 80146c8:	20013fa8 	.word	0x20013fa8

080146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80146cc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 80146d0:	3b01      	subs	r3, #1
 80146d2:	b29b      	uxth	r3, r3
 80146d4:	428b      	cmp	r3, r1
 80146d6:	b510      	push	{r4, lr}
 80146d8:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 80146dc:	d908      	bls.n	80146f0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80146de:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80146e2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80146e6:	681a      	ldr	r2, [r3, #0]
 80146e8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80146ec:	685a      	ldr	r2, [r3, #4]
 80146ee:	6062      	str	r2, [r4, #4]
 80146f0:	bd10      	pop	{r4, pc}
	...

080146f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80146f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146f8:	4b8f      	ldr	r3, [pc, #572]	@ (8014938 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80146fa:	b08f      	sub	sp, #60	@ 0x3c
 80146fc:	ac0a      	add	r4, sp, #40	@ 0x28
 80146fe:	e884 0006 	stmia.w	r4, {r1, r2}
 8014702:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014706:	4b8d      	ldr	r3, [pc, #564]	@ (801493c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014708:	4683      	mov	fp, r0
 801470a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801470e:	4620      	mov	r0, r4
 8014710:	f7ff fdeb 	bl	80142ea <_ZN8touchgfx4Rect10restrictToEss>
 8014714:	4620      	mov	r0, r4
 8014716:	f7f9 fb5c 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801471a:	2800      	cmp	r0, #0
 801471c:	d16a      	bne.n	80147f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801471e:	9403      	str	r4, [sp, #12]
 8014720:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014724:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014728:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801472c:	35a4      	adds	r5, #164	@ 0xa4
 801472e:	9301      	str	r3, [sp, #4]
 8014730:	b15c      	cbz	r4, 801474a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014732:	4629      	mov	r1, r5
 8014734:	9803      	ldr	r0, [sp, #12]
 8014736:	f7ff fe29 	bl	801438c <_ZNK8touchgfx4Rect8includesERKS0_>
 801473a:	3c01      	subs	r4, #1
 801473c:	b118      	cbz	r0, 8014746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801473e:	b2a1      	uxth	r1, r4
 8014740:	9801      	ldr	r0, [sp, #4]
 8014742:	f7ff ffc3 	bl	80146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014746:	3d08      	subs	r5, #8
 8014748:	e7f2      	b.n	8014730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801474a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801474e:	f8cd a010 	str.w	sl, [sp, #16]
 8014752:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014756:	9302      	str	r3, [sp, #8]
 8014758:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801475c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8014760:	9306      	str	r3, [sp, #24]
 8014762:	445c      	add	r4, fp
 8014764:	2500      	movs	r5, #0
 8014766:	4626      	mov	r6, r4
 8014768:	f8cd a014 	str.w	sl, [sp, #20]
 801476c:	462f      	mov	r7, r5
 801476e:	9b05      	ldr	r3, [sp, #20]
 8014770:	2b00      	cmp	r3, #0
 8014772:	d073      	beq.n	801485c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014774:	9903      	ldr	r1, [sp, #12]
 8014776:	4630      	mov	r0, r6
 8014778:	f7ff fd95 	bl	80142a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801477c:	b350      	cbz	r0, 80147d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801477e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8014782:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014786:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 801478a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801478e:	45e6      	cmp	lr, ip
 8014790:	db33      	blt.n	80147fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014792:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014796:	88b3      	ldrh	r3, [r6, #4]
 8014798:	4472      	add	r2, lr
 801479a:	4463      	add	r3, ip
 801479c:	b212      	sxth	r2, r2
 801479e:	b21b      	sxth	r3, r3
 80147a0:	429a      	cmp	r2, r3
 80147a2:	dc2a      	bgt.n	80147fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80147a4:	88f3      	ldrh	r3, [r6, #6]
 80147a6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80147aa:	fa1f f289 	uxth.w	r2, r9
 80147ae:	4413      	add	r3, r2
 80147b0:	b29b      	uxth	r3, r3
 80147b2:	45c8      	cmp	r8, r9
 80147b4:	fa1f fc88 	uxth.w	ip, r8
 80147b8:	fa0f fe83 	sxth.w	lr, r3
 80147bc:	db0f      	blt.n	80147de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80147be:	eba3 030c 	sub.w	r3, r3, ip
 80147c2:	1ac9      	subs	r1, r1, r3
 80147c4:	b209      	sxth	r1, r1
 80147c6:	2900      	cmp	r1, #0
 80147c8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80147cc:	dd12      	ble.n	80147f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80147ce:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 80147d2:	4605      	mov	r5, r0
 80147d4:	9b05      	ldr	r3, [sp, #20]
 80147d6:	3b01      	subs	r3, #1
 80147d8:	9305      	str	r3, [sp, #20]
 80147da:	3e08      	subs	r6, #8
 80147dc:	e7c7      	b.n	801476e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80147de:	4461      	add	r1, ip
 80147e0:	b209      	sxth	r1, r1
 80147e2:	4571      	cmp	r1, lr
 80147e4:	dc38      	bgt.n	8014858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80147e6:	eba2 020c 	sub.w	r2, r2, ip
 80147ea:	b212      	sxth	r2, r2
 80147ec:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80147f0:	2a00      	cmp	r2, #0
 80147f2:	dcee      	bgt.n	80147d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80147f4:	b00f      	add	sp, #60	@ 0x3c
 80147f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147fa:	45c8      	cmp	r8, r9
 80147fc:	db2c      	blt.n	8014858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80147fe:	88f3      	ldrh	r3, [r6, #6]
 8014800:	4499      	add	r9, r3
 8014802:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8014806:	4498      	add	r8, r3
 8014808:	fa0f f989 	sxth.w	r9, r9
 801480c:	fa0f f888 	sxth.w	r8, r8
 8014810:	45c1      	cmp	r9, r8
 8014812:	db21      	blt.n	8014858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014814:	88b3      	ldrh	r3, [r6, #4]
 8014816:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801481a:	fa1f f28c 	uxth.w	r2, ip
 801481e:	4413      	add	r3, r2
 8014820:	b29b      	uxth	r3, r3
 8014822:	45e6      	cmp	lr, ip
 8014824:	fa1f f88e 	uxth.w	r8, lr
 8014828:	fa0f f983 	sxth.w	r9, r3
 801482c:	db0a      	blt.n	8014844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801482e:	eba3 0308 	sub.w	r3, r3, r8
 8014832:	1ac9      	subs	r1, r1, r3
 8014834:	b209      	sxth	r1, r1
 8014836:	2900      	cmp	r1, #0
 8014838:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801483c:	ddda      	ble.n	80147f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801483e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014842:	e7c6      	b.n	80147d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014844:	4441      	add	r1, r8
 8014846:	b209      	sxth	r1, r1
 8014848:	4549      	cmp	r1, r9
 801484a:	dc05      	bgt.n	8014858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801484c:	eba2 0208 	sub.w	r2, r2, r8
 8014850:	b212      	sxth	r2, r2
 8014852:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8014856:	e7cb      	b.n	80147f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014858:	4607      	mov	r7, r0
 801485a:	e7bb      	b.n	80147d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801485c:	2d00      	cmp	r5, #0
 801485e:	d181      	bne.n	8014764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014860:	2f00      	cmp	r7, #0
 8014862:	f000 81dd 	beq.w	8014c20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014866:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 801486a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801486e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8014872:	b2b3      	uxth	r3, r6
 8014874:	9305      	str	r3, [sp, #20]
 8014876:	9a05      	ldr	r2, [sp, #20]
 8014878:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801487c:	4413      	add	r3, r2
 801487e:	b2ba      	uxth	r2, r7
 8014880:	4492      	add	sl, r2
 8014882:	b29b      	uxth	r3, r3
 8014884:	fa1f fa8a 	uxth.w	sl, sl
 8014888:	fa0f f883 	sxth.w	r8, r3
 801488c:	fa0f f98a 	sxth.w	r9, sl
 8014890:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014894:	9b04      	ldr	r3, [sp, #16]
 8014896:	2b00      	cmp	r3, #0
 8014898:	d052      	beq.n	8014940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801489a:	9903      	ldr	r1, [sp, #12]
 801489c:	4620      	mov	r0, r4
 801489e:	f7ff fd02 	bl	80142a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80148a2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80148a6:	b1c0      	cbz	r0, 80148da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80148a8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80148ac:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80148b0:	4576      	cmp	r6, lr
 80148b2:	dc22      	bgt.n	80148fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80148b4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80148b8:	44f4      	add	ip, lr
 80148ba:	fa0f fc8c 	sxth.w	ip, ip
 80148be:	45e0      	cmp	r8, ip
 80148c0:	db1b      	blt.n	80148fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80148c2:	428f      	cmp	r7, r1
 80148c4:	fa1f fc81 	uxth.w	ip, r1
 80148c8:	88e1      	ldrh	r1, [r4, #6]
 80148ca:	dc0d      	bgt.n	80148e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80148cc:	ebaa 0c0c 	sub.w	ip, sl, ip
 80148d0:	eba1 010c 	sub.w	r1, r1, ip
 80148d4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80148d8:	80e1      	strh	r1, [r4, #6]
 80148da:	4628      	mov	r0, r5
 80148dc:	9904      	ldr	r1, [sp, #16]
 80148de:	3901      	subs	r1, #1
 80148e0:	9104      	str	r1, [sp, #16]
 80148e2:	3c08      	subs	r4, #8
 80148e4:	4605      	mov	r5, r0
 80148e6:	e7d3      	b.n	8014890 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80148e8:	4461      	add	r1, ip
 80148ea:	b209      	sxth	r1, r1
 80148ec:	4549      	cmp	r1, r9
 80148ee:	dcf5      	bgt.n	80148dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80148f0:	eba2 0c0c 	sub.w	ip, r2, ip
 80148f4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80148f8:	e7ef      	b.n	80148da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80148fa:	428f      	cmp	r7, r1
 80148fc:	dcee      	bgt.n	80148dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80148fe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014902:	4461      	add	r1, ip
 8014904:	b209      	sxth	r1, r1
 8014906:	4589      	cmp	r9, r1
 8014908:	dbe8      	blt.n	80148dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801490a:	4576      	cmp	r6, lr
 801490c:	fa1f fc8e 	uxth.w	ip, lr
 8014910:	88a1      	ldrh	r1, [r4, #4]
 8014912:	dc07      	bgt.n	8014924 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014914:	eba3 0c0c 	sub.w	ip, r3, ip
 8014918:	eba1 010c 	sub.w	r1, r1, ip
 801491c:	f8a4 8000 	strh.w	r8, [r4]
 8014920:	80a1      	strh	r1, [r4, #4]
 8014922:	e7da      	b.n	80148da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014924:	4461      	add	r1, ip
 8014926:	b209      	sxth	r1, r1
 8014928:	4588      	cmp	r8, r1
 801492a:	dbd7      	blt.n	80148dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801492c:	9905      	ldr	r1, [sp, #20]
 801492e:	eba1 0c0c 	sub.w	ip, r1, ip
 8014932:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014936:	e7d0      	b.n	80148da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014938:	20013f56 	.word	0x20013f56
 801493c:	20013f54 	.word	0x20013f54
 8014940:	2d00      	cmp	r5, #0
 8014942:	f000 816d 	beq.w	8014c20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014946:	9b06      	ldr	r3, [sp, #24]
 8014948:	445b      	add	r3, fp
 801494a:	461c      	mov	r4, r3
 801494c:	9b02      	ldr	r3, [sp, #8]
 801494e:	3301      	adds	r3, #1
 8014950:	f000 8166 	beq.w	8014c20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014954:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8014958:	4629      	mov	r1, r5
 801495a:	9803      	ldr	r0, [sp, #12]
 801495c:	f7ff fd16 	bl	801438c <_ZNK8touchgfx4Rect8includesERKS0_>
 8014960:	b120      	cbz	r0, 801496c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014962:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014966:	9801      	ldr	r0, [sp, #4]
 8014968:	f7ff feb0 	bl	80146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801496c:	9903      	ldr	r1, [sp, #12]
 801496e:	4628      	mov	r0, r5
 8014970:	f7ff fc99 	bl	80142a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014974:	2800      	cmp	r0, #0
 8014976:	f000 809c 	beq.w	8014ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801497a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801497e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014982:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014986:	9309      	str	r3, [sp, #36]	@ 0x24
 8014988:	fa1f f189 	uxth.w	r1, r9
 801498c:	eb01 0c03 	add.w	ip, r1, r3
 8014990:	fa1f fa8c 	uxth.w	sl, ip
 8014994:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8014998:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 801499c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 80149a0:	b283      	uxth	r3, r0
 80149a2:	eb03 050c 	add.w	r5, r3, ip
 80149a6:	b2ad      	uxth	r5, r5
 80149a8:	9505      	str	r5, [sp, #20]
 80149aa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80149ae:	9504      	str	r5, [sp, #16]
 80149b0:	4548      	cmp	r0, r9
 80149b2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 80149b6:	f340 8099 	ble.w	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80149ba:	1a5b      	subs	r3, r3, r1
 80149bc:	b29b      	uxth	r3, r3
 80149be:	4596      	cmp	lr, r2
 80149c0:	fa0f f08a 	sxth.w	r0, sl
 80149c4:	b21e      	sxth	r6, r3
 80149c6:	dd2e      	ble.n	8014a26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80149c8:	9f02      	ldr	r7, [sp, #8]
 80149ca:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 80149ce:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80149d2:	9f04      	ldr	r7, [sp, #16]
 80149d4:	1a3f      	subs	r7, r7, r0
 80149d6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 80149da:	fa1f fe8e 	uxth.w	lr, lr
 80149de:	b292      	uxth	r2, r2
 80149e0:	ebae 0102 	sub.w	r1, lr, r2
 80149e4:	44a6      	add	lr, r4
 80149e6:	4402      	add	r2, r0
 80149e8:	b289      	uxth	r1, r1
 80149ea:	fa0f fe8e 	sxth.w	lr, lr
 80149ee:	b212      	sxth	r2, r2
 80149f0:	b20d      	sxth	r5, r1
 80149f2:	ebae 0202 	sub.w	r2, lr, r2
 80149f6:	436f      	muls	r7, r5
 80149f8:	4372      	muls	r2, r6
 80149fa:	4297      	cmp	r7, r2
 80149fc:	db09      	blt.n	8014a12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80149fe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8014a02:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8014a06:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014a0a:	449c      	add	ip, r3
 8014a0c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014a10:	e686      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014a12:	4421      	add	r1, r4
 8014a14:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8014a18:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8014a1c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014a20:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014a24:	e67c      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014a26:	9f04      	ldr	r7, [sp, #16]
 8014a28:	42b8      	cmp	r0, r7
 8014a2a:	da27      	bge.n	8014a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8014a2c:	9902      	ldr	r1, [sp, #8]
 8014a2e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8014a32:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014a36:	eb05 010e 	add.w	r1, r5, lr
 8014a3a:	fa1f f881 	uxth.w	r8, r1
 8014a3e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8014a42:	4411      	add	r1, r2
 8014a44:	eba1 0108 	sub.w	r1, r1, r8
 8014a48:	b289      	uxth	r1, r1
 8014a4a:	fa0f f988 	sxth.w	r9, r8
 8014a4e:	eba2 020e 	sub.w	r2, r2, lr
 8014a52:	fa0f f881 	sxth.w	r8, r1
 8014a56:	1a3f      	subs	r7, r7, r0
 8014a58:	4372      	muls	r2, r6
 8014a5a:	fb08 f707 	mul.w	r7, r8, r7
 8014a5e:	42ba      	cmp	r2, r7
 8014a60:	dc06      	bgt.n	8014a70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014a62:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8014a66:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8014a6a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8014a6e:	e7ca      	b.n	8014a06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8014a70:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8014a74:	4429      	add	r1, r5
 8014a76:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014a7a:	e651      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014a7c:	9805      	ldr	r0, [sp, #20]
 8014a7e:	ebaa 0000 	sub.w	r0, sl, r0
 8014a82:	b280      	uxth	r0, r0
 8014a84:	2d06      	cmp	r5, #6
 8014a86:	fa0f fe80 	sxth.w	lr, r0
 8014a8a:	d817      	bhi.n	8014abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8014a8c:	9b04      	ldr	r3, [sp, #16]
 8014a8e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8014a92:	1c6b      	adds	r3, r5, #1
 8014a94:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8014a98:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8014a9c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014aa0:	9b01      	ldr	r3, [sp, #4]
 8014aa2:	9801      	ldr	r0, [sp, #4]
 8014aa4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014aa8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014aac:	805a      	strh	r2, [r3, #2]
 8014aae:	809e      	strh	r6, [r3, #4]
 8014ab0:	80d9      	strh	r1, [r3, #6]
 8014ab2:	9b02      	ldr	r3, [sp, #8]
 8014ab4:	3b01      	subs	r3, #1
 8014ab6:	9302      	str	r3, [sp, #8]
 8014ab8:	3c08      	subs	r4, #8
 8014aba:	e747      	b.n	801494c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8014abc:	9a02      	ldr	r2, [sp, #8]
 8014abe:	45b6      	cmp	lr, r6
 8014ac0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014ac4:	db0d      	blt.n	8014ae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014ac6:	449c      	add	ip, r3
 8014ac8:	fa1f fc8c 	uxth.w	ip, ip
 8014acc:	445a      	add	r2, fp
 8014ace:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014ad2:	448c      	add	ip, r1
 8014ad4:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014ad8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8014adc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8014ae0:	e61e      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014ae2:	445a      	add	r2, fp
 8014ae4:	4484      	add	ip, r0
 8014ae6:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8014aea:	e78f      	b.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014aec:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8014af0:	fa1f f18e 	uxth.w	r1, lr
 8014af4:	eb01 0806 	add.w	r8, r1, r6
 8014af8:	b293      	uxth	r3, r2
 8014afa:	fa1f f888 	uxth.w	r8, r8
 8014afe:	9306      	str	r3, [sp, #24]
 8014b00:	fa0f f388 	sxth.w	r3, r8
 8014b04:	9307      	str	r3, [sp, #28]
 8014b06:	9f06      	ldr	r7, [sp, #24]
 8014b08:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014b0c:	443b      	add	r3, r7
 8014b0e:	b29b      	uxth	r3, r3
 8014b10:	4596      	cmp	lr, r2
 8014b12:	9308      	str	r3, [sp, #32]
 8014b14:	da24      	bge.n	8014b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014b16:	9905      	ldr	r1, [sp, #20]
 8014b18:	eba3 0308 	sub.w	r3, r3, r8
 8014b1c:	ebaa 0401 	sub.w	r4, sl, r1
 8014b20:	b2a4      	uxth	r4, r4
 8014b22:	b29b      	uxth	r3, r3
 8014b24:	b225      	sxth	r5, r4
 8014b26:	b219      	sxth	r1, r3
 8014b28:	eba2 020e 	sub.w	r2, r2, lr
 8014b2c:	eba9 0000 	sub.w	r0, r9, r0
 8014b30:	436a      	muls	r2, r5
 8014b32:	4348      	muls	r0, r1
 8014b34:	4282      	cmp	r2, r0
 8014b36:	9a02      	ldr	r2, [sp, #8]
 8014b38:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014b3c:	445a      	add	r2, fp
 8014b3e:	dc06      	bgt.n	8014b4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014b40:	9b07      	ldr	r3, [sp, #28]
 8014b42:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8014b46:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8014b4a:	44a4      	add	ip, r4
 8014b4c:	e75e      	b.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014b4e:	9904      	ldr	r1, [sp, #16]
 8014b50:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8014b54:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8014b58:	4433      	add	r3, r6
 8014b5a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014b5e:	e5df      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014b60:	9f06      	ldr	r7, [sp, #24]
 8014b62:	9b04      	ldr	r3, [sp, #16]
 8014b64:	1bc9      	subs	r1, r1, r7
 8014b66:	fa0f f78a 	sxth.w	r7, sl
 8014b6a:	b289      	uxth	r1, r1
 8014b6c:	429f      	cmp	r7, r3
 8014b6e:	fa0f fe81 	sxth.w	lr, r1
 8014b72:	dd23      	ble.n	8014bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014b74:	9a05      	ldr	r2, [sp, #20]
 8014b76:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014b7a:	9d07      	ldr	r5, [sp, #28]
 8014b7c:	ebaa 0202 	sub.w	r2, sl, r2
 8014b80:	b292      	uxth	r2, r2
 8014b82:	eba5 0a03 	sub.w	sl, r5, r3
 8014b86:	b214      	sxth	r4, r2
 8014b88:	eba9 0000 	sub.w	r0, r9, r0
 8014b8c:	9b02      	ldr	r3, [sp, #8]
 8014b8e:	fb0e f000 	mul.w	r0, lr, r0
 8014b92:	fb04 fa0a 	mul.w	sl, r4, sl
 8014b96:	00db      	lsls	r3, r3, #3
 8014b98:	4550      	cmp	r0, sl
 8014b9a:	445b      	add	r3, fp
 8014b9c:	db03      	blt.n	8014ba6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8014b9e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8014ba2:	4494      	add	ip, r2
 8014ba4:	e732      	b.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014ba6:	9a04      	ldr	r2, [sp, #16]
 8014ba8:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8014bac:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8014bb0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8014bb4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014bb8:	4431      	add	r1, r6
 8014bba:	e75c      	b.n	8014a76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8014bbc:	9b08      	ldr	r3, [sp, #32]
 8014bbe:	eba3 0308 	sub.w	r3, r3, r8
 8014bc2:	b29b      	uxth	r3, r3
 8014bc4:	2d06      	cmp	r5, #6
 8014bc6:	b218      	sxth	r0, r3
 8014bc8:	d813      	bhi.n	8014bf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8014bca:	9b07      	ldr	r3, [sp, #28]
 8014bcc:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8014bd0:	1c6b      	adds	r3, r5, #1
 8014bd2:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8014bd6:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014bda:	9b01      	ldr	r3, [sp, #4]
 8014bdc:	9901      	ldr	r1, [sp, #4]
 8014bde:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014be2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014be6:	805a      	strh	r2, [r3, #2]
 8014be8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014bea:	809a      	strh	r2, [r3, #4]
 8014bec:	f8a3 e006 	strh.w	lr, [r3, #6]
 8014bf0:	e75f      	b.n	8014ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014bf2:	9c02      	ldr	r4, [sp, #8]
 8014bf4:	4570      	cmp	r0, lr
 8014bf6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014bfa:	db0d      	blt.n	8014c18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8014bfc:	4431      	add	r1, r6
 8014bfe:	9b06      	ldr	r3, [sp, #24]
 8014c00:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014c04:	b289      	uxth	r1, r1
 8014c06:	445c      	add	r4, fp
 8014c08:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014c0c:	4419      	add	r1, r3
 8014c0e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8014c12:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8014c16:	e583      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014c18:	445c      	add	r4, fp
 8014c1a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8014c1e:	e79b      	b.n	8014b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014c20:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014c24:	1e65      	subs	r5, r4, #1
 8014c26:	b2ad      	uxth	r5, r5
 8014c28:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8014c2c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8014c30:	42b5      	cmp	r5, r6
 8014c32:	d044      	beq.n	8014cbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014c34:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014c38:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8014c3c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8014c40:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8014c44:	4282      	cmp	r2, r0
 8014c46:	d11f      	bne.n	8014c88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014c48:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8014c4c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014c50:	459c      	cmp	ip, r3
 8014c52:	d119      	bne.n	8014c88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014c54:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8014c58:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014c5c:	19d8      	adds	r0, r3, r7
 8014c5e:	b200      	sxth	r0, r0
 8014c60:	4288      	cmp	r0, r1
 8014c62:	d109      	bne.n	8014c78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014c64:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8014c68:	4413      	add	r3, r2
 8014c6a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8014c6e:	4629      	mov	r1, r5
 8014c70:	9801      	ldr	r0, [sp, #4]
 8014c72:	f7ff fd2b 	bl	80146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014c76:	e003      	b.n	8014c80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014c78:	4411      	add	r1, r2
 8014c7a:	b209      	sxth	r1, r1
 8014c7c:	42b9      	cmp	r1, r7
 8014c7e:	d0f3      	beq.n	8014c68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8014c80:	3d01      	subs	r5, #1
 8014c82:	b2ad      	uxth	r5, r5
 8014c84:	3c08      	subs	r4, #8
 8014c86:	e7d3      	b.n	8014c30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014c88:	42b9      	cmp	r1, r7
 8014c8a:	d1f9      	bne.n	8014c80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014c8c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8014c90:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014c94:	4299      	cmp	r1, r3
 8014c96:	d1f3      	bne.n	8014c80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014c98:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014c9c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014ca0:	181f      	adds	r7, r3, r0
 8014ca2:	b23f      	sxth	r7, r7
 8014ca4:	42ba      	cmp	r2, r7
 8014ca6:	d105      	bne.n	8014cb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8014ca8:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8014cac:	440b      	add	r3, r1
 8014cae:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014cb2:	e7dc      	b.n	8014c6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8014cb4:	440a      	add	r2, r1
 8014cb6:	b212      	sxth	r2, r2
 8014cb8:	4290      	cmp	r0, r2
 8014cba:	d1e1      	bne.n	8014c80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014cbc:	e7f6      	b.n	8014cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8014cbe:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8014cc2:	2e07      	cmp	r6, #7
 8014cc4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014cc8:	d812      	bhi.n	8014cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8014cca:	1c75      	adds	r5, r6, #1
 8014ccc:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8014cd0:	9d01      	ldr	r5, [sp, #4]
 8014cd2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014cd6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8014cda:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8014cde:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8014ce2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014ce6:	442c      	add	r4, r5
 8014ce8:	8061      	strh	r1, [r4, #2]
 8014cea:	80a2      	strh	r2, [r4, #4]
 8014cec:	80e3      	strh	r3, [r4, #6]
 8014cee:	e581      	b.n	80147f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014cf0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014cf4:	3e01      	subs	r6, #1
 8014cf6:	445c      	add	r4, fp
 8014cf8:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8014cfc:	f04f 37ff 	mov.w	r7, #4294967295
 8014d00:	2500      	movs	r5, #0
 8014d02:	9305      	str	r3, [sp, #20]
 8014d04:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014d08:	9302      	str	r3, [sp, #8]
 8014d0a:	1e72      	subs	r2, r6, #1
 8014d0c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014d10:	9304      	str	r3, [sp, #16]
 8014d12:	4691      	mov	r9, r2
 8014d14:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8014d18:	f1b9 3fff 	cmp.w	r9, #4294967295
 8014d1c:	bf14      	ite	ne
 8014d1e:	9905      	ldrne	r1, [sp, #20]
 8014d20:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014d24:	6818      	ldr	r0, [r3, #0]
 8014d26:	9207      	str	r2, [sp, #28]
 8014d28:	bf18      	it	ne
 8014d2a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8014d2e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8014d32:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014d36:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014d3a:	9306      	str	r3, [sp, #24]
 8014d3c:	fb18 f801 	smulbb	r8, r8, r1
 8014d40:	6859      	ldr	r1, [r3, #4]
 8014d42:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014d46:	4671      	mov	r1, lr
 8014d48:	a80c      	add	r0, sp, #48	@ 0x30
 8014d4a:	f7ff fb45 	bl	80143d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014d4e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8014d52:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8014d56:	9b04      	ldr	r3, [sp, #16]
 8014d58:	9a02      	ldr	r2, [sp, #8]
 8014d5a:	fb10 f001 	smulbb	r0, r0, r1
 8014d5e:	fb02 8803 	mla	r8, r2, r3, r8
 8014d62:	eba0 0108 	sub.w	r1, r0, r8
 8014d66:	f04f 0c08 	mov.w	ip, #8
 8014d6a:	fb90 f0fc 	sdiv	r0, r0, ip
 8014d6e:	4288      	cmp	r0, r1
 8014d70:	dc20      	bgt.n	8014db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014d72:	4551      	cmp	r1, sl
 8014d74:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014d78:	da03      	bge.n	8014d82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8014d7a:	b1d9      	cbz	r1, 8014db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014d7c:	468a      	mov	sl, r1
 8014d7e:	464f      	mov	r7, r9
 8014d80:	4635      	mov	r5, r6
 8014d82:	f109 39ff 	add.w	r9, r9, #4294967295
 8014d86:	f119 0f02 	cmn.w	r9, #2
 8014d8a:	d1c5      	bne.n	8014d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8014d8c:	4616      	mov	r6, r2
 8014d8e:	3201      	adds	r2, #1
 8014d90:	f1a4 0408 	sub.w	r4, r4, #8
 8014d94:	d1b6      	bne.n	8014d04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014d96:	9b01      	ldr	r3, [sp, #4]
 8014d98:	b2ac      	uxth	r4, r5
 8014d9a:	00ed      	lsls	r5, r5, #3
 8014d9c:	1958      	adds	r0, r3, r5
 8014d9e:	1c7b      	adds	r3, r7, #1
 8014da0:	d10b      	bne.n	8014dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8014da2:	4601      	mov	r1, r0
 8014da4:	9803      	ldr	r0, [sp, #12]
 8014da6:	f7ff fb17 	bl	80143d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014daa:	4621      	mov	r1, r4
 8014dac:	9801      	ldr	r0, [sp, #4]
 8014dae:	f7ff fc8d 	bl	80146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014db2:	e4b5      	b.n	8014720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014db4:	464f      	mov	r7, r9
 8014db6:	4635      	mov	r5, r6
 8014db8:	e7ed      	b.n	8014d96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8014dba:	9b01      	ldr	r3, [sp, #4]
 8014dbc:	00ff      	lsls	r7, r7, #3
 8014dbe:	19d9      	adds	r1, r3, r7
 8014dc0:	f7ff fb0a 	bl	80143d8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014dc4:	9b03      	ldr	r3, [sp, #12]
 8014dc6:	cb03      	ldmia	r3!, {r0, r1}
 8014dc8:	445f      	add	r7, fp
 8014dca:	445d      	add	r5, fp
 8014dcc:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8014dd0:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8014dd4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014dd8:	9b03      	ldr	r3, [sp, #12]
 8014dda:	6869      	ldr	r1, [r5, #4]
 8014ddc:	c303      	stmia	r3!, {r0, r1}
 8014dde:	e7e4      	b.n	8014daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014de0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014de4:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8014de8:	b09b      	sub	sp, #108	@ 0x6c
 8014dea:	4604      	mov	r4, r0
 8014dec:	4630      	mov	r0, r6
 8014dee:	f7f8 fff0 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014df2:	4605      	mov	r5, r0
 8014df4:	b948      	cbnz	r0, 8014e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014df6:	6823      	ldr	r3, [r4, #0]
 8014df8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014dfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014dfe:	4620      	mov	r0, r4
 8014e00:	4798      	blx	r3
 8014e02:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8014e06:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8014e0a:	4bc6      	ldr	r3, [pc, #792]	@ (8015124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014e0c:	681b      	ldr	r3, [r3, #0]
 8014e0e:	2b00      	cmp	r3, #0
 8014e10:	d03f      	beq.n	8014e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014e12:	4dc5      	ldr	r5, [pc, #788]	@ (8015128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014e14:	4628      	mov	r0, r5
 8014e16:	f7f8 ffdc 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e1a:	4606      	mov	r6, r0
 8014e1c:	2800      	cmp	r0, #0
 8014e1e:	d138      	bne.n	8014e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014e20:	4628      	mov	r0, r5
 8014e22:	f7ff f96d 	bl	8014100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014e26:	6823      	ldr	r3, [r4, #0]
 8014e28:	6829      	ldr	r1, [r5, #0]
 8014e2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014e2c:	686a      	ldr	r2, [r5, #4]
 8014e2e:	4620      	mov	r0, r4
 8014e30:	4798      	blx	r3
 8014e32:	802e      	strh	r6, [r5, #0]
 8014e34:	806e      	strh	r6, [r5, #2]
 8014e36:	80ae      	strh	r6, [r5, #4]
 8014e38:	80ee      	strh	r6, [r5, #6]
 8014e3a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8014e3e:	4dbb      	ldr	r5, [pc, #748]	@ (801512c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014e40:	4640      	mov	r0, r8
 8014e42:	f7ff fbeb 	bl	801461c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014e46:	882e      	ldrh	r6, [r5, #0]
 8014e48:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014e4c:	4633      	mov	r3, r6
 8014e4e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014e52:	42bb      	cmp	r3, r7
 8014e54:	d224      	bcs.n	8014ea0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014e56:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8014e5a:	2907      	cmp	r1, #7
 8014e5c:	d816      	bhi.n	8014e8c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8014e5e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014e62:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014e66:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8014e6a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8014e6e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8014e72:	1c4a      	adds	r2, r1, #1
 8014e74:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8014e78:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8014e7c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8014e80:	f8a2 a002 	strh.w	sl, [r2, #2]
 8014e84:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014e88:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014e8c:	3301      	adds	r3, #1
 8014e8e:	b29b      	uxth	r3, r3
 8014e90:	e7df      	b.n	8014e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8014e92:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014e96:	2b00      	cmp	r3, #0
 8014e98:	d1cf      	bne.n	8014e3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8014e9a:	b01b      	add	sp, #108	@ 0x6c
 8014e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ea0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8014ea4:	42b3      	cmp	r3, r6
 8014ea6:	d90c      	bls.n	8014ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8014ea8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8014eac:	6822      	ldr	r2, [r4, #0]
 8014eae:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8014eb2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8014eb4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8014eb8:	4620      	mov	r0, r4
 8014eba:	3601      	adds	r6, #1
 8014ebc:	47b8      	blx	r7
 8014ebe:	b2b6      	uxth	r6, r6
 8014ec0:	e7ee      	b.n	8014ea0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014ec2:	4a9b      	ldr	r2, [pc, #620]	@ (8015130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014ec4:	6813      	ldr	r3, [r2, #0]
 8014ec6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8014eca:	2b01      	cmp	r3, #1
 8014ecc:	4691      	mov	r9, r2
 8014ece:	f040 80e2 	bne.w	8015096 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8014ed2:	8829      	ldrh	r1, [r5, #0]
 8014ed4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014ed8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8014edc:	33ae      	adds	r3, #174	@ 0xae
 8014ede:	2600      	movs	r6, #0
 8014ee0:	428f      	cmp	r7, r1
 8014ee2:	f103 0308 	add.w	r3, r3, #8
 8014ee6:	dd0a      	ble.n	8014efe <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014ee8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8014eec:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8014ef0:	4402      	add	r2, r0
 8014ef2:	b212      	sxth	r2, r2
 8014ef4:	4296      	cmp	r6, r2
 8014ef6:	bfb8      	it	lt
 8014ef8:	4616      	movlt	r6, r2
 8014efa:	3101      	adds	r1, #1
 8014efc:	e7f0      	b.n	8014ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8014efe:	4b8d      	ldr	r3, [pc, #564]	@ (8015134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8014f00:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8015130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8014f04:	881b      	ldrh	r3, [r3, #0]
 8014f06:	2b0f      	cmp	r3, #15
 8014f08:	bf88      	it	hi
 8014f0a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8014f0e:	f04f 0300 	mov.w	r3, #0
 8014f12:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014f16:	bf98      	it	ls
 8014f18:	f04f 0b01 	movls.w	fp, #1
 8014f1c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8014f20:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014f24:	4b82      	ldr	r3, [pc, #520]	@ (8015130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014f26:	4438      	add	r0, r7
 8014f28:	b207      	sxth	r7, r0
 8014f2a:	6818      	ldr	r0, [r3, #0]
 8014f2c:	42b7      	cmp	r7, r6
 8014f2e:	6803      	ldr	r3, [r0, #0]
 8014f30:	f280 8083 	bge.w	801503a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014f34:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8014f38:	4798      	blx	r3
 8014f3a:	eb07 030b 	add.w	r3, r7, fp
 8014f3e:	4298      	cmp	r0, r3
 8014f40:	da07      	bge.n	8014f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014f42:	42b0      	cmp	r0, r6
 8014f44:	da05      	bge.n	8014f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014f46:	4287      	cmp	r7, r0
 8014f48:	dd6c      	ble.n	8015024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014f4a:	2f00      	cmp	r7, #0
 8014f4c:	dd6a      	ble.n	8015024 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014f4e:	4630      	mov	r0, r6
 8014f50:	e004      	b.n	8014f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014f52:	4287      	cmp	r7, r0
 8014f54:	dcfb      	bgt.n	8014f4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014f56:	42b0      	cmp	r0, r6
 8014f58:	bfa8      	it	ge
 8014f5a:	4630      	movge	r0, r6
 8014f5c:	4b76      	ldr	r3, [pc, #472]	@ (8015138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8014f5e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014f62:	1bc0      	subs	r0, r0, r7
 8014f64:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014f68:	882f      	ldrh	r7, [r5, #0]
 8014f6a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014f6e:	2200      	movs	r2, #0
 8014f70:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014f74:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014f78:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014f7c:	42bb      	cmp	r3, r7
 8014f7e:	d9cd      	bls.n	8014f1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014f80:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014f84:	ab07      	add	r3, sp, #28
 8014f86:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014f8a:	6851      	ldr	r1, [r2, #4]
 8014f8c:	c303      	stmia	r3!, {r0, r1}
 8014f8e:	a905      	add	r1, sp, #20
 8014f90:	a807      	add	r0, sp, #28
 8014f92:	f7ff f988 	bl	80142a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014f96:	2800      	cmp	r0, #0
 8014f98:	d04c      	beq.n	8015034 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8014f9a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8014f9e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8014fa2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014fa6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8014faa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014fae:	9302      	str	r3, [sp, #8]
 8014fb0:	4686      	mov	lr, r0
 8014fb2:	4290      	cmp	r0, r2
 8014fb4:	4450      	add	r0, sl
 8014fb6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8014fba:	bfb8      	it	lt
 8014fbc:	4696      	movlt	lr, r2
 8014fbe:	4452      	add	r2, sl
 8014fc0:	4299      	cmp	r1, r3
 8014fc2:	b280      	uxth	r0, r0
 8014fc4:	b292      	uxth	r2, r2
 8014fc6:	468c      	mov	ip, r1
 8014fc8:	fa0f fa82 	sxth.w	sl, r2
 8014fcc:	bfb8      	it	lt
 8014fce:	469c      	movlt	ip, r3
 8014fd0:	b203      	sxth	r3, r0
 8014fd2:	4553      	cmp	r3, sl
 8014fd4:	bfb8      	it	lt
 8014fd6:	4602      	movlt	r2, r0
 8014fd8:	eba2 020e 	sub.w	r2, r2, lr
 8014fdc:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014fe0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8014fe4:	9b02      	ldr	r3, [sp, #8]
 8014fe6:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014fea:	4411      	add	r1, r2
 8014fec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014ff0:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014ff4:	4413      	add	r3, r2
 8014ff6:	b289      	uxth	r1, r1
 8014ff8:	b29b      	uxth	r3, r3
 8014ffa:	b208      	sxth	r0, r1
 8014ffc:	b21a      	sxth	r2, r3
 8014ffe:	4290      	cmp	r0, r2
 8015000:	bfb8      	it	lt
 8015002:	460b      	movlt	r3, r1
 8015004:	eba3 030c 	sub.w	r3, r3, ip
 8015008:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801500c:	a807      	add	r0, sp, #28
 801500e:	f7f8 fee0 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015012:	b920      	cbnz	r0, 801501e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015014:	6823      	ldr	r3, [r4, #0]
 8015016:	a907      	add	r1, sp, #28
 8015018:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801501a:	4620      	mov	r0, r4
 801501c:	4798      	blx	r3
 801501e:	3701      	adds	r7, #1
 8015020:	b2bf      	uxth	r7, r7
 8015022:	e7a9      	b.n	8014f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015024:	f8d9 0000 	ldr.w	r0, [r9]
 8015028:	6803      	ldr	r3, [r0, #0]
 801502a:	2101      	movs	r1, #1
 801502c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8015030:	4798      	blx	r3
 8015032:	e773      	b.n	8014f1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015034:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015038:	e7e8      	b.n	801500c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801503a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801503c:	4798      	blx	r3
 801503e:	4b3f      	ldr	r3, [pc, #252]	@ (801513c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015040:	781b      	ldrb	r3, [r3, #0]
 8015042:	2b00      	cmp	r3, #0
 8015044:	f43f af29 	beq.w	8014e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015048:	2300      	movs	r3, #0
 801504a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801504e:	882b      	ldrh	r3, [r5, #0]
 8015050:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8015054:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8015058:	42ab      	cmp	r3, r5
 801505a:	f4bf af1e 	bcs.w	8014e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801505e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8015062:	2907      	cmp	r1, #7
 8015064:	d814      	bhi.n	8015090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015066:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801506a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801506e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015072:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015076:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801507a:	1c4a      	adds	r2, r1, #1
 801507c:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8015080:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015084:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015088:	f8a2 c002 	strh.w	ip, [r2, #2]
 801508c:	8097      	strh	r7, [r2, #4]
 801508e:	80d6      	strh	r6, [r2, #6]
 8015090:	3301      	adds	r3, #1
 8015092:	b29b      	uxth	r3, r3
 8015094:	e7e0      	b.n	8015058 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015096:	2b02      	cmp	r3, #2
 8015098:	f040 8133 	bne.w	8015302 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801509c:	4b28      	ldr	r3, [pc, #160]	@ (8015140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801509e:	781b      	ldrb	r3, [r3, #0]
 80150a0:	2b01      	cmp	r3, #1
 80150a2:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 80150a6:	f000 8098 	beq.w	80151da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80150aa:	882a      	ldrh	r2, [r5, #0]
 80150ac:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 80150b0:	3201      	adds	r2, #1
 80150b2:	b292      	uxth	r2, r2
 80150b4:	2900      	cmp	r1, #0
 80150b6:	d0c2      	beq.n	801503e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80150b8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 80150bc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 80150c0:	441e      	add	r6, r3
 80150c2:	b236      	sxth	r6, r6
 80150c4:	4694      	mov	ip, r2
 80150c6:	f04f 0900 	mov.w	r9, #0
 80150ca:	fa1f f38c 	uxth.w	r3, ip
 80150ce:	4299      	cmp	r1, r3
 80150d0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80150d4:	f240 80bf 	bls.w	8015256 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80150d8:	4427      	add	r7, r4
 80150da:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80150de:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80150e2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80150e6:	4283      	cmp	r3, r0
 80150e8:	f340 80a1 	ble.w	801522e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80150ec:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 80150f0:	4406      	add	r6, r0
 80150f2:	b236      	sxth	r6, r6
 80150f4:	429e      	cmp	r6, r3
 80150f6:	bfa8      	it	ge
 80150f8:	461e      	movge	r6, r3
 80150fa:	46e1      	mov	r9, ip
 80150fc:	f10c 0c01 	add.w	ip, ip, #1
 8015100:	e7e3      	b.n	80150ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015102:	d10a      	bne.n	801511a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015104:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8015108:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801510c:	4562      	cmp	r2, ip
 801510e:	bfb8      	it	lt
 8015110:	4662      	movlt	r2, ip
 8015112:	4288      	cmp	r0, r1
 8015114:	bfb8      	it	lt
 8015116:	461f      	movlt	r7, r3
 8015118:	e087      	b.n	801522a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801511a:	428a      	cmp	r2, r1
 801511c:	bfb8      	it	lt
 801511e:	460a      	movlt	r2, r1
 8015120:	e083      	b.n	801522a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015122:	bf00      	nop
 8015124:	20013fa0 	.word	0x20013fa0
 8015128:	20013fac 	.word	0x20013fac
 801512c:	20000084 	.word	0x20000084
 8015130:	20013f60 	.word	0x20013f60
 8015134:	20013f56 	.word	0x20013f56
 8015138:	20013f54 	.word	0x20013f54
 801513c:	20013f5e 	.word	0x20013f5e
 8015140:	20013f58 	.word	0x20013f58
 8015144:	19a1      	adds	r1, r4, r6
 8015146:	ab07      	add	r3, sp, #28
 8015148:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801514c:	6849      	ldr	r1, [r1, #4]
 801514e:	c303      	stmia	r3!, {r0, r1}
 8015150:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015154:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015158:	2b13      	cmp	r3, #19
 801515a:	bfd8      	it	le
 801515c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015160:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015164:	440b      	add	r3, r1
 8015166:	1a9b      	subs	r3, r3, r2
 8015168:	a807      	add	r0, sp, #28
 801516a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801516e:	f7fe ffe1 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015172:	a807      	add	r0, sp, #28
 8015174:	f7f8 fe2d 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015178:	bb78      	cbnz	r0, 80151da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801517a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 801517e:	f8d9 0000 	ldr.w	r0, [r9]
 8015182:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015186:	f8d0 e000 	ldr.w	lr, [r0]
 801518a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801518e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015192:	f1bc 0f14 	cmp.w	ip, #20
 8015196:	bfa8      	it	ge
 8015198:	f04f 0c14 	movge.w	ip, #20
 801519c:	fa1f fc8c 	uxth.w	ip, ip
 80151a0:	f8cd c000 	str.w	ip, [sp]
 80151a4:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 80151a8:	47d8      	blx	fp
 80151aa:	4683      	mov	fp, r0
 80151ac:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80151b0:	a807      	add	r0, sp, #28
 80151b2:	f7fe ffa5 	bl	8014100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80151b6:	6823      	ldr	r3, [r4, #0]
 80151b8:	4426      	add	r6, r4
 80151ba:	4620      	mov	r0, r4
 80151bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80151be:	a907      	add	r1, sp, #28
 80151c0:	4798      	blx	r3
 80151c2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 80151c6:	eba0 000b 	sub.w	r0, r0, fp
 80151ca:	b200      	sxth	r0, r0
 80151cc:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 80151d0:	b918      	cbnz	r0, 80151da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80151d2:	b2b9      	uxth	r1, r7
 80151d4:	4650      	mov	r0, sl
 80151d6:	f7ff fa79 	bl	80146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80151da:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80151de:	f1bb 0f00 	cmp.w	fp, #0
 80151e2:	f43f af2c 	beq.w	801503e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80151e6:	882b      	ldrh	r3, [r5, #0]
 80151e8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80151ec:	3301      	adds	r3, #1
 80151ee:	b29b      	uxth	r3, r3
 80151f0:	2700      	movs	r7, #0
 80151f2:	b299      	uxth	r1, r3
 80151f4:	458b      	cmp	fp, r1
 80151f6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80151fa:	d9a3      	bls.n	8015144 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80151fc:	4426      	add	r6, r4
 80151fe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015202:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8015206:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 801520a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801520e:	4408      	add	r0, r1
 8015210:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8015214:	4461      	add	r1, ip
 8015216:	b200      	sxth	r0, r0
 8015218:	b209      	sxth	r1, r1
 801521a:	4288      	cmp	r0, r1
 801521c:	f6bf af71 	bge.w	8015102 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015220:	4584      	cmp	ip, r0
 8015222:	4662      	mov	r2, ip
 8015224:	461f      	mov	r7, r3
 8015226:	bfb8      	it	lt
 8015228:	4602      	movlt	r2, r0
 801522a:	3301      	adds	r3, #1
 801522c:	e7e1      	b.n	80151f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801522e:	d10e      	bne.n	801524e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015230:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8015234:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8015238:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801523c:	4473      	add	r3, lr
 801523e:	b21b      	sxth	r3, r3
 8015240:	429e      	cmp	r6, r3
 8015242:	bfa8      	it	ge
 8015244:	461e      	movge	r6, r3
 8015246:	4287      	cmp	r7, r0
 8015248:	bfb8      	it	lt
 801524a:	46e1      	movlt	r9, ip
 801524c:	e756      	b.n	80150fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801524e:	4286      	cmp	r6, r0
 8015250:	bfa8      	it	ge
 8015252:	4606      	movge	r6, r0
 8015254:	e752      	b.n	80150fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015256:	eb0a 0007 	add.w	r0, sl, r7
 801525a:	4427      	add	r7, r4
 801525c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015260:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8015264:	f1bb 0f13 	cmp.w	fp, #19
 8015268:	bfde      	ittt	le
 801526a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 801526e:	445e      	addle	r6, fp
 8015270:	b236      	sxthle	r6, r6
 8015272:	f7f8 fdae 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015276:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801527a:	2800      	cmp	r0, #0
 801527c:	f47f af1a 	bne.w	80150b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015280:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8015284:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015288:	482a      	ldr	r0, [pc, #168]	@ (8015334 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801528a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801528e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8015292:	6800      	ldr	r0, [r0, #0]
 8015294:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015298:	1ab6      	subs	r6, r6, r2
 801529a:	2e14      	cmp	r6, #20
 801529c:	f8ad 201e 	strh.w	r2, [sp, #30]
 80152a0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80152a4:	bfa8      	it	ge
 80152a6:	2614      	movge	r6, #20
 80152a8:	f8d0 c000 	ldr.w	ip, [r0]
 80152ac:	b2b6      	uxth	r6, r6
 80152ae:	fa1f fb8b 	uxth.w	fp, fp
 80152b2:	455e      	cmp	r6, fp
 80152b4:	bf94      	ite	ls
 80152b6:	9600      	strls	r6, [sp, #0]
 80152b8:	f8cd b000 	strhi.w	fp, [sp]
 80152bc:	b292      	uxth	r2, r2
 80152be:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 80152c2:	b29b      	uxth	r3, r3
 80152c4:	b289      	uxth	r1, r1
 80152c6:	47b0      	blx	r6
 80152c8:	6823      	ldr	r3, [r4, #0]
 80152ca:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80152ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80152d0:	a907      	add	r1, sp, #28
 80152d2:	4620      	mov	r0, r4
 80152d4:	4798      	blx	r3
 80152d6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 80152da:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80152de:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80152e2:	1a5b      	subs	r3, r3, r1
 80152e4:	440a      	add	r2, r1
 80152e6:	b21b      	sxth	r3, r3
 80152e8:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80152ec:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80152f0:	2b00      	cmp	r3, #0
 80152f2:	f47f aeda 	bne.w	80150aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80152f6:	fa1f f189 	uxth.w	r1, r9
 80152fa:	4650      	mov	r0, sl
 80152fc:	f7ff f9e6 	bl	80146cc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015300:	e6d3      	b.n	80150aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015302:	882e      	ldrh	r6, [r5, #0]
 8015304:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8015308:	42b3      	cmp	r3, r6
 801530a:	f67f ae98 	bls.w	801503e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801530e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015312:	ab07      	add	r3, sp, #28
 8015314:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015318:	6851      	ldr	r1, [r2, #4]
 801531a:	c303      	stmia	r3!, {r0, r1}
 801531c:	a807      	add	r0, sp, #28
 801531e:	f7f8 fd58 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015322:	b920      	cbnz	r0, 801532e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015324:	6823      	ldr	r3, [r4, #0]
 8015326:	a907      	add	r1, sp, #28
 8015328:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801532a:	4620      	mov	r0, r4
 801532c:	4798      	blx	r3
 801532e:	3601      	adds	r6, #1
 8015330:	b2b6      	uxth	r6, r6
 8015332:	e7e7      	b.n	8015304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015334:	20013f60 	.word	0x20013f60

08015338 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015338:	4b03      	ldr	r3, [pc, #12]	@ (8015348 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801533a:	2200      	movs	r2, #0
 801533c:	801a      	strh	r2, [r3, #0]
 801533e:	805a      	strh	r2, [r3, #2]
 8015340:	809a      	strh	r2, [r3, #4]
 8015342:	80da      	strh	r2, [r3, #6]
 8015344:	4770      	bx	lr
 8015346:	bf00      	nop
 8015348:	20013fac 	.word	0x20013fac

0801534c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801534c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015350:	4606      	mov	r6, r0
 8015352:	b09d      	sub	sp, #116	@ 0x74
 8015354:	a803      	add	r0, sp, #12
 8015356:	4614      	mov	r4, r2
 8015358:	468a      	mov	sl, r1
 801535a:	461d      	mov	r5, r3
 801535c:	f001 f95d 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 8015360:	6833      	ldr	r3, [r6, #0]
 8015362:	4630      	mov	r0, r6
 8015364:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015366:	4798      	blx	r3
 8015368:	6833      	ldr	r3, [r6, #0]
 801536a:	4607      	mov	r7, r0
 801536c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801536e:	4630      	mov	r0, r6
 8015370:	4798      	blx	r3
 8015372:	462a      	mov	r2, r5
 8015374:	9000      	str	r0, [sp, #0]
 8015376:	4621      	mov	r1, r4
 8015378:	463b      	mov	r3, r7
 801537a:	a803      	add	r0, sp, #12
 801537c:	f001 f9a8 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015380:	2500      	movs	r5, #0
 8015382:	462c      	mov	r4, r5
 8015384:	46a9      	mov	r9, r5
 8015386:	46a8      	mov	r8, r5
 8015388:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801538c:	2300      	movs	r3, #0
 801538e:	9302      	str	r3, [sp, #8]
 8015390:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015394:	429c      	cmp	r4, r3
 8015396:	d002      	beq.n	801539e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015398:	455c      	cmp	r4, fp
 801539a:	bf18      	it	ne
 801539c:	4625      	movne	r5, r4
 801539e:	ab02      	add	r3, sp, #8
 80153a0:	4632      	mov	r2, r6
 80153a2:	4651      	mov	r1, sl
 80153a4:	a803      	add	r0, sp, #12
 80153a6:	f001 fcbf 	bl	8016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80153aa:	4604      	mov	r4, r0
 80153ac:	b108      	cbz	r0, 80153b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80153ae:	280a      	cmp	r0, #10
 80153b0:	d10a      	bne.n	80153c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80153b2:	45c1      	cmp	r9, r8
 80153b4:	bf38      	it	cc
 80153b6:	46c1      	movcc	r9, r8
 80153b8:	f04f 0800 	mov.w	r8, #0
 80153bc:	2c00      	cmp	r4, #0
 80153be:	d1e5      	bne.n	801538c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80153c0:	4648      	mov	r0, r9
 80153c2:	b01d      	add	sp, #116	@ 0x74
 80153c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153c8:	9a02      	ldr	r2, [sp, #8]
 80153ca:	2a00      	cmp	r2, #0
 80153cc:	d0de      	beq.n	801538c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80153ce:	7b57      	ldrb	r7, [r2, #13]
 80153d0:	6833      	ldr	r3, [r6, #0]
 80153d2:	8894      	ldrh	r4, [r2, #4]
 80153d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80153d6:	007f      	lsls	r7, r7, #1
 80153d8:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80153dc:	7a97      	ldrb	r7, [r2, #10]
 80153de:	4629      	mov	r1, r5
 80153e0:	4307      	orrs	r7, r0
 80153e2:	4630      	mov	r0, r6
 80153e4:	4798      	blx	r3
 80153e6:	4438      	add	r0, r7
 80153e8:	4480      	add	r8, r0
 80153ea:	fa1f f888 	uxth.w	r8, r8
 80153ee:	e7e5      	b.n	80153bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080153f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80153f0:	b508      	push	{r3, lr}
 80153f2:	6803      	ldr	r3, [r0, #0]
 80153f4:	68db      	ldr	r3, [r3, #12]
 80153f6:	4798      	blx	r3
 80153f8:	b128      	cbz	r0, 8015406 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80153fa:	7b43      	ldrb	r3, [r0, #13]
 80153fc:	7a80      	ldrb	r0, [r0, #10]
 80153fe:	005b      	lsls	r3, r3, #1
 8015400:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015404:	4318      	orrs	r0, r3
 8015406:	bd08      	pop	{r3, pc}

08015408 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015408:	b40e      	push	{r1, r2, r3}
 801540a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801540c:	b09e      	sub	sp, #120	@ 0x78
 801540e:	ab23      	add	r3, sp, #140	@ 0x8c
 8015410:	4605      	mov	r5, r0
 8015412:	f853 4b04 	ldr.w	r4, [r3], #4
 8015416:	9303      	str	r3, [sp, #12]
 8015418:	a805      	add	r0, sp, #20
 801541a:	f001 f8fe 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 801541e:	682b      	ldr	r3, [r5, #0]
 8015420:	4628      	mov	r0, r5
 8015422:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015424:	4798      	blx	r3
 8015426:	682b      	ldr	r3, [r5, #0]
 8015428:	4606      	mov	r6, r0
 801542a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801542c:	4628      	mov	r0, r5
 801542e:	4798      	blx	r3
 8015430:	4633      	mov	r3, r6
 8015432:	ae1e      	add	r6, sp, #120	@ 0x78
 8015434:	4621      	mov	r1, r4
 8015436:	9000      	str	r0, [sp, #0]
 8015438:	9a03      	ldr	r2, [sp, #12]
 801543a:	2400      	movs	r4, #0
 801543c:	a805      	add	r0, sp, #20
 801543e:	f001 f947 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015442:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015446:	462a      	mov	r2, r5
 8015448:	4633      	mov	r3, r6
 801544a:	4621      	mov	r1, r4
 801544c:	a805      	add	r0, sp, #20
 801544e:	f001 fc6b 	bl	8016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015452:	b1f0      	cbz	r0, 8015492 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015454:	280a      	cmp	r0, #10
 8015456:	d018      	beq.n	801548a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015458:	9f04      	ldr	r7, [sp, #16]
 801545a:	b1b7      	cbz	r7, 801548a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801545c:	7b78      	ldrb	r0, [r7, #13]
 801545e:	7a3b      	ldrb	r3, [r7, #8]
 8015460:	88ea      	ldrh	r2, [r5, #6]
 8015462:	00c1      	lsls	r1, r0, #3
 8015464:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8015468:	4319      	orrs	r1, r3
 801546a:	0643      	lsls	r3, r0, #25
 801546c:	bf44      	itt	mi
 801546e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8015472:	b219      	sxthmi	r1, r3
 8015474:	0100      	lsls	r0, r0, #4
 8015476:	79fb      	ldrb	r3, [r7, #7]
 8015478:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801547c:	4303      	orrs	r3, r0
 801547e:	4413      	add	r3, r2
 8015480:	1a5b      	subs	r3, r3, r1
 8015482:	b21b      	sxth	r3, r3
 8015484:	429c      	cmp	r4, r3
 8015486:	bfb8      	it	lt
 8015488:	461c      	movlt	r4, r3
 801548a:	4633      	mov	r3, r6
 801548c:	462a      	mov	r2, r5
 801548e:	2100      	movs	r1, #0
 8015490:	e7dc      	b.n	801544c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015492:	b2a0      	uxth	r0, r4
 8015494:	b01e      	add	sp, #120	@ 0x78
 8015496:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801549a:	b003      	add	sp, #12
 801549c:	4770      	bx	lr

0801549e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801549e:	7a43      	ldrb	r3, [r0, #9]
 80154a0:	8880      	ldrh	r0, [r0, #4]
 80154a2:	4418      	add	r0, r3
 80154a4:	b280      	uxth	r0, r0
 80154a6:	4770      	bx	lr

080154a8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80154a8:	6803      	ldr	r3, [r0, #0]
 80154aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80154ac:	4718      	bx	r3

080154ae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80154ae:	b40e      	push	{r1, r2, r3}
 80154b0:	b570      	push	{r4, r5, r6, lr}
 80154b2:	b09d      	sub	sp, #116	@ 0x74
 80154b4:	ab21      	add	r3, sp, #132	@ 0x84
 80154b6:	4604      	mov	r4, r0
 80154b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80154bc:	9302      	str	r3, [sp, #8]
 80154be:	a803      	add	r0, sp, #12
 80154c0:	f001 f8ab 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 80154c4:	6823      	ldr	r3, [r4, #0]
 80154c6:	4620      	mov	r0, r4
 80154c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80154ca:	4798      	blx	r3
 80154cc:	6823      	ldr	r3, [r4, #0]
 80154ce:	4606      	mov	r6, r0
 80154d0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80154d2:	4620      	mov	r0, r4
 80154d4:	4798      	blx	r3
 80154d6:	4633      	mov	r3, r6
 80154d8:	9000      	str	r0, [sp, #0]
 80154da:	9a02      	ldr	r2, [sp, #8]
 80154dc:	4629      	mov	r1, r5
 80154de:	a803      	add	r0, sp, #12
 80154e0:	f001 f8f6 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80154e4:	a803      	add	r0, sp, #12
 80154e6:	f001 fced 	bl	8016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80154ea:	2401      	movs	r4, #1
 80154ec:	b2a3      	uxth	r3, r4
 80154ee:	b140      	cbz	r0, 8015502 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80154f0:	280a      	cmp	r0, #10
 80154f2:	bf08      	it	eq
 80154f4:	3301      	addeq	r3, #1
 80154f6:	a803      	add	r0, sp, #12
 80154f8:	bf08      	it	eq
 80154fa:	b21c      	sxtheq	r4, r3
 80154fc:	f001 fce2 	bl	8016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015500:	e7f4      	b.n	80154ec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015502:	4618      	mov	r0, r3
 8015504:	b01d      	add	sp, #116	@ 0x74
 8015506:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801550a:	b003      	add	sp, #12
 801550c:	4770      	bx	lr

0801550e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801550e:	b40e      	push	{r1, r2, r3}
 8015510:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015512:	b09e      	sub	sp, #120	@ 0x78
 8015514:	ab23      	add	r3, sp, #140	@ 0x8c
 8015516:	4604      	mov	r4, r0
 8015518:	f853 5b04 	ldr.w	r5, [r3], #4
 801551c:	9303      	str	r3, [sp, #12]
 801551e:	a805      	add	r0, sp, #20
 8015520:	f001 f87b 	bl	801661a <_ZN8touchgfx12TextProviderC1Ev>
 8015524:	6823      	ldr	r3, [r4, #0]
 8015526:	4620      	mov	r0, r4
 8015528:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801552a:	4798      	blx	r3
 801552c:	6823      	ldr	r3, [r4, #0]
 801552e:	4606      	mov	r6, r0
 8015530:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8015532:	4620      	mov	r0, r4
 8015534:	4798      	blx	r3
 8015536:	4633      	mov	r3, r6
 8015538:	4629      	mov	r1, r5
 801553a:	9000      	str	r0, [sp, #0]
 801553c:	9a03      	ldr	r2, [sp, #12]
 801553e:	a805      	add	r0, sp, #20
 8015540:	ad1e      	add	r5, sp, #120	@ 0x78
 8015542:	f001 f8c5 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015546:	2100      	movs	r1, #0
 8015548:	f845 1d68 	str.w	r1, [r5, #-104]!
 801554c:	4622      	mov	r2, r4
 801554e:	462b      	mov	r3, r5
 8015550:	a805      	add	r0, sp, #20
 8015552:	f001 fbe9 	bl	8016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015556:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801555a:	b1d8      	cbz	r0, 8015594 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801555c:	280a      	cmp	r0, #10
 801555e:	d012      	beq.n	8015586 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015560:	9804      	ldr	r0, [sp, #16]
 8015562:	b180      	cbz	r0, 8015586 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015564:	7b47      	ldrb	r7, [r0, #13]
 8015566:	88e2      	ldrh	r2, [r4, #6]
 8015568:	00fb      	lsls	r3, r7, #3
 801556a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801556e:	7a03      	ldrb	r3, [r0, #8]
 8015570:	430b      	orrs	r3, r1
 8015572:	0679      	lsls	r1, r7, #25
 8015574:	bf44      	itt	mi
 8015576:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801557a:	b21b      	sxthmi	r3, r3
 801557c:	1ad3      	subs	r3, r2, r3
 801557e:	b21b      	sxth	r3, r3
 8015580:	429e      	cmp	r6, r3
 8015582:	bfa8      	it	ge
 8015584:	461e      	movge	r6, r3
 8015586:	462b      	mov	r3, r5
 8015588:	4622      	mov	r2, r4
 801558a:	2100      	movs	r1, #0
 801558c:	a805      	add	r0, sp, #20
 801558e:	f001 fbcb 	bl	8016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015592:	e7e2      	b.n	801555a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015594:	4630      	mov	r0, r6
 8015596:	b01e      	add	sp, #120	@ 0x78
 8015598:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801559c:	b003      	add	sp, #12
 801559e:	4770      	bx	lr

080155a0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80155a0:	b513      	push	{r0, r1, r4, lr}
 80155a2:	6803      	ldr	r3, [r0, #0]
 80155a4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80155a8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80155ac:	f8ad 1004 	strh.w	r1, [sp, #4]
 80155b0:	2400      	movs	r4, #0
 80155b2:	9400      	str	r4, [sp, #0]
 80155b4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80155b8:	691b      	ldr	r3, [r3, #16]
 80155ba:	4669      	mov	r1, sp
 80155bc:	4798      	blx	r3
 80155be:	b002      	add	sp, #8
 80155c0:	bd10      	pop	{r4, pc}

080155c2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80155c2:	b538      	push	{r3, r4, r5, lr}
 80155c4:	680b      	ldr	r3, [r1, #0]
 80155c6:	460c      	mov	r4, r1
 80155c8:	68db      	ldr	r3, [r3, #12]
 80155ca:	4605      	mov	r5, r0
 80155cc:	4798      	blx	r3
 80155ce:	6823      	ldr	r3, [r4, #0]
 80155d0:	4620      	mov	r0, r4
 80155d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80155d4:	4629      	mov	r1, r5
 80155d6:	4798      	blx	r3
 80155d8:	4628      	mov	r0, r5
 80155da:	bd38      	pop	{r3, r4, r5, pc}

080155dc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80155dc:	b410      	push	{r4}
 80155de:	880a      	ldrh	r2, [r1, #0]
 80155e0:	8884      	ldrh	r4, [r0, #4]
 80155e2:	4422      	add	r2, r4
 80155e4:	800a      	strh	r2, [r1, #0]
 80155e6:	88c4      	ldrh	r4, [r0, #6]
 80155e8:	884a      	ldrh	r2, [r1, #2]
 80155ea:	4422      	add	r2, r4
 80155ec:	804a      	strh	r2, [r1, #2]
 80155ee:	6940      	ldr	r0, [r0, #20]
 80155f0:	b120      	cbz	r0, 80155fc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80155f2:	6803      	ldr	r3, [r0, #0]
 80155f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80155f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80155fa:	4718      	bx	r3
 80155fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015600:	4770      	bx	lr

08015602 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015602:	b570      	push	{r4, r5, r6, lr}
 8015604:	8882      	ldrh	r2, [r0, #4]
 8015606:	880b      	ldrh	r3, [r1, #0]
 8015608:	4413      	add	r3, r2
 801560a:	800b      	strh	r3, [r1, #0]
 801560c:	88c2      	ldrh	r2, [r0, #6]
 801560e:	884b      	ldrh	r3, [r1, #2]
 8015610:	460c      	mov	r4, r1
 8015612:	4413      	add	r3, r2
 8015614:	804b      	strh	r3, [r1, #2]
 8015616:	4605      	mov	r5, r0
 8015618:	1d01      	adds	r1, r0, #4
 801561a:	4620      	mov	r0, r4
 801561c:	f7f8 fb96 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8015620:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015624:	2b00      	cmp	r3, #0
 8015626:	dd0b      	ble.n	8015640 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015628:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801562c:	2b00      	cmp	r3, #0
 801562e:	dd07      	ble.n	8015640 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015630:	6968      	ldr	r0, [r5, #20]
 8015632:	b128      	cbz	r0, 8015640 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015634:	6803      	ldr	r3, [r0, #0]
 8015636:	4621      	mov	r1, r4
 8015638:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801563a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801563e:	4718      	bx	r3
 8015640:	bd70      	pop	{r4, r5, r6, pc}
	...

08015644 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015644:	b570      	push	{r4, r5, r6, lr}
 8015646:	8882      	ldrh	r2, [r0, #4]
 8015648:	880b      	ldrh	r3, [r1, #0]
 801564a:	4413      	add	r3, r2
 801564c:	800b      	strh	r3, [r1, #0]
 801564e:	88c2      	ldrh	r2, [r0, #6]
 8015650:	884b      	ldrh	r3, [r1, #2]
 8015652:	460c      	mov	r4, r1
 8015654:	4413      	add	r3, r2
 8015656:	804b      	strh	r3, [r1, #2]
 8015658:	4605      	mov	r5, r0
 801565a:	1d01      	adds	r1, r0, #4
 801565c:	4620      	mov	r0, r4
 801565e:	f7f8 fb75 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8015662:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015666:	2b00      	cmp	r3, #0
 8015668:	dd19      	ble.n	801569e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801566a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801566e:	2b00      	cmp	r3, #0
 8015670:	dd15      	ble.n	801569e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015672:	6968      	ldr	r0, [r5, #20]
 8015674:	b128      	cbz	r0, 8015682 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015676:	6803      	ldr	r3, [r0, #0]
 8015678:	4621      	mov	r1, r4
 801567a:	691b      	ldr	r3, [r3, #16]
 801567c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015680:	4718      	bx	r3
 8015682:	4b07      	ldr	r3, [pc, #28]	@ (80156a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015684:	681b      	ldr	r3, [r3, #0]
 8015686:	3304      	adds	r3, #4
 8015688:	429d      	cmp	r5, r3
 801568a:	d108      	bne.n	801569e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801568c:	f7fe feea 	bl	8014464 <_ZN8touchgfx11Application11getInstanceEv>
 8015690:	6803      	ldr	r3, [r0, #0]
 8015692:	6821      	ldr	r1, [r4, #0]
 8015694:	6862      	ldr	r2, [r4, #4]
 8015696:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801569c:	4718      	bx	r3
 801569e:	bd70      	pop	{r4, r5, r6, pc}
 80156a0:	20013fa4 	.word	0x20013fa4

080156a4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80156a4:	b570      	push	{r4, r5, r6, lr}
 80156a6:	4604      	mov	r4, r0
 80156a8:	4616      	mov	r6, r2
 80156aa:	460d      	mov	r5, r1
 80156ac:	b901      	cbnz	r1, 80156b0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80156ae:	b192      	cbz	r2, 80156d6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80156b0:	6823      	ldr	r3, [r4, #0]
 80156b2:	4620      	mov	r0, r4
 80156b4:	699b      	ldr	r3, [r3, #24]
 80156b6:	4798      	blx	r3
 80156b8:	88e2      	ldrh	r2, [r4, #6]
 80156ba:	88a1      	ldrh	r1, [r4, #4]
 80156bc:	4432      	add	r2, r6
 80156be:	4429      	add	r1, r5
 80156c0:	4620      	mov	r0, r4
 80156c2:	b212      	sxth	r2, r2
 80156c4:	b209      	sxth	r1, r1
 80156c6:	f7ed f820 	bl	800270a <_ZN8touchgfx8Drawable5setXYEss>
 80156ca:	6823      	ldr	r3, [r4, #0]
 80156cc:	4620      	mov	r0, r4
 80156ce:	699b      	ldr	r3, [r3, #24]
 80156d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80156d4:	4718      	bx	r3
 80156d6:	bd70      	pop	{r4, r5, r6, pc}

080156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80156d8:	b510      	push	{r4, lr}
 80156da:	4604      	mov	r4, r0
 80156dc:	4608      	mov	r0, r1
 80156de:	2300      	movs	r3, #0
 80156e0:	8023      	strh	r3, [r4, #0]
 80156e2:	8063      	strh	r3, [r4, #2]
 80156e4:	6803      	ldr	r3, [r0, #0]
 80156e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80156ea:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80156ee:	80a1      	strh	r1, [r4, #4]
 80156f0:	80e2      	strh	r2, [r4, #6]
 80156f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80156f4:	4621      	mov	r1, r4
 80156f6:	4798      	blx	r3
 80156f8:	4620      	mov	r0, r4
 80156fa:	bd10      	pop	{r4, pc}

080156fc <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 80156fc:	4770      	bx	lr

080156fe <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 80156fe:	b510      	push	{r4, lr}
 8015700:	211c      	movs	r1, #28
 8015702:	4604      	mov	r4, r0
 8015704:	f011 fb86 	bl	8026e14 <_ZdlPvj>
 8015708:	4620      	mov	r0, r4
 801570a:	bd10      	pop	{r4, pc}

0801570c <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 801570c:	4a04      	ldr	r2, [pc, #16]	@ (8015720 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801570e:	6002      	str	r2, [r0, #0]
 8015710:	2200      	movs	r2, #0
 8015712:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8015716:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801571a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801571e:	4770      	bx	lr
 8015720:	0802b2f0 	.word	0x0802b2f0

08015724 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8015724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015728:	4604      	mov	r4, r0
 801572a:	b087      	sub	sp, #28
 801572c:	4696      	mov	lr, r2
 801572e:	8b22      	ldrh	r2, [r4, #24]
 8015730:	6880      	ldr	r0, [r0, #8]
 8015732:	9105      	str	r1, [sp, #20]
 8015734:	1c51      	adds	r1, r2, #1
 8015736:	8321      	strh	r1, [r4, #24]
 8015738:	2101      	movs	r1, #1
 801573a:	5481      	strb	r1, [r0, r2]
 801573c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015740:	8b60      	ldrh	r0, [r4, #26]
 8015742:	ee06 2a90 	vmov	s13, r2
 8015746:	68e2      	ldr	r2, [r4, #12]
 8015748:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801574c:	1845      	adds	r5, r0, r1
 801574e:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 8015752:	8365      	strh	r5, [r4, #26]
 8015754:	edc2 6a00 	vstr	s13, [r2]
 8015758:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801575c:	8b60      	ldrh	r0, [r4, #26]
 801575e:	ee07 2a10 	vmov	s14, r2
 8015762:	68e2      	ldr	r2, [r4, #12]
 8015764:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015768:	1845      	adds	r5, r0, r1
 801576a:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 801576e:	8365      	strh	r5, [r4, #26]
 8015770:	ed82 7a00 	vstr	s14, [r2]
 8015774:	f8be 2000 	ldrh.w	r2, [lr]
 8015778:	9203      	str	r2, [sp, #12]
 801577a:	2200      	movs	r2, #0
 801577c:	1d18      	adds	r0, r3, #4
 801577e:	4689      	mov	r9, r1
 8015780:	9201      	str	r2, [sp, #4]
 8015782:	4613      	mov	r3, r2
 8015784:	4694      	mov	ip, r2
 8015786:	460d      	mov	r5, r1
 8015788:	9202      	str	r2, [sp, #8]
 801578a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 801578e:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8015792:	9e05      	ldr	r6, [sp, #20]
 8015794:	f8d4 a008 	ldr.w	sl, [r4, #8]
 8015798:	f108 0701 	add.w	r7, r8, #1
 801579c:	428e      	cmp	r6, r1
 801579e:	b2bf      	uxth	r7, r7
 80157a0:	eb0a 0b08 	add.w	fp, sl, r8
 80157a4:	f340 80b6 	ble.w	8015914 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 80157a8:	9b03      	ldr	r3, [sp, #12]
 80157aa:	f9b0 c000 	ldrsh.w	ip, [r0]
 80157ae:	fa43 fb05 	asr.w	fp, r3, r5
 80157b2:	f00b 0b01 	and.w	fp, fp, #1
 80157b6:	fa5f f38b 	uxtb.w	r3, fp
 80157ba:	9304      	str	r3, [sp, #16]
 80157bc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80157c0:	f1bb 0f00 	cmp.w	fp, #0
 80157c4:	d057      	beq.n	8015876 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 80157c6:	ee07 ca90 	vmov	s15, ip
 80157ca:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 80157ce:	ee07 3a90 	vmov	s15, r3
 80157d2:	8327      	strh	r7, [r4, #24]
 80157d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80157d8:	f1b9 0f00 	cmp.w	r9, #0
 80157dc:	d028      	beq.n	8015830 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 80157de:	f04f 0602 	mov.w	r6, #2
 80157e2:	f80a 6008 	strb.w	r6, [sl, r8]
 80157e6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80157ea:	68e7      	ldr	r7, [r4, #12]
 80157ec:	f108 0901 	add.w	r9, r8, #1
 80157f0:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80157f4:	f8a4 901a 	strh.w	r9, [r4, #26]
 80157f8:	edc7 5a00 	vstr	s11, [r7]
 80157fc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015800:	68e7      	ldr	r7, [r4, #12]
 8015802:	f108 0901 	add.w	r9, r8, #1
 8015806:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801580a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801580e:	edc7 7a00 	vstr	s15, [r7]
 8015812:	3501      	adds	r5, #1
 8015814:	2d10      	cmp	r5, #16
 8015816:	d106      	bne.n	8015826 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8015818:	9d02      	ldr	r5, [sp, #8]
 801581a:	3501      	adds	r5, #1
 801581c:	9502      	str	r5, [sp, #8]
 801581e:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 8015822:	9503      	str	r5, [sp, #12]
 8015824:	2500      	movs	r5, #0
 8015826:	3101      	adds	r1, #1
 8015828:	3004      	adds	r0, #4
 801582a:	f8dd 9010 	ldr.w	r9, [sp, #16]
 801582e:	e7ae      	b.n	801578e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 8015830:	f04f 0605 	mov.w	r6, #5
 8015834:	f80a 6008 	strb.w	r6, [sl, r8]
 8015838:	ed9d 5a01 	vldr	s10, [sp, #4]
 801583c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8015840:	68e7      	ldr	r7, [r4, #12]
 8015842:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8015846:	f108 0901 	add.w	r9, r8, #1
 801584a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801584e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015852:	ed87 5a00 	vstr	s10, [r7]
 8015856:	ee05 2a10 	vmov	s10, r2
 801585a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801585e:	68e7      	ldr	r7, [r4, #12]
 8015860:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8015864:	f108 0901 	add.w	r9, r8, #1
 8015868:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801586c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015870:	ed87 5a00 	vstr	s10, [r7]
 8015874:	e7b7      	b.n	80157e6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 8015876:	f1b9 0f00 	cmp.w	r9, #0
 801587a:	d147      	bne.n	801590c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 801587c:	f04f 0605 	mov.w	r6, #5
 8015880:	8327      	strh	r7, [r4, #24]
 8015882:	f80a 6008 	strb.w	r6, [sl, r8]
 8015886:	eddd 7a01 	vldr	s15, [sp, #4]
 801588a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801588e:	68e7      	ldr	r7, [r4, #12]
 8015890:	9e01      	ldr	r6, [sp, #4]
 8015892:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015896:	f108 0901 	add.w	r9, r8, #1
 801589a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801589e:	f8a4 901a 	strh.w	r9, [r4, #26]
 80158a2:	edc7 7a00 	vstr	s15, [r7]
 80158a6:	ee07 2a90 	vmov	s15, r2
 80158aa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80158ae:	68e7      	ldr	r7, [r4, #12]
 80158b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80158b4:	f108 0901 	add.w	r9, r8, #1
 80158b8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80158bc:	4466      	add	r6, ip
 80158be:	f8a4 901a 	strh.w	r9, [r4, #26]
 80158c2:	edc7 7a00 	vstr	s15, [r7]
 80158c6:	ee07 6a90 	vmov	s15, r6
 80158ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80158ce:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80158d2:	68e7      	ldr	r7, [r4, #12]
 80158d4:	ee67 7a86 	vmul.f32	s15, s15, s12
 80158d8:	f108 0901 	add.w	r9, r8, #1
 80158dc:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80158e0:	441a      	add	r2, r3
 80158e2:	f8a4 901a 	strh.w	r9, [r4, #26]
 80158e6:	edc7 7a00 	vstr	s15, [r7]
 80158ea:	ee07 2a90 	vmov	s15, r2
 80158ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80158f2:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80158f6:	68e7      	ldr	r7, [r4, #12]
 80158f8:	ee67 7a86 	vmul.f32	s15, s15, s12
 80158fc:	f108 0901 	add.w	r9, r8, #1
 8015900:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8015904:	f8a4 901a 	strh.w	r9, [r4, #26]
 8015908:	edc7 7a00 	vstr	s15, [r7]
 801590c:	461a      	mov	r2, r3
 801590e:	f8cd c004 	str.w	ip, [sp, #4]
 8015912:	e77e      	b.n	8015812 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 8015914:	f1b9 0f00 	cmp.w	r9, #0
 8015918:	d028      	beq.n	801596c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 801591a:	ee07 ca90 	vmov	s15, ip
 801591e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015922:	eef4 6a67 	vcmp.f32	s13, s15
 8015926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801592a:	d108      	bne.n	801593e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 801592c:	ee07 3a90 	vmov	s15, r3
 8015930:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015934:	eeb4 7a67 	vcmp.f32	s14, s15
 8015938:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801593c:	d016      	beq.n	801596c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 801593e:	2302      	movs	r3, #2
 8015940:	8327      	strh	r7, [r4, #24]
 8015942:	f88b 3000 	strb.w	r3, [fp]
 8015946:	8b62      	ldrh	r2, [r4, #26]
 8015948:	68e3      	ldr	r3, [r4, #12]
 801594a:	1c51      	adds	r1, r2, #1
 801594c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8015950:	8361      	strh	r1, [r4, #26]
 8015952:	edc3 6a00 	vstr	s13, [r3]
 8015956:	8b62      	ldrh	r2, [r4, #26]
 8015958:	68e3      	ldr	r3, [r4, #12]
 801595a:	1c51      	adds	r1, r2, #1
 801595c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8015960:	8361      	strh	r1, [r4, #26]
 8015962:	ed83 7a00 	vstr	s14, [r3]
 8015966:	b007      	add	sp, #28
 8015968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801596c:	2305      	movs	r3, #5
 801596e:	8327      	strh	r7, [r4, #24]
 8015970:	eddd 7a01 	vldr	s15, [sp, #4]
 8015974:	f88b 3000 	strb.w	r3, [fp]
 8015978:	8b61      	ldrh	r1, [r4, #26]
 801597a:	68e3      	ldr	r3, [r4, #12]
 801597c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015980:	1c4d      	adds	r5, r1, #1
 8015982:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8015986:	8365      	strh	r5, [r4, #26]
 8015988:	edc3 7a00 	vstr	s15, [r3]
 801598c:	ee07 2a90 	vmov	s15, r2
 8015990:	8b61      	ldrh	r1, [r4, #26]
 8015992:	68e3      	ldr	r3, [r4, #12]
 8015994:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015998:	1c4d      	adds	r5, r1, #1
 801599a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 801599e:	8365      	strh	r5, [r4, #26]
 80159a0:	edc3 7a00 	vstr	s15, [r3]
 80159a4:	e7cf      	b.n	8015946 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

080159a8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 80159a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80159ac:	b08e      	sub	sp, #56	@ 0x38
 80159ae:	4604      	mov	r4, r0
 80159b0:	4688      	mov	r8, r1
 80159b2:	4615      	mov	r5, r2
 80159b4:	4699      	mov	r9, r3
 80159b6:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 80159b8:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 80159bc:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 80159be:	f7eb fdb3 	bl	8001528 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 80159c2:	6060      	str	r0, [r4, #4]
 80159c4:	f1b9 0f00 	cmp.w	r9, #0
 80159c8:	f000 80e8 	beq.w	8015b9c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80159cc:	2800      	cmp	r0, #0
 80159ce:	f000 80e5 	beq.w	8015b9c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 80159d2:	a805      	add	r0, sp, #20
 80159d4:	f000 f8f9 	bl	8015bca <_ZN8touchgfx9Matrix3x3C1Ev>
 80159d8:	6833      	ldr	r3, [r6, #0]
 80159da:	4630      	mov	r0, r6
 80159dc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80159de:	4798      	blx	r3
 80159e0:	a805      	add	r0, sp, #20
 80159e2:	eef0 0a40 	vmov.f32	s1, s0
 80159e6:	f000 f8f4 	bl	8015bd2 <_ZN8touchgfx9Matrix3x35scaleEff>
 80159ea:	6860      	ldr	r0, [r4, #4]
 80159ec:	f1ba 0f03 	cmp.w	sl, #3
 80159f0:	d83b      	bhi.n	8015a6a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 80159f2:	e8df f00a 	tbb	[pc, sl]
 80159f6:	1002      	.short	0x1002
 80159f8:	9f71      	.short	0x9f71
 80159fa:	6803      	ldr	r3, [r0, #0]
 80159fc:	462a      	mov	r2, r5
 80159fe:	689b      	ldr	r3, [r3, #8]
 8015a00:	4641      	mov	r1, r8
 8015a02:	4798      	blx	r3
 8015a04:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8015a08:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8015a0c:	ee07 7a90 	vmov	s15, r7
 8015a10:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8015a14:	e026      	b.n	8015a64 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8015a16:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8015a1a:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8015a1e:	8869      	ldrh	r1, [r5, #2]
 8015a20:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015a24:	1a9b      	subs	r3, r3, r2
 8015a26:	1a5b      	subs	r3, r3, r1
 8015a28:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015a2c:	882b      	ldrh	r3, [r5, #0]
 8015a2e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015a32:	88ab      	ldrh	r3, [r5, #4]
 8015a34:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015a38:	6803      	ldr	r3, [r0, #0]
 8015a3a:	aa03      	add	r2, sp, #12
 8015a3c:	689b      	ldr	r3, [r3, #8]
 8015a3e:	4641      	mov	r1, r8
 8015a40:	4798      	blx	r3
 8015a42:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8015ba4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8015a46:	a805      	add	r0, sp, #20
 8015a48:	f000 f8e8 	bl	8015c1c <_ZN8touchgfx9Matrix3x36rotateEf>
 8015a4c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8015a50:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8015a52:	ee07 7a90 	vmov	s15, r7
 8015a56:	1a9b      	subs	r3, r3, r2
 8015a58:	ee00 3a10 	vmov	s0, r3
 8015a5c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8015a60:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8015a64:	a805      	add	r0, sp, #20
 8015a66:	f000 f927 	bl	8015cb8 <_ZN8touchgfx9Matrix3x39translateEff>
 8015a6a:	6860      	ldr	r0, [r4, #4]
 8015a6c:	6803      	ldr	r3, [r0, #0]
 8015a6e:	a905      	add	r1, sp, #20
 8015a70:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015a72:	4798      	blx	r3
 8015a74:	6860      	ldr	r0, [r4, #4]
 8015a76:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8015a78:	6803      	ldr	r3, [r0, #0]
 8015a7a:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8015a7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015a80:	4798      	blx	r3
 8015a82:	6860      	ldr	r0, [r4, #4]
 8015a84:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8015a88:	6803      	ldr	r3, [r0, #0]
 8015a8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a8c:	4798      	blx	r3
 8015a8e:	6860      	ldr	r0, [r4, #4]
 8015a90:	6803      	ldr	r3, [r0, #0]
 8015a92:	2101      	movs	r1, #1
 8015a94:	68db      	ldr	r3, [r3, #12]
 8015a96:	2500      	movs	r5, #0
 8015a98:	4798      	blx	r3
 8015a9a:	f8b9 7000 	ldrh.w	r7, [r9]
 8015a9e:	61a5      	str	r5, [r4, #24]
 8015aa0:	f104 0310 	add.w	r3, r4, #16
 8015aa4:	f104 0208 	add.w	r2, r4, #8
 8015aa8:	f104 0114 	add.w	r1, r4, #20
 8015aac:	f104 000c 	add.w	r0, r4, #12
 8015ab0:	f109 0602 	add.w	r6, r9, #2
 8015ab4:	f7f0 fe56 	bl	8006764 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8015ab8:	42af      	cmp	r7, r5
 8015aba:	dd60      	ble.n	8015b7e <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8015abc:	8831      	ldrh	r1, [r6, #0]
 8015abe:	f101 030f 	add.w	r3, r1, #15
 8015ac2:	1cb2      	adds	r2, r6, #2
 8015ac4:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8015ac8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015acc:	4620      	mov	r0, r4
 8015ace:	f7ff fe29 	bl	8015724 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8015ad2:	3501      	adds	r5, #1
 8015ad4:	4606      	mov	r6, r0
 8015ad6:	e7ef      	b.n	8015ab8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8015ad8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8015adc:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8015ae0:	8829      	ldrh	r1, [r5, #0]
 8015ae2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015ae6:	1a9b      	subs	r3, r3, r2
 8015ae8:	1a5b      	subs	r3, r3, r1
 8015aea:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015aee:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015af2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015af6:	886d      	ldrh	r5, [r5, #2]
 8015af8:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015afc:	1a5b      	subs	r3, r3, r1
 8015afe:	1b5b      	subs	r3, r3, r5
 8015b00:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015b04:	6803      	ldr	r3, [r0, #0]
 8015b06:	aa03      	add	r2, sp, #12
 8015b08:	689b      	ldr	r3, [r3, #8]
 8015b0a:	4641      	mov	r1, r8
 8015b0c:	4798      	blx	r3
 8015b0e:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8015ba8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8015b12:	a805      	add	r0, sp, #20
 8015b14:	f000 f882 	bl	8015c1c <_ZN8touchgfx9Matrix3x36rotateEf>
 8015b18:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015b1c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8015b1e:	1a9b      	subs	r3, r3, r2
 8015b20:	ee00 3a90 	vmov	s1, r3
 8015b24:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8015b28:	1bdb      	subs	r3, r3, r7
 8015b2a:	ee00 3a10 	vmov	s0, r3
 8015b2e:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8015b32:	e795      	b.n	8015a60 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8015b34:	886b      	ldrh	r3, [r5, #2]
 8015b36:	f8ad 300c 	strh.w	r3, [sp, #12]
 8015b3a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8015b3e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015b42:	8829      	ldrh	r1, [r5, #0]
 8015b44:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015b48:	1a9b      	subs	r3, r3, r2
 8015b4a:	1a5b      	subs	r3, r3, r1
 8015b4c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8015b50:	88eb      	ldrh	r3, [r5, #6]
 8015b52:	f8ad 3010 	strh.w	r3, [sp, #16]
 8015b56:	6803      	ldr	r3, [r0, #0]
 8015b58:	aa03      	add	r2, sp, #12
 8015b5a:	689b      	ldr	r3, [r3, #8]
 8015b5c:	4641      	mov	r1, r8
 8015b5e:	4798      	blx	r3
 8015b60:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8015bac <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8015b64:	a805      	add	r0, sp, #20
 8015b66:	f000 f859 	bl	8015c1c <_ZN8touchgfx9Matrix3x36rotateEf>
 8015b6a:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015b6e:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8015b72:	1bdb      	subs	r3, r3, r7
 8015b74:	ee00 3a90 	vmov	s1, r3
 8015b78:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8015b7c:	e748      	b.n	8015a10 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8015b7e:	6860      	ldr	r0, [r4, #4]
 8015b80:	8b22      	ldrh	r2, [r4, #24]
 8015b82:	6803      	ldr	r3, [r0, #0]
 8015b84:	2100      	movs	r1, #0
 8015b86:	9101      	str	r1, [sp, #4]
 8015b88:	8b61      	ldrh	r1, [r4, #26]
 8015b8a:	9100      	str	r1, [sp, #0]
 8015b8c:	6a1d      	ldr	r5, [r3, #32]
 8015b8e:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8015b92:	47a8      	blx	r5
 8015b94:	6860      	ldr	r0, [r4, #4]
 8015b96:	6803      	ldr	r3, [r0, #0]
 8015b98:	69db      	ldr	r3, [r3, #28]
 8015b9a:	4798      	blx	r3
 8015b9c:	b00e      	add	sp, #56	@ 0x38
 8015b9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015ba2:	bf00      	nop
 8015ba4:	42b40000 	.word	0x42b40000
 8015ba8:	43340000 	.word	0x43340000
 8015bac:	43870000 	.word	0x43870000

08015bb0 <_ZN8touchgfx9Matrix3x35resetEv>:
 8015bb0:	2300      	movs	r3, #0
 8015bb2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8015bb6:	6002      	str	r2, [r0, #0]
 8015bb8:	6043      	str	r3, [r0, #4]
 8015bba:	6083      	str	r3, [r0, #8]
 8015bbc:	60c3      	str	r3, [r0, #12]
 8015bbe:	6102      	str	r2, [r0, #16]
 8015bc0:	6143      	str	r3, [r0, #20]
 8015bc2:	6183      	str	r3, [r0, #24]
 8015bc4:	61c3      	str	r3, [r0, #28]
 8015bc6:	6202      	str	r2, [r0, #32]
 8015bc8:	4770      	bx	lr

08015bca <_ZN8touchgfx9Matrix3x3C1Ev>:
 8015bca:	b508      	push	{r3, lr}
 8015bcc:	f7ff fff0 	bl	8015bb0 <_ZN8touchgfx9Matrix3x35resetEv>
 8015bd0:	bd08      	pop	{r3, pc}

08015bd2 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8015bd2:	edd0 7a00 	vldr	s15, [r0]
 8015bd6:	ee67 7a80 	vmul.f32	s15, s15, s0
 8015bda:	edc0 7a00 	vstr	s15, [r0]
 8015bde:	edd0 7a01 	vldr	s15, [r0, #4]
 8015be2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8015be6:	edc0 7a01 	vstr	s15, [r0, #4]
 8015bea:	edd0 7a02 	vldr	s15, [r0, #8]
 8015bee:	ee27 0a80 	vmul.f32	s0, s15, s0
 8015bf2:	edd0 7a03 	vldr	s15, [r0, #12]
 8015bf6:	ed80 0a02 	vstr	s0, [r0, #8]
 8015bfa:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8015bfe:	edc0 7a03 	vstr	s15, [r0, #12]
 8015c02:	edd0 7a04 	vldr	s15, [r0, #16]
 8015c06:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8015c0a:	edc0 7a04 	vstr	s15, [r0, #16]
 8015c0e:	edd0 7a05 	vldr	s15, [r0, #20]
 8015c12:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8015c16:	edc0 0a05 	vstr	s1, [r0, #20]
 8015c1a:	4770      	bx	lr

08015c1c <_ZN8touchgfx9Matrix3x36rotateEf>:
 8015c1c:	b510      	push	{r4, lr}
 8015c1e:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8015cb0 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8015c22:	ee20 0a27 	vmul.f32	s0, s0, s15
 8015c26:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8015cb4 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8015c2a:	ed2d 8b02 	vpush	{d8}
 8015c2e:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8015c32:	4604      	mov	r4, r0
 8015c34:	eeb0 0a68 	vmov.f32	s0, s17
 8015c38:	f011 f934 	bl	8026ea4 <cosf>
 8015c3c:	eeb0 8a40 	vmov.f32	s16, s0
 8015c40:	eeb0 0a68 	vmov.f32	s0, s17
 8015c44:	f011 f972 	bl	8026f2c <sinf>
 8015c48:	edd4 6a03 	vldr	s13, [r4, #12]
 8015c4c:	edd4 4a00 	vldr	s9, [r4]
 8015c50:	ed94 7a04 	vldr	s14, [r4, #16]
 8015c54:	ed94 5a01 	vldr	s10, [r4, #4]
 8015c58:	edd4 5a02 	vldr	s11, [r4, #8]
 8015c5c:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8015c60:	ee66 6a88 	vmul.f32	s13, s13, s16
 8015c64:	eee8 7a24 	vfma.f32	s15, s16, s9
 8015c68:	eee0 6a24 	vfma.f32	s13, s0, s9
 8015c6c:	edc4 7a00 	vstr	s15, [r4]
 8015c70:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8015c74:	ee27 7a08 	vmul.f32	s14, s14, s16
 8015c78:	eee8 7a05 	vfma.f32	s15, s16, s10
 8015c7c:	eea0 7a05 	vfma.f32	s14, s0, s10
 8015c80:	edc4 7a01 	vstr	s15, [r4, #4]
 8015c84:	edd4 7a05 	vldr	s15, [r4, #20]
 8015c88:	edc4 6a03 	vstr	s13, [r4, #12]
 8015c8c:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8015c90:	ee67 7a88 	vmul.f32	s15, s15, s16
 8015c94:	eea8 6a25 	vfma.f32	s12, s16, s11
 8015c98:	ecbd 8b02 	vpop	{d8}
 8015c9c:	eee0 7a25 	vfma.f32	s15, s0, s11
 8015ca0:	ed84 6a02 	vstr	s12, [r4, #8]
 8015ca4:	ed84 7a04 	vstr	s14, [r4, #16]
 8015ca8:	edc4 7a05 	vstr	s15, [r4, #20]
 8015cac:	bd10      	pop	{r4, pc}
 8015cae:	bf00      	nop
 8015cb0:	40490fdb 	.word	0x40490fdb
 8015cb4:	43340000 	.word	0x43340000

08015cb8 <_ZN8touchgfx9Matrix3x39translateEff>:
 8015cb8:	ed90 6a06 	vldr	s12, [r0, #24]
 8015cbc:	edd0 7a00 	vldr	s15, [r0]
 8015cc0:	edd0 6a07 	vldr	s13, [r0, #28]
 8015cc4:	ed90 7a08 	vldr	s14, [r0, #32]
 8015cc8:	eee6 7a00 	vfma.f32	s15, s12, s0
 8015ccc:	edc0 7a00 	vstr	s15, [r0]
 8015cd0:	edd0 7a01 	vldr	s15, [r0, #4]
 8015cd4:	eee6 7a80 	vfma.f32	s15, s13, s0
 8015cd8:	edc0 7a01 	vstr	s15, [r0, #4]
 8015cdc:	edd0 7a02 	vldr	s15, [r0, #8]
 8015ce0:	eee7 7a00 	vfma.f32	s15, s14, s0
 8015ce4:	edc0 7a02 	vstr	s15, [r0, #8]
 8015ce8:	edd0 7a03 	vldr	s15, [r0, #12]
 8015cec:	eee6 7a20 	vfma.f32	s15, s12, s1
 8015cf0:	edc0 7a03 	vstr	s15, [r0, #12]
 8015cf4:	edd0 7a04 	vldr	s15, [r0, #16]
 8015cf8:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8015cfc:	edc0 7a04 	vstr	s15, [r0, #16]
 8015d00:	edd0 7a05 	vldr	s15, [r0, #20]
 8015d04:	eee7 7a20 	vfma.f32	s15, s14, s1
 8015d08:	edc0 7a05 	vstr	s15, [r0, #20]
 8015d0c:	4770      	bx	lr

08015d0e <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8015d0e:	edd0 6a01 	vldr	s13, [r0, #4]
 8015d12:	edd0 7a04 	vldr	s15, [r0, #16]
 8015d16:	ed90 7a03 	vldr	s14, [r0, #12]
 8015d1a:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8015d1e:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8015d22:	edd0 6a00 	vldr	s13, [r0]
 8015d26:	eee7 7a00 	vfma.f32	s15, s14, s0
 8015d2a:	b084      	sub	sp, #16
 8015d2c:	eee6 0a80 	vfma.f32	s1, s13, s0
 8015d30:	ed90 7a05 	vldr	s14, [r0, #20]
 8015d34:	ed90 0a02 	vldr	s0, [r0, #8]
 8015d38:	ee30 0a80 	vadd.f32	s0, s1, s0
 8015d3c:	ee77 0a87 	vadd.f32	s1, s15, s14
 8015d40:	b004      	add	sp, #16
 8015d42:	4770      	bx	lr

08015d44 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015d44:	b530      	push	{r4, r5, lr}
 8015d46:	8083      	strh	r3, [r0, #4]
 8015d48:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015d4c:	80c3      	strh	r3, [r0, #6]
 8015d4e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015d52:	7203      	strb	r3, [r0, #8]
 8015d54:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015d58:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015d5c:	7243      	strb	r3, [r0, #9]
 8015d5e:	7a83      	ldrb	r3, [r0, #10]
 8015d60:	6141      	str	r1, [r0, #20]
 8015d62:	f365 0306 	bfi	r3, r5, #0, #7
 8015d66:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015d6a:	8302      	strh	r2, [r0, #24]
 8015d6c:	f365 13c7 	bfi	r3, r5, #7, #1
 8015d70:	7283      	strb	r3, [r0, #10]
 8015d72:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015d76:	72c3      	strb	r3, [r0, #11]
 8015d78:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8015d7c:	7303      	strb	r3, [r0, #12]
 8015d7e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015d82:	81c3      	strh	r3, [r0, #14]
 8015d84:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8015d88:	8203      	strh	r3, [r0, #16]
 8015d8a:	4b01      	ldr	r3, [pc, #4]	@ (8015d90 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015d8c:	6003      	str	r3, [r0, #0]
 8015d8e:	bd30      	pop	{r4, r5, pc}
 8015d90:	0802b304 	.word	0x0802b304

08015d94 <_ZNK8touchgfx9ConstFont4findEt>:
 8015d94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015d96:	6944      	ldr	r4, [r0, #20]
 8015d98:	b3bc      	cbz	r4, 8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015d9a:	88a3      	ldrh	r3, [r4, #4]
 8015d9c:	8b02      	ldrh	r2, [r0, #24]
 8015d9e:	1acb      	subs	r3, r1, r3
 8015da0:	f102 32ff 	add.w	r2, r2, #4294967295
 8015da4:	d431      	bmi.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015da6:	4293      	cmp	r3, r2
 8015da8:	dd0c      	ble.n	8015dc4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015daa:	230e      	movs	r3, #14
 8015dac:	fb03 4302 	mla	r3, r3, r2, r4
 8015db0:	889b      	ldrh	r3, [r3, #4]
 8015db2:	1a5b      	subs	r3, r3, r1
 8015db4:	1ad3      	subs	r3, r2, r3
 8015db6:	429a      	cmp	r2, r3
 8015db8:	db27      	blt.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015dba:	2b00      	cmp	r3, #0
 8015dbc:	bfbc      	itt	lt
 8015dbe:	2302      	movlt	r3, #2
 8015dc0:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015dc4:	2500      	movs	r5, #0
 8015dc6:	260e      	movs	r6, #14
 8015dc8:	4295      	cmp	r5, r2
 8015dca:	dc1e      	bgt.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015dcc:	fb06 4003 	mla	r0, r6, r3, r4
 8015dd0:	8887      	ldrh	r7, [r0, #4]
 8015dd2:	42b9      	cmp	r1, r7
 8015dd4:	d01a      	beq.n	8015e0c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015dd6:	d20d      	bcs.n	8015df4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015dd8:	1e5a      	subs	r2, r3, #1
 8015dda:	4295      	cmp	r5, r2
 8015ddc:	dc15      	bgt.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015dde:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015de2:	1a5b      	subs	r3, r3, r1
 8015de4:	1ad3      	subs	r3, r2, r3
 8015de6:	429a      	cmp	r2, r3
 8015de8:	db0f      	blt.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015dea:	429d      	cmp	r5, r3
 8015dec:	ddec      	ble.n	8015dc8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015dee:	1953      	adds	r3, r2, r5
 8015df0:	105b      	asrs	r3, r3, #1
 8015df2:	e7e9      	b.n	8015dc8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015df4:	1c5d      	adds	r5, r3, #1
 8015df6:	42aa      	cmp	r2, r5
 8015df8:	db07      	blt.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015dfa:	8a43      	ldrh	r3, [r0, #18]
 8015dfc:	1acb      	subs	r3, r1, r3
 8015dfe:	442b      	add	r3, r5
 8015e00:	429d      	cmp	r5, r3
 8015e02:	dc02      	bgt.n	8015e0a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e04:	429a      	cmp	r2, r3
 8015e06:	dadf      	bge.n	8015dc8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015e08:	e7f1      	b.n	8015dee <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015e0a:	2000      	movs	r0, #0
 8015e0c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015e0e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015e0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e10:	4604      	mov	r4, r0
 8015e12:	4617      	mov	r7, r2
 8015e14:	461e      	mov	r6, r3
 8015e16:	b911      	cbnz	r1, 8015e1e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015e18:	2500      	movs	r5, #0
 8015e1a:	4628      	mov	r0, r5
 8015e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015e1e:	290a      	cmp	r1, #10
 8015e20:	d0fa      	beq.n	8015e18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015e22:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8015e26:	4291      	cmp	r1, r2
 8015e28:	d0f6      	beq.n	8015e18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015e2a:	f242 020b 	movw	r2, #8203	@ 0x200b
 8015e2e:	4291      	cmp	r1, r2
 8015e30:	d0f2      	beq.n	8015e18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015e32:	f7ff ffaf 	bl	8015d94 <_ZNK8touchgfx9ConstFont4findEt>
 8015e36:	4605      	mov	r5, r0
 8015e38:	b950      	cbnz	r0, 8015e50 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015e3a:	6823      	ldr	r3, [r4, #0]
 8015e3c:	4620      	mov	r0, r4
 8015e3e:	691b      	ldr	r3, [r3, #16]
 8015e40:	4798      	blx	r3
 8015e42:	4601      	mov	r1, r0
 8015e44:	4620      	mov	r0, r4
 8015e46:	f7ff ffa5 	bl	8015d94 <_ZNK8touchgfx9ConstFont4findEt>
 8015e4a:	4605      	mov	r5, r0
 8015e4c:	2800      	cmp	r0, #0
 8015e4e:	d0e3      	beq.n	8015e18 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015e50:	6823      	ldr	r3, [r4, #0]
 8015e52:	4629      	mov	r1, r5
 8015e54:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8015e56:	4620      	mov	r0, r4
 8015e58:	4798      	blx	r3
 8015e5a:	6038      	str	r0, [r7, #0]
 8015e5c:	6823      	ldr	r3, [r4, #0]
 8015e5e:	4620      	mov	r0, r4
 8015e60:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015e62:	4798      	blx	r3
 8015e64:	7030      	strb	r0, [r6, #0]
 8015e66:	e7d8      	b.n	8015e1a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015e68 <_ZN8touchgfx4clzuEm>:
 8015e68:	4603      	mov	r3, r0
 8015e6a:	b1c8      	cbz	r0, 8015ea0 <_ZN8touchgfx4clzuEm+0x38>
 8015e6c:	0c02      	lsrs	r2, r0, #16
 8015e6e:	0412      	lsls	r2, r2, #16
 8015e70:	b9a2      	cbnz	r2, 8015e9c <_ZN8touchgfx4clzuEm+0x34>
 8015e72:	0403      	lsls	r3, r0, #16
 8015e74:	2010      	movs	r0, #16
 8015e76:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8015e7a:	bf04      	itt	eq
 8015e7c:	021b      	lsleq	r3, r3, #8
 8015e7e:	3008      	addeq	r0, #8
 8015e80:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8015e84:	bf04      	itt	eq
 8015e86:	011b      	lsleq	r3, r3, #4
 8015e88:	3004      	addeq	r0, #4
 8015e8a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8015e8e:	bf04      	itt	eq
 8015e90:	009b      	lsleq	r3, r3, #2
 8015e92:	3002      	addeq	r0, #2
 8015e94:	2b00      	cmp	r3, #0
 8015e96:	db04      	blt.n	8015ea2 <_ZN8touchgfx4clzuEm+0x3a>
 8015e98:	3001      	adds	r0, #1
 8015e9a:	4770      	bx	lr
 8015e9c:	2000      	movs	r0, #0
 8015e9e:	e7ea      	b.n	8015e76 <_ZN8touchgfx4clzuEm+0xe>
 8015ea0:	2020      	movs	r0, #32
 8015ea2:	4770      	bx	lr

08015ea4 <_ZN8touchgfx7muldivuEmmmRm>:
 8015ea4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015ea8:	460f      	mov	r7, r1
 8015eaa:	4615      	mov	r5, r2
 8015eac:	461e      	mov	r6, r3
 8015eae:	4601      	mov	r1, r0
 8015eb0:	b100      	cbz	r0, 8015eb4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8015eb2:	b927      	cbnz	r7, 8015ebe <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8015eb4:	2000      	movs	r0, #0
 8015eb6:	6030      	str	r0, [r6, #0]
 8015eb8:	b002      	add	sp, #8
 8015eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015ebe:	f7ff ffd3 	bl	8015e68 <_ZN8touchgfx4clzuEm>
 8015ec2:	b980      	cbnz	r0, 8015ee6 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8015ec4:	4638      	mov	r0, r7
 8015ec6:	f7ff ffcf 	bl	8015e68 <_ZN8touchgfx4clzuEm>
 8015eca:	2800      	cmp	r0, #0
 8015ecc:	dd05      	ble.n	8015eda <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8015ece:	4633      	mov	r3, r6
 8015ed0:	462a      	mov	r2, r5
 8015ed2:	4638      	mov	r0, r7
 8015ed4:	f7ff ffe6 	bl	8015ea4 <_ZN8touchgfx7muldivuEmmmRm>
 8015ed8:	e7ee      	b.n	8015eb8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015eda:	f04f 33ff 	mov.w	r3, #4294967295
 8015ede:	6033      	str	r3, [r6, #0]
 8015ee0:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8015ee4:	e7e8      	b.n	8015eb8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015ee6:	fa37 f800 	lsrs.w	r8, r7, r0
 8015eea:	fb07 f301 	mul.w	r3, r7, r1
 8015eee:	d105      	bne.n	8015efc <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8015ef0:	fbb3 f0f5 	udiv	r0, r3, r5
 8015ef4:	fb05 3510 	mls	r5, r5, r0, r3
 8015ef8:	6035      	str	r5, [r6, #0]
 8015efa:	e7dd      	b.n	8015eb8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015efc:	2301      	movs	r3, #1
 8015efe:	fa01 fa00 	lsl.w	sl, r1, r0
 8015f02:	fa03 f000 	lsl.w	r0, r3, r0
 8015f06:	3801      	subs	r0, #1
 8015f08:	462a      	mov	r2, r5
 8015f0a:	4633      	mov	r3, r6
 8015f0c:	4038      	ands	r0, r7
 8015f0e:	f7ff ffc9 	bl	8015ea4 <_ZN8touchgfx7muldivuEmmmRm>
 8015f12:	fbba f9f5 	udiv	r9, sl, r5
 8015f16:	462a      	mov	r2, r5
 8015f18:	4607      	mov	r7, r0
 8015f1a:	ab01      	add	r3, sp, #4
 8015f1c:	fb05 a119 	mls	r1, r5, r9, sl
 8015f20:	4640      	mov	r0, r8
 8015f22:	f7ff ffbf 	bl	8015ea4 <_ZN8touchgfx7muldivuEmmmRm>
 8015f26:	9b01      	ldr	r3, [sp, #4]
 8015f28:	6832      	ldr	r2, [r6, #0]
 8015f2a:	fb08 f409 	mul.w	r4, r8, r9
 8015f2e:	441a      	add	r2, r3
 8015f30:	fbb2 f3f5 	udiv	r3, r2, r5
 8015f34:	441c      	add	r4, r3
 8015f36:	443c      	add	r4, r7
 8015f38:	4420      	add	r0, r4
 8015f3a:	fb05 2513 	mls	r5, r5, r3, r2
 8015f3e:	e7db      	b.n	8015ef8 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08015f40 <_ZN8touchgfx6muldivElllRl>:
 8015f40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015f42:	2800      	cmp	r0, #0
 8015f44:	bfba      	itte	lt
 8015f46:	4240      	neglt	r0, r0
 8015f48:	f04f 34ff 	movlt.w	r4, #4294967295
 8015f4c:	2401      	movge	r4, #1
 8015f4e:	2900      	cmp	r1, #0
 8015f50:	bfbc      	itt	lt
 8015f52:	4249      	neglt	r1, r1
 8015f54:	4264      	neglt	r4, r4
 8015f56:	2a00      	cmp	r2, #0
 8015f58:	bfb6      	itet	lt
 8015f5a:	4265      	neglt	r5, r4
 8015f5c:	4625      	movge	r5, r4
 8015f5e:	4252      	neglt	r2, r2
 8015f60:	4288      	cmp	r0, r1
 8015f62:	461e      	mov	r6, r3
 8015f64:	bfc2      	ittt	gt
 8015f66:	4603      	movgt	r3, r0
 8015f68:	4608      	movgt	r0, r1
 8015f6a:	4619      	movgt	r1, r3
 8015f6c:	ab01      	add	r3, sp, #4
 8015f6e:	f7ff ff99 	bl	8015ea4 <_ZN8touchgfx7muldivuEmmmRm>
 8015f72:	9b01      	ldr	r3, [sp, #4]
 8015f74:	4368      	muls	r0, r5
 8015f76:	435c      	muls	r4, r3
 8015f78:	6034      	str	r4, [r6, #0]
 8015f7a:	b002      	add	sp, #8
 8015f7c:	bd70      	pop	{r4, r5, r6, pc}

08015f7e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8015f7e:	2000      	movs	r0, #0
 8015f80:	4770      	bx	lr

08015f82 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8015f82:	2001      	movs	r0, #1
 8015f84:	4770      	bx	lr

08015f86 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015f86:	2002      	movs	r0, #2
 8015f88:	4770      	bx	lr

08015f8a <_ZN8touchgfx6ScreenD1Ev>:
 8015f8a:	4770      	bx	lr

08015f8c <_ZN8touchgfx12GestureEventD1Ev>:
 8015f8c:	4770      	bx	lr

08015f8e <_ZN8touchgfx9DragEventD1Ev>:
 8015f8e:	4770      	bx	lr

08015f90 <_ZN8touchgfx10ClickEventD1Ev>:
 8015f90:	4770      	bx	lr

08015f92 <_ZN8touchgfx10ClickEventD0Ev>:
 8015f92:	b510      	push	{r4, lr}
 8015f94:	210c      	movs	r1, #12
 8015f96:	4604      	mov	r4, r0
 8015f98:	f010 ff3c 	bl	8026e14 <_ZdlPvj>
 8015f9c:	4620      	mov	r0, r4
 8015f9e:	bd10      	pop	{r4, pc}

08015fa0 <_ZN8touchgfx9DragEventD0Ev>:
 8015fa0:	b510      	push	{r4, lr}
 8015fa2:	2110      	movs	r1, #16
 8015fa4:	4604      	mov	r4, r0
 8015fa6:	f010 ff35 	bl	8026e14 <_ZdlPvj>
 8015faa:	4620      	mov	r0, r4
 8015fac:	bd10      	pop	{r4, pc}

08015fae <_ZN8touchgfx12GestureEventD0Ev>:
 8015fae:	b510      	push	{r4, lr}
 8015fb0:	210c      	movs	r1, #12
 8015fb2:	4604      	mov	r4, r0
 8015fb4:	f010 ff2e 	bl	8026e14 <_ZdlPvj>
 8015fb8:	4620      	mov	r0, r4
 8015fba:	bd10      	pop	{r4, pc}

08015fbc <_ZN8touchgfx6ScreenD0Ev>:
 8015fbc:	b510      	push	{r4, lr}
 8015fbe:	213c      	movs	r1, #60	@ 0x3c
 8015fc0:	4604      	mov	r4, r0
 8015fc2:	f010 ff27 	bl	8026e14 <_ZdlPvj>
 8015fc6:	4620      	mov	r0, r4
 8015fc8:	bd10      	pop	{r4, pc}
	...

08015fcc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8015fcc:	b530      	push	{r4, r5, lr}
 8015fce:	460d      	mov	r5, r1
 8015fd0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8015fd2:	b087      	sub	sp, #28
 8015fd4:	4604      	mov	r4, r0
 8015fd6:	b301      	cbz	r1, 801601a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015fd8:	a801      	add	r0, sp, #4
 8015fda:	f7ff fb7d 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015fde:	892a      	ldrh	r2, [r5, #8]
 8015fe0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015fe4:	7928      	ldrb	r0, [r5, #4]
 8015fe6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015fea:	f88d 0010 	strb.w	r0, [sp, #16]
 8015fee:	1ad2      	subs	r2, r2, r3
 8015ff0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8015ff2:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015ff4:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015ff8:	441a      	add	r2, r3
 8015ffa:	896b      	ldrh	r3, [r5, #10]
 8015ffc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016000:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016004:	1b5b      	subs	r3, r3, r5
 8016006:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8016008:	442b      	add	r3, r5
 801600a:	4d05      	ldr	r5, [pc, #20]	@ (8016020 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801600c:	9503      	str	r5, [sp, #12]
 801600e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016012:	6803      	ldr	r3, [r0, #0]
 8016014:	a903      	add	r1, sp, #12
 8016016:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016018:	4798      	blx	r3
 801601a:	b007      	add	sp, #28
 801601c:	bd30      	pop	{r4, r5, pc}
 801601e:	bf00      	nop
 8016020:	0802b394 	.word	0x0802b394

08016024 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016028:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801602a:	b08a      	sub	sp, #40	@ 0x28
 801602c:	4604      	mov	r4, r0
 801602e:	460d      	mov	r5, r1
 8016030:	b113      	cbz	r3, 8016038 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016032:	790b      	ldrb	r3, [r1, #4]
 8016034:	2b00      	cmp	r3, #0
 8016036:	d044      	beq.n	80160c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016038:	f104 0804 	add.w	r8, r4, #4
 801603c:	4641      	mov	r1, r8
 801603e:	a803      	add	r0, sp, #12
 8016040:	f7ff fb4a 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016044:	792b      	ldrb	r3, [r5, #4]
 8016046:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801604a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801604e:	b983      	cbnz	r3, 8016072 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016050:	892a      	ldrh	r2, [r5, #8]
 8016052:	88e9      	ldrh	r1, [r5, #6]
 8016054:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8016058:	1b92      	subs	r2, r2, r6
 801605a:	1bc9      	subs	r1, r1, r7
 801605c:	9301      	str	r3, [sp, #4]
 801605e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8016062:	9300      	str	r3, [sp, #0]
 8016064:	b212      	sxth	r2, r2
 8016066:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801606a:	b209      	sxth	r1, r1
 801606c:	4640      	mov	r0, r8
 801606e:	f7f7 fd89 	bl	800db84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016072:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8016074:	b329      	cbz	r1, 80160c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016076:	a805      	add	r0, sp, #20
 8016078:	f7ff fb2e 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801607c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016080:	792b      	ldrb	r3, [r5, #4]
 8016082:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8016084:	f88d 3020 	strb.w	r3, [sp, #32]
 8016088:	1abf      	subs	r7, r7, r2
 801608a:	88ea      	ldrh	r2, [r5, #6]
 801608c:	4417      	add	r7, r2
 801608e:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8016090:	4417      	add	r7, r2
 8016092:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016096:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801609a:	1ab6      	subs	r6, r6, r2
 801609c:	892a      	ldrh	r2, [r5, #8]
 801609e:	4416      	add	r6, r2
 80160a0:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80160a2:	4416      	add	r6, r2
 80160a4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80160a8:	4a07      	ldr	r2, [pc, #28]	@ (80160c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80160aa:	9207      	str	r2, [sp, #28]
 80160ac:	2600      	movs	r6, #0
 80160ae:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80160b2:	6803      	ldr	r3, [r0, #0]
 80160b4:	a907      	add	r1, sp, #28
 80160b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80160b8:	4798      	blx	r3
 80160ba:	792b      	ldrb	r3, [r5, #4]
 80160bc:	b10b      	cbz	r3, 80160c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80160be:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80160c2:	b00a      	add	sp, #40	@ 0x28
 80160c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80160c8:	0802b36c 	.word	0x0802b36c

080160cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80160cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80160d0:	460c      	mov	r4, r1
 80160d2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80160d4:	b088      	sub	sp, #32
 80160d6:	4605      	mov	r5, r0
 80160d8:	2900      	cmp	r1, #0
 80160da:	d06d      	beq.n	80161b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80160dc:	4668      	mov	r0, sp
 80160de:	f7ff fafb 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80160e2:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80160e4:	88e3      	ldrh	r3, [r4, #6]
 80160e6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80160ea:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80160ee:	440b      	add	r3, r1
 80160f0:	b21b      	sxth	r3, r3
 80160f2:	4543      	cmp	r3, r8
 80160f4:	db31      	blt.n	801615a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80160f6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80160fa:	44c4      	add	ip, r8
 80160fc:	fa0f fc8c 	sxth.w	ip, ip
 8016100:	4563      	cmp	r3, ip
 8016102:	da2a      	bge.n	801615a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016104:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8016106:	8926      	ldrh	r6, [r4, #8]
 8016108:	4416      	add	r6, r2
 801610a:	b236      	sxth	r6, r6
 801610c:	42be      	cmp	r6, r7
 801610e:	db24      	blt.n	801615a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016110:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016114:	4438      	add	r0, r7
 8016116:	b200      	sxth	r0, r0
 8016118:	4286      	cmp	r6, r0
 801611a:	da1e      	bge.n	801615a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801611c:	8963      	ldrh	r3, [r4, #10]
 801611e:	4419      	add	r1, r3
 8016120:	b209      	sxth	r1, r1
 8016122:	4541      	cmp	r1, r8
 8016124:	db08      	blt.n	8016138 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016126:	4561      	cmp	r1, ip
 8016128:	da06      	bge.n	8016138 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801612a:	89a3      	ldrh	r3, [r4, #12]
 801612c:	441a      	add	r2, r3
 801612e:	b212      	sxth	r2, r2
 8016130:	42ba      	cmp	r2, r7
 8016132:	db01      	blt.n	8016138 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016134:	4282      	cmp	r2, r0
 8016136:	db10      	blt.n	801615a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016138:	4b21      	ldr	r3, [pc, #132]	@ (80161c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801613a:	9304      	str	r3, [sp, #16]
 801613c:	2302      	movs	r3, #2
 801613e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016142:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8016144:	2300      	movs	r3, #0
 8016146:	f8ad 3016 	strh.w	r3, [sp, #22]
 801614a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801614e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016152:	6803      	ldr	r3, [r0, #0]
 8016154:	a904      	add	r1, sp, #16
 8016156:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016158:	4798      	blx	r3
 801615a:	1d29      	adds	r1, r5, #4
 801615c:	a802      	add	r0, sp, #8
 801615e:	f7ff fabb 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016162:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016166:	88e0      	ldrh	r0, [r4, #6]
 8016168:	7921      	ldrb	r1, [r4, #4]
 801616a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801616e:	8922      	ldrh	r2, [r4, #8]
 8016170:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8016172:	f88d 1014 	strb.w	r1, [sp, #20]
 8016176:	eba3 0808 	sub.w	r8, r3, r8
 801617a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801617e:	1bdf      	subs	r7, r3, r7
 8016180:	b2bb      	uxth	r3, r7
 8016182:	fa1f f888 	uxth.w	r8, r8
 8016186:	8967      	ldrh	r7, [r4, #10]
 8016188:	89a4      	ldrh	r4, [r4, #12]
 801618a:	4440      	add	r0, r8
 801618c:	4460      	add	r0, ip
 801618e:	441a      	add	r2, r3
 8016190:	44b8      	add	r8, r7
 8016192:	4423      	add	r3, r4
 8016194:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016198:	4433      	add	r3, r6
 801619a:	4432      	add	r2, r6
 801619c:	44e0      	add	r8, ip
 801619e:	4c09      	ldr	r4, [pc, #36]	@ (80161c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80161a0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80161a2:	9404      	str	r4, [sp, #16]
 80161a4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80161a8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80161ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80161b0:	6803      	ldr	r3, [r0, #0]
 80161b2:	a904      	add	r1, sp, #16
 80161b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80161b6:	4798      	blx	r3
 80161b8:	b008      	add	sp, #32
 80161ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80161be:	bf00      	nop
 80161c0:	0802b36c 	.word	0x0802b36c
 80161c4:	0802b380 	.word	0x0802b380

080161c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80161c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80161ca:	4604      	mov	r4, r0
 80161cc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80161d0:	3201      	adds	r2, #1
 80161d2:	d112      	bne.n	80161fa <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80161d4:	6803      	ldr	r3, [r0, #0]
 80161d6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80161da:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80161de:	f8ad 1004 	strh.w	r1, [sp, #4]
 80161e2:	2500      	movs	r5, #0
 80161e4:	9500      	str	r5, [sp, #0]
 80161e6:	466d      	mov	r5, sp
 80161e8:	4629      	mov	r1, r5
 80161ea:	f8ad 2006 	strh.w	r2, [sp, #6]
 80161ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80161f0:	4798      	blx	r3
 80161f2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80161f6:	e884 0003 	stmia.w	r4, {r0, r1}
 80161fa:	4620      	mov	r0, r4
 80161fc:	b003      	add	sp, #12
 80161fe:	bd30      	pop	{r4, r5, pc}

08016200 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016200:	b513      	push	{r0, r1, r4, lr}
 8016202:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016206:	3301      	adds	r3, #1
 8016208:	4604      	mov	r4, r0
 801620a:	d109      	bne.n	8016220 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801620c:	4601      	mov	r1, r0
 801620e:	4668      	mov	r0, sp
 8016210:	f7ff fa62 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016214:	f8bd 3000 	ldrh.w	r3, [sp]
 8016218:	8423      	strh	r3, [r4, #32]
 801621a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801621e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8016220:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016224:	b002      	add	sp, #8
 8016226:	bd10      	pop	{r4, pc}

08016228 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016228:	b513      	push	{r0, r1, r4, lr}
 801622a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801622e:	3301      	adds	r3, #1
 8016230:	4604      	mov	r4, r0
 8016232:	d109      	bne.n	8016248 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016234:	4601      	mov	r1, r0
 8016236:	4668      	mov	r0, sp
 8016238:	f7ff fa4e 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801623c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016240:	8423      	strh	r3, [r4, #32]
 8016242:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016246:	8463      	strh	r3, [r4, #34]	@ 0x22
 8016248:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 801624c:	b002      	add	sp, #8
 801624e:	bd10      	pop	{r4, pc}

08016250 <_ZN8touchgfx6ScreenC1Ev>:
 8016250:	b570      	push	{r4, r5, r6, lr}
 8016252:	4605      	mov	r5, r0
 8016254:	4b16      	ldr	r3, [pc, #88]	@ (80162b0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016256:	f845 3b04 	str.w	r3, [r5], #4
 801625a:	2300      	movs	r3, #0
 801625c:	8103      	strh	r3, [r0, #8]
 801625e:	8143      	strh	r3, [r0, #10]
 8016260:	8183      	strh	r3, [r0, #12]
 8016262:	81c3      	strh	r3, [r0, #14]
 8016264:	8203      	strh	r3, [r0, #16]
 8016266:	8243      	strh	r3, [r0, #18]
 8016268:	8283      	strh	r3, [r0, #20]
 801626a:	82c3      	strh	r3, [r0, #22]
 801626c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016270:	6203      	str	r3, [r0, #32]
 8016272:	8483      	strh	r3, [r0, #36]	@ 0x24
 8016274:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8016276:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801627a:	4a0e      	ldr	r2, [pc, #56]	@ (80162b4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801627c:	6343      	str	r3, [r0, #52]	@ 0x34
 801627e:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8016282:	4b0d      	ldr	r3, [pc, #52]	@ (80162b8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016284:	6042      	str	r2, [r0, #4]
 8016286:	f9b3 6000 	ldrsh.w	r6, [r3]
 801628a:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 801628c:	4a0b      	ldr	r2, [pc, #44]	@ (80162bc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801628e:	4604      	mov	r4, r0
 8016290:	2101      	movs	r1, #1
 8016292:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8016296:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801629a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801629e:	4628      	mov	r0, r5
 80162a0:	4798      	blx	r3
 80162a2:	6863      	ldr	r3, [r4, #4]
 80162a4:	4628      	mov	r0, r5
 80162a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80162a8:	4631      	mov	r1, r6
 80162aa:	4798      	blx	r3
 80162ac:	4620      	mov	r0, r4
 80162ae:	bd70      	pop	{r4, r5, r6, pc}
 80162b0:	0802b3a8 	.word	0x0802b3a8
 80162b4:	0802ad2c 	.word	0x0802ad2c
 80162b8:	20013f56 	.word	0x20013f56
 80162bc:	20013f54 	.word	0x20013f54

080162c0 <_ZN8touchgfx6Screen4drawEv>:
 80162c0:	b507      	push	{r0, r1, r2, lr}
 80162c2:	4b09      	ldr	r3, [pc, #36]	@ (80162e8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80162c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80162c8:	4b08      	ldr	r3, [pc, #32]	@ (80162ec <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80162ca:	f8ad 2004 	strh.w	r2, [sp, #4]
 80162ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80162d2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80162d6:	6803      	ldr	r3, [r0, #0]
 80162d8:	2100      	movs	r1, #0
 80162da:	9100      	str	r1, [sp, #0]
 80162dc:	689b      	ldr	r3, [r3, #8]
 80162de:	4669      	mov	r1, sp
 80162e0:	4798      	blx	r3
 80162e2:	b003      	add	sp, #12
 80162e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80162e8:	20013f54 	.word	0x20013f54
 80162ec:	20013f56 	.word	0x20013f56

080162f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80162f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162f4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80162f8:	2b00      	cmp	r3, #0
 80162fa:	b089      	sub	sp, #36	@ 0x24
 80162fc:	4680      	mov	r8, r0
 80162fe:	460c      	mov	r4, r1
 8016300:	4615      	mov	r5, r2
 8016302:	dd0e      	ble.n	8016322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016304:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016308:	2b00      	cmp	r3, #0
 801630a:	dd0a      	ble.n	8016322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801630c:	4628      	mov	r0, r5
 801630e:	f7ff ff5b 	bl	80161c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016312:	4621      	mov	r1, r4
 8016314:	f7fd ffc7 	bl	80142a6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016318:	69eb      	ldr	r3, [r5, #28]
 801631a:	b928      	cbnz	r0, 8016328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801631c:	461d      	mov	r5, r3
 801631e:	2b00      	cmp	r3, #0
 8016320:	d1f4      	bne.n	801630c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016322:	b009      	add	sp, #36	@ 0x24
 8016324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016328:	ae04      	add	r6, sp, #16
 801632a:	2b00      	cmp	r3, #0
 801632c:	f000 80b5 	beq.w	801649a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016330:	682b      	ldr	r3, [r5, #0]
 8016332:	4629      	mov	r1, r5
 8016334:	68db      	ldr	r3, [r3, #12]
 8016336:	a802      	add	r0, sp, #8
 8016338:	4798      	blx	r3
 801633a:	4628      	mov	r0, r5
 801633c:	f7ff ff60 	bl	8016200 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016340:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016344:	4407      	add	r7, r0
 8016346:	4628      	mov	r0, r5
 8016348:	f7ff ff6e 	bl	8016228 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801634c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016350:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016354:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016358:	4418      	add	r0, r3
 801635a:	4621      	mov	r1, r4
 801635c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016360:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016364:	b23f      	sxth	r7, r7
 8016366:	4630      	mov	r0, r6
 8016368:	f8ad 3016 	strh.w	r3, [sp, #22]
 801636c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016370:	f7f7 fcec 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8016374:	4628      	mov	r0, r5
 8016376:	f7ff ff27 	bl	80161c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801637a:	4602      	mov	r2, r0
 801637c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016380:	ab06      	add	r3, sp, #24
 8016382:	e883 0003 	stmia.w	r3, {r0, r1}
 8016386:	4611      	mov	r1, r2
 8016388:	4618      	mov	r0, r3
 801638a:	f7f7 fcdf 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 801638e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016392:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016396:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801639a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801639e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80163a2:	4299      	cmp	r1, r3
 80163a4:	d10b      	bne.n	80163be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80163a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80163aa:	4552      	cmp	r2, sl
 80163ac:	d107      	bne.n	80163be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80163ae:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80163b2:	455a      	cmp	r2, fp
 80163b4:	d103      	bne.n	80163be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80163b6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80163ba:	454a      	cmp	r2, r9
 80163bc:	d06d      	beq.n	801649a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80163be:	f1bb 0f00 	cmp.w	fp, #0
 80163c2:	dd65      	ble.n	8016490 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80163c4:	f1b9 0f00 	cmp.w	r9, #0
 80163c8:	dd62      	ble.n	8016490 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80163ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80163ce:	fa1f f08a 	uxth.w	r0, sl
 80163d2:	4552      	cmp	r2, sl
 80163d4:	9000      	str	r0, [sp, #0]
 80163d6:	da12      	bge.n	80163fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80163d8:	9301      	str	r3, [sp, #4]
 80163da:	9b00      	ldr	r3, [sp, #0]
 80163dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80163e0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80163e4:	1a9a      	subs	r2, r3, r2
 80163e6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80163ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 80163ee:	f8ad 2016 	strh.w	r2, [sp, #22]
 80163f2:	69ea      	ldr	r2, [r5, #28]
 80163f4:	4631      	mov	r1, r6
 80163f6:	4640      	mov	r0, r8
 80163f8:	f7ff ff7a 	bl	80162f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80163fc:	9b01      	ldr	r3, [sp, #4]
 80163fe:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016402:	429a      	cmp	r2, r3
 8016404:	b29f      	uxth	r7, r3
 8016406:	da0d      	bge.n	8016424 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016408:	f8ad 2010 	strh.w	r2, [sp, #16]
 801640c:	1aba      	subs	r2, r7, r2
 801640e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016412:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016416:	f8ad 9016 	strh.w	r9, [sp, #22]
 801641a:	69ea      	ldr	r2, [r5, #28]
 801641c:	4631      	mov	r1, r6
 801641e:	4640      	mov	r0, r8
 8016420:	f7ff ff66 	bl	80162f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016424:	8822      	ldrh	r2, [r4, #0]
 8016426:	88a3      	ldrh	r3, [r4, #4]
 8016428:	445f      	add	r7, fp
 801642a:	4413      	add	r3, r2
 801642c:	b29b      	uxth	r3, r3
 801642e:	b2bf      	uxth	r7, r7
 8016430:	b23a      	sxth	r2, r7
 8016432:	b219      	sxth	r1, r3
 8016434:	4291      	cmp	r1, r2
 8016436:	dd0d      	ble.n	8016454 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016438:	1bdb      	subs	r3, r3, r7
 801643a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801643e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016442:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016446:	f8ad 9016 	strh.w	r9, [sp, #22]
 801644a:	69ea      	ldr	r2, [r5, #28]
 801644c:	4631      	mov	r1, r6
 801644e:	4640      	mov	r0, r8
 8016450:	f7ff ff4e 	bl	80162f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016454:	88e2      	ldrh	r2, [r4, #6]
 8016456:	8863      	ldrh	r3, [r4, #2]
 8016458:	4413      	add	r3, r2
 801645a:	9a00      	ldr	r2, [sp, #0]
 801645c:	444a      	add	r2, r9
 801645e:	b29b      	uxth	r3, r3
 8016460:	fa1f f982 	uxth.w	r9, r2
 8016464:	fa0f f289 	sxth.w	r2, r9
 8016468:	b219      	sxth	r1, r3
 801646a:	428a      	cmp	r2, r1
 801646c:	da15      	bge.n	801649a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801646e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016472:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016476:	f8ad 1014 	strh.w	r1, [sp, #20]
 801647a:	eba3 0309 	sub.w	r3, r3, r9
 801647e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016482:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016486:	f8ad 3016 	strh.w	r3, [sp, #22]
 801648a:	69ea      	ldr	r2, [r5, #28]
 801648c:	4631      	mov	r1, r6
 801648e:	e001      	b.n	8016494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016490:	69ea      	ldr	r2, [r5, #28]
 8016492:	4621      	mov	r1, r4
 8016494:	4640      	mov	r0, r8
 8016496:	f7ff ff2b 	bl	80162f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801649a:	4628      	mov	r0, r5
 801649c:	f7ff fe94 	bl	80161c8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80164a0:	6861      	ldr	r1, [r4, #4]
 80164a2:	4602      	mov	r2, r0
 80164a4:	6820      	ldr	r0, [r4, #0]
 80164a6:	4633      	mov	r3, r6
 80164a8:	c303      	stmia	r3!, {r0, r1}
 80164aa:	4611      	mov	r1, r2
 80164ac:	4630      	mov	r0, r6
 80164ae:	f7f7 fc4d 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 80164b2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80164b6:	2b00      	cmp	r3, #0
 80164b8:	f77f af33 	ble.w	8016322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80164bc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80164c0:	2b00      	cmp	r3, #0
 80164c2:	f77f af2e 	ble.w	8016322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80164c6:	4628      	mov	r0, r5
 80164c8:	f7ff fe9a 	bl	8016200 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80164cc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80164d0:	1a18      	subs	r0, r3, r0
 80164d2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80164d6:	4628      	mov	r0, r5
 80164d8:	f7ff fea6 	bl	8016228 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80164dc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80164e0:	1a18      	subs	r0, r3, r0
 80164e2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80164e6:	682b      	ldr	r3, [r5, #0]
 80164e8:	4631      	mov	r1, r6
 80164ea:	689b      	ldr	r3, [r3, #8]
 80164ec:	4628      	mov	r0, r5
 80164ee:	4798      	blx	r3
 80164f0:	e717      	b.n	8016322 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080164f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80164f2:	b570      	push	{r4, r5, r6, lr}
 80164f4:	460c      	mov	r4, r1
 80164f6:	b086      	sub	sp, #24
 80164f8:	1d06      	adds	r6, r0, #4
 80164fa:	2300      	movs	r3, #0
 80164fc:	4631      	mov	r1, r6
 80164fe:	4605      	mov	r5, r0
 8016500:	a802      	add	r0, sp, #8
 8016502:	9301      	str	r3, [sp, #4]
 8016504:	f7ff f8e8 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016508:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801650c:	8822      	ldrh	r2, [r4, #0]
 801650e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016512:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016516:	f8ad 0014 	strh.w	r0, [sp, #20]
 801651a:	1ad2      	subs	r2, r2, r3
 801651c:	8863      	ldrh	r3, [r4, #2]
 801651e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016522:	1a5b      	subs	r3, r3, r1
 8016524:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016528:	f8ad 1016 	strh.w	r1, [sp, #22]
 801652c:	aa01      	add	r2, sp, #4
 801652e:	a904      	add	r1, sp, #16
 8016530:	4630      	mov	r0, r6
 8016532:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016536:	f7f7 fce1 	bl	800defc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801653a:	9a01      	ldr	r2, [sp, #4]
 801653c:	b11a      	cbz	r2, 8016546 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801653e:	4621      	mov	r1, r4
 8016540:	4628      	mov	r0, r5
 8016542:	f7ff fed5 	bl	80162f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016546:	b006      	add	sp, #24
 8016548:	bd70      	pop	{r4, r5, r6, pc}

0801654a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801654a:	b530      	push	{r4, r5, lr}
 801654c:	4602      	mov	r2, r0
 801654e:	4604      	mov	r4, r0
 8016550:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016554:	b085      	sub	sp, #20
 8016556:	460d      	mov	r5, r1
 8016558:	6851      	ldr	r1, [r2, #4]
 801655a:	466b      	mov	r3, sp
 801655c:	c303      	stmia	r3!, {r0, r1}
 801655e:	4629      	mov	r1, r5
 8016560:	4668      	mov	r0, sp
 8016562:	f7f7 fbf3 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 8016566:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801656a:	b12b      	cbz	r3, 8016578 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801656c:	4669      	mov	r1, sp
 801656e:	4620      	mov	r0, r4
 8016570:	f7ff ffbf 	bl	80164f2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016574:	b005      	add	sp, #20
 8016576:	bd30      	pop	{r4, r5, pc}
 8016578:	3404      	adds	r4, #4
 801657a:	4621      	mov	r1, r4
 801657c:	a802      	add	r0, sp, #8
 801657e:	f7ff f8ab 	bl	80156d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016582:	f8bd 3000 	ldrh.w	r3, [sp]
 8016586:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801658a:	1a9b      	subs	r3, r3, r2
 801658c:	f8ad 3000 	strh.w	r3, [sp]
 8016590:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016594:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016598:	4669      	mov	r1, sp
 801659a:	1a9b      	subs	r3, r3, r2
 801659c:	4620      	mov	r0, r4
 801659e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80165a2:	f7f7 fc72 	bl	800de8a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80165a6:	e7e5      	b.n	8016574 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080165a8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80165a8:	680a      	ldr	r2, [r1, #0]
 80165aa:	460b      	mov	r3, r1
 80165ac:	6992      	ldr	r2, [r2, #24]
 80165ae:	1d01      	adds	r1, r0, #4
 80165b0:	4618      	mov	r0, r3
 80165b2:	4710      	bx	r2

080165b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80165b4:	4298      	cmp	r0, r3
 80165b6:	d200      	bcs.n	80165ba <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80165b8:	b913      	cbnz	r3, 80165c0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80165ba:	440a      	add	r2, r1
 80165bc:	b210      	sxth	r0, r2
 80165be:	4770      	bx	lr
 80165c0:	ee07 0a90 	vmov	s15, r0
 80165c4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80165c8:	ee07 3a90 	vmov	s15, r3
 80165cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165d0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80165d4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80165d8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80165dc:	ee07 2a90 	vmov	s15, r2
 80165e0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80165e4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80165e8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80165ec:	ee07 1a90 	vmov	s15, r1
 80165f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80165f4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80165f8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80165fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016604:	bfcc      	ite	gt
 8016606:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801660a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801660e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016612:	ee17 3a90 	vmov	r3, s15
 8016616:	b218      	sxth	r0, r3
 8016618:	4770      	bx	lr

0801661a <_ZN8touchgfx12TextProviderC1Ev>:
 801661a:	b538      	push	{r3, r4, r5, lr}
 801661c:	2500      	movs	r5, #0
 801661e:	2302      	movs	r3, #2
 8016620:	4604      	mov	r4, r0
 8016622:	e9c0 5500 	strd	r5, r5, [r0]
 8016626:	7403      	strb	r3, [r0, #16]
 8016628:	6145      	str	r5, [r0, #20]
 801662a:	7605      	strb	r5, [r0, #24]
 801662c:	83c5      	strh	r5, [r0, #30]
 801662e:	8405      	strh	r5, [r0, #32]
 8016630:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8016632:	8705      	strh	r5, [r0, #56]	@ 0x38
 8016634:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8016636:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801663a:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 801663e:	220e      	movs	r2, #14
 8016640:	4629      	mov	r1, r5
 8016642:	304c      	adds	r0, #76	@ 0x4c
 8016644:	f011 fd3b 	bl	80280be <memset>
 8016648:	2301      	movs	r3, #1
 801664a:	4620      	mov	r0, r4
 801664c:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8016650:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016654:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8016658:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801665c:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8016660:	f7f0 f802 	bl	8006668 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016664:	4620      	mov	r0, r4
 8016666:	bd38      	pop	{r3, r4, r5, pc}

08016668 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016668:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801666a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801666e:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8016670:	fab0 f080 	clz	r0, r0
 8016674:	0940      	lsrs	r0, r0, #5
 8016676:	4770      	bx	lr

08016678 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016678:	b530      	push	{r4, r5, lr}
 801667a:	2500      	movs	r5, #0
 801667c:	2401      	movs	r4, #1
 801667e:	6843      	ldr	r3, [r0, #4]
 8016680:	b913      	cbnz	r3, 8016688 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016682:	6803      	ldr	r3, [r0, #0]
 8016684:	b313      	cbz	r3, 80166cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016686:	6043      	str	r3, [r0, #4]
 8016688:	7e03      	ldrb	r3, [r0, #24]
 801668a:	b143      	cbz	r3, 801669e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801668c:	6943      	ldr	r3, [r0, #20]
 801668e:	b12b      	cbz	r3, 801669c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016690:	881a      	ldrh	r2, [r3, #0]
 8016692:	b11a      	cbz	r2, 801669c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016694:	1c9a      	adds	r2, r3, #2
 8016696:	6142      	str	r2, [r0, #20]
 8016698:	8818      	ldrh	r0, [r3, #0]
 801669a:	bd30      	pop	{r4, r5, pc}
 801669c:	7605      	strb	r5, [r0, #24]
 801669e:	6843      	ldr	r3, [r0, #4]
 80166a0:	8819      	ldrh	r1, [r3, #0]
 80166a2:	b199      	cbz	r1, 80166cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80166a4:	1c9a      	adds	r2, r3, #2
 80166a6:	2902      	cmp	r1, #2
 80166a8:	6042      	str	r2, [r0, #4]
 80166aa:	d1f5      	bne.n	8016698 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80166ac:	7c03      	ldrb	r3, [r0, #16]
 80166ae:	2b01      	cmp	r3, #1
 80166b0:	d8e5      	bhi.n	801667e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80166b2:	1c5a      	adds	r2, r3, #1
 80166b4:	3302      	adds	r3, #2
 80166b6:	7402      	strb	r2, [r0, #16]
 80166b8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80166bc:	6143      	str	r3, [r0, #20]
 80166be:	2b00      	cmp	r3, #0
 80166c0:	d0dd      	beq.n	801667e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80166c2:	881b      	ldrh	r3, [r3, #0]
 80166c4:	2b00      	cmp	r3, #0
 80166c6:	d0da      	beq.n	801667e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80166c8:	7604      	strb	r4, [r0, #24]
 80166ca:	e7d8      	b.n	801667e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80166cc:	2000      	movs	r0, #0
 80166ce:	e7e4      	b.n	801669a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80166d0:	b430      	push	{r4, r5}
 80166d2:	6001      	str	r1, [r0, #0]
 80166d4:	2100      	movs	r1, #0
 80166d6:	6041      	str	r1, [r0, #4]
 80166d8:	6815      	ldr	r5, [r2, #0]
 80166da:	6085      	str	r5, [r0, #8]
 80166dc:	6852      	ldr	r2, [r2, #4]
 80166de:	6443      	str	r3, [r0, #68]	@ 0x44
 80166e0:	9b02      	ldr	r3, [sp, #8]
 80166e2:	60c2      	str	r2, [r0, #12]
 80166e4:	7401      	strb	r1, [r0, #16]
 80166e6:	6141      	str	r1, [r0, #20]
 80166e8:	7601      	strb	r1, [r0, #24]
 80166ea:	8701      	strh	r1, [r0, #56]	@ 0x38
 80166ec:	8401      	strh	r1, [r0, #32]
 80166ee:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80166f2:	6483      	str	r3, [r0, #72]	@ 0x48
 80166f4:	bc30      	pop	{r4, r5}
 80166f6:	f7ef bfb7 	b.w	8006668 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080166fa <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80166fa:	b408      	push	{r3}
 80166fc:	b510      	push	{r4, lr}
 80166fe:	b085      	sub	sp, #20
 8016700:	ac07      	add	r4, sp, #28
 8016702:	f854 3b04 	ldr.w	r3, [r4], #4
 8016706:	9300      	str	r3, [sp, #0]
 8016708:	4613      	mov	r3, r2
 801670a:	4622      	mov	r2, r4
 801670c:	9403      	str	r4, [sp, #12]
 801670e:	f7ff ffdf 	bl	80166d0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016712:	b005      	add	sp, #20
 8016714:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016718:	b001      	add	sp, #4
 801671a:	4770      	bx	lr

0801671c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801671c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801671e:	4605      	mov	r5, r0
 8016720:	4608      	mov	r0, r1
 8016722:	b1e9      	cbz	r1, 8016760 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016724:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8016728:	460b      	mov	r3, r1
 801672a:	f101 0708 	add.w	r7, r1, #8
 801672e:	4622      	mov	r2, r4
 8016730:	6818      	ldr	r0, [r3, #0]
 8016732:	6859      	ldr	r1, [r3, #4]
 8016734:	4626      	mov	r6, r4
 8016736:	c603      	stmia	r6!, {r0, r1}
 8016738:	3308      	adds	r3, #8
 801673a:	42bb      	cmp	r3, r7
 801673c:	4634      	mov	r4, r6
 801673e:	d1f7      	bne.n	8016730 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016740:	6818      	ldr	r0, [r3, #0]
 8016742:	6030      	str	r0, [r6, #0]
 8016744:	889b      	ldrh	r3, [r3, #4]
 8016746:	80b3      	strh	r3, [r6, #4]
 8016748:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801674c:	015b      	lsls	r3, r3, #5
 801674e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8016752:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8016756:	430b      	orrs	r3, r1
 8016758:	425b      	negs	r3, r3
 801675a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801675e:	4610      	mov	r0, r2
 8016760:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016762 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016762:	b538      	push	{r3, r4, r5, lr}
 8016764:	460c      	mov	r4, r1
 8016766:	6811      	ldr	r1, [r2, #0]
 8016768:	4610      	mov	r0, r2
 801676a:	68cd      	ldr	r5, [r1, #12]
 801676c:	4619      	mov	r1, r3
 801676e:	47a8      	blx	r5
 8016770:	2800      	cmp	r0, #0
 8016772:	bf08      	it	eq
 8016774:	4620      	moveq	r0, r4
 8016776:	bd38      	pop	{r3, r4, r5, pc}

08016778 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801677c:	468c      	mov	ip, r1
 801677e:	4605      	mov	r5, r0
 8016780:	4614      	mov	r4, r2
 8016782:	b942      	cbnz	r2, 8016796 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8016784:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8016788:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 801678c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8016790:	4620      	mov	r0, r4
 8016792:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016796:	7b50      	ldrb	r0, [r2, #13]
 8016798:	8893      	ldrh	r3, [r2, #4]
 801679a:	0106      	lsls	r6, r0, #4
 801679c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 80167a0:	79e6      	ldrb	r6, [r4, #7]
 80167a2:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 80167a6:	4316      	orrs	r6, r2
 80167a8:	185a      	adds	r2, r3, r1
 80167aa:	b291      	uxth	r1, r2
 80167ac:	291d      	cmp	r1, #29
 80167ae:	b2b7      	uxth	r7, r6
 80167b0:	d87e      	bhi.n	80168b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80167b2:	2201      	movs	r2, #1
 80167b4:	408a      	lsls	r2, r1
 80167b6:	498a      	ldr	r1, [pc, #552]	@ (80169e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 80167b8:	420a      	tst	r2, r1
 80167ba:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80167be:	d12d      	bne.n	801681c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80167c0:	f412 7f60 	tst.w	r2, #896	@ 0x380
 80167c4:	d074      	beq.n	80168b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80167c6:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80167ca:	4623      	mov	r3, r4
 80167cc:	f104 0e08 	add.w	lr, r4, #8
 80167d0:	4614      	mov	r4, r2
 80167d2:	6818      	ldr	r0, [r3, #0]
 80167d4:	6859      	ldr	r1, [r3, #4]
 80167d6:	4694      	mov	ip, r2
 80167d8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80167dc:	3308      	adds	r3, #8
 80167de:	4573      	cmp	r3, lr
 80167e0:	4662      	mov	r2, ip
 80167e2:	d1f6      	bne.n	80167d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80167e4:	6818      	ldr	r0, [r3, #0]
 80167e6:	f8cc 0000 	str.w	r0, [ip]
 80167ea:	889b      	ldrh	r3, [r3, #4]
 80167ec:	f8ac 3004 	strh.w	r3, [ip, #4]
 80167f0:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80167f4:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80167f8:	b2b3      	uxth	r3, r6
 80167fa:	1aca      	subs	r2, r1, r3
 80167fc:	b292      	uxth	r2, r2
 80167fe:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8016802:	10d2      	asrs	r2, r2, #3
 8016804:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8016808:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 801680c:	4302      	orrs	r2, r0
 801680e:	1bcf      	subs	r7, r1, r7
 8016810:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8016814:	1afb      	subs	r3, r7, r3
 8016816:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 801681a:	e7b9      	b.n	8016790 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801681c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8016820:	4623      	mov	r3, r4
 8016822:	f104 0808 	add.w	r8, r4, #8
 8016826:	4614      	mov	r4, r2
 8016828:	6818      	ldr	r0, [r3, #0]
 801682a:	6859      	ldr	r1, [r3, #4]
 801682c:	4696      	mov	lr, r2
 801682e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016832:	3308      	adds	r3, #8
 8016834:	4543      	cmp	r3, r8
 8016836:	4672      	mov	r2, lr
 8016838:	d1f6      	bne.n	8016828 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 801683a:	6818      	ldr	r0, [r3, #0]
 801683c:	f8ce 0000 	str.w	r0, [lr]
 8016840:	889b      	ldrh	r3, [r3, #4]
 8016842:	f8ae 3004 	strh.w	r3, [lr, #4]
 8016846:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8016848:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 801684c:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 801684e:	f640 6333 	movw	r3, #3635	@ 0xe33
 8016852:	4299      	cmp	r1, r3
 8016854:	d111      	bne.n	801687a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8016856:	f8dc 3000 	ldr.w	r3, [ip]
 801685a:	4660      	mov	r0, ip
 801685c:	68db      	ldr	r3, [r3, #12]
 801685e:	4798      	blx	r3
 8016860:	7b41      	ldrb	r1, [r0, #13]
 8016862:	00cb      	lsls	r3, r1, #3
 8016864:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016868:	7a03      	ldrb	r3, [r0, #8]
 801686a:	4313      	orrs	r3, r2
 801686c:	064a      	lsls	r2, r1, #25
 801686e:	bf44      	itt	mi
 8016870:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016874:	b21b      	sxthmi	r3, r3
 8016876:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801687a:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 801687e:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8016882:	443b      	add	r3, r7
 8016884:	4433      	add	r3, r6
 8016886:	b29b      	uxth	r3, r3
 8016888:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801688c:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8016890:	10db      	asrs	r3, r3, #3
 8016892:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016896:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801689a:	4313      	orrs	r3, r2
 801689c:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 80168a0:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 80168a4:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 80168a8:	1a9b      	subs	r3, r3, r2
 80168aa:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80168ae:	e76f      	b.n	8016790 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80168b0:	f023 0204 	bic.w	r2, r3, #4
 80168b4:	f640 611b 	movw	r1, #3611	@ 0xe1b
 80168b8:	428a      	cmp	r2, r1
 80168ba:	d003      	beq.n	80168c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 80168bc:	f640 621d 	movw	r2, #3613	@ 0xe1d
 80168c0:	4293      	cmp	r3, r2
 80168c2:	d137      	bne.n	8016934 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 80168c4:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 80168c8:	4622      	mov	r2, r4
 80168ca:	f104 0808 	add.w	r8, r4, #8
 80168ce:	4634      	mov	r4, r6
 80168d0:	6810      	ldr	r0, [r2, #0]
 80168d2:	6851      	ldr	r1, [r2, #4]
 80168d4:	46b6      	mov	lr, r6
 80168d6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80168da:	3208      	adds	r2, #8
 80168dc:	4542      	cmp	r2, r8
 80168de:	4676      	mov	r6, lr
 80168e0:	d1f6      	bne.n	80168d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 80168e2:	6810      	ldr	r0, [r2, #0]
 80168e4:	f8ce 0000 	str.w	r0, [lr]
 80168e8:	8892      	ldrh	r2, [r2, #4]
 80168ea:	f8ae 2004 	strh.w	r2, [lr, #4]
 80168ee:	3b01      	subs	r3, #1
 80168f0:	b29b      	uxth	r3, r3
 80168f2:	4662      	mov	r2, ip
 80168f4:	4621      	mov	r1, r4
 80168f6:	4628      	mov	r0, r5
 80168f8:	f7ff ff33 	bl	8016762 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80168fc:	7b41      	ldrb	r1, [r0, #13]
 80168fe:	00cb      	lsls	r3, r1, #3
 8016900:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016904:	7a03      	ldrb	r3, [r0, #8]
 8016906:	0648      	lsls	r0, r1, #25
 8016908:	ea43 0302 	orr.w	r3, r3, r2
 801690c:	bf44      	itt	mi
 801690e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016912:	b21b      	sxthmi	r3, r3
 8016914:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8016918:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801691c:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8016920:	005b      	lsls	r3, r3, #1
 8016922:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016926:	4313      	orrs	r3, r2
 8016928:	115a      	asrs	r2, r3, #5
 801692a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801692e:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8016932:	e046      	b.n	80169c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8016934:	00c2      	lsls	r2, r0, #3
 8016936:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 801693a:	7a22      	ldrb	r2, [r4, #8]
 801693c:	430a      	orrs	r2, r1
 801693e:	0641      	lsls	r1, r0, #25
 8016940:	bf44      	itt	mi
 8016942:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8016946:	b212      	sxthmi	r2, r2
 8016948:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801694c:	f640 6109 	movw	r1, #3593	@ 0xe09
 8016950:	f023 0210 	bic.w	r2, r3, #16
 8016954:	428a      	cmp	r2, r1
 8016956:	d003      	beq.n	8016960 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8016958:	f640 6213 	movw	r2, #3603	@ 0xe13
 801695c:	4293      	cmp	r3, r2
 801695e:	d13d      	bne.n	80169dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8016960:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8016964:	f104 0808 	add.w	r8, r4, #8
 8016968:	4696      	mov	lr, r2
 801696a:	6820      	ldr	r0, [r4, #0]
 801696c:	6861      	ldr	r1, [r4, #4]
 801696e:	4616      	mov	r6, r2
 8016970:	c603      	stmia	r6!, {r0, r1}
 8016972:	3408      	adds	r4, #8
 8016974:	4544      	cmp	r4, r8
 8016976:	4632      	mov	r2, r6
 8016978:	d1f7      	bne.n	801696a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801697a:	6820      	ldr	r0, [r4, #0]
 801697c:	6030      	str	r0, [r6, #0]
 801697e:	88a1      	ldrh	r1, [r4, #4]
 8016980:	80b1      	strh	r1, [r6, #4]
 8016982:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8016986:	0076      	lsls	r6, r6, #1
 8016988:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801698c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8016990:	4316      	orrs	r6, r2
 8016992:	f640 6213 	movw	r2, #3603	@ 0xe13
 8016996:	4293      	cmp	r3, r2
 8016998:	bf1a      	itte	ne
 801699a:	f103 33ff 	addne.w	r3, r3, #4294967295
 801699e:	b29b      	uxthne	r3, r3
 80169a0:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 80169a4:	4662      	mov	r2, ip
 80169a6:	4671      	mov	r1, lr
 80169a8:	4628      	mov	r0, r5
 80169aa:	4674      	mov	r4, lr
 80169ac:	f7ff fed9 	bl	8016762 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80169b0:	7b43      	ldrb	r3, [r0, #13]
 80169b2:	7a82      	ldrb	r2, [r0, #10]
 80169b4:	005b      	lsls	r3, r3, #1
 80169b6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80169ba:	4313      	orrs	r3, r2
 80169bc:	1af6      	subs	r6, r6, r3
 80169be:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 80169c2:	7b61      	ldrb	r1, [r4, #13]
 80169c4:	00cb      	lsls	r3, r1, #3
 80169c6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80169ca:	7a23      	ldrb	r3, [r4, #8]
 80169cc:	4313      	orrs	r3, r2
 80169ce:	064a      	lsls	r2, r1, #25
 80169d0:	bf44      	itt	mi
 80169d2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80169d6:	b21b      	sxthmi	r3, r3
 80169d8:	1bdb      	subs	r3, r3, r7
 80169da:	e71c      	b.n	8016816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80169dc:	2300      	movs	r3, #0
 80169de:	e7a6      	b.n	801692e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 80169e0:	3fc00079 	.word	0x3fc00079

080169e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80169e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80169e8:	4604      	mov	r4, r0
 80169ea:	b942      	cbnz	r2, 80169fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80169ec:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80169f0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80169f4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80169f8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80169fc:	e047      	b.n	8016a8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80169fe:	7b51      	ldrb	r1, [r2, #13]
 8016a00:	8893      	ldrh	r3, [r2, #4]
 8016a02:	010d      	lsls	r5, r1, #4
 8016a04:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8016a08:	79d5      	ldrb	r5, [r2, #7]
 8016a0a:	4305      	orrs	r5, r0
 8016a0c:	2d04      	cmp	r5, #4
 8016a0e:	bfcc      	ite	gt
 8016a10:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016a14:	f04f 0e01 	movle.w	lr, #1
 8016a18:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8016a1c:	f200 80ab 	bhi.w	8016b76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016a20:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8016a24:	4283      	cmp	r3, r0
 8016a26:	d216      	bcs.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016a28:	f240 605b 	movw	r0, #1627	@ 0x65b
 8016a2c:	4283      	cmp	r3, r0
 8016a2e:	d859      	bhi.n	8016ae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016a30:	f240 6057 	movw	r0, #1623	@ 0x657
 8016a34:	4283      	cmp	r3, r0
 8016a36:	d20e      	bcs.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016a38:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016a3c:	d24a      	bcs.n	8016ad4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016a3e:	f240 604e 	movw	r0, #1614	@ 0x64e
 8016a42:	4283      	cmp	r3, r0
 8016a44:	d207      	bcs.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016a46:	f240 601a 	movw	r0, #1562	@ 0x61a
 8016a4a:	4283      	cmp	r3, r0
 8016a4c:	d02a      	beq.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016a4e:	d821      	bhi.n	8016a94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016a50:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8016a54:	d35b      	bcc.n	8016b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016a56:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8016a5a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016a5e:	f040 80d0 	bne.w	8016c02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016a62:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8016a66:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016a6a:	f040 80ca 	bne.w	8016c02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016a6e:	00cb      	lsls	r3, r1, #3
 8016a70:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016a74:	7a13      	ldrb	r3, [r2, #8]
 8016a76:	0649      	lsls	r1, r1, #25
 8016a78:	ea43 0300 	orr.w	r3, r3, r0
 8016a7c:	bf44      	itt	mi
 8016a7e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016a82:	b21b      	sxthmi	r3, r3
 8016a84:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016a88:	1b5d      	subs	r5, r3, r5
 8016a8a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016a8e:	4610      	mov	r0, r2
 8016a90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016a94:	f240 604b 	movw	r0, #1611	@ 0x64b
 8016a98:	4283      	cmp	r3, r0
 8016a9a:	d338      	bcc.n	8016b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016a9c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8016aa0:	4283      	cmp	r3, r0
 8016aa2:	d9d8      	bls.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016aa4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8016aa8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8016aac:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016ab0:	f040 80f2 	bne.w	8016c98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016ab4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016ab8:	f040 80ee 	bne.w	8016c98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016abc:	00cb      	lsls	r3, r1, #3
 8016abe:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016ac2:	7a13      	ldrb	r3, [r2, #8]
 8016ac4:	064e      	lsls	r6, r1, #25
 8016ac6:	ea43 0300 	orr.w	r3, r3, r0
 8016aca:	bf44      	itt	mi
 8016acc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016ad0:	b21b      	sxthmi	r3, r3
 8016ad2:	e7d9      	b.n	8016a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016ad4:	f240 6054 	movw	r0, #1620	@ 0x654
 8016ad8:	4283      	cmp	r3, r0
 8016ada:	d8e3      	bhi.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016adc:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016ae0:	d9e0      	bls.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ae2:	e7b8      	b.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ae4:	f240 6074 	movw	r0, #1652	@ 0x674
 8016ae8:	4283      	cmp	r3, r0
 8016aea:	d0b4      	beq.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016aec:	d82d      	bhi.n	8016b4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016aee:	f240 605e 	movw	r0, #1630	@ 0x65e
 8016af2:	4283      	cmp	r3, r0
 8016af4:	d804      	bhi.n	8016b00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016af6:	f240 605d 	movw	r0, #1629	@ 0x65d
 8016afa:	4283      	cmp	r3, r0
 8016afc:	d3d2      	bcc.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016afe:	e7aa      	b.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b00:	f240 605f 	movw	r0, #1631	@ 0x65f
 8016b04:	4283      	cmp	r3, r0
 8016b06:	d0cd      	beq.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016b08:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8016b0c:	d0a3      	beq.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b0e:	00cb      	lsls	r3, r1, #3
 8016b10:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016b14:	7a13      	ldrb	r3, [r2, #8]
 8016b16:	0649      	lsls	r1, r1, #25
 8016b18:	ea43 0300 	orr.w	r3, r3, r0
 8016b1c:	bf44      	itt	mi
 8016b1e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016b22:	b21b      	sxthmi	r3, r3
 8016b24:	1b5d      	subs	r5, r3, r5
 8016b26:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016b2a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016b2e:	7b53      	ldrb	r3, [r2, #13]
 8016b30:	015b      	lsls	r3, r3, #5
 8016b32:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8016b36:	7993      	ldrb	r3, [r2, #6]
 8016b38:	430b      	orrs	r3, r1
 8016b3a:	005b      	lsls	r3, r3, #1
 8016b3c:	2105      	movs	r1, #5
 8016b3e:	fb93 f3f1 	sdiv	r3, r3, r1
 8016b42:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016b46:	440b      	add	r3, r1
 8016b48:	e756      	b.n	80169f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016b4a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8016b4e:	4283      	cmp	r3, r0
 8016b50:	d809      	bhi.n	8016b66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016b52:	f240 60df 	movw	r0, #1759	@ 0x6df
 8016b56:	4283      	cmp	r3, r0
 8016b58:	f4bf af7d 	bcs.w	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b5c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8016b60:	2b05      	cmp	r3, #5
 8016b62:	d8d4      	bhi.n	8016b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016b64:	e777      	b.n	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b66:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8016b6a:	4283      	cmp	r3, r0
 8016b6c:	d09a      	beq.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016b6e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8016b72:	4283      	cmp	r3, r0
 8016b74:	e7ca      	b.n	8016b0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016b76:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8016b7a:	d22b      	bcs.n	8016bd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016b7c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8016b80:	4283      	cmp	r3, r0
 8016b82:	d28f      	bcs.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016b84:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8016b88:	4283      	cmp	r3, r0
 8016b8a:	d816      	bhi.n	8016bba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016b8c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8016b90:	4283      	cmp	r3, r0
 8016b92:	f4bf af60 	bcs.w	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b96:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8016b9a:	4283      	cmp	r3, r0
 8016b9c:	d80a      	bhi.n	8016bb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016b9e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8016ba2:	4283      	cmp	r3, r0
 8016ba4:	f4bf af57 	bcs.w	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ba8:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8016bac:	4283      	cmp	r3, r0
 8016bae:	f43f af79 	beq.w	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016bb2:	e7ac      	b.n	8016b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016bb4:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8016bb8:	e7f8      	b.n	8016bac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016bba:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8016bbe:	4283      	cmp	r3, r0
 8016bc0:	d802      	bhi.n	8016bc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016bc2:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8016bc6:	e798      	b.n	8016afa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016bc8:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8016bcc:	4283      	cmp	r3, r0
 8016bce:	f47f af42 	bne.w	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016bd2:	e767      	b.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016bd4:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8016bd8:	4283      	cmp	r3, r0
 8016bda:	f43f af63 	beq.w	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016bde:	d802      	bhi.n	8016be6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016be0:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8016be4:	e7f2      	b.n	8016bcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016be6:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8016bea:	4283      	cmp	r3, r0
 8016bec:	d805      	bhi.n	8016bfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016bee:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8016bf2:	4283      	cmp	r3, r0
 8016bf4:	f4ff af2f 	bcc.w	8016a56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016bf8:	e754      	b.n	8016aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016bfa:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8016bfe:	4283      	cmp	r3, r0
 8016c00:	e7af      	b.n	8016b62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016c02:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8016c06:	4617      	mov	r7, r2
 8016c08:	f102 0808 	add.w	r8, r2, #8
 8016c0c:	4666      	mov	r6, ip
 8016c0e:	6838      	ldr	r0, [r7, #0]
 8016c10:	6879      	ldr	r1, [r7, #4]
 8016c12:	46e6      	mov	lr, ip
 8016c14:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016c18:	3708      	adds	r7, #8
 8016c1a:	4547      	cmp	r7, r8
 8016c1c:	46f4      	mov	ip, lr
 8016c1e:	d1f6      	bne.n	8016c0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016c20:	6838      	ldr	r0, [r7, #0]
 8016c22:	f8ce 0000 	str.w	r0, [lr]
 8016c26:	88b9      	ldrh	r1, [r7, #4]
 8016c28:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016c2c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8016c30:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016c34:	d009      	beq.n	8016c4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016c36:	7b51      	ldrb	r1, [r2, #13]
 8016c38:	7992      	ldrb	r2, [r2, #6]
 8016c3a:	0149      	lsls	r1, r1, #5
 8016c3c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8016c40:	4311      	orrs	r1, r2
 8016c42:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016c46:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016c4a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016c4e:	b2ad      	uxth	r5, r5
 8016c50:	d00d      	beq.n	8016c6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016c52:	442b      	add	r3, r5
 8016c54:	b29b      	uxth	r3, r3
 8016c56:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016c5a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8016c5e:	10db      	asrs	r3, r3, #3
 8016c60:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016c64:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016c68:	4313      	orrs	r3, r2
 8016c6a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8016c6e:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016c72:	00cb      	lsls	r3, r1, #3
 8016c74:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016c78:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8016c7c:	064f      	lsls	r7, r1, #25
 8016c7e:	ea43 0302 	orr.w	r3, r3, r2
 8016c82:	bf44      	itt	mi
 8016c84:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016c88:	b21b      	sxthmi	r3, r3
 8016c8a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016c8e:	1b5b      	subs	r3, r3, r5
 8016c90:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8016c94:	4632      	mov	r2, r6
 8016c96:	e6fa      	b.n	8016a8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016c98:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8016c9c:	4617      	mov	r7, r2
 8016c9e:	f102 0908 	add.w	r9, r2, #8
 8016ca2:	4666      	mov	r6, ip
 8016ca4:	6838      	ldr	r0, [r7, #0]
 8016ca6:	6879      	ldr	r1, [r7, #4]
 8016ca8:	46e0      	mov	r8, ip
 8016caa:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016cae:	3708      	adds	r7, #8
 8016cb0:	454f      	cmp	r7, r9
 8016cb2:	46c4      	mov	ip, r8
 8016cb4:	d1f6      	bne.n	8016ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016cb6:	6838      	ldr	r0, [r7, #0]
 8016cb8:	f8c8 0000 	str.w	r0, [r8]
 8016cbc:	88b9      	ldrh	r1, [r7, #4]
 8016cbe:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016cc2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8016cc6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016cca:	d009      	beq.n	8016ce0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016ccc:	7b51      	ldrb	r1, [r2, #13]
 8016cce:	7992      	ldrb	r2, [r2, #6]
 8016cd0:	0149      	lsls	r1, r1, #5
 8016cd2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8016cd6:	4311      	orrs	r1, r2
 8016cd8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016cdc:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016ce0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016ce4:	d00e      	beq.n	8016d04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016ce6:	eba3 030e 	sub.w	r3, r3, lr
 8016cea:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016cee:	b29b      	uxth	r3, r3
 8016cf0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8016cf4:	10db      	asrs	r3, r3, #3
 8016cf6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016cfa:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016cfe:	4313      	orrs	r3, r2
 8016d00:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8016d04:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016d08:	00cb      	lsls	r3, r1, #3
 8016d0a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016d0e:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8016d12:	0648      	lsls	r0, r1, #25
 8016d14:	ea43 0302 	orr.w	r3, r3, r2
 8016d18:	bf44      	itt	mi
 8016d1a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016d1e:	b21b      	sxthmi	r3, r3
 8016d20:	1b5d      	subs	r5, r3, r5
 8016d22:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016d26:	e7b5      	b.n	8016c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016d2c:	461e      	mov	r6, r3
 8016d2e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016d30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016d34:	4604      	mov	r4, r0
 8016d36:	4617      	mov	r7, r2
 8016d38:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016d3c:	f7ef fc52 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016d40:	4605      	mov	r5, r0
 8016d42:	b918      	cbnz	r0, 8016d4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8016d44:	6030      	str	r0, [r6, #0]
 8016d46:	4628      	mov	r0, r5
 8016d48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016d4c:	683b      	ldr	r3, [r7, #0]
 8016d4e:	4601      	mov	r1, r0
 8016d50:	68db      	ldr	r3, [r3, #12]
 8016d52:	4638      	mov	r0, r7
 8016d54:	4798      	blx	r3
 8016d56:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016d5a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8016d5e:	4602      	mov	r2, r0
 8016d60:	6030      	str	r0, [r6, #0]
 8016d62:	d213      	bcs.n	8016d8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8016d64:	4643      	mov	r3, r8
 8016d66:	4639      	mov	r1, r7
 8016d68:	4620      	mov	r0, r4
 8016d6a:	f7ff fe3b 	bl	80169e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016d6e:	6030      	str	r0, [r6, #0]
 8016d70:	6833      	ldr	r3, [r6, #0]
 8016d72:	b143      	cbz	r3, 8016d86 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8016d74:	7b5a      	ldrb	r2, [r3, #13]
 8016d76:	7a9b      	ldrb	r3, [r3, #10]
 8016d78:	0052      	lsls	r2, r2, #1
 8016d7a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8016d7e:	4313      	orrs	r3, r2
 8016d80:	bf0c      	ite	eq
 8016d82:	2301      	moveq	r3, #1
 8016d84:	2300      	movne	r3, #0
 8016d86:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016d8a:	e7dc      	b.n	8016d46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016d8c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016d90:	b29b      	uxth	r3, r3
 8016d92:	2b7f      	cmp	r3, #127	@ 0x7f
 8016d94:	d804      	bhi.n	8016da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8016d96:	4639      	mov	r1, r7
 8016d98:	4620      	mov	r0, r4
 8016d9a:	f7ff fced 	bl	8016778 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016d9e:	e7e6      	b.n	8016d6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016da0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016da4:	2b00      	cmp	r3, #0
 8016da6:	d0e3      	beq.n	8016d70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016da8:	f640 1302 	movw	r3, #2306	@ 0x902
 8016dac:	429d      	cmp	r5, r3
 8016dae:	d1df      	bne.n	8016d70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016db0:	4601      	mov	r1, r0
 8016db2:	4620      	mov	r0, r4
 8016db4:	f7ff fcb2 	bl	801671c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016db8:	e7d9      	b.n	8016d6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016dba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016dba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016dbe:	461e      	mov	r6, r3
 8016dc0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016dc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016dc6:	4604      	mov	r4, r0
 8016dc8:	4617      	mov	r7, r2
 8016dca:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016dce:	f7ef fc09 	bl	80065e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016dd2:	4605      	mov	r5, r0
 8016dd4:	b918      	cbnz	r0, 8016dde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8016dd6:	6030      	str	r0, [r6, #0]
 8016dd8:	4628      	mov	r0, r5
 8016dda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016dde:	683b      	ldr	r3, [r7, #0]
 8016de0:	4601      	mov	r1, r0
 8016de2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8016de6:	4638      	mov	r0, r7
 8016de8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016dec:	47c8      	blx	r9
 8016dee:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016df2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8016df6:	4602      	mov	r2, r0
 8016df8:	6030      	str	r0, [r6, #0]
 8016dfa:	d213      	bcs.n	8016e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016dfc:	4643      	mov	r3, r8
 8016dfe:	4639      	mov	r1, r7
 8016e00:	4620      	mov	r0, r4
 8016e02:	f7ff fdef 	bl	80169e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016e06:	6030      	str	r0, [r6, #0]
 8016e08:	6833      	ldr	r3, [r6, #0]
 8016e0a:	b143      	cbz	r3, 8016e1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016e0c:	7b5a      	ldrb	r2, [r3, #13]
 8016e0e:	7a9b      	ldrb	r3, [r3, #10]
 8016e10:	0052      	lsls	r2, r2, #1
 8016e12:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8016e16:	4313      	orrs	r3, r2
 8016e18:	bf0c      	ite	eq
 8016e1a:	2301      	moveq	r3, #1
 8016e1c:	2300      	movne	r3, #0
 8016e1e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016e22:	e7d9      	b.n	8016dd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8016e24:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016e28:	b29b      	uxth	r3, r3
 8016e2a:	2b7f      	cmp	r3, #127	@ 0x7f
 8016e2c:	d804      	bhi.n	8016e38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016e2e:	4639      	mov	r1, r7
 8016e30:	4620      	mov	r0, r4
 8016e32:	f7ff fca1 	bl	8016778 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016e36:	e7e6      	b.n	8016e06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016e38:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016e3c:	2b00      	cmp	r3, #0
 8016e3e:	d0e3      	beq.n	8016e08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016e40:	f640 1302 	movw	r3, #2306	@ 0x902
 8016e44:	429d      	cmp	r5, r3
 8016e46:	d1df      	bne.n	8016e08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016e48:	4601      	mov	r1, r0
 8016e4a:	4620      	mov	r0, r4
 8016e4c:	f7ff fc66 	bl	801671c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016e50:	e7d9      	b.n	8016e06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08016e52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8016e52:	b510      	push	{r4, lr}
 8016e54:	4604      	mov	r4, r0
 8016e56:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8016e5a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016e5c:	b1f1      	cbz	r1, 8016e9c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016e5e:	2b0a      	cmp	r3, #10
 8016e60:	d02f      	beq.n	8016ec2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016e62:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8016e64:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016e68:	3901      	subs	r1, #1
 8016e6a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8016e6c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8016e70:	1c51      	adds	r1, r2, #1
 8016e72:	b289      	uxth	r1, r1
 8016e74:	2901      	cmp	r1, #1
 8016e76:	bf84      	itt	hi
 8016e78:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016e7c:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8016e7e:	f103 0201 	add.w	r2, r3, #1
 8016e82:	8722      	strh	r2, [r4, #56]	@ 0x38
 8016e84:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8016e86:	bf98      	it	ls
 8016e88:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8016e8a:	4413      	add	r3, r2
 8016e8c:	b29b      	uxth	r3, r3
 8016e8e:	2b09      	cmp	r3, #9
 8016e90:	bf88      	it	hi
 8016e92:	3b0a      	subhi	r3, #10
 8016e94:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016e98:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016e9a:	e7dc      	b.n	8016e56 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016e9c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016e9e:	2b0a      	cmp	r3, #10
 8016ea0:	d00f      	beq.n	8016ec2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016ea2:	4620      	mov	r0, r4
 8016ea4:	f7ff fbe8 	bl	8016678 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8016ea8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016eaa:	1c5a      	adds	r2, r3, #1
 8016eac:	8722      	strh	r2, [r4, #56]	@ 0x38
 8016eae:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8016eb0:	4413      	add	r3, r2
 8016eb2:	b29b      	uxth	r3, r3
 8016eb4:	2b09      	cmp	r3, #9
 8016eb6:	bf88      	it	hi
 8016eb8:	3b0a      	subhi	r3, #10
 8016eba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016ebe:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016ec0:	e7ec      	b.n	8016e9c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016ec2:	bd10      	pop	{r4, pc}

08016ec4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8016ec4:	b538      	push	{r3, r4, r5, lr}
 8016ec6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016ec8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016ecc:	4604      	mov	r4, r0
 8016ece:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8016ed0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8016ed2:	3a01      	subs	r2, #1
 8016ed4:	8702      	strh	r2, [r0, #56]	@ 0x38
 8016ed6:	1c5a      	adds	r2, r3, #1
 8016ed8:	b292      	uxth	r2, r2
 8016eda:	2a09      	cmp	r2, #9
 8016edc:	bf86      	itte	hi
 8016ede:	3b09      	subhi	r3, #9
 8016ee0:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8016ee2:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8016ee4:	f7ff ffb5 	bl	8016e52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8016ee8:	8c23      	ldrh	r3, [r4, #32]
 8016eea:	2b01      	cmp	r3, #1
 8016eec:	bf9c      	itt	ls
 8016eee:	3301      	addls	r3, #1
 8016ef0:	8423      	strhls	r3, [r4, #32]
 8016ef2:	8be3      	ldrh	r3, [r4, #30]
 8016ef4:	b90b      	cbnz	r3, 8016efa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8016ef6:	2302      	movs	r3, #2
 8016ef8:	83e3      	strh	r3, [r4, #30]
 8016efa:	8be3      	ldrh	r3, [r4, #30]
 8016efc:	3b01      	subs	r3, #1
 8016efe:	b29b      	uxth	r3, r3
 8016f00:	83e3      	strh	r3, [r4, #30]
 8016f02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016f06:	4628      	mov	r0, r5
 8016f08:	8365      	strh	r5, [r4, #26]
 8016f0a:	bd38      	pop	{r3, r4, r5, pc}

08016f0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016f0c:	428a      	cmp	r2, r1
 8016f0e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016f12:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8016f14:	d931      	bls.n	8016f7a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8016f16:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8016f18:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8016f1c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8016f20:	19ee      	adds	r6, r5, r7
 8016f22:	1a54      	subs	r4, r2, r1
 8016f24:	3e01      	subs	r6, #1
 8016f26:	fa1f fe84 	uxth.w	lr, r4
 8016f2a:	b2b4      	uxth	r4, r6
 8016f2c:	eba4 090e 	sub.w	r9, r4, lr
 8016f30:	fa1f f989 	uxth.w	r9, r9
 8016f34:	2c09      	cmp	r4, #9
 8016f36:	4626      	mov	r6, r4
 8016f38:	bf88      	it	hi
 8016f3a:	f1a4 060a 	subhi.w	r6, r4, #10
 8016f3e:	f1bc 0f00 	cmp.w	ip, #0
 8016f42:	bf08      	it	eq
 8016f44:	f04f 0c02 	moveq.w	ip, #2
 8016f48:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016f4c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016f50:	fa1f fc8c 	uxth.w	ip, ip
 8016f54:	3c01      	subs	r4, #1
 8016f56:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8016f5a:	b2a4      	uxth	r4, r4
 8016f5c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016f60:	454c      	cmp	r4, r9
 8016f62:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8016f66:	d1e5      	bne.n	8016f34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016f68:	eba5 050e 	sub.w	r5, r5, lr
 8016f6c:	eb0e 0408 	add.w	r4, lr, r8
 8016f70:	8705      	strh	r5, [r0, #56]	@ 0x38
 8016f72:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8016f76:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8016f7a:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8016f7c:	1a64      	subs	r4, r4, r1
 8016f7e:	4439      	add	r1, r7
 8016f80:	b289      	uxth	r1, r1
 8016f82:	2909      	cmp	r1, #9
 8016f84:	bf88      	it	hi
 8016f86:	390a      	subhi	r1, #10
 8016f88:	8704      	strh	r4, [r0, #56]	@ 0x38
 8016f8a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016f8c:	250a      	movs	r5, #10
 8016f8e:	b18a      	cbz	r2, 8016fb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016f90:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8016f92:	3a01      	subs	r2, #1
 8016f94:	b292      	uxth	r2, r2
 8016f96:	3101      	adds	r1, #1
 8016f98:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016f9c:	8701      	strh	r1, [r0, #56]	@ 0x38
 8016f9e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8016fa0:	b901      	cbnz	r1, 8016fa4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8016fa2:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8016fa4:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8016fa6:	3901      	subs	r1, #1
 8016fa8:	b289      	uxth	r1, r1
 8016faa:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016fac:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016fb0:	844c      	strh	r4, [r1, #34]	@ 0x22
 8016fb2:	e7ec      	b.n	8016f8e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8016fb4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016fb8:	f7ff bf4b 	b.w	8016e52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016fbc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016fbc:	b570      	push	{r4, r5, r6, lr}
 8016fbe:	2500      	movs	r5, #0
 8016fc0:	4295      	cmp	r5, r2
 8016fc2:	d011      	beq.n	8016fe8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8016fc4:	8bc4      	ldrh	r4, [r0, #30]
 8016fc6:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016fca:	4414      	add	r4, r2
 8016fcc:	3c01      	subs	r4, #1
 8016fce:	1b64      	subs	r4, r4, r5
 8016fd0:	b2a4      	uxth	r4, r4
 8016fd2:	2c01      	cmp	r4, #1
 8016fd4:	bf88      	it	hi
 8016fd6:	3c02      	subhi	r4, #2
 8016fd8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016fdc:	8b64      	ldrh	r4, [r4, #26]
 8016fde:	42b4      	cmp	r4, r6
 8016fe0:	d117      	bne.n	8017012 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8016fe2:	3501      	adds	r5, #1
 8016fe4:	b2ad      	uxth	r5, r5
 8016fe6:	e7eb      	b.n	8016fc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8016fe8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016fec:	2400      	movs	r4, #0
 8016fee:	4413      	add	r3, r2
 8016ff0:	b2a2      	uxth	r2, r4
 8016ff2:	429a      	cmp	r2, r3
 8016ff4:	da0f      	bge.n	8017016 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8016ff6:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8016ff8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016ffc:	4432      	add	r2, r6
 8016ffe:	b292      	uxth	r2, r2
 8017000:	2a09      	cmp	r2, #9
 8017002:	bf88      	it	hi
 8017004:	3a0a      	subhi	r2, #10
 8017006:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801700a:	3401      	adds	r4, #1
 801700c:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 801700e:	42aa      	cmp	r2, r5
 8017010:	d0ee      	beq.n	8016ff0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017012:	2000      	movs	r0, #0
 8017014:	bd70      	pop	{r4, r5, r6, pc}
 8017016:	2001      	movs	r0, #1
 8017018:	e7fc      	b.n	8017014 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801701a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801701a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801701e:	4605      	mov	r5, r0
 8017020:	4616      	mov	r6, r2
 8017022:	1c8c      	adds	r4, r1, #2
 8017024:	8809      	ldrh	r1, [r1, #0]
 8017026:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801702a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801702e:	42b3      	cmp	r3, r6
 8017030:	d124      	bne.n	801707c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017032:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017036:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801703a:	f001 070f 	and.w	r7, r1, #15
 801703e:	f8cd 8000 	str.w	r8, [sp]
 8017042:	464b      	mov	r3, r9
 8017044:	4652      	mov	r2, sl
 8017046:	4621      	mov	r1, r4
 8017048:	4628      	mov	r0, r5
 801704a:	f7ff ffb7 	bl	8016fbc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801704e:	4683      	mov	fp, r0
 8017050:	b168      	cbz	r0, 801706e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017052:	eb0a 0109 	add.w	r1, sl, r9
 8017056:	4441      	add	r1, r8
 8017058:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801705c:	463a      	mov	r2, r7
 801705e:	4649      	mov	r1, r9
 8017060:	4628      	mov	r0, r5
 8017062:	f7ff ff53 	bl	8016f0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017066:	4658      	mov	r0, fp
 8017068:	b003      	add	sp, #12
 801706a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801706e:	eb07 010a 	add.w	r1, r7, sl
 8017072:	4449      	add	r1, r9
 8017074:	4441      	add	r1, r8
 8017076:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801707a:	e7d2      	b.n	8017022 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801707c:	f04f 0b00 	mov.w	fp, #0
 8017080:	e7f1      	b.n	8017066 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017082 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017082:	b570      	push	{r4, r5, r6, lr}
 8017084:	8810      	ldrh	r0, [r2, #0]
 8017086:	4298      	cmp	r0, r3
 8017088:	d817      	bhi.n	80170ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801708a:	1e48      	subs	r0, r1, #1
 801708c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017090:	4298      	cmp	r0, r3
 8017092:	d312      	bcc.n	80170ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017094:	2400      	movs	r4, #0
 8017096:	428c      	cmp	r4, r1
 8017098:	d20f      	bcs.n	80170ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801709a:	1860      	adds	r0, r4, r1
 801709c:	1040      	asrs	r0, r0, #1
 801709e:	0085      	lsls	r5, r0, #2
 80170a0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80170a4:	42b3      	cmp	r3, r6
 80170a6:	d902      	bls.n	80170ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80170a8:	3001      	adds	r0, #1
 80170aa:	b284      	uxth	r4, r0
 80170ac:	e7f3      	b.n	8017096 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80170ae:	d201      	bcs.n	80170b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80170b0:	b281      	uxth	r1, r0
 80170b2:	e7f0      	b.n	8017096 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80170b4:	442a      	add	r2, r5
 80170b6:	8850      	ldrh	r0, [r2, #2]
 80170b8:	bd70      	pop	{r4, r5, r6, pc}
 80170ba:	2000      	movs	r0, #0
 80170bc:	e7fc      	b.n	80170b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080170be <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80170be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80170c2:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80170c4:	886f      	ldrh	r7, [r5, #2]
 80170c6:	4604      	mov	r4, r0
 80170c8:	087f      	lsrs	r7, r7, #1
 80170ca:	260b      	movs	r6, #11
 80170cc:	3e01      	subs	r6, #1
 80170ce:	d013      	beq.n	80170f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80170d0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80170d2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80170d6:	462a      	mov	r2, r5
 80170d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80170dc:	4639      	mov	r1, r7
 80170de:	4643      	mov	r3, r8
 80170e0:	4620      	mov	r0, r4
 80170e2:	f7ff ffce 	bl	8017082 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80170e6:	b138      	cbz	r0, 80170f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80170e8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80170ec:	4642      	mov	r2, r8
 80170ee:	4620      	mov	r0, r4
 80170f0:	f7ff ff93 	bl	801701a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80170f4:	2800      	cmp	r0, #0
 80170f6:	d1e9      	bne.n	80170cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80170f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080170fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80170fc:	b570      	push	{r4, r5, r6, lr}
 80170fe:	694a      	ldr	r2, [r1, #20]
 8017100:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8017102:	684b      	ldr	r3, [r1, #4]
 8017104:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8017106:	1b54      	subs	r4, r2, r5
 8017108:	f000 8106 	beq.w	8017318 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801710c:	1b9b      	subs	r3, r3, r6
 801710e:	d003      	beq.n	8017118 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017110:	4363      	muls	r3, r4
 8017112:	2210      	movs	r2, #16
 8017114:	fb93 f3f2 	sdiv	r3, r3, r2
 8017118:	680c      	ldr	r4, [r1, #0]
 801711a:	698a      	ldr	r2, [r1, #24]
 801711c:	1b65      	subs	r5, r4, r5
 801711e:	f000 80fd 	beq.w	801731c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017122:	1b92      	subs	r2, r2, r6
 8017124:	d003      	beq.n	801712e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017126:	436a      	muls	r2, r5
 8017128:	2410      	movs	r4, #16
 801712a:	fb92 f2f4 	sdiv	r2, r2, r4
 801712e:	1a9b      	subs	r3, r3, r2
 8017130:	ee07 3a90 	vmov	s15, r3
 8017134:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8017358 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017138:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801713c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017140:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017144:	460a      	mov	r2, r1
 8017146:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801714a:	4603      	mov	r3, r0
 801714c:	f100 040c 	add.w	r4, r0, #12
 8017150:	eeb1 6a43 	vneg.f32	s12, s6
 8017154:	edd2 7a02 	vldr	s15, [r2, #8]
 8017158:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801715c:	3214      	adds	r2, #20
 801715e:	ece3 6a01 	vstmia	r3!, {s13}
 8017162:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017166:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801716a:	429c      	cmp	r4, r3
 801716c:	edc3 7a02 	vstr	s15, [r3, #8]
 8017170:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017174:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017178:	edc3 7a05 	vstr	s15, [r3, #20]
 801717c:	d1ea      	bne.n	8017154 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801717e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017180:	698b      	ldr	r3, [r1, #24]
 8017182:	edd0 4a02 	vldr	s9, [r0, #8]
 8017186:	edd0 3a00 	vldr	s7, [r0]
 801718a:	edd0 6a01 	vldr	s13, [r0, #4]
 801718e:	ed90 5a05 	vldr	s10, [r0, #20]
 8017192:	ed90 2a03 	vldr	s4, [r0, #12]
 8017196:	edd0 5a04 	vldr	s11, [r0, #16]
 801719a:	ed90 1a07 	vldr	s2, [r0, #28]
 801719e:	edd0 2a06 	vldr	s5, [r0, #24]
 80171a2:	1a9b      	subs	r3, r3, r2
 80171a4:	ee07 3a90 	vmov	s15, r3
 80171a8:	684b      	ldr	r3, [r1, #4]
 80171aa:	1a9b      	subs	r3, r3, r2
 80171ac:	ee07 3a10 	vmov	s14, r3
 80171b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80171b4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80171b8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80171bc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80171c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80171c4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80171c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80171cc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80171d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80171d4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80171d8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80171dc:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80171e0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80171e2:	694a      	ldr	r2, [r1, #20]
 80171e4:	1b13      	subs	r3, r2, r4
 80171e6:	ee07 3a10 	vmov	s14, r3
 80171ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80171ee:	680b      	ldr	r3, [r1, #0]
 80171f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80171f4:	1b1b      	subs	r3, r3, r4
 80171f6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80171fa:	ee07 3a10 	vmov	s14, r3
 80171fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017202:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017206:	eee6 4a87 	vfma.f32	s9, s13, s14
 801720a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801720e:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8017212:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017214:	698b      	ldr	r3, [r1, #24]
 8017216:	1a9b      	subs	r3, r3, r2
 8017218:	ee06 3a90 	vmov	s13, r3
 801721c:	684b      	ldr	r3, [r1, #4]
 801721e:	1a9b      	subs	r3, r3, r2
 8017220:	ee07 3a10 	vmov	s14, r3
 8017224:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017228:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801722c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017230:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017234:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017238:	eee5 6a87 	vfma.f32	s13, s11, s14
 801723c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017240:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8017244:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8017246:	694a      	ldr	r2, [r1, #20]
 8017248:	1b13      	subs	r3, r2, r4
 801724a:	ee07 3a10 	vmov	s14, r3
 801724e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017252:	680b      	ldr	r3, [r1, #0]
 8017254:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017258:	1b1b      	subs	r3, r3, r4
 801725a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801725e:	ee07 3a10 	vmov	s14, r3
 8017262:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017266:	ee27 7a04 	vmul.f32	s14, s14, s8
 801726a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801726e:	edd0 5a08 	vldr	s11, [r0, #32]
 8017272:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017276:	ee31 1a65 	vsub.f32	s2, s2, s11
 801727a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801727e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017280:	698b      	ldr	r3, [r1, #24]
 8017282:	1a9b      	subs	r3, r3, r2
 8017284:	ee07 3a10 	vmov	s14, r3
 8017288:	684b      	ldr	r3, [r1, #4]
 801728a:	1a9b      	subs	r3, r3, r2
 801728c:	ee01 3a90 	vmov	s3, r3
 8017290:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017294:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017298:	ee27 7a04 	vmul.f32	s14, s14, s8
 801729c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80172a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80172a4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80172a8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80172ac:	ee27 7a03 	vmul.f32	s14, s14, s6
 80172b0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80172b4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80172b6:	694a      	ldr	r2, [r1, #20]
 80172b8:	1b13      	subs	r3, r2, r4
 80172ba:	ee03 3a10 	vmov	s6, r3
 80172be:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80172c2:	680b      	ldr	r3, [r1, #0]
 80172c4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80172c8:	1b1b      	subs	r3, r3, r4
 80172ca:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80172ce:	ee03 3a10 	vmov	s6, r3
 80172d2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80172d6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80172da:	eee1 5a04 	vfma.f32	s11, s2, s8
 80172de:	ee25 6a86 	vmul.f32	s12, s11, s12
 80172e2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80172e6:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80172ea:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80172ee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80172f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172f6:	dd13      	ble.n	8017320 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80172f8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80172fc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017300:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8017302:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017306:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801730a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801730e:	dd15      	ble.n	801733c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017310:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8017314:	6403      	str	r3, [r0, #64]	@ 0x40
 8017316:	bd70      	pop	{r4, r5, r6, pc}
 8017318:	4623      	mov	r3, r4
 801731a:	e6fd      	b.n	8017118 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801731c:	462a      	mov	r2, r5
 801731e:	e706      	b.n	801712e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017320:	d502      	bpl.n	8017328 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017322:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017326:	e7e9      	b.n	80172fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017328:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801732c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017330:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017334:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017338:	dade      	bge.n	80172f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801733a:	e7f2      	b.n	8017322 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801733c:	d502      	bpl.n	8017344 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801733e:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8017342:	e7e7      	b.n	8017314 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017344:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017348:	eee3 4a86 	vfma.f32	s9, s7, s12
 801734c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017354:	dadc      	bge.n	8017310 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017356:	e7f2      	b.n	801733e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017358:	3d800000 	.word	0x3d800000

0801735c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801735c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017360:	2714      	movs	r7, #20
 8017362:	435f      	muls	r7, r3
 8017364:	eb02 0c07 	add.w	ip, r2, r7
 8017368:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801736c:	f115 0e0f 	adds.w	lr, r5, #15
 8017370:	f100 80a2 	bmi.w	80174b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017374:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017378:	9c08      	ldr	r4, [sp, #32]
 801737a:	f8c0 e014 	str.w	lr, [r0, #20]
 801737e:	2614      	movs	r6, #20
 8017380:	4366      	muls	r6, r4
 8017382:	eb02 0806 	add.w	r8, r2, r6
 8017386:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801738a:	f115 040f 	adds.w	r4, r5, #15
 801738e:	f100 809f 	bmi.w	80174d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017392:	1124      	asrs	r4, r4, #4
 8017394:	eba4 040e 	sub.w	r4, r4, lr
 8017398:	6184      	str	r4, [r0, #24]
 801739a:	2c00      	cmp	r4, #0
 801739c:	f000 808a 	beq.w	80174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80173a0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80173a4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80173a8:	5995      	ldr	r5, [r2, r6]
 80173aa:	eba4 0809 	sub.w	r8, r4, r9
 80173ae:	59d4      	ldr	r4, [r2, r7]
 80173b0:	eba5 0a04 	sub.w	sl, r5, r4
 80173b4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80173b8:	fb0e fe05 	mul.w	lr, lr, r5
 80173bc:	fb0a ee19 	mls	lr, sl, r9, lr
 80173c0:	fb08 e404 	mla	r4, r8, r4, lr
 80173c4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80173c8:	3c01      	subs	r4, #1
 80173ca:	19a4      	adds	r4, r4, r6
 80173cc:	f100 808c 	bmi.w	80174e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80173d0:	fb94 fef6 	sdiv	lr, r4, r6
 80173d4:	f8c0 e000 	str.w	lr, [r0]
 80173d8:	fb06 441e 	mls	r4, r6, lr, r4
 80173dc:	6104      	str	r4, [r0, #16]
 80173de:	2d00      	cmp	r5, #0
 80173e0:	f2c0 8095 	blt.w	801750e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80173e4:	fb95 f4f6 	sdiv	r4, r5, r6
 80173e8:	6044      	str	r4, [r0, #4]
 80173ea:	fb06 5514 	mls	r5, r6, r4, r5
 80173ee:	6085      	str	r5, [r0, #8]
 80173f0:	60c6      	str	r6, [r0, #12]
 80173f2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80173f6:	6945      	ldr	r5, [r0, #20]
 80173f8:	59d2      	ldr	r2, [r2, r7]
 80173fa:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8017530 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80173fe:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8017402:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017406:	ee07 4a10 	vmov	s14, r4
 801740a:	6804      	ldr	r4, [r0, #0]
 801740c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017410:	ee07 2a90 	vmov	s15, r2
 8017414:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017418:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801741c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017420:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017424:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017428:	edd3 6a00 	vldr	s13, [r3]
 801742c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017430:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8017434:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017438:	edc0 6a07 	vstr	s13, [r0, #28]
 801743c:	edd0 6a01 	vldr	s13, [r0, #4]
 8017440:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8017444:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8017448:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801744c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017450:	ed80 6a08 	vstr	s12, [r0, #32]
 8017454:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8017456:	6242      	str	r2, [r0, #36]	@ 0x24
 8017458:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801745c:	ed93 6a03 	vldr	s12, [r3, #12]
 8017460:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017464:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8017468:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801746c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8017470:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8017474:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8017478:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801747c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8017480:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8017482:	6302      	str	r2, [r0, #48]	@ 0x30
 8017484:	ed93 6a06 	vldr	s12, [r3, #24]
 8017488:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801748c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017490:	eeb0 7a46 	vmov.f32	s14, s12
 8017494:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8017498:	eea6 7a27 	vfma.f32	s14, s12, s15
 801749c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80174a0:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80174a4:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80174a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80174ac:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80174b0:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80174b2:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80174b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80174b8:	f1c5 0501 	rsb	r5, r5, #1
 80174bc:	f015 050f 	ands.w	r5, r5, #15
 80174c0:	bf18      	it	ne
 80174c2:	2501      	movne	r5, #1
 80174c4:	2410      	movs	r4, #16
 80174c6:	fb9e fef4 	sdiv	lr, lr, r4
 80174ca:	ebae 0e05 	sub.w	lr, lr, r5
 80174ce:	e753      	b.n	8017378 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80174d0:	f1c5 0501 	rsb	r5, r5, #1
 80174d4:	f015 050f 	ands.w	r5, r5, #15
 80174d8:	bf18      	it	ne
 80174da:	2501      	movne	r5, #1
 80174dc:	f04f 0910 	mov.w	r9, #16
 80174e0:	fb94 f4f9 	sdiv	r4, r4, r9
 80174e4:	1b64      	subs	r4, r4, r5
 80174e6:	e755      	b.n	8017394 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80174e8:	4264      	negs	r4, r4
 80174ea:	fb94 fef6 	sdiv	lr, r4, r6
 80174ee:	f1ce 0800 	rsb	r8, lr, #0
 80174f2:	fb06 441e 	mls	r4, r6, lr, r4
 80174f6:	f8c0 8000 	str.w	r8, [r0]
 80174fa:	6104      	str	r4, [r0, #16]
 80174fc:	2c00      	cmp	r4, #0
 80174fe:	f43f af6e 	beq.w	80173de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017502:	ea6f 0e0e 	mvn.w	lr, lr
 8017506:	f8c0 e000 	str.w	lr, [r0]
 801750a:	1b34      	subs	r4, r6, r4
 801750c:	e766      	b.n	80173dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801750e:	426d      	negs	r5, r5
 8017510:	fb95 f4f6 	sdiv	r4, r5, r6
 8017514:	f1c4 0e00 	rsb	lr, r4, #0
 8017518:	fb06 5514 	mls	r5, r6, r4, r5
 801751c:	f8c0 e004 	str.w	lr, [r0, #4]
 8017520:	6085      	str	r5, [r0, #8]
 8017522:	2d00      	cmp	r5, #0
 8017524:	f43f af64 	beq.w	80173f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017528:	43e4      	mvns	r4, r4
 801752a:	6044      	str	r4, [r0, #4]
 801752c:	1b75      	subs	r5, r6, r5
 801752e:	e75e      	b.n	80173ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017530:	3d800000 	.word	0x3d800000

08017534 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017534:	4602      	mov	r2, r0
 8017536:	b148      	cbz	r0, 801754c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017538:	2300      	movs	r3, #0
 801753a:	b298      	uxth	r0, r3
 801753c:	3301      	adds	r3, #1
 801753e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017542:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017546:	2900      	cmp	r1, #0
 8017548:	d1f7      	bne.n	801753a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801754a:	4770      	bx	lr
 801754c:	4770      	bx	lr

0801754e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801754e:	b530      	push	{r4, r5, lr}
 8017550:	4604      	mov	r4, r0
 8017552:	b159      	cbz	r1, 801756c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017554:	b148      	cbz	r0, 801756a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017556:	2300      	movs	r3, #0
 8017558:	b298      	uxth	r0, r3
 801755a:	4282      	cmp	r2, r0
 801755c:	d905      	bls.n	801756a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801755e:	5ccd      	ldrb	r5, [r1, r3]
 8017560:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017564:	3301      	adds	r3, #1
 8017566:	2d00      	cmp	r5, #0
 8017568:	d1f6      	bne.n	8017558 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801756a:	bd30      	pop	{r4, r5, pc}
 801756c:	4608      	mov	r0, r1
 801756e:	e7fc      	b.n	801756a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017570 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017570:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017572:	b08b      	sub	sp, #44	@ 0x2c
 8017574:	468c      	mov	ip, r1
 8017576:	2100      	movs	r1, #0
 8017578:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801757c:	4604      	mov	r4, r0
 801757e:	261f      	movs	r6, #31
 8017580:	af01      	add	r7, sp, #4
 8017582:	fb94 fef3 	sdiv	lr, r4, r3
 8017586:	fb03 441e 	mls	r4, r3, lr, r4
 801758a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801758e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017592:	b2ec      	uxtb	r4, r5
 8017594:	2d09      	cmp	r5, #9
 8017596:	bfd4      	ite	le
 8017598:	3430      	addle	r4, #48	@ 0x30
 801759a:	3457      	addgt	r4, #87	@ 0x57
 801759c:	b2e4      	uxtb	r4, r4
 801759e:	55bc      	strb	r4, [r7, r6]
 80175a0:	4674      	mov	r4, lr
 80175a2:	1e71      	subs	r1, r6, #1
 80175a4:	b974      	cbnz	r4, 80175c4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80175a6:	2800      	cmp	r0, #0
 80175a8:	da05      	bge.n	80175b6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80175aa:	ab0a      	add	r3, sp, #40	@ 0x28
 80175ac:	4419      	add	r1, r3
 80175ae:	232d      	movs	r3, #45	@ 0x2d
 80175b0:	f801 3c24 	strb.w	r3, [r1, #-36]
 80175b4:	1eb1      	subs	r1, r6, #2
 80175b6:	3101      	adds	r1, #1
 80175b8:	4439      	add	r1, r7
 80175ba:	4660      	mov	r0, ip
 80175bc:	f7ff ffc7 	bl	801754e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80175c0:	b00b      	add	sp, #44	@ 0x2c
 80175c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80175c4:	460e      	mov	r6, r1
 80175c6:	e7dc      	b.n	8017582 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080175c8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80175c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175ca:	b08b      	sub	sp, #44	@ 0x2c
 80175cc:	468c      	mov	ip, r1
 80175ce:	2100      	movs	r1, #0
 80175d0:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80175d4:	ae01      	add	r6, sp, #4
 80175d6:	211f      	movs	r1, #31
 80175d8:	fbb0 f7f3 	udiv	r7, r0, r3
 80175dc:	fb03 0517 	mls	r5, r3, r7, r0
 80175e0:	b2ec      	uxtb	r4, r5
 80175e2:	2d09      	cmp	r5, #9
 80175e4:	bfd4      	ite	le
 80175e6:	3430      	addle	r4, #48	@ 0x30
 80175e8:	3457      	addgt	r4, #87	@ 0x57
 80175ea:	b2e4      	uxtb	r4, r4
 80175ec:	558c      	strb	r4, [r1, r6]
 80175ee:	4638      	mov	r0, r7
 80175f0:	1e4c      	subs	r4, r1, #1
 80175f2:	b92f      	cbnz	r7, 8017600 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80175f4:	4431      	add	r1, r6
 80175f6:	4660      	mov	r0, ip
 80175f8:	f7ff ffa9 	bl	801754e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80175fc:	b00b      	add	sp, #44	@ 0x2c
 80175fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017600:	4621      	mov	r1, r4
 8017602:	e7e9      	b.n	80175d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017604 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017608:	4691      	mov	r9, r2
 801760a:	b085      	sub	sp, #20
 801760c:	6802      	ldr	r2, [r0, #0]
 801760e:	9201      	str	r2, [sp, #4]
 8017610:	4688      	mov	r8, r1
 8017612:	4683      	mov	fp, r0
 8017614:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8017618:	9103      	str	r1, [sp, #12]
 801761a:	4610      	mov	r0, r2
 801761c:	461c      	mov	r4, r3
 801761e:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8017622:	9302      	str	r3, [sp, #8]
 8017624:	f7ff ff86 	bl	8017534 <_ZN8touchgfx7Unicode6strlenEPKt>
 8017628:	f1b8 0f00 	cmp.w	r8, #0
 801762c:	bf0c      	ite	eq
 801762e:	4684      	moveq	ip, r0
 8017630:	f100 0c01 	addne.w	ip, r0, #1
 8017634:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8017638:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 801763c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801763e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017640:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8017644:	9903      	ldr	r1, [sp, #12]
 8017646:	fa1f fc8c 	uxth.w	ip, ip
 801764a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801764e:	d041      	beq.n	80176d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017650:	d834      	bhi.n	80176bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017652:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8017656:	d059      	beq.n	801770c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017658:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 801765c:	d03a      	beq.n	80176d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801765e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8017662:	d034      	beq.n	80176ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017664:	2400      	movs	r4, #0
 8017666:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801766a:	3a01      	subs	r2, #1
 801766c:	b169      	cbz	r1, 801768a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801766e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017670:	458c      	cmp	ip, r1
 8017672:	da09      	bge.n	8017688 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017674:	eba1 010c 	sub.w	r1, r1, ip
 8017678:	b289      	uxth	r1, r1
 801767a:	b933      	cbnz	r3, 801768a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801767c:	2e00      	cmp	r6, #0
 801767e:	d051      	beq.n	8017724 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017680:	2800      	cmp	r0, #0
 8017682:	d04f      	beq.n	8017724 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017684:	440c      	add	r4, r1
 8017686:	b2a4      	uxth	r4, r4
 8017688:	2100      	movs	r1, #0
 801768a:	682b      	ldr	r3, [r5, #0]
 801768c:	4293      	cmp	r3, r2
 801768e:	da07      	bge.n	80176a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017690:	f1b8 0f00 	cmp.w	r8, #0
 8017694:	d004      	beq.n	80176a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017696:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801769a:	682b      	ldr	r3, [r5, #0]
 801769c:	3301      	adds	r3, #1
 801769e:	602b      	str	r3, [r5, #0]
 80176a0:	2730      	movs	r7, #48	@ 0x30
 80176a2:	2c00      	cmp	r4, #0
 80176a4:	d04e      	beq.n	8017744 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80176a6:	682e      	ldr	r6, [r5, #0]
 80176a8:	3c01      	subs	r4, #1
 80176aa:	42b2      	cmp	r2, r6
 80176ac:	b2a4      	uxth	r4, r4
 80176ae:	dd49      	ble.n	8017744 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80176b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80176b4:	682b      	ldr	r3, [r5, #0]
 80176b6:	3301      	adds	r3, #1
 80176b8:	602b      	str	r3, [r5, #0]
 80176ba:	e7f2      	b.n	80176a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80176bc:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 80176c0:	d01d      	beq.n	80176fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80176c2:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 80176c6:	d002      	beq.n	80176ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80176c8:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 80176cc:	e7c9      	b.n	8017662 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80176ce:	4684      	mov	ip, r0
 80176d0:	f04f 0800 	mov.w	r8, #0
 80176d4:	2c00      	cmp	r4, #0
 80176d6:	d0c6      	beq.n	8017666 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80176d8:	b947      	cbnz	r7, 80176ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80176da:	2801      	cmp	r0, #1
 80176dc:	d106      	bne.n	80176ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80176de:	8814      	ldrh	r4, [r2, #0]
 80176e0:	2c30      	cmp	r4, #48	@ 0x30
 80176e2:	bf02      	ittt	eq
 80176e4:	3202      	addeq	r2, #2
 80176e6:	f8cb 2000 	streq.w	r2, [fp]
 80176ea:	4638      	moveq	r0, r7
 80176ec:	45bc      	cmp	ip, r7
 80176ee:	da14      	bge.n	801771a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80176f0:	b2bf      	uxth	r7, r7
 80176f2:	eba7 040c 	sub.w	r4, r7, ip
 80176f6:	b2a4      	uxth	r4, r4
 80176f8:	46bc      	mov	ip, r7
 80176fa:	2600      	movs	r6, #0
 80176fc:	e7b3      	b.n	8017666 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80176fe:	4684      	mov	ip, r0
 8017700:	b16c      	cbz	r4, 801771e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017702:	42b8      	cmp	r0, r7
 8017704:	dd00      	ble.n	8017708 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017706:	b2b8      	uxth	r0, r7
 8017708:	2400      	movs	r4, #0
 801770a:	e003      	b.n	8017714 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801770c:	f04f 0c01 	mov.w	ip, #1
 8017710:	2400      	movs	r4, #0
 8017712:	4660      	mov	r0, ip
 8017714:	4626      	mov	r6, r4
 8017716:	46a0      	mov	r8, r4
 8017718:	e7a5      	b.n	8017666 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801771a:	2400      	movs	r4, #0
 801771c:	e7ed      	b.n	80176fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801771e:	4626      	mov	r6, r4
 8017720:	46a0      	mov	r8, r4
 8017722:	e7a0      	b.n	8017666 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017724:	2900      	cmp	r1, #0
 8017726:	d0b0      	beq.n	801768a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017728:	2720      	movs	r7, #32
 801772a:	682e      	ldr	r6, [r5, #0]
 801772c:	2900      	cmp	r1, #0
 801772e:	d0ac      	beq.n	801768a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017730:	3901      	subs	r1, #1
 8017732:	4296      	cmp	r6, r2
 8017734:	b289      	uxth	r1, r1
 8017736:	daa7      	bge.n	8017688 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017738:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801773c:	682b      	ldr	r3, [r5, #0]
 801773e:	3301      	adds	r3, #1
 8017740:	602b      	str	r3, [r5, #0]
 8017742:	e7f2      	b.n	801772a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017744:	b188      	cbz	r0, 801776a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017746:	682b      	ldr	r3, [r5, #0]
 8017748:	3801      	subs	r0, #1
 801774a:	429a      	cmp	r2, r3
 801774c:	b280      	uxth	r0, r0
 801774e:	dd0c      	ble.n	801776a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017750:	f8db 3000 	ldr.w	r3, [fp]
 8017754:	1c9c      	adds	r4, r3, #2
 8017756:	f8cb 4000 	str.w	r4, [fp]
 801775a:	881c      	ldrh	r4, [r3, #0]
 801775c:	682b      	ldr	r3, [r5, #0]
 801775e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017762:	682b      	ldr	r3, [r5, #0]
 8017764:	3301      	adds	r3, #1
 8017766:	602b      	str	r3, [r5, #0]
 8017768:	e7ec      	b.n	8017744 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801776a:	2620      	movs	r6, #32
 801776c:	b151      	cbz	r1, 8017784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801776e:	6828      	ldr	r0, [r5, #0]
 8017770:	3901      	subs	r1, #1
 8017772:	4282      	cmp	r2, r0
 8017774:	b289      	uxth	r1, r1
 8017776:	dd05      	ble.n	8017784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017778:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801777c:	682b      	ldr	r3, [r5, #0]
 801777e:	3301      	adds	r3, #1
 8017780:	602b      	str	r3, [r5, #0]
 8017782:	e7f3      	b.n	801776c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017784:	b005      	add	sp, #20
 8017786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801778a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801778a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801778e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017792:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8017796:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 801779a:	2400      	movs	r4, #0
 801779c:	8014      	strh	r4, [r2, #0]
 801779e:	701c      	strb	r4, [r3, #0]
 80177a0:	f888 4000 	strb.w	r4, [r8]
 80177a4:	f88c 4000 	strb.w	r4, [ip]
 80177a8:	f88e 4000 	strb.w	r4, [lr]
 80177ac:	703c      	strb	r4, [r7, #0]
 80177ae:	6804      	ldr	r4, [r0, #0]
 80177b0:	b1a4      	cbz	r4, 80177dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80177b2:	8824      	ldrh	r4, [r4, #0]
 80177b4:	f04f 0901 	mov.w	r9, #1
 80177b8:	b314      	cbz	r4, 8017800 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80177ba:	2c2b      	cmp	r4, #43	@ 0x2b
 80177bc:	d001      	beq.n	80177c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80177be:	2c20      	cmp	r4, #32
 80177c0:	d110      	bne.n	80177e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80177c2:	8014      	strh	r4, [r2, #0]
 80177c4:	6804      	ldr	r4, [r0, #0]
 80177c6:	b10c      	cbz	r4, 80177cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80177c8:	3402      	adds	r4, #2
 80177ca:	6004      	str	r4, [r0, #0]
 80177cc:	680c      	ldr	r4, [r1, #0]
 80177ce:	b10c      	cbz	r4, 80177d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80177d0:	3401      	adds	r4, #1
 80177d2:	600c      	str	r4, [r1, #0]
 80177d4:	6804      	ldr	r4, [r0, #0]
 80177d6:	b17c      	cbz	r4, 80177f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80177d8:	8824      	ldrh	r4, [r4, #0]
 80177da:	e7ed      	b.n	80177b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80177dc:	680c      	ldr	r4, [r1, #0]
 80177de:	b17c      	cbz	r4, 8017800 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80177e0:	7824      	ldrb	r4, [r4, #0]
 80177e2:	e7e7      	b.n	80177b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80177e4:	2c2d      	cmp	r4, #45	@ 0x2d
 80177e6:	d102      	bne.n	80177ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80177e8:	f883 9000 	strb.w	r9, [r3]
 80177ec:	e7ea      	b.n	80177c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80177ee:	2c23      	cmp	r4, #35	@ 0x23
 80177f0:	d107      	bne.n	8017802 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80177f2:	f888 9000 	strb.w	r9, [r8]
 80177f6:	e7e5      	b.n	80177c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80177f8:	680c      	ldr	r4, [r1, #0]
 80177fa:	b10c      	cbz	r4, 8017800 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80177fc:	7824      	ldrb	r4, [r4, #0]
 80177fe:	e7db      	b.n	80177b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017800:	2400      	movs	r4, #0
 8017802:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8017806:	2b09      	cmp	r3, #9
 8017808:	d901      	bls.n	801780e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801780a:	2c2a      	cmp	r4, #42	@ 0x2a
 801780c:	d122      	bne.n	8017854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801780e:	2301      	movs	r3, #1
 8017810:	2c30      	cmp	r4, #48	@ 0x30
 8017812:	f88e 3000 	strb.w	r3, [lr]
 8017816:	d10d      	bne.n	8017834 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017818:	f88c 3000 	strb.w	r3, [ip]
 801781c:	6803      	ldr	r3, [r0, #0]
 801781e:	b10b      	cbz	r3, 8017824 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017820:	3302      	adds	r3, #2
 8017822:	6003      	str	r3, [r0, #0]
 8017824:	680b      	ldr	r3, [r1, #0]
 8017826:	b10b      	cbz	r3, 801782c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017828:	3301      	adds	r3, #1
 801782a:	600b      	str	r3, [r1, #0]
 801782c:	6803      	ldr	r3, [r0, #0]
 801782e:	2b00      	cmp	r3, #0
 8017830:	d02f      	beq.n	8017892 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017832:	881c      	ldrh	r4, [r3, #0]
 8017834:	2c2a      	cmp	r4, #42	@ 0x2a
 8017836:	d135      	bne.n	80178a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017838:	f04f 33ff 	mov.w	r3, #4294967295
 801783c:	6033      	str	r3, [r6, #0]
 801783e:	6803      	ldr	r3, [r0, #0]
 8017840:	b10b      	cbz	r3, 8017846 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017842:	3302      	adds	r3, #2
 8017844:	6003      	str	r3, [r0, #0]
 8017846:	680b      	ldr	r3, [r1, #0]
 8017848:	b10b      	cbz	r3, 801784e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801784a:	3301      	adds	r3, #1
 801784c:	600b      	str	r3, [r1, #0]
 801784e:	6803      	ldr	r3, [r0, #0]
 8017850:	b31b      	cbz	r3, 801789a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017852:	881c      	ldrh	r4, [r3, #0]
 8017854:	2c2e      	cmp	r4, #46	@ 0x2e
 8017856:	d11a      	bne.n	801788e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017858:	2301      	movs	r3, #1
 801785a:	703b      	strb	r3, [r7, #0]
 801785c:	6803      	ldr	r3, [r0, #0]
 801785e:	b10b      	cbz	r3, 8017864 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017860:	3302      	adds	r3, #2
 8017862:	6003      	str	r3, [r0, #0]
 8017864:	680b      	ldr	r3, [r1, #0]
 8017866:	b10b      	cbz	r3, 801786c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017868:	3301      	adds	r3, #1
 801786a:	600b      	str	r3, [r1, #0]
 801786c:	6803      	ldr	r3, [r0, #0]
 801786e:	2b00      	cmp	r3, #0
 8017870:	d036      	beq.n	80178e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017872:	881b      	ldrh	r3, [r3, #0]
 8017874:	2b2a      	cmp	r3, #42	@ 0x2a
 8017876:	d137      	bne.n	80178e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017878:	f04f 33ff 	mov.w	r3, #4294967295
 801787c:	602b      	str	r3, [r5, #0]
 801787e:	6803      	ldr	r3, [r0, #0]
 8017880:	b10b      	cbz	r3, 8017886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017882:	3302      	adds	r3, #2
 8017884:	6003      	str	r3, [r0, #0]
 8017886:	680b      	ldr	r3, [r1, #0]
 8017888:	b10b      	cbz	r3, 801788e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801788a:	3301      	adds	r3, #1
 801788c:	600b      	str	r3, [r1, #0]
 801788e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017892:	680c      	ldr	r4, [r1, #0]
 8017894:	b134      	cbz	r4, 80178a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017896:	7824      	ldrb	r4, [r4, #0]
 8017898:	e7cc      	b.n	8017834 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801789a:	680b      	ldr	r3, [r1, #0]
 801789c:	2b00      	cmp	r3, #0
 801789e:	d0f6      	beq.n	801788e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80178a0:	781c      	ldrb	r4, [r3, #0]
 80178a2:	e7d7      	b.n	8017854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80178a4:	2300      	movs	r3, #0
 80178a6:	6033      	str	r3, [r6, #0]
 80178a8:	220a      	movs	r2, #10
 80178aa:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 80178ae:	fa1f f38c 	uxth.w	r3, ip
 80178b2:	2b09      	cmp	r3, #9
 80178b4:	d8ce      	bhi.n	8017854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80178b6:	6833      	ldr	r3, [r6, #0]
 80178b8:	fb02 c303 	mla	r3, r2, r3, ip
 80178bc:	6033      	str	r3, [r6, #0]
 80178be:	6803      	ldr	r3, [r0, #0]
 80178c0:	b10b      	cbz	r3, 80178c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80178c2:	3302      	adds	r3, #2
 80178c4:	6003      	str	r3, [r0, #0]
 80178c6:	680b      	ldr	r3, [r1, #0]
 80178c8:	b10b      	cbz	r3, 80178ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80178ca:	3301      	adds	r3, #1
 80178cc:	600b      	str	r3, [r1, #0]
 80178ce:	6803      	ldr	r3, [r0, #0]
 80178d0:	b10b      	cbz	r3, 80178d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80178d2:	881c      	ldrh	r4, [r3, #0]
 80178d4:	e7e9      	b.n	80178aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80178d6:	680c      	ldr	r4, [r1, #0]
 80178d8:	2c00      	cmp	r4, #0
 80178da:	d0e6      	beq.n	80178aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80178dc:	7824      	ldrb	r4, [r4, #0]
 80178de:	e7e4      	b.n	80178aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80178e0:	680b      	ldr	r3, [r1, #0]
 80178e2:	b10b      	cbz	r3, 80178e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80178e4:	781b      	ldrb	r3, [r3, #0]
 80178e6:	e7c5      	b.n	8017874 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80178e8:	2200      	movs	r2, #0
 80178ea:	602a      	str	r2, [r5, #0]
 80178ec:	240a      	movs	r4, #10
 80178ee:	3b30      	subs	r3, #48	@ 0x30
 80178f0:	b29e      	uxth	r6, r3
 80178f2:	2e09      	cmp	r6, #9
 80178f4:	682a      	ldr	r2, [r5, #0]
 80178f6:	d813      	bhi.n	8017920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80178f8:	fb04 3302 	mla	r3, r4, r2, r3
 80178fc:	602b      	str	r3, [r5, #0]
 80178fe:	6803      	ldr	r3, [r0, #0]
 8017900:	b10b      	cbz	r3, 8017906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017902:	3302      	adds	r3, #2
 8017904:	6003      	str	r3, [r0, #0]
 8017906:	680b      	ldr	r3, [r1, #0]
 8017908:	b10b      	cbz	r3, 801790e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801790a:	3301      	adds	r3, #1
 801790c:	600b      	str	r3, [r1, #0]
 801790e:	6803      	ldr	r3, [r0, #0]
 8017910:	b10b      	cbz	r3, 8017916 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017912:	881b      	ldrh	r3, [r3, #0]
 8017914:	e7eb      	b.n	80178ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017916:	680b      	ldr	r3, [r1, #0]
 8017918:	2b00      	cmp	r3, #0
 801791a:	d0e8      	beq.n	80178ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801791c:	781b      	ldrb	r3, [r3, #0]
 801791e:	e7e6      	b.n	80178ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017920:	2a06      	cmp	r2, #6
 8017922:	bfa8      	it	ge
 8017924:	2206      	movge	r2, #6
 8017926:	602a      	str	r2, [r5, #0]
 8017928:	e7b1      	b.n	801788e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801792a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801792a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801792e:	b0a3      	sub	sp, #140	@ 0x8c
 8017930:	2600      	movs	r6, #0
 8017932:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8017936:	4607      	mov	r7, r0
 8017938:	4688      	mov	r8, r1
 801793a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801793e:	4631      	mov	r1, r6
 8017940:	2242      	movs	r2, #66	@ 0x42
 8017942:	4648      	mov	r0, r9
 8017944:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8017946:	960d      	str	r6, [sp, #52]	@ 0x34
 8017948:	f010 fbb9 	bl	80280be <memset>
 801794c:	b15f      	cbz	r7, 8017966 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801794e:	f108 3aff 	add.w	sl, r8, #4294967295
 8017952:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017954:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017956:	b152      	cbz	r2, 801796e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017958:	8812      	ldrh	r2, [r2, #0]
 801795a:	b10a      	cbz	r2, 8017960 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801795c:	459a      	cmp	sl, r3
 801795e:	dc2e      	bgt.n	80179be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017960:	2200      	movs	r2, #0
 8017962:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017966:	4638      	mov	r0, r7
 8017968:	b023      	add	sp, #140	@ 0x8c
 801796a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801796e:	9a08      	ldr	r2, [sp, #32]
 8017970:	2a00      	cmp	r2, #0
 8017972:	d0f5      	beq.n	8017960 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017974:	7812      	ldrb	r2, [r2, #0]
 8017976:	e7f0      	b.n	801795a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017978:	2d00      	cmp	r5, #0
 801797a:	d0ea      	beq.n	8017952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801797c:	782a      	ldrb	r2, [r5, #0]
 801797e:	b142      	cbz	r2, 8017992 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017980:	2a25      	cmp	r2, #37	@ 0x25
 8017982:	d001      	beq.n	8017988 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017984:	459a      	cmp	sl, r3
 8017986:	dc08      	bgt.n	801799a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017988:	f1bb 0f00 	cmp.w	fp, #0
 801798c:	d121      	bne.n	80179d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801798e:	2d00      	cmp	r5, #0
 8017990:	d0df      	beq.n	8017952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017992:	782a      	ldrb	r2, [r5, #0]
 8017994:	f04f 0b00 	mov.w	fp, #0
 8017998:	e01d      	b.n	80179d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801799a:	f1bb 0f00 	cmp.w	fp, #0
 801799e:	d078      	beq.n	8017a92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80179a0:	f8bb 2000 	ldrh.w	r2, [fp]
 80179a4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80179a8:	f1bb 0f00 	cmp.w	fp, #0
 80179ac:	d002      	beq.n	80179b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80179ae:	f10b 0202 	add.w	r2, fp, #2
 80179b2:	9209      	str	r2, [sp, #36]	@ 0x24
 80179b4:	b10d      	cbz	r5, 80179ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80179b6:	3501      	adds	r5, #1
 80179b8:	9508      	str	r5, [sp, #32]
 80179ba:	3301      	adds	r3, #1
 80179bc:	930d      	str	r3, [sp, #52]	@ 0x34
 80179be:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80179c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80179c4:	f1bb 0f00 	cmp.w	fp, #0
 80179c8:	d0d6      	beq.n	8017978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80179ca:	f8bb 2000 	ldrh.w	r2, [fp]
 80179ce:	2a00      	cmp	r2, #0
 80179d0:	d1d6      	bne.n	8017980 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80179d2:	f8bb 2000 	ldrh.w	r2, [fp]
 80179d6:	2a00      	cmp	r2, #0
 80179d8:	d0bb      	beq.n	8017952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80179da:	459a      	cmp	sl, r3
 80179dc:	ddb9      	ble.n	8017952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80179de:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 80179e2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 80179e6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 80179ea:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 80179ee:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 80179f2:	960e      	str	r6, [sp, #56]	@ 0x38
 80179f4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 80179f8:	960f      	str	r6, [sp, #60]	@ 0x3c
 80179fa:	f1bb 0f00 	cmp.w	fp, #0
 80179fe:	d002      	beq.n	8017a06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017a00:	f10b 0302 	add.w	r3, fp, #2
 8017a04:	9309      	str	r3, [sp, #36]	@ 0x24
 8017a06:	b10d      	cbz	r5, 8017a0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017a08:	1c6b      	adds	r3, r5, #1
 8017a0a:	9308      	str	r3, [sp, #32]
 8017a0c:	ab0f      	add	r3, sp, #60	@ 0x3c
 8017a0e:	9305      	str	r3, [sp, #20]
 8017a10:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8017a14:	9304      	str	r3, [sp, #16]
 8017a16:	ab0e      	add	r3, sp, #56	@ 0x38
 8017a18:	9303      	str	r3, [sp, #12]
 8017a1a:	ab0c      	add	r3, sp, #48	@ 0x30
 8017a1c:	9302      	str	r3, [sp, #8]
 8017a1e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8017a22:	9301      	str	r3, [sp, #4]
 8017a24:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8017a28:	9300      	str	r3, [sp, #0]
 8017a2a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8017a2e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8017a32:	a908      	add	r1, sp, #32
 8017a34:	a809      	add	r0, sp, #36	@ 0x24
 8017a36:	f7ff fea8 	bl	801778a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017a3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017a3c:	2b00      	cmp	r3, #0
 8017a3e:	bfbe      	ittt	lt
 8017a40:	6823      	ldrlt	r3, [r4, #0]
 8017a42:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017a46:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8017a48:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017a4a:	bfb8      	it	lt
 8017a4c:	3404      	addlt	r4, #4
 8017a4e:	2b00      	cmp	r3, #0
 8017a50:	bfb8      	it	lt
 8017a52:	6823      	ldrlt	r3, [r4, #0]
 8017a54:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017a58:	bfbe      	ittt	lt
 8017a5a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017a5e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8017a60:	3404      	addlt	r4, #4
 8017a62:	b1d9      	cbz	r1, 8017a9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017a64:	880b      	ldrh	r3, [r1, #0]
 8017a66:	2b69      	cmp	r3, #105	@ 0x69
 8017a68:	d01f      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017a6a:	d82f      	bhi.n	8017acc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017a6c:	2b58      	cmp	r3, #88	@ 0x58
 8017a6e:	d01c      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017a70:	d818      	bhi.n	8017aa4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017a72:	2b25      	cmp	r3, #37	@ 0x25
 8017a74:	d034      	beq.n	8017ae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017a76:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017a7a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017a7c:	f1bb 0f00 	cmp.w	fp, #0
 8017a80:	f000 80b8 	beq.w	8017bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017a84:	f8bb 5000 	ldrh.w	r5, [fp]
 8017a88:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017a8c:	3301      	adds	r3, #1
 8017a8e:	930d      	str	r3, [sp, #52]	@ 0x34
 8017a90:	e029      	b.n	8017ae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017a92:	b10d      	cbz	r5, 8017a98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017a94:	782a      	ldrb	r2, [r5, #0]
 8017a96:	e785      	b.n	80179a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017a98:	462a      	mov	r2, r5
 8017a9a:	e783      	b.n	80179a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017a9c:	2a00      	cmp	r2, #0
 8017a9e:	d0ea      	beq.n	8017a76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017aa0:	7813      	ldrb	r3, [r2, #0]
 8017aa2:	e7e0      	b.n	8017a66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017aa4:	3b63      	subs	r3, #99	@ 0x63
 8017aa6:	2b01      	cmp	r3, #1
 8017aa8:	d8e5      	bhi.n	8017a76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017aaa:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8017aae:	b329      	cbz	r1, 8017afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017ab0:	880b      	ldrh	r3, [r1, #0]
 8017ab2:	2b69      	cmp	r3, #105	@ 0x69
 8017ab4:	d063      	beq.n	8017b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017ab6:	d825      	bhi.n	8017b04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017ab8:	2b63      	cmp	r3, #99	@ 0x63
 8017aba:	d038      	beq.n	8017b2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017abc:	2b64      	cmp	r3, #100	@ 0x64
 8017abe:	d05e      	beq.n	8017b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017ac0:	2b58      	cmp	r3, #88	@ 0x58
 8017ac2:	d07b      	beq.n	8017bbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017ac4:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8017ac8:	4625      	mov	r5, r4
 8017aca:	e036      	b.n	8017b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017acc:	2b73      	cmp	r3, #115	@ 0x73
 8017ace:	d0ec      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017ad0:	d802      	bhi.n	8017ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017ad2:	2b6f      	cmp	r3, #111	@ 0x6f
 8017ad4:	d1cf      	bne.n	8017a76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017ad6:	e7e8      	b.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017ad8:	2b75      	cmp	r3, #117	@ 0x75
 8017ada:	d0e6      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017adc:	2b78      	cmp	r3, #120	@ 0x78
 8017ade:	e7f9      	b.n	8017ad4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017ae0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017ae2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017ae6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017ae8:	b10b      	cbz	r3, 8017aee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017aea:	3302      	adds	r3, #2
 8017aec:	9309      	str	r3, [sp, #36]	@ 0x24
 8017aee:	9b08      	ldr	r3, [sp, #32]
 8017af0:	2b00      	cmp	r3, #0
 8017af2:	f43f af2e 	beq.w	8017952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017af6:	3301      	adds	r3, #1
 8017af8:	9308      	str	r3, [sp, #32]
 8017afa:	e72a      	b.n	8017952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017afc:	2a00      	cmp	r2, #0
 8017afe:	d0e1      	beq.n	8017ac4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017b00:	7813      	ldrb	r3, [r2, #0]
 8017b02:	e7d6      	b.n	8017ab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017b04:	2b73      	cmp	r3, #115	@ 0x73
 8017b06:	d036      	beq.n	8017b76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017b08:	d807      	bhi.n	8017b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017b0a:	2b6f      	cmp	r3, #111	@ 0x6f
 8017b0c:	d1da      	bne.n	8017ac4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017b0e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017b10:	1d25      	adds	r5, r4, #4
 8017b12:	eba8 0202 	sub.w	r2, r8, r2
 8017b16:	2308      	movs	r3, #8
 8017b18:	e04a      	b.n	8017bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017b1a:	2b75      	cmp	r3, #117	@ 0x75
 8017b1c:	d043      	beq.n	8017ba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017b1e:	2b78      	cmp	r3, #120	@ 0x78
 8017b20:	d1d0      	bne.n	8017ac4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017b22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017b24:	1d25      	adds	r5, r4, #4
 8017b26:	eba8 0202 	sub.w	r2, r8, r2
 8017b2a:	2310      	movs	r3, #16
 8017b2c:	e040      	b.n	8017bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017b2e:	6823      	ldr	r3, [r4, #0]
 8017b30:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8017b34:	1d25      	adds	r5, r4, #4
 8017b36:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8017b3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017b3c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8017b40:	2b00      	cmp	r3, #0
 8017b42:	d052      	beq.n	8017bea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017b44:	881a      	ldrh	r2, [r3, #0]
 8017b46:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8017b4a:	a80d      	add	r0, sp, #52	@ 0x34
 8017b4c:	9005      	str	r0, [sp, #20]
 8017b4e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8017b52:	9004      	str	r0, [sp, #16]
 8017b54:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8017b56:	9003      	str	r0, [sp, #12]
 8017b58:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8017b5c:	9002      	str	r0, [sp, #8]
 8017b5e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017b60:	9001      	str	r0, [sp, #4]
 8017b62:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8017b66:	9000      	str	r0, [sp, #0]
 8017b68:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017b6c:	a810      	add	r0, sp, #64	@ 0x40
 8017b6e:	f7ff fd49 	bl	8017604 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017b72:	462c      	mov	r4, r5
 8017b74:	e7b7      	b.n	8017ae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017b76:	6823      	ldr	r3, [r4, #0]
 8017b78:	1d25      	adds	r5, r4, #4
 8017b7a:	9310      	str	r3, [sp, #64]	@ 0x40
 8017b7c:	e7dd      	b.n	8017b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017b7e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017b80:	6820      	ldr	r0, [r4, #0]
 8017b82:	eba8 0202 	sub.w	r2, r8, r2
 8017b86:	230a      	movs	r3, #10
 8017b88:	b292      	uxth	r2, r2
 8017b8a:	4649      	mov	r1, r9
 8017b8c:	f7ff fcf0 	bl	8017570 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017b90:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8017b94:	2b2d      	cmp	r3, #45	@ 0x2d
 8017b96:	f104 0504 	add.w	r5, r4, #4
 8017b9a:	d1ce      	bne.n	8017b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017b9c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017ba0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017ba2:	3302      	adds	r3, #2
 8017ba4:	e7e9      	b.n	8017b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017ba6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017ba8:	1d25      	adds	r5, r4, #4
 8017baa:	eba8 0202 	sub.w	r2, r8, r2
 8017bae:	230a      	movs	r3, #10
 8017bb0:	b292      	uxth	r2, r2
 8017bb2:	4649      	mov	r1, r9
 8017bb4:	6820      	ldr	r0, [r4, #0]
 8017bb6:	f7ff fd07 	bl	80175c8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017bba:	e7be      	b.n	8017b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017bbc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017bbe:	6820      	ldr	r0, [r4, #0]
 8017bc0:	eba8 0202 	sub.w	r2, r8, r2
 8017bc4:	b292      	uxth	r2, r2
 8017bc6:	2310      	movs	r3, #16
 8017bc8:	4649      	mov	r1, r9
 8017bca:	f7ff fcfd 	bl	80175c8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017bce:	1d25      	adds	r5, r4, #4
 8017bd0:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8017bd4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017bd8:	2b00      	cmp	r3, #0
 8017bda:	d0ae      	beq.n	8017b3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017bdc:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8017be0:	2919      	cmp	r1, #25
 8017be2:	d8f7      	bhi.n	8017bd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017be4:	3b20      	subs	r3, #32
 8017be6:	8013      	strh	r3, [r2, #0]
 8017be8:	e7f4      	b.n	8017bd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017bea:	9a08      	ldr	r2, [sp, #32]
 8017bec:	2a00      	cmp	r2, #0
 8017bee:	d0aa      	beq.n	8017b46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017bf0:	7812      	ldrb	r2, [r2, #0]
 8017bf2:	e7a8      	b.n	8017b46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017bf4:	2d00      	cmp	r5, #0
 8017bf6:	f43f af47 	beq.w	8017a88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017bfa:	782d      	ldrb	r5, [r5, #0]
 8017bfc:	e744      	b.n	8017a88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017bfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017bfe:	b507      	push	{r0, r1, r2, lr}
 8017c00:	9300      	str	r3, [sp, #0]
 8017c02:	4613      	mov	r3, r2
 8017c04:	2200      	movs	r2, #0
 8017c06:	f7ff fe90 	bl	801792a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017c0a:	b003      	add	sp, #12
 8017c0c:	f85d fb04 	ldr.w	pc, [sp], #4

08017c10 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017c10:	b40c      	push	{r2, r3}
 8017c12:	b507      	push	{r0, r1, r2, lr}
 8017c14:	ab04      	add	r3, sp, #16
 8017c16:	f853 2b04 	ldr.w	r2, [r3], #4
 8017c1a:	9301      	str	r3, [sp, #4]
 8017c1c:	f7ff ffef 	bl	8017bfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017c20:	b003      	add	sp, #12
 8017c22:	f85d eb04 	ldr.w	lr, [sp], #4
 8017c26:	b002      	add	sp, #8
 8017c28:	4770      	bx	lr
	...

08017c2c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017c2c:	4b01      	ldr	r3, [pc, #4]	@ (8017c34 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017c2e:	6018      	str	r0, [r3, #0]
 8017c30:	4770      	bx	lr
 8017c32:	bf00      	nop
 8017c34:	20013fc8 	.word	0x20013fc8

08017c38 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017c38:	4b06      	ldr	r3, [pc, #24]	@ (8017c54 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017c3a:	881a      	ldrh	r2, [r3, #0]
 8017c3c:	4282      	cmp	r2, r0
 8017c3e:	d807      	bhi.n	8017c50 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017c40:	4b05      	ldr	r3, [pc, #20]	@ (8017c58 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8017c42:	881b      	ldrh	r3, [r3, #0]
 8017c44:	4413      	add	r3, r2
 8017c46:	4298      	cmp	r0, r3
 8017c48:	bfac      	ite	ge
 8017c4a:	2000      	movge	r0, #0
 8017c4c:	2001      	movlt	r0, #1
 8017c4e:	4770      	bx	lr
 8017c50:	2000      	movs	r0, #0
 8017c52:	4770      	bx	lr
 8017c54:	20013fe8 	.word	0x20013fe8
 8017c58:	20013fec 	.word	0x20013fec

08017c5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017c5c:	b508      	push	{r3, lr}
 8017c5e:	4601      	mov	r1, r0
 8017c60:	f7ff ffea 	bl	8017c38 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8017c64:	b118      	cbz	r0, 8017c6e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8017c66:	4b02      	ldr	r3, [pc, #8]	@ (8017c70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017c68:	681b      	ldr	r3, [r3, #0]
 8017c6a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017c6e:	bd08      	pop	{r3, pc}
 8017c70:	20013fcc 	.word	0x20013fcc

08017c74 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8017c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017c76:	4c24      	ldr	r4, [pc, #144]	@ (8017d08 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017c78:	6823      	ldr	r3, [r4, #0]
 8017c7a:	2b00      	cmp	r3, #0
 8017c7c:	d042      	beq.n	8017d04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017c7e:	4a23      	ldr	r2, [pc, #140]	@ (8017d0c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017c80:	4d23      	ldr	r5, [pc, #140]	@ (8017d10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8017c82:	8811      	ldrh	r1, [r2, #0]
 8017c84:	f8b5 c000 	ldrh.w	ip, [r5]
 8017c88:	4822      	ldr	r0, [pc, #136]	@ (8017d14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017c8a:	4461      	add	r1, ip
 8017c8c:	1c4a      	adds	r2, r1, #1
 8017c8e:	f022 0201 	bic.w	r2, r2, #1
 8017c92:	008f      	lsls	r7, r1, #2
 8017c94:	0412      	lsls	r2, r2, #16
 8017c96:	19de      	adds	r6, r3, r7
 8017c98:	0c12      	lsrs	r2, r2, #16
 8017c9a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017c9e:	6006      	str	r6, [r0, #0]
 8017ca0:	4e1d      	ldr	r6, [pc, #116]	@ (8017d18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8017ca2:	19da      	adds	r2, r3, r7
 8017ca4:	6032      	str	r2, [r6, #0]
 8017ca6:	220e      	movs	r2, #14
 8017ca8:	fb02 f20c 	mul.w	r2, r2, ip
 8017cac:	3203      	adds	r2, #3
 8017cae:	f022 0203 	bic.w	r2, r2, #3
 8017cb2:	443a      	add	r2, r7
 8017cb4:	4f19      	ldr	r7, [pc, #100]	@ (8017d1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8017cb6:	4413      	add	r3, r2
 8017cb8:	603b      	str	r3, [r7, #0]
 8017cba:	4f19      	ldr	r7, [pc, #100]	@ (8017d20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017cbc:	2300      	movs	r3, #0
 8017cbe:	803b      	strh	r3, [r7, #0]
 8017cc0:	4f18      	ldr	r7, [pc, #96]	@ (8017d24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8017cc2:	683f      	ldr	r7, [r7, #0]
 8017cc4:	1aba      	subs	r2, r7, r2
 8017cc6:	4f18      	ldr	r7, [pc, #96]	@ (8017d28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017cc8:	603a      	str	r2, [r7, #0]
 8017cca:	4a18      	ldr	r2, [pc, #96]	@ (8017d2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017ccc:	469c      	mov	ip, r3
 8017cce:	8013      	strh	r3, [r2, #0]
 8017cd0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8017cd4:	428b      	cmp	r3, r1
 8017cd6:	d10d      	bne.n	8017cf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017cd8:	882d      	ldrh	r5, [r5, #0]
 8017cda:	6830      	ldr	r0, [r6, #0]
 8017cdc:	2300      	movs	r3, #0
 8017cde:	240e      	movs	r4, #14
 8017ce0:	429d      	cmp	r5, r3
 8017ce2:	d90f      	bls.n	8017d04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017ce4:	fb04 0203 	mla	r2, r4, r3, r0
 8017ce8:	3301      	adds	r3, #1
 8017cea:	7b11      	ldrb	r1, [r2, #12]
 8017cec:	f36f 1145 	bfc	r1, #5, #1
 8017cf0:	7311      	strb	r1, [r2, #12]
 8017cf2:	e7f5      	b.n	8017ce0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8017cf4:	6822      	ldr	r2, [r4, #0]
 8017cf6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017cfa:	6802      	ldr	r2, [r0, #0]
 8017cfc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017d00:	3301      	adds	r3, #1
 8017d02:	e7e7      	b.n	8017cd4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8017d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017d06:	bf00      	nop
 8017d08:	20013fcc 	.word	0x20013fcc
 8017d0c:	20013fe8 	.word	0x20013fe8
 8017d10:	20013fec 	.word	0x20013fec
 8017d14:	20013fe0 	.word	0x20013fe0
 8017d18:	20013fd0 	.word	0x20013fd0
 8017d1c:	20013fd8 	.word	0x20013fd8
 8017d20:	20013fea 	.word	0x20013fea
 8017d24:	20013fd4 	.word	0x20013fd4
 8017d28:	20013fe4 	.word	0x20013fe4
 8017d2c:	20013fdc 	.word	0x20013fdc

08017d30 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017d30:	4b06      	ldr	r3, [pc, #24]	@ (8017d4c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8017d32:	681b      	ldr	r3, [r3, #0]
 8017d34:	b943      	cbnz	r3, 8017d48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017d36:	b139      	cbz	r1, 8017d48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017d38:	4b05      	ldr	r3, [pc, #20]	@ (8017d50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017d3a:	801a      	strh	r2, [r3, #0]
 8017d3c:	4b05      	ldr	r3, [pc, #20]	@ (8017d54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017d3e:	6019      	str	r1, [r3, #0]
 8017d40:	4b05      	ldr	r3, [pc, #20]	@ (8017d58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8017d42:	6018      	str	r0, [r3, #0]
 8017d44:	f7ff bf96 	b.w	8017c74 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017d48:	4770      	bx	lr
 8017d4a:	bf00      	nop
 8017d4c:	20013fd8 	.word	0x20013fd8
 8017d50:	20013fec 	.word	0x20013fec
 8017d54:	20013fd4 	.word	0x20013fd4
 8017d58:	20013fcc 	.word	0x20013fcc

08017d5c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017d5c:	b470      	push	{r4, r5, r6}
 8017d5e:	4c07      	ldr	r4, [pc, #28]	@ (8017d7c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017d60:	6826      	ldr	r6, [r4, #0]
 8017d62:	4605      	mov	r5, r0
 8017d64:	4610      	mov	r0, r2
 8017d66:	9a03      	ldr	r2, [sp, #12]
 8017d68:	b936      	cbnz	r6, 8017d78 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017d6a:	6025      	str	r5, [r4, #0]
 8017d6c:	4c04      	ldr	r4, [pc, #16]	@ (8017d80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017d6e:	8021      	strh	r1, [r4, #0]
 8017d70:	bc70      	pop	{r4, r5, r6}
 8017d72:	4619      	mov	r1, r3
 8017d74:	f7ff bfdc 	b.w	8017d30 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017d78:	bc70      	pop	{r4, r5, r6}
 8017d7a:	4770      	bx	lr
 8017d7c:	20013ff0 	.word	0x20013ff0
 8017d80:	20013fe8 	.word	0x20013fe8

08017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8017d84:	4a12      	ldr	r2, [pc, #72]	@ (8017dd0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8017d86:	8803      	ldrh	r3, [r0, #0]
 8017d88:	8812      	ldrh	r2, [r2, #0]
 8017d8a:	4293      	cmp	r3, r2
 8017d8c:	d207      	bcs.n	8017d9e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017d8e:	4a11      	ldr	r2, [pc, #68]	@ (8017dd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017d90:	6812      	ldr	r2, [r2, #0]
 8017d92:	2114      	movs	r1, #20
 8017d94:	fb01 2303 	mla	r3, r1, r3, r2
 8017d98:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017d9c:	4770      	bx	lr
 8017d9e:	490e      	ldr	r1, [pc, #56]	@ (8017dd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017da0:	8809      	ldrh	r1, [r1, #0]
 8017da2:	4411      	add	r1, r2
 8017da4:	428b      	cmp	r3, r1
 8017da6:	da04      	bge.n	8017db2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017da8:	1a9b      	subs	r3, r3, r2
 8017daa:	4a0c      	ldr	r2, [pc, #48]	@ (8017ddc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017dac:	210e      	movs	r1, #14
 8017dae:	6812      	ldr	r2, [r2, #0]
 8017db0:	e7f0      	b.n	8017d94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8017db2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017db6:	4293      	cmp	r3, r2
 8017db8:	d108      	bne.n	8017dcc <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017dba:	4b09      	ldr	r3, [pc, #36]	@ (8017de0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017dbc:	781b      	ldrb	r3, [r3, #0]
 8017dbe:	b91b      	cbnz	r3, 8017dc8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017dc0:	4b08      	ldr	r3, [pc, #32]	@ (8017de4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8017dc2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017dc6:	4770      	bx	lr
 8017dc8:	4b07      	ldr	r3, [pc, #28]	@ (8017de8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017dca:	e7fa      	b.n	8017dc2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017dcc:	2000      	movs	r0, #0
 8017dce:	4770      	bx	lr
 8017dd0:	20013fe8 	.word	0x20013fe8
 8017dd4:	20013ff0 	.word	0x20013ff0
 8017dd8:	20013fec 	.word	0x20013fec
 8017ddc:	20013fd0 	.word	0x20013fd0
 8017de0:	20013f58 	.word	0x20013f58
 8017de4:	20013f5a 	.word	0x20013f5a
 8017de8:	20013f5c 	.word	0x20013f5c

08017dec <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017dec:	4a12      	ldr	r2, [pc, #72]	@ (8017e38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8017dee:	8803      	ldrh	r3, [r0, #0]
 8017df0:	8812      	ldrh	r2, [r2, #0]
 8017df2:	4293      	cmp	r3, r2
 8017df4:	d207      	bcs.n	8017e06 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8017df6:	4a11      	ldr	r2, [pc, #68]	@ (8017e3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017df8:	6812      	ldr	r2, [r2, #0]
 8017dfa:	2114      	movs	r1, #20
 8017dfc:	fb01 2303 	mla	r3, r1, r3, r2
 8017e00:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8017e04:	4770      	bx	lr
 8017e06:	490e      	ldr	r1, [pc, #56]	@ (8017e40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017e08:	8809      	ldrh	r1, [r1, #0]
 8017e0a:	4411      	add	r1, r2
 8017e0c:	428b      	cmp	r3, r1
 8017e0e:	da04      	bge.n	8017e1a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017e10:	1a9b      	subs	r3, r3, r2
 8017e12:	4a0c      	ldr	r2, [pc, #48]	@ (8017e44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8017e14:	210e      	movs	r1, #14
 8017e16:	6812      	ldr	r2, [r2, #0]
 8017e18:	e7f0      	b.n	8017dfc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017e1a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017e1e:	4293      	cmp	r3, r2
 8017e20:	d108      	bne.n	8017e34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8017e22:	4b09      	ldr	r3, [pc, #36]	@ (8017e48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8017e24:	781b      	ldrb	r3, [r3, #0]
 8017e26:	b91b      	cbnz	r3, 8017e30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017e28:	4b08      	ldr	r3, [pc, #32]	@ (8017e4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017e2a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017e2e:	4770      	bx	lr
 8017e30:	4b07      	ldr	r3, [pc, #28]	@ (8017e50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8017e32:	e7fa      	b.n	8017e2a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8017e34:	2000      	movs	r0, #0
 8017e36:	4770      	bx	lr
 8017e38:	20013fe8 	.word	0x20013fe8
 8017e3c:	20013ff0 	.word	0x20013ff0
 8017e40:	20013fec 	.word	0x20013fec
 8017e44:	20013fd0 	.word	0x20013fd0
 8017e48:	20013f58 	.word	0x20013f58
 8017e4c:	20013f5c 	.word	0x20013f5c
 8017e50:	20013f5a 	.word	0x20013f5a

08017e54 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8017e54:	b530      	push	{r4, r5, lr}
 8017e56:	4a22      	ldr	r2, [pc, #136]	@ (8017ee0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8017e58:	880b      	ldrh	r3, [r1, #0]
 8017e5a:	8812      	ldrh	r2, [r2, #0]
 8017e5c:	4293      	cmp	r3, r2
 8017e5e:	d213      	bcs.n	8017e88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017e60:	4a20      	ldr	r2, [pc, #128]	@ (8017ee4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8017e62:	6812      	ldr	r2, [r2, #0]
 8017e64:	2114      	movs	r1, #20
 8017e66:	fb01 2303 	mla	r3, r1, r3, r2
 8017e6a:	8a1a      	ldrh	r2, [r3, #16]
 8017e6c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017e70:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8017e74:	8a5b      	ldrh	r3, [r3, #18]
 8017e76:	8004      	strh	r4, [r0, #0]
 8017e78:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017e7c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017e80:	8041      	strh	r1, [r0, #2]
 8017e82:	8082      	strh	r2, [r0, #4]
 8017e84:	80c3      	strh	r3, [r0, #6]
 8017e86:	e024      	b.n	8017ed2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8017e88:	4917      	ldr	r1, [pc, #92]	@ (8017ee8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8017e8a:	8809      	ldrh	r1, [r1, #0]
 8017e8c:	4411      	add	r1, r2
 8017e8e:	428b      	cmp	r3, r1
 8017e90:	da10      	bge.n	8017eb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8017e92:	1a9b      	subs	r3, r3, r2
 8017e94:	220e      	movs	r2, #14
 8017e96:	4353      	muls	r3, r2
 8017e98:	4a14      	ldr	r2, [pc, #80]	@ (8017eec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8017e9a:	6811      	ldr	r1, [r2, #0]
 8017e9c:	18ca      	adds	r2, r1, r3
 8017e9e:	5ecd      	ldrsh	r5, [r1, r3]
 8017ea0:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8017ea4:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8017ea8:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8017eac:	8005      	strh	r5, [r0, #0]
 8017eae:	8044      	strh	r4, [r0, #2]
 8017eb0:	8081      	strh	r1, [r0, #4]
 8017eb2:	e7e7      	b.n	8017e84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8017eb4:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017eb8:	4293      	cmp	r3, r2
 8017eba:	d10b      	bne.n	8017ed4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8017ebc:	4b0c      	ldr	r3, [pc, #48]	@ (8017ef0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8017ebe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8017ec2:	4b0c      	ldr	r3, [pc, #48]	@ (8017ef4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8017ec4:	8081      	strh	r1, [r0, #4]
 8017ec6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017eca:	80c2      	strh	r2, [r0, #6]
 8017ecc:	2300      	movs	r3, #0
 8017ece:	8003      	strh	r3, [r0, #0]
 8017ed0:	8043      	strh	r3, [r0, #2]
 8017ed2:	bd30      	pop	{r4, r5, pc}
 8017ed4:	2300      	movs	r3, #0
 8017ed6:	8003      	strh	r3, [r0, #0]
 8017ed8:	8043      	strh	r3, [r0, #2]
 8017eda:	8083      	strh	r3, [r0, #4]
 8017edc:	e7d2      	b.n	8017e84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8017ede:	bf00      	nop
 8017ee0:	20013fe8 	.word	0x20013fe8
 8017ee4:	20013ff0 	.word	0x20013ff0
 8017ee8:	20013fec 	.word	0x20013fec
 8017eec:	20013fd0 	.word	0x20013fd0
 8017ef0:	20013f54 	.word	0x20013f54
 8017ef4:	20013f56 	.word	0x20013f56

08017ef8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8017ef8:	4a17      	ldr	r2, [pc, #92]	@ (8017f58 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8017efa:	8803      	ldrh	r3, [r0, #0]
 8017efc:	8812      	ldrh	r2, [r2, #0]
 8017efe:	4293      	cmp	r3, r2
 8017f00:	d213      	bcs.n	8017f2a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8017f02:	4a16      	ldr	r2, [pc, #88]	@ (8017f5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8017f04:	6812      	ldr	r2, [r2, #0]
 8017f06:	2114      	movs	r1, #20
 8017f08:	fb01 2303 	mla	r3, r1, r3, r2
 8017f0c:	8a1a      	ldrh	r2, [r3, #16]
 8017f0e:	8919      	ldrh	r1, [r3, #8]
 8017f10:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017f14:	428a      	cmp	r2, r1
 8017f16:	db1d      	blt.n	8017f54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017f18:	8a58      	ldrh	r0, [r3, #18]
 8017f1a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8017f1e:	895b      	ldrh	r3, [r3, #10]
 8017f20:	4298      	cmp	r0, r3
 8017f22:	bfac      	ite	ge
 8017f24:	2000      	movge	r0, #0
 8017f26:	2001      	movlt	r0, #1
 8017f28:	4770      	bx	lr
 8017f2a:	490d      	ldr	r1, [pc, #52]	@ (8017f60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8017f2c:	8809      	ldrh	r1, [r1, #0]
 8017f2e:	4411      	add	r1, r2
 8017f30:	428b      	cmp	r3, r1
 8017f32:	da0d      	bge.n	8017f50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8017f34:	1a9b      	subs	r3, r3, r2
 8017f36:	4a0b      	ldr	r2, [pc, #44]	@ (8017f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8017f38:	6812      	ldr	r2, [r2, #0]
 8017f3a:	210e      	movs	r1, #14
 8017f3c:	fb01 2303 	mla	r3, r1, r3, r2
 8017f40:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8017f44:	891a      	ldrh	r2, [r3, #8]
 8017f46:	4291      	cmp	r1, r2
 8017f48:	db04      	blt.n	8017f54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017f4a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8017f4e:	e7e6      	b.n	8017f1e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8017f50:	2000      	movs	r0, #0
 8017f52:	4770      	bx	lr
 8017f54:	2001      	movs	r0, #1
 8017f56:	4770      	bx	lr
 8017f58:	20013fe8 	.word	0x20013fe8
 8017f5c:	20013ff0 	.word	0x20013ff0
 8017f60:	20013fec 	.word	0x20013fec
 8017f64:	20013fd0 	.word	0x20013fd0

08017f68 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017f68:	4a12      	ldr	r2, [pc, #72]	@ (8017fb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017f6a:	8803      	ldrh	r3, [r0, #0]
 8017f6c:	8811      	ldrh	r1, [r2, #0]
 8017f6e:	428b      	cmp	r3, r1
 8017f70:	d20b      	bcs.n	8017f8a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8017f72:	4a11      	ldr	r2, [pc, #68]	@ (8017fb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017f74:	6812      	ldr	r2, [r2, #0]
 8017f76:	b112      	cbz	r2, 8017f7e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8017f78:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017f7c:	b9c0      	cbnz	r0, 8017fb0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8017f7e:	4a0f      	ldr	r2, [pc, #60]	@ (8017fbc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8017f80:	6811      	ldr	r1, [r2, #0]
 8017f82:	2214      	movs	r2, #20
 8017f84:	4353      	muls	r3, r2
 8017f86:	58c8      	ldr	r0, [r1, r3]
 8017f88:	4770      	bx	lr
 8017f8a:	4a0d      	ldr	r2, [pc, #52]	@ (8017fc0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017f8c:	8812      	ldrh	r2, [r2, #0]
 8017f8e:	440a      	add	r2, r1
 8017f90:	4293      	cmp	r3, r2
 8017f92:	da04      	bge.n	8017f9e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8017f94:	4a08      	ldr	r2, [pc, #32]	@ (8017fb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017f96:	6812      	ldr	r2, [r2, #0]
 8017f98:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017f9c:	4770      	bx	lr
 8017f9e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017fa2:	4293      	cmp	r3, r2
 8017fa4:	d103      	bne.n	8017fae <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8017fa6:	4b07      	ldr	r3, [pc, #28]	@ (8017fc4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017fa8:	681b      	ldr	r3, [r3, #0]
 8017faa:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8017fac:	4770      	bx	lr
 8017fae:	2000      	movs	r0, #0
 8017fb0:	4770      	bx	lr
 8017fb2:	bf00      	nop
 8017fb4:	20013fe8 	.word	0x20013fe8
 8017fb8:	20013fcc 	.word	0x20013fcc
 8017fbc:	20013ff0 	.word	0x20013ff0
 8017fc0:	20013fec 	.word	0x20013fec
 8017fc4:	20013f60 	.word	0x20013f60

08017fc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017fc8:	4b24      	ldr	r3, [pc, #144]	@ (801805c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017fca:	8802      	ldrh	r2, [r0, #0]
 8017fcc:	8818      	ldrh	r0, [r3, #0]
 8017fce:	4282      	cmp	r2, r0
 8017fd0:	d221      	bcs.n	8018016 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8017fd2:	4b23      	ldr	r3, [pc, #140]	@ (8018060 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8017fd4:	6819      	ldr	r1, [r3, #0]
 8017fd6:	2314      	movs	r3, #20
 8017fd8:	fb03 1302 	mla	r3, r3, r2, r1
 8017fdc:	6858      	ldr	r0, [r3, #4]
 8017fde:	2800      	cmp	r0, #0
 8017fe0:	d03a      	beq.n	8018058 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017fe2:	4920      	ldr	r1, [pc, #128]	@ (8018064 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017fe4:	6809      	ldr	r1, [r1, #0]
 8017fe6:	2900      	cmp	r1, #0
 8017fe8:	d036      	beq.n	8018058 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017fea:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8017fee:	2900      	cmp	r1, #0
 8017ff0:	d032      	beq.n	8018058 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017ff2:	891a      	ldrh	r2, [r3, #8]
 8017ff4:	8958      	ldrh	r0, [r3, #10]
 8017ff6:	4350      	muls	r0, r2
 8017ff8:	7c5a      	ldrb	r2, [r3, #17]
 8017ffa:	7cdb      	ldrb	r3, [r3, #19]
 8017ffc:	0952      	lsrs	r2, r2, #5
 8017ffe:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018002:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018006:	2b0b      	cmp	r3, #11
 8018008:	bf18      	it	ne
 801800a:	0040      	lslne	r0, r0, #1
 801800c:	3003      	adds	r0, #3
 801800e:	f020 0003 	bic.w	r0, r0, #3
 8018012:	4408      	add	r0, r1
 8018014:	4770      	bx	lr
 8018016:	4b14      	ldr	r3, [pc, #80]	@ (8018068 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018018:	881b      	ldrh	r3, [r3, #0]
 801801a:	4403      	add	r3, r0
 801801c:	429a      	cmp	r2, r3
 801801e:	da1a      	bge.n	8018056 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018020:	4b12      	ldr	r3, [pc, #72]	@ (801806c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018022:	681b      	ldr	r3, [r3, #0]
 8018024:	1a10      	subs	r0, r2, r0
 8018026:	210e      	movs	r1, #14
 8018028:	fb01 3000 	mla	r0, r1, r0, r3
 801802c:	7b03      	ldrb	r3, [r0, #12]
 801802e:	f003 031f 	and.w	r3, r3, #31
 8018032:	2b0b      	cmp	r3, #11
 8018034:	d10b      	bne.n	801804e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018036:	8903      	ldrh	r3, [r0, #8]
 8018038:	8940      	ldrh	r0, [r0, #10]
 801803a:	4358      	muls	r0, r3
 801803c:	4b09      	ldr	r3, [pc, #36]	@ (8018064 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801803e:	6819      	ldr	r1, [r3, #0]
 8018040:	3003      	adds	r0, #3
 8018042:	f020 0303 	bic.w	r3, r0, #3
 8018046:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801804a:	4418      	add	r0, r3
 801804c:	4770      	bx	lr
 801804e:	2b0d      	cmp	r3, #13
 8018050:	d101      	bne.n	8018056 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018052:	300d      	adds	r0, #13
 8018054:	4770      	bx	lr
 8018056:	2000      	movs	r0, #0
 8018058:	4770      	bx	lr
 801805a:	bf00      	nop
 801805c:	20013fe8 	.word	0x20013fe8
 8018060:	20013ff0 	.word	0x20013ff0
 8018064:	20013fcc 	.word	0x20013fcc
 8018068:	20013fec 	.word	0x20013fec
 801806c:	20013fd0 	.word	0x20013fd0

08018070 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018070:	b510      	push	{r4, lr}
 8018072:	4b1f      	ldr	r3, [pc, #124]	@ (80180f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8018074:	8802      	ldrh	r2, [r0, #0]
 8018076:	881b      	ldrh	r3, [r3, #0]
 8018078:	429a      	cmp	r2, r3
 801807a:	d21a      	bcs.n	80180b2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801807c:	4b1d      	ldr	r3, [pc, #116]	@ (80180f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801807e:	681b      	ldr	r3, [r3, #0]
 8018080:	2114      	movs	r1, #20
 8018082:	fb01 3102 	mla	r1, r1, r2, r3
 8018086:	7c4b      	ldrb	r3, [r1, #17]
 8018088:	0958      	lsrs	r0, r3, #5
 801808a:	7ccb      	ldrb	r3, [r1, #19]
 801808c:	491a      	ldr	r1, [pc, #104]	@ (80180f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801808e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018092:	6809      	ldr	r1, [r1, #0]
 8018094:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8018098:	b2d8      	uxtb	r0, r3
 801809a:	b149      	cbz	r1, 80180b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801809c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80180a0:	b132      	cbz	r2, 80180b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80180a2:	2b0e      	cmp	r3, #14
 80180a4:	d021      	beq.n	80180ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80180a6:	280f      	cmp	r0, #15
 80180a8:	d01d      	beq.n	80180e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 80180aa:	2810      	cmp	r0, #16
 80180ac:	bf08      	it	eq
 80180ae:	2002      	moveq	r0, #2
 80180b0:	bd10      	pop	{r4, pc}
 80180b2:	4912      	ldr	r1, [pc, #72]	@ (80180fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 80180b4:	8809      	ldrh	r1, [r1, #0]
 80180b6:	4419      	add	r1, r3
 80180b8:	428a      	cmp	r2, r1
 80180ba:	da09      	bge.n	80180d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80180bc:	1ad3      	subs	r3, r2, r3
 80180be:	4a10      	ldr	r2, [pc, #64]	@ (8018100 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80180c0:	6812      	ldr	r2, [r2, #0]
 80180c2:	210e      	movs	r1, #14
 80180c4:	fb01 2303 	mla	r3, r1, r3, r2
 80180c8:	7b18      	ldrb	r0, [r3, #12]
 80180ca:	f000 001f 	and.w	r0, r0, #31
 80180ce:	e7ef      	b.n	80180b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80180d0:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80180d4:	429a      	cmp	r2, r3
 80180d6:	d108      	bne.n	80180ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80180d8:	f7eb fa66 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 80180dc:	6803      	ldr	r3, [r0, #0]
 80180de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80180e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80180e4:	4718      	bx	r3
 80180e6:	2001      	movs	r0, #1
 80180e8:	e7e2      	b.n	80180b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80180ea:	2000      	movs	r0, #0
 80180ec:	e7e0      	b.n	80180b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80180ee:	bf00      	nop
 80180f0:	20013fe8 	.word	0x20013fe8
 80180f4:	20013ff0 	.word	0x20013ff0
 80180f8:	20013fcc 	.word	0x20013fcc
 80180fc:	20013fec 	.word	0x20013fec
 8018100:	20013fd0 	.word	0x20013fd0

08018104 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018104:	2010      	movs	r0, #16
 8018106:	4770      	bx	lr

08018108 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018108:	2000      	movs	r0, #0
 801810a:	4770      	bx	lr

0801810c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801810c:	4b02      	ldr	r3, [pc, #8]	@ (8018118 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801810e:	8818      	ldrh	r0, [r3, #0]
 8018110:	0040      	lsls	r0, r0, #1
 8018112:	b280      	uxth	r0, r0
 8018114:	4770      	bx	lr
 8018116:	bf00      	nop
 8018118:	20013f5a 	.word	0x20013f5a

0801811c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801811c:	2bff      	cmp	r3, #255	@ 0xff
 801811e:	d05e      	beq.n	80181de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8018120:	2a0b      	cmp	r2, #11
 8018122:	d058      	beq.n	80181d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8018124:	d80e      	bhi.n	8018144 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018126:	2a03      	cmp	r2, #3
 8018128:	d04d      	beq.n	80181c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801812a:	d804      	bhi.n	8018136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801812c:	2a01      	cmp	r2, #1
 801812e:	d04c      	beq.n	80181ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8018130:	d94d      	bls.n	80181ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8018132:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8018134:	e031      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018136:	2a09      	cmp	r2, #9
 8018138:	d04d      	beq.n	80181d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801813a:	d84a      	bhi.n	80181d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801813c:	2a08      	cmp	r2, #8
 801813e:	d048      	beq.n	80181d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8018140:	2300      	movs	r3, #0
 8018142:	e02a      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018144:	2a2f      	cmp	r2, #47	@ 0x2f
 8018146:	d02c      	beq.n	80181a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8018148:	d811      	bhi.n	801816e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801814a:	2a2d      	cmp	r2, #45	@ 0x2d
 801814c:	d018      	beq.n	8018180 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801814e:	d831      	bhi.n	80181b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8018150:	2a2c      	cmp	r2, #44	@ 0x2c
 8018152:	d1f5      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018154:	684a      	ldr	r2, [r1, #4]
 8018156:	7813      	ldrb	r3, [r2, #0]
 8018158:	7852      	ldrb	r2, [r2, #1]
 801815a:	2a00      	cmp	r2, #0
 801815c:	d1f0      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801815e:	2b01      	cmp	r3, #1
 8018160:	d01d      	beq.n	801819e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018162:	2b00      	cmp	r3, #0
 8018164:	d02d      	beq.n	80181c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018166:	2b02      	cmp	r3, #2
 8018168:	d1ea      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801816a:	68c3      	ldr	r3, [r0, #12]
 801816c:	e015      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801816e:	2a31      	cmp	r2, #49	@ 0x31
 8018170:	d004      	beq.n	801817c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8018172:	d332      	bcc.n	80181da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8018174:	2a32      	cmp	r2, #50	@ 0x32
 8018176:	d030      	beq.n	80181da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8018178:	2a33      	cmp	r2, #51	@ 0x33
 801817a:	d1e1      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801817c:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801817e:	e00c      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018180:	684a      	ldr	r2, [r1, #4]
 8018182:	7813      	ldrb	r3, [r2, #0]
 8018184:	7852      	ldrb	r2, [r2, #1]
 8018186:	2a00      	cmp	r2, #0
 8018188:	d1da      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801818a:	2b01      	cmp	r3, #1
 801818c:	d004      	beq.n	8018198 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801818e:	d30f      	bcc.n	80181b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8018190:	2b02      	cmp	r3, #2
 8018192:	d1d5      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018194:	6943      	ldr	r3, [r0, #20]
 8018196:	e000      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018198:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801819a:	4618      	mov	r0, r3
 801819c:	4770      	bx	lr
 801819e:	69c3      	ldr	r3, [r0, #28]
 80181a0:	e7fb      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181a2:	684b      	ldr	r3, [r1, #4]
 80181a4:	781a      	ldrb	r2, [r3, #0]
 80181a6:	785b      	ldrb	r3, [r3, #1]
 80181a8:	2b00      	cmp	r3, #0
 80181aa:	d1c9      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80181ac:	2a00      	cmp	r2, #0
 80181ae:	d1f4      	bne.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181b0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80181b2:	e7f2      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181b4:	684b      	ldr	r3, [r1, #4]
 80181b6:	781a      	ldrb	r2, [r3, #0]
 80181b8:	785b      	ldrb	r3, [r3, #1]
 80181ba:	2b00      	cmp	r3, #0
 80181bc:	d1c0      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80181be:	2a00      	cmp	r2, #0
 80181c0:	d1eb      	bne.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181c2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80181c4:	e7e9      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181c6:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80181c8:	e7e7      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181ca:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80181cc:	e7e5      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181ce:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80181d0:	e7e3      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181d2:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80181d4:	e7e1      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181d6:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80181d8:	e7df      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181da:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80181dc:	e7dd      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181de:	2a0b      	cmp	r2, #11
 80181e0:	d059      	beq.n	8018296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80181e2:	d80e      	bhi.n	8018202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80181e4:	2a03      	cmp	r2, #3
 80181e6:	d050      	beq.n	801828a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80181e8:	d804      	bhi.n	80181f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80181ea:	2a01      	cmp	r2, #1
 80181ec:	d04f      	beq.n	801828e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80181ee:	d950      	bls.n	8018292 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80181f0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80181f2:	e7d2      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80181f4:	2a09      	cmp	r2, #9
 80181f6:	d04e      	beq.n	8018296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80181f8:	d801      	bhi.n	80181fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80181fa:	2a08      	cmp	r2, #8
 80181fc:	d1a0      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80181fe:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8018200:	e7cb      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018202:	2a2f      	cmp	r2, #47	@ 0x2f
 8018204:	d02d      	beq.n	8018262 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8018206:	d811      	bhi.n	801822c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018208:	2a2d      	cmp	r2, #45	@ 0x2d
 801820a:	d018      	beq.n	801823e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801820c:	d833      	bhi.n	8018276 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801820e:	2a2c      	cmp	r2, #44	@ 0x2c
 8018210:	d196      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018212:	684a      	ldr	r2, [r1, #4]
 8018214:	7813      	ldrb	r3, [r2, #0]
 8018216:	7852      	ldrb	r2, [r2, #1]
 8018218:	2a00      	cmp	r2, #0
 801821a:	d191      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801821c:	2b01      	cmp	r3, #1
 801821e:	d01e      	beq.n	801825e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018220:	2b00      	cmp	r3, #0
 8018222:	d030      	beq.n	8018286 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8018224:	2b02      	cmp	r3, #2
 8018226:	d18b      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018228:	6903      	ldr	r3, [r0, #16]
 801822a:	e7b6      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801822c:	2a31      	cmp	r2, #49	@ 0x31
 801822e:	d004      	beq.n	801823a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8018230:	d333      	bcc.n	801829a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8018232:	2a32      	cmp	r2, #50	@ 0x32
 8018234:	d031      	beq.n	801829a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8018236:	2a33      	cmp	r2, #51	@ 0x33
 8018238:	d182      	bne.n	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801823a:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801823c:	e7ad      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801823e:	684a      	ldr	r2, [r1, #4]
 8018240:	7813      	ldrb	r3, [r2, #0]
 8018242:	7852      	ldrb	r2, [r2, #1]
 8018244:	2a00      	cmp	r2, #0
 8018246:	f47f af7b 	bne.w	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801824a:	2b01      	cmp	r3, #1
 801824c:	d005      	beq.n	801825a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801824e:	d310      	bcc.n	8018272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8018250:	2b02      	cmp	r3, #2
 8018252:	f47f af75 	bne.w	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018256:	6983      	ldr	r3, [r0, #24]
 8018258:	e79f      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801825a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801825c:	e79d      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801825e:	6a03      	ldr	r3, [r0, #32]
 8018260:	e79b      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018262:	684b      	ldr	r3, [r1, #4]
 8018264:	781a      	ldrb	r2, [r3, #0]
 8018266:	785b      	ldrb	r3, [r3, #1]
 8018268:	2b00      	cmp	r3, #0
 801826a:	f47f af69 	bne.w	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801826e:	2a00      	cmp	r2, #0
 8018270:	d193      	bne.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018272:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8018274:	e791      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018276:	684b      	ldr	r3, [r1, #4]
 8018278:	781a      	ldrb	r2, [r3, #0]
 801827a:	785b      	ldrb	r3, [r3, #1]
 801827c:	2b00      	cmp	r3, #0
 801827e:	f47f af5f 	bne.w	8018140 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018282:	2a00      	cmp	r2, #0
 8018284:	d189      	bne.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018286:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8018288:	e787      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801828a:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801828c:	e785      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801828e:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8018290:	e783      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018292:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8018294:	e781      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018296:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8018298:	e77f      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801829a:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801829c:	e77d      	b.n	801819a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801829e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801829e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182a2:	b087      	sub	sp, #28
 80182a4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80182a6:	9205      	str	r2, [sp, #20]
 80182a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80182ac:	9202      	str	r2, [sp, #8]
 80182ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80182b2:	9101      	str	r1, [sp, #4]
 80182b4:	6841      	ldr	r1, [r0, #4]
 80182b6:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80182ba:	fb01 2404 	mla	r4, r1, r4, r2
 80182be:	6802      	ldr	r2, [r0, #0]
 80182c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80182c4:	f8de 2000 	ldr.w	r2, [lr]
 80182c8:	9203      	str	r2, [sp, #12]
 80182ca:	f8de 2004 	ldr.w	r2, [lr, #4]
 80182ce:	3204      	adds	r2, #4
 80182d0:	9204      	str	r2, [sp, #16]
 80182d2:	9a02      	ldr	r2, [sp, #8]
 80182d4:	43d6      	mvns	r6, r2
 80182d6:	b2f6      	uxtb	r6, r6
 80182d8:	9a01      	ldr	r2, [sp, #4]
 80182da:	2a00      	cmp	r2, #0
 80182dc:	dc03      	bgt.n	80182e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80182de:	9a05      	ldr	r2, [sp, #20]
 80182e0:	2a00      	cmp	r2, #0
 80182e2:	f340 8129 	ble.w	8018538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80182e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80182e8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80182ec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80182f0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80182f4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80182f6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80182fa:	2b00      	cmp	r3, #0
 80182fc:	dd0e      	ble.n	801831c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80182fe:	1408      	asrs	r0, r1, #16
 8018300:	d405      	bmi.n	801830e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018302:	4560      	cmp	r0, ip
 8018304:	da03      	bge.n	801830e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018306:	1410      	asrs	r0, r2, #16
 8018308:	d401      	bmi.n	801830e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801830a:	42b8      	cmp	r0, r7
 801830c:	db07      	blt.n	801831e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801830e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018310:	4401      	add	r1, r0
 8018312:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8018314:	3b01      	subs	r3, #1
 8018316:	4402      	add	r2, r0
 8018318:	3402      	adds	r4, #2
 801831a:	e7ee      	b.n	80182fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801831c:	d071      	beq.n	8018402 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801831e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018320:	1e58      	subs	r0, r3, #1
 8018322:	fb05 1500 	mla	r5, r5, r0, r1
 8018326:	142d      	asrs	r5, r5, #16
 8018328:	d45f      	bmi.n	80183ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801832a:	4565      	cmp	r5, ip
 801832c:	da5d      	bge.n	80183ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801832e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018330:	fb05 2000 	mla	r0, r5, r0, r2
 8018334:	1400      	asrs	r0, r0, #16
 8018336:	d458      	bmi.n	80183ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018338:	42b8      	cmp	r0, r7
 801833a:	da56      	bge.n	80183ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801833c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018340:	4699      	mov	r9, r3
 8018342:	46a2      	mov	sl, r4
 8018344:	f1b9 0f00 	cmp.w	r9, #0
 8018348:	dd57      	ble.n	80183fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801834a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801834e:	9803      	ldr	r0, [sp, #12]
 8018350:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018354:	140d      	asrs	r5, r1, #16
 8018356:	fb07 000c 	mla	r0, r7, ip, r0
 801835a:	f109 39ff 	add.w	r9, r9, #4294967295
 801835e:	5d40      	ldrb	r0, [r0, r5]
 8018360:	9d04      	ldr	r5, [sp, #16]
 8018362:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018366:	f8ba 5000 	ldrh.w	r5, [sl]
 801836a:	122f      	asrs	r7, r5, #8
 801836c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018370:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018374:	fb17 f706 	smulbb	r7, r7, r6
 8018378:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801837c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018380:	00ed      	lsls	r5, r5, #3
 8018382:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018386:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801838a:	10c7      	asrs	r7, r0, #3
 801838c:	b2ed      	uxtb	r5, r5
 801838e:	00c0      	lsls	r0, r0, #3
 8018390:	fb18 f806 	smulbb	r8, r8, r6
 8018394:	fb15 f506 	smulbb	r5, r5, r6
 8018398:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801839c:	b2c0      	uxtb	r0, r0
 801839e:	fa1f fc8c 	uxth.w	ip, ip
 80183a2:	fb07 870b 	mla	r7, r7, fp, r8
 80183a6:	fb00 500b 	mla	r0, r0, fp, r5
 80183aa:	b280      	uxth	r0, r0
 80183ac:	b2bf      	uxth	r7, r7
 80183ae:	f10c 0501 	add.w	r5, ip, #1
 80183b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80183b6:	f107 0801 	add.w	r8, r7, #1
 80183ba:	1c45      	adds	r5, r0, #1
 80183bc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80183c0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80183c4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80183c6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80183ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80183ce:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80183d2:	ea45 0c0c 	orr.w	ip, r5, ip
 80183d6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80183da:	4401      	add	r1, r0
 80183dc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80183de:	ea4c 0c08 	orr.w	ip, ip, r8
 80183e2:	f82a cb02 	strh.w	ip, [sl], #2
 80183e6:	4402      	add	r2, r0
 80183e8:	e7ac      	b.n	8018344 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80183ea:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80183ee:	f04f 0800 	mov.w	r8, #0
 80183f2:	eb03 0008 	add.w	r0, r3, r8
 80183f6:	2800      	cmp	r0, #0
 80183f8:	dc41      	bgt.n	801847e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80183fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80183fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018402:	9b01      	ldr	r3, [sp, #4]
 8018404:	2b00      	cmp	r3, #0
 8018406:	f340 8097 	ble.w	8018538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801840a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801840e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018412:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018416:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018418:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801841c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018420:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018424:	eef0 6a62 	vmov.f32	s13, s5
 8018428:	ee61 7a27 	vmul.f32	s15, s2, s15
 801842c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018430:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018434:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8018438:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801843c:	eef0 6a43 	vmov.f32	s13, s6
 8018440:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018444:	ee12 2a90 	vmov	r2, s5
 8018448:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801844c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018450:	ee13 2a10 	vmov	r2, s6
 8018454:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018456:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018458:	fb92 f3f3 	sdiv	r3, r2, r3
 801845c:	9314      	str	r3, [sp, #80]	@ 0x50
 801845e:	9b01      	ldr	r3, [sp, #4]
 8018460:	9a05      	ldr	r2, [sp, #20]
 8018462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018466:	3b01      	subs	r3, #1
 8018468:	9301      	str	r3, [sp, #4]
 801846a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801846e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018470:	eeb0 3a67 	vmov.f32	s6, s15
 8018474:	bf08      	it	eq
 8018476:	4613      	moveq	r3, r2
 8018478:	eef0 2a47 	vmov.f32	s5, s14
 801847c:	e72c      	b.n	80182d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801847e:	140f      	asrs	r7, r1, #16
 8018480:	d453      	bmi.n	801852a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018482:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018486:	42bd      	cmp	r5, r7
 8018488:	dd4f      	ble.n	801852a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801848a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801848e:	d44c      	bmi.n	801852a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018490:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018494:	4560      	cmp	r0, ip
 8018496:	dd48      	ble.n	801852a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018498:	9803      	ldr	r0, [sp, #12]
 801849a:	b22d      	sxth	r5, r5
 801849c:	fb0c 0505 	mla	r5, ip, r5, r0
 80184a0:	5de8      	ldrb	r0, [r5, r7]
 80184a2:	9d04      	ldr	r5, [sp, #16]
 80184a4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80184a8:	f06f 0501 	mvn.w	r5, #1
 80184ac:	fb05 fb08 	mul.w	fp, r5, r8
 80184b0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80184b4:	f834 500b 	ldrh.w	r5, [r4, fp]
 80184b8:	122f      	asrs	r7, r5, #8
 80184ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80184be:	fb17 f706 	smulbb	r7, r7, r6
 80184c2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80184c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80184ca:	00ed      	lsls	r5, r5, #3
 80184cc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80184d0:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80184d4:	10c7      	asrs	r7, r0, #3
 80184d6:	b2ed      	uxtb	r5, r5
 80184d8:	00c0      	lsls	r0, r0, #3
 80184da:	fb19 f906 	smulbb	r9, r9, r6
 80184de:	fb15 f506 	smulbb	r5, r5, r6
 80184e2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80184e6:	b2c0      	uxtb	r0, r0
 80184e8:	fa1f fc8c 	uxth.w	ip, ip
 80184ec:	fb07 970a 	mla	r7, r7, sl, r9
 80184f0:	fb00 500a 	mla	r0, r0, sl, r5
 80184f4:	b2bf      	uxth	r7, r7
 80184f6:	b280      	uxth	r0, r0
 80184f8:	f10c 0501 	add.w	r5, ip, #1
 80184fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018500:	f107 0901 	add.w	r9, r7, #1
 8018504:	1c45      	adds	r5, r0, #1
 8018506:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801850a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801850e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018512:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018516:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801851a:	ea45 0c0c 	orr.w	ip, r5, ip
 801851e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018522:	ea4c 0c09 	orr.w	ip, ip, r9
 8018526:	f824 c00b 	strh.w	ip, [r4, fp]
 801852a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801852c:	4401      	add	r1, r0
 801852e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8018530:	f108 38ff 	add.w	r8, r8, #4294967295
 8018534:	4402      	add	r2, r0
 8018536:	e75c      	b.n	80183f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018538:	b007      	add	sp, #28
 801853a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801853e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801853e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018542:	b085      	sub	sp, #20
 8018544:	4693      	mov	fp, r2
 8018546:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018548:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801854a:	6870      	ldr	r0, [r6, #4]
 801854c:	9100      	str	r1, [sp, #0]
 801854e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018552:	fb00 2404 	mla	r4, r0, r4, r2
 8018556:	6832      	ldr	r2, [r6, #0]
 8018558:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801855c:	682a      	ldr	r2, [r5, #0]
 801855e:	9201      	str	r2, [sp, #4]
 8018560:	686a      	ldr	r2, [r5, #4]
 8018562:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8018566:	3204      	adds	r2, #4
 8018568:	9202      	str	r2, [sp, #8]
 801856a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801856e:	9a00      	ldr	r2, [sp, #0]
 8018570:	2a00      	cmp	r2, #0
 8018572:	dc03      	bgt.n	801857c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018574:	f1bb 0f00 	cmp.w	fp, #0
 8018578:	f340 80a0 	ble.w	80186bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801857c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801857e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018582:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018586:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801858a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801858c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018590:	2b00      	cmp	r3, #0
 8018592:	dd0c      	ble.n	80185ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018594:	1406      	asrs	r6, r0, #16
 8018596:	d405      	bmi.n	80185a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018598:	454e      	cmp	r6, r9
 801859a:	da03      	bge.n	80185a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801859c:	1416      	asrs	r6, r2, #16
 801859e:	d401      	bmi.n	80185a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80185a0:	4546      	cmp	r6, r8
 80185a2:	db05      	blt.n	80185b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80185a4:	4470      	add	r0, lr
 80185a6:	4462      	add	r2, ip
 80185a8:	3b01      	subs	r3, #1
 80185aa:	3402      	adds	r4, #2
 80185ac:	e7f0      	b.n	8018590 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80185ae:	d00f      	beq.n	80185d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80185b0:	1e5e      	subs	r6, r3, #1
 80185b2:	fb0e 0706 	mla	r7, lr, r6, r0
 80185b6:	143f      	asrs	r7, r7, #16
 80185b8:	d541      	bpl.n	801863e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80185ba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80185be:	4698      	mov	r8, r3
 80185c0:	9603      	str	r6, [sp, #12]
 80185c2:	f1b8 0f00 	cmp.w	r8, #0
 80185c6:	dc59      	bgt.n	801867c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80185c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80185d0:	9b00      	ldr	r3, [sp, #0]
 80185d2:	2b00      	cmp	r3, #0
 80185d4:	dd72      	ble.n	80186bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80185d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80185da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80185de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80185e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80185e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80185e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80185ec:	eeb0 6a62 	vmov.f32	s12, s5
 80185f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80185f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80185fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018600:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018604:	eeb0 6a43 	vmov.f32	s12, s6
 8018608:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801860c:	ee12 2a90 	vmov	r2, s5
 8018610:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018614:	fb92 fef3 	sdiv	lr, r2, r3
 8018618:	ee13 2a10 	vmov	r2, s6
 801861c:	fb92 fcf3 	sdiv	ip, r2, r3
 8018620:	9b00      	ldr	r3, [sp, #0]
 8018622:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018626:	3b01      	subs	r3, #1
 8018628:	9300      	str	r3, [sp, #0]
 801862a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801862e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018630:	eeb0 3a67 	vmov.f32	s6, s15
 8018634:	bf08      	it	eq
 8018636:	465b      	moveq	r3, fp
 8018638:	eef0 2a47 	vmov.f32	s5, s14
 801863c:	e797      	b.n	801856e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801863e:	454f      	cmp	r7, r9
 8018640:	dabb      	bge.n	80185ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018642:	fb0c 2606 	mla	r6, ip, r6, r2
 8018646:	1436      	asrs	r6, r6, #16
 8018648:	d4b7      	bmi.n	80185ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801864a:	4546      	cmp	r6, r8
 801864c:	dab5      	bge.n	80185ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801864e:	461e      	mov	r6, r3
 8018650:	46a0      	mov	r8, r4
 8018652:	2e00      	cmp	r6, #0
 8018654:	ddb8      	ble.n	80185c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018656:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801865a:	9901      	ldr	r1, [sp, #4]
 801865c:	1417      	asrs	r7, r2, #16
 801865e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018662:	fb0a 1707 	mla	r7, sl, r7, r1
 8018666:	9902      	ldr	r1, [sp, #8]
 8018668:	f817 7009 	ldrb.w	r7, [r7, r9]
 801866c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018670:	f828 7b02 	strh.w	r7, [r8], #2
 8018674:	4470      	add	r0, lr
 8018676:	4462      	add	r2, ip
 8018678:	3e01      	subs	r6, #1
 801867a:	e7ea      	b.n	8018652 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801867c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018680:	d417      	bmi.n	80186b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018682:	68ae      	ldr	r6, [r5, #8]
 8018684:	454e      	cmp	r6, r9
 8018686:	dd14      	ble.n	80186b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018688:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801868c:	d411      	bmi.n	80186b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801868e:	68ef      	ldr	r7, [r5, #12]
 8018690:	4557      	cmp	r7, sl
 8018692:	dd0e      	ble.n	80186b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018694:	9f01      	ldr	r7, [sp, #4]
 8018696:	b236      	sxth	r6, r6
 8018698:	fb0a 7606 	mla	r6, sl, r6, r7
 801869c:	9f02      	ldr	r7, [sp, #8]
 801869e:	f816 6009 	ldrb.w	r6, [r6, r9]
 80186a2:	f06f 0101 	mvn.w	r1, #1
 80186a6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80186aa:	fb01 f608 	mul.w	r6, r1, r8
 80186ae:	9903      	ldr	r1, [sp, #12]
 80186b0:	538f      	strh	r7, [r1, r6]
 80186b2:	4470      	add	r0, lr
 80186b4:	4462      	add	r2, ip
 80186b6:	f108 38ff 	add.w	r8, r8, #4294967295
 80186ba:	e782      	b.n	80185c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80186bc:	b005      	add	sp, #20
 80186be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080186c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80186c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186c6:	b087      	sub	sp, #28
 80186c8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80186ca:	9205      	str	r2, [sp, #20]
 80186cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80186d0:	9203      	str	r2, [sp, #12]
 80186d2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80186d6:	9102      	str	r1, [sp, #8]
 80186d8:	6861      	ldr	r1, [r4, #4]
 80186da:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80186de:	fb01 2000 	mla	r0, r1, r0, r2
 80186e2:	6822      	ldr	r2, [r4, #0]
 80186e4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80186e8:	9200      	str	r2, [sp, #0]
 80186ea:	f8dc 2000 	ldr.w	r2, [ip]
 80186ee:	9204      	str	r2, [sp, #16]
 80186f0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80186f4:	3204      	adds	r2, #4
 80186f6:	9201      	str	r2, [sp, #4]
 80186f8:	9a03      	ldr	r2, [sp, #12]
 80186fa:	43d5      	mvns	r5, r2
 80186fc:	b2ed      	uxtb	r5, r5
 80186fe:	9a02      	ldr	r2, [sp, #8]
 8018700:	2a00      	cmp	r2, #0
 8018702:	dc03      	bgt.n	801870c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018704:	9a05      	ldr	r2, [sp, #20]
 8018706:	2a00      	cmp	r2, #0
 8018708:	f340 812c 	ble.w	8018964 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801870c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801870e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018712:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018716:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801871a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801871c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018720:	2b00      	cmp	r3, #0
 8018722:	dd10      	ble.n	8018746 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018724:	140c      	asrs	r4, r1, #16
 8018726:	d405      	bmi.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018728:	4574      	cmp	r4, lr
 801872a:	da03      	bge.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801872c:	1414      	asrs	r4, r2, #16
 801872e:	d401      	bmi.n	8018734 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018730:	42bc      	cmp	r4, r7
 8018732:	db09      	blt.n	8018748 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018734:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018736:	9800      	ldr	r0, [sp, #0]
 8018738:	4421      	add	r1, r4
 801873a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801873c:	3002      	adds	r0, #2
 801873e:	4422      	add	r2, r4
 8018740:	3b01      	subs	r3, #1
 8018742:	9000      	str	r0, [sp, #0]
 8018744:	e7ec      	b.n	8018720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018746:	d071      	beq.n	801882c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018748:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801874a:	1e5c      	subs	r4, r3, #1
 801874c:	fb06 1604 	mla	r6, r6, r4, r1
 8018750:	1436      	asrs	r6, r6, #16
 8018752:	d45d      	bmi.n	8018810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018754:	4576      	cmp	r6, lr
 8018756:	da5b      	bge.n	8018810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018758:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801875a:	fb06 2404 	mla	r4, r6, r4, r2
 801875e:	1424      	asrs	r4, r4, #16
 8018760:	d456      	bmi.n	8018810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018762:	42bc      	cmp	r4, r7
 8018764:	da54      	bge.n	8018810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018766:	f8dd 9000 	ldr.w	r9, [sp]
 801876a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801876e:	4698      	mov	r8, r3
 8018770:	f1b8 0f00 	cmp.w	r8, #0
 8018774:	dd54      	ble.n	8018820 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018776:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801877a:	9804      	ldr	r0, [sp, #16]
 801877c:	1414      	asrs	r4, r2, #16
 801877e:	fb07 0404 	mla	r4, r7, r4, r0
 8018782:	140e      	asrs	r6, r1, #16
 8018784:	9801      	ldr	r0, [sp, #4]
 8018786:	f814 e006 	ldrb.w	lr, [r4, r6]
 801878a:	f8b9 4000 	ldrh.w	r4, [r9]
 801878e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018792:	eb00 0b0e 	add.w	fp, r0, lr
 8018796:	1227      	asrs	r7, r4, #8
 8018798:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801879c:	f89b b001 	ldrb.w	fp, [fp, #1]
 80187a0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80187a4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80187a6:	fb16 f60a 	smulbb	r6, r6, sl
 80187aa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80187ae:	fb07 6705 	mla	r7, r7, r5, r6
 80187b2:	10e6      	asrs	r6, r4, #3
 80187b4:	00e4      	lsls	r4, r4, #3
 80187b6:	b2e4      	uxtb	r4, r4
 80187b8:	fb1b fb0a 	smulbb	fp, fp, sl
 80187bc:	fb14 f405 	smulbb	r4, r4, r5
 80187c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80187c4:	b2bf      	uxth	r7, r7
 80187c6:	fb06 b605 	mla	r6, r6, r5, fp
 80187ca:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80187ce:	b2b6      	uxth	r6, r6
 80187d0:	fa1f fe8e 	uxth.w	lr, lr
 80187d4:	1c7c      	adds	r4, r7, #1
 80187d6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80187da:	f106 0b01 	add.w	fp, r6, #1
 80187de:	f10e 0401 	add.w	r4, lr, #1
 80187e2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80187e6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80187ea:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80187ee:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80187f2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80187f6:	4327      	orrs	r7, r4
 80187f8:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80187fc:	4401      	add	r1, r0
 80187fe:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8018800:	ea47 070b 	orr.w	r7, r7, fp
 8018804:	f829 7b02 	strh.w	r7, [r9], #2
 8018808:	4402      	add	r2, r0
 801880a:	f108 38ff 	add.w	r8, r8, #4294967295
 801880e:	e7af      	b.n	8018770 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018810:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018814:	f04f 0e00 	mov.w	lr, #0
 8018818:	eb03 040e 	add.w	r4, r3, lr
 801881c:	2c00      	cmp	r4, #0
 801881e:	dc43      	bgt.n	80188a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018820:	9a00      	ldr	r2, [sp, #0]
 8018822:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018826:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801882a:	9300      	str	r3, [sp, #0]
 801882c:	9b02      	ldr	r3, [sp, #8]
 801882e:	2b00      	cmp	r3, #0
 8018830:	f340 8098 	ble.w	8018964 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018834:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018838:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801883c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018840:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018842:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018846:	ee31 1a05 	vadd.f32	s2, s2, s10
 801884a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801884e:	eef0 6a62 	vmov.f32	s13, s5
 8018852:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018856:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801885a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801885e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8018862:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018866:	eef0 6a43 	vmov.f32	s13, s6
 801886a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801886e:	ee12 2a90 	vmov	r2, s5
 8018872:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018876:	fb92 f3f3 	sdiv	r3, r2, r3
 801887a:	ee13 2a10 	vmov	r2, s6
 801887e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018880:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018882:	fb92 f3f3 	sdiv	r3, r2, r3
 8018886:	9314      	str	r3, [sp, #80]	@ 0x50
 8018888:	9b02      	ldr	r3, [sp, #8]
 801888a:	9a05      	ldr	r2, [sp, #20]
 801888c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018890:	3b01      	subs	r3, #1
 8018892:	9302      	str	r3, [sp, #8]
 8018894:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8018898:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801889a:	eeb0 3a67 	vmov.f32	s6, s15
 801889e:	bf08      	it	eq
 80188a0:	4613      	moveq	r3, r2
 80188a2:	eef0 2a47 	vmov.f32	s5, s14
 80188a6:	e72a      	b.n	80186fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80188a8:	140f      	asrs	r7, r1, #16
 80188aa:	d454      	bmi.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80188ac:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80188b0:	42be      	cmp	r6, r7
 80188b2:	dd50      	ble.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80188b4:	ea5f 4822 	movs.w	r8, r2, asr #16
 80188b8:	d44d      	bmi.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80188ba:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80188be:	4544      	cmp	r4, r8
 80188c0:	dd49      	ble.n	8018956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80188c2:	9c04      	ldr	r4, [sp, #16]
 80188c4:	b236      	sxth	r6, r6
 80188c6:	fb08 4606 	mla	r6, r8, r6, r4
 80188ca:	f06f 0001 	mvn.w	r0, #1
 80188ce:	f816 8007 	ldrb.w	r8, [r6, r7]
 80188d2:	9c01      	ldr	r4, [sp, #4]
 80188d4:	fb00 fa0e 	mul.w	sl, r0, lr
 80188d8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80188dc:	9800      	ldr	r0, [sp, #0]
 80188de:	eb04 0b08 	add.w	fp, r4, r8
 80188e2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80188e6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80188ea:	9801      	ldr	r0, [sp, #4]
 80188ec:	f89b b001 	ldrb.w	fp, [fp, #1]
 80188f0:	f810 8008 	ldrb.w	r8, [r0, r8]
 80188f4:	9800      	ldr	r0, [sp, #0]
 80188f6:	1227      	asrs	r7, r4, #8
 80188f8:	fb16 f609 	smulbb	r6, r6, r9
 80188fc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018900:	fb07 6705 	mla	r7, r7, r5, r6
 8018904:	10e6      	asrs	r6, r4, #3
 8018906:	00e4      	lsls	r4, r4, #3
 8018908:	b2e4      	uxtb	r4, r4
 801890a:	fb1b fb09 	smulbb	fp, fp, r9
 801890e:	fb14 f405 	smulbb	r4, r4, r5
 8018912:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018916:	b2bf      	uxth	r7, r7
 8018918:	fb06 b605 	mla	r6, r6, r5, fp
 801891c:	fb08 4809 	mla	r8, r8, r9, r4
 8018920:	b2b6      	uxth	r6, r6
 8018922:	fa1f f888 	uxth.w	r8, r8
 8018926:	1c7c      	adds	r4, r7, #1
 8018928:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801892c:	f106 0b01 	add.w	fp, r6, #1
 8018930:	f108 0401 	add.w	r4, r8, #1
 8018934:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018938:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801893c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018940:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018944:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018948:	4327      	orrs	r7, r4
 801894a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801894e:	ea47 070b 	orr.w	r7, r7, fp
 8018952:	f820 700a 	strh.w	r7, [r0, sl]
 8018956:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018958:	4401      	add	r1, r0
 801895a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801895c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018960:	4402      	add	r2, r0
 8018962:	e759      	b.n	8018818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018964:	b007      	add	sp, #28
 8018966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801896c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801896c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018970:	b085      	sub	sp, #20
 8018972:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018976:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018978:	9203      	str	r2, [sp, #12]
 801897a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801897e:	6870      	ldr	r0, [r6, #4]
 8018980:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8018982:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8018986:	686f      	ldr	r7, [r5, #4]
 8018988:	9101      	str	r1, [sp, #4]
 801898a:	fb00 2404 	mla	r4, r0, r4, r2
 801898e:	6832      	ldr	r2, [r6, #0]
 8018990:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018994:	682a      	ldr	r2, [r5, #0]
 8018996:	9202      	str	r2, [sp, #8]
 8018998:	3704      	adds	r7, #4
 801899a:	9a01      	ldr	r2, [sp, #4]
 801899c:	2a00      	cmp	r2, #0
 801899e:	dc03      	bgt.n	80189a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80189a0:	9a03      	ldr	r2, [sp, #12]
 80189a2:	2a00      	cmp	r2, #0
 80189a4:	f340 80cc 	ble.w	8018b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80189a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80189aa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80189ae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80189b2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80189b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80189b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80189bc:	2b00      	cmp	r3, #0
 80189be:	dd0d      	ble.n	80189dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80189c0:	1406      	asrs	r6, r0, #16
 80189c2:	d405      	bmi.n	80189d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80189c4:	454e      	cmp	r6, r9
 80189c6:	da03      	bge.n	80189d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80189c8:	1416      	asrs	r6, r2, #16
 80189ca:	d401      	bmi.n	80189d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80189cc:	4546      	cmp	r6, r8
 80189ce:	db06      	blt.n	80189de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80189d0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80189d2:	4460      	add	r0, ip
 80189d4:	4432      	add	r2, r6
 80189d6:	3b01      	subs	r3, #1
 80189d8:	3402      	adds	r4, #2
 80189da:	e7ef      	b.n	80189bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80189dc:	d00f      	beq.n	80189fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80189de:	1e5e      	subs	r6, r3, #1
 80189e0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80189e4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80189e8:	d543      	bpl.n	8018a72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80189ea:	4698      	mov	r8, r3
 80189ec:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80189f0:	f1b8 0f00 	cmp.w	r8, #0
 80189f4:	dc71      	bgt.n	8018ada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80189f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80189fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80189fe:	9b01      	ldr	r3, [sp, #4]
 8018a00:	2b00      	cmp	r3, #0
 8018a02:	f340 809d 	ble.w	8018b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018a06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018a0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018a12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018a14:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a1c:	eeb0 6a62 	vmov.f32	s12, s5
 8018a20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a2c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018a30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a34:	eeb0 6a43 	vmov.f32	s12, s6
 8018a38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a3c:	ee12 2a90 	vmov	r2, s5
 8018a40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a44:	fb92 fcf3 	sdiv	ip, r2, r3
 8018a48:	ee13 2a10 	vmov	r2, s6
 8018a4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a50:	9312      	str	r3, [sp, #72]	@ 0x48
 8018a52:	9b01      	ldr	r3, [sp, #4]
 8018a54:	9a03      	ldr	r2, [sp, #12]
 8018a56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a5a:	3b01      	subs	r3, #1
 8018a5c:	9301      	str	r3, [sp, #4]
 8018a5e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018a62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018a64:	eeb0 3a67 	vmov.f32	s6, s15
 8018a68:	bf08      	it	eq
 8018a6a:	4613      	moveq	r3, r2
 8018a6c:	eef0 2a47 	vmov.f32	s5, s14
 8018a70:	e793      	b.n	801899a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018a72:	45ce      	cmp	lr, r9
 8018a74:	dab9      	bge.n	80189ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018a76:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018a78:	fb01 2606 	mla	r6, r1, r6, r2
 8018a7c:	1436      	asrs	r6, r6, #16
 8018a7e:	d4b4      	bmi.n	80189ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018a80:	4546      	cmp	r6, r8
 8018a82:	dab2      	bge.n	80189ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018a84:	4698      	mov	r8, r3
 8018a86:	46a2      	mov	sl, r4
 8018a88:	f1b8 0f00 	cmp.w	r8, #0
 8018a8c:	ddb3      	ble.n	80189f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018a8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018a92:	9902      	ldr	r1, [sp, #8]
 8018a94:	1416      	asrs	r6, r2, #16
 8018a96:	fb09 1606 	mla	r6, r9, r6, r1
 8018a9a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018a9e:	492a      	ldr	r1, [pc, #168]	@ (8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018aa0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018aa4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018aa8:	eb07 0b0e 	add.w	fp, r7, lr
 8018aac:	4460      	add	r0, ip
 8018aae:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8018ab2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018ab6:	00f6      	lsls	r6, r6, #3
 8018ab8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018abc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018ac0:	ea49 0606 	orr.w	r6, r9, r6
 8018ac4:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018ac8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018aca:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018ace:	f82a 6b02 	strh.w	r6, [sl], #2
 8018ad2:	440a      	add	r2, r1
 8018ad4:	f108 38ff 	add.w	r8, r8, #4294967295
 8018ad8:	e7d6      	b.n	8018a88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018ada:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018ade:	d429      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018ae0:	68ae      	ldr	r6, [r5, #8]
 8018ae2:	454e      	cmp	r6, r9
 8018ae4:	dd26      	ble.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018ae6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018aea:	d423      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018aec:	68e9      	ldr	r1, [r5, #12]
 8018aee:	4559      	cmp	r1, fp
 8018af0:	dd20      	ble.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018af2:	9902      	ldr	r1, [sp, #8]
 8018af4:	fa0f fe86 	sxth.w	lr, r6
 8018af8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018afc:	f06f 0101 	mvn.w	r1, #1
 8018b00:	f81e e009 	ldrb.w	lr, [lr, r9]
 8018b04:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018b08:	eb07 060e 	add.w	r6, r7, lr
 8018b0c:	fb01 f908 	mul.w	r9, r1, r8
 8018b10:	f896 b002 	ldrb.w	fp, [r6, #2]
 8018b14:	7876      	ldrb	r6, [r6, #1]
 8018b16:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8018b1a:	00f6      	lsls	r6, r6, #3
 8018b1c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018b20:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018b24:	ea4b 0606 	orr.w	r6, fp, r6
 8018b28:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018b2c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018b30:	f82a 6009 	strh.w	r6, [sl, r9]
 8018b34:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018b36:	4460      	add	r0, ip
 8018b38:	440a      	add	r2, r1
 8018b3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8018b3e:	e757      	b.n	80189f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018b40:	b005      	add	sp, #20
 8018b42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b46:	bf00      	nop
 8018b48:	fffff800 	.word	0xfffff800

08018b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b50:	b087      	sub	sp, #28
 8018b52:	468b      	mov	fp, r1
 8018b54:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018b56:	9204      	str	r2, [sp, #16]
 8018b58:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018b5c:	9205      	str	r2, [sp, #20]
 8018b5e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8018b62:	6841      	ldr	r1, [r0, #4]
 8018b64:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8018b68:	fb01 2404 	mla	r4, r1, r4, r2
 8018b6c:	6802      	ldr	r2, [r0, #0]
 8018b6e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b72:	f8dc 2000 	ldr.w	r2, [ip]
 8018b76:	9201      	str	r2, [sp, #4]
 8018b78:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018b7c:	3204      	adds	r2, #4
 8018b7e:	9202      	str	r2, [sp, #8]
 8018b80:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018b84:	f1bb 0f00 	cmp.w	fp, #0
 8018b88:	dc03      	bgt.n	8018b92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018b8a:	9a04      	ldr	r2, [sp, #16]
 8018b8c:	2a00      	cmp	r2, #0
 8018b8e:	f340 8138 	ble.w	8018e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018b92:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018b94:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018b98:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018b9c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018ba0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018ba2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018ba6:	2b00      	cmp	r3, #0
 8018ba8:	dd0e      	ble.n	8018bc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018baa:	1402      	asrs	r2, r0, #16
 8018bac:	d405      	bmi.n	8018bba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018bae:	42ba      	cmp	r2, r7
 8018bb0:	da03      	bge.n	8018bba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018bb2:	140a      	asrs	r2, r1, #16
 8018bb4:	d401      	bmi.n	8018bba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018bb6:	42b2      	cmp	r2, r6
 8018bb8:	db07      	blt.n	8018bca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018bba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018bbc:	4410      	add	r0, r2
 8018bbe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018bc0:	3b01      	subs	r3, #1
 8018bc2:	4411      	add	r1, r2
 8018bc4:	3402      	adds	r4, #2
 8018bc6:	e7ee      	b.n	8018ba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018bc8:	d019      	beq.n	8018bfe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018bca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018bcc:	1e5a      	subs	r2, r3, #1
 8018bce:	fb05 0502 	mla	r5, r5, r2, r0
 8018bd2:	142d      	asrs	r5, r5, #16
 8018bd4:	d409      	bmi.n	8018bea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018bd6:	42bd      	cmp	r5, r7
 8018bd8:	da07      	bge.n	8018bea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018bda:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018bdc:	fb05 1202 	mla	r2, r5, r2, r1
 8018be0:	1412      	asrs	r2, r2, #16
 8018be2:	d402      	bmi.n	8018bea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018be4:	42b2      	cmp	r2, r6
 8018be6:	f2c0 80ac 	blt.w	8018d42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018bea:	f04f 0e00 	mov.w	lr, #0
 8018bee:	eb03 020e 	add.w	r2, r3, lr
 8018bf2:	2a00      	cmp	r2, #0
 8018bf4:	dc3e      	bgt.n	8018c74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018bf6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018bfa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018bfe:	f1bb 0f00 	cmp.w	fp, #0
 8018c02:	f340 80fe 	ble.w	8018e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018c06:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018c12:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018c14:	f1bb 0b01 	subs.w	fp, fp, #1
 8018c18:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c20:	eeb0 6a62 	vmov.f32	s12, s5
 8018c24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c30:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018c34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c38:	eeb0 6a43 	vmov.f32	s12, s6
 8018c3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c40:	ee12 2a90 	vmov	r2, s5
 8018c44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c48:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c4c:	ee13 2a10 	vmov	r2, s6
 8018c50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c54:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018c56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018c58:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c5c:	9a04      	ldr	r2, [sp, #16]
 8018c5e:	9314      	str	r3, [sp, #80]	@ 0x50
 8018c60:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018c64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018c66:	eeb0 3a67 	vmov.f32	s6, s15
 8018c6a:	bf08      	it	eq
 8018c6c:	4613      	moveq	r3, r2
 8018c6e:	eef0 2a47 	vmov.f32	s5, s14
 8018c72:	e787      	b.n	8018b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018c74:	1406      	asrs	r6, r0, #16
 8018c76:	d45d      	bmi.n	8018d34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018c78:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018c7c:	42b5      	cmp	r5, r6
 8018c7e:	dd59      	ble.n	8018d34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018c80:	140f      	asrs	r7, r1, #16
 8018c82:	d457      	bmi.n	8018d34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018c84:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018c88:	42ba      	cmp	r2, r7
 8018c8a:	dd53      	ble.n	8018d34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018c8c:	9a01      	ldr	r2, [sp, #4]
 8018c8e:	b22d      	sxth	r5, r5
 8018c90:	fb07 2505 	mla	r5, r7, r5, r2
 8018c94:	5daa      	ldrb	r2, [r5, r6]
 8018c96:	9d02      	ldr	r5, [sp, #8]
 8018c98:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018c9c:	0e2e      	lsrs	r6, r5, #24
 8018c9e:	d049      	beq.n	8018d34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018ca0:	f06f 0201 	mvn.w	r2, #1
 8018ca4:	fb02 f20e 	mul.w	r2, r2, lr
 8018ca8:	9203      	str	r2, [sp, #12]
 8018caa:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018cae:	9a05      	ldr	r2, [sp, #20]
 8018cb0:	4356      	muls	r6, r2
 8018cb2:	1c72      	adds	r2, r6, #1
 8018cb4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018cb8:	1212      	asrs	r2, r2, #8
 8018cba:	fa1f f982 	uxth.w	r9, r2
 8018cbe:	ea4f 2728 	mov.w	r7, r8, asr #8
 8018cc2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018cc6:	43d2      	mvns	r2, r2
 8018cc8:	b2d2      	uxtb	r2, r2
 8018cca:	fb16 f609 	smulbb	r6, r6, r9
 8018cce:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018cd2:	fb07 6702 	mla	r7, r7, r2, r6
 8018cd6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018cda:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018cde:	b2ed      	uxtb	r5, r5
 8018ce0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018ce4:	fa5f f888 	uxtb.w	r8, r8
 8018ce8:	fb15 f509 	smulbb	r5, r5, r9
 8018cec:	fb08 5502 	mla	r5, r8, r2, r5
 8018cf0:	b2bf      	uxth	r7, r7
 8018cf2:	fb1a fa09 	smulbb	sl, sl, r9
 8018cf6:	b2ad      	uxth	r5, r5
 8018cf8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018cfc:	fb06 a602 	mla	r6, r6, r2, sl
 8018d00:	1c7a      	adds	r2, r7, #1
 8018d02:	f105 0a01 	add.w	sl, r5, #1
 8018d06:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018d0a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018d0e:	b2b6      	uxth	r6, r6
 8018d10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018d14:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018d18:	ea4a 0707 	orr.w	r7, sl, r7
 8018d1c:	f106 0a01 	add.w	sl, r6, #1
 8018d20:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018d24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018d28:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018d2c:	9a03      	ldr	r2, [sp, #12]
 8018d2e:	ea47 070a 	orr.w	r7, r7, sl
 8018d32:	52a7      	strh	r7, [r4, r2]
 8018d34:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018d36:	4410      	add	r0, r2
 8018d38:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018d3a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018d3e:	4411      	add	r1, r2
 8018d40:	e755      	b.n	8018bee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8018d42:	f04f 0800 	mov.w	r8, #0
 8018d46:	eba3 0208 	sub.w	r2, r3, r8
 8018d4a:	2a00      	cmp	r2, #0
 8018d4c:	f77f af53 	ble.w	8018bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018d50:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8018d54:	9f01      	ldr	r7, [sp, #4]
 8018d56:	140a      	asrs	r2, r1, #16
 8018d58:	1405      	asrs	r5, r0, #16
 8018d5a:	fb06 7202 	mla	r2, r6, r2, r7
 8018d5e:	5d52      	ldrb	r2, [r2, r5]
 8018d60:	9d02      	ldr	r5, [sp, #8]
 8018d62:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018d66:	0e2e      	lsrs	r6, r5, #24
 8018d68:	d044      	beq.n	8018df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018d6a:	9a05      	ldr	r2, [sp, #20]
 8018d6c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018d70:	4356      	muls	r6, r2
 8018d72:	1c72      	adds	r2, r6, #1
 8018d74:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018d78:	1212      	asrs	r2, r2, #8
 8018d7a:	fa1f f982 	uxth.w	r9, r2
 8018d7e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018d82:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018d86:	43d2      	mvns	r2, r2
 8018d88:	b2d2      	uxtb	r2, r2
 8018d8a:	fb16 f609 	smulbb	r6, r6, r9
 8018d8e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018d92:	fb07 6702 	mla	r7, r7, r2, r6
 8018d96:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018d9a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018d9e:	b2ed      	uxtb	r5, r5
 8018da0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018da4:	fa5f fe8e 	uxtb.w	lr, lr
 8018da8:	fb15 f509 	smulbb	r5, r5, r9
 8018dac:	fb0e 5502 	mla	r5, lr, r2, r5
 8018db0:	b2bf      	uxth	r7, r7
 8018db2:	fb1a fa09 	smulbb	sl, sl, r9
 8018db6:	b2ad      	uxth	r5, r5
 8018db8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018dbc:	fb06 a602 	mla	r6, r6, r2, sl
 8018dc0:	1c7a      	adds	r2, r7, #1
 8018dc2:	f105 0a01 	add.w	sl, r5, #1
 8018dc6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018dca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018dce:	b2b6      	uxth	r6, r6
 8018dd0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018dd4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018dd8:	ea4a 0707 	orr.w	r7, sl, r7
 8018ddc:	f106 0a01 	add.w	sl, r6, #1
 8018de0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018de4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018de8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018dec:	ea47 070a 	orr.w	r7, r7, sl
 8018df0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018df4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018df6:	4410      	add	r0, r2
 8018df8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018dfa:	f108 0801 	add.w	r8, r8, #1
 8018dfe:	4411      	add	r1, r2
 8018e00:	e7a1      	b.n	8018d46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8018e02:	b007      	add	sp, #28
 8018e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e0c:	b085      	sub	sp, #20
 8018e0e:	468b      	mov	fp, r1
 8018e10:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018e12:	9203      	str	r2, [sp, #12]
 8018e14:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018e18:	6841      	ldr	r1, [r0, #4]
 8018e1a:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018e1e:	fb01 2404 	mla	r4, r1, r4, r2
 8018e22:	6802      	ldr	r2, [r0, #0]
 8018e24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e28:	f8de 2000 	ldr.w	r2, [lr]
 8018e2c:	9200      	str	r2, [sp, #0]
 8018e2e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018e32:	3204      	adds	r2, #4
 8018e34:	9201      	str	r2, [sp, #4]
 8018e36:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018e3a:	f1bb 0f00 	cmp.w	fp, #0
 8018e3e:	dc03      	bgt.n	8018e48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018e40:	9a03      	ldr	r2, [sp, #12]
 8018e42:	2a00      	cmp	r2, #0
 8018e44:	f340 8153 	ble.w	80190ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018e48:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018e4a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018e4e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018e52:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018e56:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018e58:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018e5c:	2b00      	cmp	r3, #0
 8018e5e:	dd0e      	ble.n	8018e7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e60:	1408      	asrs	r0, r1, #16
 8018e62:	d405      	bmi.n	8018e70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e64:	42b8      	cmp	r0, r7
 8018e66:	da03      	bge.n	8018e70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e68:	1410      	asrs	r0, r2, #16
 8018e6a:	d401      	bmi.n	8018e70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e6c:	42b0      	cmp	r0, r6
 8018e6e:	db07      	blt.n	8018e80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018e70:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018e72:	4401      	add	r1, r0
 8018e74:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018e76:	3b01      	subs	r3, #1
 8018e78:	4402      	add	r2, r0
 8018e7a:	3402      	adds	r4, #2
 8018e7c:	e7ee      	b.n	8018e5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018e7e:	d017      	beq.n	8018eb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018e80:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018e82:	1e58      	subs	r0, r3, #1
 8018e84:	fb05 1500 	mla	r5, r5, r0, r1
 8018e88:	142d      	asrs	r5, r5, #16
 8018e8a:	d409      	bmi.n	8018ea0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018e8c:	42bd      	cmp	r5, r7
 8018e8e:	da07      	bge.n	8018ea0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018e90:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018e92:	fb05 2000 	mla	r0, r5, r0, r2
 8018e96:	1400      	asrs	r0, r0, #16
 8018e98:	d402      	bmi.n	8018ea0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018e9a:	42b0      	cmp	r0, r6
 8018e9c:	f2c0 80bc 	blt.w	8019018 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8018ea0:	2600      	movs	r6, #0
 8018ea2:	1998      	adds	r0, r3, r6
 8018ea4:	2800      	cmp	r0, #0
 8018ea6:	dc3e      	bgt.n	8018f26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018ea8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018eac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018eb0:	f1bb 0f00 	cmp.w	fp, #0
 8018eb4:	f340 811b 	ble.w	80190ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018eb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ebc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018ec0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018ec4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018ec6:	f1bb 0b01 	subs.w	fp, fp, #1
 8018eca:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018ece:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ed2:	eeb0 6a62 	vmov.f32	s12, s5
 8018ed6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018eda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ede:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ee2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018ee6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018eea:	eeb0 6a43 	vmov.f32	s12, s6
 8018eee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ef2:	ee12 2a90 	vmov	r2, s5
 8018ef6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018efa:	fb92 f3f3 	sdiv	r3, r2, r3
 8018efe:	ee13 2a10 	vmov	r2, s6
 8018f02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f06:	9311      	str	r3, [sp, #68]	@ 0x44
 8018f08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018f0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f0e:	9a03      	ldr	r2, [sp, #12]
 8018f10:	9312      	str	r3, [sp, #72]	@ 0x48
 8018f12:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018f16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018f18:	eeb0 3a67 	vmov.f32	s6, s15
 8018f1c:	bf08      	it	eq
 8018f1e:	4613      	moveq	r3, r2
 8018f20:	eef0 2a47 	vmov.f32	s5, s14
 8018f24:	e789      	b.n	8018e3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018f26:	140f      	asrs	r7, r1, #16
 8018f28:	d426      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018f2a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018f2e:	42bd      	cmp	r5, r7
 8018f30:	dd22      	ble.n	8018f78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018f32:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018f36:	d41f      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018f38:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018f3c:	4560      	cmp	r0, ip
 8018f3e:	dd1b      	ble.n	8018f78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018f40:	9800      	ldr	r0, [sp, #0]
 8018f42:	b22d      	sxth	r5, r5
 8018f44:	fb0c 0505 	mla	r5, ip, r5, r0
 8018f48:	5de8      	ldrb	r0, [r5, r7]
 8018f4a:	9d01      	ldr	r5, [sp, #4]
 8018f4c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8018f50:	0e07      	lsrs	r7, r0, #24
 8018f52:	2fff      	cmp	r7, #255	@ 0xff
 8018f54:	d116      	bne.n	8018f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8018f56:	f06f 0501 	mvn.w	r5, #1
 8018f5a:	fb05 f706 	mul.w	r7, r5, r6
 8018f5e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8018f62:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8018f66:	0945      	lsrs	r5, r0, #5
 8018f68:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018f6c:	ea4c 0505 	orr.w	r5, ip, r5
 8018f70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018f74:	4305      	orrs	r5, r0
 8018f76:	53e5      	strh	r5, [r4, r7]
 8018f78:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018f7a:	4401      	add	r1, r0
 8018f7c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018f7e:	3e01      	subs	r6, #1
 8018f80:	4402      	add	r2, r0
 8018f82:	e78e      	b.n	8018ea2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018f84:	b2fd      	uxtb	r5, r7
 8018f86:	2f00      	cmp	r7, #0
 8018f88:	d0f6      	beq.n	8018f78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018f8a:	f06f 0701 	mvn.w	r7, #1
 8018f8e:	4377      	muls	r7, r6
 8018f90:	fa1f f985 	uxth.w	r9, r5
 8018f94:	f834 8007 	ldrh.w	r8, [r4, r7]
 8018f98:	9702      	str	r7, [sp, #8]
 8018f9a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018f9e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8018fa2:	43ed      	mvns	r5, r5
 8018fa4:	b2ed      	uxtb	r5, r5
 8018fa6:	fb17 f709 	smulbb	r7, r7, r9
 8018faa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018fae:	fb0c 7c05 	mla	ip, ip, r5, r7
 8018fb2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018fb6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018fba:	b2c0      	uxtb	r0, r0
 8018fbc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018fc0:	fa5f f888 	uxtb.w	r8, r8
 8018fc4:	fb10 f009 	smulbb	r0, r0, r9
 8018fc8:	fb08 0005 	mla	r0, r8, r5, r0
 8018fcc:	b280      	uxth	r0, r0
 8018fce:	fa1f fc8c 	uxth.w	ip, ip
 8018fd2:	fb1a fa09 	smulbb	sl, sl, r9
 8018fd6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018fda:	fb07 a705 	mla	r7, r7, r5, sl
 8018fde:	f100 0a01 	add.w	sl, r0, #1
 8018fe2:	f10c 0501 	add.w	r5, ip, #1
 8018fe6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018fea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018fee:	b2bf      	uxth	r7, r7
 8018ff0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018ff4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018ff8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018ffc:	f107 0a01 	add.w	sl, r7, #1
 8019000:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019004:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019008:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801900c:	9802      	ldr	r0, [sp, #8]
 801900e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019012:	f824 c000 	strh.w	ip, [r4, r0]
 8019016:	e7af      	b.n	8018f78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019018:	f04f 0800 	mov.w	r8, #0
 801901c:	eba3 0008 	sub.w	r0, r3, r8
 8019020:	2800      	cmp	r0, #0
 8019022:	f77f af41 	ble.w	8018ea8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019026:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801902a:	9f00      	ldr	r7, [sp, #0]
 801902c:	1410      	asrs	r0, r2, #16
 801902e:	140d      	asrs	r5, r1, #16
 8019030:	fb06 7000 	mla	r0, r6, r0, r7
 8019034:	5d40      	ldrb	r0, [r0, r5]
 8019036:	9d01      	ldr	r5, [sp, #4]
 8019038:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801903c:	0e2e      	lsrs	r6, r5, #24
 801903e:	2eff      	cmp	r6, #255	@ 0xff
 8019040:	d112      	bne.n	8019068 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019042:	482c      	ldr	r0, [pc, #176]	@ (80190f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019044:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019048:	0968      	lsrs	r0, r5, #5
 801904a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801904e:	4330      	orrs	r0, r6
 8019050:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019054:	4328      	orrs	r0, r5
 8019056:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801905a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801905c:	4401      	add	r1, r0
 801905e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019060:	f108 0801 	add.w	r8, r8, #1
 8019064:	4402      	add	r2, r0
 8019066:	e7d9      	b.n	801901c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019068:	b2f0      	uxtb	r0, r6
 801906a:	2e00      	cmp	r6, #0
 801906c:	d0f5      	beq.n	801905a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801906e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019072:	fa1f f980 	uxth.w	r9, r0
 8019076:	ea4f 272c 	mov.w	r7, ip, asr #8
 801907a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801907e:	43c0      	mvns	r0, r0
 8019080:	b2c0      	uxtb	r0, r0
 8019082:	fb16 f609 	smulbb	r6, r6, r9
 8019086:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801908a:	fb07 6700 	mla	r7, r7, r0, r6
 801908e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019092:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019096:	b2ed      	uxtb	r5, r5
 8019098:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801909c:	fa5f fc8c 	uxtb.w	ip, ip
 80190a0:	fb15 f509 	smulbb	r5, r5, r9
 80190a4:	fb0c 5500 	mla	r5, ip, r0, r5
 80190a8:	b2bf      	uxth	r7, r7
 80190aa:	fb1a fa09 	smulbb	sl, sl, r9
 80190ae:	b2ad      	uxth	r5, r5
 80190b0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80190b4:	fb06 a600 	mla	r6, r6, r0, sl
 80190b8:	1c78      	adds	r0, r7, #1
 80190ba:	f105 0a01 	add.w	sl, r5, #1
 80190be:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80190c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80190c6:	b2b6      	uxth	r6, r6
 80190c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80190cc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80190d0:	ea4a 0707 	orr.w	r7, sl, r7
 80190d4:	f106 0a01 	add.w	sl, r6, #1
 80190d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80190dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80190e0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80190e4:	ea47 070a 	orr.w	r7, r7, sl
 80190e8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80190ec:	e7b5      	b.n	801905a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80190ee:	b005      	add	sp, #20
 80190f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190f4:	fffff800 	.word	0xfffff800

080190f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190fc:	b087      	sub	sp, #28
 80190fe:	468b      	mov	fp, r1
 8019100:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019102:	9204      	str	r2, [sp, #16]
 8019104:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8019108:	9205      	str	r2, [sp, #20]
 801910a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801910e:	6861      	ldr	r1, [r4, #4]
 8019110:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8019114:	fb01 2000 	mla	r0, r1, r0, r2
 8019118:	6822      	ldr	r2, [r4, #0]
 801911a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801911e:	f8de 2000 	ldr.w	r2, [lr]
 8019122:	9201      	str	r2, [sp, #4]
 8019124:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019128:	9202      	str	r2, [sp, #8]
 801912a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801912e:	f1bb 0f00 	cmp.w	fp, #0
 8019132:	dc03      	bgt.n	801913c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019134:	9a04      	ldr	r2, [sp, #16]
 8019136:	2a00      	cmp	r2, #0
 8019138:	f340 8142 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801913c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801913e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019142:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019146:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801914a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801914c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019150:	2b00      	cmp	r3, #0
 8019152:	dd0e      	ble.n	8019172 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019154:	140c      	asrs	r4, r1, #16
 8019156:	d405      	bmi.n	8019164 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019158:	42bc      	cmp	r4, r7
 801915a:	da03      	bge.n	8019164 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801915c:	1414      	asrs	r4, r2, #16
 801915e:	d401      	bmi.n	8019164 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019160:	42b4      	cmp	r4, r6
 8019162:	db07      	blt.n	8019174 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019164:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019166:	4421      	add	r1, r4
 8019168:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801916a:	3b01      	subs	r3, #1
 801916c:	4422      	add	r2, r4
 801916e:	3002      	adds	r0, #2
 8019170:	e7ee      	b.n	8019150 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019172:	d019      	beq.n	80191a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019174:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019176:	1e5c      	subs	r4, r3, #1
 8019178:	fb05 1504 	mla	r5, r5, r4, r1
 801917c:	142d      	asrs	r5, r5, #16
 801917e:	d409      	bmi.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019180:	42bd      	cmp	r5, r7
 8019182:	da07      	bge.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019184:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019186:	fb05 2404 	mla	r4, r5, r4, r2
 801918a:	1424      	asrs	r4, r4, #16
 801918c:	d402      	bmi.n	8019194 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801918e:	42b4      	cmp	r4, r6
 8019190:	f2c0 80b1 	blt.w	80192f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019194:	f04f 0800 	mov.w	r8, #0
 8019198:	eb03 0408 	add.w	r4, r3, r8
 801919c:	2c00      	cmp	r4, #0
 801919e:	dc3e      	bgt.n	801921e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80191a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80191a8:	f1bb 0f00 	cmp.w	fp, #0
 80191ac:	f340 8108 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80191b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80191bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80191be:	f1bb 0b01 	subs.w	fp, fp, #1
 80191c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191ca:	eeb0 6a62 	vmov.f32	s12, s5
 80191ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191da:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80191de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191e2:	eeb0 6a43 	vmov.f32	s12, s6
 80191e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191ea:	ee12 2a90 	vmov	r2, s5
 80191ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80191f6:	ee13 2a10 	vmov	r2, s6
 80191fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191fe:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019200:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019202:	fb92 f3f3 	sdiv	r3, r2, r3
 8019206:	9a04      	ldr	r2, [sp, #16]
 8019208:	9314      	str	r3, [sp, #80]	@ 0x50
 801920a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801920e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019210:	eeb0 3a67 	vmov.f32	s6, s15
 8019214:	bf08      	it	eq
 8019216:	4613      	moveq	r3, r2
 8019218:	eef0 2a47 	vmov.f32	s5, s14
 801921c:	e787      	b.n	801912e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801921e:	140e      	asrs	r6, r1, #16
 8019220:	d462      	bmi.n	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019222:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019226:	42b5      	cmp	r5, r6
 8019228:	dd5e      	ble.n	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801922a:	1417      	asrs	r7, r2, #16
 801922c:	d45c      	bmi.n	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801922e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019232:	42bc      	cmp	r4, r7
 8019234:	dd58      	ble.n	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019236:	b22d      	sxth	r5, r5
 8019238:	fb07 6505 	mla	r5, r7, r5, r6
 801923c:	9c02      	ldr	r4, [sp, #8]
 801923e:	5d66      	ldrb	r6, [r4, r5]
 8019240:	2e00      	cmp	r6, #0
 8019242:	d051      	beq.n	80192e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019244:	9c01      	ldr	r4, [sp, #4]
 8019246:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801924a:	f06f 0401 	mvn.w	r4, #1
 801924e:	fb04 f408 	mul.w	r4, r4, r8
 8019252:	9403      	str	r4, [sp, #12]
 8019254:	5b05      	ldrh	r5, [r0, r4]
 8019256:	9c05      	ldr	r4, [sp, #20]
 8019258:	4366      	muls	r6, r4
 801925a:	1c74      	adds	r4, r6, #1
 801925c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019260:	1224      	asrs	r4, r4, #8
 8019262:	b2a7      	uxth	r7, r4
 8019264:	122e      	asrs	r6, r5, #8
 8019266:	43e4      	mvns	r4, r4
 8019268:	b2e4      	uxtb	r4, r4
 801926a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801926e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019272:	fb16 f604 	smulbb	r6, r6, r4
 8019276:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801927a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801927e:	00ed      	lsls	r5, r5, #3
 8019280:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019284:	b2ed      	uxtb	r5, r5
 8019286:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801928a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801928e:	fb15 f504 	smulbb	r5, r5, r4
 8019292:	fa5f f989 	uxtb.w	r9, r9
 8019296:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801929a:	fb09 5507 	mla	r5, r9, r7, r5
 801929e:	fb1a fa04 	smulbb	sl, sl, r4
 80192a2:	fa1f fc8c 	uxth.w	ip, ip
 80192a6:	b2ad      	uxth	r5, r5
 80192a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80192ac:	fb06 a607 	mla	r6, r6, r7, sl
 80192b0:	f10c 0401 	add.w	r4, ip, #1
 80192b4:	f105 0a01 	add.w	sl, r5, #1
 80192b8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80192bc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80192c0:	b2b6      	uxth	r6, r6
 80192c2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80192c6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80192ca:	ea4a 0c0c 	orr.w	ip, sl, ip
 80192ce:	f106 0a01 	add.w	sl, r6, #1
 80192d2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80192d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80192da:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80192de:	9c03      	ldr	r4, [sp, #12]
 80192e0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80192e4:	f820 c004 	strh.w	ip, [r0, r4]
 80192e8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80192ea:	4421      	add	r1, r4
 80192ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80192ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80192f2:	4422      	add	r2, r4
 80192f4:	e750      	b.n	8019198 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80192f6:	f04f 0900 	mov.w	r9, #0
 80192fa:	eba3 0409 	sub.w	r4, r3, r9
 80192fe:	2c00      	cmp	r4, #0
 8019300:	f77f af4e 	ble.w	80191a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019304:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019308:	140d      	asrs	r5, r1, #16
 801930a:	1414      	asrs	r4, r2, #16
 801930c:	fb06 5404 	mla	r4, r6, r4, r5
 8019310:	9d02      	ldr	r5, [sp, #8]
 8019312:	5d2e      	ldrb	r6, [r5, r4]
 8019314:	2e00      	cmp	r6, #0
 8019316:	d04c      	beq.n	80193b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019318:	9d01      	ldr	r5, [sp, #4]
 801931a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801931e:	9c05      	ldr	r4, [sp, #20]
 8019320:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019324:	4366      	muls	r6, r4
 8019326:	1c74      	adds	r4, r6, #1
 8019328:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801932c:	1224      	asrs	r4, r4, #8
 801932e:	b2a7      	uxth	r7, r4
 8019330:	122e      	asrs	r6, r5, #8
 8019332:	43e4      	mvns	r4, r4
 8019334:	b2e4      	uxtb	r4, r4
 8019336:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801933a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801933e:	fb16 f604 	smulbb	r6, r6, r4
 8019342:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019346:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801934a:	00ed      	lsls	r5, r5, #3
 801934c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019350:	b2ed      	uxtb	r5, r5
 8019352:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019356:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801935a:	fb15 f504 	smulbb	r5, r5, r4
 801935e:	fa5f f888 	uxtb.w	r8, r8
 8019362:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019366:	fb08 5507 	mla	r5, r8, r7, r5
 801936a:	fb1a fa04 	smulbb	sl, sl, r4
 801936e:	fa1f fc8c 	uxth.w	ip, ip
 8019372:	b2ad      	uxth	r5, r5
 8019374:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019378:	fb06 a607 	mla	r6, r6, r7, sl
 801937c:	f10c 0401 	add.w	r4, ip, #1
 8019380:	f105 0a01 	add.w	sl, r5, #1
 8019384:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019388:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801938c:	b2b6      	uxth	r6, r6
 801938e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019392:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019396:	ea4a 0c0c 	orr.w	ip, sl, ip
 801939a:	f106 0a01 	add.w	sl, r6, #1
 801939e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80193a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193a6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80193aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80193ae:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80193b2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80193b4:	4421      	add	r1, r4
 80193b6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80193b8:	f109 0901 	add.w	r9, r9, #1
 80193bc:	4422      	add	r2, r4
 80193be:	e79c      	b.n	80192fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80193c0:	b007      	add	sp, #28
 80193c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080193c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193ca:	b085      	sub	sp, #20
 80193cc:	468b      	mov	fp, r1
 80193ce:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80193d0:	9203      	str	r2, [sp, #12]
 80193d2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 80193d6:	6861      	ldr	r1, [r4, #4]
 80193d8:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80193dc:	fb01 2000 	mla	r0, r1, r0, r2
 80193e0:	6822      	ldr	r2, [r4, #0]
 80193e2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80193e6:	f8d8 2000 	ldr.w	r2, [r8]
 80193ea:	9200      	str	r2, [sp, #0]
 80193ec:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80193f0:	9201      	str	r2, [sp, #4]
 80193f2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80193f6:	f1bb 0f00 	cmp.w	fp, #0
 80193fa:	dc03      	bgt.n	8019404 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80193fc:	9a03      	ldr	r2, [sp, #12]
 80193fe:	2a00      	cmp	r2, #0
 8019400:	f340 8146 	ble.w	8019690 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019404:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019406:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801940a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801940e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019412:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019414:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019418:	2b00      	cmp	r3, #0
 801941a:	dd0e      	ble.n	801943a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801941c:	140c      	asrs	r4, r1, #16
 801941e:	d405      	bmi.n	801942c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019420:	42bc      	cmp	r4, r7
 8019422:	da03      	bge.n	801942c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019424:	1414      	asrs	r4, r2, #16
 8019426:	d401      	bmi.n	801942c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019428:	42b4      	cmp	r4, r6
 801942a:	db07      	blt.n	801943c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801942c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801942e:	4421      	add	r1, r4
 8019430:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019432:	3b01      	subs	r3, #1
 8019434:	4422      	add	r2, r4
 8019436:	3002      	adds	r0, #2
 8019438:	e7ee      	b.n	8019418 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801943a:	d017      	beq.n	801946c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801943c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801943e:	1e5c      	subs	r4, r3, #1
 8019440:	fb05 1504 	mla	r5, r5, r4, r1
 8019444:	142d      	asrs	r5, r5, #16
 8019446:	d409      	bmi.n	801945c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019448:	42bd      	cmp	r5, r7
 801944a:	da07      	bge.n	801945c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801944c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801944e:	fb05 2404 	mla	r4, r5, r4, r2
 8019452:	1424      	asrs	r4, r4, #16
 8019454:	d402      	bmi.n	801945c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019456:	42b4      	cmp	r4, r6
 8019458:	f2c0 80b3 	blt.w	80195c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801945c:	2600      	movs	r6, #0
 801945e:	199c      	adds	r4, r3, r6
 8019460:	2c00      	cmp	r4, #0
 8019462:	dc3e      	bgt.n	80194e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019464:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019468:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801946c:	f1bb 0f00 	cmp.w	fp, #0
 8019470:	f340 810e 	ble.w	8019690 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019474:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019478:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801947c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019480:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019482:	f1bb 0b01 	subs.w	fp, fp, #1
 8019486:	ee31 1a05 	vadd.f32	s2, s2, s10
 801948a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801948e:	eeb0 6a62 	vmov.f32	s12, s5
 8019492:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801949a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801949e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80194a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80194a6:	eeb0 6a43 	vmov.f32	s12, s6
 80194aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80194ae:	ee12 2a90 	vmov	r2, s5
 80194b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80194ba:	ee13 2a10 	vmov	r2, s6
 80194be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194c2:	9311      	str	r3, [sp, #68]	@ 0x44
 80194c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80194c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80194ca:	9a03      	ldr	r2, [sp, #12]
 80194cc:	9312      	str	r3, [sp, #72]	@ 0x48
 80194ce:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80194d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80194d4:	eeb0 3a67 	vmov.f32	s6, s15
 80194d8:	bf08      	it	eq
 80194da:	4613      	moveq	r3, r2
 80194dc:	eef0 2a47 	vmov.f32	s5, s14
 80194e0:	e789      	b.n	80193f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80194e2:	140f      	asrs	r7, r1, #16
 80194e4:	d418      	bmi.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80194e6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80194ea:	42bd      	cmp	r5, r7
 80194ec:	dd14      	ble.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80194ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80194f2:	d411      	bmi.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80194f4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80194f8:	4564      	cmp	r4, ip
 80194fa:	dd0d      	ble.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80194fc:	b22d      	sxth	r5, r5
 80194fe:	fb0c 7505 	mla	r5, ip, r5, r7
 8019502:	9c01      	ldr	r4, [sp, #4]
 8019504:	5d64      	ldrb	r4, [r4, r5]
 8019506:	2cff      	cmp	r4, #255	@ 0xff
 8019508:	d10c      	bne.n	8019524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801950a:	9c00      	ldr	r4, [sp, #0]
 801950c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019510:	f06f 0401 	mvn.w	r4, #1
 8019514:	4374      	muls	r4, r6
 8019516:	5305      	strh	r5, [r0, r4]
 8019518:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801951a:	4421      	add	r1, r4
 801951c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801951e:	3e01      	subs	r6, #1
 8019520:	4422      	add	r2, r4
 8019522:	e79c      	b.n	801945e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019524:	2c00      	cmp	r4, #0
 8019526:	d0f7      	beq.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019528:	9f00      	ldr	r7, [sp, #0]
 801952a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801952e:	f06f 0501 	mvn.w	r5, #1
 8019532:	4375      	muls	r5, r6
 8019534:	9502      	str	r5, [sp, #8]
 8019536:	5b45      	ldrh	r5, [r0, r5]
 8019538:	fa1f fc84 	uxth.w	ip, r4
 801953c:	122f      	asrs	r7, r5, #8
 801953e:	43e4      	mvns	r4, r4
 8019540:	b2e4      	uxtb	r4, r4
 8019542:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019546:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801954a:	fb17 f704 	smulbb	r7, r7, r4
 801954e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019552:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019556:	00ed      	lsls	r5, r5, #3
 8019558:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801955c:	b2ed      	uxtb	r5, r5
 801955e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019562:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019566:	fb15 f504 	smulbb	r5, r5, r4
 801956a:	fa5f f989 	uxtb.w	r9, r9
 801956e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019572:	fb09 550c 	mla	r5, r9, ip, r5
 8019576:	fb1a fa04 	smulbb	sl, sl, r4
 801957a:	fa1f fe8e 	uxth.w	lr, lr
 801957e:	b2ad      	uxth	r5, r5
 8019580:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019584:	fb07 a70c 	mla	r7, r7, ip, sl
 8019588:	f10e 0401 	add.w	r4, lr, #1
 801958c:	f105 0a01 	add.w	sl, r5, #1
 8019590:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019594:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019598:	b2bf      	uxth	r7, r7
 801959a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801959e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80195a2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80195a6:	f107 0a01 	add.w	sl, r7, #1
 80195aa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80195ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195b2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80195b6:	9c02      	ldr	r4, [sp, #8]
 80195b8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80195bc:	f820 e004 	strh.w	lr, [r0, r4]
 80195c0:	e7aa      	b.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195c2:	f04f 0900 	mov.w	r9, #0
 80195c6:	eba3 0409 	sub.w	r4, r3, r9
 80195ca:	2c00      	cmp	r4, #0
 80195cc:	f77f af4a 	ble.w	8019464 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80195d0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80195d4:	1414      	asrs	r4, r2, #16
 80195d6:	140d      	asrs	r5, r1, #16
 80195d8:	fb06 5504 	mla	r5, r6, r4, r5
 80195dc:	9c01      	ldr	r4, [sp, #4]
 80195de:	5d64      	ldrb	r4, [r4, r5]
 80195e0:	2cff      	cmp	r4, #255	@ 0xff
 80195e2:	d10b      	bne.n	80195fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80195e4:	9c00      	ldr	r4, [sp, #0]
 80195e6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80195ea:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80195ee:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80195f0:	4421      	add	r1, r4
 80195f2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80195f4:	f109 0901 	add.w	r9, r9, #1
 80195f8:	4422      	add	r2, r4
 80195fa:	e7e4      	b.n	80195c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80195fc:	2c00      	cmp	r4, #0
 80195fe:	d0f6      	beq.n	80195ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019600:	9e00      	ldr	r6, [sp, #0]
 8019602:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019606:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801960a:	b2a7      	uxth	r7, r4
 801960c:	122e      	asrs	r6, r5, #8
 801960e:	43e4      	mvns	r4, r4
 8019610:	b2e4      	uxtb	r4, r4
 8019612:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019616:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801961a:	fb16 f604 	smulbb	r6, r6, r4
 801961e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019622:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019626:	00ed      	lsls	r5, r5, #3
 8019628:	fb0c 6c07 	mla	ip, ip, r7, r6
 801962c:	b2ed      	uxtb	r5, r5
 801962e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019632:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019636:	fb15 f504 	smulbb	r5, r5, r4
 801963a:	fa5f fe8e 	uxtb.w	lr, lr
 801963e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019642:	fb0e 5507 	mla	r5, lr, r7, r5
 8019646:	fb1a fa04 	smulbb	sl, sl, r4
 801964a:	fa1f fc8c 	uxth.w	ip, ip
 801964e:	b2ad      	uxth	r5, r5
 8019650:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019654:	fb06 a607 	mla	r6, r6, r7, sl
 8019658:	f10c 0401 	add.w	r4, ip, #1
 801965c:	f105 0a01 	add.w	sl, r5, #1
 8019660:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019664:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019668:	b2b6      	uxth	r6, r6
 801966a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801966e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019672:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019676:	f106 0a01 	add.w	sl, r6, #1
 801967a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801967e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019682:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019686:	ea4c 0c0a 	orr.w	ip, ip, sl
 801968a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801968e:	e7ae      	b.n	80195ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019690:	b005      	add	sp, #20
 8019692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019696 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801969a:	b085      	sub	sp, #20
 801969c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801969e:	9203      	str	r2, [sp, #12]
 80196a0:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80196a4:	9201      	str	r2, [sp, #4]
 80196a6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80196aa:	9100      	str	r1, [sp, #0]
 80196ac:	6841      	ldr	r1, [r0, #4]
 80196ae:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80196b2:	fb01 2404 	mla	r4, r1, r4, r2
 80196b6:	6802      	ldr	r2, [r0, #0]
 80196b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80196bc:	f8de 2000 	ldr.w	r2, [lr]
 80196c0:	9202      	str	r2, [sp, #8]
 80196c2:	9a01      	ldr	r2, [sp, #4]
 80196c4:	43d6      	mvns	r6, r2
 80196c6:	b2f6      	uxtb	r6, r6
 80196c8:	9a00      	ldr	r2, [sp, #0]
 80196ca:	2a00      	cmp	r2, #0
 80196cc:	dc03      	bgt.n	80196d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80196ce:	9a03      	ldr	r2, [sp, #12]
 80196d0:	2a00      	cmp	r2, #0
 80196d2:	f340 8124 	ble.w	801991e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80196d6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80196d8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80196dc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80196e0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80196e4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80196e6:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80196ea:	2b00      	cmp	r3, #0
 80196ec:	dd0e      	ble.n	801970c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80196ee:	1408      	asrs	r0, r1, #16
 80196f0:	d405      	bmi.n	80196fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80196f2:	4560      	cmp	r0, ip
 80196f4:	da03      	bge.n	80196fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80196f6:	1410      	asrs	r0, r2, #16
 80196f8:	d401      	bmi.n	80196fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80196fa:	42b8      	cmp	r0, r7
 80196fc:	db07      	blt.n	801970e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80196fe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019700:	4401      	add	r1, r0
 8019702:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019704:	3b01      	subs	r3, #1
 8019706:	4402      	add	r2, r0
 8019708:	3402      	adds	r4, #2
 801970a:	e7ee      	b.n	80196ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801970c:	d06e      	beq.n	80197ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801970e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019710:	1e58      	subs	r0, r3, #1
 8019712:	fb05 1500 	mla	r5, r5, r0, r1
 8019716:	142d      	asrs	r5, r5, #16
 8019718:	d45c      	bmi.n	80197d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801971a:	4565      	cmp	r5, ip
 801971c:	da5a      	bge.n	80197d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801971e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019720:	fb05 2000 	mla	r0, r5, r0, r2
 8019724:	1400      	asrs	r0, r0, #16
 8019726:	d455      	bmi.n	80197d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019728:	42b8      	cmp	r0, r7
 801972a:	da53      	bge.n	80197d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801972c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019730:	4699      	mov	r9, r3
 8019732:	46a2      	mov	sl, r4
 8019734:	f1b9 0f00 	cmp.w	r9, #0
 8019738:	dd54      	ble.n	80197e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801973a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801973e:	140d      	asrs	r5, r1, #16
 8019740:	1410      	asrs	r0, r2, #16
 8019742:	fb07 5000 	mla	r0, r7, r0, r5
 8019746:	9d02      	ldr	r5, [sp, #8]
 8019748:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801974c:	f8ba 5000 	ldrh.w	r5, [sl]
 8019750:	122f      	asrs	r7, r5, #8
 8019752:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019756:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801975a:	fb17 f706 	smulbb	r7, r7, r6
 801975e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019762:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019766:	00ed      	lsls	r5, r5, #3
 8019768:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801976c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8019770:	10c7      	asrs	r7, r0, #3
 8019772:	b2ed      	uxtb	r5, r5
 8019774:	00c0      	lsls	r0, r0, #3
 8019776:	fb18 f806 	smulbb	r8, r8, r6
 801977a:	fb15 f506 	smulbb	r5, r5, r6
 801977e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019782:	b2c0      	uxtb	r0, r0
 8019784:	fa1f fc8c 	uxth.w	ip, ip
 8019788:	fb07 870b 	mla	r7, r7, fp, r8
 801978c:	fb00 500b 	mla	r0, r0, fp, r5
 8019790:	b280      	uxth	r0, r0
 8019792:	b2bf      	uxth	r7, r7
 8019794:	f10c 0501 	add.w	r5, ip, #1
 8019798:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801979c:	f107 0801 	add.w	r8, r7, #1
 80197a0:	1c45      	adds	r5, r0, #1
 80197a2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80197a6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80197aa:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80197ac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80197b0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80197b4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80197b8:	ea45 0c0c 	orr.w	ip, r5, ip
 80197bc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80197c0:	4401      	add	r1, r0
 80197c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80197c4:	ea4c 0c08 	orr.w	ip, ip, r8
 80197c8:	f82a cb02 	strh.w	ip, [sl], #2
 80197cc:	4402      	add	r2, r0
 80197ce:	f109 39ff 	add.w	r9, r9, #4294967295
 80197d2:	e7af      	b.n	8019734 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80197d4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80197d8:	f04f 0800 	mov.w	r8, #0
 80197dc:	eb03 0008 	add.w	r0, r3, r8
 80197e0:	2800      	cmp	r0, #0
 80197e2:	dc41      	bgt.n	8019868 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80197e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80197e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80197ec:	9b00      	ldr	r3, [sp, #0]
 80197ee:	2b00      	cmp	r3, #0
 80197f0:	f340 8095 	ble.w	801991e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80197f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197f8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80197fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019800:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019802:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019806:	ee31 1a05 	vadd.f32	s2, s2, s10
 801980a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801980e:	eef0 6a62 	vmov.f32	s13, s5
 8019812:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019816:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801981a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801981e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8019822:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019826:	eef0 6a43 	vmov.f32	s13, s6
 801982a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801982e:	ee12 2a90 	vmov	r2, s5
 8019832:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019836:	fb92 f3f3 	sdiv	r3, r2, r3
 801983a:	ee13 2a10 	vmov	r2, s6
 801983e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019840:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019842:	fb92 f3f3 	sdiv	r3, r2, r3
 8019846:	9312      	str	r3, [sp, #72]	@ 0x48
 8019848:	9b00      	ldr	r3, [sp, #0]
 801984a:	9a03      	ldr	r2, [sp, #12]
 801984c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019850:	3b01      	subs	r3, #1
 8019852:	9300      	str	r3, [sp, #0]
 8019854:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8019858:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801985a:	eeb0 3a67 	vmov.f32	s6, s15
 801985e:	bf08      	it	eq
 8019860:	4613      	moveq	r3, r2
 8019862:	eef0 2a47 	vmov.f32	s5, s14
 8019866:	e72f      	b.n	80196c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019868:	140f      	asrs	r7, r1, #16
 801986a:	d451      	bmi.n	8019910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801986c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019870:	42bd      	cmp	r5, r7
 8019872:	dd4d      	ble.n	8019910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019874:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019878:	d44a      	bmi.n	8019910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801987a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801987e:	4560      	cmp	r0, ip
 8019880:	dd46      	ble.n	8019910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019882:	b22d      	sxth	r5, r5
 8019884:	fb0c 7505 	mla	r5, ip, r5, r7
 8019888:	9802      	ldr	r0, [sp, #8]
 801988a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801988e:	f06f 0501 	mvn.w	r5, #1
 8019892:	fb05 fb08 	mul.w	fp, r5, r8
 8019896:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801989a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801989e:	122f      	asrs	r7, r5, #8
 80198a0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80198a4:	fb17 f706 	smulbb	r7, r7, r6
 80198a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80198ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80198b0:	00ed      	lsls	r5, r5, #3
 80198b2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80198b6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80198ba:	10c7      	asrs	r7, r0, #3
 80198bc:	b2ed      	uxtb	r5, r5
 80198be:	00c0      	lsls	r0, r0, #3
 80198c0:	fb19 f906 	smulbb	r9, r9, r6
 80198c4:	fb15 f506 	smulbb	r5, r5, r6
 80198c8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80198cc:	b2c0      	uxtb	r0, r0
 80198ce:	fa1f fc8c 	uxth.w	ip, ip
 80198d2:	fb07 970a 	mla	r7, r7, sl, r9
 80198d6:	fb00 500a 	mla	r0, r0, sl, r5
 80198da:	b2bf      	uxth	r7, r7
 80198dc:	b280      	uxth	r0, r0
 80198de:	f10c 0501 	add.w	r5, ip, #1
 80198e2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80198e6:	f107 0901 	add.w	r9, r7, #1
 80198ea:	1c45      	adds	r5, r0, #1
 80198ec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80198f0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80198f4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80198f8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80198fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019900:	ea45 0c0c 	orr.w	ip, r5, ip
 8019904:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019908:	ea4c 0c09 	orr.w	ip, ip, r9
 801990c:	f824 c00b 	strh.w	ip, [r4, fp]
 8019910:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019912:	4401      	add	r1, r0
 8019914:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019916:	f108 38ff 	add.w	r8, r8, #4294967295
 801991a:	4402      	add	r2, r0
 801991c:	e75e      	b.n	80197dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801991e:	b005      	add	sp, #20
 8019920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019924 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019928:	b085      	sub	sp, #20
 801992a:	4693      	mov	fp, r2
 801992c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801992e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8019930:	6870      	ldr	r0, [r6, #4]
 8019932:	9101      	str	r1, [sp, #4]
 8019934:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019938:	fb00 2404 	mla	r4, r0, r4, r2
 801993c:	6832      	ldr	r2, [r6, #0]
 801993e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8019942:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019946:	682a      	ldr	r2, [r5, #0]
 8019948:	9202      	str	r2, [sp, #8]
 801994a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801994e:	9a01      	ldr	r2, [sp, #4]
 8019950:	2a00      	cmp	r2, #0
 8019952:	dc03      	bgt.n	801995c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019954:	f1bb 0f00 	cmp.w	fp, #0
 8019958:	f340 809a 	ble.w	8019a90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801995c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801995e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019962:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019966:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801996a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801996c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019970:	2b00      	cmp	r3, #0
 8019972:	dd0c      	ble.n	801998e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019974:	1406      	asrs	r6, r0, #16
 8019976:	d405      	bmi.n	8019984 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019978:	454e      	cmp	r6, r9
 801997a:	da03      	bge.n	8019984 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801997c:	1416      	asrs	r6, r2, #16
 801997e:	d401      	bmi.n	8019984 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019980:	4546      	cmp	r6, r8
 8019982:	db05      	blt.n	8019990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019984:	4470      	add	r0, lr
 8019986:	4462      	add	r2, ip
 8019988:	3b01      	subs	r3, #1
 801998a:	3402      	adds	r4, #2
 801998c:	e7f0      	b.n	8019970 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801998e:	d00f      	beq.n	80199b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019990:	1e5e      	subs	r6, r3, #1
 8019992:	fb0e 0706 	mla	r7, lr, r6, r0
 8019996:	143f      	asrs	r7, r7, #16
 8019998:	d541      	bpl.n	8019a1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801999a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801999e:	4698      	mov	r8, r3
 80199a0:	9603      	str	r6, [sp, #12]
 80199a2:	f1b8 0f00 	cmp.w	r8, #0
 80199a6:	dc56      	bgt.n	8019a56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80199a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80199b0:	9b01      	ldr	r3, [sp, #4]
 80199b2:	2b00      	cmp	r3, #0
 80199b4:	dd6c      	ble.n	8019a90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80199b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80199be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80199c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80199c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80199c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199cc:	eeb0 6a62 	vmov.f32	s12, s5
 80199d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80199d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199dc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80199e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80199e4:	eeb0 6a43 	vmov.f32	s12, s6
 80199e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199ec:	ee12 2a90 	vmov	r2, s5
 80199f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80199f4:	fb92 fef3 	sdiv	lr, r2, r3
 80199f8:	ee13 2a10 	vmov	r2, s6
 80199fc:	fb92 fcf3 	sdiv	ip, r2, r3
 8019a00:	9b01      	ldr	r3, [sp, #4]
 8019a02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a06:	3b01      	subs	r3, #1
 8019a08:	9301      	str	r3, [sp, #4]
 8019a0a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019a0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019a10:	eeb0 3a67 	vmov.f32	s6, s15
 8019a14:	bf08      	it	eq
 8019a16:	465b      	moveq	r3, fp
 8019a18:	eef0 2a47 	vmov.f32	s5, s14
 8019a1c:	e797      	b.n	801994e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019a1e:	454f      	cmp	r7, r9
 8019a20:	dabb      	bge.n	801999a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019a22:	fb0c 2606 	mla	r6, ip, r6, r2
 8019a26:	1436      	asrs	r6, r6, #16
 8019a28:	d4b7      	bmi.n	801999a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019a2a:	4546      	cmp	r6, r8
 8019a2c:	dab5      	bge.n	801999a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019a2e:	461e      	mov	r6, r3
 8019a30:	46a0      	mov	r8, r4
 8019a32:	2e00      	cmp	r6, #0
 8019a34:	ddb8      	ble.n	80199a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019a36:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019a3a:	9902      	ldr	r1, [sp, #8]
 8019a3c:	1417      	asrs	r7, r2, #16
 8019a3e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019a42:	fb0a 9707 	mla	r7, sl, r7, r9
 8019a46:	4470      	add	r0, lr
 8019a48:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019a4c:	f828 7b02 	strh.w	r7, [r8], #2
 8019a50:	4462      	add	r2, ip
 8019a52:	3e01      	subs	r6, #1
 8019a54:	e7ed      	b.n	8019a32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019a56:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019a5a:	d414      	bmi.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019a5c:	68ae      	ldr	r6, [r5, #8]
 8019a5e:	454e      	cmp	r6, r9
 8019a60:	dd11      	ble.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019a62:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019a66:	d40e      	bmi.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019a68:	68ef      	ldr	r7, [r5, #12]
 8019a6a:	4557      	cmp	r7, sl
 8019a6c:	dd0b      	ble.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019a6e:	b236      	sxth	r6, r6
 8019a70:	fb0a 9606 	mla	r6, sl, r6, r9
 8019a74:	9f02      	ldr	r7, [sp, #8]
 8019a76:	f06f 0101 	mvn.w	r1, #1
 8019a7a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019a7e:	fb01 f608 	mul.w	r6, r1, r8
 8019a82:	9903      	ldr	r1, [sp, #12]
 8019a84:	538f      	strh	r7, [r1, r6]
 8019a86:	4470      	add	r0, lr
 8019a88:	4462      	add	r2, ip
 8019a8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a8e:	e788      	b.n	80199a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019a90:	b005      	add	sp, #20
 8019a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a9a:	b087      	sub	sp, #28
 8019a9c:	468b      	mov	fp, r1
 8019a9e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019aa0:	9203      	str	r2, [sp, #12]
 8019aa2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8019aa6:	9204      	str	r2, [sp, #16]
 8019aa8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8019aac:	6841      	ldr	r1, [r0, #4]
 8019aae:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8019ab2:	fb01 2505 	mla	r5, r1, r5, r2
 8019ab6:	6802      	ldr	r2, [r0, #0]
 8019ab8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019abc:	f8d9 2000 	ldr.w	r2, [r9]
 8019ac0:	9201      	str	r2, [sp, #4]
 8019ac2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019ac6:	f1bb 0f00 	cmp.w	fp, #0
 8019aca:	dc03      	bgt.n	8019ad4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019acc:	9a03      	ldr	r2, [sp, #12]
 8019ace:	2a00      	cmp	r2, #0
 8019ad0:	f340 8159 	ble.w	8019d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019ad4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019ad6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019ada:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019ade:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019ae2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019ae4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019ae8:	2b00      	cmp	r3, #0
 8019aea:	dd0e      	ble.n	8019b0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019aec:	1402      	asrs	r2, r0, #16
 8019aee:	d405      	bmi.n	8019afc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019af0:	42ba      	cmp	r2, r7
 8019af2:	da03      	bge.n	8019afc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019af4:	140a      	asrs	r2, r1, #16
 8019af6:	d401      	bmi.n	8019afc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019af8:	42b2      	cmp	r2, r6
 8019afa:	db07      	blt.n	8019b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019afc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019afe:	4410      	add	r0, r2
 8019b00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019b02:	3b01      	subs	r3, #1
 8019b04:	4411      	add	r1, r2
 8019b06:	3502      	adds	r5, #2
 8019b08:	e7ee      	b.n	8019ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019b0a:	d017      	beq.n	8019b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019b0c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019b0e:	1e5a      	subs	r2, r3, #1
 8019b10:	fb04 0402 	mla	r4, r4, r2, r0
 8019b14:	1424      	asrs	r4, r4, #16
 8019b16:	d409      	bmi.n	8019b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019b18:	42bc      	cmp	r4, r7
 8019b1a:	da07      	bge.n	8019b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019b1c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019b1e:	fb04 1202 	mla	r2, r4, r2, r1
 8019b22:	1412      	asrs	r2, r2, #16
 8019b24:	d402      	bmi.n	8019b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019b26:	42b2      	cmp	r2, r6
 8019b28:	f2c0 80bf 	blt.w	8019caa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019b2c:	2700      	movs	r7, #0
 8019b2e:	19da      	adds	r2, r3, r7
 8019b30:	2a00      	cmp	r2, #0
 8019b32:	dc3e      	bgt.n	8019bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019b34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b38:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019b3c:	f1bb 0f00 	cmp.w	fp, #0
 8019b40:	f340 8121 	ble.w	8019d86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019b44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b52:	f1bb 0b01 	subs.w	fp, fp, #1
 8019b56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b5e:	eeb0 6a62 	vmov.f32	s12, s5
 8019b62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b6e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019b72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b76:	eeb0 6a43 	vmov.f32	s12, s6
 8019b7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b7e:	ee12 2a90 	vmov	r2, s5
 8019b82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b8a:	ee13 2a10 	vmov	r2, s6
 8019b8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b92:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019b94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b96:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b9a:	9a03      	ldr	r2, [sp, #12]
 8019b9c:	9314      	str	r3, [sp, #80]	@ 0x50
 8019b9e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019ba2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019ba4:	eeb0 3a67 	vmov.f32	s6, s15
 8019ba8:	bf08      	it	eq
 8019baa:	4613      	moveq	r3, r2
 8019bac:	eef0 2a47 	vmov.f32	s5, s14
 8019bb0:	e789      	b.n	8019ac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019bb2:	1406      	asrs	r6, r0, #16
 8019bb4:	d42d      	bmi.n	8019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019bb6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019bba:	42b4      	cmp	r4, r6
 8019bbc:	dd29      	ble.n	8019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019bbe:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8019bc2:	d426      	bmi.n	8019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019bc4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019bc8:	4562      	cmp	r2, ip
 8019bca:	dd22      	ble.n	8019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019bcc:	b224      	sxth	r4, r4
 8019bce:	9a01      	ldr	r2, [sp, #4]
 8019bd0:	fb0c 6404 	mla	r4, ip, r4, r6
 8019bd4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019bd8:	0e22      	lsrs	r2, r4, #24
 8019bda:	d01a      	beq.n	8019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019bdc:	9e04      	ldr	r6, [sp, #16]
 8019bde:	4372      	muls	r2, r6
 8019be0:	1c56      	adds	r6, r2, #1
 8019be2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019be6:	1212      	asrs	r2, r2, #8
 8019be8:	0a26      	lsrs	r6, r4, #8
 8019bea:	2aff      	cmp	r2, #255	@ 0xff
 8019bec:	9605      	str	r6, [sp, #20]
 8019bee:	d116      	bne.n	8019c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019bf0:	f06f 0201 	mvn.w	r2, #1
 8019bf4:	fb02 fc07 	mul.w	ip, r2, r7
 8019bf8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019bfc:	0962      	lsrs	r2, r4, #5
 8019bfe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019c02:	f026 0607 	bic.w	r6, r6, #7
 8019c06:	4316      	orrs	r6, r2
 8019c08:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019c0c:	4326      	orrs	r6, r4
 8019c0e:	f825 600c 	strh.w	r6, [r5, ip]
 8019c12:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019c14:	4410      	add	r0, r2
 8019c16:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019c18:	3f01      	subs	r7, #1
 8019c1a:	4411      	add	r1, r2
 8019c1c:	e787      	b.n	8019b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019c1e:	f06f 0601 	mvn.w	r6, #1
 8019c22:	437e      	muls	r6, r7
 8019c24:	fa1f fa82 	uxth.w	sl, r2
 8019c28:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019c2c:	9602      	str	r6, [sp, #8]
 8019c2e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019c32:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019c36:	43d2      	mvns	r2, r2
 8019c38:	b2d2      	uxtb	r2, r2
 8019c3a:	fb1c fc0a 	smulbb	ip, ip, sl
 8019c3e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019c42:	fb0e ce02 	mla	lr, lr, r2, ip
 8019c46:	b2e4      	uxtb	r4, r4
 8019c48:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019c4c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019c50:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019c54:	fa5f f888 	uxtb.w	r8, r8
 8019c58:	fb14 f40a 	smulbb	r4, r4, sl
 8019c5c:	fb08 4402 	mla	r4, r8, r2, r4
 8019c60:	fa1f fe8e 	uxth.w	lr, lr
 8019c64:	fb16 f60a 	smulbb	r6, r6, sl
 8019c68:	b2a4      	uxth	r4, r4
 8019c6a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019c6e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019c72:	f10e 0201 	add.w	r2, lr, #1
 8019c76:	1c66      	adds	r6, r4, #1
 8019c78:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019c7c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019c80:	fa1f fc8c 	uxth.w	ip, ip
 8019c84:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019c88:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019c8c:	ea46 0e0e 	orr.w	lr, r6, lr
 8019c90:	f10c 0601 	add.w	r6, ip, #1
 8019c94:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019c98:	0976      	lsrs	r6, r6, #5
 8019c9a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019c9e:	9a02      	ldr	r2, [sp, #8]
 8019ca0:	ea4e 0e06 	orr.w	lr, lr, r6
 8019ca4:	f825 e002 	strh.w	lr, [r5, r2]
 8019ca8:	e7b3      	b.n	8019c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019caa:	f04f 0800 	mov.w	r8, #0
 8019cae:	eba3 0208 	sub.w	r2, r3, r8
 8019cb2:	2a00      	cmp	r2, #0
 8019cb4:	f77f af3e 	ble.w	8019b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019cb8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019cbc:	1404      	asrs	r4, r0, #16
 8019cbe:	140a      	asrs	r2, r1, #16
 8019cc0:	fb06 4202 	mla	r2, r6, r2, r4
 8019cc4:	9c01      	ldr	r4, [sp, #4]
 8019cc6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019cca:	0e22      	lsrs	r2, r4, #24
 8019ccc:	d016      	beq.n	8019cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019cce:	9e04      	ldr	r6, [sp, #16]
 8019cd0:	4372      	muls	r2, r6
 8019cd2:	1c56      	adds	r6, r2, #1
 8019cd4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019cd8:	1212      	asrs	r2, r2, #8
 8019cda:	2aff      	cmp	r2, #255	@ 0xff
 8019cdc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8019ce0:	d113      	bne.n	8019d0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8019ce2:	0962      	lsrs	r2, r4, #5
 8019ce4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019ce8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019cec:	f026 0607 	bic.w	r6, r6, #7
 8019cf0:	4316      	orrs	r6, r2
 8019cf2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019cf6:	4326      	orrs	r6, r4
 8019cf8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019cfc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019cfe:	4410      	add	r0, r2
 8019d00:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019d02:	f108 0801 	add.w	r8, r8, #1
 8019d06:	4411      	add	r1, r2
 8019d08:	e7d1      	b.n	8019cae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019d0a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019d0e:	fa1f fa82 	uxth.w	sl, r2
 8019d12:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019d16:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019d1a:	43d2      	mvns	r2, r2
 8019d1c:	b2d2      	uxtb	r2, r2
 8019d1e:	fb17 f70a 	smulbb	r7, r7, sl
 8019d22:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019d26:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019d2a:	b2e4      	uxtb	r4, r4
 8019d2c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019d30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019d34:	fa5f fe8e 	uxtb.w	lr, lr
 8019d38:	fb14 f40a 	smulbb	r4, r4, sl
 8019d3c:	fb0e 4402 	mla	r4, lr, r2, r4
 8019d40:	b2f6      	uxtb	r6, r6
 8019d42:	fa1f fc8c 	uxth.w	ip, ip
 8019d46:	fb16 f60a 	smulbb	r6, r6, sl
 8019d4a:	b2a4      	uxth	r4, r4
 8019d4c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019d50:	fb07 6702 	mla	r7, r7, r2, r6
 8019d54:	f10c 0201 	add.w	r2, ip, #1
 8019d58:	1c66      	adds	r6, r4, #1
 8019d5a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019d5e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019d62:	b2bf      	uxth	r7, r7
 8019d64:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019d68:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019d6c:	ea46 0c0c 	orr.w	ip, r6, ip
 8019d70:	1c7e      	adds	r6, r7, #1
 8019d72:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019d76:	0976      	lsrs	r6, r6, #5
 8019d78:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019d7c:	ea4c 0c06 	orr.w	ip, ip, r6
 8019d80:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019d84:	e7ba      	b.n	8019cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019d86:	b007      	add	sp, #28
 8019d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d90:	b085      	sub	sp, #20
 8019d92:	468b      	mov	fp, r1
 8019d94:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019d96:	9203      	str	r2, [sp, #12]
 8019d98:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019d9c:	6841      	ldr	r1, [r0, #4]
 8019d9e:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8019da2:	fb01 2404 	mla	r4, r1, r4, r2
 8019da6:	6802      	ldr	r2, [r0, #0]
 8019da8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019dac:	f8d8 2000 	ldr.w	r2, [r8]
 8019db0:	9201      	str	r2, [sp, #4]
 8019db2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019db6:	f1bb 0f00 	cmp.w	fp, #0
 8019dba:	dc03      	bgt.n	8019dc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019dbc:	9a03      	ldr	r2, [sp, #12]
 8019dbe:	2a00      	cmp	r2, #0
 8019dc0:	f340 814f 	ble.w	801a062 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019dc4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019dc6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019dca:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019dce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019dd2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019dd4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019dd8:	2b00      	cmp	r3, #0
 8019dda:	dd0e      	ble.n	8019dfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019ddc:	1408      	asrs	r0, r1, #16
 8019dde:	d405      	bmi.n	8019dec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019de0:	42b8      	cmp	r0, r7
 8019de2:	da03      	bge.n	8019dec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019de4:	1410      	asrs	r0, r2, #16
 8019de6:	d401      	bmi.n	8019dec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019de8:	42b0      	cmp	r0, r6
 8019dea:	db07      	blt.n	8019dfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019dec:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019dee:	4401      	add	r1, r0
 8019df0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019df2:	3b01      	subs	r3, #1
 8019df4:	4402      	add	r2, r0
 8019df6:	3402      	adds	r4, #2
 8019df8:	e7ee      	b.n	8019dd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019dfa:	d017      	beq.n	8019e2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019dfc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019dfe:	1e58      	subs	r0, r3, #1
 8019e00:	fb05 1500 	mla	r5, r5, r0, r1
 8019e04:	142d      	asrs	r5, r5, #16
 8019e06:	d409      	bmi.n	8019e1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019e08:	42bd      	cmp	r5, r7
 8019e0a:	da07      	bge.n	8019e1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019e0c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019e0e:	fb05 2000 	mla	r0, r5, r0, r2
 8019e12:	1400      	asrs	r0, r0, #16
 8019e14:	d402      	bmi.n	8019e1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019e16:	42b0      	cmp	r0, r6
 8019e18:	f2c0 80ba 	blt.w	8019f90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019e1c:	2600      	movs	r6, #0
 8019e1e:	1998      	adds	r0, r3, r6
 8019e20:	2800      	cmp	r0, #0
 8019e22:	dc3e      	bgt.n	8019ea2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e2c:	f1bb 0f00 	cmp.w	fp, #0
 8019e30:	f340 8117 	ble.w	801a062 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019e34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019e40:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019e42:	f1bb 0b01 	subs.w	fp, fp, #1
 8019e46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e4e:	eeb0 6a62 	vmov.f32	s12, s5
 8019e52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e5e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8019e62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e66:	eeb0 6a43 	vmov.f32	s12, s6
 8019e6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e6e:	ee12 2a90 	vmov	r2, s5
 8019e72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e76:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e7a:	ee13 2a10 	vmov	r2, s6
 8019e7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e82:	9311      	str	r3, [sp, #68]	@ 0x44
 8019e84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019e86:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e8a:	9a03      	ldr	r2, [sp, #12]
 8019e8c:	9312      	str	r3, [sp, #72]	@ 0x48
 8019e8e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019e92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019e94:	eeb0 3a67 	vmov.f32	s6, s15
 8019e98:	bf08      	it	eq
 8019e9a:	4613      	moveq	r3, r2
 8019e9c:	eef0 2a47 	vmov.f32	s5, s14
 8019ea0:	e789      	b.n	8019db6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019ea2:	140f      	asrs	r7, r1, #16
 8019ea4:	d424      	bmi.n	8019ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019ea6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019eaa:	42bd      	cmp	r5, r7
 8019eac:	dd20      	ble.n	8019ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019eae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019eb2:	d41d      	bmi.n	8019ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019eb4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019eb8:	4560      	cmp	r0, ip
 8019eba:	dd19      	ble.n	8019ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019ebc:	b22d      	sxth	r5, r5
 8019ebe:	fb0c 7505 	mla	r5, ip, r5, r7
 8019ec2:	9801      	ldr	r0, [sp, #4]
 8019ec4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019ec8:	0e07      	lsrs	r7, r0, #24
 8019eca:	2fff      	cmp	r7, #255	@ 0xff
 8019ecc:	d116      	bne.n	8019efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019ece:	f06f 0501 	mvn.w	r5, #1
 8019ed2:	fb05 f706 	mul.w	r7, r5, r6
 8019ed6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8019eda:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019ede:	0945      	lsrs	r5, r0, #5
 8019ee0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019ee4:	ea4c 0505 	orr.w	r5, ip, r5
 8019ee8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019eec:	4305      	orrs	r5, r0
 8019eee:	53e5      	strh	r5, [r4, r7]
 8019ef0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019ef2:	4401      	add	r1, r0
 8019ef4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019ef6:	3e01      	subs	r6, #1
 8019ef8:	4402      	add	r2, r0
 8019efa:	e790      	b.n	8019e1e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019efc:	b2fd      	uxtb	r5, r7
 8019efe:	2f00      	cmp	r7, #0
 8019f00:	d0f6      	beq.n	8019ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019f02:	f06f 0701 	mvn.w	r7, #1
 8019f06:	4377      	muls	r7, r6
 8019f08:	fa1f f985 	uxth.w	r9, r5
 8019f0c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8019f10:	9702      	str	r7, [sp, #8]
 8019f12:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019f16:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019f1a:	43ed      	mvns	r5, r5
 8019f1c:	b2ed      	uxtb	r5, r5
 8019f1e:	fb17 f709 	smulbb	r7, r7, r9
 8019f22:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019f26:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019f2a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019f2e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019f32:	b2c0      	uxtb	r0, r0
 8019f34:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f38:	fa5f fe8e 	uxtb.w	lr, lr
 8019f3c:	fb10 f009 	smulbb	r0, r0, r9
 8019f40:	fb0e 0005 	mla	r0, lr, r5, r0
 8019f44:	b280      	uxth	r0, r0
 8019f46:	fa1f fc8c 	uxth.w	ip, ip
 8019f4a:	fb1a fa09 	smulbb	sl, sl, r9
 8019f4e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019f52:	fb07 a705 	mla	r7, r7, r5, sl
 8019f56:	f100 0a01 	add.w	sl, r0, #1
 8019f5a:	f10c 0501 	add.w	r5, ip, #1
 8019f5e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019f62:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019f66:	b2bf      	uxth	r7, r7
 8019f68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f6c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019f70:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019f74:	f107 0a01 	add.w	sl, r7, #1
 8019f78:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019f7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f80:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019f84:	9802      	ldr	r0, [sp, #8]
 8019f86:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019f8a:	f824 c000 	strh.w	ip, [r4, r0]
 8019f8e:	e7af      	b.n	8019ef0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019f90:	f04f 0e00 	mov.w	lr, #0
 8019f94:	eba3 000e 	sub.w	r0, r3, lr
 8019f98:	2800      	cmp	r0, #0
 8019f9a:	f77f af43 	ble.w	8019e24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019f9e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019fa2:	140d      	asrs	r5, r1, #16
 8019fa4:	1410      	asrs	r0, r2, #16
 8019fa6:	fb06 5000 	mla	r0, r6, r0, r5
 8019faa:	9d01      	ldr	r5, [sp, #4]
 8019fac:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019fb0:	0e2e      	lsrs	r6, r5, #24
 8019fb2:	2eff      	cmp	r6, #255	@ 0xff
 8019fb4:	d112      	bne.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8019fb6:	482c      	ldr	r0, [pc, #176]	@ (801a068 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019fb8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019fbc:	0968      	lsrs	r0, r5, #5
 8019fbe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019fc2:	4330      	orrs	r0, r6
 8019fc4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019fc8:	4328      	orrs	r0, r5
 8019fca:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8019fce:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019fd0:	4401      	add	r1, r0
 8019fd2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019fd4:	f10e 0e01 	add.w	lr, lr, #1
 8019fd8:	4402      	add	r2, r0
 8019fda:	e7db      	b.n	8019f94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019fdc:	b2f0      	uxtb	r0, r6
 8019fde:	2e00      	cmp	r6, #0
 8019fe0:	d0f5      	beq.n	8019fce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019fe2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019fe6:	fa1f f980 	uxth.w	r9, r0
 8019fea:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019fee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019ff2:	43c0      	mvns	r0, r0
 8019ff4:	b2c0      	uxtb	r0, r0
 8019ff6:	fb16 f609 	smulbb	r6, r6, r9
 8019ffa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019ffe:	fb07 6700 	mla	r7, r7, r0, r6
 801a002:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a006:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a00a:	b2ed      	uxtb	r5, r5
 801a00c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a010:	fa5f fc8c 	uxtb.w	ip, ip
 801a014:	fb15 f509 	smulbb	r5, r5, r9
 801a018:	fb0c 5500 	mla	r5, ip, r0, r5
 801a01c:	b2bf      	uxth	r7, r7
 801a01e:	fb1a fa09 	smulbb	sl, sl, r9
 801a022:	b2ad      	uxth	r5, r5
 801a024:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a028:	fb06 a600 	mla	r6, r6, r0, sl
 801a02c:	1c78      	adds	r0, r7, #1
 801a02e:	f105 0a01 	add.w	sl, r5, #1
 801a032:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a036:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a03a:	b2b6      	uxth	r6, r6
 801a03c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a040:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a044:	ea4a 0707 	orr.w	r7, sl, r7
 801a048:	f106 0a01 	add.w	sl, r6, #1
 801a04c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a050:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a054:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a058:	ea47 070a 	orr.w	r7, r7, sl
 801a05c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a060:	e7b5      	b.n	8019fce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a062:	b005      	add	sp, #20
 801a064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a068:	fffff800 	.word	0xfffff800

0801a06c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a070:	b087      	sub	sp, #28
 801a072:	468b      	mov	fp, r1
 801a074:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a076:	9203      	str	r2, [sp, #12]
 801a078:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a07c:	9204      	str	r2, [sp, #16]
 801a07e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801a082:	6841      	ldr	r1, [r0, #4]
 801a084:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801a088:	fb01 2404 	mla	r4, r1, r4, r2
 801a08c:	6802      	ldr	r2, [r0, #0]
 801a08e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a092:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a096:	3201      	adds	r2, #1
 801a098:	f022 0201 	bic.w	r2, r2, #1
 801a09c:	9200      	str	r2, [sp, #0]
 801a09e:	f8d9 2000 	ldr.w	r2, [r9]
 801a0a2:	9201      	str	r2, [sp, #4]
 801a0a4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a0a8:	f1bb 0f00 	cmp.w	fp, #0
 801a0ac:	dc03      	bgt.n	801a0b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a0ae:	9a03      	ldr	r2, [sp, #12]
 801a0b0:	2a00      	cmp	r2, #0
 801a0b2:	f340 8169 	ble.w	801a388 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a0b6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a0b8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a0bc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a0c0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a0c4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a0c6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a0ca:	2b00      	cmp	r3, #0
 801a0cc:	dd0e      	ble.n	801a0ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a0ce:	1402      	asrs	r2, r0, #16
 801a0d0:	d405      	bmi.n	801a0de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a0d2:	42ba      	cmp	r2, r7
 801a0d4:	da03      	bge.n	801a0de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a0d6:	140a      	asrs	r2, r1, #16
 801a0d8:	d401      	bmi.n	801a0de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a0da:	42b2      	cmp	r2, r6
 801a0dc:	db07      	blt.n	801a0ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a0de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a0e0:	4410      	add	r0, r2
 801a0e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a0e4:	3b01      	subs	r3, #1
 801a0e6:	4411      	add	r1, r2
 801a0e8:	3402      	adds	r4, #2
 801a0ea:	e7ee      	b.n	801a0ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a0ec:	d017      	beq.n	801a11e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a0ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a0f0:	1e5a      	subs	r2, r3, #1
 801a0f2:	fb05 0502 	mla	r5, r5, r2, r0
 801a0f6:	142d      	asrs	r5, r5, #16
 801a0f8:	d409      	bmi.n	801a10e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a0fa:	42bd      	cmp	r5, r7
 801a0fc:	da07      	bge.n	801a10e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a0fe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a100:	fb05 1202 	mla	r2, r5, r2, r1
 801a104:	1412      	asrs	r2, r2, #16
 801a106:	d402      	bmi.n	801a10e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a108:	42b2      	cmp	r2, r6
 801a10a:	f2c0 80c7 	blt.w	801a29c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a10e:	2700      	movs	r7, #0
 801a110:	19da      	adds	r2, r3, r7
 801a112:	2a00      	cmp	r2, #0
 801a114:	dc3e      	bgt.n	801a194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a116:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a11a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a11e:	f1bb 0f00 	cmp.w	fp, #0
 801a122:	f340 8131 	ble.w	801a388 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a126:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a12a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a12e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a132:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a134:	f1bb 0b01 	subs.w	fp, fp, #1
 801a138:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a13c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a140:	eeb0 6a62 	vmov.f32	s12, s5
 801a144:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a148:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a14c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a150:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801a154:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a158:	eeb0 6a43 	vmov.f32	s12, s6
 801a15c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a160:	ee12 2a90 	vmov	r2, s5
 801a164:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a168:	fb92 f3f3 	sdiv	r3, r2, r3
 801a16c:	ee13 2a10 	vmov	r2, s6
 801a170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a174:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a176:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a178:	fb92 f3f3 	sdiv	r3, r2, r3
 801a17c:	9a03      	ldr	r2, [sp, #12]
 801a17e:	9314      	str	r3, [sp, #80]	@ 0x50
 801a180:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801a184:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a186:	eeb0 3a67 	vmov.f32	s6, s15
 801a18a:	bf08      	it	eq
 801a18c:	4613      	moveq	r3, r2
 801a18e:	eef0 2a47 	vmov.f32	s5, s14
 801a192:	e789      	b.n	801a0a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a194:	1405      	asrs	r5, r0, #16
 801a196:	d435      	bmi.n	801a204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a198:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a19c:	42aa      	cmp	r2, r5
 801a19e:	dd31      	ble.n	801a204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1a0:	140e      	asrs	r6, r1, #16
 801a1a2:	d42f      	bmi.n	801a204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1a4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a1a8:	42b2      	cmp	r2, r6
 801a1aa:	dd2b      	ble.n	801a204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1ac:	9a00      	ldr	r2, [sp, #0]
 801a1ae:	fb06 5502 	mla	r5, r6, r2, r5
 801a1b2:	086a      	lsrs	r2, r5, #1
 801a1b4:	9e01      	ldr	r6, [sp, #4]
 801a1b6:	5cb2      	ldrb	r2, [r6, r2]
 801a1b8:	07ee      	lsls	r6, r5, #31
 801a1ba:	bf54      	ite	pl
 801a1bc:	f002 020f 	andpl.w	r2, r2, #15
 801a1c0:	1112      	asrmi	r2, r2, #4
 801a1c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a1c6:	b2d2      	uxtb	r2, r2
 801a1c8:	b1e2      	cbz	r2, 801a204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a1ca:	9d04      	ldr	r5, [sp, #16]
 801a1cc:	436a      	muls	r2, r5
 801a1ce:	1c55      	adds	r5, r2, #1
 801a1d0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a1d4:	4d6e      	ldr	r5, [pc, #440]	@ (801a390 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a1d6:	682d      	ldr	r5, [r5, #0]
 801a1d8:	1212      	asrs	r2, r2, #8
 801a1da:	0a2e      	lsrs	r6, r5, #8
 801a1dc:	2aff      	cmp	r2, #255	@ 0xff
 801a1de:	9605      	str	r6, [sp, #20]
 801a1e0:	d116      	bne.n	801a210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a1e2:	f06f 0201 	mvn.w	r2, #1
 801a1e6:	fb02 fc07 	mul.w	ip, r2, r7
 801a1ea:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801a1ee:	096a      	lsrs	r2, r5, #5
 801a1f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a1f4:	f026 0607 	bic.w	r6, r6, #7
 801a1f8:	4316      	orrs	r6, r2
 801a1fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a1fe:	432e      	orrs	r6, r5
 801a200:	f824 600c 	strh.w	r6, [r4, ip]
 801a204:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a206:	4410      	add	r0, r2
 801a208:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a20a:	3f01      	subs	r7, #1
 801a20c:	4411      	add	r1, r2
 801a20e:	e77f      	b.n	801a110 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a210:	f06f 0601 	mvn.w	r6, #1
 801a214:	437e      	muls	r6, r7
 801a216:	fa1f fa82 	uxth.w	sl, r2
 801a21a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a21e:	9602      	str	r6, [sp, #8]
 801a220:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a224:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a228:	43d2      	mvns	r2, r2
 801a22a:	b2d2      	uxtb	r2, r2
 801a22c:	fb1c fc0a 	smulbb	ip, ip, sl
 801a230:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801a234:	fb0e ce02 	mla	lr, lr, r2, ip
 801a238:	b2ed      	uxtb	r5, r5
 801a23a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a23e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a242:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a246:	fa5f f888 	uxtb.w	r8, r8
 801a24a:	fb15 f50a 	smulbb	r5, r5, sl
 801a24e:	fb08 5502 	mla	r5, r8, r2, r5
 801a252:	fa1f fe8e 	uxth.w	lr, lr
 801a256:	fb16 f60a 	smulbb	r6, r6, sl
 801a25a:	b2ad      	uxth	r5, r5
 801a25c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801a260:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a264:	f10e 0201 	add.w	r2, lr, #1
 801a268:	1c6e      	adds	r6, r5, #1
 801a26a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a26e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a272:	fa1f fc8c 	uxth.w	ip, ip
 801a276:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a27a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801a27e:	ea46 0e0e 	orr.w	lr, r6, lr
 801a282:	f10c 0601 	add.w	r6, ip, #1
 801a286:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a28a:	0976      	lsrs	r6, r6, #5
 801a28c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a290:	9a02      	ldr	r2, [sp, #8]
 801a292:	ea4e 0e06 	orr.w	lr, lr, r6
 801a296:	f824 e002 	strh.w	lr, [r4, r2]
 801a29a:	e7b3      	b.n	801a204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a29c:	f04f 0800 	mov.w	r8, #0
 801a2a0:	eba3 0208 	sub.w	r2, r3, r8
 801a2a4:	2a00      	cmp	r2, #0
 801a2a6:	f77f af36 	ble.w	801a116 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a2aa:	9e00      	ldr	r6, [sp, #0]
 801a2ac:	1402      	asrs	r2, r0, #16
 801a2ae:	140d      	asrs	r5, r1, #16
 801a2b0:	fb06 2505 	mla	r5, r6, r5, r2
 801a2b4:	086a      	lsrs	r2, r5, #1
 801a2b6:	9e01      	ldr	r6, [sp, #4]
 801a2b8:	5cb2      	ldrb	r2, [r6, r2]
 801a2ba:	07ed      	lsls	r5, r5, #31
 801a2bc:	bf54      	ite	pl
 801a2be:	f002 020f 	andpl.w	r2, r2, #15
 801a2c2:	1112      	asrmi	r2, r2, #4
 801a2c4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a2c8:	b2d2      	uxtb	r2, r2
 801a2ca:	b1c2      	cbz	r2, 801a2fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a2cc:	9d04      	ldr	r5, [sp, #16]
 801a2ce:	436a      	muls	r2, r5
 801a2d0:	1c55      	adds	r5, r2, #1
 801a2d2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a2d6:	4d2e      	ldr	r5, [pc, #184]	@ (801a390 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a2d8:	1212      	asrs	r2, r2, #8
 801a2da:	682e      	ldr	r6, [r5, #0]
 801a2dc:	2aff      	cmp	r2, #255	@ 0xff
 801a2de:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a2e2:	d113      	bne.n	801a30c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a2e4:	0972      	lsrs	r2, r6, #5
 801a2e6:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801a2ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a2ee:	f025 0507 	bic.w	r5, r5, #7
 801a2f2:	4315      	orrs	r5, r2
 801a2f4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a2f8:	4335      	orrs	r5, r6
 801a2fa:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a2fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a300:	4410      	add	r0, r2
 801a302:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a304:	f108 0801 	add.w	r8, r8, #1
 801a308:	4411      	add	r1, r2
 801a30a:	e7c9      	b.n	801a2a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a30c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a310:	fa1f fa82 	uxth.w	sl, r2
 801a314:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a318:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a31c:	43d2      	mvns	r2, r2
 801a31e:	b2d2      	uxtb	r2, r2
 801a320:	fb17 f70a 	smulbb	r7, r7, sl
 801a324:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a328:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a32c:	b2f6      	uxtb	r6, r6
 801a32e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a332:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a336:	fa5f fe8e 	uxtb.w	lr, lr
 801a33a:	fb16 f60a 	smulbb	r6, r6, sl
 801a33e:	fb0e 6602 	mla	r6, lr, r2, r6
 801a342:	b2ed      	uxtb	r5, r5
 801a344:	fa1f fc8c 	uxth.w	ip, ip
 801a348:	fb15 f50a 	smulbb	r5, r5, sl
 801a34c:	b2b6      	uxth	r6, r6
 801a34e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a352:	fb07 5702 	mla	r7, r7, r2, r5
 801a356:	f10c 0201 	add.w	r2, ip, #1
 801a35a:	1c75      	adds	r5, r6, #1
 801a35c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a360:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a364:	b2bf      	uxth	r7, r7
 801a366:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a36a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a36e:	ea45 0c0c 	orr.w	ip, r5, ip
 801a372:	1c7d      	adds	r5, r7, #1
 801a374:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a378:	096d      	lsrs	r5, r5, #5
 801a37a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a37e:	ea4c 0c05 	orr.w	ip, ip, r5
 801a382:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a386:	e7ba      	b.n	801a2fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a388:	b007      	add	sp, #28
 801a38a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a38e:	bf00      	nop
 801a390:	20013f70 	.word	0x20013f70

0801a394 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a398:	b087      	sub	sp, #28
 801a39a:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801a6a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a39e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a3a0:	9205      	str	r2, [sp, #20]
 801a3a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801a3a6:	9101      	str	r1, [sp, #4]
 801a3a8:	6841      	ldr	r1, [r0, #4]
 801a3aa:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801a3ae:	fb01 2404 	mla	r4, r1, r4, r2
 801a3b2:	6802      	ldr	r2, [r0, #0]
 801a3b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a3b8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a3bc:	3201      	adds	r2, #1
 801a3be:	f022 0201 	bic.w	r2, r2, #1
 801a3c2:	9202      	str	r2, [sp, #8]
 801a3c4:	f8db 2000 	ldr.w	r2, [fp]
 801a3c8:	9203      	str	r2, [sp, #12]
 801a3ca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a3ce:	9a01      	ldr	r2, [sp, #4]
 801a3d0:	2a00      	cmp	r2, #0
 801a3d2:	dc03      	bgt.n	801a3dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a3d4:	9a05      	ldr	r2, [sp, #20]
 801a3d6:	2a00      	cmp	r2, #0
 801a3d8:	f340 8162 	ble.w	801a6a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a3dc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a3de:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a3e2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a3e6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801a3ea:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a3ec:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a3f0:	2b00      	cmp	r3, #0
 801a3f2:	dd0e      	ble.n	801a412 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a3f4:	1402      	asrs	r2, r0, #16
 801a3f6:	d405      	bmi.n	801a404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a3f8:	42ba      	cmp	r2, r7
 801a3fa:	da03      	bge.n	801a404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a3fc:	140a      	asrs	r2, r1, #16
 801a3fe:	d401      	bmi.n	801a404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a400:	42b2      	cmp	r2, r6
 801a402:	db07      	blt.n	801a414 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a404:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a406:	4410      	add	r0, r2
 801a408:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a40a:	3b01      	subs	r3, #1
 801a40c:	4411      	add	r1, r2
 801a40e:	3402      	adds	r4, #2
 801a410:	e7ee      	b.n	801a3f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a412:	d017      	beq.n	801a444 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a414:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a416:	1e5a      	subs	r2, r3, #1
 801a418:	fb05 0502 	mla	r5, r5, r2, r0
 801a41c:	142d      	asrs	r5, r5, #16
 801a41e:	d409      	bmi.n	801a434 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a420:	42bd      	cmp	r5, r7
 801a422:	da07      	bge.n	801a434 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a424:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a426:	fb05 1202 	mla	r2, r5, r2, r1
 801a42a:	1412      	asrs	r2, r2, #16
 801a42c:	d402      	bmi.n	801a434 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a42e:	42b2      	cmp	r2, r6
 801a430:	f2c0 80c3 	blt.w	801a5ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a434:	2500      	movs	r5, #0
 801a436:	195a      	adds	r2, r3, r5
 801a438:	2a00      	cmp	r2, #0
 801a43a:	dc3f      	bgt.n	801a4bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a43c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a440:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a444:	9b01      	ldr	r3, [sp, #4]
 801a446:	2b00      	cmp	r3, #0
 801a448:	f340 812a 	ble.w	801a6a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a44c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a450:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a454:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a458:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a45a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a45e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a462:	eeb0 6a62 	vmov.f32	s12, s5
 801a466:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a46a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a46e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a472:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801a476:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a47a:	eeb0 6a43 	vmov.f32	s12, s6
 801a47e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a482:	ee12 2a90 	vmov	r2, s5
 801a486:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a48a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a48e:	ee13 2a10 	vmov	r2, s6
 801a492:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a494:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a496:	fb92 f3f3 	sdiv	r3, r2, r3
 801a49a:	9314      	str	r3, [sp, #80]	@ 0x50
 801a49c:	9b01      	ldr	r3, [sp, #4]
 801a49e:	9a05      	ldr	r2, [sp, #20]
 801a4a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4a4:	3b01      	subs	r3, #1
 801a4a6:	9301      	str	r3, [sp, #4]
 801a4a8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801a4ac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a4ae:	eeb0 3a67 	vmov.f32	s6, s15
 801a4b2:	bf08      	it	eq
 801a4b4:	4613      	moveq	r3, r2
 801a4b6:	eef0 2a47 	vmov.f32	s5, s14
 801a4ba:	e788      	b.n	801a3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a4bc:	1406      	asrs	r6, r0, #16
 801a4be:	d42c      	bmi.n	801a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a4c0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a4c4:	42b2      	cmp	r2, r6
 801a4c6:	dd28      	ble.n	801a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a4c8:	140f      	asrs	r7, r1, #16
 801a4ca:	d426      	bmi.n	801a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a4cc:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a4d0:	42ba      	cmp	r2, r7
 801a4d2:	dd22      	ble.n	801a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a4d4:	9a02      	ldr	r2, [sp, #8]
 801a4d6:	fb07 6602 	mla	r6, r7, r2, r6
 801a4da:	0872      	lsrs	r2, r6, #1
 801a4dc:	9f03      	ldr	r7, [sp, #12]
 801a4de:	5cba      	ldrb	r2, [r7, r2]
 801a4e0:	07f6      	lsls	r6, r6, #31
 801a4e2:	bf54      	ite	pl
 801a4e4:	f002 020f 	andpl.w	r2, r2, #15
 801a4e8:	1112      	asrmi	r2, r2, #4
 801a4ea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a4ee:	b2d2      	uxtb	r2, r2
 801a4f0:	2aff      	cmp	r2, #255	@ 0xff
 801a4f2:	d118      	bne.n	801a526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a4f4:	f8d8 2000 	ldr.w	r2, [r8]
 801a4f8:	f06f 0601 	mvn.w	r6, #1
 801a4fc:	fb06 f705 	mul.w	r7, r6, r5
 801a500:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801a504:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a508:	0956      	lsrs	r6, r2, #5
 801a50a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a50e:	ea4c 0606 	orr.w	r6, ip, r6
 801a512:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a516:	4316      	orrs	r6, r2
 801a518:	53e6      	strh	r6, [r4, r7]
 801a51a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a51c:	4410      	add	r0, r2
 801a51e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a520:	3d01      	subs	r5, #1
 801a522:	4411      	add	r1, r2
 801a524:	e787      	b.n	801a436 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a526:	2a00      	cmp	r2, #0
 801a528:	d0f7      	beq.n	801a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a52a:	f06f 0601 	mvn.w	r6, #1
 801a52e:	436e      	muls	r6, r5
 801a530:	f8d8 c000 	ldr.w	ip, [r8]
 801a534:	f834 e006 	ldrh.w	lr, [r4, r6]
 801a538:	9604      	str	r6, [sp, #16]
 801a53a:	fa1f f982 	uxth.w	r9, r2
 801a53e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a542:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801a546:	43d2      	mvns	r2, r2
 801a548:	b2d2      	uxtb	r2, r2
 801a54a:	fb16 f609 	smulbb	r6, r6, r9
 801a54e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a552:	fb07 6702 	mla	r7, r7, r2, r6
 801a556:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801a55a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a55e:	fa5f fc8c 	uxtb.w	ip, ip
 801a562:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a566:	fa5f fe8e 	uxtb.w	lr, lr
 801a56a:	fb1c fc09 	smulbb	ip, ip, r9
 801a56e:	fb0e cc02 	mla	ip, lr, r2, ip
 801a572:	b2bf      	uxth	r7, r7
 801a574:	fb1a fa09 	smulbb	sl, sl, r9
 801a578:	fa1f fc8c 	uxth.w	ip, ip
 801a57c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a580:	fb06 a602 	mla	r6, r6, r2, sl
 801a584:	1c7a      	adds	r2, r7, #1
 801a586:	f10c 0a01 	add.w	sl, ip, #1
 801a58a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a58e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801a592:	b2b6      	uxth	r6, r6
 801a594:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a598:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a59c:	ea4a 0707 	orr.w	r7, sl, r7
 801a5a0:	f106 0a01 	add.w	sl, r6, #1
 801a5a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a5a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5ac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a5b0:	9a04      	ldr	r2, [sp, #16]
 801a5b2:	ea47 070a 	orr.w	r7, r7, sl
 801a5b6:	52a7      	strh	r7, [r4, r2]
 801a5b8:	e7af      	b.n	801a51a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5ba:	f04f 0e00 	mov.w	lr, #0
 801a5be:	eba3 020e 	sub.w	r2, r3, lr
 801a5c2:	2a00      	cmp	r2, #0
 801a5c4:	f77f af3a 	ble.w	801a43c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5c8:	9e02      	ldr	r6, [sp, #8]
 801a5ca:	1402      	asrs	r2, r0, #16
 801a5cc:	140d      	asrs	r5, r1, #16
 801a5ce:	fb06 2505 	mla	r5, r6, r5, r2
 801a5d2:	086a      	lsrs	r2, r5, #1
 801a5d4:	9e03      	ldr	r6, [sp, #12]
 801a5d6:	5cb2      	ldrb	r2, [r6, r2]
 801a5d8:	07ed      	lsls	r5, r5, #31
 801a5da:	bf54      	ite	pl
 801a5dc:	f002 020f 	andpl.w	r2, r2, #15
 801a5e0:	1112      	asrmi	r2, r2, #4
 801a5e2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a5e6:	b2d2      	uxtb	r2, r2
 801a5e8:	2aff      	cmp	r2, #255	@ 0xff
 801a5ea:	d115      	bne.n	801a618 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801a5ec:	f8d8 5000 	ldr.w	r5, [r8]
 801a5f0:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801a5f4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801a5f8:	096a      	lsrs	r2, r5, #5
 801a5fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a5fe:	4332      	orrs	r2, r6
 801a600:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a604:	432a      	orrs	r2, r5
 801a606:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801a60a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a60c:	4410      	add	r0, r2
 801a60e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a610:	f10e 0e01 	add.w	lr, lr, #1
 801a614:	4411      	add	r1, r2
 801a616:	e7d2      	b.n	801a5be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a618:	2a00      	cmp	r2, #0
 801a61a:	d0f6      	beq.n	801a60a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a61c:	f8d8 7000 	ldr.w	r7, [r8]
 801a620:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a624:	fa1f f982 	uxth.w	r9, r2
 801a628:	ea4f 262c 	mov.w	r6, ip, asr #8
 801a62c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801a630:	43d2      	mvns	r2, r2
 801a632:	b2d2      	uxtb	r2, r2
 801a634:	fb15 f509 	smulbb	r5, r5, r9
 801a638:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a63c:	fb06 5602 	mla	r6, r6, r2, r5
 801a640:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a644:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a648:	b2ff      	uxtb	r7, r7
 801a64a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a64e:	fa5f fc8c 	uxtb.w	ip, ip
 801a652:	fb17 f709 	smulbb	r7, r7, r9
 801a656:	fb0c 7702 	mla	r7, ip, r2, r7
 801a65a:	b2b6      	uxth	r6, r6
 801a65c:	fb1a fa09 	smulbb	sl, sl, r9
 801a660:	b2bf      	uxth	r7, r7
 801a662:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a666:	fb05 a502 	mla	r5, r5, r2, sl
 801a66a:	1c72      	adds	r2, r6, #1
 801a66c:	f107 0a01 	add.w	sl, r7, #1
 801a670:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a674:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a678:	b2ad      	uxth	r5, r5
 801a67a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a67e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a682:	ea4a 0606 	orr.w	r6, sl, r6
 801a686:	f105 0a01 	add.w	sl, r5, #1
 801a68a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a68e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a692:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a696:	ea46 060a 	orr.w	r6, r6, sl
 801a69a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a69e:	e7b4      	b.n	801a60a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a6a0:	b007      	add	sp, #28
 801a6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6a6:	bf00      	nop
 801a6a8:	20013f70 	.word	0x20013f70

0801a6ac <_ZN8touchgfx8LCD16bppD1Ev>:
 801a6ac:	4770      	bx	lr

0801a6ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801a6ae:	4770      	bx	lr

0801a6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a6b0:	4770      	bx	lr

0801a6b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a6b2:	4770      	bx	lr

0801a6b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a6b4:	4770      	bx	lr

0801a6b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a6b6:	4770      	bx	lr

0801a6b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a6b8:	4770      	bx	lr

0801a6ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a6ba:	4770      	bx	lr

0801a6bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a6bc:	4770      	bx	lr

0801a6be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a6be:	4770      	bx	lr

0801a6c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a6c0:	4770      	bx	lr

0801a6c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a6c2:	4770      	bx	lr

0801a6c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a6c4:	4770      	bx	lr

0801a6c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a6c6:	4770      	bx	lr

0801a6c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a6c8:	4770      	bx	lr

0801a6ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a6ca:	4770      	bx	lr

0801a6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a6cc:	4770      	bx	lr

0801a6ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a6ce:	4770      	bx	lr

0801a6d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a6d0:	4770      	bx	lr

0801a6d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a6d2:	4770      	bx	lr

0801a6d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a6d4:	4770      	bx	lr

0801a6d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a6d6:	4770      	bx	lr

0801a6d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a6d8:	4770      	bx	lr

0801a6da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a6da:	4770      	bx	lr

0801a6dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a6dc:	4770      	bx	lr

0801a6de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a6de:	4770      	bx	lr

0801a6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a6e0:	4770      	bx	lr

0801a6e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a6e2:	4770      	bx	lr

0801a6e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a6e4:	4770      	bx	lr

0801a6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a6e6:	4770      	bx	lr

0801a6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a6e8:	4770      	bx	lr

0801a6ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a6ea:	4770      	bx	lr

0801a6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a6ec:	4770      	bx	lr

0801a6ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a6ee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a6f2:	b088      	sub	sp, #32
 801a6f4:	ac08      	add	r4, sp, #32
 801a6f6:	4606      	mov	r6, r0
 801a6f8:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a6fc:	4620      	mov	r0, r4
 801a6fe:	4688      	mov	r8, r1
 801a700:	4691      	mov	r9, r2
 801a702:	f7fd fc31 	bl	8017f68 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a706:	6833      	ldr	r3, [r6, #0]
 801a708:	4605      	mov	r5, r0
 801a70a:	4620      	mov	r0, r4
 801a70c:	699f      	ldr	r7, [r3, #24]
 801a70e:	f7fd fb39 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a712:	4682      	mov	sl, r0
 801a714:	4620      	mov	r0, r4
 801a716:	f7fd fb69 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a71a:	9500      	str	r5, [sp, #0]
 801a71c:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a720:	464b      	mov	r3, r9
 801a722:	a806      	add	r0, sp, #24
 801a724:	4642      	mov	r2, r8
 801a726:	4631      	mov	r1, r6
 801a728:	47b8      	blx	r7
 801a72a:	4628      	mov	r0, r5
 801a72c:	b008      	add	sp, #32
 801a72e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801a734 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a734:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a738:	2300      	movs	r3, #0
 801a73a:	9300      	str	r3, [sp, #0]
 801a73c:	4b3d      	ldr	r3, [pc, #244]	@ (801a834 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a73e:	781b      	ldrb	r3, [r3, #0]
 801a740:	2b00      	cmp	r3, #0
 801a742:	d137      	bne.n	801a7b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a744:	4a3c      	ldr	r2, [pc, #240]	@ (801a838 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a746:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a74a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a74e:	2b00      	cmp	r3, #0
 801a750:	d132      	bne.n	801a7b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a752:	4b3a      	ldr	r3, [pc, #232]	@ (801a83c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a754:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a758:	6808      	ldr	r0, [r1, #0]
 801a75a:	6849      	ldr	r1, [r1, #4]
 801a75c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a760:	ac02      	add	r4, sp, #8
 801a762:	ab02      	add	r3, sp, #8
 801a764:	c303      	stmia	r3!, {r0, r1}
 801a766:	4669      	mov	r1, sp
 801a768:	4620      	mov	r0, r4
 801a76a:	f7f9 fd0b 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a76e:	4668      	mov	r0, sp
 801a770:	f7f9 fce0 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a774:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a778:	f8bd 2000 	ldrh.w	r2, [sp]
 801a77c:	4d30      	ldr	r5, [pc, #192]	@ (801a840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a77e:	4413      	add	r3, r2
 801a780:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a784:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a788:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a78c:	6828      	ldr	r0, [r5, #0]
 801a78e:	4413      	add	r3, r2
 801a790:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a794:	6803      	ldr	r3, [r0, #0]
 801a796:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a798:	4798      	blx	r3
 801a79a:	f010 0f01 	tst.w	r0, #1
 801a79e:	462f      	mov	r7, r5
 801a7a0:	d00c      	beq.n	801a7bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a7a2:	6828      	ldr	r0, [r5, #0]
 801a7a4:	6803      	ldr	r3, [r0, #0]
 801a7a6:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a7aa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801a7ac:	4798      	blx	r3
 801a7ae:	b004      	add	sp, #16
 801a7b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a7b4:	4a21      	ldr	r2, [pc, #132]	@ (801a83c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a7b6:	e7c6      	b.n	801a746 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801a7b8:	4b1f      	ldr	r3, [pc, #124]	@ (801a838 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a7ba:	e7cb      	b.n	801a754 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801a7bc:	6838      	ldr	r0, [r7, #0]
 801a7be:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801a7c2:	6803      	ldr	r3, [r0, #0]
 801a7c4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801a7c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a7ca:	4798      	blx	r3
 801a7cc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801a7d0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a7d4:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801a7d8:	fb16 3602 	smlabb	r6, r6, r2, r3
 801a7dc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a7e0:	6838      	ldr	r0, [r7, #0]
 801a7e2:	6803      	ldr	r3, [r0, #0]
 801a7e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a7e6:	4798      	blx	r3
 801a7e8:	4a13      	ldr	r2, [pc, #76]	@ (801a838 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a7ea:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801a7ee:	8813      	ldrh	r3, [r2, #0]
 801a7f0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a7f4:	fb03 1404 	mla	r4, r3, r4, r1
 801a7f8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a7fc:	435d      	muls	r5, r3
 801a7fe:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a802:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801a806:	4691      	mov	r9, r2
 801a808:	6838      	ldr	r0, [r7, #0]
 801a80a:	42ac      	cmp	r4, r5
 801a80c:	6803      	ldr	r3, [r0, #0]
 801a80e:	d20e      	bcs.n	801a82e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801a810:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801a814:	4632      	mov	r2, r6
 801a816:	4643      	mov	r3, r8
 801a818:	4621      	mov	r1, r4
 801a81a:	47d0      	blx	sl
 801a81c:	f8b9 3000 	ldrh.w	r3, [r9]
 801a820:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a824:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801a828:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a82c:	e7ec      	b.n	801a808 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801a82e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a830:	4798      	blx	r3
 801a832:	e7bc      	b.n	801a7ae <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801a834:	20013f58 	.word	0x20013f58
 801a838:	20013f5a 	.word	0x20013f5a
 801a83c:	20013f5c 	.word	0x20013f5c
 801a840:	20013f60 	.word	0x20013f60

0801a844 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801a844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a848:	b08b      	sub	sp, #44	@ 0x2c
 801a84a:	460f      	mov	r7, r1
 801a84c:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801a850:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801a854:	4616      	mov	r6, r2
 801a856:	f1bb 0f00 	cmp.w	fp, #0
 801a85a:	d04a      	beq.n	801a8f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a85c:	6810      	ldr	r0, [r2, #0]
 801a85e:	6851      	ldr	r1, [r2, #4]
 801a860:	ad06      	add	r5, sp, #24
 801a862:	c503      	stmia	r5!, {r0, r1}
 801a864:	6818      	ldr	r0, [r3, #0]
 801a866:	6859      	ldr	r1, [r3, #4]
 801a868:	ad08      	add	r5, sp, #32
 801a86a:	c503      	stmia	r5!, {r0, r1}
 801a86c:	a806      	add	r0, sp, #24
 801a86e:	f7f9 fc61 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a872:	4631      	mov	r1, r6
 801a874:	a808      	add	r0, sp, #32
 801a876:	f7f9 fc85 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a87a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801a87e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801a882:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801a886:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801a88a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801a88e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801a892:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801a896:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801a89a:	4f5f      	ldr	r7, [pc, #380]	@ (801aa18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a89c:	440a      	add	r2, r1
 801a89e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801a8a2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801a8a6:	6838      	ldr	r0, [r7, #0]
 801a8a8:	4413      	add	r3, r2
 801a8aa:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801a8ae:	6803      	ldr	r3, [r0, #0]
 801a8b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a8b2:	4798      	blx	r3
 801a8b4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a8b8:	46b9      	mov	r9, r7
 801a8ba:	d11d      	bne.n	801a8f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801a8bc:	b9fc      	cbnz	r4, 801a8fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a8be:	f010 0f01 	tst.w	r0, #1
 801a8c2:	d01c      	beq.n	801a8fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a8c4:	f8d9 0000 	ldr.w	r0, [r9]
 801a8c8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801a8cc:	6801      	ldr	r1, [r0, #0]
 801a8ce:	f8cd b00c 	str.w	fp, [sp, #12]
 801a8d2:	2700      	movs	r7, #0
 801a8d4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801a8d8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801a8dc:	9402      	str	r4, [sp, #8]
 801a8de:	b2ad      	uxth	r5, r5
 801a8e0:	fa1f f488 	uxth.w	r4, r8
 801a8e4:	9501      	str	r5, [sp, #4]
 801a8e6:	9400      	str	r4, [sp, #0]
 801a8e8:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801a8ea:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a8ee:	4631      	mov	r1, r6
 801a8f0:	47a0      	blx	r4
 801a8f2:	b00b      	add	sp, #44	@ 0x2c
 801a8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8f8:	f010 0f04 	tst.w	r0, #4
 801a8fc:	e7e1      	b.n	801a8c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801a8fe:	f8d9 0000 	ldr.w	r0, [r9]
 801a902:	6803      	ldr	r3, [r0, #0]
 801a904:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a906:	4798      	blx	r3
 801a908:	4b44      	ldr	r3, [pc, #272]	@ (801aa1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801a90a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801a90e:	881a      	ldrh	r2, [r3, #0]
 801a910:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801a914:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a918:	fb02 1404 	mla	r4, r2, r4, r1
 801a91c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a920:	469a      	mov	sl, r3
 801a922:	fb05 f502 	mul.w	r5, r5, r2
 801a926:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801a92a:	d059      	beq.n	801a9e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801a92c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801a930:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a934:	fa1f f28b 	uxth.w	r2, fp
 801a938:	fa1f f989 	uxth.w	r9, r9
 801a93c:	469e      	mov	lr, r3
 801a93e:	42ac      	cmp	r4, r5
 801a940:	d264      	bcs.n	801aa0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a942:	eb04 0a07 	add.w	sl, r4, r7
 801a946:	4554      	cmp	r4, sl
 801a948:	d23d      	bcs.n	801a9c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801a94a:	8821      	ldrh	r1, [r4, #0]
 801a94c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801a950:	1208      	asrs	r0, r1, #8
 801a952:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a956:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a95a:	fb10 f009 	smulbb	r0, r0, r9
 801a95e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801a962:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a966:	00c9      	lsls	r1, r1, #3
 801a968:	fb0c 0c02 	mla	ip, ip, r2, r0
 801a96c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a970:	10d8      	asrs	r0, r3, #3
 801a972:	b2c9      	uxtb	r1, r1
 801a974:	00db      	lsls	r3, r3, #3
 801a976:	fa1f fc8c 	uxth.w	ip, ip
 801a97a:	fb1b fb09 	smulbb	fp, fp, r9
 801a97e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a982:	b2db      	uxtb	r3, r3
 801a984:	fb11 f109 	smulbb	r1, r1, r9
 801a988:	fb00 b002 	mla	r0, r0, r2, fp
 801a98c:	fb03 1302 	mla	r3, r3, r2, r1
 801a990:	f10c 0b01 	add.w	fp, ip, #1
 801a994:	b29b      	uxth	r3, r3
 801a996:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801a99a:	b280      	uxth	r0, r0
 801a99c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801a9a0:	f103 0c01 	add.w	ip, r3, #1
 801a9a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a9a8:	1c43      	adds	r3, r0, #1
 801a9aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a9ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a9b2:	0940      	lsrs	r0, r0, #5
 801a9b4:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a9b8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a9bc:	ea4c 0c00 	orr.w	ip, ip, r0
 801a9c0:	f824 cb02 	strh.w	ip, [r4], #2
 801a9c4:	e7bf      	b.n	801a946 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801a9c6:	f8be 3000 	ldrh.w	r3, [lr]
 801a9ca:	eba3 0308 	sub.w	r3, r3, r8
 801a9ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a9d6:	eba3 0308 	sub.w	r3, r3, r8
 801a9da:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a9de:	e7ae      	b.n	801a93e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801a9e0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a9e4:	f8d9 0000 	ldr.w	r0, [r9]
 801a9e8:	42ac      	cmp	r4, r5
 801a9ea:	6803      	ldr	r3, [r0, #0]
 801a9ec:	d20e      	bcs.n	801aa0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a9ee:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801a9f2:	4632      	mov	r2, r6
 801a9f4:	463b      	mov	r3, r7
 801a9f6:	4621      	mov	r1, r4
 801a9f8:	47c0      	blx	r8
 801a9fa:	f8ba 3000 	ldrh.w	r3, [sl]
 801a9fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aa02:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801aa06:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aa0a:	e7eb      	b.n	801a9e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801aa0c:	4b02      	ldr	r3, [pc, #8]	@ (801aa18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801aa0e:	6818      	ldr	r0, [r3, #0]
 801aa10:	6803      	ldr	r3, [r0, #0]
 801aa12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801aa14:	4798      	blx	r3
 801aa16:	e76c      	b.n	801a8f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801aa18:	20013f60 	.word	0x20013f60
 801aa1c:	20013f5a 	.word	0x20013f5a

0801aa20 <_ZN8touchgfx8LCD16bppD0Ev>:
 801aa20:	b510      	push	{r4, lr}
 801aa22:	218c      	movs	r1, #140	@ 0x8c
 801aa24:	4604      	mov	r4, r0
 801aa26:	f00c f9f5 	bl	8026e14 <_ZdlPvj>
 801aa2a:	4620      	mov	r0, r4
 801aa2c:	bd10      	pop	{r4, pc}

0801aa2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801aa2e:	b510      	push	{r4, lr}
 801aa30:	2104      	movs	r1, #4
 801aa32:	4604      	mov	r4, r0
 801aa34:	f00c f9ee 	bl	8026e14 <_ZdlPvj>
 801aa38:	4620      	mov	r0, r4
 801aa3a:	bd10      	pop	{r4, pc}

0801aa3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801aa3c:	b510      	push	{r4, lr}
 801aa3e:	2104      	movs	r1, #4
 801aa40:	4604      	mov	r4, r0
 801aa42:	f00c f9e7 	bl	8026e14 <_ZdlPvj>
 801aa46:	4620      	mov	r0, r4
 801aa48:	bd10      	pop	{r4, pc}

0801aa4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801aa4a:	b510      	push	{r4, lr}
 801aa4c:	f640 0144 	movw	r1, #2116	@ 0x844
 801aa50:	4604      	mov	r4, r0
 801aa52:	f00c f9df 	bl	8026e14 <_ZdlPvj>
 801aa56:	4620      	mov	r0, r4
 801aa58:	bd10      	pop	{r4, pc}

0801aa5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801aa5a:	b510      	push	{r4, lr}
 801aa5c:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801aa60:	4604      	mov	r4, r0
 801aa62:	f00c f9d7 	bl	8026e14 <_ZdlPvj>
 801aa66:	4620      	mov	r0, r4
 801aa68:	bd10      	pop	{r4, pc}

0801aa6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801aa6a:	b510      	push	{r4, lr}
 801aa6c:	2104      	movs	r1, #4
 801aa6e:	4604      	mov	r4, r0
 801aa70:	f00c f9d0 	bl	8026e14 <_ZdlPvj>
 801aa74:	4620      	mov	r0, r4
 801aa76:	bd10      	pop	{r4, pc}

0801aa78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801aa78:	b510      	push	{r4, lr}
 801aa7a:	2104      	movs	r1, #4
 801aa7c:	4604      	mov	r4, r0
 801aa7e:	f00c f9c9 	bl	8026e14 <_ZdlPvj>
 801aa82:	4620      	mov	r0, r4
 801aa84:	bd10      	pop	{r4, pc}

0801aa86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801aa86:	b510      	push	{r4, lr}
 801aa88:	2104      	movs	r1, #4
 801aa8a:	4604      	mov	r4, r0
 801aa8c:	f00c f9c2 	bl	8026e14 <_ZdlPvj>
 801aa90:	4620      	mov	r0, r4
 801aa92:	bd10      	pop	{r4, pc}

0801aa94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801aa94:	b510      	push	{r4, lr}
 801aa96:	2104      	movs	r1, #4
 801aa98:	4604      	mov	r4, r0
 801aa9a:	f00c f9bb 	bl	8026e14 <_ZdlPvj>
 801aa9e:	4620      	mov	r0, r4
 801aaa0:	bd10      	pop	{r4, pc}

0801aaa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801aaa2:	b510      	push	{r4, lr}
 801aaa4:	2104      	movs	r1, #4
 801aaa6:	4604      	mov	r4, r0
 801aaa8:	f00c f9b4 	bl	8026e14 <_ZdlPvj>
 801aaac:	4620      	mov	r0, r4
 801aaae:	bd10      	pop	{r4, pc}

0801aab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801aab0:	b510      	push	{r4, lr}
 801aab2:	2104      	movs	r1, #4
 801aab4:	4604      	mov	r4, r0
 801aab6:	f00c f9ad 	bl	8026e14 <_ZdlPvj>
 801aaba:	4620      	mov	r0, r4
 801aabc:	bd10      	pop	{r4, pc}

0801aabe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801aabe:	b510      	push	{r4, lr}
 801aac0:	2104      	movs	r1, #4
 801aac2:	4604      	mov	r4, r0
 801aac4:	f00c f9a6 	bl	8026e14 <_ZdlPvj>
 801aac8:	4620      	mov	r0, r4
 801aaca:	bd10      	pop	{r4, pc}

0801aacc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801aacc:	b510      	push	{r4, lr}
 801aace:	2104      	movs	r1, #4
 801aad0:	4604      	mov	r4, r0
 801aad2:	f00c f99f 	bl	8026e14 <_ZdlPvj>
 801aad6:	4620      	mov	r0, r4
 801aad8:	bd10      	pop	{r4, pc}

0801aada <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801aada:	b510      	push	{r4, lr}
 801aadc:	2104      	movs	r1, #4
 801aade:	4604      	mov	r4, r0
 801aae0:	f00c f998 	bl	8026e14 <_ZdlPvj>
 801aae4:	4620      	mov	r0, r4
 801aae6:	bd10      	pop	{r4, pc}

0801aae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801aae8:	b510      	push	{r4, lr}
 801aaea:	2104      	movs	r1, #4
 801aaec:	4604      	mov	r4, r0
 801aaee:	f00c f991 	bl	8026e14 <_ZdlPvj>
 801aaf2:	4620      	mov	r0, r4
 801aaf4:	bd10      	pop	{r4, pc}

0801aaf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801aaf6:	b510      	push	{r4, lr}
 801aaf8:	2104      	movs	r1, #4
 801aafa:	4604      	mov	r4, r0
 801aafc:	f00c f98a 	bl	8026e14 <_ZdlPvj>
 801ab00:	4620      	mov	r0, r4
 801ab02:	bd10      	pop	{r4, pc}

0801ab04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ab04:	b510      	push	{r4, lr}
 801ab06:	2104      	movs	r1, #4
 801ab08:	4604      	mov	r4, r0
 801ab0a:	f00c f983 	bl	8026e14 <_ZdlPvj>
 801ab0e:	4620      	mov	r0, r4
 801ab10:	bd10      	pop	{r4, pc}

0801ab12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ab12:	b510      	push	{r4, lr}
 801ab14:	2104      	movs	r1, #4
 801ab16:	4604      	mov	r4, r0
 801ab18:	f00c f97c 	bl	8026e14 <_ZdlPvj>
 801ab1c:	4620      	mov	r0, r4
 801ab1e:	bd10      	pop	{r4, pc}

0801ab20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ab20:	b510      	push	{r4, lr}
 801ab22:	2104      	movs	r1, #4
 801ab24:	4604      	mov	r4, r0
 801ab26:	f00c f975 	bl	8026e14 <_ZdlPvj>
 801ab2a:	4620      	mov	r0, r4
 801ab2c:	bd10      	pop	{r4, pc}

0801ab2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ab2e:	b510      	push	{r4, lr}
 801ab30:	2104      	movs	r1, #4
 801ab32:	4604      	mov	r4, r0
 801ab34:	f00c f96e 	bl	8026e14 <_ZdlPvj>
 801ab38:	4620      	mov	r0, r4
 801ab3a:	bd10      	pop	{r4, pc}

0801ab3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ab3c:	b510      	push	{r4, lr}
 801ab3e:	2104      	movs	r1, #4
 801ab40:	4604      	mov	r4, r0
 801ab42:	f00c f967 	bl	8026e14 <_ZdlPvj>
 801ab46:	4620      	mov	r0, r4
 801ab48:	bd10      	pop	{r4, pc}

0801ab4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ab4a:	b510      	push	{r4, lr}
 801ab4c:	2104      	movs	r1, #4
 801ab4e:	4604      	mov	r4, r0
 801ab50:	f00c f960 	bl	8026e14 <_ZdlPvj>
 801ab54:	4620      	mov	r0, r4
 801ab56:	bd10      	pop	{r4, pc}

0801ab58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ab58:	b510      	push	{r4, lr}
 801ab5a:	2104      	movs	r1, #4
 801ab5c:	4604      	mov	r4, r0
 801ab5e:	f00c f959 	bl	8026e14 <_ZdlPvj>
 801ab62:	4620      	mov	r0, r4
 801ab64:	bd10      	pop	{r4, pc}

0801ab66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ab66:	b510      	push	{r4, lr}
 801ab68:	2104      	movs	r1, #4
 801ab6a:	4604      	mov	r4, r0
 801ab6c:	f00c f952 	bl	8026e14 <_ZdlPvj>
 801ab70:	4620      	mov	r0, r4
 801ab72:	bd10      	pop	{r4, pc}

0801ab74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ab74:	b510      	push	{r4, lr}
 801ab76:	2104      	movs	r1, #4
 801ab78:	4604      	mov	r4, r0
 801ab7a:	f00c f94b 	bl	8026e14 <_ZdlPvj>
 801ab7e:	4620      	mov	r0, r4
 801ab80:	bd10      	pop	{r4, pc}

0801ab82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ab82:	b510      	push	{r4, lr}
 801ab84:	2104      	movs	r1, #4
 801ab86:	4604      	mov	r4, r0
 801ab88:	f00c f944 	bl	8026e14 <_ZdlPvj>
 801ab8c:	4620      	mov	r0, r4
 801ab8e:	bd10      	pop	{r4, pc}

0801ab90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ab90:	b510      	push	{r4, lr}
 801ab92:	2104      	movs	r1, #4
 801ab94:	4604      	mov	r4, r0
 801ab96:	f00c f93d 	bl	8026e14 <_ZdlPvj>
 801ab9a:	4620      	mov	r0, r4
 801ab9c:	bd10      	pop	{r4, pc}

0801ab9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ab9e:	b510      	push	{r4, lr}
 801aba0:	2104      	movs	r1, #4
 801aba2:	4604      	mov	r4, r0
 801aba4:	f00c f936 	bl	8026e14 <_ZdlPvj>
 801aba8:	4620      	mov	r0, r4
 801abaa:	bd10      	pop	{r4, pc}

0801abac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801abac:	b510      	push	{r4, lr}
 801abae:	2104      	movs	r1, #4
 801abb0:	4604      	mov	r4, r0
 801abb2:	f00c f92f 	bl	8026e14 <_ZdlPvj>
 801abb6:	4620      	mov	r0, r4
 801abb8:	bd10      	pop	{r4, pc}

0801abba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801abba:	b510      	push	{r4, lr}
 801abbc:	2104      	movs	r1, #4
 801abbe:	4604      	mov	r4, r0
 801abc0:	f00c f928 	bl	8026e14 <_ZdlPvj>
 801abc4:	4620      	mov	r0, r4
 801abc6:	bd10      	pop	{r4, pc}

0801abc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801abc8:	b510      	push	{r4, lr}
 801abca:	2104      	movs	r1, #4
 801abcc:	4604      	mov	r4, r0
 801abce:	f00c f921 	bl	8026e14 <_ZdlPvj>
 801abd2:	4620      	mov	r0, r4
 801abd4:	bd10      	pop	{r4, pc}

0801abd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801abd6:	b510      	push	{r4, lr}
 801abd8:	2104      	movs	r1, #4
 801abda:	4604      	mov	r4, r0
 801abdc:	f00c f91a 	bl	8026e14 <_ZdlPvj>
 801abe0:	4620      	mov	r0, r4
 801abe2:	bd10      	pop	{r4, pc}

0801abe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801abe4:	b510      	push	{r4, lr}
 801abe6:	2104      	movs	r1, #4
 801abe8:	4604      	mov	r4, r0
 801abea:	f00c f913 	bl	8026e14 <_ZdlPvj>
 801abee:	4620      	mov	r0, r4
 801abf0:	bd10      	pop	{r4, pc}
	...

0801abf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801abf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abf8:	b08f      	sub	sp, #60	@ 0x3c
 801abfa:	4616      	mov	r6, r2
 801abfc:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801ac00:	9205      	str	r2, [sp, #20]
 801ac02:	4682      	mov	sl, r0
 801ac04:	460d      	mov	r5, r1
 801ac06:	2a00      	cmp	r2, #0
 801ac08:	f000 82b7 	beq.w	801b17a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801ac0c:	6830      	ldr	r0, [r6, #0]
 801ac0e:	6871      	ldr	r1, [r6, #4]
 801ac10:	ac0a      	add	r4, sp, #40	@ 0x28
 801ac12:	c403      	stmia	r4!, {r0, r1}
 801ac14:	6818      	ldr	r0, [r3, #0]
 801ac16:	6859      	ldr	r1, [r3, #4]
 801ac18:	ac0c      	add	r4, sp, #48	@ 0x30
 801ac1a:	c403      	stmia	r4!, {r0, r1}
 801ac1c:	a80a      	add	r0, sp, #40	@ 0x28
 801ac1e:	f7f9 fa89 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ac22:	4631      	mov	r1, r6
 801ac24:	a80c      	add	r0, sp, #48	@ 0x30
 801ac26:	f7f9 faad 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ac2a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801ac2e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801ac32:	bfd7      	itett	le
 801ac34:	b293      	uxthle	r3, r2
 801ac36:	2301      	movgt	r3, #1
 801ac38:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ac3c:	fb91 f3f3 	sdivle	r3, r1, r3
 801ac40:	9300      	str	r3, [sp, #0]
 801ac42:	f105 0308 	add.w	r3, r5, #8
 801ac46:	9900      	ldr	r1, [sp, #0]
 801ac48:	9306      	str	r3, [sp, #24]
 801ac4a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801ac4e:	440b      	add	r3, r1
 801ac50:	3b01      	subs	r3, #1
 801ac52:	fb93 f3f1 	sdiv	r3, r3, r1
 801ac56:	9906      	ldr	r1, [sp, #24]
 801ac58:	3b01      	subs	r3, #1
 801ac5a:	b29b      	uxth	r3, r3
 801ac5c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801ac60:	9307      	str	r3, [sp, #28]
 801ac62:	9900      	ldr	r1, [sp, #0]
 801ac64:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ac68:	fb93 f0f1 	sdiv	r0, r3, r1
 801ac6c:	b284      	uxth	r4, r0
 801ac6e:	9402      	str	r4, [sp, #8]
 801ac70:	9d02      	ldr	r5, [sp, #8]
 801ac72:	9c00      	ldr	r4, [sp, #0]
 801ac74:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801ac78:	fb05 3414 	mls	r4, r5, r4, r3
 801ac7c:	fb14 f402 	smulbb	r4, r4, r2
 801ac80:	440c      	add	r4, r1
 801ac82:	b2a4      	uxth	r4, r4
 801ac84:	2d00      	cmp	r5, #0
 801ac86:	d06c      	beq.n	801ad62 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801ac88:	1e6a      	subs	r2, r5, #1
 801ac8a:	9806      	ldr	r0, [sp, #24]
 801ac8c:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801ac90:	9a07      	ldr	r2, [sp, #28]
 801ac92:	ba36      	rev	r6, r6
 801ac94:	4416      	add	r6, r2
 801ac96:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801ac9a:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801ac9e:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801afd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801aca2:	4411      	add	r1, r2
 801aca4:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801aca8:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801acac:	4413      	add	r3, r2
 801acae:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801acb2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801acb6:	9301      	str	r3, [sp, #4]
 801acb8:	4bc4      	ldr	r3, [pc, #784]	@ (801afcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801acba:	6818      	ldr	r0, [r3, #0]
 801acbc:	6803      	ldr	r3, [r0, #0]
 801acbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801acc0:	4798      	blx	r3
 801acc2:	4bc3      	ldr	r3, [pc, #780]	@ (801afd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801acc4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801acc8:	881b      	ldrh	r3, [r3, #0]
 801acca:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801acce:	fb03 2808 	mla	r8, r3, r8, r2
 801acd2:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801acd6:	436b      	muls	r3, r5
 801acd8:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801acdc:	9309      	str	r3, [sp, #36]	@ 0x24
 801acde:	2500      	movs	r5, #0
 801ace0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801ace4:	fb94 f3f3 	sdiv	r3, r4, r3
 801ace8:	9304      	str	r3, [sp, #16]
 801acea:	f10a 0304 	add.w	r3, sl, #4
 801acee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801acf2:	4629      	mov	r1, r5
 801acf4:	4618      	mov	r0, r3
 801acf6:	9308      	str	r3, [sp, #32]
 801acf8:	f00d f9e1 	bl	80280be <memset>
 801acfc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801acfe:	4543      	cmp	r3, r8
 801ad00:	f240 8236 	bls.w	801b170 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801ad04:	2203      	movs	r2, #3
 801ad06:	2107      	movs	r1, #7
 801ad08:	200b      	movs	r0, #11
 801ad0a:	2c00      	cmp	r4, #0
 801ad0c:	f000 8131 	beq.w	801af72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801ad10:	7833      	ldrb	r3, [r6, #0]
 801ad12:	b2db      	uxtb	r3, r3
 801ad14:	2bfe      	cmp	r3, #254	@ 0xfe
 801ad16:	d126      	bne.n	801ad66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801ad18:	f896 e001 	ldrb.w	lr, [r6, #1]
 801ad1c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801ad20:	f896 b003 	ldrb.w	fp, [r6, #3]
 801ad24:	fa5f fe8e 	uxtb.w	lr, lr
 801ad28:	fa5f fc8c 	uxtb.w	ip, ip
 801ad2c:	f36e 0507 	bfi	r5, lr, #0, #8
 801ad30:	f36c 250f 	bfi	r5, ip, #8, #8
 801ad34:	fa5f fb8b 	uxtb.w	fp, fp
 801ad38:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801ad3c:	f36b 4517 	bfi	r5, fp, #16, #8
 801ad40:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801ad44:	0e2b      	lsrs	r3, r5, #24
 801ad46:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801ad4a:	fb10 c303 	smlabb	r3, r0, r3, ip
 801ad4e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ad52:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801ad56:	3c01      	subs	r4, #1
 801ad58:	1d37      	adds	r7, r6, #4
 801ad5a:	b2a4      	uxth	r4, r4
 801ad5c:	605d      	str	r5, [r3, #4]
 801ad5e:	463e      	mov	r6, r7
 801ad60:	e7d3      	b.n	801ad0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801ad62:	9e07      	ldr	r6, [sp, #28]
 801ad64:	e797      	b.n	801ac96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801ad66:	2bff      	cmp	r3, #255	@ 0xff
 801ad68:	d127      	bne.n	801adba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801ad6a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ad6e:	78b3      	ldrb	r3, [r6, #2]
 801ad70:	f896 e003 	ldrb.w	lr, [r6, #3]
 801ad74:	f896 b004 	ldrb.w	fp, [r6, #4]
 801ad78:	fa5f fc8c 	uxtb.w	ip, ip
 801ad7c:	b2db      	uxtb	r3, r3
 801ad7e:	f36c 0507 	bfi	r5, ip, #0, #8
 801ad82:	f363 250f 	bfi	r5, r3, #8, #8
 801ad86:	fa5f fe8e 	uxtb.w	lr, lr
 801ad8a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801ad8e:	fb12 330e 	smlabb	r3, r2, lr, r3
 801ad92:	fa5f fb8b 	uxtb.w	fp, fp
 801ad96:	f36e 4517 	bfi	r5, lr, #16, #8
 801ad9a:	fb11 330c 	smlabb	r3, r1, ip, r3
 801ad9e:	f36b 651f 	bfi	r5, fp, #24, #8
 801ada2:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801ada6:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801adaa:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801adae:	3c01      	subs	r4, #1
 801adb0:	1d77      	adds	r7, r6, #5
 801adb2:	b2a4      	uxth	r4, r4
 801adb4:	f8cb 5004 	str.w	r5, [fp, #4]
 801adb8:	e7d1      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801adba:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801adbe:	f106 0701 	add.w	r7, r6, #1
 801adc2:	d107      	bne.n	801add4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801adc4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801adc8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801adcc:	685d      	ldr	r5, [r3, #4]
 801adce:	3c01      	subs	r4, #1
 801add0:	b2a4      	uxth	r4, r4
 801add2:	e7c4      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801add4:	f1bc 0f01 	cmp.w	ip, #1
 801add8:	d12c      	bne.n	801ae34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801adda:	f003 0e03 	and.w	lr, r3, #3
 801adde:	f1ae 0e02 	sub.w	lr, lr, #2
 801ade2:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801ade6:	fa5f fe8e 	uxtb.w	lr, lr
 801adea:	f003 0c0c 	and.w	ip, r3, #12
 801adee:	f36e 0507 	bfi	r5, lr, #0, #8
 801adf2:	f1ac 0c08 	sub.w	ip, ip, #8
 801adf6:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801adfa:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801adfe:	f36c 250f 	bfi	r5, ip, #8, #8
 801ae02:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801ae06:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ae0a:	3b02      	subs	r3, #2
 801ae0c:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801ae10:	b2db      	uxtb	r3, r3
 801ae12:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801ae16:	f363 4517 	bfi	r5, r3, #16, #8
 801ae1a:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801ae1e:	0e2e      	lsrs	r6, r5, #24
 801ae20:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801ae24:	fb10 c606 	smlabb	r6, r0, r6, ip
 801ae28:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801ae2c:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801ae30:	6075      	str	r5, [r6, #4]
 801ae32:	e7cc      	b.n	801adce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801ae34:	f1bc 0f02 	cmp.w	ip, #2
 801ae38:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ae3c:	d12a      	bne.n	801ae94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801ae3e:	1cb7      	adds	r7, r6, #2
 801ae40:	7876      	ldrb	r6, [r6, #1]
 801ae42:	b2f6      	uxtb	r6, r6
 801ae44:	f006 0c0f 	and.w	ip, r6, #15
 801ae48:	3b20      	subs	r3, #32
 801ae4a:	f1ac 0c08 	sub.w	ip, ip, #8
 801ae4e:	449c      	add	ip, r3
 801ae50:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801ae54:	fa5f fc8c 	uxtb.w	ip, ip
 801ae58:	f36c 0507 	bfi	r5, ip, #0, #8
 801ae5c:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801ae60:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801ae64:	fa5f fe8e 	uxtb.w	lr, lr
 801ae68:	1136      	asrs	r6, r6, #4
 801ae6a:	f36e 250f 	bfi	r5, lr, #8, #8
 801ae6e:	3e08      	subs	r6, #8
 801ae70:	4433      	add	r3, r6
 801ae72:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801ae76:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801ae7a:	b2db      	uxtb	r3, r3
 801ae7c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801ae80:	f363 4517 	bfi	r5, r3, #16, #8
 801ae84:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801ae88:	0e2e      	lsrs	r6, r5, #24
 801ae8a:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801ae8e:	fb10 e606 	smlabb	r6, r0, r6, lr
 801ae92:	e7c9      	b.n	801ae28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801ae94:	1c5e      	adds	r6, r3, #1
 801ae96:	42a6      	cmp	r6, r4
 801ae98:	dd4e      	ble.n	801af38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801ae9a:	1b36      	subs	r6, r6, r4
 801ae9c:	2e00      	cmp	r6, #0
 801ae9e:	dc4e      	bgt.n	801af3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801aea0:	f8dd b004 	ldr.w	fp, [sp, #4]
 801aea4:	2400      	movs	r4, #0
 801aea6:	f1bb 0f00 	cmp.w	fp, #0
 801aeaa:	f340 8122 	ble.w	801b0f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801aeae:	1c7b      	adds	r3, r7, #1
 801aeb0:	9303      	str	r3, [sp, #12]
 801aeb2:	783b      	ldrb	r3, [r7, #0]
 801aeb4:	b2db      	uxtb	r3, r3
 801aeb6:	2bfe      	cmp	r3, #254	@ 0xfe
 801aeb8:	d160      	bne.n	801af7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801aeba:	7879      	ldrb	r1, [r7, #1]
 801aebc:	78ba      	ldrb	r2, [r7, #2]
 801aebe:	78f8      	ldrb	r0, [r7, #3]
 801aec0:	b2c9      	uxtb	r1, r1
 801aec2:	f361 0507 	bfi	r5, r1, #0, #8
 801aec6:	b2d2      	uxtb	r2, r2
 801aec8:	1d3b      	adds	r3, r7, #4
 801aeca:	f362 250f 	bfi	r5, r2, #8, #8
 801aece:	b2c0      	uxtb	r0, r0
 801aed0:	9303      	str	r3, [sp, #12]
 801aed2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801aed6:	2303      	movs	r3, #3
 801aed8:	fb13 2200 	smlabb	r2, r3, r0, r2
 801aedc:	f360 4517 	bfi	r5, r0, #16, #8
 801aee0:	2307      	movs	r3, #7
 801aee2:	fb13 2101 	smlabb	r1, r3, r1, r2
 801aee6:	0e2e      	lsrs	r6, r5, #24
 801aee8:	230b      	movs	r3, #11
 801aeea:	fb13 1306 	smlabb	r3, r3, r6, r1
 801aeee:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801aef2:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801aef6:	605d      	str	r5, [r3, #4]
 801aef8:	2601      	movs	r6, #1
 801aefa:	4637      	mov	r7, r6
 801aefc:	0e2b      	lsrs	r3, r5, #24
 801aefe:	ebab 0b07 	sub.w	fp, fp, r7
 801af02:	eba6 0607 	sub.w	r6, r6, r7
 801af06:	f040 80d3 	bne.w	801b0b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801af0a:	b18c      	cbz	r4, 801af30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801af0c:	4648      	mov	r0, r9
 801af0e:	00a1      	lsls	r1, r4, #2
 801af10:	f7e5 fffe 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801af14:	9b05      	ldr	r3, [sp, #20]
 801af16:	4622      	mov	r2, r4
 801af18:	4649      	mov	r1, r9
 801af1a:	4640      	mov	r0, r8
 801af1c:	f7e6 f846 	bl	8000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801af20:	4b2c      	ldr	r3, [pc, #176]	@ (801afd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801af22:	4a2d      	ldr	r2, [pc, #180]	@ (801afd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801af24:	4599      	cmp	r9, r3
 801af26:	bf08      	it	eq
 801af28:	4613      	moveq	r3, r2
 801af2a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801af2e:	4699      	mov	r9, r3
 801af30:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801af34:	2400      	movs	r4, #0
 801af36:	e0da      	b.n	801b0ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801af38:	1ba6      	subs	r6, r4, r6
 801af3a:	b2b4      	uxth	r4, r6
 801af3c:	e70f      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801af3e:	9b01      	ldr	r3, [sp, #4]
 801af40:	9a01      	ldr	r2, [sp, #4]
 801af42:	42b3      	cmp	r3, r6
 801af44:	bfa8      	it	ge
 801af46:	4633      	movge	r3, r6
 801af48:	0e2c      	lsrs	r4, r5, #24
 801af4a:	eba2 0b03 	sub.w	fp, r2, r3
 801af4e:	eba6 0603 	sub.w	r6, r6, r3
 801af52:	d00b      	beq.n	801af6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801af54:	f1a9 0104 	sub.w	r1, r9, #4
 801af58:	461a      	mov	r2, r3
 801af5a:	2a00      	cmp	r2, #0
 801af5c:	dc02      	bgt.n	801af64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801af5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801af62:	e7a0      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801af64:	f841 5f04 	str.w	r5, [r1, #4]!
 801af68:	3a01      	subs	r2, #1
 801af6a:	e7f6      	b.n	801af5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801af6c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801af70:	e799      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801af72:	4637      	mov	r7, r6
 801af74:	f8dd b004 	ldr.w	fp, [sp, #4]
 801af78:	4626      	mov	r6, r4
 801af7a:	e794      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801af7c:	2bff      	cmp	r3, #255	@ 0xff
 801af7e:	d11d      	bne.n	801afbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801af80:	7878      	ldrb	r0, [r7, #1]
 801af82:	78ba      	ldrb	r2, [r7, #2]
 801af84:	78fe      	ldrb	r6, [r7, #3]
 801af86:	1d7b      	adds	r3, r7, #5
 801af88:	b2c0      	uxtb	r0, r0
 801af8a:	9303      	str	r3, [sp, #12]
 801af8c:	793b      	ldrb	r3, [r7, #4]
 801af8e:	f360 0507 	bfi	r5, r0, #0, #8
 801af92:	b2d2      	uxtb	r2, r2
 801af94:	b2d9      	uxtb	r1, r3
 801af96:	f362 250f 	bfi	r5, r2, #8, #8
 801af9a:	b2f6      	uxtb	r6, r6
 801af9c:	2303      	movs	r3, #3
 801af9e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801afa2:	fb13 2206 	smlabb	r2, r3, r6, r2
 801afa6:	2307      	movs	r3, #7
 801afa8:	fb13 2000 	smlabb	r0, r3, r0, r2
 801afac:	f366 4517 	bfi	r5, r6, #16, #8
 801afb0:	230b      	movs	r3, #11
 801afb2:	f361 651f 	bfi	r5, r1, #24, #8
 801afb6:	fb13 0301 	smlabb	r3, r3, r1, r0
 801afba:	e798      	b.n	801aeee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801afbc:	119e      	asrs	r6, r3, #6
 801afbe:	d10d      	bne.n	801afdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801afc0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801afc4:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801afc8:	685d      	ldr	r5, [r3, #4]
 801afca:	e795      	b.n	801aef8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801afcc:	20013f60 	.word	0x20013f60
 801afd0:	20013f5a 	.word	0x20013f5a
 801afd4:	20000180 	.word	0x20000180
 801afd8:	20000280 	.word	0x20000280
 801afdc:	2e01      	cmp	r6, #1
 801afde:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801afe2:	d12b      	bne.n	801b03c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801afe4:	f003 0003 	and.w	r0, r3, #3
 801afe8:	3802      	subs	r0, #2
 801afea:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801afee:	b2c0      	uxtb	r0, r0
 801aff0:	f003 020c 	and.w	r2, r3, #12
 801aff4:	f360 0507 	bfi	r5, r0, #0, #8
 801aff8:	3a08      	subs	r2, #8
 801affa:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801affe:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801b002:	f362 250f 	bfi	r5, r2, #8, #8
 801b006:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801b00a:	1e9f      	subs	r7, r3, #2
 801b00c:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801b010:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801b014:	b2db      	uxtb	r3, r3
 801b016:	2703      	movs	r7, #3
 801b018:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b01c:	fb17 2203 	smlabb	r2, r7, r3, r2
 801b020:	2707      	movs	r7, #7
 801b022:	f363 4517 	bfi	r5, r3, #16, #8
 801b026:	fb17 2000 	smlabb	r0, r7, r0, r2
 801b02a:	230b      	movs	r3, #11
 801b02c:	fb13 0101 	smlabb	r1, r3, r1, r0
 801b030:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801b034:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801b038:	604d      	str	r5, [r1, #4]
 801b03a:	e75e      	b.n	801aefa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801b03c:	2e02      	cmp	r6, #2
 801b03e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b042:	d12f      	bne.n	801b0a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801b044:	7878      	ldrb	r0, [r7, #1]
 801b046:	1cba      	adds	r2, r7, #2
 801b048:	b2c0      	uxtb	r0, r0
 801b04a:	9203      	str	r2, [sp, #12]
 801b04c:	f000 020f 	and.w	r2, r0, #15
 801b050:	3b20      	subs	r3, #32
 801b052:	3a08      	subs	r2, #8
 801b054:	441a      	add	r2, r3
 801b056:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801b05a:	b2d2      	uxtb	r2, r2
 801b05c:	f362 0507 	bfi	r5, r2, #0, #8
 801b060:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801b064:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801b068:	b2f6      	uxtb	r6, r6
 801b06a:	1100      	asrs	r0, r0, #4
 801b06c:	f366 250f 	bfi	r5, r6, #8, #8
 801b070:	3808      	subs	r0, #8
 801b072:	4403      	add	r3, r0
 801b074:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b078:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801b07c:	b2db      	uxtb	r3, r3
 801b07e:	2003      	movs	r0, #3
 801b080:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801b084:	fb10 6603 	smlabb	r6, r0, r3, r6
 801b088:	2007      	movs	r0, #7
 801b08a:	f363 4517 	bfi	r5, r3, #16, #8
 801b08e:	fb10 6202 	smlabb	r2, r0, r2, r6
 801b092:	230b      	movs	r3, #11
 801b094:	fb13 2101 	smlabb	r1, r3, r1, r2
 801b098:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801b09c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801b0a0:	604d      	str	r5, [r1, #4]
 801b0a2:	e729      	b.n	801aef8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801b0a4:	1c5e      	adds	r6, r3, #1
 801b0a6:	45b3      	cmp	fp, r6
 801b0a8:	465f      	mov	r7, fp
 801b0aa:	bfa8      	it	ge
 801b0ac:	4637      	movge	r7, r6
 801b0ae:	e725      	b.n	801aefc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801b0b0:	193b      	adds	r3, r7, r4
 801b0b2:	2b40      	cmp	r3, #64	@ 0x40
 801b0b4:	dd13      	ble.n	801b0de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801b0b6:	4648      	mov	r0, r9
 801b0b8:	00a1      	lsls	r1, r4, #2
 801b0ba:	f7e5 ff29 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801b0be:	4649      	mov	r1, r9
 801b0c0:	9b05      	ldr	r3, [sp, #20]
 801b0c2:	4622      	mov	r2, r4
 801b0c4:	4640      	mov	r0, r8
 801b0c6:	f7e5 ff71 	bl	8000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801b0ca:	4b2d      	ldr	r3, [pc, #180]	@ (801b180 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801b0cc:	4599      	cmp	r9, r3
 801b0ce:	bf0c      	ite	eq
 801b0d0:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801b18c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801b0d4:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801b180 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801b0d8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b0dc:	2400      	movs	r4, #0
 801b0de:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801b0e2:	463b      	mov	r3, r7
 801b0e4:	3b01      	subs	r3, #1
 801b0e6:	f842 5b04 	str.w	r5, [r2], #4
 801b0ea:	d1fb      	bne.n	801b0e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801b0ec:	443c      	add	r4, r7
 801b0ee:	9f03      	ldr	r7, [sp, #12]
 801b0f0:	e6d9      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801b0f2:	b15c      	cbz	r4, 801b10c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801b0f4:	00a1      	lsls	r1, r4, #2
 801b0f6:	4648      	mov	r0, r9
 801b0f8:	f7e5 ff0a 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801b0fc:	4640      	mov	r0, r8
 801b0fe:	9b05      	ldr	r3, [sp, #20]
 801b100:	4622      	mov	r2, r4
 801b102:	4649      	mov	r1, r9
 801b104:	f7e5 ff52 	bl	8000fac <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801b108:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b10c:	4b1d      	ldr	r3, [pc, #116]	@ (801b184 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801b10e:	9a01      	ldr	r2, [sp, #4]
 801b110:	881b      	ldrh	r3, [r3, #0]
 801b112:	1a9b      	subs	r3, r3, r2
 801b114:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801b118:	9b04      	ldr	r3, [sp, #16]
 801b11a:	3301      	adds	r3, #1
 801b11c:	9304      	str	r3, [sp, #16]
 801b11e:	9a04      	ldr	r2, [sp, #16]
 801b120:	9b00      	ldr	r3, [sp, #0]
 801b122:	4293      	cmp	r3, r2
 801b124:	d11d      	bne.n	801b162 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801b126:	9b02      	ldr	r3, [sp, #8]
 801b128:	9a02      	ldr	r2, [sp, #8]
 801b12a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801b12e:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801b132:	9808      	ldr	r0, [sp, #32]
 801b134:	f103 0b01 	add.w	fp, r3, #1
 801b138:	9b06      	ldr	r3, [sp, #24]
 801b13a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801b13e:	9b07      	ldr	r3, [sp, #28]
 801b140:	2500      	movs	r5, #0
 801b142:	ba3f      	rev	r7, r7
 801b144:	1ba4      	subs	r4, r4, r6
 801b146:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801b14a:	4629      	mov	r1, r5
 801b14c:	441f      	add	r7, r3
 801b14e:	b2a4      	uxth	r4, r4
 801b150:	f00c ffb5 	bl	80280be <memset>
 801b154:	f8cd b008 	str.w	fp, [sp, #8]
 801b158:	9504      	str	r5, [sp, #16]
 801b15a:	f7e5 fecf 	bl	8000efc <_ZN8touchgfx5paint8tearDownEv>
 801b15e:	463e      	mov	r6, r7
 801b160:	e5cc      	b.n	801acfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801b162:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b166:	9b01      	ldr	r3, [sp, #4]
 801b168:	1ae4      	subs	r4, r4, r3
 801b16a:	1ba4      	subs	r4, r4, r6
 801b16c:	b2a4      	uxth	r4, r4
 801b16e:	e7f4      	b.n	801b15a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801b170:	4b05      	ldr	r3, [pc, #20]	@ (801b188 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801b172:	6818      	ldr	r0, [r3, #0]
 801b174:	6803      	ldr	r3, [r0, #0]
 801b176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b178:	4798      	blx	r3
 801b17a:	b00f      	add	sp, #60	@ 0x3c
 801b17c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b180:	20000180 	.word	0x20000180
 801b184:	20013f5a 	.word	0x20013f5a
 801b188:	20013f60 	.word	0x20013f60
 801b18c:	20000280 	.word	0x20000280

0801b190 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b194:	b08f      	sub	sp, #60	@ 0x3c
 801b196:	461c      	mov	r4, r3
 801b198:	9205      	str	r2, [sp, #20]
 801b19a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b19e:	9100      	str	r1, [sp, #0]
 801b1a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b1a2:	9201      	str	r2, [sp, #4]
 801b1a4:	2a00      	cmp	r2, #0
 801b1a6:	f000 8115 	beq.w	801b3d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b1aa:	6820      	ldr	r0, [r4, #0]
 801b1ac:	6861      	ldr	r1, [r4, #4]
 801b1ae:	aa0a      	add	r2, sp, #40	@ 0x28
 801b1b0:	c203      	stmia	r2!, {r0, r1}
 801b1b2:	6818      	ldr	r0, [r3, #0]
 801b1b4:	6859      	ldr	r1, [r3, #4]
 801b1b6:	aa0c      	add	r2, sp, #48	@ 0x30
 801b1b8:	c203      	stmia	r2!, {r0, r1}
 801b1ba:	a80a      	add	r0, sp, #40	@ 0x28
 801b1bc:	f7f8 ffba 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b1c0:	4621      	mov	r1, r4
 801b1c2:	a80c      	add	r0, sp, #48	@ 0x30
 801b1c4:	f7f8 ffde 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b1c8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801b1cc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b1d0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801b1d4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b1d8:	bfde      	ittt	le
 801b1da:	b2b3      	uxthle	r3, r6
 801b1dc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b1e0:	fb92 f3f3 	sdivle	r3, r2, r3
 801b1e4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b1e8:	bfc8      	it	gt
 801b1ea:	2301      	movgt	r3, #1
 801b1ec:	fb92 f1f3 	sdiv	r1, r2, r3
 801b1f0:	fa1f fc81 	uxth.w	ip, r1
 801b1f4:	fb0c 2413 	mls	r4, ip, r3, r2
 801b1f8:	fb14 f406 	smulbb	r4, r4, r6
 801b1fc:	441d      	add	r5, r3
 801b1fe:	4404      	add	r4, r0
 801b200:	4661      	mov	r1, ip
 801b202:	3d01      	subs	r5, #1
 801b204:	b2a4      	uxth	r4, r4
 801b206:	fb95 f5f3 	sdiv	r5, r5, r3
 801b20a:	b131      	cbz	r1, 801b21a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b20c:	9b05      	ldr	r3, [sp, #20]
 801b20e:	9900      	ldr	r1, [sp, #0]
 801b210:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b214:	ba1b      	rev	r3, r3
 801b216:	4419      	add	r1, r3
 801b218:	9100      	str	r1, [sp, #0]
 801b21a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b21e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801b222:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801b226:	4418      	add	r0, r3
 801b228:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b22c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b230:	441a      	add	r2, r3
 801b232:	4b6a      	ldr	r3, [pc, #424]	@ (801b3dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b234:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801b238:	6818      	ldr	r0, [r3, #0]
 801b23a:	6803      	ldr	r3, [r0, #0]
 801b23c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b23e:	4798      	blx	r3
 801b240:	4967      	ldr	r1, [pc, #412]	@ (801b3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b242:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b246:	880b      	ldrh	r3, [r1, #0]
 801b248:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801b24c:	9109      	str	r1, [sp, #36]	@ 0x24
 801b24e:	fb03 c202 	mla	r2, r3, r2, ip
 801b252:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b256:	4373      	muls	r3, r6
 801b258:	b2ad      	uxth	r5, r5
 801b25a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b25e:	00ad      	lsls	r5, r5, #2
 801b260:	9306      	str	r3, [sp, #24]
 801b262:	1d2b      	adds	r3, r5, #4
 801b264:	9307      	str	r3, [sp, #28]
 801b266:	9b01      	ldr	r3, [sp, #4]
 801b268:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b26c:	9103      	str	r1, [sp, #12]
 801b26e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801b272:	2c00      	cmp	r4, #0
 801b274:	bf0c      	ite	eq
 801b276:	46c6      	moveq	lr, r8
 801b278:	f04f 0e00 	movne.w	lr, #0
 801b27c:	2300      	movs	r3, #0
 801b27e:	b292      	uxth	r2, r2
 801b280:	fa1f fe8e 	uxth.w	lr, lr
 801b284:	9302      	str	r3, [sp, #8]
 801b286:	9204      	str	r2, [sp, #16]
 801b288:	9a06      	ldr	r2, [sp, #24]
 801b28a:	4282      	cmp	r2, r0
 801b28c:	f240 809d 	bls.w	801b3ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b290:	b963      	cbnz	r3, 801b2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b292:	9b00      	ldr	r3, [sp, #0]
 801b294:	781a      	ldrb	r2, [r3, #0]
 801b296:	0993      	lsrs	r3, r2, #6
 801b298:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b29c:	9202      	str	r2, [sp, #8]
 801b29e:	1e5a      	subs	r2, r3, #1
 801b2a0:	2a02      	cmp	r2, #2
 801b2a2:	d815      	bhi.n	801b2d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b2a4:	9a00      	ldr	r2, [sp, #0]
 801b2a6:	3201      	adds	r2, #1
 801b2a8:	9200      	str	r2, [sp, #0]
 801b2aa:	b29b      	uxth	r3, r3
 801b2ac:	b1b4      	cbz	r4, 801b2dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b2ae:	429c      	cmp	r4, r3
 801b2b0:	bf95      	itete	ls
 801b2b2:	1b1c      	subls	r4, r3, r4
 801b2b4:	1ae4      	subhi	r4, r4, r3
 801b2b6:	fa1f fa84 	uxthls.w	sl, r4
 801b2ba:	b2a4      	uxthhi	r4, r4
 801b2bc:	bf87      	ittee	hi
 801b2be:	4671      	movhi	r1, lr
 801b2c0:	f04f 0a00 	movhi.w	sl, #0
 801b2c4:	fa1f f188 	uxthls.w	r1, r8
 801b2c8:	2400      	movls	r4, #0
 801b2ca:	4653      	mov	r3, sl
 801b2cc:	468e      	mov	lr, r1
 801b2ce:	e7db      	b.n	801b288 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b2d0:	9a00      	ldr	r2, [sp, #0]
 801b2d2:	9b00      	ldr	r3, [sp, #0]
 801b2d4:	3202      	adds	r2, #2
 801b2d6:	785b      	ldrb	r3, [r3, #1]
 801b2d8:	9200      	str	r2, [sp, #0]
 801b2da:	e7e7      	b.n	801b2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b2dc:	2202      	movs	r2, #2
 801b2de:	4615      	mov	r5, r2
 801b2e0:	9907      	ldr	r1, [sp, #28]
 801b2e2:	9a02      	ldr	r2, [sp, #8]
 801b2e4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b2e8:	9905      	ldr	r1, [sp, #20]
 801b2ea:	4573      	cmp	r3, lr
 801b2ec:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b2f0:	9a01      	ldr	r2, [sp, #4]
 801b2f2:	bf2b      	itete	cs
 801b2f4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b2f8:	ebae 0103 	subcc.w	r1, lr, r3
 801b2fc:	46f1      	movcs	r9, lr
 801b2fe:	4699      	movcc	r9, r3
 801b300:	bf27      	ittee	cs
 801b302:	fa1f fa8a 	uxthcs.w	sl, sl
 801b306:	4621      	movcs	r1, r4
 801b308:	b289      	uxthcc	r1, r1
 801b30a:	46a2      	movcc	sl, r4
 801b30c:	2aff      	cmp	r2, #255	@ 0xff
 801b30e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b312:	d105      	bne.n	801b320 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b314:	4481      	add	r9, r0
 801b316:	4581      	cmp	r9, r0
 801b318:	d045      	beq.n	801b3a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b31a:	f820 cb02 	strh.w	ip, [r0], #2
 801b31e:	e7fa      	b.n	801b316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b320:	9d03      	ldr	r5, [sp, #12]
 801b322:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b326:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b32a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b32e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b332:	436a      	muls	r2, r5
 801b334:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b338:	fa5f fc8c 	uxtb.w	ip, ip
 801b33c:	9208      	str	r2, [sp, #32]
 801b33e:	fb0b fb05 	mul.w	fp, fp, r5
 801b342:	fb0c fc05 	mul.w	ip, ip, r5
 801b346:	4481      	add	r9, r0
 801b348:	4581      	cmp	r9, r0
 801b34a:	d02c      	beq.n	801b3a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b34c:	8802      	ldrh	r2, [r0, #0]
 801b34e:	9d04      	ldr	r5, [sp, #16]
 801b350:	9f04      	ldr	r7, [sp, #16]
 801b352:	1216      	asrs	r6, r2, #8
 801b354:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b358:	fb16 f605 	smulbb	r6, r6, r5
 801b35c:	9d08      	ldr	r5, [sp, #32]
 801b35e:	442e      	add	r6, r5
 801b360:	10d5      	asrs	r5, r2, #3
 801b362:	00d2      	lsls	r2, r2, #3
 801b364:	b2d2      	uxtb	r2, r2
 801b366:	fb12 f207 	smulbb	r2, r2, r7
 801b36a:	b2b6      	uxth	r6, r6
 801b36c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b370:	4462      	add	r2, ip
 801b372:	fb15 f507 	smulbb	r5, r5, r7
 801b376:	b292      	uxth	r2, r2
 801b378:	1c77      	adds	r7, r6, #1
 801b37a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b37e:	1c57      	adds	r7, r2, #1
 801b380:	445d      	add	r5, fp
 801b382:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b386:	b2ad      	uxth	r5, r5
 801b388:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b38c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b390:	4316      	orrs	r6, r2
 801b392:	1c6a      	adds	r2, r5, #1
 801b394:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b398:	096d      	lsrs	r5, r5, #5
 801b39a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b39e:	432e      	orrs	r6, r5
 801b3a0:	f820 6b02 	strh.w	r6, [r0], #2
 801b3a4:	e7d0      	b.n	801b348 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b3a6:	4573      	cmp	r3, lr
 801b3a8:	d38f      	bcc.n	801b2ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b3aa:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b3ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b3b0:	fa1f f188 	uxth.w	r1, r8
 801b3b4:	1a64      	subs	r4, r4, r1
 801b3b6:	881b      	ldrh	r3, [r3, #0]
 801b3b8:	b2a4      	uxth	r4, r4
 801b3ba:	2c00      	cmp	r4, #0
 801b3bc:	eba3 0308 	sub.w	r3, r3, r8
 801b3c0:	bf18      	it	ne
 801b3c2:	2100      	movne	r1, #0
 801b3c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b3c8:	e77f      	b.n	801b2ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b3ca:	4b04      	ldr	r3, [pc, #16]	@ (801b3dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b3cc:	6818      	ldr	r0, [r3, #0]
 801b3ce:	6803      	ldr	r3, [r0, #0]
 801b3d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b3d2:	4798      	blx	r3
 801b3d4:	b00f      	add	sp, #60	@ 0x3c
 801b3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3da:	bf00      	nop
 801b3dc:	20013f60 	.word	0x20013f60
 801b3e0:	20013f5a 	.word	0x20013f5a

0801b3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b3e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3e8:	b09f      	sub	sp, #124	@ 0x7c
 801b3ea:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801b3ee:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801b3f2:	9209      	str	r2, [sp, #36]	@ 0x24
 801b3f4:	461d      	mov	r5, r3
 801b3f6:	4604      	mov	r4, r0
 801b3f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b3fa:	2a00      	cmp	r2, #0
 801b3fc:	f000 81eb 	beq.w	801b7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b400:	6828      	ldr	r0, [r5, #0]
 801b402:	6869      	ldr	r1, [r5, #4]
 801b404:	aa1a      	add	r2, sp, #104	@ 0x68
 801b406:	c203      	stmia	r2!, {r0, r1}
 801b408:	6818      	ldr	r0, [r3, #0]
 801b40a:	6859      	ldr	r1, [r3, #4]
 801b40c:	aa1c      	add	r2, sp, #112	@ 0x70
 801b40e:	c203      	stmia	r2!, {r0, r1}
 801b410:	a81a      	add	r0, sp, #104	@ 0x68
 801b412:	f7f8 fe8f 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b416:	4629      	mov	r1, r5
 801b418:	a81c      	add	r0, sp, #112	@ 0x70
 801b41a:	f7f8 feb3 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b41e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801b422:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801b426:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801b42a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801b42e:	bfd7      	itett	le
 801b430:	b29a      	uxthle	r2, r3
 801b432:	2201      	movgt	r2, #1
 801b434:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801b438:	fb91 f2f2 	sdivle	r2, r1, r2
 801b43c:	9202      	str	r2, [sp, #8]
 801b43e:	9802      	ldr	r0, [sp, #8]
 801b440:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801b444:	fb92 f0f0 	sdiv	r0, r2, r0
 801b448:	b280      	uxth	r0, r0
 801b44a:	9010      	str	r0, [sp, #64]	@ 0x40
 801b44c:	9902      	ldr	r1, [sp, #8]
 801b44e:	9802      	ldr	r0, [sp, #8]
 801b450:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801b452:	4488      	add	r8, r1
 801b454:	fb05 2510 	mls	r5, r5, r0, r2
 801b458:	fb15 f503 	smulbb	r5, r5, r3
 801b45c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b460:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801b464:	fb98 f8f1 	sdiv	r8, r8, r1
 801b468:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801b46c:	440d      	add	r5, r1
 801b46e:	4419      	add	r1, r3
 801b470:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801b474:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801b478:	441a      	add	r2, r3
 801b47a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801b47e:	9304      	str	r3, [sp, #16]
 801b480:	4b95      	ldr	r3, [pc, #596]	@ (801b6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b482:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801b486:	6818      	ldr	r0, [r3, #0]
 801b488:	6803      	ldr	r3, [r0, #0]
 801b48a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b48c:	4798      	blx	r3
 801b48e:	4b93      	ldr	r3, [pc, #588]	@ (801b6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b490:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801b494:	881a      	ldrh	r2, [r3, #0]
 801b496:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801b49a:	9318      	str	r3, [sp, #96]	@ 0x60
 801b49c:	fb02 7101 	mla	r1, r2, r1, r7
 801b4a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b4a4:	4356      	muls	r6, r2
 801b4a6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b4aa:	f108 0801 	add.w	r8, r8, #1
 801b4ae:	920a      	str	r2, [sp, #40]	@ 0x28
 801b4b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b4b2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801b4b6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b4b8:	fa1f f888 	uxth.w	r8, r8
 801b4bc:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b4c0:	f108 0204 	add.w	r2, r8, #4
 801b4c4:	9211      	str	r2, [sp, #68]	@ 0x44
 801b4c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b4c8:	4b85      	ldr	r3, [pc, #532]	@ (801b6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b4ca:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801b4ce:	b2ad      	uxth	r5, r5
 801b4d0:	9215      	str	r2, [sp, #84]	@ 0x54
 801b4d2:	2d00      	cmp	r5, #0
 801b4d4:	9a04      	ldr	r2, [sp, #16]
 801b4d6:	f04f 0100 	mov.w	r1, #0
 801b4da:	bf18      	it	ne
 801b4dc:	2200      	movne	r2, #0
 801b4de:	1b1b      	subs	r3, r3, r4
 801b4e0:	b292      	uxth	r2, r2
 801b4e2:	910d      	str	r1, [sp, #52]	@ 0x34
 801b4e4:	9319      	str	r3, [sp, #100]	@ 0x64
 801b4e6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801b4e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b4ea:	fa11 f383 	uxtah	r3, r1, r3
 801b4ee:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801b4f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b4f4:	3304      	adds	r3, #4
 801b4f6:	9306      	str	r3, [sp, #24]
 801b4f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b4fa:	4283      	cmp	r3, r0
 801b4fc:	f240 8166 	bls.w	801b7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b500:	9902      	ldr	r1, [sp, #8]
 801b502:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801b506:	fbb5 f3f3 	udiv	r3, r5, r3
 801b50a:	1acb      	subs	r3, r1, r3
 801b50c:	b29b      	uxth	r3, r3
 801b50e:	9316      	str	r3, [sp, #88]	@ 0x58
 801b510:	9b06      	ldr	r3, [sp, #24]
 801b512:	9e06      	ldr	r6, [sp, #24]
 801b514:	7859      	ldrb	r1, [r3, #1]
 801b516:	789b      	ldrb	r3, [r3, #2]
 801b518:	7836      	ldrb	r6, [r6, #0]
 801b51a:	9612      	str	r6, [sp, #72]	@ 0x48
 801b51c:	021b      	lsls	r3, r3, #8
 801b51e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b522:	9906      	ldr	r1, [sp, #24]
 801b524:	78c9      	ldrb	r1, [r1, #3]
 801b526:	430b      	orrs	r3, r1
 801b528:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801b52a:	3601      	adds	r6, #1
 801b52c:	4419      	add	r1, r3
 801b52e:	9605      	str	r6, [sp, #20]
 801b530:	1c4e      	adds	r6, r1, #1
 801b532:	9603      	str	r6, [sp, #12]
 801b534:	7849      	ldrb	r1, [r1, #1]
 801b536:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b538:	0209      	lsls	r1, r1, #8
 801b53a:	5cf3      	ldrb	r3, [r6, r3]
 801b53c:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801b540:	4319      	orrs	r1, r3
 801b542:	b28b      	uxth	r3, r1
 801b544:	930c      	str	r3, [sp, #48]	@ 0x30
 801b546:	2300      	movs	r3, #0
 801b548:	f04f 0a01 	mov.w	sl, #1
 801b54c:	9307      	str	r3, [sp, #28]
 801b54e:	469c      	mov	ip, r3
 801b550:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801b554:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801b558:	46d3      	mov	fp, sl
 801b55a:	4657      	mov	r7, sl
 801b55c:	930e      	str	r3, [sp, #56]	@ 0x38
 801b55e:	2d00      	cmp	r5, #0
 801b560:	d07e      	beq.n	801b660 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b562:	42af      	cmp	r7, r5
 801b564:	d26e      	bcs.n	801b644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b566:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b568:	9201      	str	r2, [sp, #4]
 801b56a:	1bed      	subs	r5, r5, r7
 801b56c:	4283      	cmp	r3, r0
 801b56e:	b2ad      	uxth	r5, r5
 801b570:	d802      	bhi.n	801b578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b572:	e073      	b.n	801b65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b574:	2b00      	cmp	r3, #0
 801b576:	d15f      	bne.n	801b638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b578:	9b03      	ldr	r3, [sp, #12]
 801b57a:	785b      	ldrb	r3, [r3, #1]
 801b57c:	f1cb 0207 	rsb	r2, fp, #7
 801b580:	4093      	lsls	r3, r2
 801b582:	005b      	lsls	r3, r3, #1
 801b584:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801b588:	9b03      	ldr	r3, [sp, #12]
 801b58a:	781b      	ldrb	r3, [r3, #0]
 801b58c:	fa43 f30b 	asr.w	r3, r3, fp
 801b590:	b2db      	uxtb	r3, r3
 801b592:	4313      	orrs	r3, r2
 801b594:	f10b 0201 	add.w	r2, fp, #1
 801b598:	fa5f fb82 	uxtb.w	fp, r2
 801b59c:	9a03      	ldr	r2, [sp, #12]
 801b59e:	f1bb 0f08 	cmp.w	fp, #8
 801b5a2:	bf15      	itete	ne
 801b5a4:	3201      	addne	r2, #1
 801b5a6:	3202      	addeq	r2, #2
 801b5a8:	9203      	strne	r2, [sp, #12]
 801b5aa:	9203      	streq	r2, [sp, #12]
 801b5ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b5ae:	b29f      	uxth	r7, r3
 801b5b0:	bf08      	it	eq
 801b5b2:	f04f 0b00 	moveq.w	fp, #0
 801b5b6:	42ba      	cmp	r2, r7
 801b5b8:	d309      	bcc.n	801b5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b5ba:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801b5be:	2301      	movs	r3, #1
 801b5c0:	9a05      	ldr	r2, [sp, #20]
 801b5c2:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801b5c6:	d30e      	bcc.n	801b5e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b5c8:	469a      	mov	sl, r3
 801b5ca:	2600      	movs	r6, #0
 801b5cc:	e035      	b.n	801b63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b5ce:	9b05      	ldr	r3, [sp, #20]
 801b5d0:	429f      	cmp	r7, r3
 801b5d2:	d318      	bcc.n	801b606 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b5d4:	eb04 030a 	add.w	r3, r4, sl
 801b5d8:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801b5dc:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801b5e0:	f10a 0301 	add.w	r3, sl, #1
 801b5e4:	b29b      	uxth	r3, r3
 801b5e6:	9a05      	ldr	r2, [sp, #20]
 801b5e8:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801b5ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801b5ee:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b5f2:	7116      	strb	r6, [r2, #4]
 801b5f4:	f10a 0601 	add.w	r6, sl, #1
 801b5f8:	80d1      	strh	r1, [r2, #6]
 801b5fa:	7156      	strb	r6, [r2, #5]
 801b5fc:	9a05      	ldr	r2, [sp, #20]
 801b5fe:	3201      	adds	r2, #1
 801b600:	b292      	uxth	r2, r2
 801b602:	9205      	str	r2, [sp, #20]
 801b604:	e7e0      	b.n	801b5c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b606:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b60a:	463a      	mov	r2, r7
 801b60c:	795b      	ldrb	r3, [r3, #5]
 801b60e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801b612:	4426      	add	r6, r4
 801b614:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801b616:	eb01 0c06 	add.w	ip, r1, r6
 801b61a:	f1bc 0f00 	cmp.w	ip, #0
 801b61e:	dd07      	ble.n	801b630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b620:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b624:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b628:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b62c:	88d2      	ldrh	r2, [r2, #6]
 801b62e:	e7f1      	b.n	801b614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b630:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801b634:	b29b      	uxth	r3, r3
 801b636:	e7c3      	b.n	801b5c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b638:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b63a:	970c      	str	r7, [sp, #48]	@ 0x30
 801b63c:	9a01      	ldr	r2, [sp, #4]
 801b63e:	46b4      	mov	ip, r6
 801b640:	461f      	mov	r7, r3
 801b642:	e78c      	b.n	801b55e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b644:	1b7b      	subs	r3, r7, r5
 801b646:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b64a:	9201      	str	r2, [sp, #4]
 801b64c:	eb0c 0605 	add.w	r6, ip, r5
 801b650:	b29b      	uxth	r3, r3
 801b652:	b2b6      	uxth	r6, r6
 801b654:	2500      	movs	r5, #0
 801b656:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b658:	4282      	cmp	r2, r0
 801b65a:	d88b      	bhi.n	801b574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b65c:	9a01      	ldr	r2, [sp, #4]
 801b65e:	e74b      	b.n	801b4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b660:	4297      	cmp	r7, r2
 801b662:	d332      	bcc.n	801b6ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b664:	1abb      	subs	r3, r7, r2
 801b666:	b29b      	uxth	r3, r3
 801b668:	9208      	str	r2, [sp, #32]
 801b66a:	9501      	str	r5, [sp, #4]
 801b66c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b66e:	29ff      	cmp	r1, #255	@ 0xff
 801b670:	9908      	ldr	r1, [sp, #32]
 801b672:	eb0c 0601 	add.w	r6, ip, r1
 801b676:	d135      	bne.n	801b6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b678:	f1a0 0e02 	sub.w	lr, r0, #2
 801b67c:	b2b6      	uxth	r6, r6
 801b67e:	45b4      	cmp	ip, r6
 801b680:	f040 808c 	bne.w	801b79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b684:	9908      	ldr	r1, [sp, #32]
 801b686:	4297      	cmp	r7, r2
 801b688:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b68c:	d3e2      	bcc.n	801b654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b68e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801b690:	9904      	ldr	r1, [sp, #16]
 801b692:	8812      	ldrh	r2, [r2, #0]
 801b694:	1a52      	subs	r2, r2, r1
 801b696:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b69a:	9a07      	ldr	r2, [sp, #28]
 801b69c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801b69e:	3201      	adds	r2, #1
 801b6a0:	428a      	cmp	r2, r1
 801b6a2:	9207      	str	r2, [sp, #28]
 801b6a4:	f040 8087 	bne.w	801b7b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b6a8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801b6ac:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801b6b0:	9b04      	ldr	r3, [sp, #16]
 801b6b2:	1bed      	subs	r5, r5, r7
 801b6b4:	b2ad      	uxth	r5, r5
 801b6b6:	2d00      	cmp	r5, #0
 801b6b8:	bf08      	it	eq
 801b6ba:	461a      	moveq	r2, r3
 801b6bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b6be:	bf18      	it	ne
 801b6c0:	2200      	movne	r2, #0
 801b6c2:	3301      	adds	r3, #1
 801b6c4:	930d      	str	r3, [sp, #52]	@ 0x34
 801b6c6:	b292      	uxth	r2, r2
 801b6c8:	e70d      	b.n	801b4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b6ca:	1bd1      	subs	r1, r2, r7
 801b6cc:	b28b      	uxth	r3, r1
 801b6ce:	9301      	str	r3, [sp, #4]
 801b6d0:	9708      	str	r7, [sp, #32]
 801b6d2:	462b      	mov	r3, r5
 801b6d4:	e7ca      	b.n	801b66c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b6d6:	bf00      	nop
 801b6d8:	20013f60 	.word	0x20013f60
 801b6dc:	20013f5a 	.word	0x20013f5a
 801b6e0:	fffff7fb 	.word	0xfffff7fb
 801b6e4:	b2b6      	uxth	r6, r6
 801b6e6:	900b      	str	r0, [sp, #44]	@ 0x2c
 801b6e8:	45b4      	cmp	ip, r6
 801b6ea:	d0cb      	beq.n	801b684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b6ec:	f10c 0101 	add.w	r1, ip, #1
 801b6f0:	44a4      	add	ip, r4
 801b6f2:	9117      	str	r1, [sp, #92]	@ 0x5c
 801b6f4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801b6f8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801b6fa:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b6fe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b700:	f8b1 c000 	ldrh.w	ip, [r1]
 801b704:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b706:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b70a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801b70e:	fb1e fe01 	smulbb	lr, lr, r1
 801b712:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b716:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b718:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801b71c:	fb08 e801 	mla	r8, r8, r1, lr
 801b720:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b724:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b726:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b72a:	fb19 f901 	smulbb	r9, r9, r1
 801b72e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b732:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b734:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b738:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b73c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b740:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b742:	fa5f fc8c 	uxtb.w	ip, ip
 801b746:	fb1c fc01 	smulbb	ip, ip, r1
 801b74a:	00ed      	lsls	r5, r5, #3
 801b74c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b74e:	b2ed      	uxtb	r5, r5
 801b750:	fb05 c501 	mla	r5, r5, r1, ip
 801b754:	fa1f f888 	uxth.w	r8, r8
 801b758:	fa1f fe8e 	uxth.w	lr, lr
 801b75c:	b2ad      	uxth	r5, r5
 801b75e:	f108 0c01 	add.w	ip, r8, #1
 801b762:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b766:	f10e 0901 	add.w	r9, lr, #1
 801b76a:	f105 0c01 	add.w	ip, r5, #1
 801b76e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b772:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b776:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b77a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801b77e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b782:	ea4c 0808 	orr.w	r8, ip, r8
 801b786:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b788:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801b78c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b790:	ea48 0809 	orr.w	r8, r8, r9
 801b794:	f821 8b02 	strh.w	r8, [r1], #2
 801b798:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b79a:	e7a5      	b.n	801b6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b79c:	f10c 0801 	add.w	r8, ip, #1
 801b7a0:	44a4      	add	ip, r4
 801b7a2:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801b7a4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801b7a8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b7ac:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b7b0:	fa1f fc88 	uxth.w	ip, r8
 801b7b4:	e763      	b.n	801b67e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b7b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b7ba:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801b7be:	1aad      	subs	r5, r5, r2
 801b7c0:	b2ad      	uxth	r5, r5
 801b7c2:	2d00      	cmp	r5, #0
 801b7c4:	bf18      	it	ne
 801b7c6:	2200      	movne	r2, #0
 801b7c8:	9201      	str	r2, [sp, #4]
 801b7ca:	e744      	b.n	801b656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b7cc:	4b03      	ldr	r3, [pc, #12]	@ (801b7dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b7ce:	6818      	ldr	r0, [r3, #0]
 801b7d0:	6803      	ldr	r3, [r0, #0]
 801b7d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b7d4:	4798      	blx	r3
 801b7d6:	b01f      	add	sp, #124	@ 0x7c
 801b7d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7dc:	20013f60 	.word	0x20013f60

0801b7e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801b7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7e4:	b093      	sub	sp, #76	@ 0x4c
 801b7e6:	4616      	mov	r6, r2
 801b7e8:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801b7ec:	9003      	str	r0, [sp, #12]
 801b7ee:	460d      	mov	r5, r1
 801b7f0:	9201      	str	r2, [sp, #4]
 801b7f2:	2a00      	cmp	r2, #0
 801b7f4:	f000 8304 	beq.w	801be00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801b7f8:	6830      	ldr	r0, [r6, #0]
 801b7fa:	6871      	ldr	r1, [r6, #4]
 801b7fc:	ac0e      	add	r4, sp, #56	@ 0x38
 801b7fe:	c403      	stmia	r4!, {r0, r1}
 801b800:	6818      	ldr	r0, [r3, #0]
 801b802:	6859      	ldr	r1, [r3, #4]
 801b804:	ac10      	add	r4, sp, #64	@ 0x40
 801b806:	c403      	stmia	r4!, {r0, r1}
 801b808:	a80e      	add	r0, sp, #56	@ 0x38
 801b80a:	f7f8 fc93 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b80e:	4631      	mov	r1, r6
 801b810:	a810      	add	r0, sp, #64	@ 0x40
 801b812:	f7f8 fcb7 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b816:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b81a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801b81e:	bfd7      	itett	le
 801b820:	b293      	uxthle	r3, r2
 801b822:	2301      	movgt	r3, #1
 801b824:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801b828:	fb91 f3f3 	sdivle	r3, r1, r3
 801b82c:	9304      	str	r3, [sp, #16]
 801b82e:	f105 0308 	add.w	r3, r5, #8
 801b832:	9904      	ldr	r1, [sp, #16]
 801b834:	9308      	str	r3, [sp, #32]
 801b836:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801b83a:	440b      	add	r3, r1
 801b83c:	3b01      	subs	r3, #1
 801b83e:	fb93 f3f1 	sdiv	r3, r3, r1
 801b842:	9908      	ldr	r1, [sp, #32]
 801b844:	3b01      	subs	r3, #1
 801b846:	b29b      	uxth	r3, r3
 801b848:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b84c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b84e:	9904      	ldr	r1, [sp, #16]
 801b850:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801b854:	fb93 f0f1 	sdiv	r0, r3, r1
 801b858:	b284      	uxth	r4, r0
 801b85a:	9405      	str	r4, [sp, #20]
 801b85c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801b860:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801b864:	fb05 3914 	mls	r9, r5, r4, r3
 801b868:	fb19 f902 	smulbb	r9, r9, r2
 801b86c:	4489      	add	r9, r1
 801b86e:	fa1f f989 	uxth.w	r9, r9
 801b872:	2d00      	cmp	r5, #0
 801b874:	d05d      	beq.n	801b932 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801b876:	1e6a      	subs	r2, r5, #1
 801b878:	9808      	ldr	r0, [sp, #32]
 801b87a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801b87e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b880:	fa9a fa8a 	rev.w	sl, sl
 801b884:	4492      	add	sl, r2
 801b886:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801b88a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801b88e:	4411      	add	r1, r2
 801b890:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801b894:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801b898:	4413      	add	r3, r2
 801b89a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801b89e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801b8a2:	9302      	str	r3, [sp, #8]
 801b8a4:	4bcb      	ldr	r3, [pc, #812]	@ (801bbd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801b8a6:	6818      	ldr	r0, [r3, #0]
 801b8a8:	6803      	ldr	r3, [r0, #0]
 801b8aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b8ac:	4798      	blx	r3
 801b8ae:	4bca      	ldr	r3, [pc, #808]	@ (801bbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801b8b0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801b8b4:	881b      	ldrh	r3, [r3, #0]
 801b8b6:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801b8ba:	fb03 2404 	mla	r4, r3, r4, r2
 801b8be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b8c2:	436b      	muls	r3, r5
 801b8c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b8c8:	930d      	str	r3, [sp, #52]	@ 0x34
 801b8ca:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801b8ce:	fb99 f3f3 	sdiv	r3, r9, r3
 801b8d2:	9306      	str	r3, [sp, #24]
 801b8d4:	9b01      	ldr	r3, [sp, #4]
 801b8d6:	43db      	mvns	r3, r3
 801b8d8:	b2db      	uxtb	r3, r3
 801b8da:	930a      	str	r3, [sp, #40]	@ 0x28
 801b8dc:	9b03      	ldr	r3, [sp, #12]
 801b8de:	3304      	adds	r3, #4
 801b8e0:	4618      	mov	r0, r3
 801b8e2:	2280      	movs	r2, #128	@ 0x80
 801b8e4:	2100      	movs	r1, #0
 801b8e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b8e8:	f00c fbe9 	bl	80280be <memset>
 801b8ec:	4bbb      	ldr	r3, [pc, #748]	@ (801bbdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801b8ee:	9300      	str	r3, [sp, #0]
 801b8f0:	2300      	movs	r3, #0
 801b8f2:	f04f 0600 	mov.w	r6, #0
 801b8f6:	9307      	str	r3, [sp, #28]
 801b8f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b8fa:	42a3      	cmp	r3, r4
 801b8fc:	f240 827b 	bls.w	801bdf6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801b900:	f04f 0e07 	mov.w	lr, #7
 801b904:	f1b9 0f00 	cmp.w	r9, #0
 801b908:	f000 8159 	beq.w	801bbbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801b90c:	f89a 5000 	ldrb.w	r5, [sl]
 801b910:	b2ed      	uxtb	r5, r5
 801b912:	11aa      	asrs	r2, r5, #6
 801b914:	f10a 0701 	add.w	r7, sl, #1
 801b918:	d10e      	bne.n	801b938 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801b91a:	9b03      	ldr	r3, [sp, #12]
 801b91c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b920:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b924:	88ae      	ldrh	r6, [r5, #4]
 801b926:	f109 39ff 	add.w	r9, r9, #4294967295
 801b92a:	fa1f f989 	uxth.w	r9, r9
 801b92e:	46ba      	mov	sl, r7
 801b930:	e7e8      	b.n	801b904 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801b932:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801b936:	e7a6      	b.n	801b886 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801b938:	2a01      	cmp	r2, #1
 801b93a:	d129      	bne.n	801b990 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801b93c:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801b940:	f005 0203 	and.w	r2, r5, #3
 801b944:	3b02      	subs	r3, #2
 801b946:	4413      	add	r3, r2
 801b948:	f003 031f 	and.w	r3, r3, #31
 801b94c:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801b950:	f363 0604 	bfi	r6, r3, #0, #5
 801b954:	3a02      	subs	r2, #2
 801b956:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801b95a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b95e:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801b962:	f362 164a 	bfi	r6, r2, #5, #6
 801b966:	3d02      	subs	r5, #2
 801b968:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801b96c:	f005 051f 	and.w	r5, r5, #31
 801b970:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b974:	2103      	movs	r1, #3
 801b976:	fb11 2205 	smlabb	r2, r1, r5, r2
 801b97a:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801b97e:	9a03      	ldr	r2, [sp, #12]
 801b980:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b984:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b988:	f365 26cf 	bfi	r6, r5, #11, #5
 801b98c:	809e      	strh	r6, [r3, #4]
 801b98e:	e7ca      	b.n	801b926 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801b990:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b994:	2a02      	cmp	r2, #2
 801b996:	b2ab      	uxth	r3, r5
 801b998:	d136      	bne.n	801ba08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801b99a:	2101      	movs	r1, #1
 801b99c:	fb12 1205 	smlabb	r2, r2, r5, r1
 801b9a0:	4492      	add	sl, r2
 801b9a2:	463a      	mov	r2, r7
 801b9a4:	4552      	cmp	r2, sl
 801b9a6:	d01c      	beq.n	801b9e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801b9a8:	4694      	mov	ip, r2
 801b9aa:	f04f 0b03 	mov.w	fp, #3
 801b9ae:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801b9b2:	7852      	ldrb	r2, [r2, #1]
 801b9b4:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801b9b8:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801b9bc:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801b9c0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b9c4:	f001 021f 	and.w	r2, r1, #31
 801b9c8:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801b9cc:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b9d0:	9a03      	ldr	r2, [sp, #12]
 801b9d2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b9d6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b9da:	460e      	mov	r6, r1
 801b9dc:	8081      	strh	r1, [r0, #4]
 801b9de:	4662      	mov	r2, ip
 801b9e0:	e7e0      	b.n	801b9a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801b9e2:	4599      	cmp	r9, r3
 801b9e4:	d20b      	bcs.n	801b9fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801b9e6:	eba5 0509 	sub.w	r5, r5, r9
 801b9ea:	2d00      	cmp	r5, #0
 801b9ec:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801b9f0:	f300 8209 	bgt.w	801be06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801b9f4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b9f8:	2301      	movs	r3, #1
 801b9fa:	9307      	str	r3, [sp, #28]
 801b9fc:	e00c      	b.n	801ba18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b9fe:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ba02:	eba9 0903 	sub.w	r9, r9, r3
 801ba06:	e790      	b.n	801b92a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801ba08:	4599      	cmp	r9, r3
 801ba0a:	d2fa      	bcs.n	801ba02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801ba0c:	eba5 0509 	sub.w	r5, r5, r9
 801ba10:	2d00      	cmp	r5, #0
 801ba12:	dc1d      	bgt.n	801ba50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801ba14:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801ba18:	f04f 0b00 	mov.w	fp, #0
 801ba1c:	f1b8 0f00 	cmp.w	r8, #0
 801ba20:	f340 81a1 	ble.w	801bd66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801ba24:	783b      	ldrb	r3, [r7, #0]
 801ba26:	b2db      	uxtb	r3, r3
 801ba28:	119a      	asrs	r2, r3, #6
 801ba2a:	f107 0a01 	add.w	sl, r7, #1
 801ba2e:	f040 80d7 	bne.w	801bbe0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801ba32:	9a03      	ldr	r2, [sp, #12]
 801ba34:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ba38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ba3c:	889e      	ldrh	r6, [r3, #4]
 801ba3e:	9b01      	ldr	r3, [sp, #4]
 801ba40:	2bff      	cmp	r3, #255	@ 0xff
 801ba42:	f040 81e9 	bne.w	801be18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801ba46:	8026      	strh	r6, [r4, #0]
 801ba48:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba4c:	3402      	adds	r4, #2
 801ba4e:	e0be      	b.n	801bbce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801ba50:	9b02      	ldr	r3, [sp, #8]
 801ba52:	9a02      	ldr	r2, [sp, #8]
 801ba54:	42ab      	cmp	r3, r5
 801ba56:	bfa8      	it	ge
 801ba58:	462b      	movge	r3, r5
 801ba5a:	eba2 0803 	sub.w	r8, r2, r3
 801ba5e:	9a07      	ldr	r2, [sp, #28]
 801ba60:	1aed      	subs	r5, r5, r3
 801ba62:	2a00      	cmp	r2, #0
 801ba64:	d05a      	beq.n	801bb1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801ba66:	9a01      	ldr	r2, [sp, #4]
 801ba68:	2aff      	cmp	r2, #255	@ 0xff
 801ba6a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ba6e:	d049      	beq.n	801bb04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801ba70:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801ba74:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801ba78:	42a3      	cmp	r3, r4
 801ba7a:	f240 80a5 	bls.w	801bbc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801ba7e:	46bc      	mov	ip, r7
 801ba80:	8820      	ldrh	r0, [r4, #0]
 801ba82:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801ba86:	7879      	ldrb	r1, [r7, #1]
 801ba88:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801ba8c:	b212      	sxth	r2, r2
 801ba8e:	b291      	uxth	r1, r2
 801ba90:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801ba94:	120f      	asrs	r7, r1, #8
 801ba96:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801ba9a:	fb1a fa09 	smulbb	sl, sl, r9
 801ba9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801baa2:	fb07 a70e 	mla	r7, r7, lr, sl
 801baa6:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801baaa:	00c0      	lsls	r0, r0, #3
 801baac:	10c9      	asrs	r1, r1, #3
 801baae:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801bab2:	00d2      	lsls	r2, r2, #3
 801bab4:	b2c0      	uxtb	r0, r0
 801bab6:	fb1a fa09 	smulbb	sl, sl, r9
 801baba:	fb10 f009 	smulbb	r0, r0, r9
 801babe:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bac2:	b2d2      	uxtb	r2, r2
 801bac4:	b2bf      	uxth	r7, r7
 801bac6:	fb01 a10e 	mla	r1, r1, lr, sl
 801baca:	fb02 020e 	mla	r2, r2, lr, r0
 801bace:	b289      	uxth	r1, r1
 801bad0:	b292      	uxth	r2, r2
 801bad2:	1c78      	adds	r0, r7, #1
 801bad4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801bad8:	f101 0a01 	add.w	sl, r1, #1
 801badc:	1c50      	adds	r0, r2, #1
 801bade:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bae2:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801bae6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801baea:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801baee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801baf2:	4307      	orrs	r7, r0
 801baf4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801baf8:	ea47 070a 	orr.w	r7, r7, sl
 801bafc:	f824 7b02 	strh.w	r7, [r4], #2
 801bb00:	4667      	mov	r7, ip
 801bb02:	e7b9      	b.n	801ba78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801bb04:	42a3      	cmp	r3, r4
 801bb06:	d95f      	bls.n	801bbc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801bb08:	463a      	mov	r2, r7
 801bb0a:	f812 1b02 	ldrb.w	r1, [r2], #2
 801bb0e:	7878      	ldrb	r0, [r7, #1]
 801bb10:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801bb14:	f824 1b02 	strh.w	r1, [r4], #2
 801bb18:	4617      	mov	r7, r2
 801bb1a:	e7f3      	b.n	801bb04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801bb1c:	9901      	ldr	r1, [sp, #4]
 801bb1e:	29ff      	cmp	r1, #255	@ 0xff
 801bb20:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801bb24:	b2b2      	uxth	r2, r6
 801bb26:	d044      	beq.n	801bbb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801bb28:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801bb2c:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801bb30:	ea4f 2922 	mov.w	r9, r2, asr #8
 801bb34:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801bb38:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801bb3c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801bb40:	4608      	mov	r0, r1
 801bb42:	fb09 f901 	mul.w	r9, r9, r1
 801bb46:	fb0e fe01 	mul.w	lr, lr, r1
 801bb4a:	00d1      	lsls	r1, r2, #3
 801bb4c:	b2c9      	uxtb	r1, r1
 801bb4e:	4341      	muls	r1, r0
 801bb50:	429c      	cmp	r4, r3
 801bb52:	f4bf af61 	bcs.w	801ba18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bb56:	8822      	ldrh	r2, [r4, #0]
 801bb58:	1210      	asrs	r0, r2, #8
 801bb5a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801bb5e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bb62:	00d2      	lsls	r2, r2, #3
 801bb64:	fb00 900a 	mla	r0, r0, sl, r9
 801bb68:	b2d2      	uxtb	r2, r2
 801bb6a:	b280      	uxth	r0, r0
 801bb6c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801bb70:	fb02 120a 	mla	r2, r2, sl, r1
 801bb74:	b292      	uxth	r2, r2
 801bb76:	f100 0b01 	add.w	fp, r0, #1
 801bb7a:	fb0c ec0a 	mla	ip, ip, sl, lr
 801bb7e:	fa1f fc8c 	uxth.w	ip, ip
 801bb82:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801bb86:	1c50      	adds	r0, r2, #1
 801bb88:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bb8c:	f10c 0201 	add.w	r2, ip, #1
 801bb90:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bb94:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801bb98:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801bb9c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bba0:	ea40 0b0b 	orr.w	fp, r0, fp
 801bba4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801bba8:	ea4b 0b0c 	orr.w	fp, fp, ip
 801bbac:	f824 bb02 	strh.w	fp, [r4], #2
 801bbb0:	e7ce      	b.n	801bb50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801bbb2:	429c      	cmp	r4, r3
 801bbb4:	f4bf af30 	bcs.w	801ba18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bbb8:	f824 2b02 	strh.w	r2, [r4], #2
 801bbbc:	e7f9      	b.n	801bbb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801bbbe:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801bbc2:	4657      	mov	r7, sl
 801bbc4:	464d      	mov	r5, r9
 801bbc6:	e727      	b.n	801ba18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801bbc8:	2300      	movs	r3, #0
 801bbca:	e716      	b.n	801b9fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801bbcc:	44bb      	add	fp, r7
 801bbce:	4657      	mov	r7, sl
 801bbd0:	e724      	b.n	801ba1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801bbd2:	bf00      	nop
 801bbd4:	20013f60 	.word	0x20013f60
 801bbd8:	20013f5a 	.word	0x20013f5a
 801bbdc:	20000180 	.word	0x20000180
 801bbe0:	2a01      	cmp	r2, #1
 801bbe2:	d12a      	bne.n	801bc3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801bbe4:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801bbe8:	f003 0203 	and.w	r2, r3, #3
 801bbec:	3902      	subs	r1, #2
 801bbee:	4411      	add	r1, r2
 801bbf0:	f001 011f 	and.w	r1, r1, #31
 801bbf4:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801bbf8:	f361 0604 	bfi	r6, r1, #0, #5
 801bbfc:	3802      	subs	r0, #2
 801bbfe:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801bc02:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801bc06:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801bc0a:	f360 164a 	bfi	r6, r0, #5, #6
 801bc0e:	3b02      	subs	r3, #2
 801bc10:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801bc14:	f002 031f 	and.w	r3, r2, #31
 801bc18:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801bc1c:	2203      	movs	r2, #3
 801bc1e:	f363 26cf 	bfi	r6, r3, #11, #5
 801bc22:	fb12 0303 	smlabb	r3, r2, r3, r0
 801bc26:	2207      	movs	r2, #7
 801bc28:	fb12 3301 	smlabb	r3, r2, r1, r3
 801bc2c:	9a03      	ldr	r2, [sp, #12]
 801bc2e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801bc32:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bc36:	809e      	strh	r6, [r3, #4]
 801bc38:	e701      	b.n	801ba3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801bc3a:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801bc3e:	45a8      	cmp	r8, r5
 801bc40:	4647      	mov	r7, r8
 801bc42:	bfa8      	it	ge
 801bc44:	462f      	movge	r7, r5
 801bc46:	2a02      	cmp	r2, #2
 801bc48:	d154      	bne.n	801bcf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801bc4a:	9b01      	ldr	r3, [sp, #4]
 801bc4c:	2bff      	cmp	r3, #255	@ 0xff
 801bc4e:	d01a      	beq.n	801bc86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801bc50:	eb0b 0307 	add.w	r3, fp, r7
 801bc54:	2b40      	cmp	r3, #64	@ 0x40
 801bc56:	dd16      	ble.n	801bc86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801bc58:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801bc5c:	4649      	mov	r1, r9
 801bc5e:	9800      	ldr	r0, [sp, #0]
 801bc60:	f7e5 f956 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801bc64:	465a      	mov	r2, fp
 801bc66:	9b01      	ldr	r3, [sp, #4]
 801bc68:	9900      	ldr	r1, [sp, #0]
 801bc6a:	4620      	mov	r0, r4
 801bc6c:	f7e5 f97a 	bl	8000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801bc70:	9b00      	ldr	r3, [sp, #0]
 801bc72:	461a      	mov	r2, r3
 801bc74:	4b6c      	ldr	r3, [pc, #432]	@ (801be28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801bc76:	429a      	cmp	r2, r3
 801bc78:	bf0c      	ite	eq
 801bc7a:	4b6c      	ldreq	r3, [pc, #432]	@ (801be2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801bc7c:	4b6a      	ldrne	r3, [pc, #424]	@ (801be28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801bc7e:	9300      	str	r3, [sp, #0]
 801bc80:	444c      	add	r4, r9
 801bc82:	f04f 0b00 	mov.w	fp, #0
 801bc86:	4652      	mov	r2, sl
 801bc88:	2100      	movs	r1, #0
 801bc8a:	42a9      	cmp	r1, r5
 801bc8c:	da2c      	bge.n	801bce8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801bc8e:	4694      	mov	ip, r2
 801bc90:	f04f 0903 	mov.w	r9, #3
 801bc94:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801bc98:	7852      	ldrb	r2, [r2, #1]
 801bc9a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801bc9e:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801bca2:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801bca6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801bcaa:	f003 021f 	and.w	r2, r3, #31
 801bcae:	fb19 000e 	smlabb	r0, r9, lr, r0
 801bcb2:	f04f 0e07 	mov.w	lr, #7
 801bcb6:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801bcba:	9a03      	ldr	r2, [sp, #12]
 801bcbc:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801bcc0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bcc4:	42b9      	cmp	r1, r7
 801bcc6:	461e      	mov	r6, r3
 801bcc8:	8083      	strh	r3, [r0, #4]
 801bcca:	da0a      	bge.n	801bce2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801bccc:	9a01      	ldr	r2, [sp, #4]
 801bcce:	2aff      	cmp	r2, #255	@ 0xff
 801bcd0:	bf15      	itete	ne
 801bcd2:	9a00      	ldrne	r2, [sp, #0]
 801bcd4:	8023      	strheq	r3, [r4, #0]
 801bcd6:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801bcda:	3402      	addeq	r4, #2
 801bcdc:	bf18      	it	ne
 801bcde:	f10b 0b01 	addne.w	fp, fp, #1
 801bce2:	3101      	adds	r1, #1
 801bce4:	4662      	mov	r2, ip
 801bce6:	e7d0      	b.n	801bc8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801bce8:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801bcec:	eba8 0807 	sub.w	r8, r8, r7
 801bcf0:	1bed      	subs	r5, r5, r7
 801bcf2:	e76c      	b.n	801bbce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801bcf4:	9b01      	ldr	r3, [sp, #4]
 801bcf6:	2bff      	cmp	r3, #255	@ 0xff
 801bcf8:	eba8 0807 	sub.w	r8, r8, r7
 801bcfc:	eba5 0507 	sub.w	r5, r5, r7
 801bd00:	fa1f f986 	uxth.w	r9, r6
 801bd04:	d027      	beq.n	801bd56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801bd06:	eb0b 0307 	add.w	r3, fp, r7
 801bd0a:	2b40      	cmp	r3, #64	@ 0x40
 801bd0c:	dd18      	ble.n	801bd40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801bd0e:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801bd12:	4619      	mov	r1, r3
 801bd14:	9800      	ldr	r0, [sp, #0]
 801bd16:	930c      	str	r3, [sp, #48]	@ 0x30
 801bd18:	f7e5 f8fa 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801bd1c:	465a      	mov	r2, fp
 801bd1e:	9b01      	ldr	r3, [sp, #4]
 801bd20:	9900      	ldr	r1, [sp, #0]
 801bd22:	4620      	mov	r0, r4
 801bd24:	f7e5 f91e 	bl	8000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801bd28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bd2a:	441c      	add	r4, r3
 801bd2c:	9b00      	ldr	r3, [sp, #0]
 801bd2e:	461a      	mov	r2, r3
 801bd30:	4b3d      	ldr	r3, [pc, #244]	@ (801be28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801bd32:	429a      	cmp	r2, r3
 801bd34:	bf0c      	ite	eq
 801bd36:	4b3d      	ldreq	r3, [pc, #244]	@ (801be2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801bd38:	4b3b      	ldrne	r3, [pc, #236]	@ (801be28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801bd3a:	9300      	str	r3, [sp, #0]
 801bd3c:	f04f 0b00 	mov.w	fp, #0
 801bd40:	9b00      	ldr	r3, [sp, #0]
 801bd42:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801bd46:	463b      	mov	r3, r7
 801bd48:	2b00      	cmp	r3, #0
 801bd4a:	f43f af3f 	beq.w	801bbcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801bd4e:	f822 9b02 	strh.w	r9, [r2], #2
 801bd52:	3b01      	subs	r3, #1
 801bd54:	e7f8      	b.n	801bd48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801bd56:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801bd5a:	42a7      	cmp	r7, r4
 801bd5c:	f67f af37 	bls.w	801bbce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801bd60:	f824 9b02 	strh.w	r9, [r4], #2
 801bd64:	e7f9      	b.n	801bd5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801bd66:	f1bb 0f00 	cmp.w	fp, #0
 801bd6a:	d00c      	beq.n	801bd86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801bd6c:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801bd70:	4641      	mov	r1, r8
 801bd72:	9800      	ldr	r0, [sp, #0]
 801bd74:	f7e5 f8cc 	bl	8000f10 <_ZN8touchgfx5paint9flushLineEPmi>
 801bd78:	4620      	mov	r0, r4
 801bd7a:	9b01      	ldr	r3, [sp, #4]
 801bd7c:	9900      	ldr	r1, [sp, #0]
 801bd7e:	465a      	mov	r2, fp
 801bd80:	f7e5 f8f0 	bl	8000f64 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801bd84:	4444      	add	r4, r8
 801bd86:	4b2a      	ldr	r3, [pc, #168]	@ (801be30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801bd88:	9a02      	ldr	r2, [sp, #8]
 801bd8a:	881b      	ldrh	r3, [r3, #0]
 801bd8c:	1a9b      	subs	r3, r3, r2
 801bd8e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd92:	9b06      	ldr	r3, [sp, #24]
 801bd94:	3301      	adds	r3, #1
 801bd96:	9306      	str	r3, [sp, #24]
 801bd98:	9a06      	ldr	r2, [sp, #24]
 801bd9a:	9b04      	ldr	r3, [sp, #16]
 801bd9c:	4293      	cmp	r3, r2
 801bd9e:	d120      	bne.n	801bde2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801bda0:	9b05      	ldr	r3, [sp, #20]
 801bda2:	9a05      	ldr	r2, [sp, #20]
 801bda4:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801bda8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801bdac:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bdae:	f103 0801 	add.w	r8, r3, #1
 801bdb2:	9b08      	ldr	r3, [sp, #32]
 801bdb4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801bdb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bdba:	ba3f      	rev	r7, r7
 801bdbc:	2280      	movs	r2, #128	@ 0x80
 801bdbe:	2100      	movs	r1, #0
 801bdc0:	441f      	add	r7, r3
 801bdc2:	eba9 0905 	sub.w	r9, r9, r5
 801bdc6:	f00c f97a 	bl	80280be <memset>
 801bdca:	2300      	movs	r3, #0
 801bdcc:	fa1f f989 	uxth.w	r9, r9
 801bdd0:	f04f 0600 	mov.w	r6, #0
 801bdd4:	f8cd 8014 	str.w	r8, [sp, #20]
 801bdd8:	9306      	str	r3, [sp, #24]
 801bdda:	f7e5 f88f 	bl	8000efc <_ZN8touchgfx5paint8tearDownEv>
 801bdde:	46ba      	mov	sl, r7
 801bde0:	e58a      	b.n	801b8f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801bde2:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801bde6:	9b02      	ldr	r3, [sp, #8]
 801bde8:	eba9 0903 	sub.w	r9, r9, r3
 801bdec:	eba9 0505 	sub.w	r5, r9, r5
 801bdf0:	fa1f f985 	uxth.w	r9, r5
 801bdf4:	e7f1      	b.n	801bdda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801bdf6:	4b0f      	ldr	r3, [pc, #60]	@ (801be34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801bdf8:	6818      	ldr	r0, [r3, #0]
 801bdfa:	6803      	ldr	r3, [r0, #0]
 801bdfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bdfe:	4798      	blx	r3
 801be00:	b013      	add	sp, #76	@ 0x4c
 801be02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be06:	9b02      	ldr	r3, [sp, #8]
 801be08:	9a02      	ldr	r2, [sp, #8]
 801be0a:	42ab      	cmp	r3, r5
 801be0c:	bfa8      	it	ge
 801be0e:	462b      	movge	r3, r5
 801be10:	eba2 0803 	sub.w	r8, r2, r3
 801be14:	1aed      	subs	r5, r5, r3
 801be16:	e626      	b.n	801ba66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801be18:	f108 38ff 	add.w	r8, r8, #4294967295
 801be1c:	fa1f f986 	uxth.w	r9, r6
 801be20:	2500      	movs	r5, #0
 801be22:	2701      	movs	r7, #1
 801be24:	e76f      	b.n	801bd06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801be26:	bf00      	nop
 801be28:	20000180 	.word	0x20000180
 801be2c:	20000280 	.word	0x20000280
 801be30:	20013f5a 	.word	0x20013f5a
 801be34:	20013f60 	.word	0x20013f60

0801be38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801be38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be3c:	b08f      	sub	sp, #60	@ 0x3c
 801be3e:	461c      	mov	r4, r3
 801be40:	9203      	str	r2, [sp, #12]
 801be42:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801be46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801be48:	9202      	str	r2, [sp, #8]
 801be4a:	460f      	mov	r7, r1
 801be4c:	2a00      	cmp	r2, #0
 801be4e:	f000 8128 	beq.w	801c0a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801be52:	6820      	ldr	r0, [r4, #0]
 801be54:	6861      	ldr	r1, [r4, #4]
 801be56:	aa0a      	add	r2, sp, #40	@ 0x28
 801be58:	c203      	stmia	r2!, {r0, r1}
 801be5a:	6818      	ldr	r0, [r3, #0]
 801be5c:	6859      	ldr	r1, [r3, #4]
 801be5e:	aa0c      	add	r2, sp, #48	@ 0x30
 801be60:	c203      	stmia	r2!, {r0, r1}
 801be62:	a80a      	add	r0, sp, #40	@ 0x28
 801be64:	f7f8 f966 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be68:	4621      	mov	r1, r4
 801be6a:	a80c      	add	r0, sp, #48	@ 0x30
 801be6c:	f7f8 f98a 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be70:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801be74:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801be78:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801be7c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801be80:	bfde      	ittt	le
 801be82:	b2b3      	uxthle	r3, r6
 801be84:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801be88:	fb92 f3f3 	sdivle	r3, r2, r3
 801be8c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801be90:	bfc8      	it	gt
 801be92:	2301      	movgt	r3, #1
 801be94:	fb92 f1f3 	sdiv	r1, r2, r3
 801be98:	fa1f fc81 	uxth.w	ip, r1
 801be9c:	fb0c 2413 	mls	r4, ip, r3, r2
 801bea0:	fb14 f406 	smulbb	r4, r4, r6
 801bea4:	441d      	add	r5, r3
 801bea6:	4404      	add	r4, r0
 801bea8:	4661      	mov	r1, ip
 801beaa:	3d01      	subs	r5, #1
 801beac:	b2a4      	uxth	r4, r4
 801beae:	fb95 f5f3 	sdiv	r5, r5, r3
 801beb2:	b121      	cbz	r1, 801bebe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801beb4:	9b03      	ldr	r3, [sp, #12]
 801beb6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801beba:	ba1b      	rev	r3, r3
 801bebc:	441f      	add	r7, r3
 801bebe:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801bec2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801bec6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801beca:	4418      	add	r0, r3
 801becc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801bed0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801bed4:	441a      	add	r2, r3
 801bed6:	4b74      	ldr	r3, [pc, #464]	@ (801c0a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bed8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801bedc:	6818      	ldr	r0, [r3, #0]
 801bede:	6803      	ldr	r3, [r0, #0]
 801bee0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bee2:	4798      	blx	r3
 801bee4:	4a71      	ldr	r2, [pc, #452]	@ (801c0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801bee6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801beea:	8813      	ldrh	r3, [r2, #0]
 801beec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801bef0:	9209      	str	r2, [sp, #36]	@ 0x24
 801bef2:	fb03 c101 	mla	r1, r3, r1, ip
 801bef6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801befa:	4373      	muls	r3, r6
 801befc:	b2ad      	uxth	r5, r5
 801befe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bf02:	00ad      	lsls	r5, r5, #2
 801bf04:	2c00      	cmp	r4, #0
 801bf06:	9304      	str	r3, [sp, #16]
 801bf08:	f105 0304 	add.w	r3, r5, #4
 801bf0c:	9305      	str	r3, [sp, #20]
 801bf0e:	bf0c      	ite	eq
 801bf10:	46c8      	moveq	r8, r9
 801bf12:	f04f 0800 	movne.w	r8, #0
 801bf16:	2300      	movs	r3, #0
 801bf18:	fa1f f888 	uxth.w	r8, r8
 801bf1c:	9301      	str	r3, [sp, #4]
 801bf1e:	9a04      	ldr	r2, [sp, #16]
 801bf20:	4282      	cmp	r2, r0
 801bf22:	f240 80b9 	bls.w	801c098 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801bf26:	b95b      	cbnz	r3, 801bf40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801bf28:	783a      	ldrb	r2, [r7, #0]
 801bf2a:	0993      	lsrs	r3, r2, #6
 801bf2c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801bf30:	9201      	str	r2, [sp, #4]
 801bf32:	1e5a      	subs	r2, r3, #1
 801bf34:	2a02      	cmp	r2, #2
 801bf36:	bf8d      	iteet	hi
 801bf38:	787b      	ldrbhi	r3, [r7, #1]
 801bf3a:	3701      	addls	r7, #1
 801bf3c:	b29b      	uxthls	r3, r3
 801bf3e:	3702      	addhi	r7, #2
 801bf40:	b184      	cbz	r4, 801bf64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801bf42:	429c      	cmp	r4, r3
 801bf44:	bf95      	itete	ls
 801bf46:	1b1c      	subls	r4, r3, r4
 801bf48:	1ae4      	subhi	r4, r4, r3
 801bf4a:	fa1f fa84 	uxthls.w	sl, r4
 801bf4e:	b2a4      	uxthhi	r4, r4
 801bf50:	bf87      	ittee	hi
 801bf52:	46c4      	movhi	ip, r8
 801bf54:	f04f 0a00 	movhi.w	sl, #0
 801bf58:	fa1f fc89 	uxthls.w	ip, r9
 801bf5c:	2400      	movls	r4, #0
 801bf5e:	4653      	mov	r3, sl
 801bf60:	46e0      	mov	r8, ip
 801bf62:	e7dc      	b.n	801bf1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801bf64:	2204      	movs	r2, #4
 801bf66:	4615      	mov	r5, r2
 801bf68:	9905      	ldr	r1, [sp, #20]
 801bf6a:	9a01      	ldr	r2, [sp, #4]
 801bf6c:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bf70:	9903      	ldr	r1, [sp, #12]
 801bf72:	588a      	ldr	r2, [r1, r2]
 801bf74:	4543      	cmp	r3, r8
 801bf76:	bf27      	ittee	cs
 801bf78:	eba3 0a08 	subcs.w	sl, r3, r8
 801bf7c:	46c6      	movcs	lr, r8
 801bf7e:	eba8 0c03 	subcc.w	ip, r8, r3
 801bf82:	469e      	movcc	lr, r3
 801bf84:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bf88:	bf27      	ittee	cs
 801bf8a:	fa1f fa8a 	uxthcs.w	sl, sl
 801bf8e:	46a4      	movcs	ip, r4
 801bf90:	fa1f fc8c 	uxthcc.w	ip, ip
 801bf94:	46a2      	movcc	sl, r4
 801bf96:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bf9a:	2900      	cmp	r1, #0
 801bf9c:	d066      	beq.n	801c06c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bf9e:	29ff      	cmp	r1, #255	@ 0xff
 801bfa0:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bfa4:	d114      	bne.n	801bfd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bfa6:	9d02      	ldr	r5, [sp, #8]
 801bfa8:	2dff      	cmp	r5, #255	@ 0xff
 801bfaa:	d111      	bne.n	801bfd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bfac:	0951      	lsrs	r1, r2, #5
 801bfae:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801bfb2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bfb6:	f026 0607 	bic.w	r6, r6, #7
 801bfba:	430e      	orrs	r6, r1
 801bfbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bfc0:	4316      	orrs	r6, r2
 801bfc2:	b2b6      	uxth	r6, r6
 801bfc4:	4486      	add	lr, r0
 801bfc6:	4586      	cmp	lr, r0
 801bfc8:	d051      	beq.n	801c06e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bfca:	f820 6b02 	strh.w	r6, [r0], #2
 801bfce:	e7fa      	b.n	801bfc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bfd0:	9d02      	ldr	r5, [sp, #8]
 801bfd2:	4369      	muls	r1, r5
 801bfd4:	1c4d      	adds	r5, r1, #1
 801bfd6:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bfda:	122d      	asrs	r5, r5, #8
 801bfdc:	ea6f 0b05 	mvn.w	fp, r5
 801bfe0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bfe4:	b2ad      	uxth	r5, r5
 801bfe6:	b2f6      	uxtb	r6, r6
 801bfe8:	b2d2      	uxtb	r2, r2
 801bfea:	fb11 f105 	smulbb	r1, r1, r5
 801bfee:	fb16 f605 	smulbb	r6, r6, r5
 801bff2:	fb12 f205 	smulbb	r2, r2, r5
 801bff6:	b289      	uxth	r1, r1
 801bff8:	b2b6      	uxth	r6, r6
 801bffa:	b292      	uxth	r2, r2
 801bffc:	9106      	str	r1, [sp, #24]
 801bffe:	9607      	str	r6, [sp, #28]
 801c000:	9208      	str	r2, [sp, #32]
 801c002:	4486      	add	lr, r0
 801c004:	fa5f fb8b 	uxtb.w	fp, fp
 801c008:	4586      	cmp	lr, r0
 801c00a:	d030      	beq.n	801c06e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c00c:	8802      	ldrh	r2, [r0, #0]
 801c00e:	9906      	ldr	r1, [sp, #24]
 801c010:	1216      	asrs	r6, r2, #8
 801c012:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c016:	10d5      	asrs	r5, r2, #3
 801c018:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c01c:	fb06 160b 	mla	r6, r6, fp, r1
 801c020:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c024:	9907      	ldr	r1, [sp, #28]
 801c026:	00d2      	lsls	r2, r2, #3
 801c028:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c02c:	fb05 150b 	mla	r5, r5, fp, r1
 801c030:	b2d2      	uxtb	r2, r2
 801c032:	9908      	ldr	r1, [sp, #32]
 801c034:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c038:	b2b6      	uxth	r6, r6
 801c03a:	fb02 120b 	mla	r2, r2, fp, r1
 801c03e:	b292      	uxth	r2, r2
 801c040:	1c71      	adds	r1, r6, #1
 801c042:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c046:	1c51      	adds	r1, r2, #1
 801c048:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c04c:	b2ad      	uxth	r5, r5
 801c04e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c052:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c056:	4316      	orrs	r6, r2
 801c058:	1c6a      	adds	r2, r5, #1
 801c05a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c05e:	096d      	lsrs	r5, r5, #5
 801c060:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c064:	432e      	orrs	r6, r5
 801c066:	f820 6b02 	strh.w	r6, [r0], #2
 801c06a:	e7cd      	b.n	801c008 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c06c:	4470      	add	r0, lr
 801c06e:	4543      	cmp	r3, r8
 801c070:	f4ff af75 	bcc.w	801bf5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c074:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801c078:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c07a:	fa1f fc89 	uxth.w	ip, r9
 801c07e:	eba4 040c 	sub.w	r4, r4, ip
 801c082:	881b      	ldrh	r3, [r3, #0]
 801c084:	b2a4      	uxth	r4, r4
 801c086:	2c00      	cmp	r4, #0
 801c088:	eba3 0309 	sub.w	r3, r3, r9
 801c08c:	bf18      	it	ne
 801c08e:	f04f 0c00 	movne.w	ip, #0
 801c092:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c096:	e762      	b.n	801bf5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c098:	4b03      	ldr	r3, [pc, #12]	@ (801c0a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c09a:	6818      	ldr	r0, [r3, #0]
 801c09c:	6803      	ldr	r3, [r0, #0]
 801c09e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c0a0:	4798      	blx	r3
 801c0a2:	b00f      	add	sp, #60	@ 0x3c
 801c0a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0a8:	20013f60 	.word	0x20013f60
 801c0ac:	20013f5a 	.word	0x20013f5a

0801c0b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0b4:	b093      	sub	sp, #76	@ 0x4c
 801c0b6:	461c      	mov	r4, r3
 801c0b8:	9205      	str	r2, [sp, #20]
 801c0ba:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801c0be:	9101      	str	r1, [sp, #4]
 801c0c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c0c2:	9202      	str	r2, [sp, #8]
 801c0c4:	2a00      	cmp	r2, #0
 801c0c6:	f000 812c 	beq.w	801c322 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c0ca:	6820      	ldr	r0, [r4, #0]
 801c0cc:	6861      	ldr	r1, [r4, #4]
 801c0ce:	aa0e      	add	r2, sp, #56	@ 0x38
 801c0d0:	c203      	stmia	r2!, {r0, r1}
 801c0d2:	6818      	ldr	r0, [r3, #0]
 801c0d4:	6859      	ldr	r1, [r3, #4]
 801c0d6:	aa10      	add	r2, sp, #64	@ 0x40
 801c0d8:	c203      	stmia	r2!, {r0, r1}
 801c0da:	a80e      	add	r0, sp, #56	@ 0x38
 801c0dc:	f7f8 f82a 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0e0:	4621      	mov	r1, r4
 801c0e2:	a810      	add	r0, sp, #64	@ 0x40
 801c0e4:	f7f8 f84e 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c0e8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801c0ec:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801c0f0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801c0f4:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801c0f8:	bfde      	ittt	le
 801c0fa:	b2b3      	uxthle	r3, r6
 801c0fc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801c100:	fb92 f3f3 	sdivle	r3, r2, r3
 801c104:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801c108:	bfc8      	it	gt
 801c10a:	2301      	movgt	r3, #1
 801c10c:	fb92 f1f3 	sdiv	r1, r2, r3
 801c110:	fa1f fc81 	uxth.w	ip, r1
 801c114:	fb0c 2413 	mls	r4, ip, r3, r2
 801c118:	fb14 f406 	smulbb	r4, r4, r6
 801c11c:	441d      	add	r5, r3
 801c11e:	4404      	add	r4, r0
 801c120:	4661      	mov	r1, ip
 801c122:	3d01      	subs	r5, #1
 801c124:	b2a4      	uxth	r4, r4
 801c126:	fb95 f5f3 	sdiv	r5, r5, r3
 801c12a:	b131      	cbz	r1, 801c13a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801c12c:	9b05      	ldr	r3, [sp, #20]
 801c12e:	9901      	ldr	r1, [sp, #4]
 801c130:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c134:	ba1b      	rev	r3, r3
 801c136:	4419      	add	r1, r3
 801c138:	9101      	str	r1, [sp, #4]
 801c13a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801c13e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801c142:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801c146:	4418      	add	r0, r3
 801c148:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801c14c:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801c150:	441a      	add	r2, r3
 801c152:	4b75      	ldr	r3, [pc, #468]	@ (801c328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c154:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801c158:	6818      	ldr	r0, [r3, #0]
 801c15a:	6803      	ldr	r3, [r0, #0]
 801c15c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c15e:	4798      	blx	r3
 801c160:	4972      	ldr	r1, [pc, #456]	@ (801c32c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801c162:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801c166:	880b      	ldrh	r3, [r1, #0]
 801c168:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801c16c:	910d      	str	r1, [sp, #52]	@ 0x34
 801c16e:	fb03 c202 	mla	r2, r3, r2, ip
 801c172:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c176:	4373      	muls	r3, r6
 801c178:	b2ad      	uxth	r5, r5
 801c17a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c17e:	00ad      	lsls	r5, r5, #2
 801c180:	9308      	str	r3, [sp, #32]
 801c182:	1d2b      	adds	r3, r5, #4
 801c184:	9309      	str	r3, [sp, #36]	@ 0x24
 801c186:	9b02      	ldr	r3, [sp, #8]
 801c188:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c18c:	9106      	str	r1, [sp, #24]
 801c18e:	43da      	mvns	r2, r3
 801c190:	2c00      	cmp	r4, #0
 801c192:	bf0c      	ite	eq
 801c194:	46dc      	moveq	ip, fp
 801c196:	f04f 0c00 	movne.w	ip, #0
 801c19a:	2300      	movs	r3, #0
 801c19c:	b2d2      	uxtb	r2, r2
 801c19e:	fa1f fc8c 	uxth.w	ip, ip
 801c1a2:	9303      	str	r3, [sp, #12]
 801c1a4:	9207      	str	r2, [sp, #28]
 801c1a6:	9a08      	ldr	r2, [sp, #32]
 801c1a8:	4282      	cmp	r2, r0
 801c1aa:	f240 80b5 	bls.w	801c318 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c1ae:	b963      	cbnz	r3, 801c1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c1b0:	9b01      	ldr	r3, [sp, #4]
 801c1b2:	781a      	ldrb	r2, [r3, #0]
 801c1b4:	0993      	lsrs	r3, r2, #6
 801c1b6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801c1ba:	9203      	str	r2, [sp, #12]
 801c1bc:	1e5a      	subs	r2, r3, #1
 801c1be:	2a02      	cmp	r2, #2
 801c1c0:	d815      	bhi.n	801c1ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c1c2:	9a01      	ldr	r2, [sp, #4]
 801c1c4:	3201      	adds	r2, #1
 801c1c6:	9201      	str	r2, [sp, #4]
 801c1c8:	b29b      	uxth	r3, r3
 801c1ca:	b1b4      	cbz	r4, 801c1fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801c1cc:	429c      	cmp	r4, r3
 801c1ce:	bf95      	itete	ls
 801c1d0:	1b1c      	subls	r4, r3, r4
 801c1d2:	1ae4      	subhi	r4, r4, r3
 801c1d4:	fa1f f884 	uxthls.w	r8, r4
 801c1d8:	b2a4      	uxthhi	r4, r4
 801c1da:	bf87      	ittee	hi
 801c1dc:	4666      	movhi	r6, ip
 801c1de:	f04f 0800 	movhi.w	r8, #0
 801c1e2:	fa1f f68b 	uxthls.w	r6, fp
 801c1e6:	2400      	movls	r4, #0
 801c1e8:	4643      	mov	r3, r8
 801c1ea:	46b4      	mov	ip, r6
 801c1ec:	e7db      	b.n	801c1a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c1ee:	9a01      	ldr	r2, [sp, #4]
 801c1f0:	9b01      	ldr	r3, [sp, #4]
 801c1f2:	3202      	adds	r2, #2
 801c1f4:	785b      	ldrb	r3, [r3, #1]
 801c1f6:	9201      	str	r2, [sp, #4]
 801c1f8:	e7e7      	b.n	801c1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c1fa:	2203      	movs	r2, #3
 801c1fc:	4615      	mov	r5, r2
 801c1fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c200:	9a03      	ldr	r2, [sp, #12]
 801c202:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c206:	9905      	ldr	r1, [sp, #20]
 801c208:	4563      	cmp	r3, ip
 801c20a:	eb01 0502 	add.w	r5, r1, r2
 801c20e:	9902      	ldr	r1, [sp, #8]
 801c210:	bf29      	itett	cs
 801c212:	eba3 080c 	subcs.w	r8, r3, ip
 801c216:	ebac 0603 	subcc.w	r6, ip, r3
 801c21a:	fa1f f888 	uxthcs.w	r8, r8
 801c21e:	46e1      	movcs	r9, ip
 801c220:	bf2f      	iteee	cs
 801c222:	4626      	movcs	r6, r4
 801c224:	b2b6      	uxthcc	r6, r6
 801c226:	4699      	movcc	r9, r3
 801c228:	46a0      	movcc	r8, r4
 801c22a:	29ff      	cmp	r1, #255	@ 0xff
 801c22c:	d04a      	beq.n	801c2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801c22e:	9f06      	ldr	r7, [sp, #24]
 801c230:	78a9      	ldrb	r1, [r5, #2]
 801c232:	9004      	str	r0, [sp, #16]
 801c234:	4379      	muls	r1, r7
 801c236:	910a      	str	r1, [sp, #40]	@ 0x28
 801c238:	7869      	ldrb	r1, [r5, #1]
 801c23a:	4379      	muls	r1, r7
 801c23c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c23e:	9905      	ldr	r1, [sp, #20]
 801c240:	5c8a      	ldrb	r2, [r1, r2]
 801c242:	437a      	muls	r2, r7
 801c244:	920c      	str	r2, [sp, #48]	@ 0x30
 801c246:	46ca      	mov	sl, r9
 801c248:	f1ba 0f00 	cmp.w	sl, #0
 801c24c:	d03d      	beq.n	801c2ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801c24e:	9a04      	ldr	r2, [sp, #16]
 801c250:	9f07      	ldr	r7, [sp, #28]
 801c252:	8812      	ldrh	r2, [r2, #0]
 801c254:	1215      	asrs	r5, r2, #8
 801c256:	46be      	mov	lr, r7
 801c258:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c25c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c25e:	10d1      	asrs	r1, r2, #3
 801c260:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c264:	fb05 750e 	mla	r5, r5, lr, r7
 801c268:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c26c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801c26e:	00d2      	lsls	r2, r2, #3
 801c270:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c274:	fb01 710e 	mla	r1, r1, lr, r7
 801c278:	b2d2      	uxtb	r2, r2
 801c27a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801c27c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c280:	b2ad      	uxth	r5, r5
 801c282:	fb02 720e 	mla	r2, r2, lr, r7
 801c286:	b292      	uxth	r2, r2
 801c288:	f105 0e01 	add.w	lr, r5, #1
 801c28c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c290:	f102 0e01 	add.w	lr, r2, #1
 801c294:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c298:	b289      	uxth	r1, r1
 801c29a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c29e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c2a2:	4315      	orrs	r5, r2
 801c2a4:	1c4a      	adds	r2, r1, #1
 801c2a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c2aa:	0949      	lsrs	r1, r1, #5
 801c2ac:	9a04      	ldr	r2, [sp, #16]
 801c2ae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c2b2:	430d      	orrs	r5, r1
 801c2b4:	f822 5b02 	strh.w	r5, [r2], #2
 801c2b8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c2bc:	9204      	str	r2, [sp, #16]
 801c2be:	fa1f fa8a 	uxth.w	sl, sl
 801c2c2:	e7c1      	b.n	801c248 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c2c4:	4649      	mov	r1, r9
 801c2c6:	4686      	mov	lr, r0
 801c2c8:	b999      	cbnz	r1, 801c2f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c2ca:	4563      	cmp	r3, ip
 801c2cc:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c2d0:	d38a      	bcc.n	801c1e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c2d2:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801c2d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c2d8:	fa1f f68b 	uxth.w	r6, fp
 801c2dc:	1ba4      	subs	r4, r4, r6
 801c2de:	881b      	ldrh	r3, [r3, #0]
 801c2e0:	b2a4      	uxth	r4, r4
 801c2e2:	2c00      	cmp	r4, #0
 801c2e4:	eba3 030b 	sub.w	r3, r3, fp
 801c2e8:	bf18      	it	ne
 801c2ea:	2600      	movne	r6, #0
 801c2ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c2f0:	e77a      	b.n	801c1e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c2f2:	78aa      	ldrb	r2, [r5, #2]
 801c2f4:	4f0e      	ldr	r7, [pc, #56]	@ (801c330 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c2f6:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c2fa:	786a      	ldrb	r2, [r5, #1]
 801c2fc:	00d2      	lsls	r2, r2, #3
 801c2fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c302:	ea4a 0202 	orr.w	r2, sl, r2
 801c306:	f895 a000 	ldrb.w	sl, [r5]
 801c30a:	3901      	subs	r1, #1
 801c30c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c310:	f82e 2b02 	strh.w	r2, [lr], #2
 801c314:	b289      	uxth	r1, r1
 801c316:	e7d7      	b.n	801c2c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c318:	4b03      	ldr	r3, [pc, #12]	@ (801c328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c31a:	6818      	ldr	r0, [r3, #0]
 801c31c:	6803      	ldr	r3, [r0, #0]
 801c31e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c320:	4798      	blx	r3
 801c322:	b013      	add	sp, #76	@ 0x4c
 801c324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c328:	20013f60 	.word	0x20013f60
 801c32c:	20013f5a 	.word	0x20013f5a
 801c330:	fffff800 	.word	0xfffff800

0801c334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c338:	b09d      	sub	sp, #116	@ 0x74
 801c33a:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801c33e:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801c342:	920e      	str	r2, [sp, #56]	@ 0x38
 801c344:	461c      	mov	r4, r3
 801c346:	4683      	mov	fp, r0
 801c348:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c34a:	2a00      	cmp	r2, #0
 801c34c:	f000 81e0 	beq.w	801c710 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c350:	6820      	ldr	r0, [r4, #0]
 801c352:	6861      	ldr	r1, [r4, #4]
 801c354:	aa18      	add	r2, sp, #96	@ 0x60
 801c356:	c203      	stmia	r2!, {r0, r1}
 801c358:	6818      	ldr	r0, [r3, #0]
 801c35a:	6859      	ldr	r1, [r3, #4]
 801c35c:	aa1a      	add	r2, sp, #104	@ 0x68
 801c35e:	c203      	stmia	r2!, {r0, r1}
 801c360:	a818      	add	r0, sp, #96	@ 0x60
 801c362:	f7f7 fee7 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c366:	4621      	mov	r1, r4
 801c368:	a81a      	add	r0, sp, #104	@ 0x68
 801c36a:	f7f7 ff0b 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c36e:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801c372:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801c376:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801c37a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c37e:	bfd7      	itett	le
 801c380:	b29a      	uxthle	r2, r3
 801c382:	2201      	movgt	r2, #1
 801c384:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c388:	fb91 f2f2 	sdivle	r2, r1, r2
 801c38c:	9202      	str	r2, [sp, #8]
 801c38e:	9802      	ldr	r0, [sp, #8]
 801c390:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801c394:	fb92 f0f0 	sdiv	r0, r2, r0
 801c398:	b280      	uxth	r0, r0
 801c39a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c39c:	9902      	ldr	r1, [sp, #8]
 801c39e:	9802      	ldr	r0, [sp, #8]
 801c3a0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801c3a2:	440c      	add	r4, r1
 801c3a4:	fb05 2510 	mls	r5, r5, r0, r2
 801c3a8:	fb15 f503 	smulbb	r5, r5, r3
 801c3ac:	3c01      	subs	r4, #1
 801c3ae:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801c3b2:	fb94 f4f1 	sdiv	r4, r4, r1
 801c3b6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801c3ba:	440d      	add	r5, r1
 801c3bc:	4419      	add	r1, r3
 801c3be:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801c3c2:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801c3c6:	441a      	add	r2, r3
 801c3c8:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801c3cc:	9306      	str	r3, [sp, #24]
 801c3ce:	4bb3      	ldr	r3, [pc, #716]	@ (801c69c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c3d0:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801c3d4:	6818      	ldr	r0, [r3, #0]
 801c3d6:	6803      	ldr	r3, [r0, #0]
 801c3d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c3da:	4798      	blx	r3
 801c3dc:	4bb0      	ldr	r3, [pc, #704]	@ (801c6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c3de:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801c3e2:	881a      	ldrh	r2, [r3, #0]
 801c3e4:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801c3e8:	9316      	str	r3, [sp, #88]	@ 0x58
 801c3ea:	fb02 7101 	mla	r1, r2, r1, r7
 801c3ee:	3401      	adds	r4, #1
 801c3f0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c3f4:	b2a4      	uxth	r4, r4
 801c3f6:	4356      	muls	r6, r2
 801c3f8:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c3fc:	00a4      	lsls	r4, r4, #2
 801c3fe:	920a      	str	r2, [sp, #40]	@ 0x28
 801c400:	1d22      	adds	r2, r4, #4
 801c402:	b2ad      	uxth	r5, r5
 801c404:	9213      	str	r2, [sp, #76]	@ 0x4c
 801c406:	4ba7      	ldr	r3, [pc, #668]	@ (801c6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c408:	9a06      	ldr	r2, [sp, #24]
 801c40a:	2d00      	cmp	r5, #0
 801c40c:	bf0c      	ite	eq
 801c40e:	4611      	moveq	r1, r2
 801c410:	2100      	movne	r1, #0
 801c412:	2200      	movs	r2, #0
 801c414:	eba3 030b 	sub.w	r3, r3, fp
 801c418:	b289      	uxth	r1, r1
 801c41a:	920d      	str	r2, [sp, #52]	@ 0x34
 801c41c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c41e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c420:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c422:	fa12 f383 	uxtah	r3, r2, r3
 801c426:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c428:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c42c:	3304      	adds	r3, #4
 801c42e:	9308      	str	r3, [sp, #32]
 801c430:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c432:	4543      	cmp	r3, r8
 801c434:	f240 8167 	bls.w	801c706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c438:	9a02      	ldr	r2, [sp, #8]
 801c43a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801c43e:	fbb5 f3f3 	udiv	r3, r5, r3
 801c442:	1ad3      	subs	r3, r2, r3
 801c444:	b29b      	uxth	r3, r3
 801c446:	9314      	str	r3, [sp, #80]	@ 0x50
 801c448:	9b08      	ldr	r3, [sp, #32]
 801c44a:	9808      	ldr	r0, [sp, #32]
 801c44c:	785a      	ldrb	r2, [r3, #1]
 801c44e:	789b      	ldrb	r3, [r3, #2]
 801c450:	7800      	ldrb	r0, [r0, #0]
 801c452:	9010      	str	r0, [sp, #64]	@ 0x40
 801c454:	021b      	lsls	r3, r3, #8
 801c456:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c45a:	9a08      	ldr	r2, [sp, #32]
 801c45c:	78d2      	ldrb	r2, [r2, #3]
 801c45e:	4313      	orrs	r3, r2
 801c460:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c462:	3001      	adds	r0, #1
 801c464:	441a      	add	r2, r3
 801c466:	9007      	str	r0, [sp, #28]
 801c468:	1c50      	adds	r0, r2, #1
 801c46a:	9005      	str	r0, [sp, #20]
 801c46c:	7852      	ldrb	r2, [r2, #1]
 801c46e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c470:	0212      	lsls	r2, r2, #8
 801c472:	5cc3      	ldrb	r3, [r0, r3]
 801c474:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801c478:	431a      	orrs	r2, r3
 801c47a:	b293      	uxth	r3, r2
 801c47c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c47e:	2300      	movs	r3, #0
 801c480:	9309      	str	r3, [sp, #36]	@ 0x24
 801c482:	2301      	movs	r3, #1
 801c484:	9301      	str	r3, [sp, #4]
 801c486:	9304      	str	r3, [sp, #16]
 801c488:	2300      	movs	r3, #0
 801c48a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801c48e:	9303      	str	r3, [sp, #12]
 801c490:	f04f 0e01 	mov.w	lr, #1
 801c494:	2d00      	cmp	r5, #0
 801c496:	d07c      	beq.n	801c592 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c498:	45ae      	cmp	lr, r5
 801c49a:	d26b      	bcs.n	801c574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c49c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c49e:	eba5 050e 	sub.w	r5, r5, lr
 801c4a2:	4543      	cmp	r3, r8
 801c4a4:	b2ad      	uxth	r5, r5
 801c4a6:	460c      	mov	r4, r1
 801c4a8:	d802      	bhi.n	801c4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c4aa:	e070      	b.n	801c58e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c4ac:	2b00      	cmp	r3, #0
 801c4ae:	d15c      	bne.n	801c56a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c4b0:	9b05      	ldr	r3, [sp, #20]
 801c4b2:	9a04      	ldr	r2, [sp, #16]
 801c4b4:	785b      	ldrb	r3, [r3, #1]
 801c4b6:	9904      	ldr	r1, [sp, #16]
 801c4b8:	f1c2 0207 	rsb	r2, r2, #7
 801c4bc:	4093      	lsls	r3, r2
 801c4be:	005b      	lsls	r3, r3, #1
 801c4c0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801c4c4:	9b05      	ldr	r3, [sp, #20]
 801c4c6:	781b      	ldrb	r3, [r3, #0]
 801c4c8:	410b      	asrs	r3, r1
 801c4ca:	3101      	adds	r1, #1
 801c4cc:	b2c9      	uxtb	r1, r1
 801c4ce:	2908      	cmp	r1, #8
 801c4d0:	9104      	str	r1, [sp, #16]
 801c4d2:	9905      	ldr	r1, [sp, #20]
 801c4d4:	bf0a      	itet	eq
 801c4d6:	3102      	addeq	r1, #2
 801c4d8:	3101      	addne	r1, #1
 801c4da:	9105      	streq	r1, [sp, #20]
 801c4dc:	b2db      	uxtb	r3, r3
 801c4de:	bf0a      	itet	eq
 801c4e0:	2100      	moveq	r1, #0
 801c4e2:	9105      	strne	r1, [sp, #20]
 801c4e4:	9104      	streq	r1, [sp, #16]
 801c4e6:	4313      	orrs	r3, r2
 801c4e8:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801c4ea:	b29a      	uxth	r2, r3
 801c4ec:	4291      	cmp	r1, r2
 801c4ee:	d30a      	bcc.n	801c506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c4f0:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801c4f4:	2301      	movs	r3, #1
 801c4f6:	9907      	ldr	r1, [sp, #28]
 801c4f8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801c4fc:	d30f      	bcc.n	801c51e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c4fe:	2100      	movs	r1, #0
 801c500:	9301      	str	r3, [sp, #4]
 801c502:	9103      	str	r1, [sp, #12]
 801c504:	e032      	b.n	801c56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c506:	9b07      	ldr	r3, [sp, #28]
 801c508:	429a      	cmp	r2, r3
 801c50a:	d318      	bcc.n	801c53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c50c:	9b01      	ldr	r3, [sp, #4]
 801c50e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801c512:	445b      	add	r3, fp
 801c514:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801c518:	9b01      	ldr	r3, [sp, #4]
 801c51a:	3301      	adds	r3, #1
 801c51c:	b29b      	uxth	r3, r3
 801c51e:	9907      	ldr	r1, [sp, #28]
 801c520:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801c524:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c528:	7108      	strb	r0, [r1, #4]
 801c52a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801c52c:	80c8      	strh	r0, [r1, #6]
 801c52e:	9801      	ldr	r0, [sp, #4]
 801c530:	3001      	adds	r0, #1
 801c532:	7148      	strb	r0, [r1, #5]
 801c534:	9907      	ldr	r1, [sp, #28]
 801c536:	3101      	adds	r1, #1
 801c538:	b289      	uxth	r1, r1
 801c53a:	9107      	str	r1, [sp, #28]
 801c53c:	e7df      	b.n	801c4fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c53e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c542:	4611      	mov	r1, r2
 801c544:	795b      	ldrb	r3, [r3, #5]
 801c546:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801c54a:	4458      	add	r0, fp
 801c54c:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801c54e:	4406      	add	r6, r0
 801c550:	2e00      	cmp	r6, #0
 801c552:	dd06      	ble.n	801c562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c554:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c558:	790e      	ldrb	r6, [r1, #4]
 801c55a:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c55e:	88c9      	ldrh	r1, [r1, #6]
 801c560:	e7f4      	b.n	801c54c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c562:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801c566:	b29b      	uxth	r3, r3
 801c568:	e7c5      	b.n	801c4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c56a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c56c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801c56e:	4621      	mov	r1, r4
 801c570:	469e      	mov	lr, r3
 801c572:	e78f      	b.n	801c494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c574:	9a03      	ldr	r2, [sp, #12]
 801c576:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c57a:	442a      	add	r2, r5
 801c57c:	ebae 0305 	sub.w	r3, lr, r5
 801c580:	b292      	uxth	r2, r2
 801c582:	b29b      	uxth	r3, r3
 801c584:	9203      	str	r2, [sp, #12]
 801c586:	2500      	movs	r5, #0
 801c588:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c58a:	4542      	cmp	r2, r8
 801c58c:	d88e      	bhi.n	801c4ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c58e:	4621      	mov	r1, r4
 801c590:	e74e      	b.n	801c430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c592:	458e      	cmp	lr, r1
 801c594:	bf29      	itett	cs
 801c596:	ebae 0301 	subcs.w	r3, lr, r1
 801c59a:	eba1 040e 	subcc.w	r4, r1, lr
 801c59e:	b29b      	uxthcs	r3, r3
 801c5a0:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801c5a2:	bf2f      	iteee	cs
 801c5a4:	462c      	movcs	r4, r5
 801c5a6:	b2a4      	uxthcc	r4, r4
 801c5a8:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801c5ac:	462b      	movcc	r3, r5
 801c5ae:	f04f 0900 	mov.w	r9, #0
 801c5b2:	9a03      	ldr	r2, [sp, #12]
 801c5b4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801c5b6:	444a      	add	r2, r9
 801c5b8:	4548      	cmp	r0, r9
 801c5ba:	b292      	uxth	r2, r2
 801c5bc:	d074      	beq.n	801c6a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c5be:	445a      	add	r2, fp
 801c5c0:	2004      	movs	r0, #4
 801c5c2:	4605      	mov	r5, r0
 801c5c4:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801c5c8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c5ca:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c5ce:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c5d0:	5880      	ldr	r0, [r0, r2]
 801c5d2:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c5d6:	d014      	beq.n	801c602 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c5d8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801c5dc:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c5e0:	d112      	bne.n	801c608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c5e2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c5e4:	2aff      	cmp	r2, #255	@ 0xff
 801c5e6:	d10f      	bne.n	801c608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c5e8:	0942      	lsrs	r2, r0, #5
 801c5ea:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801c5ee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c5f2:	f025 0507 	bic.w	r5, r5, #7
 801c5f6:	4315      	orrs	r5, r2
 801c5f8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c5fc:	4305      	orrs	r5, r0
 801c5fe:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c602:	f109 0901 	add.w	r9, r9, #1
 801c606:	e7d4      	b.n	801c5b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c608:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c60c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c610:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801c614:	9215      	str	r2, [sp, #84]	@ 0x54
 801c616:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801c618:	fb02 fa0a 	mul.w	sl, r2, sl
 801c61c:	f10a 0201 	add.w	r2, sl, #1
 801c620:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c624:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c628:	1212      	asrs	r2, r2, #8
 801c62a:	fa1f fa82 	uxth.w	sl, r2
 801c62e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c632:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c636:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c63a:	43d2      	mvns	r2, r2
 801c63c:	b2d2      	uxtb	r2, r2
 801c63e:	fb16 f60a 	smulbb	r6, r6, sl
 801c642:	fa5f fc8c 	uxtb.w	ip, ip
 801c646:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c64a:	b2c0      	uxtb	r0, r0
 801c64c:	fb07 6702 	mla	r7, r7, r2, r6
 801c650:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c654:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801c656:	fb10 f00a 	smulbb	r0, r0, sl
 801c65a:	fb0c 0002 	mla	r0, ip, r2, r0
 801c65e:	b2ed      	uxtb	r5, r5
 801c660:	b2bf      	uxth	r7, r7
 801c662:	fb15 f50a 	smulbb	r5, r5, sl
 801c666:	b280      	uxth	r0, r0
 801c668:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c66c:	fb06 5602 	mla	r6, r6, r2, r5
 801c670:	1c7a      	adds	r2, r7, #1
 801c672:	1c45      	adds	r5, r0, #1
 801c674:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c678:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c67c:	b2b6      	uxth	r6, r6
 801c67e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c682:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801c686:	432f      	orrs	r7, r5
 801c688:	1c75      	adds	r5, r6, #1
 801c68a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c68e:	096d      	lsrs	r5, r5, #5
 801c690:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c694:	432f      	orrs	r7, r5
 801c696:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c69a:	e7b2      	b.n	801c602 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c69c:	20013f60 	.word	0x20013f60
 801c6a0:	20013f5a 	.word	0x20013f5a
 801c6a4:	fffff7fb 	.word	0xfffff7fb
 801c6a8:	9203      	str	r2, [sp, #12]
 801c6aa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c6ac:	458e      	cmp	lr, r1
 801c6ae:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c6b2:	f4ff af68 	bcc.w	801c586 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c6b6:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801c6b8:	9906      	ldr	r1, [sp, #24]
 801c6ba:	8812      	ldrh	r2, [r2, #0]
 801c6bc:	1a52      	subs	r2, r2, r1
 801c6be:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c6c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c6c4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801c6c6:	3201      	adds	r2, #1
 801c6c8:	428a      	cmp	r2, r1
 801c6ca:	9209      	str	r2, [sp, #36]	@ 0x24
 801c6cc:	d111      	bne.n	801c6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c6ce:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801c6d2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801c6d6:	9b06      	ldr	r3, [sp, #24]
 801c6d8:	eba5 0509 	sub.w	r5, r5, r9
 801c6dc:	b2ad      	uxth	r5, r5
 801c6de:	2d00      	cmp	r5, #0
 801c6e0:	bf08      	it	eq
 801c6e2:	4619      	moveq	r1, r3
 801c6e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c6e6:	bf18      	it	ne
 801c6e8:	2100      	movne	r1, #0
 801c6ea:	3301      	adds	r3, #1
 801c6ec:	930d      	str	r3, [sp, #52]	@ 0x34
 801c6ee:	b289      	uxth	r1, r1
 801c6f0:	e695      	b.n	801c41e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c6f2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c6f6:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801c6fa:	1b2d      	subs	r5, r5, r4
 801c6fc:	b2ad      	uxth	r5, r5
 801c6fe:	2d00      	cmp	r5, #0
 801c700:	bf18      	it	ne
 801c702:	2400      	movne	r4, #0
 801c704:	e740      	b.n	801c588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c706:	4b04      	ldr	r3, [pc, #16]	@ (801c718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c708:	6818      	ldr	r0, [r3, #0]
 801c70a:	6803      	ldr	r3, [r0, #0]
 801c70c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c70e:	4798      	blx	r3
 801c710:	b01d      	add	sp, #116	@ 0x74
 801c712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c716:	bf00      	nop
 801c718:	20013f60 	.word	0x20013f60

0801c71c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c71c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c720:	b09f      	sub	sp, #124	@ 0x7c
 801c722:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801c726:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801c72a:	920a      	str	r2, [sp, #40]	@ 0x28
 801c72c:	461d      	mov	r5, r3
 801c72e:	4604      	mov	r4, r0
 801c730:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c732:	2a00      	cmp	r2, #0
 801c734:	f000 81fa 	beq.w	801cb2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c738:	6828      	ldr	r0, [r5, #0]
 801c73a:	6869      	ldr	r1, [r5, #4]
 801c73c:	aa1a      	add	r2, sp, #104	@ 0x68
 801c73e:	c203      	stmia	r2!, {r0, r1}
 801c740:	6818      	ldr	r0, [r3, #0]
 801c742:	6859      	ldr	r1, [r3, #4]
 801c744:	aa1c      	add	r2, sp, #112	@ 0x70
 801c746:	c203      	stmia	r2!, {r0, r1}
 801c748:	a81a      	add	r0, sp, #104	@ 0x68
 801c74a:	f7f7 fcf3 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c74e:	4629      	mov	r1, r5
 801c750:	a81c      	add	r0, sp, #112	@ 0x70
 801c752:	f7f7 fd17 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c756:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801c75a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801c75e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801c762:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c766:	bfd7      	itett	le
 801c768:	b29a      	uxthle	r2, r3
 801c76a:	2201      	movgt	r2, #1
 801c76c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c770:	fb91 f2f2 	sdivle	r2, r1, r2
 801c774:	9201      	str	r2, [sp, #4]
 801c776:	9801      	ldr	r0, [sp, #4]
 801c778:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801c77c:	fb92 f0f0 	sdiv	r0, r2, r0
 801c780:	b280      	uxth	r0, r0
 801c782:	9010      	str	r0, [sp, #64]	@ 0x40
 801c784:	9901      	ldr	r1, [sp, #4]
 801c786:	9801      	ldr	r0, [sp, #4]
 801c788:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c78a:	440e      	add	r6, r1
 801c78c:	fb05 2510 	mls	r5, r5, r0, r2
 801c790:	fb15 f503 	smulbb	r5, r5, r3
 801c794:	3e01      	subs	r6, #1
 801c796:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801c79a:	fb96 f6f1 	sdiv	r6, r6, r1
 801c79e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801c7a2:	440d      	add	r5, r1
 801c7a4:	4419      	add	r1, r3
 801c7a6:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801c7aa:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801c7ae:	441a      	add	r2, r3
 801c7b0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801c7b4:	9304      	str	r3, [sp, #16]
 801c7b6:	4b96      	ldr	r3, [pc, #600]	@ (801ca10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c7b8:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801c7bc:	6818      	ldr	r0, [r3, #0]
 801c7be:	6803      	ldr	r3, [r0, #0]
 801c7c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c7c2:	4798      	blx	r3
 801c7c4:	4b93      	ldr	r3, [pc, #588]	@ (801ca14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c7c6:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801c7ca:	881a      	ldrh	r2, [r3, #0]
 801c7cc:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801c7d0:	9318      	str	r3, [sp, #96]	@ 0x60
 801c7d2:	fb02 c101 	mla	r1, r2, r1, ip
 801c7d6:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c7da:	4357      	muls	r7, r2
 801c7dc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c7e0:	3601      	adds	r6, #1
 801c7e2:	920b      	str	r2, [sp, #44]	@ 0x2c
 801c7e4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c7e6:	4b8c      	ldr	r3, [pc, #560]	@ (801ca18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c7e8:	b2b6      	uxth	r6, r6
 801c7ea:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c7ee:	1d32      	adds	r2, r6, #4
 801c7f0:	9206      	str	r2, [sp, #24]
 801c7f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c7f4:	43d2      	mvns	r2, r2
 801c7f6:	b2d2      	uxtb	r2, r2
 801c7f8:	b2ad      	uxth	r5, r5
 801c7fa:	9215      	str	r2, [sp, #84]	@ 0x54
 801c7fc:	9a04      	ldr	r2, [sp, #16]
 801c7fe:	2d00      	cmp	r5, #0
 801c800:	bf0c      	ite	eq
 801c802:	4611      	moveq	r1, r2
 801c804:	2100      	movne	r1, #0
 801c806:	2200      	movs	r2, #0
 801c808:	1b1b      	subs	r3, r3, r4
 801c80a:	b289      	uxth	r1, r1
 801c80c:	920d      	str	r2, [sp, #52]	@ 0x34
 801c80e:	9319      	str	r3, [sp, #100]	@ 0x64
 801c810:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c812:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c814:	fa12 f383 	uxtah	r3, r2, r3
 801c818:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c81a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c81e:	3304      	adds	r3, #4
 801c820:	9307      	str	r3, [sp, #28]
 801c822:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c824:	455b      	cmp	r3, fp
 801c826:	f240 817c 	bls.w	801cb22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c82a:	9a01      	ldr	r2, [sp, #4]
 801c82c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801c830:	fbb5 f3f3 	udiv	r3, r5, r3
 801c834:	1ad3      	subs	r3, r2, r3
 801c836:	b29b      	uxth	r3, r3
 801c838:	9316      	str	r3, [sp, #88]	@ 0x58
 801c83a:	9b07      	ldr	r3, [sp, #28]
 801c83c:	9807      	ldr	r0, [sp, #28]
 801c83e:	785a      	ldrb	r2, [r3, #1]
 801c840:	789b      	ldrb	r3, [r3, #2]
 801c842:	7800      	ldrb	r0, [r0, #0]
 801c844:	9011      	str	r0, [sp, #68]	@ 0x44
 801c846:	021b      	lsls	r3, r3, #8
 801c848:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c84c:	9a07      	ldr	r2, [sp, #28]
 801c84e:	78d2      	ldrb	r2, [r2, #3]
 801c850:	4313      	orrs	r3, r2
 801c852:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c854:	3001      	adds	r0, #1
 801c856:	441a      	add	r2, r3
 801c858:	9005      	str	r0, [sp, #20]
 801c85a:	1c50      	adds	r0, r2, #1
 801c85c:	9003      	str	r0, [sp, #12]
 801c85e:	7852      	ldrb	r2, [r2, #1]
 801c860:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c862:	0212      	lsls	r2, r2, #8
 801c864:	5cc3      	ldrb	r3, [r0, r3]
 801c866:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801c86a:	431a      	orrs	r2, r3
 801c86c:	b293      	uxth	r3, r2
 801c86e:	930c      	str	r3, [sp, #48]	@ 0x30
 801c870:	2300      	movs	r3, #0
 801c872:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801c876:	9308      	str	r3, [sp, #32]
 801c878:	461a      	mov	r2, r3
 801c87a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c87e:	930e      	str	r3, [sp, #56]	@ 0x38
 801c880:	f04f 0801 	mov.w	r8, #1
 801c884:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801c888:	f8cd 8008 	str.w	r8, [sp, #8]
 801c88c:	46c4      	mov	ip, r8
 801c88e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c890:	2d00      	cmp	r5, #0
 801c892:	d07c      	beq.n	801c98e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c894:	45ac      	cmp	ip, r5
 801c896:	d26c      	bcs.n	801c972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c898:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c89a:	eba5 050c 	sub.w	r5, r5, ip
 801c89e:	455b      	cmp	r3, fp
 801c8a0:	b2ad      	uxth	r5, r5
 801c8a2:	4608      	mov	r0, r1
 801c8a4:	d802      	bhi.n	801c8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c8a6:	e070      	b.n	801c98a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c8a8:	2b00      	cmp	r3, #0
 801c8aa:	d15c      	bne.n	801c966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c8ac:	9b03      	ldr	r3, [sp, #12]
 801c8ae:	9a02      	ldr	r2, [sp, #8]
 801c8b0:	785b      	ldrb	r3, [r3, #1]
 801c8b2:	9902      	ldr	r1, [sp, #8]
 801c8b4:	f1c2 0207 	rsb	r2, r2, #7
 801c8b8:	4093      	lsls	r3, r2
 801c8ba:	005b      	lsls	r3, r3, #1
 801c8bc:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801c8c0:	9b03      	ldr	r3, [sp, #12]
 801c8c2:	781b      	ldrb	r3, [r3, #0]
 801c8c4:	410b      	asrs	r3, r1
 801c8c6:	3101      	adds	r1, #1
 801c8c8:	b2c9      	uxtb	r1, r1
 801c8ca:	2908      	cmp	r1, #8
 801c8cc:	9102      	str	r1, [sp, #8]
 801c8ce:	9903      	ldr	r1, [sp, #12]
 801c8d0:	bf0a      	itet	eq
 801c8d2:	3102      	addeq	r1, #2
 801c8d4:	3101      	addne	r1, #1
 801c8d6:	9103      	streq	r1, [sp, #12]
 801c8d8:	b2db      	uxtb	r3, r3
 801c8da:	bf0a      	itet	eq
 801c8dc:	2100      	moveq	r1, #0
 801c8de:	9103      	strne	r1, [sp, #12]
 801c8e0:	9102      	streq	r1, [sp, #8]
 801c8e2:	4313      	orrs	r3, r2
 801c8e4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801c8e6:	b29a      	uxth	r2, r3
 801c8e8:	4291      	cmp	r1, r2
 801c8ea:	d30a      	bcc.n	801c902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c8ec:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801c8f0:	2301      	movs	r3, #1
 801c8f2:	9905      	ldr	r1, [sp, #20]
 801c8f4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801c8f8:	d30f      	bcc.n	801c91a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c8fa:	2100      	movs	r1, #0
 801c8fc:	4698      	mov	r8, r3
 801c8fe:	9100      	str	r1, [sp, #0]
 801c900:	e032      	b.n	801c968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c902:	9b05      	ldr	r3, [sp, #20]
 801c904:	429a      	cmp	r2, r3
 801c906:	d318      	bcc.n	801c93a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c908:	eb04 0308 	add.w	r3, r4, r8
 801c90c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801c910:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801c914:	f108 0301 	add.w	r3, r8, #1
 801c918:	b29b      	uxth	r3, r3
 801c91a:	9905      	ldr	r1, [sp, #20]
 801c91c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801c920:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c924:	710e      	strb	r6, [r1, #4]
 801c926:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c928:	80ce      	strh	r6, [r1, #6]
 801c92a:	f108 0601 	add.w	r6, r8, #1
 801c92e:	714e      	strb	r6, [r1, #5]
 801c930:	9905      	ldr	r1, [sp, #20]
 801c932:	3101      	adds	r1, #1
 801c934:	b289      	uxth	r1, r1
 801c936:	9105      	str	r1, [sp, #20]
 801c938:	e7df      	b.n	801c8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c93a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c93e:	4611      	mov	r1, r2
 801c940:	795b      	ldrb	r3, [r3, #5]
 801c942:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801c946:	4426      	add	r6, r4
 801c948:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801c94a:	4437      	add	r7, r6
 801c94c:	2f00      	cmp	r7, #0
 801c94e:	dd06      	ble.n	801c95e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c950:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c954:	790f      	ldrb	r7, [r1, #4]
 801c956:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c95a:	88c9      	ldrh	r1, [r1, #6]
 801c95c:	e7f4      	b.n	801c948 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c95e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801c962:	b29b      	uxth	r3, r3
 801c964:	e7c5      	b.n	801c8f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c966:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c968:	920c      	str	r2, [sp, #48]	@ 0x30
 801c96a:	4601      	mov	r1, r0
 801c96c:	9a00      	ldr	r2, [sp, #0]
 801c96e:	469c      	mov	ip, r3
 801c970:	e78e      	b.n	801c890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c972:	1957      	adds	r7, r2, r5
 801c974:	ebac 0305 	sub.w	r3, ip, r5
 801c978:	b2ba      	uxth	r2, r7
 801c97a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c97e:	9200      	str	r2, [sp, #0]
 801c980:	b29b      	uxth	r3, r3
 801c982:	2500      	movs	r5, #0
 801c984:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c986:	455a      	cmp	r2, fp
 801c988:	d88e      	bhi.n	801c8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c98a:	4601      	mov	r1, r0
 801c98c:	e749      	b.n	801c822 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c98e:	458c      	cmp	ip, r1
 801c990:	bf2c      	ite	cs
 801c992:	4628      	movcs	r0, r5
 801c994:	462b      	movcc	r3, r5
 801c996:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c998:	bf27      	ittee	cs
 801c99a:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801c99c:	ebac 0301 	subcs.w	r3, ip, r1
 801c9a0:	eba1 000c 	subcc.w	r0, r1, ip
 801c9a4:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801c9a8:	bf2c      	ite	cs
 801c9aa:	b29b      	uxthcs	r3, r3
 801c9ac:	b280      	uxthcc	r0, r0
 801c9ae:	2dff      	cmp	r5, #255	@ 0xff
 801c9b0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c9b2:	eb02 0705 	add.w	r7, r2, r5
 801c9b6:	b2bd      	uxth	r5, r7
 801c9b8:	9500      	str	r5, [sp, #0]
 801c9ba:	d12f      	bne.n	801ca1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c9bc:	465e      	mov	r6, fp
 801c9be:	9d00      	ldr	r5, [sp, #0]
 801c9c0:	42aa      	cmp	r2, r5
 801c9c2:	f040 8084 	bne.w	801cace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c9c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c9c8:	458c      	cmp	ip, r1
 801c9ca:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c9ce:	d3d8      	bcc.n	801c982 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c9d0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c9d2:	9904      	ldr	r1, [sp, #16]
 801c9d4:	8812      	ldrh	r2, [r2, #0]
 801c9d6:	1a52      	subs	r2, r2, r1
 801c9d8:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c9dc:	9a08      	ldr	r2, [sp, #32]
 801c9de:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801c9e0:	3201      	adds	r2, #1
 801c9e2:	428a      	cmp	r2, r1
 801c9e4:	9208      	str	r2, [sp, #32]
 801c9e6:	f040 8092 	bne.w	801cb0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c9ea:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801c9ee:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801c9f2:	9b04      	ldr	r3, [sp, #16]
 801c9f4:	eba5 050c 	sub.w	r5, r5, ip
 801c9f8:	b2ad      	uxth	r5, r5
 801c9fa:	2d00      	cmp	r5, #0
 801c9fc:	bf08      	it	eq
 801c9fe:	4619      	moveq	r1, r3
 801ca00:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ca02:	bf18      	it	ne
 801ca04:	2100      	movne	r1, #0
 801ca06:	3301      	adds	r3, #1
 801ca08:	930d      	str	r3, [sp, #52]	@ 0x34
 801ca0a:	b289      	uxth	r1, r1
 801ca0c:	e700      	b.n	801c810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801ca0e:	bf00      	nop
 801ca10:	20013f60 	.word	0x20013f60
 801ca14:	20013f5a 	.word	0x20013f5a
 801ca18:	fffff7fb 	.word	0xfffff7fb
 801ca1c:	46d9      	mov	r9, fp
 801ca1e:	9d00      	ldr	r5, [sp, #0]
 801ca20:	42aa      	cmp	r2, r5
 801ca22:	d0d0      	beq.n	801c9c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801ca24:	1c55      	adds	r5, r2, #1
 801ca26:	4422      	add	r2, r4
 801ca28:	9517      	str	r5, [sp, #92]	@ 0x5c
 801ca2a:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801ca2e:	9a06      	ldr	r2, [sp, #24]
 801ca30:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ca34:	4472      	add	r2, lr
 801ca36:	9212      	str	r2, [sp, #72]	@ 0x48
 801ca38:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801ca3a:	f8b9 2000 	ldrh.w	r2, [r9]
 801ca3e:	f897 a002 	ldrb.w	sl, [r7, #2]
 801ca42:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801ca44:	1216      	asrs	r6, r2, #8
 801ca46:	fb1a fa07 	smulbb	sl, sl, r7
 801ca4a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ca4e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801ca50:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ca54:	fb06 a607 	mla	r6, r6, r7, sl
 801ca58:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801ca5a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801ca5e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801ca60:	10d5      	asrs	r5, r2, #3
 801ca62:	fb1a fa07 	smulbb	sl, sl, r7
 801ca66:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ca6a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801ca6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ca70:	fb05 a507 	mla	r5, r5, r7, sl
 801ca74:	9f06      	ldr	r7, [sp, #24]
 801ca76:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ca7a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801ca7c:	00d2      	lsls	r2, r2, #3
 801ca7e:	fb1e fe07 	smulbb	lr, lr, r7
 801ca82:	b2d2      	uxtb	r2, r2
 801ca84:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801ca86:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ca8a:	b2b6      	uxth	r6, r6
 801ca8c:	fb02 e207 	mla	r2, r2, r7, lr
 801ca90:	b292      	uxth	r2, r2
 801ca92:	b2ad      	uxth	r5, r5
 801ca94:	f106 0a01 	add.w	sl, r6, #1
 801ca98:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801ca9c:	f102 0e01 	add.w	lr, r2, #1
 801caa0:	f105 0a01 	add.w	sl, r5, #1
 801caa4:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801caa8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801caac:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801cab0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801cab4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cab8:	ea4e 0606 	orr.w	r6, lr, r6
 801cabc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801cac0:	ea46 060a 	orr.w	r6, r6, sl
 801cac4:	f829 6b02 	strh.w	r6, [r9], #2
 801cac8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801cacc:	e7a7      	b.n	801ca1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801cace:	f102 0e01 	add.w	lr, r2, #1
 801cad2:	4422      	add	r2, r4
 801cad4:	9f06      	ldr	r7, [sp, #24]
 801cad6:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801cada:	9a06      	ldr	r2, [sp, #24]
 801cadc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cae0:	eb02 0a05 	add.w	sl, r2, r5
 801cae4:	4a13      	ldr	r2, [pc, #76]	@ (801cb34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801cae6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801caea:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801caee:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801caf2:	00d2      	lsls	r2, r2, #3
 801caf4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801caf8:	ea49 0202 	orr.w	r2, r9, r2
 801cafc:	f817 9005 	ldrb.w	r9, [r7, r5]
 801cb00:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801cb04:	f826 2b02 	strh.w	r2, [r6], #2
 801cb08:	fa1f f28e 	uxth.w	r2, lr
 801cb0c:	e757      	b.n	801c9be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801cb0e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cb12:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801cb16:	1a2d      	subs	r5, r5, r0
 801cb18:	b2ad      	uxth	r5, r5
 801cb1a:	2d00      	cmp	r5, #0
 801cb1c:	bf18      	it	ne
 801cb1e:	2000      	movne	r0, #0
 801cb20:	e730      	b.n	801c984 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cb22:	4b05      	ldr	r3, [pc, #20]	@ (801cb38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801cb24:	6818      	ldr	r0, [r3, #0]
 801cb26:	6803      	ldr	r3, [r0, #0]
 801cb28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cb2a:	4798      	blx	r3
 801cb2c:	b01f      	add	sp, #124	@ 0x7c
 801cb2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb32:	bf00      	nop
 801cb34:	fffff800 	.word	0xfffff800
 801cb38:	20013f60 	.word	0x20013f60

0801cb3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801cb3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb40:	b091      	sub	sp, #68	@ 0x44
 801cb42:	469b      	mov	fp, r3
 801cb44:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801cb48:	4616      	mov	r6, r2
 801cb4a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801cb4e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801cb52:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801cb56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801cb5a:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801cb5e:	4604      	mov	r4, r0
 801cb60:	460d      	mov	r5, r1
 801cb62:	4640      	mov	r0, r8
 801cb64:	4659      	mov	r1, fp
 801cb66:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801cb6a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801cb6e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801cb72:	f7f1 f8eb 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 801cb76:	4631      	mov	r1, r6
 801cb78:	4640      	mov	r0, r8
 801cb7a:	f7f1 f8e7 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 801cb7e:	4b74      	ldr	r3, [pc, #464]	@ (801cd50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801cb80:	8818      	ldrh	r0, [r3, #0]
 801cb82:	4b74      	ldr	r3, [pc, #464]	@ (801cd54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801cb84:	8819      	ldrh	r1, [r3, #0]
 801cb86:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801cb8a:	2b00      	cmp	r3, #0
 801cb8c:	b202      	sxth	r2, r0
 801cb8e:	b20e      	sxth	r6, r1
 801cb90:	da07      	bge.n	801cba2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801cb92:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801cb96:	4463      	add	r3, ip
 801cb98:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801cb9c:	2300      	movs	r3, #0
 801cb9e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801cba2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801cba6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801cbaa:	1ad2      	subs	r2, r2, r3
 801cbac:	4594      	cmp	ip, r2
 801cbae:	bfc4      	itt	gt
 801cbb0:	1ac2      	subgt	r2, r0, r3
 801cbb2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801cbb6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801cbba:	2a00      	cmp	r2, #0
 801cbbc:	da07      	bge.n	801cbce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801cbbe:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801cbc2:	4462      	add	r2, ip
 801cbc4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801cbc8:	2200      	movs	r2, #0
 801cbca:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801cbce:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801cbd2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801cbd6:	eba6 060a 	sub.w	r6, r6, sl
 801cbda:	42b2      	cmp	r2, r6
 801cbdc:	bfc4      	itt	gt
 801cbde:	eba1 020a 	subgt.w	r2, r1, sl
 801cbe2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801cbe6:	4a5c      	ldr	r2, [pc, #368]	@ (801cd58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801cbe8:	7812      	ldrb	r2, [r2, #0]
 801cbea:	b9a2      	cbnz	r2, 801cc16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801cbec:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801cbf0:	4286      	cmp	r6, r0
 801cbf2:	4640      	mov	r0, r8
 801cbf4:	9303      	str	r3, [sp, #12]
 801cbf6:	bf14      	ite	ne
 801cbf8:	2600      	movne	r6, #0
 801cbfa:	2601      	moveq	r6, #1
 801cbfc:	f7f1 f8e9 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cc00:	9b03      	ldr	r3, [sp, #12]
 801cc02:	b160      	cbz	r0, 801cc1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801cc04:	2300      	movs	r3, #0
 801cc06:	8023      	strh	r3, [r4, #0]
 801cc08:	8063      	strh	r3, [r4, #2]
 801cc0a:	80a3      	strh	r3, [r4, #4]
 801cc0c:	4620      	mov	r0, r4
 801cc0e:	80e3      	strh	r3, [r4, #6]
 801cc10:	b011      	add	sp, #68	@ 0x44
 801cc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc16:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801cc1a:	428e      	cmp	r6, r1
 801cc1c:	e7e9      	b.n	801cbf2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801cc1e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801cc22:	9205      	str	r2, [sp, #20]
 801cc24:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801cc28:	9206      	str	r2, [sp, #24]
 801cc2a:	f8bb 2000 	ldrh.w	r2, [fp]
 801cc2e:	900e      	str	r0, [sp, #56]	@ 0x38
 801cc30:	1a9b      	subs	r3, r3, r2
 801cc32:	b21b      	sxth	r3, r3
 801cc34:	9303      	str	r3, [sp, #12]
 801cc36:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cc3a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801cc3e:	ebaa 0a03 	sub.w	sl, sl, r3
 801cc42:	fa0f f38a 	sxth.w	r3, sl
 801cc46:	9304      	str	r3, [sp, #16]
 801cc48:	9b03      	ldr	r3, [sp, #12]
 801cc4a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801cc4e:	9b04      	ldr	r3, [sp, #16]
 801cc50:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801cc54:	9b05      	ldr	r3, [sp, #20]
 801cc56:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801cc5a:	a90e      	add	r1, sp, #56	@ 0x38
 801cc5c:	9b06      	ldr	r3, [sp, #24]
 801cc5e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801cc62:	a80c      	add	r0, sp, #48	@ 0x30
 801cc64:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801cc68:	f7f7 fa8c 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc6c:	4640      	mov	r0, r8
 801cc6e:	f7f7 fa61 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc72:	a80e      	add	r0, sp, #56	@ 0x38
 801cc74:	f7f7 fa5e 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc78:	4b38      	ldr	r3, [pc, #224]	@ (801cd5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801cc7a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801cc7e:	881b      	ldrh	r3, [r3, #0]
 801cc80:	9307      	str	r3, [sp, #28]
 801cc82:	682b      	ldr	r3, [r5, #0]
 801cc84:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801cd60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cc88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801cc8a:	4628      	mov	r0, r5
 801cc8c:	4798      	blx	r3
 801cc8e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801cc92:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801cc96:	4681      	mov	r9, r0
 801cc98:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801cc9c:	f8db 0000 	ldr.w	r0, [fp]
 801cca0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801cca2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801cca6:	6803      	ldr	r3, [r0, #0]
 801cca8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ccaa:	4798      	blx	r3
 801ccac:	4607      	mov	r7, r0
 801ccae:	f8db 0000 	ldr.w	r0, [fp]
 801ccb2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801ccb6:	6803      	ldr	r3, [r0, #0]
 801ccb8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ccbc:	9109      	str	r1, [sp, #36]	@ 0x24
 801ccbe:	9208      	str	r2, [sp, #32]
 801ccc0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ccc2:	4798      	blx	r3
 801ccc4:	f010 0f01 	tst.w	r0, #1
 801ccc8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801cccc:	d012      	beq.n	801ccf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801ccce:	f8db 0000 	ldr.w	r0, [fp]
 801ccd2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801ccd6:	6803      	ldr	r3, [r0, #0]
 801ccd8:	9200      	str	r2, [sp, #0]
 801ccda:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801ccdc:	e898 0006 	ldmia.w	r8, {r1, r2}
 801cce0:	462b      	mov	r3, r5
 801cce2:	47b0      	blx	r6
 801cce4:	9b03      	ldr	r3, [sp, #12]
 801cce6:	8023      	strh	r3, [r4, #0]
 801cce8:	9b04      	ldr	r3, [sp, #16]
 801ccea:	8063      	strh	r3, [r4, #2]
 801ccec:	9b05      	ldr	r3, [sp, #20]
 801ccee:	80a3      	strh	r3, [r4, #4]
 801ccf0:	9b06      	ldr	r3, [sp, #24]
 801ccf2:	e78b      	b.n	801cc0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801ccf4:	fb09 f202 	mul.w	r2, r9, r2
 801ccf8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801ccfc:	440f      	add	r7, r1
 801ccfe:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801cd02:	b166      	cbz	r6, 801cd1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cd04:	9a07      	ldr	r2, [sp, #28]
 801cd06:	4592      	cmp	sl, r2
 801cd08:	d109      	bne.n	801cd1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cd0a:	f8db 0000 	ldr.w	r0, [fp]
 801cd0e:	6802      	ldr	r2, [r0, #0]
 801cd10:	fb09 f303 	mul.w	r3, r9, r3
 801cd14:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801cd16:	4629      	mov	r1, r5
 801cd18:	463a      	mov	r2, r7
 801cd1a:	47b0      	blx	r6
 801cd1c:	e7e2      	b.n	801cce4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cd1e:	fb0a f303 	mul.w	r3, sl, r3
 801cd22:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801cd60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cd26:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801cd2a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801cd2e:	4545      	cmp	r5, r8
 801cd30:	d2d8      	bcs.n	801cce4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cd32:	f8db 0000 	ldr.w	r0, [fp]
 801cd36:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801cd3a:	6802      	ldr	r2, [r0, #0]
 801cd3c:	4629      	mov	r1, r5
 801cd3e:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801cd42:	005b      	lsls	r3, r3, #1
 801cd44:	463a      	mov	r2, r7
 801cd46:	47d0      	blx	sl
 801cd48:	444f      	add	r7, r9
 801cd4a:	4435      	add	r5, r6
 801cd4c:	e7ef      	b.n	801cd2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801cd4e:	bf00      	nop
 801cd50:	20013f54 	.word	0x20013f54
 801cd54:	20013f56 	.word	0x20013f56
 801cd58:	20013f58 	.word	0x20013f58
 801cd5c:	20013f5a 	.word	0x20013f5a
 801cd60:	20013f60 	.word	0x20013f60

0801cd64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801cd64:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cd66:	4606      	mov	r6, r0
 801cd68:	b087      	sub	sp, #28
 801cd6a:	460c      	mov	r4, r1
 801cd6c:	4617      	mov	r7, r2
 801cd6e:	461d      	mov	r5, r3
 801cd70:	b333      	cbz	r3, 801cdc0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cd72:	4608      	mov	r0, r1
 801cd74:	f7f1 f82d 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cd78:	bb10      	cbnz	r0, 801cdc0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cd7a:	6820      	ldr	r0, [r4, #0]
 801cd7c:	6861      	ldr	r1, [r4, #4]
 801cd7e:	4c1c      	ldr	r4, [pc, #112]	@ (801cdf0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801cd80:	ab04      	add	r3, sp, #16
 801cd82:	c303      	stmia	r3!, {r0, r1}
 801cd84:	a804      	add	r0, sp, #16
 801cd86:	f7f7 f9d5 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd8a:	6820      	ldr	r0, [r4, #0]
 801cd8c:	6803      	ldr	r3, [r0, #0]
 801cd8e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cd90:	4798      	blx	r3
 801cd92:	2dff      	cmp	r5, #255	@ 0xff
 801cd94:	d016      	beq.n	801cdc4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801cd96:	f010 0f08 	tst.w	r0, #8
 801cd9a:	6820      	ldr	r0, [r4, #0]
 801cd9c:	d015      	beq.n	801cdca <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801cd9e:	2400      	movs	r4, #0
 801cda0:	6801      	ldr	r1, [r0, #0]
 801cda2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cda6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801cdaa:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801cdae:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801cdb2:	9401      	str	r4, [sp, #4]
 801cdb4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801cdb8:	9400      	str	r4, [sp, #0]
 801cdba:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801cdbc:	4639      	mov	r1, r7
 801cdbe:	47a0      	blx	r4
 801cdc0:	b007      	add	sp, #28
 801cdc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cdc4:	f010 0f02 	tst.w	r0, #2
 801cdc8:	e7e7      	b.n	801cd9a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801cdca:	6803      	ldr	r3, [r0, #0]
 801cdcc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cdce:	4798      	blx	r3
 801cdd0:	4b08      	ldr	r3, [pc, #32]	@ (801cdf4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801cdd2:	881a      	ldrh	r2, [r3, #0]
 801cdd4:	6833      	ldr	r3, [r6, #0]
 801cdd6:	e9cd 7500 	strd	r7, r5, [sp]
 801cdda:	4601      	mov	r1, r0
 801cddc:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801cdde:	4630      	mov	r0, r6
 801cde0:	ab04      	add	r3, sp, #16
 801cde2:	47a8      	blx	r5
 801cde4:	6820      	ldr	r0, [r4, #0]
 801cde6:	6803      	ldr	r3, [r0, #0]
 801cde8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cdea:	4798      	blx	r3
 801cdec:	e7e8      	b.n	801cdc0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cdee:	bf00      	nop
 801cdf0:	20013f60 	.word	0x20013f60
 801cdf4:	20013f5a 	.word	0x20013f5a

0801cdf8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cdf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cdfc:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801ce00:	9e08      	ldr	r6, [sp, #32]
 801ce02:	4688      	mov	r8, r1
 801ce04:	4614      	mov	r4, r2
 801ce06:	461d      	mov	r5, r3
 801ce08:	2f00      	cmp	r7, #0
 801ce0a:	f000 80a9 	beq.w	801cf60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ce0e:	4618      	mov	r0, r3
 801ce10:	f7f0 ffdf 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ce14:	2800      	cmp	r0, #0
 801ce16:	f040 80a3 	bne.w	801cf60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ce1a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801ce1e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801ce22:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801ce26:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801ce2a:	fb04 1303 	mla	r3, r4, r3, r1
 801ce2e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801ce32:	4365      	muls	r5, r4
 801ce34:	2fff      	cmp	r7, #255	@ 0xff
 801ce36:	eba4 0200 	sub.w	r2, r4, r0
 801ce3a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801ce3e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801ce42:	d04a      	beq.n	801ceda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801ce44:	b2bc      	uxth	r4, r7
 801ce46:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801ce4a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801ce4e:	fa5f f788 	uxtb.w	r7, r8
 801ce52:	b2f3      	uxtb	r3, r6
 801ce54:	0040      	lsls	r0, r0, #1
 801ce56:	fb0e fe04 	mul.w	lr, lr, r4
 801ce5a:	4367      	muls	r7, r4
 801ce5c:	4363      	muls	r3, r4
 801ce5e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801ce62:	fa1f fc8c 	uxth.w	ip, ip
 801ce66:	42a9      	cmp	r1, r5
 801ce68:	d27a      	bcs.n	801cf60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ce6a:	eb01 0900 	add.w	r9, r1, r0
 801ce6e:	4549      	cmp	r1, r9
 801ce70:	d231      	bcs.n	801ced6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801ce72:	880a      	ldrh	r2, [r1, #0]
 801ce74:	1214      	asrs	r4, r2, #8
 801ce76:	10d6      	asrs	r6, r2, #3
 801ce78:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801ce7c:	00d2      	lsls	r2, r2, #3
 801ce7e:	b2d2      	uxtb	r2, r2
 801ce80:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ce84:	fb14 f40c 	smulbb	r4, r4, ip
 801ce88:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ce8c:	4474      	add	r4, lr
 801ce8e:	fb12 f20c 	smulbb	r2, r2, ip
 801ce92:	b2a4      	uxth	r4, r4
 801ce94:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801ce98:	441a      	add	r2, r3
 801ce9a:	b292      	uxth	r2, r2
 801ce9c:	f104 0a01 	add.w	sl, r4, #1
 801cea0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cea4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cea8:	fb16 f60c 	smulbb	r6, r6, ip
 801ceac:	f102 0a01 	add.w	sl, r2, #1
 801ceb0:	443e      	add	r6, r7
 801ceb2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ceb6:	b2b6      	uxth	r6, r6
 801ceb8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801cebc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cec0:	4322      	orrs	r2, r4
 801cec2:	1c74      	adds	r4, r6, #1
 801cec4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801cec8:	0976      	lsrs	r6, r6, #5
 801ceca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801cece:	4332      	orrs	r2, r6
 801ced0:	f821 2b02 	strh.w	r2, [r1], #2
 801ced4:	e7cb      	b.n	801ce6e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ced6:	4441      	add	r1, r8
 801ced8:	e7c5      	b.n	801ce66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ceda:	4f22      	ldr	r7, [pc, #136]	@ (801cf64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801cedc:	0973      	lsrs	r3, r6, #5
 801cede:	ea08 0707 	and.w	r7, r8, r7
 801cee2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cee6:	433b      	orrs	r3, r7
 801cee8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ceec:	4333      	orrs	r3, r6
 801ceee:	07e7      	lsls	r7, r4, #31
 801cef0:	b29b      	uxth	r3, r3
 801cef2:	d50b      	bpl.n	801cf0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801cef4:	0040      	lsls	r0, r0, #1
 801cef6:	0052      	lsls	r2, r2, #1
 801cef8:	42a9      	cmp	r1, r5
 801cefa:	d231      	bcs.n	801cf60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cefc:	180c      	adds	r4, r1, r0
 801cefe:	42a1      	cmp	r1, r4
 801cf00:	d202      	bcs.n	801cf08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801cf02:	f821 3b02 	strh.w	r3, [r1], #2
 801cf06:	e7fa      	b.n	801cefe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801cf08:	4411      	add	r1, r2
 801cf0a:	e7f5      	b.n	801cef8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801cf0c:	078e      	lsls	r6, r1, #30
 801cf0e:	d008      	beq.n	801cf22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801cf10:	0066      	lsls	r6, r4, #1
 801cf12:	460a      	mov	r2, r1
 801cf14:	42aa      	cmp	r2, r5
 801cf16:	d202      	bcs.n	801cf1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801cf18:	8013      	strh	r3, [r2, #0]
 801cf1a:	4432      	add	r2, r6
 801cf1c:	e7fa      	b.n	801cf14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801cf1e:	3102      	adds	r1, #2
 801cf20:	3801      	subs	r0, #1
 801cf22:	07c2      	lsls	r2, r0, #31
 801cf24:	d50b      	bpl.n	801cf3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801cf26:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801cf2a:	3a01      	subs	r2, #1
 801cf2c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801cf30:	0066      	lsls	r6, r4, #1
 801cf32:	42aa      	cmp	r2, r5
 801cf34:	d202      	bcs.n	801cf3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801cf36:	8013      	strh	r3, [r2, #0]
 801cf38:	4432      	add	r2, r6
 801cf3a:	e7fa      	b.n	801cf32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801cf3c:	3801      	subs	r0, #1
 801cf3e:	b178      	cbz	r0, 801cf60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cf40:	1040      	asrs	r0, r0, #1
 801cf42:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801cf46:	0080      	lsls	r0, r0, #2
 801cf48:	0064      	lsls	r4, r4, #1
 801cf4a:	42a9      	cmp	r1, r5
 801cf4c:	d208      	bcs.n	801cf60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cf4e:	180e      	adds	r6, r1, r0
 801cf50:	460a      	mov	r2, r1
 801cf52:	42b2      	cmp	r2, r6
 801cf54:	d202      	bcs.n	801cf5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801cf56:	f842 3b04 	str.w	r3, [r2], #4
 801cf5a:	e7fa      	b.n	801cf52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801cf5c:	4421      	add	r1, r4
 801cf5e:	e7f4      	b.n	801cf4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801cf60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cf64:	00fff800 	.word	0x00fff800

0801cf68 <_ZN8touchgfx8LCD16bppC1Ev>:
 801cf68:	2200      	movs	r2, #0
 801cf6a:	4912      	ldr	r1, [pc, #72]	@ (801cfb4 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801cf6c:	6001      	str	r1, [r0, #0]
 801cf6e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801cf72:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801cf76:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801cf7a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801cf7e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801cf82:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801cf86:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801cf8a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801cf8e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801cf92:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801cf96:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801cf9a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801cf9e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801cfa2:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801cfa6:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801cfaa:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801cfae:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801cfb2:	4770      	bx	lr
 801cfb4:	0802b678 	.word	0x0802b678

0801cfb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cfb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfbc:	460d      	mov	r5, r1
 801cfbe:	b08d      	sub	sp, #52	@ 0x34
 801cfc0:	4604      	mov	r4, r0
 801cfc2:	6808      	ldr	r0, [r1, #0]
 801cfc4:	6849      	ldr	r1, [r1, #4]
 801cfc6:	4699      	mov	r9, r3
 801cfc8:	ab08      	add	r3, sp, #32
 801cfca:	c303      	stmia	r3!, {r0, r1}
 801cfcc:	6810      	ldr	r0, [r2, #0]
 801cfce:	6851      	ldr	r1, [r2, #4]
 801cfd0:	ab0a      	add	r3, sp, #40	@ 0x28
 801cfd2:	c303      	stmia	r3!, {r0, r1}
 801cfd4:	a808      	add	r0, sp, #32
 801cfd6:	f7f7 f8ad 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfda:	4629      	mov	r1, r5
 801cfdc:	a80a      	add	r0, sp, #40	@ 0x28
 801cfde:	f7f7 f8d1 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfe2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801cfe6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801cfea:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801cfee:	4d63      	ldr	r5, [pc, #396]	@ (801d17c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cff0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801cff4:	6828      	ldr	r0, [r5, #0]
 801cff6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801cffa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cffe:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d002:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d006:	440a      	add	r2, r1
 801d008:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801d00c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801d010:	4413      	add	r3, r2
 801d012:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801d016:	6803      	ldr	r3, [r0, #0]
 801d018:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d01a:	4798      	blx	r3
 801d01c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d020:	d119      	bne.n	801d056 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d022:	f010 0f20 	tst.w	r0, #32
 801d026:	6828      	ldr	r0, [r5, #0]
 801d028:	d018      	beq.n	801d05c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d02a:	2500      	movs	r5, #0
 801d02c:	6801      	ldr	r1, [r0, #0]
 801d02e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801d032:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801d036:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d03a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801d03e:	9502      	str	r5, [sp, #8]
 801d040:	b2b6      	uxth	r6, r6
 801d042:	fa1f f588 	uxth.w	r5, r8
 801d046:	9601      	str	r6, [sp, #4]
 801d048:	9500      	str	r5, [sp, #0]
 801d04a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801d04c:	4621      	mov	r1, r4
 801d04e:	47a8      	blx	r5
 801d050:	b00d      	add	sp, #52	@ 0x34
 801d052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d056:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801d05a:	e7e4      	b.n	801d026 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801d05c:	6803      	ldr	r3, [r0, #0]
 801d05e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d060:	4798      	blx	r3
 801d062:	4947      	ldr	r1, [pc, #284]	@ (801d180 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d064:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801d068:	880b      	ldrh	r3, [r1, #0]
 801d06a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801d06e:	fb03 5202 	mla	r2, r3, r2, r5
 801d072:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d076:	4373      	muls	r3, r6
 801d078:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d07c:	9307      	str	r3, [sp, #28]
 801d07e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d082:	9306      	str	r3, [sp, #24]
 801d084:	468a      	mov	sl, r1
 801d086:	9b07      	ldr	r3, [sp, #28]
 801d088:	4298      	cmp	r0, r3
 801d08a:	d270      	bcs.n	801d16e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d08c:	9b06      	ldr	r3, [sp, #24]
 801d08e:	4621      	mov	r1, r4
 801d090:	eb00 0b03 	add.w	fp, r0, r3
 801d094:	4558      	cmp	r0, fp
 801d096:	d25d      	bcs.n	801d154 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d098:	f851 4b04 	ldr.w	r4, [r1], #4
 801d09c:	0e23      	lsrs	r3, r4, #24
 801d09e:	d014      	beq.n	801d0ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d0a0:	2bff      	cmp	r3, #255	@ 0xff
 801d0a2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d0a6:	d112      	bne.n	801d0ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d0a8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d0ac:	d10f      	bne.n	801d0ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d0ae:	0963      	lsrs	r3, r4, #5
 801d0b0:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801d0b4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d0b8:	f02c 0c07 	bic.w	ip, ip, #7
 801d0bc:	ea43 0c0c 	orr.w	ip, r3, ip
 801d0c0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d0c4:	ea4c 0404 	orr.w	r4, ip, r4
 801d0c8:	8004      	strh	r4, [r0, #0]
 801d0ca:	3002      	adds	r0, #2
 801d0cc:	e7e2      	b.n	801d094 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801d0ce:	fb09 f303 	mul.w	r3, r9, r3
 801d0d2:	8807      	ldrh	r7, [r0, #0]
 801d0d4:	1c5a      	adds	r2, r3, #1
 801d0d6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801d0da:	1212      	asrs	r2, r2, #8
 801d0dc:	123e      	asrs	r6, r7, #8
 801d0de:	b293      	uxth	r3, r2
 801d0e0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801d0e4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d0e8:	43d2      	mvns	r2, r2
 801d0ea:	b2d2      	uxtb	r2, r2
 801d0ec:	10fd      	asrs	r5, r7, #3
 801d0ee:	fb1e fe03 	smulbb	lr, lr, r3
 801d0f2:	00ff      	lsls	r7, r7, #3
 801d0f4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d0f8:	fb06 e602 	mla	r6, r6, r2, lr
 801d0fc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d100:	b2ff      	uxtb	r7, r7
 801d102:	fa5f fc8c 	uxtb.w	ip, ip
 801d106:	b2e4      	uxtb	r4, r4
 801d108:	b2b6      	uxth	r6, r6
 801d10a:	fb1c fc03 	smulbb	ip, ip, r3
 801d10e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d112:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d116:	fb14 f403 	smulbb	r4, r4, r3
 801d11a:	fb05 c502 	mla	r5, r5, r2, ip
 801d11e:	f106 0e01 	add.w	lr, r6, #1
 801d122:	fb07 4702 	mla	r7, r7, r2, r4
 801d126:	b2ad      	uxth	r5, r5
 801d128:	b2bf      	uxth	r7, r7
 801d12a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801d12e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801d132:	f105 0c01 	add.w	ip, r5, #1
 801d136:	1c7e      	adds	r6, r7, #1
 801d138:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d13c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d140:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d144:	096d      	lsrs	r5, r5, #5
 801d146:	ea46 060e 	orr.w	r6, r6, lr
 801d14a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d14e:	432e      	orrs	r6, r5
 801d150:	8006      	strh	r6, [r0, #0]
 801d152:	e7ba      	b.n	801d0ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d154:	f8ba 3000 	ldrh.w	r3, [sl]
 801d158:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801d15c:	eba3 0308 	sub.w	r3, r3, r8
 801d160:	eba4 0408 	sub.w	r4, r4, r8
 801d164:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d168:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d16c:	e78b      	b.n	801d086 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801d16e:	4b03      	ldr	r3, [pc, #12]	@ (801d17c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d170:	6818      	ldr	r0, [r3, #0]
 801d172:	6803      	ldr	r3, [r0, #0]
 801d174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d176:	4798      	blx	r3
 801d178:	e76a      	b.n	801d050 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801d17a:	bf00      	nop
 801d17c:	20013f60 	.word	0x20013f60
 801d180:	20013f5a 	.word	0x20013f5a

0801d184 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801d184:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d188:	460c      	mov	r4, r1
 801d18a:	b085      	sub	sp, #20
 801d18c:	6810      	ldr	r0, [r2, #0]
 801d18e:	6851      	ldr	r1, [r2, #4]
 801d190:	466d      	mov	r5, sp
 801d192:	c503      	stmia	r5!, {r0, r1}
 801d194:	6818      	ldr	r0, [r3, #0]
 801d196:	6859      	ldr	r1, [r3, #4]
 801d198:	4616      	mov	r6, r2
 801d19a:	c503      	stmia	r5!, {r0, r1}
 801d19c:	4668      	mov	r0, sp
 801d19e:	f7f6 ffc9 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1a2:	4631      	mov	r1, r6
 801d1a4:	a802      	add	r0, sp, #8
 801d1a6:	f7f6 ffed 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1aa:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d1ae:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d1b2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d1b6:	4d28      	ldr	r5, [pc, #160]	@ (801d258 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801d1b8:	4e28      	ldr	r6, [pc, #160]	@ (801d25c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801d1ba:	6828      	ldr	r0, [r5, #0]
 801d1bc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d1c0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801d1c4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1c8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d1cc:	f8bd 1000 	ldrh.w	r1, [sp]
 801d1d0:	440a      	add	r2, r1
 801d1d2:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d1d6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d1da:	4413      	add	r3, r2
 801d1dc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d1e0:	6803      	ldr	r3, [r0, #0]
 801d1e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d1e4:	4798      	blx	r3
 801d1e6:	8833      	ldrh	r3, [r6, #0]
 801d1e8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801d1ec:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d1f0:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801d260 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801d1f4:	fb03 1202 	mla	r2, r3, r2, r1
 801d1f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d1fc:	fb08 f303 	mul.w	r3, r8, r3
 801d200:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d204:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801d208:	4298      	cmp	r0, r3
 801d20a:	d21d      	bcs.n	801d248 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801d20c:	eb00 080c 	add.w	r8, r0, ip
 801d210:	4540      	cmp	r0, r8
 801d212:	d20f      	bcs.n	801d234 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801d214:	f854 1b04 	ldr.w	r1, [r4], #4
 801d218:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801d21c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801d220:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d224:	ea42 0209 	orr.w	r2, r2, r9
 801d228:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d22c:	430a      	orrs	r2, r1
 801d22e:	f820 2b02 	strh.w	r2, [r0], #2
 801d232:	e7ed      	b.n	801d210 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801d234:	8832      	ldrh	r2, [r6, #0]
 801d236:	1bd2      	subs	r2, r2, r7
 801d238:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d23c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801d240:	1bd2      	subs	r2, r2, r7
 801d242:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d246:	e7df      	b.n	801d208 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801d248:	6828      	ldr	r0, [r5, #0]
 801d24a:	6803      	ldr	r3, [r0, #0]
 801d24c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d24e:	4798      	blx	r3
 801d250:	b005      	add	sp, #20
 801d252:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d256:	bf00      	nop
 801d258:	20013f60 	.word	0x20013f60
 801d25c:	20013f5a 	.word	0x20013f5a
 801d260:	fffff800 	.word	0xfffff800

0801d264 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d264:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d268:	460e      	mov	r6, r1
 801d26a:	b08e      	sub	sp, #56	@ 0x38
 801d26c:	4604      	mov	r4, r0
 801d26e:	6808      	ldr	r0, [r1, #0]
 801d270:	6849      	ldr	r1, [r1, #4]
 801d272:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801d44c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d276:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801d450 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d27a:	461d      	mov	r5, r3
 801d27c:	ab0a      	add	r3, sp, #40	@ 0x28
 801d27e:	c303      	stmia	r3!, {r0, r1}
 801d280:	6810      	ldr	r0, [r2, #0]
 801d282:	6851      	ldr	r1, [r2, #4]
 801d284:	ab0c      	add	r3, sp, #48	@ 0x30
 801d286:	c303      	stmia	r3!, {r0, r1}
 801d288:	a80a      	add	r0, sp, #40	@ 0x28
 801d28a:	f7f6 ff53 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d28e:	4631      	mov	r1, r6
 801d290:	a80c      	add	r0, sp, #48	@ 0x30
 801d292:	f7f6 ff77 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d296:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801d29a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801d29e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801d2a2:	f8d8 0000 	ldr.w	r0, [r8]
 801d2a6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801d2aa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801d2ae:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d2b2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d2b6:	440c      	add	r4, r1
 801d2b8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801d2bc:	440a      	add	r2, r1
 801d2be:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801d2c2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801d2c6:	4413      	add	r3, r2
 801d2c8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801d2cc:	6803      	ldr	r3, [r0, #0]
 801d2ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d2d0:	4798      	blx	r3
 801d2d2:	2dff      	cmp	r5, #255	@ 0xff
 801d2d4:	d124      	bne.n	801d320 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d2d6:	f010 0f01 	tst.w	r0, #1
 801d2da:	f8d8 0000 	ldr.w	r0, [r8]
 801d2de:	d022      	beq.n	801d326 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d2e0:	2100      	movs	r1, #0
 801d2e2:	f8d0 c000 	ldr.w	ip, [r0]
 801d2e6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801d2ea:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801d2ee:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d2f2:	f04f 0e01 	mov.w	lr, #1
 801d2f6:	f8cd e018 	str.w	lr, [sp, #24]
 801d2fa:	f8b9 e000 	ldrh.w	lr, [r9]
 801d2fe:	9503      	str	r5, [sp, #12]
 801d300:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d304:	b2b6      	uxth	r6, r6
 801d306:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801d30a:	9102      	str	r1, [sp, #8]
 801d30c:	b2bf      	uxth	r7, r7
 801d30e:	9601      	str	r6, [sp, #4]
 801d310:	9700      	str	r7, [sp, #0]
 801d312:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801d316:	4621      	mov	r1, r4
 801d318:	47a8      	blx	r5
 801d31a:	b00e      	add	sp, #56	@ 0x38
 801d31c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d320:	f010 0f04 	tst.w	r0, #4
 801d324:	e7d9      	b.n	801d2da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d326:	6803      	ldr	r3, [r0, #0]
 801d328:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d32a:	4798      	blx	r3
 801d32c:	f8b9 3000 	ldrh.w	r3, [r9]
 801d330:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801d334:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801d338:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801d33c:	fb03 1202 	mla	r2, r3, r2, r1
 801d340:	ebac 0c07 	sub.w	ip, ip, r7
 801d344:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d348:	435e      	muls	r6, r3
 801d34a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d34e:	2dff      	cmp	r5, #255	@ 0xff
 801d350:	eba3 0707 	sub.w	r7, r3, r7
 801d354:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d358:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d35c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d360:	d049      	beq.n	801d3f6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d362:	43eb      	mvns	r3, r5
 801d364:	fa1f f985 	uxth.w	r9, r5
 801d368:	b2db      	uxtb	r3, r3
 801d36a:	42b0      	cmp	r0, r6
 801d36c:	d266      	bcs.n	801d43c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d36e:	eb00 0a0e 	add.w	sl, r0, lr
 801d372:	4550      	cmp	r0, sl
 801d374:	4621      	mov	r1, r4
 801d376:	f104 0403 	add.w	r4, r4, #3
 801d37a:	d25b      	bcs.n	801d434 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d37c:	8802      	ldrh	r2, [r0, #0]
 801d37e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d382:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d386:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801d38a:	fb11 f109 	smulbb	r1, r1, r9
 801d38e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d392:	10d5      	asrs	r5, r2, #3
 801d394:	fb08 1803 	mla	r8, r8, r3, r1
 801d398:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d39c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d3a0:	fb11 f109 	smulbb	r1, r1, r9
 801d3a4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d3a8:	fb05 1503 	mla	r5, r5, r3, r1
 801d3ac:	00d2      	lsls	r2, r2, #3
 801d3ae:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d3b2:	b2d2      	uxtb	r2, r2
 801d3b4:	fb11 f109 	smulbb	r1, r1, r9
 801d3b8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d3bc:	fa1f f888 	uxth.w	r8, r8
 801d3c0:	fb02 1203 	mla	r2, r2, r3, r1
 801d3c4:	b292      	uxth	r2, r2
 801d3c6:	f108 0101 	add.w	r1, r8, #1
 801d3ca:	b2ad      	uxth	r5, r5
 801d3cc:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d3d0:	1c51      	adds	r1, r2, #1
 801d3d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d3d6:	1c69      	adds	r1, r5, #1
 801d3d8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d3dc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801d3e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d3e4:	096d      	lsrs	r5, r5, #5
 801d3e6:	ea42 0208 	orr.w	r2, r2, r8
 801d3ea:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d3ee:	432a      	orrs	r2, r5
 801d3f0:	f820 2b02 	strh.w	r2, [r0], #2
 801d3f4:	e7bd      	b.n	801d372 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d3f6:	4a14      	ldr	r2, [pc, #80]	@ (801d448 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d3f8:	42b0      	cmp	r0, r6
 801d3fa:	d21f      	bcs.n	801d43c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d3fc:	eb00 050e 	add.w	r5, r0, lr
 801d400:	42a8      	cmp	r0, r5
 801d402:	4621      	mov	r1, r4
 801d404:	f104 0403 	add.w	r4, r4, #3
 801d408:	d210      	bcs.n	801d42c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d40a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d40e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d412:	00db      	lsls	r3, r3, #3
 801d414:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d418:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d41c:	430b      	orrs	r3, r1
 801d41e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d422:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d426:	f820 3b02 	strh.w	r3, [r0], #2
 801d42a:	e7e9      	b.n	801d400 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d42c:	4438      	add	r0, r7
 801d42e:	eb01 040c 	add.w	r4, r1, ip
 801d432:	e7e1      	b.n	801d3f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d434:	4438      	add	r0, r7
 801d436:	eb01 040c 	add.w	r4, r1, ip
 801d43a:	e796      	b.n	801d36a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d43c:	4b03      	ldr	r3, [pc, #12]	@ (801d44c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d43e:	6818      	ldr	r0, [r3, #0]
 801d440:	6803      	ldr	r3, [r0, #0]
 801d442:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d444:	4798      	blx	r3
 801d446:	e768      	b.n	801d31a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d448:	fffff800 	.word	0xfffff800
 801d44c:	20013f60 	.word	0x20013f60
 801d450:	20013f5a 	.word	0x20013f5a

0801d454 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d454:	b4f0      	push	{r4, r5, r6, r7}
 801d456:	4616      	mov	r6, r2
 801d458:	2e01      	cmp	r6, #1
 801d45a:	461c      	mov	r4, r3
 801d45c:	460d      	mov	r5, r1
 801d45e:	9a04      	ldr	r2, [sp, #16]
 801d460:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d464:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d468:	d012      	beq.n	801d490 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d46a:	d303      	bcc.n	801d474 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d46c:	2e02      	cmp	r6, #2
 801d46e:	d00a      	beq.n	801d486 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d470:	bcf0      	pop	{r4, r5, r6, r7}
 801d472:	4770      	bx	lr
 801d474:	6805      	ldr	r5, [r0, #0]
 801d476:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d47a:	68ed      	ldr	r5, [r5, #12]
 801d47c:	4613      	mov	r3, r2
 801d47e:	46ac      	mov	ip, r5
 801d480:	4622      	mov	r2, r4
 801d482:	bcf0      	pop	{r4, r5, r6, r7}
 801d484:	4760      	bx	ip
 801d486:	4621      	mov	r1, r4
 801d488:	4628      	mov	r0, r5
 801d48a:	bcf0      	pop	{r4, r5, r6, r7}
 801d48c:	f7ff bd94 	b.w	801cfb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d490:	4621      	mov	r1, r4
 801d492:	4628      	mov	r0, r5
 801d494:	bcf0      	pop	{r4, r5, r6, r7}
 801d496:	f7ff bee5 	b.w	801d264 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d49c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4a0:	4681      	mov	r9, r0
 801d4a2:	b093      	sub	sp, #76	@ 0x4c
 801d4a4:	6810      	ldr	r0, [r2, #0]
 801d4a6:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801d4aa:	4f6d      	ldr	r7, [pc, #436]	@ (801d660 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d4ac:	4688      	mov	r8, r1
 801d4ae:	6851      	ldr	r1, [r2, #4]
 801d4b0:	ac0e      	add	r4, sp, #56	@ 0x38
 801d4b2:	c403      	stmia	r4!, {r0, r1}
 801d4b4:	6818      	ldr	r0, [r3, #0]
 801d4b6:	6859      	ldr	r1, [r3, #4]
 801d4b8:	ac10      	add	r4, sp, #64	@ 0x40
 801d4ba:	4616      	mov	r6, r2
 801d4bc:	c403      	stmia	r4!, {r0, r1}
 801d4be:	a80e      	add	r0, sp, #56	@ 0x38
 801d4c0:	f7f6 fe38 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d4c4:	4631      	mov	r1, r6
 801d4c6:	a810      	add	r0, sp, #64	@ 0x40
 801d4c8:	f7f6 fe5c 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d4cc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801d4d0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801d4d4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801d4d8:	4e62      	ldr	r6, [pc, #392]	@ (801d664 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d4da:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801d4de:	6830      	ldr	r0, [r6, #0]
 801d4e0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801d4e4:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d4e8:	4489      	add	r9, r1
 801d4ea:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801d4ee:	440a      	add	r2, r1
 801d4f0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801d4f4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801d4f8:	4413      	add	r3, r2
 801d4fa:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801d4fe:	6803      	ldr	r3, [r0, #0]
 801d500:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d502:	4798      	blx	r3
 801d504:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801d508:	6830      	ldr	r0, [r6, #0]
 801d50a:	d01d      	beq.n	801d548 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d50c:	2200      	movs	r2, #0
 801d50e:	6801      	ldr	r1, [r0, #0]
 801d510:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801d514:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d518:	220b      	movs	r2, #11
 801d51a:	9207      	str	r2, [sp, #28]
 801d51c:	883a      	ldrh	r2, [r7, #0]
 801d51e:	9206      	str	r2, [sp, #24]
 801d520:	2201      	movs	r2, #1
 801d522:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d526:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801d52a:	9203      	str	r2, [sp, #12]
 801d52c:	b2a4      	uxth	r4, r4
 801d52e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801d532:	9200      	str	r2, [sp, #0]
 801d534:	b2ad      	uxth	r5, r5
 801d536:	9502      	str	r5, [sp, #8]
 801d538:	9401      	str	r4, [sp, #4]
 801d53a:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801d53c:	4642      	mov	r2, r8
 801d53e:	4649      	mov	r1, r9
 801d540:	47a0      	blx	r4
 801d542:	b013      	add	sp, #76	@ 0x4c
 801d544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d548:	6803      	ldr	r3, [r0, #0]
 801d54a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d54c:	4798      	blx	r3
 801d54e:	883b      	ldrh	r3, [r7, #0]
 801d550:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801d554:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801d558:	fb03 1202 	mla	r2, r3, r2, r1
 801d55c:	435d      	muls	r5, r3
 801d55e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d562:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d566:	920c      	str	r2, [sp, #48]	@ 0x30
 801d568:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801d56c:	1b12      	subs	r2, r2, r4
 801d56e:	920d      	str	r2, [sp, #52]	@ 0x34
 801d570:	0062      	lsls	r2, r4, #1
 801d572:	1b1c      	subs	r4, r3, r4
 801d574:	0063      	lsls	r3, r4, #1
 801d576:	920a      	str	r2, [sp, #40]	@ 0x28
 801d578:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d57a:	f04f 0e04 	mov.w	lr, #4
 801d57e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d580:	4298      	cmp	r0, r3
 801d582:	d266      	bcs.n	801d652 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d584:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d586:	eb00 0b03 	add.w	fp, r0, r3
 801d58a:	4558      	cmp	r0, fp
 801d58c:	d25c      	bcs.n	801d648 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d58e:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d592:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d596:	f858 2003 	ldr.w	r2, [r8, r3]
 801d59a:	0e11      	lsrs	r1, r2, #24
 801d59c:	d012      	beq.n	801d5c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d59e:	29ff      	cmp	r1, #255	@ 0xff
 801d5a0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d5a4:	d110      	bne.n	801d5c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d5a6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d5aa:	d10d      	bne.n	801d5c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d5ac:	0953      	lsrs	r3, r2, #5
 801d5ae:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801d5b2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d5b6:	f027 0707 	bic.w	r7, r7, #7
 801d5ba:	431f      	orrs	r7, r3
 801d5bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d5c0:	433a      	orrs	r2, r7
 801d5c2:	8002      	strh	r2, [r0, #0]
 801d5c4:	3002      	adds	r0, #2
 801d5c6:	e7e0      	b.n	801d58a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d5c8:	fb0a f101 	mul.w	r1, sl, r1
 801d5cc:	8806      	ldrh	r6, [r0, #0]
 801d5ce:	1c4b      	adds	r3, r1, #1
 801d5d0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d5d4:	1235      	asrs	r5, r6, #8
 801d5d6:	10f4      	asrs	r4, r6, #3
 801d5d8:	121b      	asrs	r3, r3, #8
 801d5da:	00f6      	lsls	r6, r6, #3
 801d5dc:	b299      	uxth	r1, r3
 801d5de:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d5e2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d5e6:	b2f6      	uxtb	r6, r6
 801d5e8:	43db      	mvns	r3, r3
 801d5ea:	b2d2      	uxtb	r2, r2
 801d5ec:	b2db      	uxtb	r3, r3
 801d5ee:	fb1c fc01 	smulbb	ip, ip, r1
 801d5f2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d5f6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d5fa:	fb12 f201 	smulbb	r2, r2, r1
 801d5fe:	fb05 c503 	mla	r5, r5, r3, ip
 801d602:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801d606:	b2ff      	uxtb	r7, r7
 801d608:	fb06 2203 	mla	r2, r6, r3, r2
 801d60c:	b2ad      	uxth	r5, r5
 801d60e:	fb17 f701 	smulbb	r7, r7, r1
 801d612:	b292      	uxth	r2, r2
 801d614:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d618:	fb04 7403 	mla	r4, r4, r3, r7
 801d61c:	f105 0c01 	add.w	ip, r5, #1
 801d620:	1c57      	adds	r7, r2, #1
 801d622:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d626:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d62a:	b2a4      	uxth	r4, r4
 801d62c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d630:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d634:	433d      	orrs	r5, r7
 801d636:	1c67      	adds	r7, r4, #1
 801d638:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d63c:	0964      	lsrs	r4, r4, #5
 801d63e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d642:	4325      	orrs	r5, r4
 801d644:	8005      	strh	r5, [r0, #0]
 801d646:	e7bd      	b.n	801d5c4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d648:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d64a:	4418      	add	r0, r3
 801d64c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d64e:	4499      	add	r9, r3
 801d650:	e795      	b.n	801d57e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d652:	4b04      	ldr	r3, [pc, #16]	@ (801d664 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d654:	6818      	ldr	r0, [r3, #0]
 801d656:	6803      	ldr	r3, [r0, #0]
 801d658:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d65a:	4798      	blx	r3
 801d65c:	e771      	b.n	801d542 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d65e:	bf00      	nop
 801d660:	20013f5a 	.word	0x20013f5a
 801d664:	20013f60 	.word	0x20013f60

0801d668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d66c:	b087      	sub	sp, #28
 801d66e:	4680      	mov	r8, r0
 801d670:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801d674:	460d      	mov	r5, r1
 801d676:	4614      	mov	r4, r2
 801d678:	2e00      	cmp	r6, #0
 801d67a:	f000 80b9 	beq.w	801d7f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d67e:	6810      	ldr	r0, [r2, #0]
 801d680:	6851      	ldr	r1, [r2, #4]
 801d682:	af02      	add	r7, sp, #8
 801d684:	c703      	stmia	r7!, {r0, r1}
 801d686:	6818      	ldr	r0, [r3, #0]
 801d688:	6859      	ldr	r1, [r3, #4]
 801d68a:	af04      	add	r7, sp, #16
 801d68c:	c703      	stmia	r7!, {r0, r1}
 801d68e:	a802      	add	r0, sp, #8
 801d690:	f7f6 fd50 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d694:	4621      	mov	r1, r4
 801d696:	a804      	add	r0, sp, #16
 801d698:	f7f6 fd74 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d69c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d6a0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d6a4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d6a8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d6ac:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d6b0:	eb08 0401 	add.w	r4, r8, r1
 801d6b4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d6b8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d6bc:	440a      	add	r2, r1
 801d6be:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d6c2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d6c6:	4413      	add	r3, r2
 801d6c8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d6cc:	4b4a      	ldr	r3, [pc, #296]	@ (801d7f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d6ce:	6818      	ldr	r0, [r3, #0]
 801d6d0:	6803      	ldr	r3, [r0, #0]
 801d6d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d6d4:	4798      	blx	r3
 801d6d6:	4b49      	ldr	r3, [pc, #292]	@ (801d7fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d6d8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d6dc:	881a      	ldrh	r2, [r3, #0]
 801d6de:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d6e2:	2eff      	cmp	r6, #255	@ 0xff
 801d6e4:	fb02 c101 	mla	r1, r2, r1, ip
 801d6e8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d6ec:	fb02 f207 	mul.w	r2, r2, r7
 801d6f0:	f105 0104 	add.w	r1, r5, #4
 801d6f4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d6f8:	461d      	mov	r5, r3
 801d6fa:	d05a      	beq.n	801d7b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d6fc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801d700:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d704:	b2b6      	uxth	r6, r6
 801d706:	fa1f fe8e 	uxth.w	lr, lr
 801d70a:	9301      	str	r3, [sp, #4]
 801d70c:	4282      	cmp	r2, r0
 801d70e:	d96a      	bls.n	801d7e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d710:	eb00 0b0a 	add.w	fp, r0, sl
 801d714:	4583      	cmp	fp, r0
 801d716:	d940      	bls.n	801d79a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d718:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d71c:	8805      	ldrh	r5, [r0, #0]
 801d71e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d722:	122f      	asrs	r7, r5, #8
 801d724:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d728:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d72c:	fb17 f70e 	smulbb	r7, r7, lr
 801d730:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d734:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d738:	00ed      	lsls	r5, r5, #3
 801d73a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d73e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801d742:	10df      	asrs	r7, r3, #3
 801d744:	b2ed      	uxtb	r5, r5
 801d746:	00db      	lsls	r3, r3, #3
 801d748:	fa1f fc8c 	uxth.w	ip, ip
 801d74c:	fb19 f90e 	smulbb	r9, r9, lr
 801d750:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d754:	b2db      	uxtb	r3, r3
 801d756:	fb15 f50e 	smulbb	r5, r5, lr
 801d75a:	fb07 9706 	mla	r7, r7, r6, r9
 801d75e:	fb03 5306 	mla	r3, r3, r6, r5
 801d762:	f10c 0901 	add.w	r9, ip, #1
 801d766:	b29b      	uxth	r3, r3
 801d768:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d76c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801d770:	f103 0c01 	add.w	ip, r3, #1
 801d774:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d778:	b2bf      	uxth	r7, r7
 801d77a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d77e:	ea4c 0c09 	orr.w	ip, ip, r9
 801d782:	f107 0901 	add.w	r9, r7, #1
 801d786:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d78a:	097f      	lsrs	r7, r7, #5
 801d78c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d790:	ea4c 0c07 	orr.w	ip, ip, r7
 801d794:	f820 cb02 	strh.w	ip, [r0], #2
 801d798:	e7bc      	b.n	801d714 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d79a:	9b01      	ldr	r3, [sp, #4]
 801d79c:	881b      	ldrh	r3, [r3, #0]
 801d79e:	eba3 0308 	sub.w	r3, r3, r8
 801d7a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d7a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d7aa:	eba3 0308 	sub.w	r3, r3, r8
 801d7ae:	441c      	add	r4, r3
 801d7b0:	e7ac      	b.n	801d70c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d7b2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d7b6:	4282      	cmp	r2, r0
 801d7b8:	d915      	bls.n	801d7e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d7ba:	eb00 060a 	add.w	r6, r0, sl
 801d7be:	4286      	cmp	r6, r0
 801d7c0:	d906      	bls.n	801d7d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d7c2:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d7c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d7ca:	f820 3b02 	strh.w	r3, [r0], #2
 801d7ce:	e7f6      	b.n	801d7be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d7d0:	882b      	ldrh	r3, [r5, #0]
 801d7d2:	eba3 0308 	sub.w	r3, r3, r8
 801d7d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d7da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d7de:	eba3 0308 	sub.w	r3, r3, r8
 801d7e2:	441c      	add	r4, r3
 801d7e4:	e7e7      	b.n	801d7b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d7e6:	4b04      	ldr	r3, [pc, #16]	@ (801d7f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d7e8:	6818      	ldr	r0, [r3, #0]
 801d7ea:	6803      	ldr	r3, [r0, #0]
 801d7ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d7ee:	4798      	blx	r3
 801d7f0:	b007      	add	sp, #28
 801d7f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7f6:	bf00      	nop
 801d7f8:	20013f60 	.word	0x20013f60
 801d7fc:	20013f5a 	.word	0x20013f5a

0801d800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d804:	b091      	sub	sp, #68	@ 0x44
 801d806:	4680      	mov	r8, r0
 801d808:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801d80c:	460f      	mov	r7, r1
 801d80e:	4614      	mov	r4, r2
 801d810:	2d00      	cmp	r5, #0
 801d812:	d051      	beq.n	801d8b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d814:	6810      	ldr	r0, [r2, #0]
 801d816:	6851      	ldr	r1, [r2, #4]
 801d818:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801da1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d81c:	ae0c      	add	r6, sp, #48	@ 0x30
 801d81e:	c603      	stmia	r6!, {r0, r1}
 801d820:	6818      	ldr	r0, [r3, #0]
 801d822:	6859      	ldr	r1, [r3, #4]
 801d824:	ae0e      	add	r6, sp, #56	@ 0x38
 801d826:	c603      	stmia	r6!, {r0, r1}
 801d828:	a80c      	add	r0, sp, #48	@ 0x30
 801d82a:	f7f6 fc83 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d82e:	4621      	mov	r1, r4
 801d830:	a80e      	add	r0, sp, #56	@ 0x38
 801d832:	f7f6 fca7 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d836:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801d83a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801d83e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801d842:	f8d9 0000 	ldr.w	r0, [r9]
 801d846:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801d84a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801d84e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d852:	eb08 0401 	add.w	r4, r8, r1
 801d856:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801d85a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801da20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d85e:	440a      	add	r2, r1
 801d860:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801d864:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801d868:	4413      	add	r3, r2
 801d86a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801d86e:	6803      	ldr	r3, [r0, #0]
 801d870:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d872:	4798      	blx	r3
 801d874:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801d878:	f8d9 0000 	ldr.w	r0, [r9]
 801d87c:	d01f      	beq.n	801d8be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d87e:	2200      	movs	r2, #0
 801d880:	6801      	ldr	r1, [r0, #0]
 801d882:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801d886:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d88a:	220b      	movs	r2, #11
 801d88c:	9207      	str	r2, [sp, #28]
 801d88e:	f8b8 2000 	ldrh.w	r2, [r8]
 801d892:	9206      	str	r2, [sp, #24]
 801d894:	2201      	movs	r2, #1
 801d896:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d89a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801d89e:	9203      	str	r2, [sp, #12]
 801d8a0:	fa1f f28a 	uxth.w	r2, sl
 801d8a4:	9202      	str	r2, [sp, #8]
 801d8a6:	b2b6      	uxth	r6, r6
 801d8a8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801d8ac:	9200      	str	r2, [sp, #0]
 801d8ae:	9601      	str	r6, [sp, #4]
 801d8b0:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801d8b2:	463a      	mov	r2, r7
 801d8b4:	4621      	mov	r1, r4
 801d8b6:	47a8      	blx	r5
 801d8b8:	b011      	add	sp, #68	@ 0x44
 801d8ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d8be:	6803      	ldr	r3, [r0, #0]
 801d8c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d8c2:	4798      	blx	r3
 801d8c4:	f8b8 2000 	ldrh.w	r2, [r8]
 801d8c8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801d8cc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801d8d0:	2dff      	cmp	r5, #255	@ 0xff
 801d8d2:	fb02 1303 	mla	r3, r2, r3, r1
 801d8d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8da:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d8de:	fb0a fa02 	mul.w	sl, sl, r2
 801d8e2:	d062      	beq.n	801d9aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d8e4:	ea6f 0c05 	mvn.w	ip, r5
 801d8e8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d8ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801d8ee:	b2ad      	uxth	r5, r5
 801d8f0:	fa5f fc8c 	uxtb.w	ip, ip
 801d8f4:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801d8f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d8fa:	4298      	cmp	r0, r3
 801d8fc:	f080 8085 	bcs.w	801da0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d900:	eb00 0b09 	add.w	fp, r0, r9
 801d904:	4558      	cmp	r0, fp
 801d906:	d246      	bcs.n	801d996 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d908:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d90c:	2303      	movs	r3, #3
 801d90e:	2204      	movs	r2, #4
 801d910:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d914:	eb07 0a0e 	add.w	sl, r7, lr
 801d918:	8803      	ldrh	r3, [r0, #0]
 801d91a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d91e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d922:	1219      	asrs	r1, r3, #8
 801d924:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d928:	fb18 f805 	smulbb	r8, r8, r5
 801d92c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d930:	10da      	asrs	r2, r3, #3
 801d932:	fb01 810c 	mla	r1, r1, ip, r8
 801d936:	00db      	lsls	r3, r3, #3
 801d938:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d93c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d940:	b2db      	uxtb	r3, r3
 801d942:	fb18 f805 	smulbb	r8, r8, r5
 801d946:	fb1e fe05 	smulbb	lr, lr, r5
 801d94a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d94e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d952:	b289      	uxth	r1, r1
 801d954:	fb02 820c 	mla	r2, r2, ip, r8
 801d958:	fb03 e30c 	mla	r3, r3, ip, lr
 801d95c:	b292      	uxth	r2, r2
 801d95e:	b29b      	uxth	r3, r3
 801d960:	f101 0801 	add.w	r8, r1, #1
 801d964:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d968:	f103 0e01 	add.w	lr, r3, #1
 801d96c:	f102 0801 	add.w	r8, r2, #1
 801d970:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d974:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d978:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d97c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d980:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d984:	ea4e 0101 	orr.w	r1, lr, r1
 801d988:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d98c:	ea41 0108 	orr.w	r1, r1, r8
 801d990:	f820 1b02 	strh.w	r1, [r0], #2
 801d994:	e7b6      	b.n	801d904 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d996:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d998:	881b      	ldrh	r3, [r3, #0]
 801d99a:	1b9b      	subs	r3, r3, r6
 801d99c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9a0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d9a4:	1b9b      	subs	r3, r3, r6
 801d9a6:	441c      	add	r4, r3
 801d9a8:	e7a6      	b.n	801d8f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d9aa:	491b      	ldr	r1, [pc, #108]	@ (801da18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d9ac:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d9b0:	2203      	movs	r2, #3
 801d9b2:	2504      	movs	r5, #4
 801d9b4:	4550      	cmp	r0, sl
 801d9b6:	d228      	bcs.n	801da0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d9b8:	eb00 0c09 	add.w	ip, r0, r9
 801d9bc:	4560      	cmp	r0, ip
 801d9be:	4623      	mov	r3, r4
 801d9c0:	d219      	bcs.n	801d9f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d9c2:	f893 e000 	ldrb.w	lr, [r3]
 801d9c6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d9ca:	eb07 0b0e 	add.w	fp, r7, lr
 801d9ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d9d2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d9d6:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d9da:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d9de:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d9e2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801d9e6:	ea43 030b 	orr.w	r3, r3, fp
 801d9ea:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d9ee:	3401      	adds	r4, #1
 801d9f0:	f820 3b02 	strh.w	r3, [r0], #2
 801d9f4:	e7e2      	b.n	801d9bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d9f6:	f8b8 3000 	ldrh.w	r3, [r8]
 801d9fa:	1b9b      	subs	r3, r3, r6
 801d9fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da00:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801da04:	1b9b      	subs	r3, r3, r6
 801da06:	441c      	add	r4, r3
 801da08:	e7d4      	b.n	801d9b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801da0a:	4b04      	ldr	r3, [pc, #16]	@ (801da1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801da0c:	6818      	ldr	r0, [r3, #0]
 801da0e:	6803      	ldr	r3, [r0, #0]
 801da10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801da12:	4798      	blx	r3
 801da14:	e750      	b.n	801d8b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801da16:	bf00      	nop
 801da18:	fffff800 	.word	0xfffff800
 801da1c:	20013f60 	.word	0x20013f60
 801da20:	20013f5a 	.word	0x20013f5a

0801da24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801da24:	b4f0      	push	{r4, r5, r6, r7}
 801da26:	460c      	mov	r4, r1
 801da28:	4611      	mov	r1, r2
 801da2a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801da2e:	780f      	ldrb	r7, [r1, #0]
 801da30:	784e      	ldrb	r6, [r1, #1]
 801da32:	2f01      	cmp	r7, #1
 801da34:	461a      	mov	r2, r3
 801da36:	9b04      	ldr	r3, [sp, #16]
 801da38:	d038      	beq.n	801daac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801da3a:	d31f      	bcc.n	801da7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801da3c:	2f02      	cmp	r7, #2
 801da3e:	d14d      	bne.n	801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801da40:	2e03      	cmp	r6, #3
 801da42:	d84b      	bhi.n	801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801da44:	e8df f006 	tbb	[pc, r6]
 801da48:	17140702 	.word	0x17140702
 801da4c:	9504      	str	r5, [sp, #16]
 801da4e:	4620      	mov	r0, r4
 801da50:	bcf0      	pop	{r4, r5, r6, r7}
 801da52:	f7ff be09 	b.w	801d668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801da56:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801da58:	2800      	cmp	r0, #0
 801da5a:	d03f      	beq.n	801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801da5c:	6806      	ldr	r6, [r0, #0]
 801da5e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801da62:	68b5      	ldr	r5, [r6, #8]
 801da64:	4613      	mov	r3, r2
 801da66:	46ac      	mov	ip, r5
 801da68:	460a      	mov	r2, r1
 801da6a:	4621      	mov	r1, r4
 801da6c:	bcf0      	pop	{r4, r5, r6, r7}
 801da6e:	4760      	bx	ip
 801da70:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801da74:	e7f0      	b.n	801da58 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801da76:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801da7a:	e7ed      	b.n	801da58 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801da7c:	2e03      	cmp	r6, #3
 801da7e:	d82d      	bhi.n	801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801da80:	e8df f006 	tbb	[pc, r6]
 801da84:	110e0702 	.word	0x110e0702
 801da88:	9504      	str	r5, [sp, #16]
 801da8a:	4620      	mov	r0, r4
 801da8c:	bcf0      	pop	{r4, r5, r6, r7}
 801da8e:	f7ff bd05 	b.w	801d49c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801da92:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801da94:	b310      	cbz	r0, 801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801da96:	6806      	ldr	r6, [r0, #0]
 801da98:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801da9c:	68f5      	ldr	r5, [r6, #12]
 801da9e:	e7e1      	b.n	801da64 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801daa0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801daa4:	e7f6      	b.n	801da94 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801daa6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801daaa:	e7f3      	b.n	801da94 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801daac:	2e03      	cmp	r6, #3
 801daae:	d815      	bhi.n	801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dab0:	e8df f006 	tbb	[pc, r6]
 801dab4:	110e0702 	.word	0x110e0702
 801dab8:	9504      	str	r5, [sp, #16]
 801daba:	4620      	mov	r0, r4
 801dabc:	bcf0      	pop	{r4, r5, r6, r7}
 801dabe:	f7ff be9f 	b.w	801d800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801dac2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801dac4:	b150      	cbz	r0, 801dadc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801dac6:	6806      	ldr	r6, [r0, #0]
 801dac8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dacc:	6935      	ldr	r5, [r6, #16]
 801dace:	e7c9      	b.n	801da64 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dad0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801dad4:	e7f6      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801dad6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801dada:	e7f3      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801dadc:	bcf0      	pop	{r4, r5, r6, r7}
 801dade:	4770      	bx	lr

0801dae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801dae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dae4:	4604      	mov	r4, r0
 801dae6:	b087      	sub	sp, #28
 801dae8:	6810      	ldr	r0, [r2, #0]
 801daea:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801daee:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801dd28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801daf2:	460e      	mov	r6, r1
 801daf4:	6851      	ldr	r1, [r2, #4]
 801daf6:	ad02      	add	r5, sp, #8
 801daf8:	c503      	stmia	r5!, {r0, r1}
 801dafa:	6818      	ldr	r0, [r3, #0]
 801dafc:	6859      	ldr	r1, [r3, #4]
 801dafe:	ad04      	add	r5, sp, #16
 801db00:	4617      	mov	r7, r2
 801db02:	c503      	stmia	r5!, {r0, r1}
 801db04:	a802      	add	r0, sp, #8
 801db06:	f7f6 fb15 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801db0a:	4639      	mov	r1, r7
 801db0c:	a804      	add	r0, sp, #16
 801db0e:	f7f6 fb39 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801db12:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801db16:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801db1a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801db1e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801db22:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801db26:	fb11 2103 	smlabb	r1, r1, r3, r2
 801db2a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801db2e:	440e      	add	r6, r1
 801db30:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801db34:	440a      	add	r2, r1
 801db36:	f8ad 2010 	strh.w	r2, [sp, #16]
 801db3a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801db3e:	4413      	add	r3, r2
 801db40:	f8ad 3012 	strh.w	r3, [sp, #18]
 801db44:	4b77      	ldr	r3, [pc, #476]	@ (801dd24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801db46:	6818      	ldr	r0, [r3, #0]
 801db48:	6803      	ldr	r3, [r0, #0]
 801db4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801db4c:	4798      	blx	r3
 801db4e:	f8b9 b000 	ldrh.w	fp, [r9]
 801db52:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801db56:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801db5a:	fb0b 2303 	mla	r3, fp, r3, r2
 801db5e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db62:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801db66:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801db6a:	fb05 f50b 	mul.w	r5, r5, fp
 801db6e:	9300      	str	r3, [sp, #0]
 801db70:	d069      	beq.n	801dc46 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801db72:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801db76:	4558      	cmp	r0, fp
 801db78:	f080 80cc 	bcs.w	801dd14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801db7c:	9b00      	ldr	r3, [sp, #0]
 801db7e:	18c3      	adds	r3, r0, r3
 801db80:	9301      	str	r3, [sp, #4]
 801db82:	4631      	mov	r1, r6
 801db84:	9b01      	ldr	r3, [sp, #4]
 801db86:	4298      	cmp	r0, r3
 801db88:	d24f      	bcs.n	801dc2a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801db8a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801db8e:	2a00      	cmp	r2, #0
 801db90:	d048      	beq.n	801dc24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801db92:	fb0a f202 	mul.w	r2, sl, r2
 801db96:	1c53      	adds	r3, r2, #1
 801db98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801db9c:	121b      	asrs	r3, r3, #8
 801db9e:	d041      	beq.n	801dc24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801dba0:	8802      	ldrh	r2, [r0, #0]
 801dba2:	f8b4 c000 	ldrh.w	ip, [r4]
 801dba6:	b29e      	uxth	r6, r3
 801dba8:	1215      	asrs	r5, r2, #8
 801dbaa:	43db      	mvns	r3, r3
 801dbac:	b2db      	uxtb	r3, r3
 801dbae:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dbb2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801dbb6:	fb15 f503 	smulbb	r5, r5, r3
 801dbba:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801dbbe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801dbc2:	00d2      	lsls	r2, r2, #3
 801dbc4:	fb07 5706 	mla	r7, r7, r6, r5
 801dbc8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801dbcc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801dbd0:	b2d2      	uxtb	r2, r2
 801dbd2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dbd6:	b2bf      	uxth	r7, r7
 801dbd8:	fb1e fe03 	smulbb	lr, lr, r3
 801dbdc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801dbe0:	fa5f fc8c 	uxtb.w	ip, ip
 801dbe4:	fb12 f203 	smulbb	r2, r2, r3
 801dbe8:	fb05 e506 	mla	r5, r5, r6, lr
 801dbec:	fb0c 2c06 	mla	ip, ip, r6, r2
 801dbf0:	f107 0e01 	add.w	lr, r7, #1
 801dbf4:	fa1f fc8c 	uxth.w	ip, ip
 801dbf8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801dbfc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801dc00:	f10c 0701 	add.w	r7, ip, #1
 801dc04:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dc08:	b2ad      	uxth	r5, r5
 801dc0a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dc0e:	ea47 070e 	orr.w	r7, r7, lr
 801dc12:	f105 0e01 	add.w	lr, r5, #1
 801dc16:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801dc1a:	096d      	lsrs	r5, r5, #5
 801dc1c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dc20:	432f      	orrs	r7, r5
 801dc22:	8007      	strh	r7, [r0, #0]
 801dc24:	3002      	adds	r0, #2
 801dc26:	3402      	adds	r4, #2
 801dc28:	e7ac      	b.n	801db84 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801dc2a:	f8b9 3000 	ldrh.w	r3, [r9]
 801dc2e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dc32:	eba3 0308 	sub.w	r3, r3, r8
 801dc36:	eba6 0608 	sub.w	r6, r6, r8
 801dc3a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dc3e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dc42:	440e      	add	r6, r1
 801dc44:	e797      	b.n	801db76 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801dc46:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801dc4a:	42a8      	cmp	r0, r5
 801dc4c:	d262      	bcs.n	801dd14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801dc4e:	9b00      	ldr	r3, [sp, #0]
 801dc50:	4631      	mov	r1, r6
 801dc52:	eb00 0b03 	add.w	fp, r0, r3
 801dc56:	4558      	cmp	r0, fp
 801dc58:	d24e      	bcs.n	801dcf8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801dc5a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801dc5e:	b12b      	cbz	r3, 801dc6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801dc60:	2bff      	cmp	r3, #255	@ 0xff
 801dc62:	f8b4 e000 	ldrh.w	lr, [r4]
 801dc66:	d104      	bne.n	801dc72 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801dc68:	f8a0 e000 	strh.w	lr, [r0]
 801dc6c:	3002      	adds	r0, #2
 801dc6e:	3402      	adds	r4, #2
 801dc70:	e7f1      	b.n	801dc56 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801dc72:	8802      	ldrh	r2, [r0, #0]
 801dc74:	b29f      	uxth	r7, r3
 801dc76:	1216      	asrs	r6, r2, #8
 801dc78:	43db      	mvns	r3, r3
 801dc7a:	b2db      	uxtb	r3, r3
 801dc7c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801dc80:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801dc84:	fb16 f603 	smulbb	r6, r6, r3
 801dc88:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801dc8c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801dc90:	00d2      	lsls	r2, r2, #3
 801dc92:	fb0c 6c07 	mla	ip, ip, r7, r6
 801dc96:	b2d2      	uxtb	r2, r2
 801dc98:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801dc9c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801dca0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801dca4:	fb1a fa03 	smulbb	sl, sl, r3
 801dca8:	fa1f fc8c 	uxth.w	ip, ip
 801dcac:	fb12 f303 	smulbb	r3, r2, r3
 801dcb0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801dcb4:	fa5f fe8e 	uxtb.w	lr, lr
 801dcb8:	fb06 a607 	mla	r6, r6, r7, sl
 801dcbc:	f10c 0201 	add.w	r2, ip, #1
 801dcc0:	fb0e 3307 	mla	r3, lr, r7, r3
 801dcc4:	b2b6      	uxth	r6, r6
 801dcc6:	b29b      	uxth	r3, r3
 801dcc8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801dccc:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801dcd0:	f106 0a01 	add.w	sl, r6, #1
 801dcd4:	f103 0c01 	add.w	ip, r3, #1
 801dcd8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801dcdc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801dce0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dce4:	0976      	lsrs	r6, r6, #5
 801dce6:	ea4c 0c02 	orr.w	ip, ip, r2
 801dcea:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801dcee:	ea4c 0c06 	orr.w	ip, ip, r6
 801dcf2:	f8a0 c000 	strh.w	ip, [r0]
 801dcf6:	e7b9      	b.n	801dc6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801dcf8:	f8b9 3000 	ldrh.w	r3, [r9]
 801dcfc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dd00:	eba3 0308 	sub.w	r3, r3, r8
 801dd04:	eba6 0608 	sub.w	r6, r6, r8
 801dd08:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dd0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd10:	440e      	add	r6, r1
 801dd12:	e79a      	b.n	801dc4a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801dd14:	4b03      	ldr	r3, [pc, #12]	@ (801dd24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dd16:	6818      	ldr	r0, [r3, #0]
 801dd18:	6803      	ldr	r3, [r0, #0]
 801dd1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dd1c:	4798      	blx	r3
 801dd1e:	b007      	add	sp, #28
 801dd20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd24:	20013f60 	.word	0x20013f60
 801dd28:	20013f5a 	.word	0x20013f5a

0801dd2c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801dd2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd30:	b089      	sub	sp, #36	@ 0x24
 801dd32:	4607      	mov	r7, r0
 801dd34:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801dd38:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801dd3a:	4688      	mov	r8, r1
 801dd3c:	4692      	mov	sl, r2
 801dd3e:	4699      	mov	r9, r3
 801dd40:	2e00      	cmp	r6, #0
 801dd42:	d048      	beq.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801dd44:	4608      	mov	r0, r1
 801dd46:	f7fa f81d 	bl	8017d84 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dd4a:	4605      	mov	r5, r0
 801dd4c:	4640      	mov	r0, r8
 801dd4e:	f7fa f84d 	bl	8017dec <_ZNK8touchgfx6Bitmap9getHeightEv>
 801dd52:	f8ad 000e 	strh.w	r0, [sp, #14]
 801dd56:	4640      	mov	r0, r8
 801dd58:	f8ad a008 	strh.w	sl, [sp, #8]
 801dd5c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801dd60:	f8ad 900a 	strh.w	r9, [sp, #10]
 801dd64:	f7fa f900 	bl	8017f68 <_ZNK8touchgfx6Bitmap7getDataEv>
 801dd68:	4605      	mov	r5, r0
 801dd6a:	4640      	mov	r0, r8
 801dd6c:	f7fa f92c 	bl	8017fc8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801dd70:	4682      	mov	sl, r0
 801dd72:	4640      	mov	r0, r8
 801dd74:	f7fa f97c 	bl	8018070 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801dd78:	2810      	cmp	r0, #16
 801dd7a:	d82c      	bhi.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801dd7c:	e8df f010 	tbh	[pc, r0, lsl #1]
 801dd80:	00ba00ca 	.word	0x00ba00ca
 801dd84:	002b0011 	.word	0x002b0011
 801dd88:	002b002b 	.word	0x002b002b
 801dd8c:	002b002b 	.word	0x002b002b
 801dd90:	002b002b 	.word	0x002b002b
 801dd94:	00c1002b 	.word	0x00c1002b
 801dd98:	002b002b 	.word	0x002b002b
 801dd9c:	002b0180 	.word	0x002b0180
 801dda0:	0173      	.short	0x0173
 801dda2:	4bbc      	ldr	r3, [pc, #752]	@ (801e094 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801dda4:	6818      	ldr	r0, [r3, #0]
 801dda6:	6803      	ldr	r3, [r0, #0]
 801dda8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ddaa:	4798      	blx	r3
 801ddac:	2eff      	cmp	r6, #255	@ 0xff
 801ddae:	d101      	bne.n	801ddb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801ddb0:	0683      	lsls	r3, r0, #26
 801ddb2:	d506      	bpl.n	801ddc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801ddb4:	4633      	mov	r3, r6
 801ddb6:	4622      	mov	r2, r4
 801ddb8:	a902      	add	r1, sp, #8
 801ddba:	4628      	mov	r0, r5
 801ddbc:	f7ff f8fc 	bl	801cfb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ddc0:	e009      	b.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801ddc2:	4640      	mov	r0, r8
 801ddc4:	f7fa f898 	bl	8017ef8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ddc8:	b940      	cbnz	r0, 801dddc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801ddca:	4623      	mov	r3, r4
 801ddcc:	aa02      	add	r2, sp, #8
 801ddce:	4629      	mov	r1, r5
 801ddd0:	4638      	mov	r0, r7
 801ddd2:	f7ff f9d7 	bl	801d184 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ddd6:	b009      	add	sp, #36	@ 0x24
 801ddd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dddc:	f10d 0918 	add.w	r9, sp, #24
 801dde0:	4641      	mov	r1, r8
 801dde2:	4648      	mov	r0, r9
 801dde4:	f7fa f836 	bl	8017e54 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dde8:	e899 0003 	ldmia.w	r9, {r0, r1}
 801ddec:	f10d 0810 	add.w	r8, sp, #16
 801ddf0:	e888 0003 	stmia.w	r8, {r0, r1}
 801ddf4:	4640      	mov	r0, r8
 801ddf6:	4621      	mov	r1, r4
 801ddf8:	f7ef ffa8 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 801ddfc:	4640      	mov	r0, r8
 801ddfe:	f7ef ffe8 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801de02:	2800      	cmp	r0, #0
 801de04:	d1d6      	bne.n	801ddb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801de06:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801de0a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801de0e:	4293      	cmp	r3, r2
 801de10:	dd12      	ble.n	801de38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801de12:	1a9b      	subs	r3, r3, r2
 801de14:	f9b4 0000 	ldrsh.w	r0, [r4]
 801de18:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801de1c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801de20:	f8ad 201a 	strh.w	r2, [sp, #26]
 801de24:	f8ad 101c 	strh.w	r1, [sp, #28]
 801de28:	f8ad 301e 	strh.w	r3, [sp, #30]
 801de2c:	464a      	mov	r2, r9
 801de2e:	4633      	mov	r3, r6
 801de30:	a902      	add	r1, sp, #8
 801de32:	4628      	mov	r0, r5
 801de34:	f7ff f8c0 	bl	801cfb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801de38:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801de3c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801de40:	4293      	cmp	r3, r2
 801de42:	dd12      	ble.n	801de6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801de44:	1a9b      	subs	r3, r3, r2
 801de46:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801de4a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801de4e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801de52:	f8ad 001a 	strh.w	r0, [sp, #26]
 801de56:	f8ad 301c 	strh.w	r3, [sp, #28]
 801de5a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801de5e:	23ff      	movs	r3, #255	@ 0xff
 801de60:	464a      	mov	r2, r9
 801de62:	a902      	add	r1, sp, #8
 801de64:	4628      	mov	r0, r5
 801de66:	f7ff f8a7 	bl	801cfb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801de6a:	4643      	mov	r3, r8
 801de6c:	aa02      	add	r2, sp, #8
 801de6e:	4629      	mov	r1, r5
 801de70:	4638      	mov	r0, r7
 801de72:	f7ff f987 	bl	801d184 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801de76:	88a2      	ldrh	r2, [r4, #4]
 801de78:	8823      	ldrh	r3, [r4, #0]
 801de7a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801de7e:	4413      	add	r3, r2
 801de80:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801de84:	440a      	add	r2, r1
 801de86:	b29b      	uxth	r3, r3
 801de88:	b292      	uxth	r2, r2
 801de8a:	b211      	sxth	r1, r2
 801de8c:	b218      	sxth	r0, r3
 801de8e:	4288      	cmp	r0, r1
 801de90:	dd12      	ble.n	801deb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801de92:	1a9b      	subs	r3, r3, r2
 801de94:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801de98:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801de9c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dea0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dea4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dea8:	23ff      	movs	r3, #255	@ 0xff
 801deaa:	464a      	mov	r2, r9
 801deac:	a902      	add	r1, sp, #8
 801deae:	4628      	mov	r0, r5
 801deb0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801deb4:	f7ff f880 	bl	801cfb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801deb8:	88e2      	ldrh	r2, [r4, #6]
 801deba:	8863      	ldrh	r3, [r4, #2]
 801debc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dec0:	4413      	add	r3, r2
 801dec2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dec6:	440a      	add	r2, r1
 801dec8:	b29b      	uxth	r3, r3
 801deca:	b292      	uxth	r2, r2
 801decc:	b211      	sxth	r1, r2
 801dece:	b218      	sxth	r0, r3
 801ded0:	4288      	cmp	r0, r1
 801ded2:	dd80      	ble.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801ded4:	1a9b      	subs	r3, r3, r2
 801ded6:	f9b4 6000 	ldrsh.w	r6, [r4]
 801deda:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dede:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dee2:	f8ad 6018 	strh.w	r6, [sp, #24]
 801dee6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801deea:	f8ad 001c 	strh.w	r0, [sp, #28]
 801deee:	23ff      	movs	r3, #255	@ 0xff
 801def0:	464a      	mov	r2, r9
 801def2:	e761      	b.n	801ddb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801def4:	4633      	mov	r3, r6
 801def6:	4622      	mov	r2, r4
 801def8:	a902      	add	r1, sp, #8
 801defa:	4628      	mov	r0, r5
 801defc:	f7ff f9b2 	bl	801d264 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801df00:	e769      	b.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df02:	e9cd 4600 	strd	r4, r6, [sp]
 801df06:	ab02      	add	r3, sp, #8
 801df08:	4652      	mov	r2, sl
 801df0a:	4629      	mov	r1, r5
 801df0c:	4638      	mov	r0, r7
 801df0e:	f7ff fd89 	bl	801da24 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801df12:	e760      	b.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df14:	4640      	mov	r0, r8
 801df16:	f7f9 ffef 	bl	8017ef8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801df1a:	b948      	cbnz	r0, 801df30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801df1c:	683b      	ldr	r3, [r7, #0]
 801df1e:	e9cd 6000 	strd	r6, r0, [sp]
 801df22:	aa02      	add	r2, sp, #8
 801df24:	68de      	ldr	r6, [r3, #12]
 801df26:	4629      	mov	r1, r5
 801df28:	4623      	mov	r3, r4
 801df2a:	4638      	mov	r0, r7
 801df2c:	47b0      	blx	r6
 801df2e:	e752      	b.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df30:	f10d 0918 	add.w	r9, sp, #24
 801df34:	4641      	mov	r1, r8
 801df36:	4648      	mov	r0, r9
 801df38:	f7f9 ff8c 	bl	8017e54 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801df3c:	e899 0003 	ldmia.w	r9, {r0, r1}
 801df40:	f10d 0810 	add.w	r8, sp, #16
 801df44:	e888 0003 	stmia.w	r8, {r0, r1}
 801df48:	4640      	mov	r0, r8
 801df4a:	4621      	mov	r1, r4
 801df4c:	f7ef fefe 	bl	800dd4c <_ZN8touchgfx4RectaNERKS0_>
 801df50:	4640      	mov	r0, r8
 801df52:	f7ef ff3e 	bl	800ddd2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801df56:	b138      	cbz	r0, 801df68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801df58:	9600      	str	r6, [sp, #0]
 801df5a:	4623      	mov	r3, r4
 801df5c:	aa02      	add	r2, sp, #8
 801df5e:	4651      	mov	r1, sl
 801df60:	4628      	mov	r0, r5
 801df62:	f7ff fdbd 	bl	801dae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801df66:	e736      	b.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801df68:	683b      	ldr	r3, [r7, #0]
 801df6a:	e9cd 6000 	strd	r6, r0, [sp]
 801df6e:	aa02      	add	r2, sp, #8
 801df70:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801df74:	4629      	mov	r1, r5
 801df76:	4643      	mov	r3, r8
 801df78:	4638      	mov	r0, r7
 801df7a:	47d8      	blx	fp
 801df7c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801df80:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801df84:	4293      	cmp	r3, r2
 801df86:	dd13      	ble.n	801dfb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801df88:	f9b4 0000 	ldrsh.w	r0, [r4]
 801df8c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801df90:	f8ad 0018 	strh.w	r0, [sp, #24]
 801df94:	1a9b      	subs	r3, r3, r2
 801df96:	f8ad 201a 	strh.w	r2, [sp, #26]
 801df9a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801df9e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dfa2:	9600      	str	r6, [sp, #0]
 801dfa4:	464b      	mov	r3, r9
 801dfa6:	aa02      	add	r2, sp, #8
 801dfa8:	4651      	mov	r1, sl
 801dfaa:	4628      	mov	r0, r5
 801dfac:	f7ff fd98 	bl	801dae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dfb0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dfb4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dfb8:	4293      	cmp	r3, r2
 801dfba:	dd13      	ble.n	801dfe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801dfbc:	1a9b      	subs	r3, r3, r2
 801dfbe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dfc2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dfc6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dfca:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dfce:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dfd2:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dfd6:	9600      	str	r6, [sp, #0]
 801dfd8:	464b      	mov	r3, r9
 801dfda:	aa02      	add	r2, sp, #8
 801dfdc:	4651      	mov	r1, sl
 801dfde:	4628      	mov	r0, r5
 801dfe0:	f7ff fd7e 	bl	801dae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dfe4:	88a2      	ldrh	r2, [r4, #4]
 801dfe6:	8823      	ldrh	r3, [r4, #0]
 801dfe8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dfec:	4413      	add	r3, r2
 801dfee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dff2:	440a      	add	r2, r1
 801dff4:	b29b      	uxth	r3, r3
 801dff6:	b292      	uxth	r2, r2
 801dff8:	b211      	sxth	r1, r2
 801dffa:	b218      	sxth	r0, r3
 801dffc:	4288      	cmp	r0, r1
 801dffe:	dd13      	ble.n	801e028 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801e000:	1a9b      	subs	r3, r3, r2
 801e002:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e006:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e00a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e00e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e012:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e016:	9600      	str	r6, [sp, #0]
 801e018:	464b      	mov	r3, r9
 801e01a:	aa02      	add	r2, sp, #8
 801e01c:	4651      	mov	r1, sl
 801e01e:	4628      	mov	r0, r5
 801e020:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e024:	f7ff fd5c 	bl	801dae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e028:	88e2      	ldrh	r2, [r4, #6]
 801e02a:	8863      	ldrh	r3, [r4, #2]
 801e02c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e030:	4413      	add	r3, r2
 801e032:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e036:	440a      	add	r2, r1
 801e038:	b29b      	uxth	r3, r3
 801e03a:	b292      	uxth	r2, r2
 801e03c:	b211      	sxth	r1, r2
 801e03e:	b218      	sxth	r0, r3
 801e040:	4288      	cmp	r0, r1
 801e042:	f77f aec8 	ble.w	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e046:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e04a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e04e:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e052:	1a9b      	subs	r3, r3, r2
 801e054:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e058:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e05c:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e060:	9600      	str	r6, [sp, #0]
 801e062:	464b      	mov	r3, r9
 801e064:	e77a      	b.n	801df5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801e066:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801e06a:	2800      	cmp	r0, #0
 801e06c:	f43f aeb3 	beq.w	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e070:	6803      	ldr	r3, [r0, #0]
 801e072:	9600      	str	r6, [sp, #0]
 801e074:	68de      	ldr	r6, [r3, #12]
 801e076:	4623      	mov	r3, r4
 801e078:	aa02      	add	r2, sp, #8
 801e07a:	4629      	mov	r1, r5
 801e07c:	47b0      	blx	r6
 801e07e:	e6aa      	b.n	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e080:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801e084:	2800      	cmp	r0, #0
 801e086:	f43f aea6 	beq.w	801ddd6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801e08a:	6803      	ldr	r3, [r0, #0]
 801e08c:	9600      	str	r6, [sp, #0]
 801e08e:	689e      	ldr	r6, [r3, #8]
 801e090:	e7f1      	b.n	801e076 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801e092:	bf00      	nop
 801e094:	20013f60 	.word	0x20013f60

0801e098 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e098:	b180      	cbz	r0, 801e0bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e09a:	2903      	cmp	r1, #3
 801e09c:	d81c      	bhi.n	801e0d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e09e:	e8df f001 	tbb	[pc, r1]
 801e0a2:	1d02      	.short	0x1d02
 801e0a4:	1f08      	.short	0x1f08
 801e0a6:	4b10      	ldr	r3, [pc, #64]	@ (801e0e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e0a8:	8818      	ldrh	r0, [r3, #0]
 801e0aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e0ae:	4240      	negs	r0, r0
 801e0b0:	4770      	bx	lr
 801e0b2:	4b0d      	ldr	r3, [pc, #52]	@ (801e0e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e0b4:	8818      	ldrh	r0, [r3, #0]
 801e0b6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e0ba:	4770      	bx	lr
 801e0bc:	2903      	cmp	r1, #3
 801e0be:	d80b      	bhi.n	801e0d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e0c0:	a301      	add	r3, pc, #4	@ (adr r3, 801e0c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e0c2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e0c6:	bf00      	nop
 801e0c8:	0801e0dd 	.word	0x0801e0dd
 801e0cc:	0801e0b3 	.word	0x0801e0b3
 801e0d0:	0801e0e1 	.word	0x0801e0e1
 801e0d4:	0801e0a7 	.word	0x0801e0a7
 801e0d8:	2000      	movs	r0, #0
 801e0da:	4770      	bx	lr
 801e0dc:	2001      	movs	r0, #1
 801e0de:	4770      	bx	lr
 801e0e0:	f04f 30ff 	mov.w	r0, #4294967295
 801e0e4:	4770      	bx	lr
 801e0e6:	bf00      	nop
 801e0e8:	20013f5a 	.word	0x20013f5a

0801e0ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e0ec:	b180      	cbz	r0, 801e110 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e0ee:	2903      	cmp	r1, #3
 801e0f0:	d81c      	bhi.n	801e12c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e0f2:	e8df f001 	tbb	[pc, r1]
 801e0f6:	021d      	.short	0x021d
 801e0f8:	071f      	.short	0x071f
 801e0fa:	4b10      	ldr	r3, [pc, #64]	@ (801e13c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e0fc:	8818      	ldrh	r0, [r3, #0]
 801e0fe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e102:	4770      	bx	lr
 801e104:	4b0d      	ldr	r3, [pc, #52]	@ (801e13c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e106:	8818      	ldrh	r0, [r3, #0]
 801e108:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e10c:	4240      	negs	r0, r0
 801e10e:	4770      	bx	lr
 801e110:	2903      	cmp	r1, #3
 801e112:	d80b      	bhi.n	801e12c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e114:	a301      	add	r3, pc, #4	@ (adr r3, 801e11c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801e116:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e11a:	bf00      	nop
 801e11c:	0801e0fb 	.word	0x0801e0fb
 801e120:	0801e135 	.word	0x0801e135
 801e124:	0801e105 	.word	0x0801e105
 801e128:	0801e131 	.word	0x0801e131
 801e12c:	2000      	movs	r0, #0
 801e12e:	4770      	bx	lr
 801e130:	2001      	movs	r0, #1
 801e132:	4770      	bx	lr
 801e134:	f04f 30ff 	mov.w	r0, #4294967295
 801e138:	4770      	bx	lr
 801e13a:	bf00      	nop
 801e13c:	20013f5a 	.word	0x20013f5a

0801e140 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801e140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e144:	b099      	sub	sp, #100	@ 0x64
 801e146:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e148:	a914      	add	r1, sp, #80	@ 0x50
 801e14a:	e881 000c 	stmia.w	r1, {r2, r3}
 801e14e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801e152:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801e156:	f891 900d 	ldrb.w	r9, [r1, #13]
 801e15a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e15c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801e160:	9310      	str	r3, [sp, #64]	@ 0x40
 801e162:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801e166:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801e16a:	930c      	str	r3, [sp, #48]	@ 0x30
 801e16c:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801e170:	798f      	ldrb	r7, [r1, #6]
 801e172:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801e176:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801e17a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801e17e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801e182:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801e186:	431f      	orrs	r7, r3
 801e188:	f000 8195 	beq.w	801e4b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e18c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801e190:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801e194:	f891 9007 	ldrb.w	r9, [r1, #7]
 801e198:	ea59 0903 	orrs.w	r9, r9, r3
 801e19c:	f000 818b 	beq.w	801e4b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1a0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801e1a4:	b29b      	uxth	r3, r3
 801e1a6:	2d00      	cmp	r5, #0
 801e1a8:	f000 812e 	beq.w	801e408 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801e1ac:	1aed      	subs	r5, r5, r3
 801e1ae:	b2ad      	uxth	r5, r5
 801e1b0:	042b      	lsls	r3, r5, #16
 801e1b2:	d502      	bpl.n	801e1ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e1b4:	1b64      	subs	r4, r4, r5
 801e1b6:	b224      	sxth	r4, r4
 801e1b8:	2500      	movs	r5, #0
 801e1ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 801e1be:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801e1c2:	428c      	cmp	r4, r1
 801e1c4:	b28b      	uxth	r3, r1
 801e1c6:	bfbf      	itttt	lt
 801e1c8:	18ed      	addlt	r5, r5, r3
 801e1ca:	1b2c      	sublt	r4, r5, r4
 801e1cc:	b2a5      	uxthlt	r5, r4
 801e1ce:	460c      	movlt	r4, r1
 801e1d0:	8891      	ldrh	r1, [r2, #4]
 801e1d2:	440b      	add	r3, r1
 801e1d4:	b21b      	sxth	r3, r3
 801e1d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e1d8:	88d3      	ldrh	r3, [r2, #6]
 801e1da:	8852      	ldrh	r2, [r2, #2]
 801e1dc:	4413      	add	r3, r2
 801e1de:	b21b      	sxth	r3, r3
 801e1e0:	930d      	str	r3, [sp, #52]	@ 0x34
 801e1e2:	4bbe      	ldr	r3, [pc, #760]	@ (801e4dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801e1e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e1e6:	f893 b000 	ldrb.w	fp, [r3]
 801e1ea:	f10b 3cff 	add.w	ip, fp, #4294967295
 801e1ee:	f1dc 0300 	rsbs	r3, ip, #0
 801e1f2:	eb43 030c 	adc.w	r3, r3, ip
 801e1f6:	930e      	str	r3, [sp, #56]	@ 0x38
 801e1f8:	4621      	mov	r1, r4
 801e1fa:	4653      	mov	r3, sl
 801e1fc:	a814      	add	r0, sp, #80	@ 0x50
 801e1fe:	f7f5 fe0e 	bl	8013e1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801e202:	4621      	mov	r1, r4
 801e204:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801e208:	4653      	mov	r3, sl
 801e20a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e20c:	a814      	add	r0, sp, #80	@ 0x50
 801e20e:	f7f5 fe23 	bl	8013e58 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801e212:	a918      	add	r1, sp, #96	@ 0x60
 801e214:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801e218:	a817      	add	r0, sp, #92	@ 0x5c
 801e21a:	f7f5 ff49 	bl	80140b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801e21e:	f1ba 0f00 	cmp.w	sl, #0
 801e222:	f040 80f4 	bne.w	801e40e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801e226:	f1bb 0f01 	cmp.w	fp, #1
 801e22a:	f040 80f8 	bne.w	801e41e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801e22e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e230:	2b00      	cmp	r3, #0
 801e232:	f040 8145 	bne.w	801e4c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801e236:	b2ba      	uxth	r2, r7
 801e238:	b905      	cbnz	r5, 801e23c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801e23a:	b16e      	cbz	r6, 801e258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801e23c:	fb06 5302 	mla	r3, r6, r2, r5
 801e240:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801e242:	fb08 f303 	mul.w	r3, r8, r3
 801e246:	4631      	mov	r1, r6
 801e248:	f003 0607 	and.w	r6, r3, #7
 801e24c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801e250:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e252:	eba9 0301 	sub.w	r3, r9, r1
 801e256:	930a      	str	r3, [sp, #40]	@ 0x28
 801e258:	4651      	mov	r1, sl
 801e25a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e25c:	f7ff ff1c 	bl	801e098 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e260:	4681      	mov	r9, r0
 801e262:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e264:	f7ff ff42 	bl	801e0ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e268:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e26a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e26c:	eba3 0a01 	sub.w	sl, r3, r1
 801e270:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e272:	459a      	cmp	sl, r3
 801e274:	bfa8      	it	ge
 801e276:	469a      	movge	sl, r3
 801e278:	f1ba 0f00 	cmp.w	sl, #0
 801e27c:	4683      	mov	fp, r0
 801e27e:	f340 811a 	ble.w	801e4b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e282:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e284:	1b64      	subs	r4, r4, r5
 801e286:	1b1c      	subs	r4, r3, r4
 801e288:	42bc      	cmp	r4, r7
 801e28a:	bfd4      	ite	le
 801e28c:	ebc5 0504 	rsble	r5, r5, r4
 801e290:	ebc5 0507 	rsbgt	r5, r5, r7
 801e294:	2d00      	cmp	r5, #0
 801e296:	f340 810e 	ble.w	801e4b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e29a:	1b52      	subs	r2, r2, r5
 801e29c:	fb08 f302 	mul.w	r3, r8, r2
 801e2a0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e2a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e2a4:	2b00      	cmp	r3, #0
 801e2a6:	f040 8116 	bne.w	801e4d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e2aa:	4b8d      	ldr	r3, [pc, #564]	@ (801e4e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e2ac:	6818      	ldr	r0, [r3, #0]
 801e2ae:	6803      	ldr	r3, [r0, #0]
 801e2b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e2b2:	4798      	blx	r3
 801e2b4:	2301      	movs	r3, #1
 801e2b6:	fa03 f308 	lsl.w	r3, r3, r8
 801e2ba:	4a8a      	ldr	r2, [pc, #552]	@ (801e4e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e2bc:	3b01      	subs	r3, #1
 801e2be:	b2db      	uxtb	r3, r3
 801e2c0:	8811      	ldrh	r1, [r2, #0]
 801e2c2:	930e      	str	r3, [sp, #56]	@ 0x38
 801e2c4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801e2c8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801e2cc:	fb01 2303 	mla	r3, r1, r3, r2
 801e2d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e2d4:	930a      	str	r3, [sp, #40]	@ 0x28
 801e2d6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e2d8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e2dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e2de:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e2e0:	0a19      	lsrs	r1, r3, #8
 801e2e2:	b2cb      	uxtb	r3, r1
 801e2e4:	9312      	str	r3, [sp, #72]	@ 0x48
 801e2e6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e2e8:	b2db      	uxtb	r3, r3
 801e2ea:	9311      	str	r3, [sp, #68]	@ 0x44
 801e2ec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e2ee:	095a      	lsrs	r2, r3, #5
 801e2f0:	4b7d      	ldr	r3, [pc, #500]	@ (801e4e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e2f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e2f6:	400b      	ands	r3, r1
 801e2f8:	4313      	orrs	r3, r2
 801e2fa:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801e2fc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e300:	4313      	orrs	r3, r2
 801e302:	b29b      	uxth	r3, r3
 801e304:	9310      	str	r3, [sp, #64]	@ 0x40
 801e306:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e308:	781a      	ldrb	r2, [r3, #0]
 801e30a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e30e:	4132      	asrs	r2, r6
 801e310:	fb05 b919 	mls	r9, r5, r9, fp
 801e314:	fb03 fb05 	mul.w	fp, r3, r5
 801e318:	b2d2      	uxtb	r2, r2
 801e31a:	930d      	str	r3, [sp, #52]	@ 0x34
 801e31c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e320:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e324:	f0c0 80f5 	bcc.w	801e512 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e328:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801e32c:	46ae      	mov	lr, r5
 801e32e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e332:	f0c0 80dd 	bcc.w	801e4f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e336:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e338:	4013      	ands	r3, r2
 801e33a:	d055      	beq.n	801e3e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e33c:	20ff      	movs	r0, #255	@ 0xff
 801e33e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e340:	fb90 f1f1 	sdiv	r1, r0, r1
 801e344:	434b      	muls	r3, r1
 801e346:	2bfe      	cmp	r3, #254	@ 0xfe
 801e348:	dd03      	ble.n	801e352 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e34a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e34c:	4281      	cmp	r1, r0
 801e34e:	f000 80cd 	beq.w	801e4ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e352:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e354:	f8bc 4000 	ldrh.w	r4, [ip]
 801e358:	fb11 f303 	smulbb	r3, r1, r3
 801e35c:	b29b      	uxth	r3, r3
 801e35e:	1c59      	adds	r1, r3, #1
 801e360:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e364:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e368:	b29f      	uxth	r7, r3
 801e36a:	43db      	mvns	r3, r3
 801e36c:	b2db      	uxtb	r3, r3
 801e36e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e370:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e372:	1220      	asrs	r0, r4, #8
 801e374:	fb13 f907 	smulbb	r9, r3, r7
 801e378:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e37c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e37e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e382:	fb00 9003 	mla	r0, r0, r3, r9
 801e386:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e388:	10e1      	asrs	r1, r4, #3
 801e38a:	fb13 f907 	smulbb	r9, r3, r7
 801e38e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e392:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e394:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e398:	fb01 9103 	mla	r1, r1, r3, r9
 801e39c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e39e:	00e4      	lsls	r4, r4, #3
 801e3a0:	fb13 f707 	smulbb	r7, r3, r7
 801e3a4:	b2e4      	uxtb	r4, r4
 801e3a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e3a8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e3ac:	fb04 7403 	mla	r4, r4, r3, r7
 801e3b0:	b280      	uxth	r0, r0
 801e3b2:	b2a4      	uxth	r4, r4
 801e3b4:	1c43      	adds	r3, r0, #1
 801e3b6:	f104 0901 	add.w	r9, r4, #1
 801e3ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e3be:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e3c2:	b289      	uxth	r1, r1
 801e3c4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e3c8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e3cc:	ea49 0000 	orr.w	r0, r9, r0
 801e3d0:	f101 0901 	add.w	r9, r1, #1
 801e3d4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e3d8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e3dc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e3e0:	ea40 0009 	orr.w	r0, r0, r9
 801e3e4:	f8ac 0000 	strh.w	r0, [ip]
 801e3e8:	4446      	add	r6, r8
 801e3ea:	b2b6      	uxth	r6, r6
 801e3ec:	2e07      	cmp	r6, #7
 801e3ee:	bf81      	itttt	hi
 801e3f0:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801e3f2:	785a      	ldrbhi	r2, [r3, #1]
 801e3f4:	3301      	addhi	r3, #1
 801e3f6:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801e3f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e3fa:	bf9a      	itte	ls
 801e3fc:	fa42 f208 	asrls.w	r2, r2, r8
 801e400:	b2d2      	uxtbls	r2, r2
 801e402:	2600      	movhi	r6, #0
 801e404:	449c      	add	ip, r3
 801e406:	e792      	b.n	801e32e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e408:	441c      	add	r4, r3
 801e40a:	b224      	sxth	r4, r4
 801e40c:	e6d5      	b.n	801e1ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e40e:	f1ba 0f01 	cmp.w	sl, #1
 801e412:	f47f af0c 	bne.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e416:	f1bb 0f01 	cmp.w	fp, #1
 801e41a:	f47f af08 	bne.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e41e:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801e4e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e422:	f8db 0000 	ldr.w	r0, [fp]
 801e426:	6803      	ldr	r3, [r0, #0]
 801e428:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801e42a:	4798      	blx	r3
 801e42c:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801e430:	465a      	mov	r2, fp
 801e432:	d006      	beq.n	801e442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e434:	f1b8 0f04 	cmp.w	r8, #4
 801e438:	d140      	bne.n	801e4bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e43a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e43c:	3300      	adds	r3, #0
 801e43e:	bf18      	it	ne
 801e440:	2301      	movne	r3, #1
 801e442:	0580      	lsls	r0, r0, #22
 801e444:	d56e      	bpl.n	801e524 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e446:	f1b8 0f08 	cmp.w	r8, #8
 801e44a:	d16b      	bne.n	801e524 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e44c:	2b00      	cmp	r3, #0
 801e44e:	bf0c      	ite	eq
 801e450:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801e454:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801e458:	2d00      	cmp	r5, #0
 801e45a:	f47f aee8 	bne.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e45e:	2e00      	cmp	r6, #0
 801e460:	f47f aee5 	bne.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e464:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e466:	19e3      	adds	r3, r4, r7
 801e468:	4283      	cmp	r3, r0
 801e46a:	f73f aee0 	bgt.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e46e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e470:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e472:	444b      	add	r3, r9
 801e474:	4283      	cmp	r3, r0
 801e476:	f73f aeda 	bgt.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e47a:	6810      	ldr	r0, [r2, #0]
 801e47c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801e480:	6804      	ldr	r4, [r0, #0]
 801e482:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801e486:	b2bf      	uxth	r7, r7
 801e488:	f1b8 0f08 	cmp.w	r8, #8
 801e48c:	f04f 0500 	mov.w	r5, #0
 801e490:	bf18      	it	ne
 801e492:	3701      	addne	r7, #1
 801e494:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e498:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e49a:	9104      	str	r1, [sp, #16]
 801e49c:	bf18      	it	ne
 801e49e:	f027 0701 	bicne.w	r7, r7, #1
 801e4a2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801e4a4:	bf18      	it	ne
 801e4a6:	b2bf      	uxthne	r7, r7
 801e4a8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e4ac:	e9cd 7900 	strd	r7, r9, [sp]
 801e4b0:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801e4b2:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801e4b4:	47a0      	blx	r4
 801e4b6:	b019      	add	sp, #100	@ 0x64
 801e4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4bc:	2300      	movs	r3, #0
 801e4be:	e7c0      	b.n	801e442 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e4c0:	2208      	movs	r2, #8
 801e4c2:	fb92 f3f8 	sdiv	r3, r2, r8
 801e4c6:	1e5a      	subs	r2, r3, #1
 801e4c8:	443a      	add	r2, r7
 801e4ca:	fb92 f2f3 	sdiv	r2, r2, r3
 801e4ce:	fb12 f203 	smulbb	r2, r2, r3
 801e4d2:	b292      	uxth	r2, r2
 801e4d4:	e6b0      	b.n	801e238 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e4d6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e4d8:	e6ec      	b.n	801e2b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e4da:	bf00      	nop
 801e4dc:	20013f58 	.word	0x20013f58
 801e4e0:	20013f60 	.word	0x20013f60
 801e4e4:	20013f5a 	.word	0x20013f5a
 801e4e8:	00fff800 	.word	0x00fff800
 801e4ec:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801e4ee:	e779      	b.n	801e3e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e4f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e4f2:	b153      	cbz	r3, 801e50a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e4f4:	441e      	add	r6, r3
 801e4f6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e4f8:	b2b6      	uxth	r6, r6
 801e4fa:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e4fe:	f006 0607 	and.w	r6, r6, #7
 801e502:	781a      	ldrb	r2, [r3, #0]
 801e504:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e506:	4132      	asrs	r2, r6
 801e508:	b2d2      	uxtb	r2, r2
 801e50a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e50c:	445b      	add	r3, fp
 801e50e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e510:	e706      	b.n	801e320 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e512:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e514:	2b00      	cmp	r3, #0
 801e516:	d1ce      	bne.n	801e4b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e518:	4b05      	ldr	r3, [pc, #20]	@ (801e530 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e51a:	6818      	ldr	r0, [r3, #0]
 801e51c:	6803      	ldr	r3, [r0, #0]
 801e51e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e520:	4798      	blx	r3
 801e522:	e7c8      	b.n	801e4b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e524:	2b00      	cmp	r3, #0
 801e526:	f43f ae82 	beq.w	801e22e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e52a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801e52e:	e793      	b.n	801e458 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e530:	20013f60 	.word	0x20013f60

0801e534 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e534:	b538      	push	{r3, r4, r5, lr}
 801e536:	4c15      	ldr	r4, [pc, #84]	@ (801e58c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e538:	7823      	ldrb	r3, [r4, #0]
 801e53a:	f3bf 8f5b 	dmb	ish
 801e53e:	07da      	lsls	r2, r3, #31
 801e540:	4605      	mov	r5, r0
 801e542:	d40b      	bmi.n	801e55c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e544:	4620      	mov	r0, r4
 801e546:	f008 fc67 	bl	8026e18 <__cxa_guard_acquire>
 801e54a:	b138      	cbz	r0, 801e55c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e54c:	4620      	mov	r0, r4
 801e54e:	f008 fc6f 	bl	8026e30 <__cxa_guard_release>
 801e552:	4a0f      	ldr	r2, [pc, #60]	@ (801e590 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e554:	490f      	ldr	r1, [pc, #60]	@ (801e594 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e556:	4810      	ldr	r0, [pc, #64]	@ (801e598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e558:	f008 fc57 	bl	8026e0a <__aeabi_atexit>
 801e55c:	4c0f      	ldr	r4, [pc, #60]	@ (801e59c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e55e:	7823      	ldrb	r3, [r4, #0]
 801e560:	f3bf 8f5b 	dmb	ish
 801e564:	07db      	lsls	r3, r3, #31
 801e566:	d40b      	bmi.n	801e580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e568:	4620      	mov	r0, r4
 801e56a:	f008 fc55 	bl	8026e18 <__cxa_guard_acquire>
 801e56e:	b138      	cbz	r0, 801e580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e570:	4620      	mov	r0, r4
 801e572:	f008 fc5d 	bl	8026e30 <__cxa_guard_release>
 801e576:	4a06      	ldr	r2, [pc, #24]	@ (801e590 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e578:	4909      	ldr	r1, [pc, #36]	@ (801e5a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e57a:	480a      	ldr	r0, [pc, #40]	@ (801e5a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e57c:	f008 fc45 	bl	8026e0a <__aeabi_atexit>
 801e580:	4b05      	ldr	r3, [pc, #20]	@ (801e598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e582:	616b      	str	r3, [r5, #20]
 801e584:	4b07      	ldr	r3, [pc, #28]	@ (801e5a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e586:	61ab      	str	r3, [r5, #24]
 801e588:	bd38      	pop	{r3, r4, r5, pc}
 801e58a:	bf00      	nop
 801e58c:	20014044 	.word	0x20014044
 801e590:	20000000 	.word	0x20000000
 801e594:	0801a6e9 	.word	0x0801a6e9
 801e598:	200000d0 	.word	0x200000d0
 801e59c:	20014048 	.word	0x20014048
 801e5a0:	0801a6e7 	.word	0x0801a6e7
 801e5a4:	200000d4 	.word	0x200000d4

0801e5a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e5a8:	b538      	push	{r3, r4, r5, lr}
 801e5aa:	4c15      	ldr	r4, [pc, #84]	@ (801e600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e5ac:	7823      	ldrb	r3, [r4, #0]
 801e5ae:	f3bf 8f5b 	dmb	ish
 801e5b2:	07da      	lsls	r2, r3, #31
 801e5b4:	4605      	mov	r5, r0
 801e5b6:	d40b      	bmi.n	801e5d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e5b8:	4620      	mov	r0, r4
 801e5ba:	f008 fc2d 	bl	8026e18 <__cxa_guard_acquire>
 801e5be:	b138      	cbz	r0, 801e5d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e5c0:	4620      	mov	r0, r4
 801e5c2:	f008 fc35 	bl	8026e30 <__cxa_guard_release>
 801e5c6:	4a0f      	ldr	r2, [pc, #60]	@ (801e604 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e5c8:	490f      	ldr	r1, [pc, #60]	@ (801e608 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e5ca:	4810      	ldr	r0, [pc, #64]	@ (801e60c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e5cc:	f008 fc1d 	bl	8026e0a <__aeabi_atexit>
 801e5d0:	4c0f      	ldr	r4, [pc, #60]	@ (801e610 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e5d2:	7823      	ldrb	r3, [r4, #0]
 801e5d4:	f3bf 8f5b 	dmb	ish
 801e5d8:	07db      	lsls	r3, r3, #31
 801e5da:	d40b      	bmi.n	801e5f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e5dc:	4620      	mov	r0, r4
 801e5de:	f008 fc1b 	bl	8026e18 <__cxa_guard_acquire>
 801e5e2:	b138      	cbz	r0, 801e5f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e5e4:	4620      	mov	r0, r4
 801e5e6:	f008 fc23 	bl	8026e30 <__cxa_guard_release>
 801e5ea:	4a06      	ldr	r2, [pc, #24]	@ (801e604 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e5ec:	4909      	ldr	r1, [pc, #36]	@ (801e614 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e5ee:	480a      	ldr	r0, [pc, #40]	@ (801e618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e5f0:	f008 fc0b 	bl	8026e0a <__aeabi_atexit>
 801e5f4:	4b05      	ldr	r3, [pc, #20]	@ (801e60c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e5f6:	60eb      	str	r3, [r5, #12]
 801e5f8:	4b07      	ldr	r3, [pc, #28]	@ (801e618 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e5fa:	612b      	str	r3, [r5, #16]
 801e5fc:	bd38      	pop	{r3, r4, r5, pc}
 801e5fe:	bf00      	nop
 801e600:	2001401c 	.word	0x2001401c
 801e604:	20000000 	.word	0x20000000
 801e608:	0801a6ed 	.word	0x0801a6ed
 801e60c:	200000a8 	.word	0x200000a8
 801e610:	20014020 	.word	0x20014020
 801e614:	0801a6eb 	.word	0x0801a6eb
 801e618:	200000ac 	.word	0x200000ac

0801e61c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e61c:	b510      	push	{r4, lr}
 801e61e:	4604      	mov	r4, r0
 801e620:	f7ff ff88 	bl	801e534 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e624:	4620      	mov	r0, r4
 801e626:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e62a:	f7ff bfbd 	b.w	801e5a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e630 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e630:	b538      	push	{r3, r4, r5, lr}
 801e632:	4c15      	ldr	r4, [pc, #84]	@ (801e688 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e634:	7823      	ldrb	r3, [r4, #0]
 801e636:	f3bf 8f5b 	dmb	ish
 801e63a:	07da      	lsls	r2, r3, #31
 801e63c:	4605      	mov	r5, r0
 801e63e:	d40b      	bmi.n	801e658 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e640:	4620      	mov	r0, r4
 801e642:	f008 fbe9 	bl	8026e18 <__cxa_guard_acquire>
 801e646:	b138      	cbz	r0, 801e658 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e648:	4620      	mov	r0, r4
 801e64a:	f008 fbf1 	bl	8026e30 <__cxa_guard_release>
 801e64e:	4a0f      	ldr	r2, [pc, #60]	@ (801e68c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e650:	490f      	ldr	r1, [pc, #60]	@ (801e690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e652:	4810      	ldr	r0, [pc, #64]	@ (801e694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e654:	f008 fbd9 	bl	8026e0a <__aeabi_atexit>
 801e658:	4c0f      	ldr	r4, [pc, #60]	@ (801e698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e65a:	7823      	ldrb	r3, [r4, #0]
 801e65c:	f3bf 8f5b 	dmb	ish
 801e660:	07db      	lsls	r3, r3, #31
 801e662:	d40b      	bmi.n	801e67c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e664:	4620      	mov	r0, r4
 801e666:	f008 fbd7 	bl	8026e18 <__cxa_guard_acquire>
 801e66a:	b138      	cbz	r0, 801e67c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e66c:	4620      	mov	r0, r4
 801e66e:	f008 fbdf 	bl	8026e30 <__cxa_guard_release>
 801e672:	4a06      	ldr	r2, [pc, #24]	@ (801e68c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e674:	4909      	ldr	r1, [pc, #36]	@ (801e69c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e676:	480a      	ldr	r0, [pc, #40]	@ (801e6a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e678:	f008 fbc7 	bl	8026e0a <__aeabi_atexit>
 801e67c:	4b05      	ldr	r3, [pc, #20]	@ (801e694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e67e:	626b      	str	r3, [r5, #36]	@ 0x24
 801e680:	4b07      	ldr	r3, [pc, #28]	@ (801e6a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e682:	62ab      	str	r3, [r5, #40]	@ 0x28
 801e684:	bd38      	pop	{r3, r4, r5, pc}
 801e686:	bf00      	nop
 801e688:	2001404c 	.word	0x2001404c
 801e68c:	20000000 	.word	0x20000000
 801e690:	0801a6e1 	.word	0x0801a6e1
 801e694:	200000d8 	.word	0x200000d8
 801e698:	20014050 	.word	0x20014050
 801e69c:	0801a6df 	.word	0x0801a6df
 801e6a0:	200000dc 	.word	0x200000dc

0801e6a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e6a4:	b538      	push	{r3, r4, r5, lr}
 801e6a6:	4c15      	ldr	r4, [pc, #84]	@ (801e6fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e6a8:	7823      	ldrb	r3, [r4, #0]
 801e6aa:	f3bf 8f5b 	dmb	ish
 801e6ae:	07da      	lsls	r2, r3, #31
 801e6b0:	4605      	mov	r5, r0
 801e6b2:	d40b      	bmi.n	801e6cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e6b4:	4620      	mov	r0, r4
 801e6b6:	f008 fbaf 	bl	8026e18 <__cxa_guard_acquire>
 801e6ba:	b138      	cbz	r0, 801e6cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e6bc:	4620      	mov	r0, r4
 801e6be:	f008 fbb7 	bl	8026e30 <__cxa_guard_release>
 801e6c2:	4a0f      	ldr	r2, [pc, #60]	@ (801e700 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e6c4:	490f      	ldr	r1, [pc, #60]	@ (801e704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e6c6:	4810      	ldr	r0, [pc, #64]	@ (801e708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e6c8:	f008 fb9f 	bl	8026e0a <__aeabi_atexit>
 801e6cc:	4c0f      	ldr	r4, [pc, #60]	@ (801e70c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e6ce:	7823      	ldrb	r3, [r4, #0]
 801e6d0:	f3bf 8f5b 	dmb	ish
 801e6d4:	07db      	lsls	r3, r3, #31
 801e6d6:	d40b      	bmi.n	801e6f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e6d8:	4620      	mov	r0, r4
 801e6da:	f008 fb9d 	bl	8026e18 <__cxa_guard_acquire>
 801e6de:	b138      	cbz	r0, 801e6f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e6e0:	4620      	mov	r0, r4
 801e6e2:	f008 fba5 	bl	8026e30 <__cxa_guard_release>
 801e6e6:	4a06      	ldr	r2, [pc, #24]	@ (801e700 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e6e8:	4909      	ldr	r1, [pc, #36]	@ (801e710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e6ea:	480a      	ldr	r0, [pc, #40]	@ (801e714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e6ec:	f008 fb8d 	bl	8026e0a <__aeabi_atexit>
 801e6f0:	4b05      	ldr	r3, [pc, #20]	@ (801e708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e6f2:	61eb      	str	r3, [r5, #28]
 801e6f4:	4b07      	ldr	r3, [pc, #28]	@ (801e714 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e6f6:	622b      	str	r3, [r5, #32]
 801e6f8:	bd38      	pop	{r3, r4, r5, pc}
 801e6fa:	bf00      	nop
 801e6fc:	20014024 	.word	0x20014024
 801e700:	20000000 	.word	0x20000000
 801e704:	0801a6e5 	.word	0x0801a6e5
 801e708:	200000b0 	.word	0x200000b0
 801e70c:	20014028 	.word	0x20014028
 801e710:	0801a6e3 	.word	0x0801a6e3
 801e714:	200000b4 	.word	0x200000b4

0801e718 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e718:	b510      	push	{r4, lr}
 801e71a:	4604      	mov	r4, r0
 801e71c:	f7ff ff88 	bl	801e630 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e720:	4620      	mov	r0, r4
 801e722:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e726:	f7ff bfbd 	b.w	801e6a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e72c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e72c:	b538      	push	{r3, r4, r5, lr}
 801e72e:	4c15      	ldr	r4, [pc, #84]	@ (801e784 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e730:	7823      	ldrb	r3, [r4, #0]
 801e732:	f3bf 8f5b 	dmb	ish
 801e736:	07da      	lsls	r2, r3, #31
 801e738:	4605      	mov	r5, r0
 801e73a:	d40b      	bmi.n	801e754 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e73c:	4620      	mov	r0, r4
 801e73e:	f008 fb6b 	bl	8026e18 <__cxa_guard_acquire>
 801e742:	b138      	cbz	r0, 801e754 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e744:	4620      	mov	r0, r4
 801e746:	f008 fb73 	bl	8026e30 <__cxa_guard_release>
 801e74a:	4a0f      	ldr	r2, [pc, #60]	@ (801e788 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e74c:	490f      	ldr	r1, [pc, #60]	@ (801e78c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e74e:	4810      	ldr	r0, [pc, #64]	@ (801e790 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e750:	f008 fb5b 	bl	8026e0a <__aeabi_atexit>
 801e754:	4c0f      	ldr	r4, [pc, #60]	@ (801e794 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e756:	7823      	ldrb	r3, [r4, #0]
 801e758:	f3bf 8f5b 	dmb	ish
 801e75c:	07db      	lsls	r3, r3, #31
 801e75e:	d40b      	bmi.n	801e778 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e760:	4620      	mov	r0, r4
 801e762:	f008 fb59 	bl	8026e18 <__cxa_guard_acquire>
 801e766:	b138      	cbz	r0, 801e778 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e768:	4620      	mov	r0, r4
 801e76a:	f008 fb61 	bl	8026e30 <__cxa_guard_release>
 801e76e:	4a06      	ldr	r2, [pc, #24]	@ (801e788 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e770:	4909      	ldr	r1, [pc, #36]	@ (801e798 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e772:	480a      	ldr	r0, [pc, #40]	@ (801e79c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e774:	f008 fb49 	bl	8026e0a <__aeabi_atexit>
 801e778:	4b05      	ldr	r3, [pc, #20]	@ (801e790 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e77a:	636b      	str	r3, [r5, #52]	@ 0x34
 801e77c:	4b07      	ldr	r3, [pc, #28]	@ (801e79c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e77e:	63ab      	str	r3, [r5, #56]	@ 0x38
 801e780:	bd38      	pop	{r3, r4, r5, pc}
 801e782:	bf00      	nop
 801e784:	2001405c 	.word	0x2001405c
 801e788:	20000000 	.word	0x20000000
 801e78c:	0801a6d9 	.word	0x0801a6d9
 801e790:	200000e8 	.word	0x200000e8
 801e794:	20014060 	.word	0x20014060
 801e798:	0801a6d7 	.word	0x0801a6d7
 801e79c:	200000ec 	.word	0x200000ec

0801e7a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e7a0:	b538      	push	{r3, r4, r5, lr}
 801e7a2:	4c15      	ldr	r4, [pc, #84]	@ (801e7f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e7a4:	7823      	ldrb	r3, [r4, #0]
 801e7a6:	f3bf 8f5b 	dmb	ish
 801e7aa:	07da      	lsls	r2, r3, #31
 801e7ac:	4605      	mov	r5, r0
 801e7ae:	d40b      	bmi.n	801e7c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e7b0:	4620      	mov	r0, r4
 801e7b2:	f008 fb31 	bl	8026e18 <__cxa_guard_acquire>
 801e7b6:	b138      	cbz	r0, 801e7c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e7b8:	4620      	mov	r0, r4
 801e7ba:	f008 fb39 	bl	8026e30 <__cxa_guard_release>
 801e7be:	4a0f      	ldr	r2, [pc, #60]	@ (801e7fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e7c0:	490f      	ldr	r1, [pc, #60]	@ (801e800 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e7c2:	4810      	ldr	r0, [pc, #64]	@ (801e804 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e7c4:	f008 fb21 	bl	8026e0a <__aeabi_atexit>
 801e7c8:	4c0f      	ldr	r4, [pc, #60]	@ (801e808 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e7ca:	7823      	ldrb	r3, [r4, #0]
 801e7cc:	f3bf 8f5b 	dmb	ish
 801e7d0:	07db      	lsls	r3, r3, #31
 801e7d2:	d40b      	bmi.n	801e7ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e7d4:	4620      	mov	r0, r4
 801e7d6:	f008 fb1f 	bl	8026e18 <__cxa_guard_acquire>
 801e7da:	b138      	cbz	r0, 801e7ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e7dc:	4620      	mov	r0, r4
 801e7de:	f008 fb27 	bl	8026e30 <__cxa_guard_release>
 801e7e2:	4a06      	ldr	r2, [pc, #24]	@ (801e7fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e7e4:	4909      	ldr	r1, [pc, #36]	@ (801e80c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e7e6:	480a      	ldr	r0, [pc, #40]	@ (801e810 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e7e8:	f008 fb0f 	bl	8026e0a <__aeabi_atexit>
 801e7ec:	4b05      	ldr	r3, [pc, #20]	@ (801e804 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e7ee:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801e7f0:	4b07      	ldr	r3, [pc, #28]	@ (801e810 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e7f2:	632b      	str	r3, [r5, #48]	@ 0x30
 801e7f4:	bd38      	pop	{r3, r4, r5, pc}
 801e7f6:	bf00      	nop
 801e7f8:	2001402c 	.word	0x2001402c
 801e7fc:	20000000 	.word	0x20000000
 801e800:	0801a6dd 	.word	0x0801a6dd
 801e804:	200000b8 	.word	0x200000b8
 801e808:	20014030 	.word	0x20014030
 801e80c:	0801a6db 	.word	0x0801a6db
 801e810:	200000bc 	.word	0x200000bc

0801e814 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e814:	b510      	push	{r4, lr}
 801e816:	4604      	mov	r4, r0
 801e818:	f7ff ff88 	bl	801e72c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e81c:	4620      	mov	r0, r4
 801e81e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e822:	f7ff bfbd 	b.w	801e7a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e828 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e828:	b538      	push	{r3, r4, r5, lr}
 801e82a:	4c15      	ldr	r4, [pc, #84]	@ (801e880 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e82c:	7823      	ldrb	r3, [r4, #0]
 801e82e:	f3bf 8f5b 	dmb	ish
 801e832:	07da      	lsls	r2, r3, #31
 801e834:	4605      	mov	r5, r0
 801e836:	d40b      	bmi.n	801e850 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e838:	4620      	mov	r0, r4
 801e83a:	f008 faed 	bl	8026e18 <__cxa_guard_acquire>
 801e83e:	b138      	cbz	r0, 801e850 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e840:	4620      	mov	r0, r4
 801e842:	f008 faf5 	bl	8026e30 <__cxa_guard_release>
 801e846:	4a0f      	ldr	r2, [pc, #60]	@ (801e884 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e848:	490f      	ldr	r1, [pc, #60]	@ (801e888 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e84a:	4810      	ldr	r0, [pc, #64]	@ (801e88c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e84c:	f008 fadd 	bl	8026e0a <__aeabi_atexit>
 801e850:	4c0f      	ldr	r4, [pc, #60]	@ (801e890 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e852:	7823      	ldrb	r3, [r4, #0]
 801e854:	f3bf 8f5b 	dmb	ish
 801e858:	07db      	lsls	r3, r3, #31
 801e85a:	d40b      	bmi.n	801e874 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e85c:	4620      	mov	r0, r4
 801e85e:	f008 fadb 	bl	8026e18 <__cxa_guard_acquire>
 801e862:	b138      	cbz	r0, 801e874 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e864:	4620      	mov	r0, r4
 801e866:	f008 fae3 	bl	8026e30 <__cxa_guard_release>
 801e86a:	4a06      	ldr	r2, [pc, #24]	@ (801e884 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e86c:	4909      	ldr	r1, [pc, #36]	@ (801e894 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e86e:	480a      	ldr	r0, [pc, #40]	@ (801e898 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e870:	f008 facb 	bl	8026e0a <__aeabi_atexit>
 801e874:	4b05      	ldr	r3, [pc, #20]	@ (801e88c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e876:	656b      	str	r3, [r5, #84]	@ 0x54
 801e878:	4b07      	ldr	r3, [pc, #28]	@ (801e898 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e87a:	65ab      	str	r3, [r5, #88]	@ 0x58
 801e87c:	bd38      	pop	{r3, r4, r5, pc}
 801e87e:	bf00      	nop
 801e880:	20014064 	.word	0x20014064
 801e884:	20000000 	.word	0x20000000
 801e888:	0801a6c9 	.word	0x0801a6c9
 801e88c:	200000f0 	.word	0x200000f0
 801e890:	20014068 	.word	0x20014068
 801e894:	0801a6c7 	.word	0x0801a6c7
 801e898:	200000f4 	.word	0x200000f4

0801e89c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e89c:	b538      	push	{r3, r4, r5, lr}
 801e89e:	4c15      	ldr	r4, [pc, #84]	@ (801e8f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e8a0:	7823      	ldrb	r3, [r4, #0]
 801e8a2:	f3bf 8f5b 	dmb	ish
 801e8a6:	07da      	lsls	r2, r3, #31
 801e8a8:	4605      	mov	r5, r0
 801e8aa:	d40b      	bmi.n	801e8c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e8ac:	4620      	mov	r0, r4
 801e8ae:	f008 fab3 	bl	8026e18 <__cxa_guard_acquire>
 801e8b2:	b138      	cbz	r0, 801e8c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e8b4:	4620      	mov	r0, r4
 801e8b6:	f008 fabb 	bl	8026e30 <__cxa_guard_release>
 801e8ba:	4a0f      	ldr	r2, [pc, #60]	@ (801e8f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e8bc:	490f      	ldr	r1, [pc, #60]	@ (801e8fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e8be:	4810      	ldr	r0, [pc, #64]	@ (801e900 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e8c0:	f008 faa3 	bl	8026e0a <__aeabi_atexit>
 801e8c4:	4c0f      	ldr	r4, [pc, #60]	@ (801e904 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e8c6:	7823      	ldrb	r3, [r4, #0]
 801e8c8:	f3bf 8f5b 	dmb	ish
 801e8cc:	07db      	lsls	r3, r3, #31
 801e8ce:	d40b      	bmi.n	801e8e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e8d0:	4620      	mov	r0, r4
 801e8d2:	f008 faa1 	bl	8026e18 <__cxa_guard_acquire>
 801e8d6:	b138      	cbz	r0, 801e8e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e8d8:	4620      	mov	r0, r4
 801e8da:	f008 faa9 	bl	8026e30 <__cxa_guard_release>
 801e8de:	4a06      	ldr	r2, [pc, #24]	@ (801e8f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e8e0:	4909      	ldr	r1, [pc, #36]	@ (801e908 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e8e2:	480a      	ldr	r0, [pc, #40]	@ (801e90c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e8e4:	f008 fa91 	bl	8026e0a <__aeabi_atexit>
 801e8e8:	4b05      	ldr	r3, [pc, #20]	@ (801e900 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e8ea:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801e8ec:	4b07      	ldr	r3, [pc, #28]	@ (801e90c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e8ee:	652b      	str	r3, [r5, #80]	@ 0x50
 801e8f0:	bd38      	pop	{r3, r4, r5, pc}
 801e8f2:	bf00      	nop
 801e8f4:	2001406c 	.word	0x2001406c
 801e8f8:	20000000 	.word	0x20000000
 801e8fc:	0801a6cd 	.word	0x0801a6cd
 801e900:	200000f8 	.word	0x200000f8
 801e904:	20014070 	.word	0x20014070
 801e908:	0801a6cb 	.word	0x0801a6cb
 801e90c:	200000fc 	.word	0x200000fc

0801e910 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e910:	b538      	push	{r3, r4, r5, lr}
 801e912:	4c15      	ldr	r4, [pc, #84]	@ (801e968 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e914:	7823      	ldrb	r3, [r4, #0]
 801e916:	f3bf 8f5b 	dmb	ish
 801e91a:	07da      	lsls	r2, r3, #31
 801e91c:	4605      	mov	r5, r0
 801e91e:	d40b      	bmi.n	801e938 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e920:	4620      	mov	r0, r4
 801e922:	f008 fa79 	bl	8026e18 <__cxa_guard_acquire>
 801e926:	b138      	cbz	r0, 801e938 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e928:	4620      	mov	r0, r4
 801e92a:	f008 fa81 	bl	8026e30 <__cxa_guard_release>
 801e92e:	4a0f      	ldr	r2, [pc, #60]	@ (801e96c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e930:	490f      	ldr	r1, [pc, #60]	@ (801e970 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e932:	4810      	ldr	r0, [pc, #64]	@ (801e974 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e934:	f008 fa69 	bl	8026e0a <__aeabi_atexit>
 801e938:	4c0f      	ldr	r4, [pc, #60]	@ (801e978 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e93a:	7823      	ldrb	r3, [r4, #0]
 801e93c:	f3bf 8f5b 	dmb	ish
 801e940:	07db      	lsls	r3, r3, #31
 801e942:	d40b      	bmi.n	801e95c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e944:	4620      	mov	r0, r4
 801e946:	f008 fa67 	bl	8026e18 <__cxa_guard_acquire>
 801e94a:	b138      	cbz	r0, 801e95c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e94c:	4620      	mov	r0, r4
 801e94e:	f008 fa6f 	bl	8026e30 <__cxa_guard_release>
 801e952:	4a06      	ldr	r2, [pc, #24]	@ (801e96c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e954:	4909      	ldr	r1, [pc, #36]	@ (801e97c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e956:	480a      	ldr	r0, [pc, #40]	@ (801e980 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e958:	f008 fa57 	bl	8026e0a <__aeabi_atexit>
 801e95c:	4b05      	ldr	r3, [pc, #20]	@ (801e974 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e95e:	646b      	str	r3, [r5, #68]	@ 0x44
 801e960:	4b07      	ldr	r3, [pc, #28]	@ (801e980 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e962:	64ab      	str	r3, [r5, #72]	@ 0x48
 801e964:	bd38      	pop	{r3, r4, r5, pc}
 801e966:	bf00      	nop
 801e968:	20014034 	.word	0x20014034
 801e96c:	20000000 	.word	0x20000000
 801e970:	0801a6d1 	.word	0x0801a6d1
 801e974:	200000c0 	.word	0x200000c0
 801e978:	20014038 	.word	0x20014038
 801e97c:	0801a6cf 	.word	0x0801a6cf
 801e980:	200000c4 	.word	0x200000c4

0801e984 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e984:	b538      	push	{r3, r4, r5, lr}
 801e986:	4c15      	ldr	r4, [pc, #84]	@ (801e9dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e988:	7823      	ldrb	r3, [r4, #0]
 801e98a:	f3bf 8f5b 	dmb	ish
 801e98e:	07da      	lsls	r2, r3, #31
 801e990:	4605      	mov	r5, r0
 801e992:	d40b      	bmi.n	801e9ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e994:	4620      	mov	r0, r4
 801e996:	f008 fa3f 	bl	8026e18 <__cxa_guard_acquire>
 801e99a:	b138      	cbz	r0, 801e9ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e99c:	4620      	mov	r0, r4
 801e99e:	f008 fa47 	bl	8026e30 <__cxa_guard_release>
 801e9a2:	4a0f      	ldr	r2, [pc, #60]	@ (801e9e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e9a4:	490f      	ldr	r1, [pc, #60]	@ (801e9e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e9a6:	4810      	ldr	r0, [pc, #64]	@ (801e9e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e9a8:	f008 fa2f 	bl	8026e0a <__aeabi_atexit>
 801e9ac:	4c0f      	ldr	r4, [pc, #60]	@ (801e9ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e9ae:	7823      	ldrb	r3, [r4, #0]
 801e9b0:	f3bf 8f5b 	dmb	ish
 801e9b4:	07db      	lsls	r3, r3, #31
 801e9b6:	d40b      	bmi.n	801e9d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e9b8:	4620      	mov	r0, r4
 801e9ba:	f008 fa2d 	bl	8026e18 <__cxa_guard_acquire>
 801e9be:	b138      	cbz	r0, 801e9d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e9c0:	4620      	mov	r0, r4
 801e9c2:	f008 fa35 	bl	8026e30 <__cxa_guard_release>
 801e9c6:	4a06      	ldr	r2, [pc, #24]	@ (801e9e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e9c8:	4909      	ldr	r1, [pc, #36]	@ (801e9f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e9ca:	480a      	ldr	r0, [pc, #40]	@ (801e9f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e9cc:	f008 fa1d 	bl	8026e0a <__aeabi_atexit>
 801e9d0:	4b05      	ldr	r3, [pc, #20]	@ (801e9e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e9d2:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801e9d4:	4b07      	ldr	r3, [pc, #28]	@ (801e9f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e9d6:	642b      	str	r3, [r5, #64]	@ 0x40
 801e9d8:	bd38      	pop	{r3, r4, r5, pc}
 801e9da:	bf00      	nop
 801e9dc:	20014054 	.word	0x20014054
 801e9e0:	20000000 	.word	0x20000000
 801e9e4:	0801a6d5 	.word	0x0801a6d5
 801e9e8:	200000e0 	.word	0x200000e0
 801e9ec:	20014058 	.word	0x20014058
 801e9f0:	0801a6d3 	.word	0x0801a6d3
 801e9f4:	200000e4 	.word	0x200000e4

0801e9f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e9f8:	b510      	push	{r4, lr}
 801e9fa:	4604      	mov	r4, r0
 801e9fc:	f7ff ff14 	bl	801e828 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801ea00:	4620      	mov	r0, r4
 801ea02:	f7ff ff85 	bl	801e910 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801ea06:	4620      	mov	r0, r4
 801ea08:	f7ff ff48 	bl	801e89c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801ea0c:	4620      	mov	r0, r4
 801ea0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea12:	f7ff bfb7 	b.w	801e984 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ea18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ea18:	b538      	push	{r3, r4, r5, lr}
 801ea1a:	4c15      	ldr	r4, [pc, #84]	@ (801ea70 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ea1c:	7823      	ldrb	r3, [r4, #0]
 801ea1e:	f3bf 8f5b 	dmb	ish
 801ea22:	07da      	lsls	r2, r3, #31
 801ea24:	4605      	mov	r5, r0
 801ea26:	d40b      	bmi.n	801ea40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ea28:	4620      	mov	r0, r4
 801ea2a:	f008 f9f5 	bl	8026e18 <__cxa_guard_acquire>
 801ea2e:	b138      	cbz	r0, 801ea40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ea30:	4620      	mov	r0, r4
 801ea32:	f008 f9fd 	bl	8026e30 <__cxa_guard_release>
 801ea36:	4a0f      	ldr	r2, [pc, #60]	@ (801ea74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ea38:	490f      	ldr	r1, [pc, #60]	@ (801ea78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ea3a:	4810      	ldr	r0, [pc, #64]	@ (801ea7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ea3c:	f008 f9e5 	bl	8026e0a <__aeabi_atexit>
 801ea40:	4c0f      	ldr	r4, [pc, #60]	@ (801ea80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801ea42:	7823      	ldrb	r3, [r4, #0]
 801ea44:	f3bf 8f5b 	dmb	ish
 801ea48:	07db      	lsls	r3, r3, #31
 801ea4a:	d40b      	bmi.n	801ea64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ea4c:	4620      	mov	r0, r4
 801ea4e:	f008 f9e3 	bl	8026e18 <__cxa_guard_acquire>
 801ea52:	b138      	cbz	r0, 801ea64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ea54:	4620      	mov	r0, r4
 801ea56:	f008 f9eb 	bl	8026e30 <__cxa_guard_release>
 801ea5a:	4a06      	ldr	r2, [pc, #24]	@ (801ea74 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ea5c:	4909      	ldr	r1, [pc, #36]	@ (801ea84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ea5e:	480a      	ldr	r0, [pc, #40]	@ (801ea88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ea60:	f008 f9d3 	bl	8026e0a <__aeabi_atexit>
 801ea64:	4b05      	ldr	r3, [pc, #20]	@ (801ea7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ea66:	666b      	str	r3, [r5, #100]	@ 0x64
 801ea68:	4b07      	ldr	r3, [pc, #28]	@ (801ea88 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ea6a:	66ab      	str	r3, [r5, #104]	@ 0x68
 801ea6c:	bd38      	pop	{r3, r4, r5, pc}
 801ea6e:	bf00      	nop
 801ea70:	2001403c 	.word	0x2001403c
 801ea74:	20000000 	.word	0x20000000
 801ea78:	0801a6c1 	.word	0x0801a6c1
 801ea7c:	200000c8 	.word	0x200000c8
 801ea80:	20014040 	.word	0x20014040
 801ea84:	0801a6bf 	.word	0x0801a6bf
 801ea88:	200000cc 	.word	0x200000cc

0801ea8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801ea8c:	b538      	push	{r3, r4, r5, lr}
 801ea8e:	4c15      	ldr	r4, [pc, #84]	@ (801eae4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801ea90:	7823      	ldrb	r3, [r4, #0]
 801ea92:	f3bf 8f5b 	dmb	ish
 801ea96:	07da      	lsls	r2, r3, #31
 801ea98:	4605      	mov	r5, r0
 801ea9a:	d40b      	bmi.n	801eab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ea9c:	4620      	mov	r0, r4
 801ea9e:	f008 f9bb 	bl	8026e18 <__cxa_guard_acquire>
 801eaa2:	b138      	cbz	r0, 801eab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801eaa4:	4620      	mov	r0, r4
 801eaa6:	f008 f9c3 	bl	8026e30 <__cxa_guard_release>
 801eaaa:	4a0f      	ldr	r2, [pc, #60]	@ (801eae8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801eaac:	490f      	ldr	r1, [pc, #60]	@ (801eaec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801eaae:	4810      	ldr	r0, [pc, #64]	@ (801eaf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801eab0:	f008 f9ab 	bl	8026e0a <__aeabi_atexit>
 801eab4:	4c0f      	ldr	r4, [pc, #60]	@ (801eaf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801eab6:	7823      	ldrb	r3, [r4, #0]
 801eab8:	f3bf 8f5b 	dmb	ish
 801eabc:	07db      	lsls	r3, r3, #31
 801eabe:	d40b      	bmi.n	801ead8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801eac0:	4620      	mov	r0, r4
 801eac2:	f008 f9a9 	bl	8026e18 <__cxa_guard_acquire>
 801eac6:	b138      	cbz	r0, 801ead8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801eac8:	4620      	mov	r0, r4
 801eaca:	f008 f9b1 	bl	8026e30 <__cxa_guard_release>
 801eace:	4a06      	ldr	r2, [pc, #24]	@ (801eae8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ead0:	4909      	ldr	r1, [pc, #36]	@ (801eaf8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ead2:	480a      	ldr	r0, [pc, #40]	@ (801eafc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ead4:	f008 f999 	bl	8026e0a <__aeabi_atexit>
 801ead8:	4b05      	ldr	r3, [pc, #20]	@ (801eaf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801eada:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801eadc:	4b07      	ldr	r3, [pc, #28]	@ (801eafc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801eade:	662b      	str	r3, [r5, #96]	@ 0x60
 801eae0:	bd38      	pop	{r3, r4, r5, pc}
 801eae2:	bf00      	nop
 801eae4:	20014014 	.word	0x20014014
 801eae8:	20000000 	.word	0x20000000
 801eaec:	0801a6c5 	.word	0x0801a6c5
 801eaf0:	200000a0 	.word	0x200000a0
 801eaf4:	20014018 	.word	0x20014018
 801eaf8:	0801a6c3 	.word	0x0801a6c3
 801eafc:	200000a4 	.word	0x200000a4

0801eb00 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801eb00:	b510      	push	{r4, lr}
 801eb02:	4604      	mov	r4, r0
 801eb04:	f7ff ff88 	bl	801ea18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801eb08:	4620      	mov	r0, r4
 801eb0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eb0e:	f7ff bfbd 	b.w	801ea8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801eb14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801eb14:	b538      	push	{r3, r4, r5, lr}
 801eb16:	4c15      	ldr	r4, [pc, #84]	@ (801eb6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801eb18:	7823      	ldrb	r3, [r4, #0]
 801eb1a:	f3bf 8f5b 	dmb	ish
 801eb1e:	07da      	lsls	r2, r3, #31
 801eb20:	4605      	mov	r5, r0
 801eb22:	d40b      	bmi.n	801eb3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801eb24:	4620      	mov	r0, r4
 801eb26:	f008 f977 	bl	8026e18 <__cxa_guard_acquire>
 801eb2a:	b138      	cbz	r0, 801eb3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801eb2c:	4620      	mov	r0, r4
 801eb2e:	f008 f97f 	bl	8026e30 <__cxa_guard_release>
 801eb32:	4a0f      	ldr	r2, [pc, #60]	@ (801eb70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801eb34:	490f      	ldr	r1, [pc, #60]	@ (801eb74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801eb36:	4810      	ldr	r0, [pc, #64]	@ (801eb78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801eb38:	f008 f967 	bl	8026e0a <__aeabi_atexit>
 801eb3c:	4c0f      	ldr	r4, [pc, #60]	@ (801eb7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801eb3e:	7823      	ldrb	r3, [r4, #0]
 801eb40:	f3bf 8f5b 	dmb	ish
 801eb44:	07db      	lsls	r3, r3, #31
 801eb46:	d40b      	bmi.n	801eb60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801eb48:	4620      	mov	r0, r4
 801eb4a:	f008 f965 	bl	8026e18 <__cxa_guard_acquire>
 801eb4e:	b138      	cbz	r0, 801eb60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801eb50:	4620      	mov	r0, r4
 801eb52:	f008 f96d 	bl	8026e30 <__cxa_guard_release>
 801eb56:	4a06      	ldr	r2, [pc, #24]	@ (801eb70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801eb58:	4909      	ldr	r1, [pc, #36]	@ (801eb80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801eb5a:	480a      	ldr	r0, [pc, #40]	@ (801eb84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801eb5c:	f008 f955 	bl	8026e0a <__aeabi_atexit>
 801eb60:	4b05      	ldr	r3, [pc, #20]	@ (801eb78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801eb62:	676b      	str	r3, [r5, #116]	@ 0x74
 801eb64:	4b07      	ldr	r3, [pc, #28]	@ (801eb84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801eb66:	67ab      	str	r3, [r5, #120]	@ 0x78
 801eb68:	bd38      	pop	{r3, r4, r5, pc}
 801eb6a:	bf00      	nop
 801eb6c:	2001400c 	.word	0x2001400c
 801eb70:	20000000 	.word	0x20000000
 801eb74:	0801a6b9 	.word	0x0801a6b9
 801eb78:	20000098 	.word	0x20000098
 801eb7c:	20014010 	.word	0x20014010
 801eb80:	0801a6b7 	.word	0x0801a6b7
 801eb84:	2000009c 	.word	0x2000009c

0801eb88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801eb88:	b538      	push	{r3, r4, r5, lr}
 801eb8a:	4c15      	ldr	r4, [pc, #84]	@ (801ebe0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801eb8c:	7823      	ldrb	r3, [r4, #0]
 801eb8e:	f3bf 8f5b 	dmb	ish
 801eb92:	07da      	lsls	r2, r3, #31
 801eb94:	4605      	mov	r5, r0
 801eb96:	d40b      	bmi.n	801ebb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801eb98:	4620      	mov	r0, r4
 801eb9a:	f008 f93d 	bl	8026e18 <__cxa_guard_acquire>
 801eb9e:	b138      	cbz	r0, 801ebb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801eba0:	4620      	mov	r0, r4
 801eba2:	f008 f945 	bl	8026e30 <__cxa_guard_release>
 801eba6:	4a0f      	ldr	r2, [pc, #60]	@ (801ebe4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801eba8:	490f      	ldr	r1, [pc, #60]	@ (801ebe8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801ebaa:	4810      	ldr	r0, [pc, #64]	@ (801ebec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ebac:	f008 f92d 	bl	8026e0a <__aeabi_atexit>
 801ebb0:	4c0f      	ldr	r4, [pc, #60]	@ (801ebf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801ebb2:	7823      	ldrb	r3, [r4, #0]
 801ebb4:	f3bf 8f5b 	dmb	ish
 801ebb8:	07db      	lsls	r3, r3, #31
 801ebba:	d40b      	bmi.n	801ebd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ebbc:	4620      	mov	r0, r4
 801ebbe:	f008 f92b 	bl	8026e18 <__cxa_guard_acquire>
 801ebc2:	b138      	cbz	r0, 801ebd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ebc4:	4620      	mov	r0, r4
 801ebc6:	f008 f933 	bl	8026e30 <__cxa_guard_release>
 801ebca:	4a06      	ldr	r2, [pc, #24]	@ (801ebe4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ebcc:	4909      	ldr	r1, [pc, #36]	@ (801ebf4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801ebce:	480a      	ldr	r0, [pc, #40]	@ (801ebf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ebd0:	f008 f91b 	bl	8026e0a <__aeabi_atexit>
 801ebd4:	4b05      	ldr	r3, [pc, #20]	@ (801ebec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ebd6:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801ebd8:	4b07      	ldr	r3, [pc, #28]	@ (801ebf8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ebda:	672b      	str	r3, [r5, #112]	@ 0x70
 801ebdc:	bd38      	pop	{r3, r4, r5, pc}
 801ebde:	bf00      	nop
 801ebe0:	20014004 	.word	0x20014004
 801ebe4:	20000000 	.word	0x20000000
 801ebe8:	0801a6bd 	.word	0x0801a6bd
 801ebec:	20000090 	.word	0x20000090
 801ebf0:	20014008 	.word	0x20014008
 801ebf4:	0801a6bb 	.word	0x0801a6bb
 801ebf8:	20000094 	.word	0x20000094

0801ebfc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801ebfc:	b510      	push	{r4, lr}
 801ebfe:	4604      	mov	r4, r0
 801ec00:	f7ff ff88 	bl	801eb14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801ec04:	4620      	mov	r0, r4
 801ec06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec0a:	f7ff bfbd 	b.w	801eb88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801ec0e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801ec0e:	b510      	push	{r4, lr}
 801ec10:	4604      	mov	r4, r0
 801ec12:	f7ff fff3 	bl	801ebfc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801ec16:	4620      	mov	r0, r4
 801ec18:	f7ff ff72 	bl	801eb00 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801ec1c:	4620      	mov	r0, r4
 801ec1e:	f7ff fdf9 	bl	801e814 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801ec22:	4620      	mov	r0, r4
 801ec24:	f7ff fcfa 	bl	801e61c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801ec28:	4620      	mov	r0, r4
 801ec2a:	f7ff fd75 	bl	801e718 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801ec2e:	4620      	mov	r0, r4
 801ec30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec34:	f7ff bee0 	b.w	801e9f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801ec38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801ec38:	b538      	push	{r3, r4, r5, lr}
 801ec3a:	4c0b      	ldr	r4, [pc, #44]	@ (801ec68 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801ec3c:	7823      	ldrb	r3, [r4, #0]
 801ec3e:	f3bf 8f5b 	dmb	ish
 801ec42:	07db      	lsls	r3, r3, #31
 801ec44:	4605      	mov	r5, r0
 801ec46:	d40b      	bmi.n	801ec60 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ec48:	4620      	mov	r0, r4
 801ec4a:	f008 f8e5 	bl	8026e18 <__cxa_guard_acquire>
 801ec4e:	b138      	cbz	r0, 801ec60 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801ec50:	4620      	mov	r0, r4
 801ec52:	f008 f8ed 	bl	8026e30 <__cxa_guard_release>
 801ec56:	4a05      	ldr	r2, [pc, #20]	@ (801ec6c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801ec58:	4905      	ldr	r1, [pc, #20]	@ (801ec70 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801ec5a:	4806      	ldr	r0, [pc, #24]	@ (801ec74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ec5c:	f008 f8d5 	bl	8026e0a <__aeabi_atexit>
 801ec60:	4b04      	ldr	r3, [pc, #16]	@ (801ec74 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801ec62:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801ec64:	bd38      	pop	{r3, r4, r5, pc}
 801ec66:	bf00      	nop
 801ec68:	20013ff8 	.word	0x20013ff8
 801ec6c:	20000000 	.word	0x20000000
 801ec70:	0801a6b5 	.word	0x0801a6b5
 801ec74:	20000088 	.word	0x20000088

0801ec78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ec78:	b538      	push	{r3, r4, r5, lr}
 801ec7a:	4c0b      	ldr	r4, [pc, #44]	@ (801eca8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ec7c:	7823      	ldrb	r3, [r4, #0]
 801ec7e:	f3bf 8f5b 	dmb	ish
 801ec82:	07db      	lsls	r3, r3, #31
 801ec84:	4605      	mov	r5, r0
 801ec86:	d40b      	bmi.n	801eca0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ec88:	4620      	mov	r0, r4
 801ec8a:	f008 f8c5 	bl	8026e18 <__cxa_guard_acquire>
 801ec8e:	b138      	cbz	r0, 801eca0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ec90:	4620      	mov	r0, r4
 801ec92:	f008 f8cd 	bl	8026e30 <__cxa_guard_release>
 801ec96:	4a05      	ldr	r2, [pc, #20]	@ (801ecac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ec98:	4905      	ldr	r1, [pc, #20]	@ (801ecb0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ec9a:	4806      	ldr	r0, [pc, #24]	@ (801ecb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ec9c:	f008 f8b5 	bl	8026e0a <__aeabi_atexit>
 801eca0:	4b04      	ldr	r3, [pc, #16]	@ (801ecb4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801eca2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801eca6:	bd38      	pop	{r3, r4, r5, pc}
 801eca8:	20013ffc 	.word	0x20013ffc
 801ecac:	20000000 	.word	0x20000000
 801ecb0:	0801a6b3 	.word	0x0801a6b3
 801ecb4:	2000008c 	.word	0x2000008c

0801ecb8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ecb8:	b570      	push	{r4, r5, r6, lr}
 801ecba:	4d0d      	ldr	r5, [pc, #52]	@ (801ecf0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ecbc:	4c0d      	ldr	r4, [pc, #52]	@ (801ecf4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ecbe:	782b      	ldrb	r3, [r5, #0]
 801ecc0:	f3bf 8f5b 	dmb	ish
 801ecc4:	f013 0f01 	tst.w	r3, #1
 801ecc8:	4606      	mov	r6, r0
 801ecca:	d10d      	bne.n	801ece8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801eccc:	4628      	mov	r0, r5
 801ecce:	f008 f8a3 	bl	8026e18 <__cxa_guard_acquire>
 801ecd2:	b148      	cbz	r0, 801ece8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ecd4:	4b08      	ldr	r3, [pc, #32]	@ (801ecf8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ecd6:	6023      	str	r3, [r4, #0]
 801ecd8:	4628      	mov	r0, r5
 801ecda:	f008 f8a9 	bl	8026e30 <__cxa_guard_release>
 801ecde:	4a07      	ldr	r2, [pc, #28]	@ (801ecfc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ece0:	4907      	ldr	r1, [pc, #28]	@ (801ed00 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ece2:	4620      	mov	r0, r4
 801ece4:	f008 f891 	bl	8026e0a <__aeabi_atexit>
 801ece8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801ecec:	bd70      	pop	{r4, r5, r6, pc}
 801ecee:	bf00      	nop
 801ecf0:	20014000 	.word	0x20014000
 801ecf4:	20014178 	.word	0x20014178
 801ecf8:	0802b414 	.word	0x0802b414
 801ecfc:	20000000 	.word	0x20000000
 801ed00:	0801a6b1 	.word	0x0801a6b1

0801ed04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ed04:	b510      	push	{r4, lr}
 801ed06:	4604      	mov	r4, r0
 801ed08:	f7ff ff96 	bl	801ec38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ed0c:	4620      	mov	r0, r4
 801ed0e:	f7ff ffb3 	bl	801ec78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ed12:	4620      	mov	r0, r4
 801ed14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ed18:	f7ff bfce 	b.w	801ecb8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ed1c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801ed1c:	b570      	push	{r4, r5, r6, lr}
 801ed1e:	4d0d      	ldr	r5, [pc, #52]	@ (801ed54 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801ed20:	4c0d      	ldr	r4, [pc, #52]	@ (801ed58 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801ed22:	782b      	ldrb	r3, [r5, #0]
 801ed24:	f3bf 8f5b 	dmb	ish
 801ed28:	f013 0f01 	tst.w	r3, #1
 801ed2c:	4606      	mov	r6, r0
 801ed2e:	d10d      	bne.n	801ed4c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801ed30:	4628      	mov	r0, r5
 801ed32:	f008 f871 	bl	8026e18 <__cxa_guard_acquire>
 801ed36:	b148      	cbz	r0, 801ed4c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801ed38:	4b08      	ldr	r3, [pc, #32]	@ (801ed5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801ed3a:	6023      	str	r3, [r4, #0]
 801ed3c:	4628      	mov	r0, r5
 801ed3e:	f008 f877 	bl	8026e30 <__cxa_guard_release>
 801ed42:	4a07      	ldr	r2, [pc, #28]	@ (801ed60 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801ed44:	4907      	ldr	r1, [pc, #28]	@ (801ed64 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801ed46:	4620      	mov	r0, r4
 801ed48:	f008 f85f 	bl	8026e0a <__aeabi_atexit>
 801ed4c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801ed50:	bd70      	pop	{r4, r5, r6, pc}
 801ed52:	bf00      	nop
 801ed54:	20013ff4 	.word	0x20013ff4
 801ed58:	20014074 	.word	0x20014074
 801ed5c:	0802b430 	.word	0x0802b430
 801ed60:	20000000 	.word	0x20000000
 801ed64:	0801a6af 	.word	0x0801a6af

0801ed68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ed68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed6c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801ed70:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801ed74:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801ed78:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801ed7c:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801ed80:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801ed84:	8808      	ldrh	r0, [r1, #0]
 801ed86:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ed8a:	2d00      	cmp	r5, #0
 801ed8c:	eb02 0a0c 	add.w	sl, r2, ip
 801ed90:	f2c0 80b0 	blt.w	801eef4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ed94:	45ab      	cmp	fp, r5
 801ed96:	f340 80ad 	ble.w	801eef4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ed9a:	2c00      	cmp	r4, #0
 801ed9c:	f2c0 80a8 	blt.w	801eef0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801eda0:	45a6      	cmp	lr, r4
 801eda2:	f340 80a5 	ble.w	801eef0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801eda6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801edaa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801edae:	1c62      	adds	r2, r4, #1
 801edb0:	f100 80a3 	bmi.w	801eefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801edb4:	4596      	cmp	lr, r2
 801edb6:	f340 80a0 	ble.w	801eefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801edba:	f1b9 0f00 	cmp.w	r9, #0
 801edbe:	f000 809c 	beq.w	801eefa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801edc2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801edc6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801edca:	3501      	adds	r5, #1
 801edcc:	f100 8099 	bmi.w	801ef02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801edd0:	45ab      	cmp	fp, r5
 801edd2:	f340 8096 	ble.w	801ef02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801edd6:	2f00      	cmp	r7, #0
 801edd8:	f000 8093 	beq.w	801ef02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801eddc:	2c00      	cmp	r4, #0
 801edde:	f2c0 808e 	blt.w	801eefe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ede2:	45a6      	cmp	lr, r4
 801ede4:	f340 808b 	ble.w	801eefe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ede8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801edec:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801edf0:	3401      	adds	r4, #1
 801edf2:	f100 8089 	bmi.w	801ef08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801edf6:	45a6      	cmp	lr, r4
 801edf8:	f340 8086 	ble.w	801ef08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801edfc:	f1b9 0f00 	cmp.w	r9, #0
 801ee00:	f000 8082 	beq.w	801ef08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ee04:	44d6      	add	lr, sl
 801ee06:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ee0a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ee0e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ee12:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ee16:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801ee1a:	fb19 fe07 	smulbb	lr, r9, r7
 801ee1e:	ea44 0808 	orr.w	r8, r4, r8
 801ee22:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ee26:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ee2a:	f1c7 0210 	rsb	r2, r7, #16
 801ee2e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ee32:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ee36:	ea44 0c0c 	orr.w	ip, r4, ip
 801ee3a:	eba2 0209 	sub.w	r2, r2, r9
 801ee3e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ee42:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ee46:	fb04 f40c 	mul.w	r4, r4, ip
 801ee4a:	fb02 4808 	mla	r8, r2, r8, r4
 801ee4e:	041a      	lsls	r2, r3, #16
 801ee50:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ee54:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ee58:	4313      	orrs	r3, r2
 801ee5a:	042a      	lsls	r2, r5, #16
 801ee5c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ee60:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ee64:	fb0e 8303 	mla	r3, lr, r3, r8
 801ee68:	432a      	orrs	r2, r5
 801ee6a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ee6e:	fb07 3202 	mla	r2, r7, r2, r3
 801ee72:	0d53      	lsrs	r3, r2, #21
 801ee74:	0952      	lsrs	r2, r2, #5
 801ee76:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee7a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ee7e:	431a      	orrs	r2, r3
 801ee80:	b293      	uxth	r3, r2
 801ee82:	b2b4      	uxth	r4, r6
 801ee84:	1202      	asrs	r2, r0, #8
 801ee86:	43f6      	mvns	r6, r6
 801ee88:	b2f6      	uxtb	r6, r6
 801ee8a:	121d      	asrs	r5, r3, #8
 801ee8c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ee90:	fb12 f206 	smulbb	r2, r2, r6
 801ee94:	10c7      	asrs	r7, r0, #3
 801ee96:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ee9a:	00c0      	lsls	r0, r0, #3
 801ee9c:	fb05 2504 	mla	r5, r5, r4, r2
 801eea0:	b2c0      	uxtb	r0, r0
 801eea2:	10da      	asrs	r2, r3, #3
 801eea4:	00db      	lsls	r3, r3, #3
 801eea6:	b2db      	uxtb	r3, r3
 801eea8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801eeac:	fb10 f006 	smulbb	r0, r0, r6
 801eeb0:	b2ad      	uxth	r5, r5
 801eeb2:	fb03 0004 	mla	r0, r3, r4, r0
 801eeb6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801eeba:	fb17 f706 	smulbb	r7, r7, r6
 801eebe:	b280      	uxth	r0, r0
 801eec0:	1c6b      	adds	r3, r5, #1
 801eec2:	fb02 7204 	mla	r2, r2, r4, r7
 801eec6:	b292      	uxth	r2, r2
 801eec8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eecc:	1c43      	adds	r3, r0, #1
 801eece:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801eed2:	1c50      	adds	r0, r2, #1
 801eed4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801eed8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801eedc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eee0:	0952      	lsrs	r2, r2, #5
 801eee2:	432b      	orrs	r3, r5
 801eee4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801eee8:	4313      	orrs	r3, r2
 801eeea:	800b      	strh	r3, [r1, #0]
 801eeec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eef0:	4680      	mov	r8, r0
 801eef2:	e75c      	b.n	801edae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801eef4:	4684      	mov	ip, r0
 801eef6:	4680      	mov	r8, r0
 801eef8:	e767      	b.n	801edca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eefa:	4684      	mov	ip, r0
 801eefc:	e765      	b.n	801edca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eefe:	4605      	mov	r5, r0
 801ef00:	e776      	b.n	801edf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801ef02:	4603      	mov	r3, r0
 801ef04:	4605      	mov	r5, r0
 801ef06:	e782      	b.n	801ee0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ef08:	4603      	mov	r3, r0
 801ef0a:	e780      	b.n	801ee0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ef0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef10:	b099      	sub	sp, #100	@ 0x64
 801ef12:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801ef16:	9215      	str	r2, [sp, #84]	@ 0x54
 801ef18:	9309      	str	r3, [sp, #36]	@ 0x24
 801ef1a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801ef1c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801ef20:	930d      	str	r3, [sp, #52]	@ 0x34
 801ef22:	910c      	str	r1, [sp, #48]	@ 0x30
 801ef24:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801ef28:	9016      	str	r0, [sp, #88]	@ 0x58
 801ef2a:	6850      	ldr	r0, [r2, #4]
 801ef2c:	6812      	ldr	r2, [r2, #0]
 801ef2e:	fb00 1303 	mla	r3, r0, r3, r1
 801ef32:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801ef36:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ef38:	681b      	ldr	r3, [r3, #0]
 801ef3a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ef3c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ef3e:	685e      	ldr	r6, [r3, #4]
 801ef40:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ef42:	43db      	mvns	r3, r3
 801ef44:	b2db      	uxtb	r3, r3
 801ef46:	3604      	adds	r6, #4
 801ef48:	930a      	str	r3, [sp, #40]	@ 0x28
 801ef4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ef4c:	2b00      	cmp	r3, #0
 801ef4e:	dc03      	bgt.n	801ef58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ef50:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801ef52:	2b00      	cmp	r3, #0
 801ef54:	f340 8225 	ble.w	801f3a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ef58:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ef5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef62:	1e48      	subs	r0, r1, #1
 801ef64:	1e57      	subs	r7, r2, #1
 801ef66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ef68:	2b00      	cmp	r3, #0
 801ef6a:	f340 80e3 	ble.w	801f134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ef6e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ef72:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ef76:	d406      	bmi.n	801ef86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef78:	4584      	cmp	ip, r0
 801ef7a:	da04      	bge.n	801ef86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef7c:	2b00      	cmp	r3, #0
 801ef7e:	db02      	blt.n	801ef86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef80:	42bb      	cmp	r3, r7
 801ef82:	f2c0 80d8 	blt.w	801f136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ef86:	f11c 0c01 	adds.w	ip, ip, #1
 801ef8a:	f100 80c9 	bmi.w	801f120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ef8e:	4561      	cmp	r1, ip
 801ef90:	f2c0 80c6 	blt.w	801f120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ef94:	3301      	adds	r3, #1
 801ef96:	f100 80c3 	bmi.w	801f120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ef9a:	429a      	cmp	r2, r3
 801ef9c:	f2c0 80c0 	blt.w	801f120 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801efa0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801efa4:	4647      	mov	r7, r8
 801efa6:	f1bb 0f00 	cmp.w	fp, #0
 801efaa:	f340 80e3 	ble.w	801f174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801efae:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801efb0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801efb2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801efb6:	689b      	ldr	r3, [r3, #8]
 801efb8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801efbc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801efc0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801efc4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801efc8:	f100 8121 	bmi.w	801f20e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801efcc:	f103 39ff 	add.w	r9, r3, #4294967295
 801efd0:	454a      	cmp	r2, r9
 801efd2:	f280 811c 	bge.w	801f20e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801efd6:	f1bc 0f00 	cmp.w	ip, #0
 801efda:	f2c0 8118 	blt.w	801f20e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801efde:	f10e 39ff 	add.w	r9, lr, #4294967295
 801efe2:	45cc      	cmp	ip, r9
 801efe4:	f280 8113 	bge.w	801f20e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801efe8:	b21b      	sxth	r3, r3
 801efea:	fb0c 2203 	mla	r2, ip, r3, r2
 801efee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eff0:	eb04 0902 	add.w	r9, r4, r2
 801eff4:	5ca2      	ldrb	r2, [r4, r2]
 801eff6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801effa:	2800      	cmp	r0, #0
 801effc:	f000 80fe 	beq.w	801f1fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f000:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f004:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f008:	9211      	str	r2, [sp, #68]	@ 0x44
 801f00a:	b151      	cbz	r1, 801f022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f00c:	eb09 0203 	add.w	r2, r9, r3
 801f010:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f014:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f018:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f01a:	7853      	ldrb	r3, [r2, #1]
 801f01c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f020:	9312      	str	r3, [sp, #72]	@ 0x48
 801f022:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f024:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f026:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f02a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f02e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f032:	ea4c 0c03 	orr.w	ip, ip, r3
 801f036:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f038:	041b      	lsls	r3, r3, #16
 801f03a:	fb10 f201 	smulbb	r2, r0, r1
 801f03e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801f042:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f046:	10d2      	asrs	r2, r2, #3
 801f048:	4323      	orrs	r3, r4
 801f04a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f04e:	4353      	muls	r3, r2
 801f050:	fb09 330c 	mla	r3, r9, ip, r3
 801f054:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f058:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f05c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f060:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f064:	f1c1 0c10 	rsb	ip, r1, #16
 801f068:	ebac 0c00 	sub.w	ip, ip, r0
 801f06c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f070:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f074:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f076:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f078:	0418      	lsls	r0, r3, #16
 801f07a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f07e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f082:	4318      	orrs	r0, r3
 801f084:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f088:	fb02 c200 	mla	r2, r2, r0, ip
 801f08c:	0d53      	lsrs	r3, r2, #21
 801f08e:	0952      	lsrs	r2, r2, #5
 801f090:	8838      	ldrh	r0, [r7, #0]
 801f092:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f096:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f09a:	431a      	orrs	r2, r3
 801f09c:	b292      	uxth	r2, r2
 801f09e:	1201      	asrs	r1, r0, #8
 801f0a0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801f0a4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f0a8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f0ac:	fb11 f104 	smulbb	r1, r1, r4
 801f0b0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f0b4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f0b8:	00c0      	lsls	r0, r0, #3
 801f0ba:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f0be:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801f0c2:	10d1      	asrs	r1, r2, #3
 801f0c4:	b2c0      	uxtb	r0, r0
 801f0c6:	00d2      	lsls	r2, r2, #3
 801f0c8:	b2d2      	uxtb	r2, r2
 801f0ca:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f0ce:	fb1e fe04 	smulbb	lr, lr, r4
 801f0d2:	fb10 f004 	smulbb	r0, r0, r4
 801f0d6:	fa1f fc8c 	uxth.w	ip, ip
 801f0da:	fb01 e103 	mla	r1, r1, r3, lr
 801f0de:	fb02 0303 	mla	r3, r2, r3, r0
 801f0e2:	b29a      	uxth	r2, r3
 801f0e4:	f10c 0301 	add.w	r3, ip, #1
 801f0e8:	b289      	uxth	r1, r1
 801f0ea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f0ee:	1c53      	adds	r3, r2, #1
 801f0f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f0f4:	1c4a      	adds	r2, r1, #1
 801f0f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f0fa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801f0fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f102:	0949      	lsrs	r1, r1, #5
 801f104:	ea43 030c 	orr.w	r3, r3, ip
 801f108:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f10c:	430b      	orrs	r3, r1
 801f10e:	803b      	strh	r3, [r7, #0]
 801f110:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f112:	449a      	add	sl, r3
 801f114:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f116:	3702      	adds	r7, #2
 801f118:	441d      	add	r5, r3
 801f11a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f11e:	e742      	b.n	801efa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f120:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f122:	449a      	add	sl, r3
 801f124:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f126:	441d      	add	r5, r3
 801f128:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f12a:	3b01      	subs	r3, #1
 801f12c:	9309      	str	r3, [sp, #36]	@ 0x24
 801f12e:	f108 0802 	add.w	r8, r8, #2
 801f132:	e718      	b.n	801ef66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f134:	d023      	beq.n	801f17e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f136:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f138:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801f13a:	3b01      	subs	r3, #1
 801f13c:	fb00 a003 	mla	r0, r0, r3, sl
 801f140:	1400      	asrs	r0, r0, #16
 801f142:	f53f af2d 	bmi.w	801efa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f146:	3901      	subs	r1, #1
 801f148:	4288      	cmp	r0, r1
 801f14a:	f6bf af29 	bge.w	801efa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f14e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801f150:	fb01 5303 	mla	r3, r1, r3, r5
 801f154:	141b      	asrs	r3, r3, #16
 801f156:	f53f af23 	bmi.w	801efa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f15a:	3a01      	subs	r2, #1
 801f15c:	4293      	cmp	r3, r2
 801f15e:	f6bf af1f 	bge.w	801efa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f162:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801f166:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801f16a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801f16e:	f1be 0f00 	cmp.w	lr, #0
 801f172:	dc6c      	bgt.n	801f24e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801f174:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f176:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f17a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801f17e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f180:	2b00      	cmp	r3, #0
 801f182:	f340 810e 	ble.w	801f3a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f186:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f18a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f18e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f192:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f194:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f198:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f19c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f1a0:	eef0 6a62 	vmov.f32	s13, s5
 801f1a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1b0:	ee16 aa90 	vmov	sl, s13
 801f1b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1b8:	eef0 6a43 	vmov.f32	s13, s6
 801f1bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1c0:	ee12 2a90 	vmov	r2, s5
 801f1c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1cc:	ee13 2a10 	vmov	r2, s6
 801f1d0:	9325      	str	r3, [sp, #148]	@ 0x94
 801f1d2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f1d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1d8:	9326      	str	r3, [sp, #152]	@ 0x98
 801f1da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f1dc:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801f1de:	3b01      	subs	r3, #1
 801f1e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1e4:	930c      	str	r3, [sp, #48]	@ 0x30
 801f1e6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f1e8:	bf08      	it	eq
 801f1ea:	4613      	moveq	r3, r2
 801f1ec:	ee16 5a90 	vmov	r5, s13
 801f1f0:	9309      	str	r3, [sp, #36]	@ 0x24
 801f1f2:	eeb0 3a67 	vmov.f32	s6, s15
 801f1f6:	eef0 2a47 	vmov.f32	s5, s14
 801f1fa:	e6a6      	b.n	801ef4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f1fc:	2900      	cmp	r1, #0
 801f1fe:	f43f af10 	beq.w	801f022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f202:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f206:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f20a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f20c:	e709      	b.n	801f022 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f20e:	f112 0901 	adds.w	r9, r2, #1
 801f212:	f53f af7d 	bmi.w	801f110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f216:	454b      	cmp	r3, r9
 801f218:	f6ff af7a 	blt.w	801f110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f21c:	f11c 0901 	adds.w	r9, ip, #1
 801f220:	f53f af76 	bmi.w	801f110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f224:	45ce      	cmp	lr, r9
 801f226:	f6ff af73 	blt.w	801f110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f22a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f22c:	9202      	str	r2, [sp, #8]
 801f22e:	b21b      	sxth	r3, r3
 801f230:	fa0f f28e 	sxth.w	r2, lr
 801f234:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f238:	e9cd c003 	strd	ip, r0, [sp, #12]
 801f23c:	9201      	str	r2, [sp, #4]
 801f23e:	9300      	str	r3, [sp, #0]
 801f240:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f242:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801f244:	4633      	mov	r3, r6
 801f246:	4639      	mov	r1, r7
 801f248:	f7ff fd8e 	bl	801ed68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801f24c:	e760      	b.n	801f110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f24e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f250:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f252:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f256:	ea4f 422a 	mov.w	r2, sl, asr #16
 801f25a:	1429      	asrs	r1, r5, #16
 801f25c:	fb03 2101 	mla	r1, r3, r1, r2
 801f260:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f262:	440a      	add	r2, r1
 801f264:	5c61      	ldrb	r1, [r4, r1]
 801f266:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801f26a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f26e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801f272:	f1bc 0f00 	cmp.w	ip, #0
 801f276:	f000 808c 	beq.w	801f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801f27a:	7857      	ldrb	r7, [r2, #1]
 801f27c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801f280:	9413      	str	r4, [sp, #76]	@ 0x4c
 801f282:	b140      	cbz	r0, 801f296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f284:	18d7      	adds	r7, r2, r3
 801f286:	5cd3      	ldrb	r3, [r2, r3]
 801f288:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f28c:	9310      	str	r3, [sp, #64]	@ 0x40
 801f28e:	787b      	ldrb	r3, [r7, #1]
 801f290:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f294:	9314      	str	r3, [sp, #80]	@ 0x50
 801f296:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f298:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801f29a:	fb1c f200 	smulbb	r2, ip, r0
 801f29e:	041f      	lsls	r7, r3, #16
 801f2a0:	10d2      	asrs	r2, r2, #3
 801f2a2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f2a6:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801f2aa:	431f      	orrs	r7, r3
 801f2ac:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801f2b0:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f2b2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f2b4:	041b      	lsls	r3, r3, #16
 801f2b6:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801f2ba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f2be:	ea43 030b 	orr.w	r3, r3, fp
 801f2c2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801f2c4:	4353      	muls	r3, r2
 801f2c6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f2ca:	fb04 3707 	mla	r7, r4, r7, r3
 801f2ce:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f2d2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801f2d6:	ea43 0b01 	orr.w	fp, r3, r1
 801f2da:	f1c0 0110 	rsb	r1, r0, #16
 801f2de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2e0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f2e2:	eba1 0c0c 	sub.w	ip, r1, ip
 801f2e6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f2ea:	fb0c 770b 	mla	r7, ip, fp, r7
 801f2ee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f2f2:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801f2f6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f2fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f2fe:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f302:	fb02 770c 	mla	r7, r2, ip, r7
 801f306:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f308:	0d79      	lsrs	r1, r7, #21
 801f30a:	097f      	lsrs	r7, r7, #5
 801f30c:	8812      	ldrh	r2, [r2, #0]
 801f30e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f312:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f316:	430f      	orrs	r7, r1
 801f318:	b2bb      	uxth	r3, r7
 801f31a:	1211      	asrs	r1, r2, #8
 801f31c:	1218      	asrs	r0, r3, #8
 801f31e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f322:	fb11 f104 	smulbb	r1, r1, r4
 801f326:	10d7      	asrs	r7, r2, #3
 801f328:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f32c:	00d2      	lsls	r2, r2, #3
 801f32e:	fb00 1009 	mla	r0, r0, r9, r1
 801f332:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f336:	10d9      	asrs	r1, r3, #3
 801f338:	b2d2      	uxtb	r2, r2
 801f33a:	00db      	lsls	r3, r3, #3
 801f33c:	fb17 f704 	smulbb	r7, r7, r4
 801f340:	fb12 f204 	smulbb	r2, r2, r4
 801f344:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f348:	b2db      	uxtb	r3, r3
 801f34a:	b280      	uxth	r0, r0
 801f34c:	fb01 7109 	mla	r1, r1, r9, r7
 801f350:	fb03 2309 	mla	r3, r3, r9, r2
 801f354:	b29b      	uxth	r3, r3
 801f356:	b289      	uxth	r1, r1
 801f358:	1c42      	adds	r2, r0, #1
 801f35a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f35e:	1c4f      	adds	r7, r1, #1
 801f360:	1c5a      	adds	r2, r3, #1
 801f362:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f366:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f36a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f36e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f372:	0949      	lsrs	r1, r1, #5
 801f374:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f376:	4310      	orrs	r0, r2
 801f378:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f37c:	4308      	orrs	r0, r1
 801f37e:	f823 0b02 	strh.w	r0, [r3], #2
 801f382:	930e      	str	r3, [sp, #56]	@ 0x38
 801f384:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801f386:	449a      	add	sl, r3
 801f388:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f38a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f38e:	441d      	add	r5, r3
 801f390:	e6ed      	b.n	801f16e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f392:	2800      	cmp	r0, #0
 801f394:	f43f af7f 	beq.w	801f296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f398:	5cd3      	ldrb	r3, [r2, r3]
 801f39a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f39e:	9310      	str	r3, [sp, #64]	@ 0x40
 801f3a0:	e779      	b.n	801f296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f3a2:	b019      	add	sp, #100	@ 0x64
 801f3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f3a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f3ac:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801f3b0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f3b4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801f3b8:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801f3bc:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801f3c0:	8808      	ldrh	r0, [r1, #0]
 801f3c2:	fb08 470e 	mla	r7, r8, lr, r4
 801f3c6:	f1b8 0f00 	cmp.w	r8, #0
 801f3ca:	eb02 0907 	add.w	r9, r2, r7
 801f3ce:	db67      	blt.n	801f4a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f3d0:	45c2      	cmp	sl, r8
 801f3d2:	dd65      	ble.n	801f4a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f3d4:	2c00      	cmp	r4, #0
 801f3d6:	db61      	blt.n	801f49c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f3d8:	45a6      	cmp	lr, r4
 801f3da:	dd5f      	ble.n	801f49c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f3dc:	5dd2      	ldrb	r2, [r2, r7]
 801f3de:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f3e2:	1c62      	adds	r2, r4, #1
 801f3e4:	d45f      	bmi.n	801f4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f3e6:	4596      	cmp	lr, r2
 801f3e8:	dd5d      	ble.n	801f4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f3ea:	2d00      	cmp	r5, #0
 801f3ec:	d05b      	beq.n	801f4a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f3ee:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f3f2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f3f6:	f118 0801 	adds.w	r8, r8, #1
 801f3fa:	d458      	bmi.n	801f4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f3fc:	45c2      	cmp	sl, r8
 801f3fe:	dd56      	ble.n	801f4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f400:	2e00      	cmp	r6, #0
 801f402:	d054      	beq.n	801f4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f404:	2c00      	cmp	r4, #0
 801f406:	db50      	blt.n	801f4aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f408:	45a6      	cmp	lr, r4
 801f40a:	dd4e      	ble.n	801f4aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f40c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f410:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f414:	3401      	adds	r4, #1
 801f416:	d407      	bmi.n	801f428 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f418:	45a6      	cmp	lr, r4
 801f41a:	dd05      	ble.n	801f428 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f41c:	b125      	cbz	r5, 801f428 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f41e:	44ce      	add	lr, r9
 801f420:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f424:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f428:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f42c:	fb15 f406 	smulbb	r4, r5, r6
 801f430:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f434:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f438:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f43c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f440:	ea43 0c0c 	orr.w	ip, r3, ip
 801f444:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f448:	f1c6 0310 	rsb	r3, r6, #16
 801f44c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f450:	1b5b      	subs	r3, r3, r5
 801f452:	ea4e 0707 	orr.w	r7, lr, r7
 801f456:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f45a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f45e:	437d      	muls	r5, r7
 801f460:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f464:	0403      	lsls	r3, r0, #16
 801f466:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f46a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f46e:	4318      	orrs	r0, r3
 801f470:	0413      	lsls	r3, r2, #16
 801f472:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f476:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f47a:	4313      	orrs	r3, r2
 801f47c:	fb04 c000 	mla	r0, r4, r0, ip
 801f480:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f484:	fb06 0003 	mla	r0, r6, r3, r0
 801f488:	0d43      	lsrs	r3, r0, #21
 801f48a:	0940      	lsrs	r0, r0, #5
 801f48c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f490:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f494:	4318      	orrs	r0, r3
 801f496:	8008      	strh	r0, [r1, #0]
 801f498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f49c:	4684      	mov	ip, r0
 801f49e:	e7a0      	b.n	801f3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f4a0:	4607      	mov	r7, r0
 801f4a2:	4684      	mov	ip, r0
 801f4a4:	e7a7      	b.n	801f3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f4a6:	4607      	mov	r7, r0
 801f4a8:	e7a5      	b.n	801f3f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f4aa:	4602      	mov	r2, r0
 801f4ac:	e7b2      	b.n	801f414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f4ae:	4602      	mov	r2, r0
 801f4b0:	e7ba      	b.n	801f428 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f4b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f4b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4b6:	b093      	sub	sp, #76	@ 0x4c
 801f4b8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801f4bc:	920f      	str	r2, [sp, #60]	@ 0x3c
 801f4be:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f4c0:	9108      	str	r1, [sp, #32]
 801f4c2:	9306      	str	r3, [sp, #24]
 801f4c4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801f4c8:	9010      	str	r0, [sp, #64]	@ 0x40
 801f4ca:	6850      	ldr	r0, [r2, #4]
 801f4cc:	6812      	ldr	r2, [r2, #0]
 801f4ce:	fb00 1303 	mla	r3, r0, r3, r1
 801f4d2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f4d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4d8:	681b      	ldr	r3, [r3, #0]
 801f4da:	9307      	str	r3, [sp, #28]
 801f4dc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4de:	685f      	ldr	r7, [r3, #4]
 801f4e0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801f4e4:	3704      	adds	r7, #4
 801f4e6:	9b08      	ldr	r3, [sp, #32]
 801f4e8:	2b00      	cmp	r3, #0
 801f4ea:	dc03      	bgt.n	801f4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f4ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f4ee:	2b00      	cmp	r3, #0
 801f4f0:	f340 81b2 	ble.w	801f858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f4f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f4fa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f4fe:	1e48      	subs	r0, r1, #1
 801f500:	f102 3cff 	add.w	ip, r2, #4294967295
 801f504:	9b06      	ldr	r3, [sp, #24]
 801f506:	2b00      	cmp	r3, #0
 801f508:	f340 80a9 	ble.w	801f65e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f50c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f510:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f514:	d406      	bmi.n	801f524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f516:	4586      	cmp	lr, r0
 801f518:	da04      	bge.n	801f524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f51a:	2b00      	cmp	r3, #0
 801f51c:	db02      	blt.n	801f524 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f51e:	4563      	cmp	r3, ip
 801f520:	f2c0 809e 	blt.w	801f660 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f524:	f11e 0e01 	adds.w	lr, lr, #1
 801f528:	f100 808f 	bmi.w	801f64a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f52c:	4571      	cmp	r1, lr
 801f52e:	f2c0 808c 	blt.w	801f64a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f532:	3301      	adds	r3, #1
 801f534:	f100 8089 	bmi.w	801f64a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f538:	429a      	cmp	r2, r3
 801f53a:	f2c0 8086 	blt.w	801f64a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f53e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f542:	46c8      	mov	r8, r9
 801f544:	f1bb 0f00 	cmp.w	fp, #0
 801f548:	f340 80a6 	ble.w	801f698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f54c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801f54e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f550:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f554:	689b      	ldr	r3, [r3, #8]
 801f556:	1422      	asrs	r2, r4, #16
 801f558:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f55c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f560:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f564:	f100 80e3 	bmi.w	801f72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f568:	f103 3aff 	add.w	sl, r3, #4294967295
 801f56c:	4552      	cmp	r2, sl
 801f56e:	f280 80de 	bge.w	801f72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f572:	f1bc 0f00 	cmp.w	ip, #0
 801f576:	f2c0 80da 	blt.w	801f72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f57a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f57e:	45d4      	cmp	ip, sl
 801f580:	f280 80d5 	bge.w	801f72e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f584:	b21b      	sxth	r3, r3
 801f586:	fb0c 2203 	mla	r2, ip, r3, r2
 801f58a:	9d07      	ldr	r5, [sp, #28]
 801f58c:	eb05 0a02 	add.w	sl, r5, r2
 801f590:	5caa      	ldrb	r2, [r5, r2]
 801f592:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f596:	2800      	cmp	r0, #0
 801f598:	f000 80c0 	beq.w	801f71c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f59c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f5a0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f5a4:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f5a6:	b151      	cbz	r1, 801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f5a8:	eb0a 0203 	add.w	r2, sl, r3
 801f5ac:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f5b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f5b4:	9309      	str	r3, [sp, #36]	@ 0x24
 801f5b6:	7853      	ldrb	r3, [r2, #1]
 801f5b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f5bc:	930c      	str	r3, [sp, #48]	@ 0x30
 801f5be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f5c0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f5c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f5c6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f5ca:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f5ce:	ea4c 0c03 	orr.w	ip, ip, r3
 801f5d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f5d4:	041b      	lsls	r3, r3, #16
 801f5d6:	fb10 f201 	smulbb	r2, r0, r1
 801f5da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f5de:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f5e2:	10d2      	asrs	r2, r2, #3
 801f5e4:	432b      	orrs	r3, r5
 801f5e6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f5ea:	4353      	muls	r3, r2
 801f5ec:	fb0a 330c 	mla	r3, sl, ip, r3
 801f5f0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f5f4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f5f8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f5fc:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f600:	f1c1 0c10 	rsb	ip, r1, #16
 801f604:	ebac 0c00 	sub.w	ip, ip, r0
 801f608:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f60c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f610:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f612:	0418      	lsls	r0, r3, #16
 801f614:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f618:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f61c:	4318      	orrs	r0, r3
 801f61e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f622:	fb02 c200 	mla	r2, r2, r0, ip
 801f626:	0d53      	lsrs	r3, r2, #21
 801f628:	0952      	lsrs	r2, r2, #5
 801f62a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f62e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f632:	431a      	orrs	r2, r3
 801f634:	f8a8 2000 	strh.w	r2, [r8]
 801f638:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f63a:	441c      	add	r4, r3
 801f63c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f63e:	f108 0802 	add.w	r8, r8, #2
 801f642:	441e      	add	r6, r3
 801f644:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f648:	e77c      	b.n	801f544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f64a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f64c:	441c      	add	r4, r3
 801f64e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f650:	441e      	add	r6, r3
 801f652:	9b06      	ldr	r3, [sp, #24]
 801f654:	3b01      	subs	r3, #1
 801f656:	9306      	str	r3, [sp, #24]
 801f658:	f109 0902 	add.w	r9, r9, #2
 801f65c:	e752      	b.n	801f504 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f65e:	d020      	beq.n	801f6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f660:	9b06      	ldr	r3, [sp, #24]
 801f662:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f664:	3b01      	subs	r3, #1
 801f666:	fb00 4003 	mla	r0, r0, r3, r4
 801f66a:	1400      	asrs	r0, r0, #16
 801f66c:	f53f af67 	bmi.w	801f53e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f670:	3901      	subs	r1, #1
 801f672:	4288      	cmp	r0, r1
 801f674:	f6bf af63 	bge.w	801f53e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f678:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f67a:	fb01 6303 	mla	r3, r1, r3, r6
 801f67e:	141b      	asrs	r3, r3, #16
 801f680:	f53f af5d 	bmi.w	801f53e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f684:	3a01      	subs	r2, #1
 801f686:	4293      	cmp	r3, r2
 801f688:	f6bf af59 	bge.w	801f53e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f68c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f690:	46ca      	mov	sl, r9
 801f692:	f1b8 0f00 	cmp.w	r8, #0
 801f696:	dc67      	bgt.n	801f768 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f698:	9b06      	ldr	r3, [sp, #24]
 801f69a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f69e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f6a2:	9b08      	ldr	r3, [sp, #32]
 801f6a4:	2b00      	cmp	r3, #0
 801f6a6:	f340 80d7 	ble.w	801f858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f6aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f6b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f6b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6c0:	eeb0 6a62 	vmov.f32	s12, s5
 801f6c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f6cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6d0:	ee16 4a10 	vmov	r4, s12
 801f6d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6d8:	eeb0 6a43 	vmov.f32	s12, s6
 801f6dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6e0:	ee12 2a90 	vmov	r2, s5
 801f6e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6ec:	ee13 2a10 	vmov	r2, s6
 801f6f0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f6f2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f6f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6f8:	9320      	str	r3, [sp, #128]	@ 0x80
 801f6fa:	9b08      	ldr	r3, [sp, #32]
 801f6fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f6fe:	3b01      	subs	r3, #1
 801f700:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f704:	9308      	str	r3, [sp, #32]
 801f706:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f708:	bf08      	it	eq
 801f70a:	4613      	moveq	r3, r2
 801f70c:	ee16 6a10 	vmov	r6, s12
 801f710:	9306      	str	r3, [sp, #24]
 801f712:	eeb0 3a67 	vmov.f32	s6, s15
 801f716:	eef0 2a47 	vmov.f32	s5, s14
 801f71a:	e6e4      	b.n	801f4e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f71c:	2900      	cmp	r1, #0
 801f71e:	f43f af4e 	beq.w	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f722:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f726:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f72a:	9309      	str	r3, [sp, #36]	@ 0x24
 801f72c:	e747      	b.n	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f72e:	f112 0a01 	adds.w	sl, r2, #1
 801f732:	d481      	bmi.n	801f638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f734:	4553      	cmp	r3, sl
 801f736:	f6ff af7f 	blt.w	801f638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f73a:	f11c 0a01 	adds.w	sl, ip, #1
 801f73e:	f53f af7b 	bmi.w	801f638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f742:	45d6      	cmp	lr, sl
 801f744:	f6ff af78 	blt.w	801f638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f748:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f74c:	b21b      	sxth	r3, r3
 801f74e:	fa0f f28e 	sxth.w	r2, lr
 801f752:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f756:	9201      	str	r2, [sp, #4]
 801f758:	9300      	str	r3, [sp, #0]
 801f75a:	9a07      	ldr	r2, [sp, #28]
 801f75c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801f75e:	463b      	mov	r3, r7
 801f760:	4641      	mov	r1, r8
 801f762:	f7ff fe21 	bl	801f3a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f766:	e767      	b.n	801f638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f768:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f76a:	9d07      	ldr	r5, [sp, #28]
 801f76c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f770:	1422      	asrs	r2, r4, #16
 801f772:	1431      	asrs	r1, r6, #16
 801f774:	fb03 2101 	mla	r1, r3, r1, r2
 801f778:	9a07      	ldr	r2, [sp, #28]
 801f77a:	440a      	add	r2, r1
 801f77c:	5c69      	ldrb	r1, [r5, r1]
 801f77e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f782:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f786:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f78a:	f1be 0f00 	cmp.w	lr, #0
 801f78e:	d05c      	beq.n	801f84a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f790:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f794:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f798:	950d      	str	r5, [sp, #52]	@ 0x34
 801f79a:	b150      	cbz	r0, 801f7b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f79c:	eb02 0c03 	add.w	ip, r2, r3
 801f7a0:	5cd3      	ldrb	r3, [r2, r3]
 801f7a2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f7a6:	930a      	str	r3, [sp, #40]	@ 0x28
 801f7a8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f7ac:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f7b0:	930e      	str	r3, [sp, #56]	@ 0x38
 801f7b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f7b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f7b6:	fb1e f200 	smulbb	r2, lr, r0
 801f7ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f7be:	10d2      	asrs	r2, r2, #3
 801f7c0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f7c4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f7c8:	ea4c 0c03 	orr.w	ip, ip, r3
 801f7cc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f7d0:	9311      	str	r3, [sp, #68]	@ 0x44
 801f7d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f7d4:	041b      	lsls	r3, r3, #16
 801f7d6:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801f7da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f7de:	ea43 030b 	orr.w	r3, r3, fp
 801f7e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f7e4:	4353      	muls	r3, r2
 801f7e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f7ea:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f7ee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f7f2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801f7f6:	ea43 0b01 	orr.w	fp, r3, r1
 801f7fa:	f1c0 0110 	rsb	r1, r0, #16
 801f7fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f800:	eba1 0e0e 	sub.w	lr, r1, lr
 801f804:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f808:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f80c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f810:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801f814:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f818:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f81c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f820:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f824:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f828:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f82c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f830:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f834:	ea43 0c0c 	orr.w	ip, r3, ip
 801f838:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f83a:	f82a cb02 	strh.w	ip, [sl], #2
 801f83e:	441c      	add	r4, r3
 801f840:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f842:	f108 38ff 	add.w	r8, r8, #4294967295
 801f846:	441e      	add	r6, r3
 801f848:	e723      	b.n	801f692 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f84a:	2800      	cmp	r0, #0
 801f84c:	d0b1      	beq.n	801f7b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f84e:	5cd3      	ldrb	r3, [r2, r3]
 801f850:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f854:	930a      	str	r3, [sp, #40]	@ 0x28
 801f856:	e7ac      	b.n	801f7b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f858:	b013      	add	sp, #76	@ 0x4c
 801f85a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f85e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f85e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f862:	880d      	ldrh	r5, [r1, #0]
 801f864:	b087      	sub	sp, #28
 801f866:	10ef      	asrs	r7, r5, #3
 801f868:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f86c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f870:	00ed      	lsls	r5, r5, #3
 801f872:	9701      	str	r7, [sp, #4]
 801f874:	b2ed      	uxtb	r5, r5
 801f876:	9502      	str	r5, [sp, #8]
 801f878:	9d01      	ldr	r5, [sp, #4]
 801f87a:	9103      	str	r1, [sp, #12]
 801f87c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801f880:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801f884:	9902      	ldr	r1, [sp, #8]
 801f886:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801f88a:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801f88e:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801f892:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801f896:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801f89a:	022d      	lsls	r5, r5, #8
 801f89c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f8a0:	fb06 0709 	mla	r7, r6, r9, r0
 801f8a4:	430d      	orrs	r5, r1
 801f8a6:	2e00      	cmp	r6, #0
 801f8a8:	eb02 0c07 	add.w	ip, r2, r7
 801f8ac:	9505      	str	r5, [sp, #20]
 801f8ae:	f2c0 80b6 	blt.w	801fa1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f8b2:	45b3      	cmp	fp, r6
 801f8b4:	f340 80b3 	ble.w	801fa1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f8b8:	2800      	cmp	r0, #0
 801f8ba:	f2c0 80ae 	blt.w	801fa1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f8be:	4581      	cmp	r9, r0
 801f8c0:	f340 80ab 	ble.w	801fa1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f8c4:	5dd7      	ldrb	r7, [r2, r7]
 801f8c6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f8ca:	441f      	add	r7, r3
 801f8cc:	1c42      	adds	r2, r0, #1
 801f8ce:	f100 80a9 	bmi.w	801fa24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f8d2:	4591      	cmp	r9, r2
 801f8d4:	f340 80a6 	ble.w	801fa24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f8d8:	2c00      	cmp	r4, #0
 801f8da:	f000 80a3 	beq.w	801fa24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f8de:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f8e2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f8e6:	441d      	add	r5, r3
 801f8e8:	3601      	adds	r6, #1
 801f8ea:	f100 809f 	bmi.w	801fa2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f8ee:	45b3      	cmp	fp, r6
 801f8f0:	f340 809c 	ble.w	801fa2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f8f4:	f1be 0f00 	cmp.w	lr, #0
 801f8f8:	f000 8098 	beq.w	801fa2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f8fc:	2800      	cmp	r0, #0
 801f8fe:	f2c0 8093 	blt.w	801fa28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f902:	4581      	cmp	r9, r0
 801f904:	f340 8090 	ble.w	801fa28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f908:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f90c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f910:	441e      	add	r6, r3
 801f912:	3001      	adds	r0, #1
 801f914:	f100 808d 	bmi.w	801fa32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f918:	4581      	cmp	r9, r0
 801f91a:	f340 808a 	ble.w	801fa32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f91e:	2c00      	cmp	r4, #0
 801f920:	f000 8087 	beq.w	801fa32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f924:	44e1      	add	r9, ip
 801f926:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f92a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f92e:	4413      	add	r3, r2
 801f930:	b2a4      	uxth	r4, r4
 801f932:	fa1f fe8e 	uxth.w	lr, lr
 801f936:	fb04 fb0e 	mul.w	fp, r4, lr
 801f93a:	0124      	lsls	r4, r4, #4
 801f93c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f940:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801f944:	eba4 040b 	sub.w	r4, r4, fp
 801f948:	fa1f f08e 	uxth.w	r0, lr
 801f94c:	b2a2      	uxth	r2, r4
 801f94e:	78ac      	ldrb	r4, [r5, #2]
 801f950:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f954:	9901      	ldr	r1, [sp, #4]
 801f956:	eba9 0900 	sub.w	r9, r9, r0
 801f95a:	fa1f f989 	uxth.w	r9, r9
 801f95e:	4354      	muls	r4, r2
 801f960:	fb09 440c 	mla	r4, r9, ip, r4
 801f964:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f968:	fb00 440c 	mla	r4, r0, ip, r4
 801f96c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f970:	fa1f fe88 	uxth.w	lr, r8
 801f974:	ea6f 0808 	mvn.w	r8, r8
 801f978:	fa5f f888 	uxtb.w	r8, r8
 801f97c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f980:	fb1a fa08 	smulbb	sl, sl, r8
 801f984:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f988:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f98c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f990:	787c      	ldrb	r4, [r7, #1]
 801f992:	782d      	ldrb	r5, [r5, #0]
 801f994:	783f      	ldrb	r7, [r7, #0]
 801f996:	fb02 fa0a 	mul.w	sl, r2, sl
 801f99a:	fb09 aa04 	mla	sl, r9, r4, sl
 801f99e:	7874      	ldrb	r4, [r6, #1]
 801f9a0:	436a      	muls	r2, r5
 801f9a2:	7835      	ldrb	r5, [r6, #0]
 801f9a4:	fb00 aa04 	mla	sl, r0, r4, sl
 801f9a8:	fb09 2207 	mla	r2, r9, r7, r2
 801f9ac:	785c      	ldrb	r4, [r3, #1]
 801f9ae:	781b      	ldrb	r3, [r3, #0]
 801f9b0:	fb00 2005 	mla	r0, r0, r5, r2
 801f9b4:	fb0b a404 	mla	r4, fp, r4, sl
 801f9b8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f9bc:	9b02      	ldr	r3, [sp, #8]
 801f9be:	fb11 fa08 	smulbb	sl, r1, r8
 801f9c2:	fa1f fc8c 	uxth.w	ip, ip
 801f9c6:	fb13 f808 	smulbb	r8, r3, r8
 801f9ca:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f9ce:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f9d2:	fb04 a40e 	mla	r4, r4, lr, sl
 801f9d6:	f10c 0301 	add.w	r3, ip, #1
 801f9da:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f9de:	fa1f fe8e 	uxth.w	lr, lr
 801f9e2:	b2a4      	uxth	r4, r4
 801f9e4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f9e8:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801f9ec:	f104 0a01 	add.w	sl, r4, #1
 801f9f0:	f10e 0c01 	add.w	ip, lr, #1
 801f9f4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f9f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f9fc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fa00:	0964      	lsrs	r4, r4, #5
 801fa02:	ea4c 0c03 	orr.w	ip, ip, r3
 801fa06:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801fa0a:	9b03      	ldr	r3, [sp, #12]
 801fa0c:	ea4c 0c04 	orr.w	ip, ip, r4
 801fa10:	f8a3 c000 	strh.w	ip, [r3]
 801fa14:	b007      	add	sp, #28
 801fa16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa1a:	af05      	add	r7, sp, #20
 801fa1c:	e756      	b.n	801f8cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801fa1e:	ad05      	add	r5, sp, #20
 801fa20:	462f      	mov	r7, r5
 801fa22:	e761      	b.n	801f8e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fa24:	ad05      	add	r5, sp, #20
 801fa26:	e75f      	b.n	801f8e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fa28:	ae05      	add	r6, sp, #20
 801fa2a:	e772      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801fa2c:	ab05      	add	r3, sp, #20
 801fa2e:	461e      	mov	r6, r3
 801fa30:	e77e      	b.n	801f930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801fa32:	ab05      	add	r3, sp, #20
 801fa34:	e77c      	b.n	801f930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801fa36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa3a:	b095      	sub	sp, #84	@ 0x54
 801fa3c:	9212      	str	r2, [sp, #72]	@ 0x48
 801fa3e:	9309      	str	r3, [sp, #36]	@ 0x24
 801fa40:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fa42:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801fa46:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fa48:	910e      	str	r1, [sp, #56]	@ 0x38
 801fa4a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801fa4e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801fa50:	6850      	ldr	r0, [r2, #4]
 801fa52:	6812      	ldr	r2, [r2, #0]
 801fa54:	fb00 1303 	mla	r3, r0, r3, r1
 801fa58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa5c:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa5e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fa60:	681b      	ldr	r3, [r3, #0]
 801fa62:	930d      	str	r3, [sp, #52]	@ 0x34
 801fa64:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fa66:	685c      	ldr	r4, [r3, #4]
 801fa68:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801fa6a:	43db      	mvns	r3, r3
 801fa6c:	b2db      	uxtb	r3, r3
 801fa6e:	3404      	adds	r4, #4
 801fa70:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fa72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fa74:	2b00      	cmp	r3, #0
 801fa76:	dc03      	bgt.n	801fa80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fa78:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801fa7a:	2b00      	cmp	r3, #0
 801fa7c:	f340 8255 	ble.w	801ff2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fa80:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fa82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa86:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa8a:	1e48      	subs	r0, r1, #1
 801fa8c:	1e55      	subs	r5, r2, #1
 801fa8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa90:	2b00      	cmp	r3, #0
 801fa92:	f340 80f9 	ble.w	801fc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fa96:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801fa98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa9a:	1436      	asrs	r6, r6, #16
 801fa9c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801faa0:	d406      	bmi.n	801fab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801faa2:	4286      	cmp	r6, r0
 801faa4:	da04      	bge.n	801fab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801faa6:	2b00      	cmp	r3, #0
 801faa8:	db02      	blt.n	801fab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801faaa:	42ab      	cmp	r3, r5
 801faac:	f2c0 80ed 	blt.w	801fc8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801fab0:	3601      	adds	r6, #1
 801fab2:	f100 80da 	bmi.w	801fc6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fab6:	42b1      	cmp	r1, r6
 801fab8:	f2c0 80d7 	blt.w	801fc6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fabc:	3301      	adds	r3, #1
 801fabe:	f100 80d4 	bmi.w	801fc6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fac2:	429a      	cmp	r2, r3
 801fac4:	f2c0 80d1 	blt.w	801fc6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fac8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801faca:	9311      	str	r3, [sp, #68]	@ 0x44
 801facc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801face:	930c      	str	r3, [sp, #48]	@ 0x30
 801fad0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fad2:	2b00      	cmp	r3, #0
 801fad4:	f340 80fa 	ble.w	801fccc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801fad8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801fada:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fadc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fade:	68c6      	ldr	r6, [r0, #12]
 801fae0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801fae2:	141d      	asrs	r5, r3, #16
 801fae4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fae8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801faea:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801faec:	1400      	asrs	r0, r0, #16
 801faee:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801faf2:	6892      	ldr	r2, [r2, #8]
 801faf4:	f100 813e 	bmi.w	801fd74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801faf8:	1e57      	subs	r7, r2, #1
 801fafa:	42b8      	cmp	r0, r7
 801fafc:	f280 813a 	bge.w	801fd74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fb00:	2d00      	cmp	r5, #0
 801fb02:	f2c0 8137 	blt.w	801fd74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fb06:	1e77      	subs	r7, r6, #1
 801fb08:	42bd      	cmp	r5, r7
 801fb0a:	f280 8133 	bge.w	801fd74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fb0e:	b212      	sxth	r2, r2
 801fb10:	fb05 0002 	mla	r0, r5, r2, r0
 801fb14:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fb16:	f815 a000 	ldrb.w	sl, [r5, r0]
 801fb1a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801fb1e:	182e      	adds	r6, r5, r0
 801fb20:	eb04 050a 	add.w	r5, r4, sl
 801fb24:	2b00      	cmp	r3, #0
 801fb26:	f000 8117 	beq.w	801fd58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801fb2a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801fb2e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fb32:	44a4      	add	ip, r4
 801fb34:	2900      	cmp	r1, #0
 801fb36:	f000 8117 	beq.w	801fd68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801fb3a:	18b0      	adds	r0, r6, r2
 801fb3c:	5cb2      	ldrb	r2, [r6, r2]
 801fb3e:	7840      	ldrb	r0, [r0, #1]
 801fb40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb44:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb48:	4422      	add	r2, r4
 801fb4a:	4420      	add	r0, r4
 801fb4c:	b29b      	uxth	r3, r3
 801fb4e:	b289      	uxth	r1, r1
 801fb50:	fb03 f901 	mul.w	r9, r3, r1
 801fb54:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb58:	011b      	lsls	r3, r3, #4
 801fb5a:	b289      	uxth	r1, r1
 801fb5c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801fb60:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fb64:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801fb66:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801fb6a:	f8b6 e000 	ldrh.w	lr, [r6]
 801fb6e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801fb72:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801fb76:	eba3 0309 	sub.w	r3, r3, r9
 801fb7a:	b29b      	uxth	r3, r3
 801fb7c:	eba8 0801 	sub.w	r8, r8, r1
 801fb80:	fa1f f888 	uxth.w	r8, r8
 801fb84:	435f      	muls	r7, r3
 801fb86:	fb08 770b 	mla	r7, r8, fp, r7
 801fb8a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fb8e:	9310      	str	r3, [sp, #64]	@ 0x40
 801fb90:	fb01 770b 	mla	r7, r1, fp, r7
 801fb94:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fb98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fb9a:	fb09 770b 	mla	r7, r9, fp, r7
 801fb9e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801fba2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801fba6:	fb1b fb03 	smulbb	fp, fp, r3
 801fbaa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fbae:	fb07 b706 	mla	r7, r7, r6, fp
 801fbb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fbb4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fbb8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fbbc:	f89c c000 	ldrb.w	ip, [ip]
 801fbc0:	435d      	muls	r5, r3
 801fbc2:	fb08 550b 	mla	r5, r8, fp, r5
 801fbc6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fbca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fbcc:	fb01 550b 	mla	r5, r1, fp, r5
 801fbd0:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fbd4:	fb09 550b 	mla	r5, r9, fp, r5
 801fbd8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801fbdc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801fbe0:	fb1b fb03 	smulbb	fp, fp, r3
 801fbe4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fbe6:	fb03 f30c 	mul.w	r3, r3, ip
 801fbea:	f892 c000 	ldrb.w	ip, [r2]
 801fbee:	fb08 330a 	mla	r3, r8, sl, r3
 801fbf2:	fb01 330c 	mla	r3, r1, ip, r3
 801fbf6:	f890 c000 	ldrb.w	ip, [r0]
 801fbfa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fbfe:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fc02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fc04:	fa5f fe8e 	uxtb.w	lr, lr
 801fc08:	b2bf      	uxth	r7, r7
 801fc0a:	fb1e fe03 	smulbb	lr, lr, r3
 801fc0e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fc12:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fc16:	fb05 b506 	mla	r5, r5, r6, fp
 801fc1a:	1c7b      	adds	r3, r7, #1
 801fc1c:	fb0c e606 	mla	r6, ip, r6, lr
 801fc20:	b2ad      	uxth	r5, r5
 801fc22:	b2b6      	uxth	r6, r6
 801fc24:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fc28:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801fc2c:	f105 0b01 	add.w	fp, r5, #1
 801fc30:	1c77      	adds	r7, r6, #1
 801fc32:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801fc36:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fc3a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fc3e:	096d      	lsrs	r5, r5, #5
 801fc40:	431f      	orrs	r7, r3
 801fc42:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fc46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fc48:	433d      	orrs	r5, r7
 801fc4a:	801d      	strh	r5, [r3, #0]
 801fc4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fc4e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801fc50:	3302      	adds	r3, #2
 801fc52:	930c      	str	r3, [sp, #48]	@ 0x30
 801fc54:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fc56:	4413      	add	r3, r2
 801fc58:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fc5a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801fc5c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc5e:	4413      	add	r3, r2
 801fc60:	9320      	str	r3, [sp, #128]	@ 0x80
 801fc62:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fc64:	3b01      	subs	r3, #1
 801fc66:	9311      	str	r3, [sp, #68]	@ 0x44
 801fc68:	e732      	b.n	801fad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fc6a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fc6c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801fc6e:	4433      	add	r3, r6
 801fc70:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fc72:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801fc74:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc76:	4433      	add	r3, r6
 801fc78:	9320      	str	r3, [sp, #128]	@ 0x80
 801fc7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc7c:	3b01      	subs	r3, #1
 801fc7e:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fc82:	3302      	adds	r3, #2
 801fc84:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc86:	e702      	b.n	801fa8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fc88:	d027      	beq.n	801fcda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fc8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc8c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801fc8e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801fc90:	3b01      	subs	r3, #1
 801fc92:	fb00 5003 	mla	r0, r0, r3, r5
 801fc96:	1400      	asrs	r0, r0, #16
 801fc98:	f53f af16 	bmi.w	801fac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc9c:	3901      	subs	r1, #1
 801fc9e:	4288      	cmp	r0, r1
 801fca0:	f6bf af12 	bge.w	801fac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fca4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801fca6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801fca8:	fb01 0303 	mla	r3, r1, r3, r0
 801fcac:	141b      	asrs	r3, r3, #16
 801fcae:	f53f af0b 	bmi.w	801fac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fcb2:	3a01      	subs	r2, #1
 801fcb4:	4293      	cmp	r3, r2
 801fcb6:	f6bf af07 	bge.w	801fac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fcba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fcbc:	9311      	str	r3, [sp, #68]	@ 0x44
 801fcbe:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801fcc2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fcc4:	930c      	str	r3, [sp, #48]	@ 0x30
 801fcc6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801fcc8:	2b00      	cmp	r3, #0
 801fcca:	dc70      	bgt.n	801fdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fccc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fcce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801fcd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fcd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fcd8:	930a      	str	r3, [sp, #40]	@ 0x28
 801fcda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fcdc:	2b00      	cmp	r3, #0
 801fcde:	f340 8124 	ble.w	801ff2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fce2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fce6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fcea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fcee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fcf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fcf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fcf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fcfc:	eef0 6a62 	vmov.f32	s13, s5
 801fd00:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fd04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fd08:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fd0c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801fd10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fd14:	eef0 6a43 	vmov.f32	s13, s6
 801fd18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fd1c:	ee12 2a90 	vmov	r2, s5
 801fd20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fd24:	fb92 f3f3 	sdiv	r3, r2, r3
 801fd28:	ee13 2a10 	vmov	r2, s6
 801fd2c:	9321      	str	r3, [sp, #132]	@ 0x84
 801fd2e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fd30:	fb92 f3f3 	sdiv	r3, r2, r3
 801fd34:	9322      	str	r3, [sp, #136]	@ 0x88
 801fd36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fd38:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801fd3a:	3b01      	subs	r3, #1
 801fd3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fd40:	930e      	str	r3, [sp, #56]	@ 0x38
 801fd42:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801fd44:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801fd48:	bf08      	it	eq
 801fd4a:	4613      	moveq	r3, r2
 801fd4c:	9309      	str	r3, [sp, #36]	@ 0x24
 801fd4e:	eeb0 3a67 	vmov.f32	s6, s15
 801fd52:	eef0 2a47 	vmov.f32	s5, s14
 801fd56:	e68c      	b.n	801fa72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801fd58:	b149      	cbz	r1, 801fd6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801fd5a:	5cb2      	ldrb	r2, [r6, r2]
 801fd5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd60:	4422      	add	r2, r4
 801fd62:	4628      	mov	r0, r5
 801fd64:	46ac      	mov	ip, r5
 801fd66:	e6f1      	b.n	801fb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd68:	4628      	mov	r0, r5
 801fd6a:	462a      	mov	r2, r5
 801fd6c:	e6ee      	b.n	801fb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fd6e:	4628      	mov	r0, r5
 801fd70:	462a      	mov	r2, r5
 801fd72:	e7f7      	b.n	801fd64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801fd74:	1c47      	adds	r7, r0, #1
 801fd76:	f53f af69 	bmi.w	801fc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fd7a:	42ba      	cmp	r2, r7
 801fd7c:	f6ff af66 	blt.w	801fc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fd80:	1c6f      	adds	r7, r5, #1
 801fd82:	f53f af63 	bmi.w	801fc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fd86:	42be      	cmp	r6, r7
 801fd88:	f6ff af60 	blt.w	801fc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fd8c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801fd8e:	9002      	str	r0, [sp, #8]
 801fd90:	b236      	sxth	r6, r6
 801fd92:	b212      	sxth	r2, r2
 801fd94:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801fd98:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801fd9c:	9200      	str	r2, [sp, #0]
 801fd9e:	9601      	str	r6, [sp, #4]
 801fda0:	4623      	mov	r3, r4
 801fda2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801fda6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801fda8:	f7ff fd59 	bl	801f85e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801fdac:	e74e      	b.n	801fc4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801fdae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fdb0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801fdb2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801fdb4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fdb6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fdba:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801fdbc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fdc0:	142d      	asrs	r5, r5, #16
 801fdc2:	1400      	asrs	r0, r0, #16
 801fdc4:	fb02 5000 	mla	r0, r2, r0, r5
 801fdc8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fdca:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fdce:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fdd2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fdd6:	182e      	adds	r6, r5, r0
 801fdd8:	eb04 0509 	add.w	r5, r4, r9
 801fddc:	2b00      	cmp	r3, #0
 801fdde:	f000 8096 	beq.w	801ff0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fde2:	7877      	ldrb	r7, [r6, #1]
 801fde4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fde8:	4427      	add	r7, r4
 801fdea:	2900      	cmp	r1, #0
 801fdec:	f000 8097 	beq.w	801ff1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801fdf0:	18b0      	adds	r0, r6, r2
 801fdf2:	5cb2      	ldrb	r2, [r6, r2]
 801fdf4:	7840      	ldrb	r0, [r0, #1]
 801fdf6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fdfa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fdfe:	4422      	add	r2, r4
 801fe00:	4420      	add	r0, r4
 801fe02:	b29b      	uxth	r3, r3
 801fe04:	b289      	uxth	r1, r1
 801fe06:	fb03 f801 	mul.w	r8, r3, r1
 801fe0a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801fe0c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fe10:	f8b6 c000 	ldrh.w	ip, [r6]
 801fe14:	78be      	ldrb	r6, [r7, #2]
 801fe16:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fe1a:	011b      	lsls	r3, r3, #4
 801fe1c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fe20:	b289      	uxth	r1, r1
 801fe22:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801fe26:	eba3 0308 	sub.w	r3, r3, r8
 801fe2a:	b29b      	uxth	r3, r3
 801fe2c:	ebae 0e01 	sub.w	lr, lr, r1
 801fe30:	fa1f fe8e 	uxth.w	lr, lr
 801fe34:	435e      	muls	r6, r3
 801fe36:	fb0e 660b 	mla	r6, lr, fp, r6
 801fe3a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fe3e:	9310      	str	r3, [sp, #64]	@ 0x40
 801fe40:	fb01 660b 	mla	r6, r1, fp, r6
 801fe44:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fe48:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fe4a:	fb08 660b 	mla	r6, r8, fp, r6
 801fe4e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fe52:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801fe56:	fb1b fb03 	smulbb	fp, fp, r3
 801fe5a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fe5e:	fb06 b60a 	mla	r6, r6, sl, fp
 801fe62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fe64:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fe68:	787d      	ldrb	r5, [r7, #1]
 801fe6a:	783f      	ldrb	r7, [r7, #0]
 801fe6c:	435d      	muls	r5, r3
 801fe6e:	fb0e 550b 	mla	r5, lr, fp, r5
 801fe72:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fe76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fe78:	fb01 550b 	mla	r5, r1, fp, r5
 801fe7c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fe80:	fb08 550b 	mla	r5, r8, fp, r5
 801fe84:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fe88:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801fe8c:	fb1b fb03 	smulbb	fp, fp, r3
 801fe90:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801fe92:	437b      	muls	r3, r7
 801fe94:	7817      	ldrb	r7, [r2, #0]
 801fe96:	fb0e 3309 	mla	r3, lr, r9, r3
 801fe9a:	fb01 3307 	mla	r3, r1, r7, r3
 801fe9e:	7807      	ldrb	r7, [r0, #0]
 801fea0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fea4:	fb08 3707 	mla	r7, r8, r7, r3
 801fea8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801feaa:	fa5f fc8c 	uxtb.w	ip, ip
 801feae:	fb1c fc03 	smulbb	ip, ip, r3
 801feb2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801feb6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801feba:	fb05 b50a 	mla	r5, r5, sl, fp
 801febe:	fb07 c70a 	mla	r7, r7, sl, ip
 801fec2:	b2b6      	uxth	r6, r6
 801fec4:	b2ad      	uxth	r5, r5
 801fec6:	b2bf      	uxth	r7, r7
 801fec8:	1c73      	adds	r3, r6, #1
 801feca:	1c7a      	adds	r2, r7, #1
 801fecc:	f105 0b01 	add.w	fp, r5, #1
 801fed0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fed4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fed8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fedc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fee0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801fee4:	096d      	lsrs	r5, r5, #5
 801fee6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fee8:	4316      	orrs	r6, r2
 801feea:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801feee:	432e      	orrs	r6, r5
 801fef0:	f823 6b02 	strh.w	r6, [r3], #2
 801fef4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801fef6:	930c      	str	r3, [sp, #48]	@ 0x30
 801fef8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fefa:	4413      	add	r3, r2
 801fefc:	931f      	str	r3, [sp, #124]	@ 0x7c
 801fefe:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ff00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ff02:	4413      	add	r3, r2
 801ff04:	9320      	str	r3, [sp, #128]	@ 0x80
 801ff06:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ff08:	3b01      	subs	r3, #1
 801ff0a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ff0c:	e6db      	b.n	801fcc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ff0e:	b149      	cbz	r1, 801ff24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ff10:	5cb2      	ldrb	r2, [r6, r2]
 801ff12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff16:	4422      	add	r2, r4
 801ff18:	4628      	mov	r0, r5
 801ff1a:	462f      	mov	r7, r5
 801ff1c:	e771      	b.n	801fe02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ff1e:	4628      	mov	r0, r5
 801ff20:	462a      	mov	r2, r5
 801ff22:	e76e      	b.n	801fe02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ff24:	4628      	mov	r0, r5
 801ff26:	462a      	mov	r2, r5
 801ff28:	e7f7      	b.n	801ff1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ff2a:	b015      	add	sp, #84	@ 0x54
 801ff2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ff30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ff30:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff34:	880f      	ldrh	r7, [r1, #0]
 801ff36:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801ff3a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ff3e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801ff42:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ff46:	023c      	lsls	r4, r7, #8
 801ff48:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801ff4c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801ff50:	017c      	lsls	r4, r7, #5
 801ff52:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801ff56:	00ff      	lsls	r7, r7, #3
 801ff58:	ea4b 0404 	orr.w	r4, fp, r4
 801ff5c:	b2ff      	uxtb	r7, r7
 801ff5e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801ff62:	4327      	orrs	r7, r4
 801ff64:	2d00      	cmp	r5, #0
 801ff66:	eb02 080a 	add.w	r8, r2, sl
 801ff6a:	9701      	str	r7, [sp, #4]
 801ff6c:	db7e      	blt.n	802006c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ff6e:	45a9      	cmp	r9, r5
 801ff70:	dd7c      	ble.n	802006c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ff72:	f1bc 0f00 	cmp.w	ip, #0
 801ff76:	db77      	blt.n	8020068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ff78:	45e6      	cmp	lr, ip
 801ff7a:	dd75      	ble.n	8020068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ff7c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801ff80:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ff84:	441f      	add	r7, r3
 801ff86:	f11c 0201 	adds.w	r2, ip, #1
 801ff8a:	d472      	bmi.n	8020072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ff8c:	4596      	cmp	lr, r2
 801ff8e:	dd70      	ble.n	8020072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ff90:	2800      	cmp	r0, #0
 801ff92:	d06e      	beq.n	8020072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ff94:	f898 4001 	ldrb.w	r4, [r8, #1]
 801ff98:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ff9c:	441c      	add	r4, r3
 801ff9e:	3501      	adds	r5, #1
 801ffa0:	d46b      	bmi.n	802007a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ffa2:	45a9      	cmp	r9, r5
 801ffa4:	dd69      	ble.n	802007a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ffa6:	2e00      	cmp	r6, #0
 801ffa8:	d067      	beq.n	802007a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ffaa:	f1bc 0f00 	cmp.w	ip, #0
 801ffae:	db62      	blt.n	8020076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ffb0:	45e6      	cmp	lr, ip
 801ffb2:	dd60      	ble.n	8020076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ffb4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801ffb8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ffbc:	441d      	add	r5, r3
 801ffbe:	f11c 0201 	adds.w	r2, ip, #1
 801ffc2:	d45d      	bmi.n	8020080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ffc4:	4596      	cmp	lr, r2
 801ffc6:	dd5b      	ble.n	8020080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ffc8:	2800      	cmp	r0, #0
 801ffca:	d059      	beq.n	8020080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ffcc:	44c6      	add	lr, r8
 801ffce:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ffd2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ffd6:	4413      	add	r3, r2
 801ffd8:	b280      	uxth	r0, r0
 801ffda:	b2b2      	uxth	r2, r6
 801ffdc:	fb00 f602 	mul.w	r6, r0, r2
 801ffe0:	0100      	lsls	r0, r0, #4
 801ffe2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801ffe6:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801ffea:	1b80      	subs	r0, r0, r6
 801ffec:	fa1f fc82 	uxth.w	ip, r2
 801fff0:	b282      	uxth	r2, r0
 801fff2:	78a0      	ldrb	r0, [r4, #2]
 801fff4:	f897 e002 	ldrb.w	lr, [r7, #2]
 801fff8:	f897 9000 	ldrb.w	r9, [r7]
 801fffc:	787f      	ldrb	r7, [r7, #1]
 801fffe:	eba8 080c 	sub.w	r8, r8, ip
 8020002:	fa1f f888 	uxth.w	r8, r8
 8020006:	4350      	muls	r0, r2
 8020008:	fb08 0e0e 	mla	lr, r8, lr, r0
 802000c:	78a8      	ldrb	r0, [r5, #2]
 802000e:	fb0c e000 	mla	r0, ip, r0, lr
 8020012:	f893 e002 	ldrb.w	lr, [r3, #2]
 8020016:	fb06 0e0e 	mla	lr, r6, lr, r0
 802001a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 802001e:	f894 e000 	ldrb.w	lr, [r4]
 8020022:	fb02 fe0e 	mul.w	lr, r2, lr
 8020026:	fb08 e909 	mla	r9, r8, r9, lr
 802002a:	f895 e000 	ldrb.w	lr, [r5]
 802002e:	fb0c 990e 	mla	r9, ip, lr, r9
 8020032:	f893 e000 	ldrb.w	lr, [r3]
 8020036:	785b      	ldrb	r3, [r3, #1]
 8020038:	fb06 9e0e 	mla	lr, r6, lr, r9
 802003c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020040:	ea4e 0e00 	orr.w	lr, lr, r0
 8020044:	7860      	ldrb	r0, [r4, #1]
 8020046:	4350      	muls	r0, r2
 8020048:	786a      	ldrb	r2, [r5, #1]
 802004a:	fb08 0007 	mla	r0, r8, r7, r0
 802004e:	fb0c 0202 	mla	r2, ip, r2, r0
 8020052:	fb06 2303 	mla	r3, r6, r3, r2
 8020056:	095b      	lsrs	r3, r3, #5
 8020058:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802005c:	ea4e 0303 	orr.w	r3, lr, r3
 8020060:	800b      	strh	r3, [r1, #0]
 8020062:	b003      	add	sp, #12
 8020064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020068:	af01      	add	r7, sp, #4
 802006a:	e78c      	b.n	801ff86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 802006c:	ac01      	add	r4, sp, #4
 802006e:	4627      	mov	r7, r4
 8020070:	e795      	b.n	801ff9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020072:	ac01      	add	r4, sp, #4
 8020074:	e793      	b.n	801ff9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8020076:	ad01      	add	r5, sp, #4
 8020078:	e7a1      	b.n	801ffbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802007a:	ab01      	add	r3, sp, #4
 802007c:	461d      	mov	r5, r3
 802007e:	e7ab      	b.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020080:	ab01      	add	r3, sp, #4
 8020082:	e7a9      	b.n	801ffd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08020084 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020088:	b08f      	sub	sp, #60	@ 0x3c
 802008a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 802008e:	920c      	str	r2, [sp, #48]	@ 0x30
 8020090:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8020092:	910a      	str	r1, [sp, #40]	@ 0x28
 8020094:	9306      	str	r3, [sp, #24]
 8020096:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 802009a:	900d      	str	r0, [sp, #52]	@ 0x34
 802009c:	6850      	ldr	r0, [r2, #4]
 802009e:	6812      	ldr	r2, [r2, #0]
 80200a0:	fb00 1303 	mla	r3, r0, r3, r1
 80200a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80200a8:	9307      	str	r3, [sp, #28]
 80200aa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80200ac:	681b      	ldr	r3, [r3, #0]
 80200ae:	9308      	str	r3, [sp, #32]
 80200b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80200b2:	685c      	ldr	r4, [r3, #4]
 80200b4:	3404      	adds	r4, #4
 80200b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80200b8:	2b00      	cmp	r3, #0
 80200ba:	dc03      	bgt.n	80200c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80200bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80200be:	2b00      	cmp	r3, #0
 80200c0:	f340 81d6 	ble.w	8020470 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80200c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80200c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80200ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80200ce:	1e48      	subs	r0, r1, #1
 80200d0:	1e56      	subs	r6, r2, #1
 80200d2:	9b06      	ldr	r3, [sp, #24]
 80200d4:	2b00      	cmp	r3, #0
 80200d6:	f340 80b7 	ble.w	8020248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80200da:	ea5f 472b 	movs.w	r7, fp, asr #16
 80200de:	ea4f 4325 	mov.w	r3, r5, asr #16
 80200e2:	d406      	bmi.n	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80200e4:	4287      	cmp	r7, r0
 80200e6:	da04      	bge.n	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80200e8:	2b00      	cmp	r3, #0
 80200ea:	db02      	blt.n	80200f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80200ec:	42b3      	cmp	r3, r6
 80200ee:	f2c0 80ac 	blt.w	802024a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80200f2:	3701      	adds	r7, #1
 80200f4:	f100 809d 	bmi.w	8020232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80200f8:	42b9      	cmp	r1, r7
 80200fa:	f2c0 809a 	blt.w	8020232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80200fe:	3301      	adds	r3, #1
 8020100:	f100 8097 	bmi.w	8020232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020104:	429a      	cmp	r2, r3
 8020106:	f2c0 8094 	blt.w	8020232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802010a:	9b06      	ldr	r3, [sp, #24]
 802010c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802010e:	9b07      	ldr	r3, [sp, #28]
 8020110:	9309      	str	r3, [sp, #36]	@ 0x24
 8020112:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020114:	2b00      	cmp	r3, #0
 8020116:	f340 80b5 	ble.w	8020284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802011a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802011c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802011e:	68c7      	ldr	r7, [r0, #12]
 8020120:	6892      	ldr	r2, [r2, #8]
 8020122:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020126:	ea4f 4625 	mov.w	r6, r5, asr #16
 802012a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 802012e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020132:	f100 80fb 	bmi.w	802032c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020136:	f102 3cff 	add.w	ip, r2, #4294967295
 802013a:	4560      	cmp	r0, ip
 802013c:	f280 80f6 	bge.w	802032c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020140:	2e00      	cmp	r6, #0
 8020142:	f2c0 80f3 	blt.w	802032c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020146:	f107 3cff 	add.w	ip, r7, #4294967295
 802014a:	4566      	cmp	r6, ip
 802014c:	f280 80ee 	bge.w	802032c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020150:	b212      	sxth	r2, r2
 8020152:	fb06 0002 	mla	r0, r6, r2, r0
 8020156:	9e08      	ldr	r6, [sp, #32]
 8020158:	1837      	adds	r7, r6, r0
 802015a:	5c30      	ldrb	r0, [r6, r0]
 802015c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020160:	eb04 0c08 	add.w	ip, r4, r8
 8020164:	2b00      	cmp	r3, #0
 8020166:	f000 80d3 	beq.w	8020310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802016a:	787e      	ldrb	r6, [r7, #1]
 802016c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020170:	4426      	add	r6, r4
 8020172:	2900      	cmp	r1, #0
 8020174:	f000 80d4 	beq.w	8020320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020178:	18b8      	adds	r0, r7, r2
 802017a:	5cba      	ldrb	r2, [r7, r2]
 802017c:	7840      	ldrb	r0, [r0, #1]
 802017e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020182:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020186:	4422      	add	r2, r4
 8020188:	4420      	add	r0, r4
 802018a:	b29b      	uxth	r3, r3
 802018c:	b289      	uxth	r1, r1
 802018e:	fb03 f901 	mul.w	r9, r3, r1
 8020192:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020196:	011b      	lsls	r3, r3, #4
 8020198:	b289      	uxth	r1, r1
 802019a:	78b7      	ldrb	r7, [r6, #2]
 802019c:	f89c a002 	ldrb.w	sl, [ip, #2]
 80201a0:	f89c c001 	ldrb.w	ip, [ip, #1]
 80201a4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80201a8:	eba3 0309 	sub.w	r3, r3, r9
 80201ac:	b29b      	uxth	r3, r3
 80201ae:	ebae 0e01 	sub.w	lr, lr, r1
 80201b2:	fa1f fe8e 	uxth.w	lr, lr
 80201b6:	435f      	muls	r7, r3
 80201b8:	fb0e 770a 	mla	r7, lr, sl, r7
 80201bc:	f892 a002 	ldrb.w	sl, [r2, #2]
 80201c0:	fb01 770a 	mla	r7, r1, sl, r7
 80201c4:	f890 a002 	ldrb.w	sl, [r0, #2]
 80201c8:	fb09 7a0a 	mla	sl, r9, sl, r7
 80201cc:	f814 7008 	ldrb.w	r7, [r4, r8]
 80201d0:	f896 8000 	ldrb.w	r8, [r6]
 80201d4:	7876      	ldrb	r6, [r6, #1]
 80201d6:	fb03 f808 	mul.w	r8, r3, r8
 80201da:	fb0e 8807 	mla	r8, lr, r7, r8
 80201de:	7817      	ldrb	r7, [r2, #0]
 80201e0:	fb01 8807 	mla	r8, r1, r7, r8
 80201e4:	7807      	ldrb	r7, [r0, #0]
 80201e6:	fb09 8707 	mla	r7, r9, r7, r8
 80201ea:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 80201ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80201f2:	ea47 070a 	orr.w	r7, r7, sl
 80201f6:	4373      	muls	r3, r6
 80201f8:	f892 a001 	ldrb.w	sl, [r2, #1]
 80201fc:	fb0e 330c 	mla	r3, lr, ip, r3
 8020200:	fb01 310a 	mla	r1, r1, sl, r3
 8020204:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020208:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802020a:	fb09 1a0a 	mla	sl, r9, sl, r1
 802020e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020212:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8020216:	ea47 070a 	orr.w	r7, r7, sl
 802021a:	801f      	strh	r7, [r3, #0]
 802021c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802021e:	3302      	adds	r3, #2
 8020220:	9309      	str	r3, [sp, #36]	@ 0x24
 8020222:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020224:	449b      	add	fp, r3
 8020226:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020228:	441d      	add	r5, r3
 802022a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802022c:	3b01      	subs	r3, #1
 802022e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020230:	e76f      	b.n	8020112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020232:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020234:	449b      	add	fp, r3
 8020236:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020238:	441d      	add	r5, r3
 802023a:	9b06      	ldr	r3, [sp, #24]
 802023c:	3b01      	subs	r3, #1
 802023e:	9306      	str	r3, [sp, #24]
 8020240:	9b07      	ldr	r3, [sp, #28]
 8020242:	3302      	adds	r3, #2
 8020244:	9307      	str	r3, [sp, #28]
 8020246:	e744      	b.n	80200d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020248:	d023      	beq.n	8020292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802024a:	9b06      	ldr	r3, [sp, #24]
 802024c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802024e:	3b01      	subs	r3, #1
 8020250:	fb00 b003 	mla	r0, r0, r3, fp
 8020254:	1400      	asrs	r0, r0, #16
 8020256:	f53f af58 	bmi.w	802010a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802025a:	3901      	subs	r1, #1
 802025c:	4288      	cmp	r0, r1
 802025e:	f6bf af54 	bge.w	802010a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020262:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8020264:	fb01 5303 	mla	r3, r1, r3, r5
 8020268:	141b      	asrs	r3, r3, #16
 802026a:	f53f af4e 	bmi.w	802010a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802026e:	3a01      	subs	r2, #1
 8020270:	4293      	cmp	r3, r2
 8020272:	f6bf af4a 	bge.w	802010a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020276:	9b06      	ldr	r3, [sp, #24]
 8020278:	9309      	str	r3, [sp, #36]	@ 0x24
 802027a:	9b07      	ldr	r3, [sp, #28]
 802027c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802027e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020280:	2b00      	cmp	r3, #0
 8020282:	dc70      	bgt.n	8020366 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020284:	9b06      	ldr	r3, [sp, #24]
 8020286:	9a07      	ldr	r2, [sp, #28]
 8020288:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802028c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020290:	9307      	str	r3, [sp, #28]
 8020292:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020294:	2b00      	cmp	r3, #0
 8020296:	f340 80eb 	ble.w	8020470 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802029a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802029e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80202a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202a6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80202a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202b4:	eef0 6a62 	vmov.f32	s13, s5
 80202b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202c4:	ee16 ba90 	vmov	fp, s13
 80202c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202cc:	eef0 6a43 	vmov.f32	s13, s6
 80202d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202d4:	ee12 2a90 	vmov	r2, s5
 80202d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80202e0:	ee13 2a10 	vmov	r2, s6
 80202e4:	931b      	str	r3, [sp, #108]	@ 0x6c
 80202e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80202e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80202ec:	931c      	str	r3, [sp, #112]	@ 0x70
 80202ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80202f0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80202f2:	3b01      	subs	r3, #1
 80202f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80202fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80202fc:	bf08      	it	eq
 80202fe:	4613      	moveq	r3, r2
 8020300:	ee16 5a90 	vmov	r5, s13
 8020304:	9306      	str	r3, [sp, #24]
 8020306:	eeb0 3a67 	vmov.f32	s6, s15
 802030a:	eef0 2a47 	vmov.f32	s5, s14
 802030e:	e6d2      	b.n	80200b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020310:	b149      	cbz	r1, 8020326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020312:	5cba      	ldrb	r2, [r7, r2]
 8020314:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020318:	4422      	add	r2, r4
 802031a:	4660      	mov	r0, ip
 802031c:	4666      	mov	r6, ip
 802031e:	e734      	b.n	802018a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020320:	4660      	mov	r0, ip
 8020322:	4662      	mov	r2, ip
 8020324:	e731      	b.n	802018a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020326:	4660      	mov	r0, ip
 8020328:	4662      	mov	r2, ip
 802032a:	e7f7      	b.n	802031c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 802032c:	f110 0c01 	adds.w	ip, r0, #1
 8020330:	f53f af74 	bmi.w	802021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020334:	4562      	cmp	r2, ip
 8020336:	f6ff af71 	blt.w	802021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802033a:	f116 0c01 	adds.w	ip, r6, #1
 802033e:	f53f af6d 	bmi.w	802021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020342:	4567      	cmp	r7, ip
 8020344:	f6ff af6a 	blt.w	802021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020348:	b23f      	sxth	r7, r7
 802034a:	b212      	sxth	r2, r2
 802034c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020350:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020354:	9200      	str	r2, [sp, #0]
 8020356:	9701      	str	r7, [sp, #4]
 8020358:	4623      	mov	r3, r4
 802035a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802035e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020360:	f7ff fde6 	bl	801ff30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020364:	e75a      	b.n	802021c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020366:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8020368:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 802036c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020370:	1428      	asrs	r0, r5, #16
 8020372:	fb02 6000 	mla	r0, r2, r0, r6
 8020376:	9e08      	ldr	r6, [sp, #32]
 8020378:	f816 8000 	ldrb.w	r8, [r6, r0]
 802037c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020380:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020384:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020388:	1837      	adds	r7, r6, r0
 802038a:	eb04 0c08 	add.w	ip, r4, r8
 802038e:	2b00      	cmp	r3, #0
 8020390:	d060      	beq.n	8020454 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020392:	787e      	ldrb	r6, [r7, #1]
 8020394:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020398:	4426      	add	r6, r4
 802039a:	2900      	cmp	r1, #0
 802039c:	d062      	beq.n	8020464 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 802039e:	18b8      	adds	r0, r7, r2
 80203a0:	5cba      	ldrb	r2, [r7, r2]
 80203a2:	7840      	ldrb	r0, [r0, #1]
 80203a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80203a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80203ac:	4422      	add	r2, r4
 80203ae:	4420      	add	r0, r4
 80203b0:	b29b      	uxth	r3, r3
 80203b2:	b289      	uxth	r1, r1
 80203b4:	fb03 f901 	mul.w	r9, r3, r1
 80203b8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80203bc:	011b      	lsls	r3, r3, #4
 80203be:	b289      	uxth	r1, r1
 80203c0:	78b7      	ldrb	r7, [r6, #2]
 80203c2:	f89c a002 	ldrb.w	sl, [ip, #2]
 80203c6:	f89c c001 	ldrb.w	ip, [ip, #1]
 80203ca:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80203ce:	eba3 0309 	sub.w	r3, r3, r9
 80203d2:	b29b      	uxth	r3, r3
 80203d4:	ebae 0e01 	sub.w	lr, lr, r1
 80203d8:	fa1f fe8e 	uxth.w	lr, lr
 80203dc:	435f      	muls	r7, r3
 80203de:	fb0e 770a 	mla	r7, lr, sl, r7
 80203e2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80203e6:	fb01 770a 	mla	r7, r1, sl, r7
 80203ea:	f890 a002 	ldrb.w	sl, [r0, #2]
 80203ee:	fb09 7a0a 	mla	sl, r9, sl, r7
 80203f2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80203f6:	f896 8000 	ldrb.w	r8, [r6]
 80203fa:	7876      	ldrb	r6, [r6, #1]
 80203fc:	fb03 f808 	mul.w	r8, r3, r8
 8020400:	fb0e 8807 	mla	r8, lr, r7, r8
 8020404:	7817      	ldrb	r7, [r2, #0]
 8020406:	fb01 8807 	mla	r8, r1, r7, r8
 802040a:	7807      	ldrb	r7, [r0, #0]
 802040c:	fb09 8707 	mla	r7, r9, r7, r8
 8020410:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8020414:	4373      	muls	r3, r6
 8020416:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802041a:	7856      	ldrb	r6, [r2, #1]
 802041c:	ea47 070a 	orr.w	r7, r7, sl
 8020420:	fb0e 330c 	mla	r3, lr, ip, r3
 8020424:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020428:	fb01 3306 	mla	r3, r1, r6, r3
 802042c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020430:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020434:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020436:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802043a:	ea47 070a 	orr.w	r7, r7, sl
 802043e:	f823 7b02 	strh.w	r7, [r3], #2
 8020442:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020444:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020446:	449b      	add	fp, r3
 8020448:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802044a:	441d      	add	r5, r3
 802044c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802044e:	3b01      	subs	r3, #1
 8020450:	9309      	str	r3, [sp, #36]	@ 0x24
 8020452:	e714      	b.n	802027e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020454:	b149      	cbz	r1, 802046a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020456:	5cba      	ldrb	r2, [r7, r2]
 8020458:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802045c:	4422      	add	r2, r4
 802045e:	4660      	mov	r0, ip
 8020460:	4666      	mov	r6, ip
 8020462:	e7a5      	b.n	80203b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020464:	4660      	mov	r0, ip
 8020466:	4662      	mov	r2, ip
 8020468:	e7a2      	b.n	80203b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802046a:	4660      	mov	r0, ip
 802046c:	4662      	mov	r2, ip
 802046e:	e7f7      	b.n	8020460 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020470:	b00f      	add	sp, #60	@ 0x3c
 8020472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020476 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020476:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802047a:	b085      	sub	sp, #20
 802047c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8020480:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8020484:	9102      	str	r1, [sp, #8]
 8020486:	2c00      	cmp	r4, #0
 8020488:	fb04 710c 	mla	r1, r4, ip, r7
 802048c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8020490:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8020494:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8020498:	eb02 0e01 	add.w	lr, r2, r1
 802049c:	f2c0 8122 	blt.w	80206e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80204a0:	45a0      	cmp	r8, r4
 80204a2:	f340 811f 	ble.w	80206e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80204a6:	2f00      	cmp	r7, #0
 80204a8:	f2c0 811a 	blt.w	80206e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80204ac:	45bc      	cmp	ip, r7
 80204ae:	f340 8117 	ble.w	80206e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80204b2:	5c52      	ldrb	r2, [r2, r1]
 80204b4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80204b8:	1c7a      	adds	r2, r7, #1
 80204ba:	f100 8116 	bmi.w	80206ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80204be:	4594      	cmp	ip, r2
 80204c0:	f340 8113 	ble.w	80206ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80204c4:	2e00      	cmp	r6, #0
 80204c6:	f000 8112 	beq.w	80206ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80204ca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80204ce:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80204d2:	3401      	adds	r4, #1
 80204d4:	f100 810f 	bmi.w	80206f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80204d8:	45a0      	cmp	r8, r4
 80204da:	f340 810c 	ble.w	80206f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80204de:	2800      	cmp	r0, #0
 80204e0:	f000 810c 	beq.w	80206fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80204e4:	2f00      	cmp	r7, #0
 80204e6:	f2c0 8104 	blt.w	80206f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80204ea:	45bc      	cmp	ip, r7
 80204ec:	f340 8101 	ble.w	80206f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80204f0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80204f4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80204f8:	3701      	adds	r7, #1
 80204fa:	f100 8102 	bmi.w	8020702 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80204fe:	45bc      	cmp	ip, r7
 8020500:	f340 80ff 	ble.w	8020702 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020504:	2e00      	cmp	r6, #0
 8020506:	f000 80fe 	beq.w	8020706 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802050a:	44f4      	add	ip, lr
 802050c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020510:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020514:	b2b6      	uxth	r6, r6
 8020516:	b280      	uxth	r0, r0
 8020518:	fb00 fe06 	mul.w	lr, r0, r6
 802051c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020520:	0136      	lsls	r6, r6, #4
 8020522:	eba6 070e 	sub.w	r7, r6, lr
 8020526:	b280      	uxth	r0, r0
 8020528:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802052c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020530:	b2bf      	uxth	r7, r7
 8020532:	1a1b      	subs	r3, r3, r0
 8020534:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020538:	b29b      	uxth	r3, r3
 802053a:	fb0a f607 	mul.w	r6, sl, r7
 802053e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020542:	fb0b 6603 	mla	r6, fp, r3, r6
 8020546:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802054a:	fb00 6609 	mla	r6, r0, r9, r6
 802054e:	fb0e 6608 	mla	r6, lr, r8, r6
 8020552:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020556:	9600      	str	r6, [sp, #0]
 8020558:	2e00      	cmp	r6, #0
 802055a:	f000 80be 	beq.w	80206da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802055e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020562:	fb0b fc0c 	mul.w	ip, fp, ip
 8020566:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802056a:	fb0b f505 	mul.w	r5, fp, r5
 802056e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020572:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8020576:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802057a:	44dc      	add	ip, fp
 802057c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020580:	9501      	str	r5, [sp, #4]
 8020582:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020586:	9503      	str	r5, [sp, #12]
 8020588:	9d01      	ldr	r5, [sp, #4]
 802058a:	9e02      	ldr	r6, [sp, #8]
 802058c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020590:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020594:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8020598:	fb0a fc0c 	mul.w	ip, sl, ip
 802059c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80205a0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80205a4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80205a8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80205ac:	4465      	add	r5, ip
 80205ae:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80205b2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80205b6:	fb09 fc0c 	mul.w	ip, r9, ip
 80205ba:	fb09 f904 	mul.w	r9, r9, r4
 80205be:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80205c2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80205c6:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80205ca:	fb08 f404 	mul.w	r4, r8, r4
 80205ce:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80205d2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80205d6:	fb08 f802 	mul.w	r8, r8, r2
 80205da:	fb0a fa01 	mul.w	sl, sl, r1
 80205de:	0a22      	lsrs	r2, r4, #8
 80205e0:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80205e4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80205e8:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80205ec:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80205f0:	4414      	add	r4, r2
 80205f2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80205f6:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80205fa:	0a2d      	lsrs	r5, r5, #8
 80205fc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020600:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020604:	9a03      	ldr	r2, [sp, #12]
 8020606:	8836      	ldrh	r6, [r6, #0]
 8020608:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802060c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020610:	437d      	muls	r5, r7
 8020612:	4461      	add	r1, ip
 8020614:	0a24      	lsrs	r4, r4, #8
 8020616:	fb02 5503 	mla	r5, r2, r3, r5
 802061a:	0a09      	lsrs	r1, r1, #8
 802061c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8020620:	fb04 540e 	mla	r4, r4, lr, r5
 8020624:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8020628:	fb01 4100 	mla	r1, r1, r0, r4
 802062c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020630:	0a09      	lsrs	r1, r1, #8
 8020632:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020636:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802063a:	fb07 f70a 	mul.w	r7, r7, sl
 802063e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020642:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8020646:	fb03 7101 	mla	r1, r3, r1, r7
 802064a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802064e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020652:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020656:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802065a:	fb00 e101 	mla	r1, r0, r1, lr
 802065e:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8020662:	9a00      	ldr	r2, [sp, #0]
 8020664:	b287      	uxth	r7, r0
 8020666:	437a      	muls	r2, r7
 8020668:	0a09      	lsrs	r1, r1, #8
 802066a:	1c53      	adds	r3, r2, #1
 802066c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020670:	4321      	orrs	r1, r4
 8020672:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020676:	1235      	asrs	r5, r6, #8
 8020678:	0c0a      	lsrs	r2, r1, #16
 802067a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802067e:	b2db      	uxtb	r3, r3
 8020680:	fb12 f207 	smulbb	r2, r2, r7
 8020684:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020688:	fb05 2503 	mla	r5, r5, r3, r2
 802068c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020690:	10f2      	asrs	r2, r6, #3
 8020692:	b2c8      	uxtb	r0, r1
 8020694:	00f6      	lsls	r6, r6, #3
 8020696:	fb14 f407 	smulbb	r4, r4, r7
 802069a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802069e:	b2f6      	uxtb	r6, r6
 80206a0:	fb10 f007 	smulbb	r0, r0, r7
 80206a4:	fb02 4203 	mla	r2, r2, r3, r4
 80206a8:	b2ad      	uxth	r5, r5
 80206aa:	fb06 0303 	mla	r3, r6, r3, r0
 80206ae:	b299      	uxth	r1, r3
 80206b0:	b294      	uxth	r4, r2
 80206b2:	1c6b      	adds	r3, r5, #1
 80206b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80206b8:	1c62      	adds	r2, r4, #1
 80206ba:	1c4b      	adds	r3, r1, #1
 80206bc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80206c0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80206c4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80206c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80206cc:	0952      	lsrs	r2, r2, #5
 80206ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80206d2:	432b      	orrs	r3, r5
 80206d4:	4313      	orrs	r3, r2
 80206d6:	9a02      	ldr	r2, [sp, #8]
 80206d8:	8013      	strh	r3, [r2, #0]
 80206da:	b005      	add	sp, #20
 80206dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80206e0:	2500      	movs	r5, #0
 80206e2:	e6e9      	b.n	80204b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80206e4:	2100      	movs	r1, #0
 80206e6:	460d      	mov	r5, r1
 80206e8:	e6f3      	b.n	80204d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80206ea:	2100      	movs	r1, #0
 80206ec:	e6f1      	b.n	80204d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80206ee:	4631      	mov	r1, r6
 80206f0:	e6ef      	b.n	80204d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80206f2:	2400      	movs	r4, #0
 80206f4:	e700      	b.n	80204f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80206f6:	2200      	movs	r2, #0
 80206f8:	4614      	mov	r4, r2
 80206fa:	e70b      	b.n	8020514 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80206fc:	4602      	mov	r2, r0
 80206fe:	4604      	mov	r4, r0
 8020700:	e708      	b.n	8020514 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020702:	2200      	movs	r2, #0
 8020704:	e706      	b.n	8020514 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020706:	4632      	mov	r2, r6
 8020708:	e704      	b.n	8020514 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802070a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802070a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802070e:	b09f      	sub	sp, #124	@ 0x7c
 8020710:	921b      	str	r2, [sp, #108]	@ 0x6c
 8020712:	9309      	str	r3, [sp, #36]	@ 0x24
 8020714:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8020716:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 802071a:	931c      	str	r3, [sp, #112]	@ 0x70
 802071c:	9119      	str	r1, [sp, #100]	@ 0x64
 802071e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8020722:	901d      	str	r0, [sp, #116]	@ 0x74
 8020724:	6850      	ldr	r0, [r2, #4]
 8020726:	6812      	ldr	r2, [r2, #0]
 8020728:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 802072a:	fb00 1303 	mla	r3, r0, r3, r1
 802072e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020732:	930c      	str	r3, [sp, #48]	@ 0x30
 8020734:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020736:	681b      	ldr	r3, [r3, #0]
 8020738:	9312      	str	r3, [sp, #72]	@ 0x48
 802073a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802073c:	685e      	ldr	r6, [r3, #4]
 802073e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8020742:	930d      	str	r3, [sp, #52]	@ 0x34
 8020744:	3604      	adds	r6, #4
 8020746:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020748:	2b00      	cmp	r3, #0
 802074a:	dc03      	bgt.n	8020754 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802074c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802074e:	2b00      	cmp	r3, #0
 8020750:	f340 8388 	ble.w	8020e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020754:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020756:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802075a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802075e:	1e48      	subs	r0, r1, #1
 8020760:	1e57      	subs	r7, r2, #1
 8020762:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020764:	2b00      	cmp	r3, #0
 8020766:	f340 8195 	ble.w	8020a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802076a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802076c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020770:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020774:	d406      	bmi.n	8020784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020776:	4584      	cmp	ip, r0
 8020778:	da04      	bge.n	8020784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802077a:	2b00      	cmp	r3, #0
 802077c:	db02      	blt.n	8020784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802077e:	42bb      	cmp	r3, r7
 8020780:	f2c0 8189 	blt.w	8020a96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8020784:	f11c 0c01 	adds.w	ip, ip, #1
 8020788:	f100 8177 	bmi.w	8020a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802078c:	4561      	cmp	r1, ip
 802078e:	f2c0 8174 	blt.w	8020a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020792:	3301      	adds	r3, #1
 8020794:	f100 8171 	bmi.w	8020a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020798:	429a      	cmp	r2, r3
 802079a:	f2c0 816e 	blt.w	8020a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802079e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80207a0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80207a2:	931a      	str	r3, [sp, #104]	@ 0x68
 80207a4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80207a6:	2b00      	cmp	r3, #0
 80207a8:	f340 8193 	ble.w	8020ad2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80207ac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80207ae:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80207b2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80207b4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80207b8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80207ba:	141b      	asrs	r3, r3, #16
 80207bc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80207c0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80207c4:	f100 81d6 	bmi.w	8020b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80207c8:	f100 38ff 	add.w	r8, r0, #4294967295
 80207cc:	4543      	cmp	r3, r8
 80207ce:	f280 81d1 	bge.w	8020b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80207d2:	f1bc 0f00 	cmp.w	ip, #0
 80207d6:	f2c0 81cd 	blt.w	8020b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80207da:	f10e 38ff 	add.w	r8, lr, #4294967295
 80207de:	45c4      	cmp	ip, r8
 80207e0:	f280 81c8 	bge.w	8020b74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80207e4:	b200      	sxth	r0, r0
 80207e6:	fb0c 3300 	mla	r3, ip, r0, r3
 80207ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80207ec:	eb04 0803 	add.w	r8, r4, r3
 80207f0:	5ce3      	ldrb	r3, [r4, r3]
 80207f2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80207f6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80207fa:	2a00      	cmp	r2, #0
 80207fc:	f000 81af 	beq.w	8020b5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020800:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020804:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020808:	940e      	str	r4, [sp, #56]	@ 0x38
 802080a:	0e24      	lsrs	r4, r4, #24
 802080c:	9415      	str	r4, [sp, #84]	@ 0x54
 802080e:	b179      	cbz	r1, 8020830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020810:	eb08 0c00 	add.w	ip, r8, r0
 8020814:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020818:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802081c:	900a      	str	r0, [sp, #40]	@ 0x28
 802081e:	0e00      	lsrs	r0, r0, #24
 8020820:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020822:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020826:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802082a:	900f      	str	r0, [sp, #60]	@ 0x3c
 802082c:	0e00      	lsrs	r0, r0, #24
 802082e:	9016      	str	r0, [sp, #88]	@ 0x58
 8020830:	b292      	uxth	r2, r2
 8020832:	b289      	uxth	r1, r1
 8020834:	fb02 f901 	mul.w	r9, r2, r1
 8020838:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802083c:	0112      	lsls	r2, r2, #4
 802083e:	eba2 0809 	sub.w	r8, r2, r9
 8020842:	b289      	uxth	r1, r1
 8020844:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020848:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802084a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802084c:	fa1f f888 	uxth.w	r8, r8
 8020850:	1a52      	subs	r2, r2, r1
 8020852:	b292      	uxth	r2, r2
 8020854:	fb08 f000 	mul.w	r0, r8, r0
 8020858:	fb02 000e 	mla	r0, r2, lr, r0
 802085c:	fb01 0004 	mla	r0, r1, r4, r0
 8020860:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020862:	fb09 0004 	mla	r0, r9, r4, r0
 8020866:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802086a:	2800      	cmp	r0, #0
 802086c:	f000 80fa 	beq.w	8020a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020870:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020874:	d01b      	beq.n	80208ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020876:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802087a:	fb0e fa0a 	mul.w	sl, lr, sl
 802087e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020882:	fb0e fe03 	mul.w	lr, lr, r3
 8020886:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802088a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802088e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020892:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8020896:	4453      	add	r3, sl
 8020898:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802089c:	0a1b      	lsrs	r3, r3, #8
 802089e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208a2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80208a6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80208aa:	ea43 030c 	orr.w	r3, r3, ip
 80208ae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80208b0:	2cff      	cmp	r4, #255	@ 0xff
 80208b2:	d021      	beq.n	80208f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80208b4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80208b6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80208ba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80208bc:	fb04 fb0b 	mul.w	fp, r4, fp
 80208c0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80208c2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80208c6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80208c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80208cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80208d0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80208d4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80208d8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80208dc:	44de      	add	lr, fp
 80208de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80208e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80208e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80208ea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80208ee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80208f2:	ea4e 040a 	orr.w	r4, lr, sl
 80208f6:	940e      	str	r4, [sp, #56]	@ 0x38
 80208f8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80208fa:	2cff      	cmp	r4, #255	@ 0xff
 80208fc:	d021      	beq.n	8020942 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80208fe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020900:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020904:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020906:	fb04 fb0b 	mul.w	fp, r4, fp
 802090a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802090c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020910:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020912:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020916:	fb04 fa0a 	mul.w	sl, r4, sl
 802091a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802091e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020922:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020926:	44de      	add	lr, fp
 8020928:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802092c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020930:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020934:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020938:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802093c:	ea4e 040a 	orr.w	r4, lr, sl
 8020940:	940a      	str	r4, [sp, #40]	@ 0x28
 8020942:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020944:	2cff      	cmp	r4, #255	@ 0xff
 8020946:	d021      	beq.n	802098c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020948:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802094a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802094e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020950:	fb04 fb0b 	mul.w	fp, r4, fp
 8020954:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020956:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802095a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802095c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020960:	fb04 fa0a 	mul.w	sl, r4, sl
 8020964:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020968:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802096c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020970:	44de      	add	lr, fp
 8020972:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020976:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802097a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802097e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020982:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020986:	ea4e 040a 	orr.w	r4, lr, sl
 802098a:	940f      	str	r4, [sp, #60]	@ 0x3c
 802098c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802098e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020992:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020994:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8020998:	fb08 fc0c 	mul.w	ip, r8, ip
 802099c:	fb02 cc0e 	mla	ip, r2, lr, ip
 80209a0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80209a4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80209a6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80209aa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80209ae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80209b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80209b4:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80209b8:	fb08 f80e 	mul.w	r8, r8, lr
 80209bc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80209c0:	fb02 8303 	mla	r3, r2, r3, r8
 80209c4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80209c6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80209c8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80209cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80209ce:	fb01 330a 	mla	r3, r1, sl, r3
 80209d2:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 80209d6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80209d8:	fb09 3901 	mla	r9, r9, r1, r3
 80209dc:	4342      	muls	r2, r0
 80209de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80209e6:	883b      	ldrh	r3, [r7, #0]
 80209e8:	1c50      	adds	r0, r2, #1
 80209ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209ee:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80209f2:	ea4c 0c09 	orr.w	ip, ip, r9
 80209f6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80209fa:	1219      	asrs	r1, r3, #8
 80209fc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020a00:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020a04:	b2c0      	uxtb	r0, r0
 8020a06:	fb12 f204 	smulbb	r2, r2, r4
 8020a0a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020a0e:	fb01 2100 	mla	r1, r1, r0, r2
 8020a12:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020a16:	10da      	asrs	r2, r3, #3
 8020a18:	fa5f fc8c 	uxtb.w	ip, ip
 8020a1c:	00db      	lsls	r3, r3, #3
 8020a1e:	fb1c fc04 	smulbb	ip, ip, r4
 8020a22:	b2db      	uxtb	r3, r3
 8020a24:	b289      	uxth	r1, r1
 8020a26:	fb03 c300 	mla	r3, r3, r0, ip
 8020a2a:	fa1f fc83 	uxth.w	ip, r3
 8020a2e:	1c4b      	adds	r3, r1, #1
 8020a30:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020a34:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020a38:	fb1e fe04 	smulbb	lr, lr, r4
 8020a3c:	f10c 0301 	add.w	r3, ip, #1
 8020a40:	fb02 e200 	mla	r2, r2, r0, lr
 8020a44:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020a48:	b292      	uxth	r2, r2
 8020a4a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020a4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020a52:	430b      	orrs	r3, r1
 8020a54:	1c51      	adds	r1, r2, #1
 8020a56:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020a5a:	0952      	lsrs	r2, r2, #5
 8020a5c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020a60:	4313      	orrs	r3, r2
 8020a62:	803b      	strh	r3, [r7, #0]
 8020a64:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020a66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020a68:	441a      	add	r2, r3
 8020a6a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020a6c:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020a6e:	441d      	add	r5, r3
 8020a70:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8020a72:	3b01      	subs	r3, #1
 8020a74:	3702      	adds	r7, #2
 8020a76:	931a      	str	r3, [sp, #104]	@ 0x68
 8020a78:	e694      	b.n	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020a7a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020a7c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020a7e:	441c      	add	r4, r3
 8020a80:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020a82:	9429      	str	r4, [sp, #164]	@ 0xa4
 8020a84:	441d      	add	r5, r3
 8020a86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020a88:	3b01      	subs	r3, #1
 8020a8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8020a8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020a8e:	3302      	adds	r3, #2
 8020a90:	930c      	str	r3, [sp, #48]	@ 0x30
 8020a92:	e666      	b.n	8020762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020a94:	d024      	beq.n	8020ae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020a96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020a98:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8020a9a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020a9c:	3b01      	subs	r3, #1
 8020a9e:	fb00 4003 	mla	r0, r0, r3, r4
 8020aa2:	1400      	asrs	r0, r0, #16
 8020aa4:	f53f ae7b 	bmi.w	802079e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020aa8:	3901      	subs	r1, #1
 8020aaa:	4288      	cmp	r0, r1
 8020aac:	f6bf ae77 	bge.w	802079e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020ab0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8020ab2:	fb01 5303 	mla	r3, r1, r3, r5
 8020ab6:	141b      	asrs	r3, r3, #16
 8020ab8:	f53f ae71 	bmi.w	802079e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020abc:	3a01      	subs	r2, #1
 8020abe:	4293      	cmp	r3, r2
 8020ac0:	f6bf ae6d 	bge.w	802079e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020ac4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8020ac8:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8020acc:	f1bb 0f00 	cmp.w	fp, #0
 8020ad0:	dc70      	bgt.n	8020bb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020ad2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020ad4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020ad8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020ada:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020ade:	930c      	str	r3, [sp, #48]	@ 0x30
 8020ae0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020ae2:	2b00      	cmp	r3, #0
 8020ae4:	f340 81be 	ble.w	8020e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020ae8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020aec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020af0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020af4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020af6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020afa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020afe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020b02:	eef0 6a62 	vmov.f32	s13, s5
 8020b06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020b0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020b0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020b12:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8020b16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020b1a:	eef0 6a43 	vmov.f32	s13, s6
 8020b1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020b22:	ee12 2a90 	vmov	r2, s5
 8020b26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020b2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020b2e:	ee13 2a10 	vmov	r2, s6
 8020b32:	932b      	str	r3, [sp, #172]	@ 0xac
 8020b34:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020b36:	fb92 f3f3 	sdiv	r3, r2, r3
 8020b3a:	932c      	str	r3, [sp, #176]	@ 0xb0
 8020b3c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020b3e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8020b40:	3b01      	subs	r3, #1
 8020b42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020b46:	9319      	str	r3, [sp, #100]	@ 0x64
 8020b48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020b4a:	bf08      	it	eq
 8020b4c:	4613      	moveq	r3, r2
 8020b4e:	ee16 5a90 	vmov	r5, s13
 8020b52:	9309      	str	r3, [sp, #36]	@ 0x24
 8020b54:	eeb0 3a67 	vmov.f32	s6, s15
 8020b58:	eef0 2a47 	vmov.f32	s5, s14
 8020b5c:	e5f3      	b.n	8020746 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020b5e:	2900      	cmp	r1, #0
 8020b60:	f43f ae66 	beq.w	8020830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020b64:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020b68:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020b6c:	900a      	str	r0, [sp, #40]	@ 0x28
 8020b6e:	0e00      	lsrs	r0, r0, #24
 8020b70:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020b72:	e65d      	b.n	8020830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020b74:	f113 0801 	adds.w	r8, r3, #1
 8020b78:	f53f af74 	bmi.w	8020a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b7c:	4540      	cmp	r0, r8
 8020b7e:	f6ff af71 	blt.w	8020a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b82:	f11c 0801 	adds.w	r8, ip, #1
 8020b86:	f53f af6d 	bmi.w	8020a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b8a:	45c6      	cmp	lr, r8
 8020b8c:	f6ff af6a 	blt.w	8020a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b90:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8020b92:	9302      	str	r3, [sp, #8]
 8020b94:	b200      	sxth	r0, r0
 8020b96:	fa0f f38e 	sxth.w	r3, lr
 8020b9a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020b9e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020ba2:	9301      	str	r3, [sp, #4]
 8020ba4:	9000      	str	r0, [sp, #0]
 8020ba6:	4633      	mov	r3, r6
 8020ba8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020baa:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8020bac:	4639      	mov	r1, r7
 8020bae:	f7ff fc62 	bl	8020476 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020bb2:	e757      	b.n	8020a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020bb4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020bb6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020bb8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020bbc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020bbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020bc2:	1427      	asrs	r7, r4, #16
 8020bc4:	142b      	asrs	r3, r5, #16
 8020bc6:	fb01 7303 	mla	r3, r1, r3, r7
 8020bca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020bcc:	18e7      	adds	r7, r4, r3
 8020bce:	5ce3      	ldrb	r3, [r4, r3]
 8020bd0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020bd4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020bd8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020bdc:	2a00      	cmp	r2, #0
 8020bde:	f000 8137 	beq.w	8020e50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020be2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020be6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020bea:	9410      	str	r4, [sp, #64]	@ 0x40
 8020bec:	0e24      	lsrs	r4, r4, #24
 8020bee:	9417      	str	r4, [sp, #92]	@ 0x5c
 8020bf0:	b170      	cbz	r0, 8020c10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020bf2:	eb07 0e01 	add.w	lr, r7, r1
 8020bf6:	5c79      	ldrb	r1, [r7, r1]
 8020bf8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020bfc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020bfe:	0e09      	lsrs	r1, r1, #24
 8020c00:	9114      	str	r1, [sp, #80]	@ 0x50
 8020c02:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020c06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c0a:	9111      	str	r1, [sp, #68]	@ 0x44
 8020c0c:	0e09      	lsrs	r1, r1, #24
 8020c0e:	9118      	str	r1, [sp, #96]	@ 0x60
 8020c10:	b292      	uxth	r2, r2
 8020c12:	b280      	uxth	r0, r0
 8020c14:	fb02 f800 	mul.w	r8, r2, r0
 8020c18:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020c1c:	0112      	lsls	r2, r2, #4
 8020c1e:	eba2 0e08 	sub.w	lr, r2, r8
 8020c22:	b280      	uxth	r0, r0
 8020c24:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020c28:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020c2a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020c2c:	fa1f fe8e 	uxth.w	lr, lr
 8020c30:	1a12      	subs	r2, r2, r0
 8020c32:	b292      	uxth	r2, r2
 8020c34:	fb0e f101 	mul.w	r1, lr, r1
 8020c38:	fb02 110c 	mla	r1, r2, ip, r1
 8020c3c:	fb00 1104 	mla	r1, r0, r4, r1
 8020c40:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020c42:	fb08 1104 	mla	r1, r8, r4, r1
 8020c46:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020c4a:	2900      	cmp	r1, #0
 8020c4c:	f000 80f5 	beq.w	8020e3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020c50:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020c54:	d019      	beq.n	8020c8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020c56:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020c5a:	fb0c fa0a 	mul.w	sl, ip, sl
 8020c5e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020c62:	fb0c fc03 	mul.w	ip, ip, r3
 8020c66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020c6a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020c6e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020c72:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020c76:	4453      	add	r3, sl
 8020c78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020c7c:	0a1b      	lsrs	r3, r3, #8
 8020c7e:	0a3f      	lsrs	r7, r7, #8
 8020c80:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020c84:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020c88:	433b      	orrs	r3, r7
 8020c8a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020c8c:	2cff      	cmp	r4, #255	@ 0xff
 8020c8e:	d020      	beq.n	8020cd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020c90:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020c92:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020c96:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020c98:	4367      	muls	r7, r4
 8020c9a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020c9c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ca0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020ca2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ca6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020caa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020cae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020cb2:	44bc      	add	ip, r7
 8020cb4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020cb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020cbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020cc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020cc4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020cc8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020ccc:	ea4c 040a 	orr.w	r4, ip, sl
 8020cd0:	9410      	str	r4, [sp, #64]	@ 0x40
 8020cd2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020cd4:	2cff      	cmp	r4, #255	@ 0xff
 8020cd6:	d020      	beq.n	8020d1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020cd8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020cda:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020cde:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020ce0:	4367      	muls	r7, r4
 8020ce2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020ce4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ce8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020cea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020cee:	fb04 fa0a 	mul.w	sl, r4, sl
 8020cf2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020cf6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020cfa:	44bc      	add	ip, r7
 8020cfc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020d00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020d04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d0c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020d10:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020d14:	ea4c 040a 	orr.w	r4, ip, sl
 8020d18:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020d1a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020d1c:	2cff      	cmp	r4, #255	@ 0xff
 8020d1e:	d020      	beq.n	8020d62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020d20:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020d22:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020d26:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020d28:	4367      	muls	r7, r4
 8020d2a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020d2c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020d30:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020d32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020d36:	fb04 fa0a 	mul.w	sl, r4, sl
 8020d3a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020d3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020d42:	44bc      	add	ip, r7
 8020d44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020d48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020d4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020d58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020d5c:	ea4c 040a 	orr.w	r4, ip, sl
 8020d60:	9411      	str	r4, [sp, #68]	@ 0x44
 8020d62:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020d64:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020d68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020d6a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020d6e:	fb0e f707 	mul.w	r7, lr, r7
 8020d72:	fb02 770c 	mla	r7, r2, ip, r7
 8020d76:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020d7a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020d7c:	fb00 770c 	mla	r7, r0, ip, r7
 8020d80:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020d84:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020d86:	fb08 770c 	mla	r7, r8, ip, r7
 8020d8a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020d8e:	fb0e fe0c 	mul.w	lr, lr, ip
 8020d92:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020d96:	fb02 e303 	mla	r3, r2, r3, lr
 8020d9a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020d9c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020d9e:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020da2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020da4:	fb00 330a 	mla	r3, r0, sl, r3
 8020da8:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8020dac:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020db0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020db2:	f8b9 0000 	ldrh.w	r0, [r9]
 8020db6:	434b      	muls	r3, r1
 8020db8:	0a3f      	lsrs	r7, r7, #8
 8020dba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020dbe:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020dc2:	1c59      	adds	r1, r3, #1
 8020dc4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020dc8:	ea47 070c 	orr.w	r7, r7, ip
 8020dcc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020dd0:	1202      	asrs	r2, r0, #8
 8020dd2:	0c3b      	lsrs	r3, r7, #16
 8020dd4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020dd8:	b2c9      	uxtb	r1, r1
 8020dda:	fb13 f304 	smulbb	r3, r3, r4
 8020dde:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020de2:	fb02 3201 	mla	r2, r2, r1, r3
 8020de6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020dea:	10c3      	asrs	r3, r0, #3
 8020dec:	b2ff      	uxtb	r7, r7
 8020dee:	00c0      	lsls	r0, r0, #3
 8020df0:	b292      	uxth	r2, r2
 8020df2:	fb1c fc04 	smulbb	ip, ip, r4
 8020df6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020dfa:	b2c0      	uxtb	r0, r0
 8020dfc:	fb17 f704 	smulbb	r7, r7, r4
 8020e00:	fb03 c301 	mla	r3, r3, r1, ip
 8020e04:	fb00 7001 	mla	r0, r0, r1, r7
 8020e08:	f102 0c01 	add.w	ip, r2, #1
 8020e0c:	b280      	uxth	r0, r0
 8020e0e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020e12:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8020e16:	1c42      	adds	r2, r0, #1
 8020e18:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020e1c:	b29b      	uxth	r3, r3
 8020e1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020e22:	ea42 020c 	orr.w	r2, r2, ip
 8020e26:	f103 0c01 	add.w	ip, r3, #1
 8020e2a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020e2e:	095b      	lsrs	r3, r3, #5
 8020e30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020e34:	431a      	orrs	r2, r3
 8020e36:	f8a9 2000 	strh.w	r2, [r9]
 8020e3a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020e3c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020e3e:	441a      	add	r2, r3
 8020e40:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020e42:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020e44:	f109 0902 	add.w	r9, r9, #2
 8020e48:	441d      	add	r5, r3
 8020e4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020e4e:	e63d      	b.n	8020acc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020e50:	2800      	cmp	r0, #0
 8020e52:	f43f aedd 	beq.w	8020c10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020e56:	5c79      	ldrb	r1, [r7, r1]
 8020e58:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e5c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020e5e:	0e09      	lsrs	r1, r1, #24
 8020e60:	9114      	str	r1, [sp, #80]	@ 0x50
 8020e62:	e6d5      	b.n	8020c10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020e64:	b01f      	add	sp, #124	@ 0x7c
 8020e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020e6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e6e:	b089      	sub	sp, #36	@ 0x24
 8020e70:	9101      	str	r1, [sp, #4]
 8020e72:	9801      	ldr	r0, [sp, #4]
 8020e74:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8020e78:	8800      	ldrh	r0, [r0, #0]
 8020e7a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8020e7e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8020e82:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8020e86:	1206      	asrs	r6, r0, #8
 8020e88:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8020e8c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020e90:	9602      	str	r6, [sp, #8]
 8020e92:	10c6      	asrs	r6, r0, #3
 8020e94:	00c0      	lsls	r0, r0, #3
 8020e96:	b2c0      	uxtb	r0, r0
 8020e98:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020e9c:	9004      	str	r0, [sp, #16]
 8020e9e:	2f00      	cmp	r7, #0
 8020ea0:	fb07 100c 	mla	r0, r7, ip, r1
 8020ea4:	9603      	str	r6, [sp, #12]
 8020ea6:	eb02 0e00 	add.w	lr, r2, r0
 8020eaa:	f2c0 810a 	blt.w	80210c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020eae:	45b8      	cmp	r8, r7
 8020eb0:	f340 8107 	ble.w	80210c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020eb4:	2900      	cmp	r1, #0
 8020eb6:	f2c0 8102 	blt.w	80210be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020eba:	458c      	cmp	ip, r1
 8020ebc:	f340 80ff 	ble.w	80210be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020ec0:	5c12      	ldrb	r2, [r2, r0]
 8020ec2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020ec6:	1c4a      	adds	r2, r1, #1
 8020ec8:	f100 80fe 	bmi.w	80210c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020ecc:	4594      	cmp	ip, r2
 8020ece:	f340 80fb 	ble.w	80210c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020ed2:	2d00      	cmp	r5, #0
 8020ed4:	f000 80fa 	beq.w	80210cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020ed8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020edc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020ee0:	3701      	adds	r7, #1
 8020ee2:	f100 80f7 	bmi.w	80210d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020ee6:	45b8      	cmp	r8, r7
 8020ee8:	f340 80f4 	ble.w	80210d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020eec:	2c00      	cmp	r4, #0
 8020eee:	f000 80f4 	beq.w	80210da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020ef2:	2900      	cmp	r1, #0
 8020ef4:	eb0e 020c 	add.w	r2, lr, ip
 8020ef8:	f2c0 80ea 	blt.w	80210d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020efc:	458c      	cmp	ip, r1
 8020efe:	f340 80e7 	ble.w	80210d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020f02:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020f06:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020f0a:	3101      	adds	r1, #1
 8020f0c:	f100 80e8 	bmi.w	80210e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020f10:	458c      	cmp	ip, r1
 8020f12:	f340 80e5 	ble.w	80210e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020f16:	2d00      	cmp	r5, #0
 8020f18:	f000 80e4 	beq.w	80210e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020f1c:	7852      	ldrb	r2, [r2, #1]
 8020f1e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020f22:	0e0b      	lsrs	r3, r1, #24
 8020f24:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020f28:	9300      	str	r3, [sp, #0]
 8020f2a:	b2a4      	uxth	r4, r4
 8020f2c:	b2ab      	uxth	r3, r5
 8020f2e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8020f32:	fb03 f904 	mul.w	r9, r3, r4
 8020f36:	fb0a f505 	mul.w	r5, sl, r5
 8020f3a:	011b      	lsls	r3, r3, #4
 8020f3c:	eba3 0e09 	sub.w	lr, r3, r9
 8020f40:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8020f44:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8020f48:	0a28      	lsrs	r0, r5, #8
 8020f4a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020f4e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8020f52:	4405      	add	r5, r0
 8020f54:	0a2d      	lsrs	r5, r5, #8
 8020f56:	fb0a f303 	mul.w	r3, sl, r3
 8020f5a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8020f5e:	9005      	str	r0, [sp, #20]
 8020f60:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8020f64:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020f68:	0a1b      	lsrs	r3, r3, #8
 8020f6a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020f6e:	9306      	str	r3, [sp, #24]
 8020f70:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8020f74:	fb0b f303 	mul.w	r3, fp, r3
 8020f78:	0a1d      	lsrs	r5, r3, #8
 8020f7a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020f7e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020f82:	fb0b f606 	mul.w	r6, fp, r6
 8020f86:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8020f8a:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8020f8e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020f92:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020f96:	fb08 f707 	mul.w	r7, r8, r7
 8020f9a:	441d      	add	r5, r3
 8020f9c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8020fa0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020fa4:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8020fa8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020fac:	fb08 fc0c 	mul.w	ip, r8, ip
 8020fb0:	0a1b      	lsrs	r3, r3, #8
 8020fb2:	9307      	str	r3, [sp, #28]
 8020fb4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020fb8:	0e0b      	lsrs	r3, r1, #24
 8020fba:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8020fbe:	435f      	muls	r7, r3
 8020fc0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020fc4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020fc8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020fcc:	4460      	add	r0, ip
 8020fce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020fd2:	b2a4      	uxth	r4, r4
 8020fd4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020fd8:	0a2d      	lsrs	r5, r5, #8
 8020fda:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020fde:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020fe2:	fa1f fe8e 	uxth.w	lr, lr
 8020fe6:	4359      	muls	r1, r3
 8020fe8:	1b12      	subs	r2, r2, r4
 8020fea:	9b05      	ldr	r3, [sp, #20]
 8020fec:	44bc      	add	ip, r7
 8020fee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020ff2:	b292      	uxth	r2, r2
 8020ff4:	fb05 f50e 	mul.w	r5, r5, lr
 8020ff8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ffc:	fb03 5502 	mla	r5, r3, r2, r5
 8021000:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021004:	9b06      	ldr	r3, [sp, #24]
 8021006:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 802100a:	0a36      	lsrs	r6, r6, #8
 802100c:	0a00      	lsrs	r0, r0, #8
 802100e:	fb0c 5509 	mla	r5, ip, r9, r5
 8021012:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8021016:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802101a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802101e:	fb00 5504 	mla	r5, r0, r4, r5
 8021022:	fb0e f606 	mul.w	r6, lr, r6
 8021026:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 802102a:	0a09      	lsrs	r1, r1, #8
 802102c:	9b07      	ldr	r3, [sp, #28]
 802102e:	fb02 6000 	mla	r0, r2, r0, r6
 8021032:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021036:	fb09 0001 	mla	r0, r9, r1, r0
 802103a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802103e:	fb0e fe0b 	mul.w	lr, lr, fp
 8021042:	fb04 0003 	mla	r0, r4, r3, r0
 8021046:	fb02 e20a 	mla	r2, r2, sl, lr
 802104a:	9b00      	ldr	r3, [sp, #0]
 802104c:	fb04 2408 	mla	r4, r4, r8, r2
 8021050:	fb09 4903 	mla	r9, r9, r3, r4
 8021054:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021058:	9b02      	ldr	r3, [sp, #8]
 802105a:	9a04      	ldr	r2, [sp, #16]
 802105c:	fa5f f989 	uxtb.w	r9, r9
 8021060:	fb03 f109 	mul.w	r1, r3, r9
 8021064:	9b03      	ldr	r3, [sp, #12]
 8021066:	0a2d      	lsrs	r5, r5, #8
 8021068:	0a00      	lsrs	r0, r0, #8
 802106a:	fb03 f309 	mul.w	r3, r3, r9
 802106e:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8021072:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021076:	4305      	orrs	r5, r0
 8021078:	fb02 f909 	mul.w	r9, r2, r9
 802107c:	1c58      	adds	r0, r3, #1
 802107e:	1c4a      	adds	r2, r1, #1
 8021080:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021084:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021088:	0a2b      	lsrs	r3, r5, #8
 802108a:	0c2a      	lsrs	r2, r5, #16
 802108c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021090:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021094:	00db      	lsls	r3, r3, #3
 8021096:	0212      	lsls	r2, r2, #8
 8021098:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802109c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80210a0:	4313      	orrs	r3, r2
 80210a2:	f109 0201 	add.w	r2, r9, #1
 80210a6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80210aa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80210ae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80210b2:	431d      	orrs	r5, r3
 80210b4:	9b01      	ldr	r3, [sp, #4]
 80210b6:	801d      	strh	r5, [r3, #0]
 80210b8:	b009      	add	sp, #36	@ 0x24
 80210ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80210be:	2000      	movs	r0, #0
 80210c0:	e701      	b.n	8020ec6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80210c2:	2600      	movs	r6, #0
 80210c4:	4630      	mov	r0, r6
 80210c6:	e70b      	b.n	8020ee0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80210c8:	2600      	movs	r6, #0
 80210ca:	e709      	b.n	8020ee0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80210cc:	462e      	mov	r6, r5
 80210ce:	e707      	b.n	8020ee0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80210d0:	2700      	movs	r7, #0
 80210d2:	e71a      	b.n	8020f0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80210d4:	2100      	movs	r1, #0
 80210d6:	460f      	mov	r7, r1
 80210d8:	e723      	b.n	8020f22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80210da:	4621      	mov	r1, r4
 80210dc:	4627      	mov	r7, r4
 80210de:	e720      	b.n	8020f22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80210e0:	2100      	movs	r1, #0
 80210e2:	e71e      	b.n	8020f22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80210e4:	4629      	mov	r1, r5
 80210e6:	e71c      	b.n	8020f22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080210e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80210e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210ec:	b09b      	sub	sp, #108	@ 0x6c
 80210ee:	9218      	str	r2, [sp, #96]	@ 0x60
 80210f0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80210f2:	9116      	str	r1, [sp, #88]	@ 0x58
 80210f4:	9307      	str	r3, [sp, #28]
 80210f6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80210fa:	9019      	str	r0, [sp, #100]	@ 0x64
 80210fc:	6850      	ldr	r0, [r2, #4]
 80210fe:	6812      	ldr	r2, [r2, #0]
 8021100:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8021102:	fb00 1303 	mla	r3, r0, r3, r1
 8021106:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802110a:	930a      	str	r3, [sp, #40]	@ 0x28
 802110c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802110e:	681b      	ldr	r3, [r3, #0]
 8021110:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021112:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021114:	685e      	ldr	r6, [r3, #4]
 8021116:	3604      	adds	r6, #4
 8021118:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802111a:	2b00      	cmp	r3, #0
 802111c:	dc03      	bgt.n	8021126 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802111e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021120:	2b00      	cmp	r3, #0
 8021122:	f340 8373 	ble.w	802180c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021126:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021128:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802112c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021130:	1e48      	subs	r0, r1, #1
 8021132:	1e57      	subs	r7, r2, #1
 8021134:	9b07      	ldr	r3, [sp, #28]
 8021136:	2b00      	cmp	r3, #0
 8021138:	f340 8190 	ble.w	802145c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802113c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 802113e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021142:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021146:	d406      	bmi.n	8021156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021148:	4584      	cmp	ip, r0
 802114a:	da04      	bge.n	8021156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802114c:	2b00      	cmp	r3, #0
 802114e:	db02      	blt.n	8021156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021150:	42bb      	cmp	r3, r7
 8021152:	f2c0 8184 	blt.w	802145e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021156:	f11c 0c01 	adds.w	ip, ip, #1
 802115a:	f100 8172 	bmi.w	8021442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802115e:	4561      	cmp	r1, ip
 8021160:	f2c0 816f 	blt.w	8021442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021164:	3301      	adds	r3, #1
 8021166:	f100 816c 	bmi.w	8021442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802116a:	429a      	cmp	r2, r3
 802116c:	f2c0 8169 	blt.w	8021442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021170:	9b07      	ldr	r3, [sp, #28]
 8021172:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8021174:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021176:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021178:	2b00      	cmp	r3, #0
 802117a:	f340 818e 	ble.w	802149a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 802117e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021180:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021184:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021186:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802118a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802118c:	141b      	asrs	r3, r3, #16
 802118e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021192:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021196:	f100 81d1 	bmi.w	802153c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802119a:	f101 38ff 	add.w	r8, r1, #4294967295
 802119e:	4543      	cmp	r3, r8
 80211a0:	f280 81cc 	bge.w	802153c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80211a4:	f1bc 0f00 	cmp.w	ip, #0
 80211a8:	f2c0 81c8 	blt.w	802153c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80211ac:	f10e 38ff 	add.w	r8, lr, #4294967295
 80211b0:	45c4      	cmp	ip, r8
 80211b2:	f280 81c3 	bge.w	802153c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80211b6:	b209      	sxth	r1, r1
 80211b8:	fb0c 3301 	mla	r3, ip, r1, r3
 80211bc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80211be:	eb04 0803 	add.w	r8, r4, r3
 80211c2:	5ce3      	ldrb	r3, [r4, r3]
 80211c4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80211c8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80211cc:	2a00      	cmp	r2, #0
 80211ce:	f000 81aa 	beq.w	8021526 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80211d2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80211d6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80211da:	940b      	str	r4, [sp, #44]	@ 0x2c
 80211dc:	0e24      	lsrs	r4, r4, #24
 80211de:	9412      	str	r4, [sp, #72]	@ 0x48
 80211e0:	b178      	cbz	r0, 8021202 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80211e2:	eb08 0c01 	add.w	ip, r8, r1
 80211e6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80211ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80211ee:	9108      	str	r1, [sp, #32]
 80211f0:	0e09      	lsrs	r1, r1, #24
 80211f2:	9110      	str	r1, [sp, #64]	@ 0x40
 80211f4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80211f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80211fc:	910c      	str	r1, [sp, #48]	@ 0x30
 80211fe:	0e09      	lsrs	r1, r1, #24
 8021200:	9113      	str	r1, [sp, #76]	@ 0x4c
 8021202:	b292      	uxth	r2, r2
 8021204:	b280      	uxth	r0, r0
 8021206:	fb02 f900 	mul.w	r9, r2, r0
 802120a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802120e:	0112      	lsls	r2, r2, #4
 8021210:	eba2 0809 	sub.w	r8, r2, r9
 8021214:	b280      	uxth	r0, r0
 8021216:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802121a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802121c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802121e:	fa1f f888 	uxth.w	r8, r8
 8021222:	1a12      	subs	r2, r2, r0
 8021224:	b292      	uxth	r2, r2
 8021226:	fb08 f101 	mul.w	r1, r8, r1
 802122a:	fb02 110e 	mla	r1, r2, lr, r1
 802122e:	fb00 1104 	mla	r1, r0, r4, r1
 8021232:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021234:	fb09 1104 	mla	r1, r9, r4, r1
 8021238:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802123c:	2900      	cmp	r1, #0
 802123e:	f000 80f5 	beq.w	802142c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021242:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8021246:	d01b      	beq.n	8021280 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021248:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802124c:	fb0e fa0a 	mul.w	sl, lr, sl
 8021250:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021254:	fb0e fe03 	mul.w	lr, lr, r3
 8021258:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802125c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021260:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021264:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8021268:	4453      	add	r3, sl
 802126a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802126e:	0a1b      	lsrs	r3, r3, #8
 8021270:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021274:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021278:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802127c:	ea43 030c 	orr.w	r3, r3, ip
 8021280:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021282:	2cff      	cmp	r4, #255	@ 0xff
 8021284:	d021      	beq.n	80212ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021286:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021288:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802128c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802128e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021292:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021294:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021298:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802129a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802129e:	fb04 fa0a 	mul.w	sl, r4, sl
 80212a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80212a6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80212aa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80212ae:	44de      	add	lr, fp
 80212b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80212b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212bc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80212c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80212c4:	ea4e 040a 	orr.w	r4, lr, sl
 80212c8:	940b      	str	r4, [sp, #44]	@ 0x2c
 80212ca:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80212cc:	2cff      	cmp	r4, #255	@ 0xff
 80212ce:	d021      	beq.n	8021314 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80212d0:	9c08      	ldr	r4, [sp, #32]
 80212d2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80212d6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80212d8:	fb04 fb0b 	mul.w	fp, r4, fp
 80212dc:	9c08      	ldr	r4, [sp, #32]
 80212de:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80212e2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80212e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80212e8:	fb04 fa0a 	mul.w	sl, r4, sl
 80212ec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80212f0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80212f4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80212f8:	44de      	add	lr, fp
 80212fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80212fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021302:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021306:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802130a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802130e:	ea4e 040a 	orr.w	r4, lr, sl
 8021312:	9408      	str	r4, [sp, #32]
 8021314:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021316:	2cff      	cmp	r4, #255	@ 0xff
 8021318:	d021      	beq.n	802135e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802131a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802131c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8021320:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021322:	fb04 fb0b 	mul.w	fp, r4, fp
 8021326:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8021328:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802132c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802132e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021332:	fb04 fa0a 	mul.w	sl, r4, sl
 8021336:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802133a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802133e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021342:	44de      	add	lr, fp
 8021344:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021348:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802134c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021350:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021354:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021358:	ea4e 040a 	orr.w	r4, lr, sl
 802135c:	940c      	str	r4, [sp, #48]	@ 0x30
 802135e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021360:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021364:	9c08      	ldr	r4, [sp, #32]
 8021366:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802136a:	fb08 fc0c 	mul.w	ip, r8, ip
 802136e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021372:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8021376:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8021378:	fb00 cc0e 	mla	ip, r0, lr, ip
 802137c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8021380:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021382:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021386:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802138a:	fb08 f80e 	mul.w	r8, r8, lr
 802138e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021392:	fb02 8303 	mla	r3, r2, r3, r8
 8021396:	9a08      	ldr	r2, [sp, #32]
 8021398:	f8b7 8000 	ldrh.w	r8, [r7]
 802139c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80213a0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80213a2:	fb00 330a 	mla	r3, r0, sl, r3
 80213a6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 80213aa:	fb09 3900 	mla	r9, r9, r0, r3
 80213ae:	43c9      	mvns	r1, r1
 80213b0:	ea4f 2228 	mov.w	r2, r8, asr #8
 80213b4:	fa5f fe81 	uxtb.w	lr, r1
 80213b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80213c0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80213c4:	fb02 f20e 	mul.w	r2, r2, lr
 80213c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80213cc:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80213d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80213d4:	1c53      	adds	r3, r2, #1
 80213d6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80213da:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80213de:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80213e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80213e6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80213ea:	4a63      	ldr	r2, [pc, #396]	@ (8021578 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80213ec:	fb00 f00e 	mul.w	r0, r0, lr
 80213f0:	b2db      	uxtb	r3, r3
 80213f2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80213f6:	1c43      	adds	r3, r0, #1
 80213f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80213fc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021400:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021404:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021408:	b2c9      	uxtb	r1, r1
 802140a:	00db      	lsls	r3, r3, #3
 802140c:	fb01 f10e 	mul.w	r1, r1, lr
 8021410:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021414:	4313      	orrs	r3, r2
 8021416:	1c4a      	adds	r2, r1, #1
 8021418:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802141c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021420:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021424:	ea4c 0c03 	orr.w	ip, ip, r3
 8021428:	f8a7 c000 	strh.w	ip, [r7]
 802142c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802142e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8021430:	441a      	add	r2, r3
 8021432:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021434:	9225      	str	r2, [sp, #148]	@ 0x94
 8021436:	441d      	add	r5, r3
 8021438:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802143a:	3b01      	subs	r3, #1
 802143c:	3702      	adds	r7, #2
 802143e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021440:	e699      	b.n	8021176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021442:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021444:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8021446:	441c      	add	r4, r3
 8021448:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802144a:	9425      	str	r4, [sp, #148]	@ 0x94
 802144c:	441d      	add	r5, r3
 802144e:	9b07      	ldr	r3, [sp, #28]
 8021450:	3b01      	subs	r3, #1
 8021452:	9307      	str	r3, [sp, #28]
 8021454:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021456:	3302      	adds	r3, #2
 8021458:	930a      	str	r3, [sp, #40]	@ 0x28
 802145a:	e66b      	b.n	8021134 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802145c:	d024      	beq.n	80214a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802145e:	9b07      	ldr	r3, [sp, #28]
 8021460:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8021462:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8021464:	3b01      	subs	r3, #1
 8021466:	fb00 4003 	mla	r0, r0, r3, r4
 802146a:	1400      	asrs	r0, r0, #16
 802146c:	f53f ae80 	bmi.w	8021170 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021470:	3901      	subs	r1, #1
 8021472:	4288      	cmp	r0, r1
 8021474:	f6bf ae7c 	bge.w	8021170 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021478:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802147a:	fb01 5303 	mla	r3, r1, r3, r5
 802147e:	141b      	asrs	r3, r3, #16
 8021480:	f53f ae76 	bmi.w	8021170 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021484:	3a01      	subs	r2, #1
 8021486:	4293      	cmp	r3, r2
 8021488:	f6bf ae72 	bge.w	8021170 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802148c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021490:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8021494:	f1bb 0f00 	cmp.w	fp, #0
 8021498:	dc70      	bgt.n	802157c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802149a:	9b07      	ldr	r3, [sp, #28]
 802149c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80214a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80214a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80214a6:	930a      	str	r3, [sp, #40]	@ 0x28
 80214a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80214aa:	2b00      	cmp	r3, #0
 80214ac:	f340 81ae 	ble.w	802180c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80214b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80214b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80214b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80214bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80214be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80214c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80214c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80214ca:	eef0 6a62 	vmov.f32	s13, s5
 80214ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80214d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80214da:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 80214de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80214e2:	eef0 6a43 	vmov.f32	s13, s6
 80214e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80214ea:	ee12 2a90 	vmov	r2, s5
 80214ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80214f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80214f6:	ee13 2a10 	vmov	r2, s6
 80214fa:	9327      	str	r3, [sp, #156]	@ 0x9c
 80214fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80214fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8021502:	9328      	str	r3, [sp, #160]	@ 0xa0
 8021504:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021506:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8021508:	3b01      	subs	r3, #1
 802150a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802150e:	9316      	str	r3, [sp, #88]	@ 0x58
 8021510:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021512:	bf08      	it	eq
 8021514:	4613      	moveq	r3, r2
 8021516:	ee16 5a90 	vmov	r5, s13
 802151a:	9307      	str	r3, [sp, #28]
 802151c:	eeb0 3a67 	vmov.f32	s6, s15
 8021520:	eef0 2a47 	vmov.f32	s5, s14
 8021524:	e5f8      	b.n	8021118 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021526:	2800      	cmp	r0, #0
 8021528:	f43f ae6b 	beq.w	8021202 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802152c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021530:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021534:	9108      	str	r1, [sp, #32]
 8021536:	0e09      	lsrs	r1, r1, #24
 8021538:	9110      	str	r1, [sp, #64]	@ 0x40
 802153a:	e662      	b.n	8021202 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802153c:	f113 0801 	adds.w	r8, r3, #1
 8021540:	f53f af74 	bmi.w	802142c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021544:	4541      	cmp	r1, r8
 8021546:	f6ff af71 	blt.w	802142c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802154a:	f11c 0801 	adds.w	r8, ip, #1
 802154e:	f53f af6d 	bmi.w	802142c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021552:	45c6      	cmp	lr, r8
 8021554:	f6ff af6a 	blt.w	802142c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021558:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802155c:	b209      	sxth	r1, r1
 802155e:	fa0f f38e 	sxth.w	r3, lr
 8021562:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021566:	9301      	str	r3, [sp, #4]
 8021568:	9100      	str	r1, [sp, #0]
 802156a:	4633      	mov	r3, r6
 802156c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802156e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8021570:	4639      	mov	r1, r7
 8021572:	f7ff fc7a 	bl	8020e6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021576:	e759      	b.n	802142c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021578:	fffff800 	.word	0xfffff800
 802157c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802157e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8021580:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021584:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021586:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802158a:	1427      	asrs	r7, r4, #16
 802158c:	142b      	asrs	r3, r5, #16
 802158e:	fb01 7303 	mla	r3, r1, r3, r7
 8021592:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021594:	18e7      	adds	r7, r4, r3
 8021596:	5ce3      	ldrb	r3, [r4, r3]
 8021598:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802159c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80215a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80215a4:	2a00      	cmp	r2, #0
 80215a6:	f000 8127 	beq.w	80217f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80215aa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80215ae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80215b2:	940d      	str	r4, [sp, #52]	@ 0x34
 80215b4:	0e24      	lsrs	r4, r4, #24
 80215b6:	9414      	str	r4, [sp, #80]	@ 0x50
 80215b8:	b170      	cbz	r0, 80215d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80215ba:	eb07 0e01 	add.w	lr, r7, r1
 80215be:	5c79      	ldrb	r1, [r7, r1]
 80215c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80215c4:	9109      	str	r1, [sp, #36]	@ 0x24
 80215c6:	0e09      	lsrs	r1, r1, #24
 80215c8:	9111      	str	r1, [sp, #68]	@ 0x44
 80215ca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80215ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80215d2:	910e      	str	r1, [sp, #56]	@ 0x38
 80215d4:	0e09      	lsrs	r1, r1, #24
 80215d6:	9115      	str	r1, [sp, #84]	@ 0x54
 80215d8:	b292      	uxth	r2, r2
 80215da:	b280      	uxth	r0, r0
 80215dc:	fb02 f800 	mul.w	r8, r2, r0
 80215e0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80215e4:	0112      	lsls	r2, r2, #4
 80215e6:	eba2 0e08 	sub.w	lr, r2, r8
 80215ea:	b280      	uxth	r0, r0
 80215ec:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80215f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80215f2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80215f4:	fa1f fe8e 	uxth.w	lr, lr
 80215f8:	1a09      	subs	r1, r1, r0
 80215fa:	b289      	uxth	r1, r1
 80215fc:	fb0e f202 	mul.w	r2, lr, r2
 8021600:	fb01 220c 	mla	r2, r1, ip, r2
 8021604:	fb00 2204 	mla	r2, r0, r4, r2
 8021608:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802160a:	fb08 2204 	mla	r2, r8, r4, r2
 802160e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021612:	2a00      	cmp	r2, #0
 8021614:	f000 80e5 	beq.w	80217e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021618:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802161c:	d019      	beq.n	8021652 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802161e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021622:	fb0c fa0a 	mul.w	sl, ip, sl
 8021626:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802162a:	fb0c fc03 	mul.w	ip, ip, r3
 802162e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021632:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021636:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802163a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802163e:	4453      	add	r3, sl
 8021640:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021644:	0a1b      	lsrs	r3, r3, #8
 8021646:	0a3f      	lsrs	r7, r7, #8
 8021648:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802164c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021650:	433b      	orrs	r3, r7
 8021652:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021654:	2cff      	cmp	r4, #255	@ 0xff
 8021656:	d020      	beq.n	802169a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021658:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802165a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802165e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021660:	4367      	muls	r7, r4
 8021662:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021664:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021668:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802166a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802166e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021672:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021676:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802167a:	44bc      	add	ip, r7
 802167c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021680:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021684:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802168c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021690:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021694:	ea4c 040a 	orr.w	r4, ip, sl
 8021698:	940d      	str	r4, [sp, #52]	@ 0x34
 802169a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802169c:	2cff      	cmp	r4, #255	@ 0xff
 802169e:	d020      	beq.n	80216e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80216a0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80216a2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80216a6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80216a8:	4367      	muls	r7, r4
 80216aa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80216ac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80216b0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80216b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80216b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80216ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80216be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80216c2:	44bc      	add	ip, r7
 80216c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80216c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80216cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80216d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80216d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80216dc:	ea4c 040a 	orr.w	r4, ip, sl
 80216e0:	9409      	str	r4, [sp, #36]	@ 0x24
 80216e2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80216e4:	2cff      	cmp	r4, #255	@ 0xff
 80216e6:	d020      	beq.n	802172a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80216e8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80216ea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80216ee:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80216f0:	4367      	muls	r7, r4
 80216f2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80216f4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80216f8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80216fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80216fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8021702:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021706:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802170a:	44bc      	add	ip, r7
 802170c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021710:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021714:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021718:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802171c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021720:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021724:	ea4c 040a 	orr.w	r4, ip, sl
 8021728:	940e      	str	r4, [sp, #56]	@ 0x38
 802172a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802172c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021730:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8021732:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8021736:	fb0e f707 	mul.w	r7, lr, r7
 802173a:	fb01 770c 	mla	r7, r1, ip, r7
 802173e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021742:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021744:	fb00 770c 	mla	r7, r0, ip, r7
 8021748:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802174c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802174e:	fb08 770c 	mla	r7, r8, ip, r7
 8021752:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8021756:	fb0e fe0c 	mul.w	lr, lr, ip
 802175a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802175e:	fb01 e303 	mla	r3, r1, r3, lr
 8021762:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021764:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8021768:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802176a:	fb00 330a 	mla	r3, r0, sl, r3
 802176e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8021772:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021776:	f8b9 3000 	ldrh.w	r3, [r9]
 802177a:	43d2      	mvns	r2, r2
 802177c:	1218      	asrs	r0, r3, #8
 802177e:	b2d2      	uxtb	r2, r2
 8021780:	10d9      	asrs	r1, r3, #3
 8021782:	0a3f      	lsrs	r7, r7, #8
 8021784:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021788:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802178c:	00db      	lsls	r3, r3, #3
 802178e:	4350      	muls	r0, r2
 8021790:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021794:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021798:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802179c:	b2db      	uxtb	r3, r3
 802179e:	ea47 070c 	orr.w	r7, r7, ip
 80217a2:	4351      	muls	r1, r2
 80217a4:	4353      	muls	r3, r2
 80217a6:	1c42      	adds	r2, r0, #1
 80217a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80217ac:	0c3a      	lsrs	r2, r7, #16
 80217ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80217b2:	4a18      	ldr	r2, [pc, #96]	@ (8021814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80217b4:	b2c0      	uxtb	r0, r0
 80217b6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80217ba:	1c4a      	adds	r2, r1, #1
 80217bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80217c0:	0a3a      	lsrs	r2, r7, #8
 80217c2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80217c6:	00c9      	lsls	r1, r1, #3
 80217c8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80217cc:	4301      	orrs	r1, r0
 80217ce:	1c58      	adds	r0, r3, #1
 80217d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80217d4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80217d8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80217dc:	4308      	orrs	r0, r1
 80217de:	f8a9 0000 	strh.w	r0, [r9]
 80217e2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80217e4:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80217e6:	441a      	add	r2, r3
 80217e8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80217ea:	9225      	str	r2, [sp, #148]	@ 0x94
 80217ec:	f109 0902 	add.w	r9, r9, #2
 80217f0:	441d      	add	r5, r3
 80217f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80217f6:	e64d      	b.n	8021494 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80217f8:	2800      	cmp	r0, #0
 80217fa:	f43f aeed 	beq.w	80215d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80217fe:	5c79      	ldrb	r1, [r7, r1]
 8021800:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021804:	9109      	str	r1, [sp, #36]	@ 0x24
 8021806:	0e09      	lsrs	r1, r1, #24
 8021808:	9111      	str	r1, [sp, #68]	@ 0x44
 802180a:	e6e5      	b.n	80215d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802180c:	b01b      	add	sp, #108	@ 0x6c
 802180e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021812:	bf00      	nop
 8021814:	fffff800 	.word	0xfffff800

08021818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802181c:	b085      	sub	sp, #20
 802181e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8021822:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8021826:	9103      	str	r1, [sp, #12]
 8021828:	fb00 7406 	mla	r4, r0, r6, r7
 802182c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021830:	2800      	cmp	r0, #0
 8021832:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8021836:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802183a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802183e:	9501      	str	r5, [sp, #4]
 8021840:	eb03 0904 	add.w	r9, r3, r4
 8021844:	f2c0 8150 	blt.w	8021ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021848:	4583      	cmp	fp, r0
 802184a:	f340 814d 	ble.w	8021ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802184e:	2f00      	cmp	r7, #0
 8021850:	f2c0 8146 	blt.w	8021ae0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021854:	42be      	cmp	r6, r7
 8021856:	f340 8143 	ble.w	8021ae0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802185a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802185e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021862:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021866:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802186a:	4355      	muls	r5, r2
 802186c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021870:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8021874:	fb0c f203 	mul.w	r2, ip, r3
 8021878:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802187c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8021880:	441d      	add	r5, r3
 8021882:	f102 0320 	add.w	r3, r2, #32
 8021886:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802188a:	0a1b      	lsrs	r3, r3, #8
 802188c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021890:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021894:	431c      	orrs	r4, r3
 8021896:	1c7b      	adds	r3, r7, #1
 8021898:	f100 812b 	bmi.w	8021af2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802189c:	429e      	cmp	r6, r3
 802189e:	f340 8128 	ble.w	8021af2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80218a2:	2900      	cmp	r1, #0
 80218a4:	f000 8128 	beq.w	8021af8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80218a8:	9a01      	ldr	r2, [sp, #4]
 80218aa:	f899 3001 	ldrb.w	r3, [r9, #1]
 80218ae:	8855      	ldrh	r5, [r2, #2]
 80218b0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80218b4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80218b8:	fb08 f802 	mul.w	r8, r8, r2
 80218bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80218c0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80218c4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80218c8:	435d      	muls	r5, r3
 80218ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80218ce:	44d0      	add	r8, sl
 80218d0:	f105 0a20 	add.w	sl, r5, #32
 80218d4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80218d8:	0a2d      	lsrs	r5, r5, #8
 80218da:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80218de:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80218e2:	432a      	orrs	r2, r5
 80218e4:	3001      	adds	r0, #1
 80218e6:	f100 810d 	bmi.w	8021b04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80218ea:	4583      	cmp	fp, r0
 80218ec:	f340 810a 	ble.w	8021b04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80218f0:	f1be 0f00 	cmp.w	lr, #0
 80218f4:	f000 810b 	beq.w	8021b0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80218f8:	2f00      	cmp	r7, #0
 80218fa:	f2c0 8100 	blt.w	8021afe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80218fe:	42be      	cmp	r6, r7
 8021900:	f340 80fd 	ble.w	8021afe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021904:	9801      	ldr	r0, [sp, #4]
 8021906:	f819 5006 	ldrb.w	r5, [r9, r6]
 802190a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802190e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021912:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8021916:	fb0a fa00 	mul.w	sl, sl, r0
 802191a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802191e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021922:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021926:	fb05 f808 	mul.w	r8, r5, r8
 802192a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802192e:	4482      	add	sl, r0
 8021930:	f108 0020 	add.w	r0, r8, #32
 8021934:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021938:	0a00      	lsrs	r0, r0, #8
 802193a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802193e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021942:	ea4b 0b00 	orr.w	fp, fp, r0
 8021946:	3701      	adds	r7, #1
 8021948:	f100 80e6 	bmi.w	8021b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802194c:	42be      	cmp	r6, r7
 802194e:	f340 80e3 	ble.w	8021b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021952:	2900      	cmp	r1, #0
 8021954:	f000 80e3 	beq.w	8021b1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021958:	3601      	adds	r6, #1
 802195a:	9801      	ldr	r0, [sp, #4]
 802195c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021960:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021964:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021968:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 802196c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021970:	fb09 f906 	mul.w	r9, r9, r6
 8021974:	fb07 f800 	mul.w	r8, r7, r0
 8021978:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 802197c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021980:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021984:	44d1      	add	r9, sl
 8021986:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802198a:	f108 0020 	add.w	r0, r8, #32
 802198e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021992:	0a00      	lsrs	r0, r0, #8
 8021994:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021998:	4330      	orrs	r0, r6
 802199a:	b28e      	uxth	r6, r1
 802199c:	fa1f f98e 	uxth.w	r9, lr
 80219a0:	fb06 f809 	mul.w	r8, r6, r9
 80219a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80219a8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80219ac:	0136      	lsls	r6, r6, #4
 80219ae:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80219b2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80219b6:	9601      	str	r6, [sp, #4]
 80219b8:	ea4a 0404 	orr.w	r4, sl, r4
 80219bc:	fa1f f689 	uxth.w	r6, r9
 80219c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80219c4:	fb11 f90e 	smulbb	r9, r1, lr
 80219c8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80219cc:	9602      	str	r6, [sp, #8]
 80219ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80219d2:	4626      	mov	r6, r4
 80219d4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80219d8:	f1ce 0410 	rsb	r4, lr, #16
 80219dc:	1a64      	subs	r4, r4, r1
 80219de:	ea4a 0202 	orr.w	r2, sl, r2
 80219e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80219e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80219ea:	434a      	muls	r2, r1
 80219ec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80219f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80219f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80219f8:	fb04 2406 	mla	r4, r4, r6, r2
 80219fc:	ea4a 0000 	orr.w	r0, sl, r0
 8021a00:	fb09 4200 	mla	r2, r9, r0, r4
 8021a04:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021a08:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021a0c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021a10:	ea44 0b0b 	orr.w	fp, r4, fp
 8021a14:	9c01      	ldr	r4, [sp, #4]
 8021a16:	9e02      	ldr	r6, [sp, #8]
 8021a18:	9903      	ldr	r1, [sp, #12]
 8021a1a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8021a1e:	1ba4      	subs	r4, r4, r6
 8021a20:	9e01      	ldr	r6, [sp, #4]
 8021a22:	8808      	ldrh	r0, [r1, #0]
 8021a24:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8021a28:	eba6 0608 	sub.w	r6, r6, r8
 8021a2c:	b2b6      	uxth	r6, r6
 8021a2e:	b2a4      	uxth	r4, r4
 8021a30:	4373      	muls	r3, r6
 8021a32:	fb0c 3304 	mla	r3, ip, r4, r3
 8021a36:	9c02      	ldr	r4, [sp, #8]
 8021a38:	fb04 3505 	mla	r5, r4, r5, r3
 8021a3c:	fb08 5707 	mla	r7, r8, r7, r5
 8021a40:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021a44:	b289      	uxth	r1, r1
 8021a46:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021a4a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021a4e:	434f      	muls	r7, r1
 8021a50:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021a54:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021a58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021a5c:	1c7b      	adds	r3, r7, #1
 8021a5e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021a62:	ea42 0e0e 	orr.w	lr, r2, lr
 8021a66:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021a6a:	fa1f f28e 	uxth.w	r2, lr
 8021a6e:	1203      	asrs	r3, r0, #8
 8021a70:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021a74:	b2ff      	uxtb	r7, r7
 8021a76:	1215      	asrs	r5, r2, #8
 8021a78:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021a7c:	fb13 f307 	smulbb	r3, r3, r7
 8021a80:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021a84:	fb05 3501 	mla	r5, r5, r1, r3
 8021a88:	10c3      	asrs	r3, r0, #3
 8021a8a:	10d4      	asrs	r4, r2, #3
 8021a8c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021a90:	fb13 f307 	smulbb	r3, r3, r7
 8021a94:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8021a98:	fb04 3401 	mla	r4, r4, r1, r3
 8021a9c:	00c3      	lsls	r3, r0, #3
 8021a9e:	00d2      	lsls	r2, r2, #3
 8021aa0:	b2db      	uxtb	r3, r3
 8021aa2:	fb13 f307 	smulbb	r3, r3, r7
 8021aa6:	b2d2      	uxtb	r2, r2
 8021aa8:	fb02 3101 	mla	r1, r2, r1, r3
 8021aac:	b2ad      	uxth	r5, r5
 8021aae:	b289      	uxth	r1, r1
 8021ab0:	b2a4      	uxth	r4, r4
 8021ab2:	1c6b      	adds	r3, r5, #1
 8021ab4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ab8:	1c62      	adds	r2, r4, #1
 8021aba:	1c4b      	adds	r3, r1, #1
 8021abc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021ac0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021ac4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021ac8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021acc:	0964      	lsrs	r4, r4, #5
 8021ace:	432b      	orrs	r3, r5
 8021ad0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021ad4:	9a03      	ldr	r2, [sp, #12]
 8021ad6:	4323      	orrs	r3, r4
 8021ad8:	8013      	strh	r3, [r2, #0]
 8021ada:	b005      	add	sp, #20
 8021adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ae0:	f04f 0c00 	mov.w	ip, #0
 8021ae4:	4664      	mov	r4, ip
 8021ae6:	e6d6      	b.n	8021896 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021ae8:	2300      	movs	r3, #0
 8021aea:	469c      	mov	ip, r3
 8021aec:	461a      	mov	r2, r3
 8021aee:	461c      	mov	r4, r3
 8021af0:	e6f8      	b.n	80218e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021af2:	2300      	movs	r3, #0
 8021af4:	461a      	mov	r2, r3
 8021af6:	e6f5      	b.n	80218e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021af8:	460b      	mov	r3, r1
 8021afa:	460a      	mov	r2, r1
 8021afc:	e6f2      	b.n	80218e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021afe:	2500      	movs	r5, #0
 8021b00:	46ab      	mov	fp, r5
 8021b02:	e720      	b.n	8021946 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021b04:	2700      	movs	r7, #0
 8021b06:	463d      	mov	r5, r7
 8021b08:	4638      	mov	r0, r7
 8021b0a:	46bb      	mov	fp, r7
 8021b0c:	e745      	b.n	802199a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021b0e:	4677      	mov	r7, lr
 8021b10:	4675      	mov	r5, lr
 8021b12:	4670      	mov	r0, lr
 8021b14:	46f3      	mov	fp, lr
 8021b16:	e740      	b.n	802199a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021b18:	2700      	movs	r7, #0
 8021b1a:	4638      	mov	r0, r7
 8021b1c:	e73d      	b.n	802199a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021b1e:	460f      	mov	r7, r1
 8021b20:	4608      	mov	r0, r1
 8021b22:	e73a      	b.n	802199a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b28:	b097      	sub	sp, #92	@ 0x5c
 8021b2a:	9214      	str	r2, [sp, #80]	@ 0x50
 8021b2c:	9308      	str	r3, [sp, #32]
 8021b2e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8021b30:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8021b34:	9312      	str	r3, [sp, #72]	@ 0x48
 8021b36:	9111      	str	r1, [sp, #68]	@ 0x44
 8021b38:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8021b3c:	9015      	str	r0, [sp, #84]	@ 0x54
 8021b3e:	6850      	ldr	r0, [r2, #4]
 8021b40:	6812      	ldr	r2, [r2, #0]
 8021b42:	fb00 1303 	mla	r3, r0, r3, r1
 8021b46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021b4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8021b4c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021b4e:	681b      	ldr	r3, [r3, #0]
 8021b50:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021b52:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021b54:	685b      	ldr	r3, [r3, #4]
 8021b56:	930c      	str	r3, [sp, #48]	@ 0x30
 8021b58:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8021b5c:	930a      	str	r3, [sp, #40]	@ 0x28
 8021b5e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021b60:	2b00      	cmp	r3, #0
 8021b62:	dc03      	bgt.n	8021b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021b64:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8021b66:	2b00      	cmp	r3, #0
 8021b68:	f340 83cb 	ble.w	8022302 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021b6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021b6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021b76:	1e48      	subs	r0, r1, #1
 8021b78:	1e55      	subs	r5, r2, #1
 8021b7a:	9b08      	ldr	r3, [sp, #32]
 8021b7c:	2b00      	cmp	r3, #0
 8021b7e:	f340 81a3 	ble.w	8021ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021b82:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8021b84:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021b86:	1436      	asrs	r6, r6, #16
 8021b88:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021b8c:	d406      	bmi.n	8021b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021b8e:	4286      	cmp	r6, r0
 8021b90:	da04      	bge.n	8021b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021b92:	2b00      	cmp	r3, #0
 8021b94:	db02      	blt.n	8021b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021b96:	42ab      	cmp	r3, r5
 8021b98:	f2c0 8197 	blt.w	8021eca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021b9c:	3601      	adds	r6, #1
 8021b9e:	f100 8184 	bmi.w	8021eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021ba2:	42b1      	cmp	r1, r6
 8021ba4:	f2c0 8181 	blt.w	8021eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021ba8:	3301      	adds	r3, #1
 8021baa:	f100 817e 	bmi.w	8021eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021bae:	429a      	cmp	r2, r3
 8021bb0:	f2c0 817b 	blt.w	8021eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021bb4:	9b08      	ldr	r3, [sp, #32]
 8021bb6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8021bb8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021bba:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021bbe:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021bc0:	2b00      	cmp	r3, #0
 8021bc2:	f340 81a4 	ble.w	8021f0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021bc6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021bc8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021bca:	1418      	asrs	r0, r3, #16
 8021bcc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021bce:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021bd2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021bd4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021bd8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021bda:	142d      	asrs	r5, r5, #16
 8021bdc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021be0:	f100 81f8 	bmi.w	8021fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021be4:	f102 3eff 	add.w	lr, r2, #4294967295
 8021be8:	4575      	cmp	r5, lr
 8021bea:	f280 81f3 	bge.w	8021fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021bee:	2800      	cmp	r0, #0
 8021bf0:	f2c0 81f0 	blt.w	8021fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021bf4:	f103 3eff 	add.w	lr, r3, #4294967295
 8021bf8:	4570      	cmp	r0, lr
 8021bfa:	f280 81eb 	bge.w	8021fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021bfe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021c00:	b212      	sxth	r2, r2
 8021c02:	fb00 5002 	mla	r0, r0, r2, r5
 8021c06:	fa1f fe81 	uxth.w	lr, r1
 8021c0a:	eb03 0a00 	add.w	sl, r3, r0
 8021c0e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021c12:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021c16:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021c1a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021c1e:	b29b      	uxth	r3, r3
 8021c20:	f1bc 0f00 	cmp.w	ip, #0
 8021c24:	f000 81b9 	beq.w	8021f9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021c28:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021c2c:	940d      	str	r4, [sp, #52]	@ 0x34
 8021c2e:	eb0a 0b02 	add.w	fp, sl, r2
 8021c32:	fa1f fa8c 	uxth.w	sl, ip
 8021c36:	fb0a fe0e 	mul.w	lr, sl, lr
 8021c3a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021c3e:	fa1f fa8a 	uxth.w	sl, sl
 8021c42:	eba5 050e 	sub.w	r5, r5, lr
 8021c46:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021c4a:	940e      	str	r4, [sp, #56]	@ 0x38
 8021c4c:	eba3 030a 	sub.w	r3, r3, sl
 8021c50:	b2ad      	uxth	r5, r5
 8021c52:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021c54:	b29b      	uxth	r3, r3
 8021c56:	fb08 f505 	mul.w	r5, r8, r5
 8021c5a:	fb09 5303 	mla	r3, r9, r3, r5
 8021c5e:	fb0a 3304 	mla	r3, sl, r4, r3
 8021c62:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021c64:	fb0e 3304 	mla	r3, lr, r4, r3
 8021c68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021c6c:	2b00      	cmp	r3, #0
 8021c6e:	f000 810f 	beq.w	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c72:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021c74:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021c78:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021c7c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021c80:	f000 8190 	beq.w	8021fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021c84:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021c88:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021c8c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021c90:	fb09 f000 	mul.w	r0, r9, r0
 8021c94:	fb0a fe0e 	mul.w	lr, sl, lr
 8021c98:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021c9c:	f100 0b20 	add.w	fp, r0, #32
 8021ca0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021ca4:	44ce      	add	lr, r9
 8021ca6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021caa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021cae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021cb2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021cb6:	ea4e 0909 	orr.w	r9, lr, r9
 8021cba:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021cbe:	8868      	ldrh	r0, [r5, #2]
 8021cc0:	d019      	beq.n	8021cf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021cc2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021cc6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021cca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021cce:	fb08 f800 	mul.w	r8, r8, r0
 8021cd2:	fb0a fe0e 	mul.w	lr, sl, lr
 8021cd6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021cda:	f108 0b20 	add.w	fp, r8, #32
 8021cde:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021ce2:	4486      	add	lr, r0
 8021ce4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021ce8:	0a00      	lsrs	r0, r0, #8
 8021cea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021cee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021cf2:	ea4e 0000 	orr.w	r0, lr, r0
 8021cf6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021cfa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021cfe:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021d02:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021d06:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021d0a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021d0e:	ea4e 0909 	orr.w	r9, lr, r9
 8021d12:	ea4a 0000 	orr.w	r0, sl, r0
 8021d16:	f1bc 0f00 	cmp.w	ip, #0
 8021d1a:	f000 8145 	beq.w	8021fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021d1e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021d22:	3a01      	subs	r2, #1
 8021d24:	0052      	lsls	r2, r2, #1
 8021d26:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021d28:	3202      	adds	r2, #2
 8021d2a:	2cff      	cmp	r4, #255	@ 0xff
 8021d2c:	eb05 0e02 	add.w	lr, r5, r2
 8021d30:	5aaa      	ldrh	r2, [r5, r2]
 8021d32:	d018      	beq.n	8021d66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021d34:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8021d38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021d3c:	fb04 fa02 	mul.w	sl, r4, r2
 8021d40:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021d44:	fb08 f805 	mul.w	r8, r8, r5
 8021d48:	f10a 0520 	add.w	r5, sl, #32
 8021d4c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021d50:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021d54:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021d58:	4442      	add	r2, r8
 8021d5a:	0a2d      	lsrs	r5, r5, #8
 8021d5c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021d60:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021d64:	432a      	orrs	r2, r5
 8021d66:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021d68:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021d6c:	2cff      	cmp	r4, #255	@ 0xff
 8021d6e:	d01a      	beq.n	8021da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021d70:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021d74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021d78:	fb04 fa05 	mul.w	sl, r4, r5
 8021d7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021d80:	fb08 f80e 	mul.w	r8, r8, lr
 8021d84:	f10a 0e20 	add.w	lr, sl, #32
 8021d88:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021d8c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021d90:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021d94:	4445      	add	r5, r8
 8021d96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021d9a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021d9e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021da2:	ea45 050e 	orr.w	r5, r5, lr
 8021da6:	fb1c fe01 	smulbb	lr, ip, r1
 8021daa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021dae:	f1cc 0810 	rsb	r8, ip, #16
 8021db2:	eba8 0801 	sub.w	r8, r8, r1
 8021db6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021dba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021dbe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021dc2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021dc6:	4341      	muls	r1, r0
 8021dc8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021dcc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021dd0:	ea4a 0202 	orr.w	r2, sl, r2
 8021dd4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021dd8:	fb09 1108 	mla	r1, r9, r8, r1
 8021ddc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021de0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021de4:	fb0c 1102 	mla	r1, ip, r2, r1
 8021de8:	ea4b 0505 	orr.w	r5, fp, r5
 8021dec:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021df0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021df4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021df8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021dfc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021e00:	ea42 0e0e 	orr.w	lr, r2, lr
 8021e04:	fa1f f28e 	uxth.w	r2, lr
 8021e08:	2bff      	cmp	r3, #255	@ 0xff
 8021e0a:	d103      	bne.n	8021e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021e0c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021e0e:	29ff      	cmp	r1, #255	@ 0xff
 8021e10:	f000 80de 	beq.w	8021fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021e14:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021e16:	8838      	ldrh	r0, [r7, #0]
 8021e18:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021e1a:	434b      	muls	r3, r1
 8021e1c:	f103 0c01 	add.w	ip, r3, #1
 8021e20:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021e24:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021e28:	fa5f fc83 	uxtb.w	ip, r3
 8021e2c:	1203      	asrs	r3, r0, #8
 8021e2e:	1215      	asrs	r5, r2, #8
 8021e30:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021e34:	fb13 f30c 	smulbb	r3, r3, ip
 8021e38:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021e3c:	fb05 3501 	mla	r5, r5, r1, r3
 8021e40:	10c3      	asrs	r3, r0, #3
 8021e42:	10d1      	asrs	r1, r2, #3
 8021e44:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021e48:	fb13 f30c 	smulbb	r3, r3, ip
 8021e4c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021e50:	fb01 3104 	mla	r1, r1, r4, r3
 8021e54:	00c3      	lsls	r3, r0, #3
 8021e56:	00d2      	lsls	r2, r2, #3
 8021e58:	b2db      	uxtb	r3, r3
 8021e5a:	b2d2      	uxtb	r2, r2
 8021e5c:	fb13 f30c 	smulbb	r3, r3, ip
 8021e60:	b2ad      	uxth	r5, r5
 8021e62:	fb02 3304 	mla	r3, r2, r4, r3
 8021e66:	b29a      	uxth	r2, r3
 8021e68:	1c6b      	adds	r3, r5, #1
 8021e6a:	b289      	uxth	r1, r1
 8021e6c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021e70:	1c53      	adds	r3, r2, #1
 8021e72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021e76:	1c4a      	adds	r2, r1, #1
 8021e78:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021e7c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021e80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021e84:	0949      	lsrs	r1, r1, #5
 8021e86:	432b      	orrs	r3, r5
 8021e88:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021e8c:	430b      	orrs	r3, r1
 8021e8e:	803b      	strh	r3, [r7, #0]
 8021e90:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021e92:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021e94:	4413      	add	r3, r2
 8021e96:	9321      	str	r3, [sp, #132]	@ 0x84
 8021e98:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8021e9a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021e9c:	441a      	add	r2, r3
 8021e9e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021ea0:	9222      	str	r2, [sp, #136]	@ 0x88
 8021ea2:	3b01      	subs	r3, #1
 8021ea4:	3702      	adds	r7, #2
 8021ea6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021ea8:	e689      	b.n	8021bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021eaa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021eac:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8021eae:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8021eb0:	4433      	add	r3, r6
 8021eb2:	9321      	str	r3, [sp, #132]	@ 0x84
 8021eb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021eb6:	441c      	add	r4, r3
 8021eb8:	9b08      	ldr	r3, [sp, #32]
 8021eba:	9422      	str	r4, [sp, #136]	@ 0x88
 8021ebc:	3b01      	subs	r3, #1
 8021ebe:	9308      	str	r3, [sp, #32]
 8021ec0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021ec2:	3302      	adds	r3, #2
 8021ec4:	9309      	str	r3, [sp, #36]	@ 0x24
 8021ec6:	e658      	b.n	8021b7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021ec8:	d028      	beq.n	8021f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021eca:	9b08      	ldr	r3, [sp, #32]
 8021ecc:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8021ece:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021ed0:	3b01      	subs	r3, #1
 8021ed2:	fb00 5003 	mla	r0, r0, r3, r5
 8021ed6:	1400      	asrs	r0, r0, #16
 8021ed8:	f53f ae6c 	bmi.w	8021bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021edc:	3901      	subs	r1, #1
 8021ede:	4288      	cmp	r0, r1
 8021ee0:	f6bf ae68 	bge.w	8021bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021ee4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8021ee6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8021ee8:	fb01 0303 	mla	r3, r1, r3, r0
 8021eec:	141b      	asrs	r3, r3, #16
 8021eee:	f53f ae61 	bmi.w	8021bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021ef2:	3a01      	subs	r2, #1
 8021ef4:	4293      	cmp	r3, r2
 8021ef6:	f6bf ae5d 	bge.w	8021bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021efa:	9b08      	ldr	r3, [sp, #32]
 8021efc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8021f00:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021f02:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021f06:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021f08:	2b00      	cmp	r3, #0
 8021f0a:	f300 8082 	bgt.w	8022012 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021f0e:	9b08      	ldr	r3, [sp, #32]
 8021f10:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021f14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021f16:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021f1a:	9309      	str	r3, [sp, #36]	@ 0x24
 8021f1c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021f1e:	2b00      	cmp	r3, #0
 8021f20:	f340 81ef 	ble.w	8022302 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021f24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021f28:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021f2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021f30:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021f32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f3e:	eef0 6a62 	vmov.f32	s13, s5
 8021f42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f4e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8021f52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f56:	eef0 6a43 	vmov.f32	s13, s6
 8021f5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f5e:	ee12 2a90 	vmov	r2, s5
 8021f62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f6a:	ee13 2a10 	vmov	r2, s6
 8021f6e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8021f70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021f72:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f76:	9324      	str	r3, [sp, #144]	@ 0x90
 8021f78:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021f7a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021f7c:	3b01      	subs	r3, #1
 8021f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f82:	9311      	str	r3, [sp, #68]	@ 0x44
 8021f84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021f86:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8021f8a:	bf08      	it	eq
 8021f8c:	4613      	moveq	r3, r2
 8021f8e:	9308      	str	r3, [sp, #32]
 8021f90:	eeb0 3a67 	vmov.f32	s6, s15
 8021f94:	eef0 2a47 	vmov.f32	s5, s14
 8021f98:	e5e1      	b.n	8021b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021f9a:	fb08 f505 	mul.w	r5, r8, r5
 8021f9e:	fb09 5303 	mla	r3, r9, r3, r5
 8021fa2:	e661      	b.n	8021c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021fa4:	4681      	mov	r9, r0
 8021fa6:	e688      	b.n	8021cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021fa8:	f1c1 0210 	rsb	r2, r1, #16
 8021fac:	4341      	muls	r1, r0
 8021fae:	fb09 1902 	mla	r9, r9, r2, r1
 8021fb2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021fb6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021fba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021fbe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021fc2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021fc6:	ea42 0909 	orr.w	r9, r2, r9
 8021fca:	fa1f f289 	uxth.w	r2, r9
 8021fce:	e71b      	b.n	8021e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021fd0:	803a      	strh	r2, [r7, #0]
 8021fd2:	e75d      	b.n	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021fd4:	f115 0e01 	adds.w	lr, r5, #1
 8021fd8:	f53f af5a 	bmi.w	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021fdc:	4572      	cmp	r2, lr
 8021fde:	f6ff af57 	blt.w	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021fe2:	f110 0e01 	adds.w	lr, r0, #1
 8021fe6:	f53f af53 	bmi.w	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021fea:	4573      	cmp	r3, lr
 8021fec:	f6ff af50 	blt.w	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021ff0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021ff2:	9502      	str	r5, [sp, #8]
 8021ff4:	b21b      	sxth	r3, r3
 8021ff6:	b212      	sxth	r2, r2
 8021ff8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021ffc:	9301      	str	r3, [sp, #4]
 8021ffe:	9200      	str	r2, [sp, #0]
 8022000:	e9cd c405 	strd	ip, r4, [sp, #20]
 8022004:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8022008:	4639      	mov	r1, r7
 802200a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802200c:	f7ff fc04 	bl	8021818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022010:	e73e      	b.n	8021e90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022012:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022014:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022018:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802201a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802201e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022020:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022024:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022026:	141f      	asrs	r7, r3, #16
 8022028:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802202a:	141b      	asrs	r3, r3, #16
 802202c:	fb01 3707 	mla	r7, r1, r7, r3
 8022030:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022032:	fa1f fc82 	uxth.w	ip, r2
 8022036:	eb03 0a07 	add.w	sl, r3, r7
 802203a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802203e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022042:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022046:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802204a:	b29b      	uxth	r3, r3
 802204c:	2d00      	cmp	r5, #0
 802204e:	f000 813d 	beq.w	80222cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8022052:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022056:	940f      	str	r4, [sp, #60]	@ 0x3c
 8022058:	eb0a 0b01 	add.w	fp, sl, r1
 802205c:	fa1f fa85 	uxth.w	sl, r5
 8022060:	fb0a fc0c 	mul.w	ip, sl, ip
 8022064:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022068:	fa1f fa8a 	uxth.w	sl, sl
 802206c:	eba0 000c 	sub.w	r0, r0, ip
 8022070:	eba3 030a 	sub.w	r3, r3, sl
 8022074:	b280      	uxth	r0, r0
 8022076:	fb08 f000 	mul.w	r0, r8, r0
 802207a:	b29b      	uxth	r3, r3
 802207c:	fb09 0303 	mla	r3, r9, r3, r0
 8022080:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8022082:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022086:	9410      	str	r4, [sp, #64]	@ 0x40
 8022088:	fb0a 3300 	mla	r3, sl, r0, r3
 802208c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022090:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022094:	2b00      	cmp	r3, #0
 8022096:	f000 810b 	beq.w	80222b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802209a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802209c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802209e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80220a2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80220a6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80220aa:	f000 8114 	beq.w	80222d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80220ae:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80220b2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80220b6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80220ba:	fb09 f707 	mul.w	r7, r9, r7
 80220be:	fb0a fc0c 	mul.w	ip, sl, ip
 80220c2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80220c6:	f107 0b20 	add.w	fp, r7, #32
 80220ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80220ce:	44cc      	add	ip, r9
 80220d0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80220d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80220d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80220dc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80220e0:	ea4c 0909 	orr.w	r9, ip, r9
 80220e4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80220e8:	8847      	ldrh	r7, [r0, #2]
 80220ea:	d019      	beq.n	8022120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80220ec:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80220f0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80220f4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80220f8:	fb08 f807 	mul.w	r8, r8, r7
 80220fc:	fb0a fc0c 	mul.w	ip, sl, ip
 8022100:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022104:	f108 0b20 	add.w	fp, r8, #32
 8022108:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802210c:	44bc      	add	ip, r7
 802210e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022112:	0a3f      	lsrs	r7, r7, #8
 8022114:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022118:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802211c:	ea4c 0707 	orr.w	r7, ip, r7
 8022120:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022124:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022128:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802212c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022130:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022134:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022138:	ea4c 0909 	orr.w	r9, ip, r9
 802213c:	ea4a 0707 	orr.w	r7, sl, r7
 8022140:	2d00      	cmp	r5, #0
 8022142:	f000 80ca 	beq.w	80222da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022146:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802214a:	3901      	subs	r1, #1
 802214c:	0049      	lsls	r1, r1, #1
 802214e:	3102      	adds	r1, #2
 8022150:	eb00 0c01 	add.w	ip, r0, r1
 8022154:	5a41      	ldrh	r1, [r0, r1]
 8022156:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8022158:	28ff      	cmp	r0, #255	@ 0xff
 802215a:	d019      	beq.n	8022190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 802215c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802215e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022162:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022166:	fb04 fa01 	mul.w	sl, r4, r1
 802216a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802216e:	fb08 f800 	mul.w	r8, r8, r0
 8022172:	f10a 0020 	add.w	r0, sl, #32
 8022176:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802217a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802217e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022182:	4441      	add	r1, r8
 8022184:	0a00      	lsrs	r0, r0, #8
 8022186:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802218a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802218e:	4301      	orrs	r1, r0
 8022190:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022192:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022196:	2cff      	cmp	r4, #255	@ 0xff
 8022198:	d01a      	beq.n	80221d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802219a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 802219e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80221a2:	fb04 fa00 	mul.w	sl, r4, r0
 80221a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80221aa:	fb08 f80c 	mul.w	r8, r8, ip
 80221ae:	f10a 0c20 	add.w	ip, sl, #32
 80221b2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80221b6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80221ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80221be:	4440      	add	r0, r8
 80221c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221c4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80221c8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80221cc:	ea40 000c 	orr.w	r0, r0, ip
 80221d0:	fb15 fc02 	smulbb	ip, r5, r2
 80221d4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80221d8:	f1c5 0810 	rsb	r8, r5, #16
 80221dc:	eba8 0802 	sub.w	r8, r8, r2
 80221e0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80221e4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80221e8:	437a      	muls	r2, r7
 80221ea:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80221ee:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80221f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80221f6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80221fa:	fb09 2208 	mla	r2, r9, r8, r2
 80221fe:	ea4a 0101 	orr.w	r1, sl, r1
 8022202:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022206:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802220a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802220e:	fb05 2201 	mla	r2, r5, r1, r2
 8022212:	ea4b 0000 	orr.w	r0, fp, r0
 8022216:	fb0c 2200 	mla	r2, ip, r0, r2
 802221a:	0d57      	lsrs	r7, r2, #21
 802221c:	0952      	lsrs	r2, r2, #5
 802221e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022222:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022226:	433a      	orrs	r2, r7
 8022228:	2bff      	cmp	r3, #255	@ 0xff
 802222a:	b292      	uxth	r2, r2
 802222c:	d102      	bne.n	8022234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802222e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8022230:	29ff      	cmp	r1, #255	@ 0xff
 8022232:	d063      	beq.n	80222fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022234:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8022236:	f8be 1000 	ldrh.w	r1, [lr]
 802223a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802223c:	4343      	muls	r3, r0
 802223e:	1c58      	adds	r0, r3, #1
 8022240:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022244:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022248:	1208      	asrs	r0, r1, #8
 802224a:	b2db      	uxtb	r3, r3
 802224c:	1215      	asrs	r5, r2, #8
 802224e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022252:	fb10 f003 	smulbb	r0, r0, r3
 8022256:	10cf      	asrs	r7, r1, #3
 8022258:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802225c:	00c9      	lsls	r1, r1, #3
 802225e:	fb05 0504 	mla	r5, r5, r4, r0
 8022262:	b2c9      	uxtb	r1, r1
 8022264:	10d0      	asrs	r0, r2, #3
 8022266:	00d2      	lsls	r2, r2, #3
 8022268:	fb11 f103 	smulbb	r1, r1, r3
 802226c:	b2d2      	uxtb	r2, r2
 802226e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8022272:	fb02 1204 	mla	r2, r2, r4, r1
 8022276:	fb17 f703 	smulbb	r7, r7, r3
 802227a:	b2ad      	uxth	r5, r5
 802227c:	b292      	uxth	r2, r2
 802227e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022282:	fb00 7004 	mla	r0, r0, r4, r7
 8022286:	1c6b      	adds	r3, r5, #1
 8022288:	1c57      	adds	r7, r2, #1
 802228a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802228e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022292:	b280      	uxth	r0, r0
 8022294:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022298:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802229c:	433d      	orrs	r5, r7
 802229e:	1c47      	adds	r7, r0, #1
 80222a0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80222a4:	097f      	lsrs	r7, r7, #5
 80222a6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80222aa:	433d      	orrs	r5, r7
 80222ac:	f8ae 5000 	strh.w	r5, [lr]
 80222b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80222b2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80222b4:	4413      	add	r3, r2
 80222b6:	9321      	str	r3, [sp, #132]	@ 0x84
 80222b8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80222ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80222bc:	441a      	add	r2, r3
 80222be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80222c0:	9222      	str	r2, [sp, #136]	@ 0x88
 80222c2:	3b01      	subs	r3, #1
 80222c4:	f10e 0e02 	add.w	lr, lr, #2
 80222c8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80222ca:	e61c      	b.n	8021f06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80222cc:	fb08 f000 	mul.w	r0, r8, r0
 80222d0:	fb09 0303 	mla	r3, r9, r3, r0
 80222d4:	e6dc      	b.n	8022090 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80222d6:	46b9      	mov	r9, r7
 80222d8:	e704      	b.n	80220e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80222da:	f1c2 0110 	rsb	r1, r2, #16
 80222de:	437a      	muls	r2, r7
 80222e0:	fb09 2901 	mla	r9, r9, r1, r2
 80222e4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80222e8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80222ec:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80222f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80222f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80222f8:	4302      	orrs	r2, r0
 80222fa:	e795      	b.n	8022228 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80222fc:	f8ae 2000 	strh.w	r2, [lr]
 8022300:	e7d6      	b.n	80222b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022302:	b017      	add	sp, #92	@ 0x5c
 8022304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802230c:	b085      	sub	sp, #20
 802230e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8022312:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8022316:	9103      	str	r1, [sp, #12]
 8022318:	fb00 7406 	mla	r4, r0, r6, r7
 802231c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022320:	2800      	cmp	r0, #0
 8022322:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8022326:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802232a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802232e:	9501      	str	r5, [sp, #4]
 8022330:	eb02 0904 	add.w	r9, r2, r4
 8022334:	f2c0 8141 	blt.w	80225ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022338:	4583      	cmp	fp, r0
 802233a:	f340 813e 	ble.w	80225ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802233e:	2f00      	cmp	r7, #0
 8022340:	f2c0 8137 	blt.w	80225b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022344:	42be      	cmp	r6, r7
 8022346:	f340 8134 	ble.w	80225b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802234a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802234e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022352:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022356:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802235a:	4355      	muls	r5, r2
 802235c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022360:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8022364:	fb0c f203 	mul.w	r2, ip, r3
 8022368:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802236c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8022370:	441d      	add	r5, r3
 8022372:	f102 0320 	add.w	r3, r2, #32
 8022376:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802237a:	0a1b      	lsrs	r3, r3, #8
 802237c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022380:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022384:	431c      	orrs	r4, r3
 8022386:	1c7b      	adds	r3, r7, #1
 8022388:	f100 811c 	bmi.w	80225c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802238c:	429e      	cmp	r6, r3
 802238e:	f340 8119 	ble.w	80225c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022392:	2900      	cmp	r1, #0
 8022394:	f000 8119 	beq.w	80225ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022398:	9a01      	ldr	r2, [sp, #4]
 802239a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802239e:	8855      	ldrh	r5, [r2, #2]
 80223a0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80223a4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80223a8:	fb08 f802 	mul.w	r8, r8, r2
 80223ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80223b0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80223b4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80223b8:	435d      	muls	r5, r3
 80223ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80223be:	44d0      	add	r8, sl
 80223c0:	f105 0a20 	add.w	sl, r5, #32
 80223c4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80223c8:	0a2d      	lsrs	r5, r5, #8
 80223ca:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80223ce:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80223d2:	432a      	orrs	r2, r5
 80223d4:	3001      	adds	r0, #1
 80223d6:	f100 80fe 	bmi.w	80225d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80223da:	4583      	cmp	fp, r0
 80223dc:	f340 80fb 	ble.w	80225d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80223e0:	f1be 0f00 	cmp.w	lr, #0
 80223e4:	f000 80fc 	beq.w	80225e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80223e8:	2f00      	cmp	r7, #0
 80223ea:	f2c0 80f1 	blt.w	80225d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80223ee:	42be      	cmp	r6, r7
 80223f0:	f340 80ee 	ble.w	80225d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80223f4:	9801      	ldr	r0, [sp, #4]
 80223f6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80223fa:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80223fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022402:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8022406:	fb0a fa00 	mul.w	sl, sl, r0
 802240a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802240e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8022412:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022416:	fb05 f808 	mul.w	r8, r5, r8
 802241a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802241e:	4482      	add	sl, r0
 8022420:	f108 0020 	add.w	r0, r8, #32
 8022424:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022428:	0a00      	lsrs	r0, r0, #8
 802242a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802242e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022432:	ea4b 0b00 	orr.w	fp, fp, r0
 8022436:	3701      	adds	r7, #1
 8022438:	f100 80d7 	bmi.w	80225ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802243c:	42be      	cmp	r6, r7
 802243e:	f340 80d4 	ble.w	80225ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022442:	2900      	cmp	r1, #0
 8022444:	f000 80d4 	beq.w	80225f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022448:	3601      	adds	r6, #1
 802244a:	9801      	ldr	r0, [sp, #4]
 802244c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022450:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022454:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022458:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 802245c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022460:	fb09 f906 	mul.w	r9, r9, r6
 8022464:	fb07 f800 	mul.w	r8, r7, r0
 8022468:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 802246c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022470:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8022474:	44d1      	add	r9, sl
 8022476:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802247a:	f108 0020 	add.w	r0, r8, #32
 802247e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022482:	0a00      	lsrs	r0, r0, #8
 8022484:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022488:	4330      	orrs	r0, r6
 802248a:	b28e      	uxth	r6, r1
 802248c:	fa1f f98e 	uxth.w	r9, lr
 8022490:	fb06 f809 	mul.w	r8, r6, r9
 8022494:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022498:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802249c:	0136      	lsls	r6, r6, #4
 802249e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80224a2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80224a6:	9601      	str	r6, [sp, #4]
 80224a8:	ea4a 0404 	orr.w	r4, sl, r4
 80224ac:	fa1f f689 	uxth.w	r6, r9
 80224b0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80224b4:	fb11 f90e 	smulbb	r9, r1, lr
 80224b8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80224bc:	9602      	str	r6, [sp, #8]
 80224be:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80224c2:	4626      	mov	r6, r4
 80224c4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80224c8:	f1ce 0410 	rsb	r4, lr, #16
 80224cc:	1a64      	subs	r4, r4, r1
 80224ce:	ea4a 0202 	orr.w	r2, sl, r2
 80224d2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80224d6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80224da:	434a      	muls	r2, r1
 80224dc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80224e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80224e4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80224e8:	fb04 2406 	mla	r4, r4, r6, r2
 80224ec:	ea4a 0000 	orr.w	r0, sl, r0
 80224f0:	fb09 4200 	mla	r2, r9, r0, r4
 80224f4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80224f8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80224fc:	9801      	ldr	r0, [sp, #4]
 80224fe:	9903      	ldr	r1, [sp, #12]
 8022500:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8022504:	ea44 0b0b 	orr.w	fp, r4, fp
 8022508:	9c02      	ldr	r4, [sp, #8]
 802250a:	8809      	ldrh	r1, [r1, #0]
 802250c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8022510:	1b00      	subs	r0, r0, r4
 8022512:	9c01      	ldr	r4, [sp, #4]
 8022514:	eba4 0608 	sub.w	r6, r4, r8
 8022518:	b2b6      	uxth	r6, r6
 802251a:	b280      	uxth	r0, r0
 802251c:	4373      	muls	r3, r6
 802251e:	fb0c 3300 	mla	r3, ip, r0, r3
 8022522:	9802      	ldr	r0, [sp, #8]
 8022524:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022528:	fb00 3505 	mla	r5, r0, r5, r3
 802252c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022530:	fb08 5707 	mla	r7, r8, r7, r5
 8022534:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022538:	120b      	asrs	r3, r1, #8
 802253a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802253e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022542:	b2ff      	uxtb	r7, r7
 8022544:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022548:	10c8      	asrs	r0, r1, #3
 802254a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802254e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8022552:	00c9      	lsls	r1, r1, #3
 8022554:	437b      	muls	r3, r7
 8022556:	ea42 0e0e 	orr.w	lr, r2, lr
 802255a:	b2c9      	uxtb	r1, r1
 802255c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022560:	fa1f f28e 	uxth.w	r2, lr
 8022564:	4378      	muls	r0, r7
 8022566:	434f      	muls	r7, r1
 8022568:	1c59      	adds	r1, r3, #1
 802256a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802256e:	1213      	asrs	r3, r2, #8
 8022570:	f023 0307 	bic.w	r3, r3, #7
 8022574:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022578:	1c41      	adds	r1, r0, #1
 802257a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802257e:	10d1      	asrs	r1, r2, #3
 8022580:	f021 0103 	bic.w	r1, r1, #3
 8022584:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022588:	021b      	lsls	r3, r3, #8
 802258a:	00c9      	lsls	r1, r1, #3
 802258c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022590:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8022594:	430b      	orrs	r3, r1
 8022596:	1c79      	adds	r1, r7, #1
 8022598:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802259c:	00d2      	lsls	r2, r2, #3
 802259e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80225a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80225a6:	431a      	orrs	r2, r3
 80225a8:	9b03      	ldr	r3, [sp, #12]
 80225aa:	801a      	strh	r2, [r3, #0]
 80225ac:	b005      	add	sp, #20
 80225ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80225b2:	f04f 0c00 	mov.w	ip, #0
 80225b6:	4664      	mov	r4, ip
 80225b8:	e6e5      	b.n	8022386 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80225ba:	2300      	movs	r3, #0
 80225bc:	469c      	mov	ip, r3
 80225be:	461a      	mov	r2, r3
 80225c0:	461c      	mov	r4, r3
 80225c2:	e707      	b.n	80223d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80225c4:	2300      	movs	r3, #0
 80225c6:	461a      	mov	r2, r3
 80225c8:	e704      	b.n	80223d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80225ca:	460b      	mov	r3, r1
 80225cc:	460a      	mov	r2, r1
 80225ce:	e701      	b.n	80223d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80225d0:	2500      	movs	r5, #0
 80225d2:	46ab      	mov	fp, r5
 80225d4:	e72f      	b.n	8022436 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80225d6:	2700      	movs	r7, #0
 80225d8:	463d      	mov	r5, r7
 80225da:	4638      	mov	r0, r7
 80225dc:	46bb      	mov	fp, r7
 80225de:	e754      	b.n	802248a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80225e0:	4677      	mov	r7, lr
 80225e2:	4675      	mov	r5, lr
 80225e4:	4670      	mov	r0, lr
 80225e6:	46f3      	mov	fp, lr
 80225e8:	e74f      	b.n	802248a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80225ea:	2700      	movs	r7, #0
 80225ec:	4638      	mov	r0, r7
 80225ee:	e74c      	b.n	802248a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80225f0:	460f      	mov	r7, r1
 80225f2:	4608      	mov	r0, r1
 80225f4:	e749      	b.n	802248a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080225f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80225f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225fc:	b093      	sub	sp, #76	@ 0x4c
 80225fe:	9210      	str	r2, [sp, #64]	@ 0x40
 8022600:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022602:	910e      	str	r1, [sp, #56]	@ 0x38
 8022604:	9306      	str	r3, [sp, #24]
 8022606:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802260a:	9011      	str	r0, [sp, #68]	@ 0x44
 802260c:	6850      	ldr	r0, [r2, #4]
 802260e:	6812      	ldr	r2, [r2, #0]
 8022610:	fb00 1303 	mla	r3, r0, r3, r1
 8022614:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022618:	9307      	str	r3, [sp, #28]
 802261a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802261c:	681b      	ldr	r3, [r3, #0]
 802261e:	9308      	str	r3, [sp, #32]
 8022620:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022622:	685b      	ldr	r3, [r3, #4]
 8022624:	9309      	str	r3, [sp, #36]	@ 0x24
 8022626:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022628:	2b00      	cmp	r3, #0
 802262a:	dc03      	bgt.n	8022634 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802262c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802262e:	2b00      	cmp	r3, #0
 8022630:	f340 83b4 	ble.w	8022d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022634:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022636:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802263a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802263e:	1e48      	subs	r0, r1, #1
 8022640:	1e55      	subs	r5, r2, #1
 8022642:	9b06      	ldr	r3, [sp, #24]
 8022644:	2b00      	cmp	r3, #0
 8022646:	f340 8163 	ble.w	8022910 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802264a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 802264c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802264e:	1436      	asrs	r6, r6, #16
 8022650:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022654:	d406      	bmi.n	8022664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022656:	4286      	cmp	r6, r0
 8022658:	da04      	bge.n	8022664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802265a:	2b00      	cmp	r3, #0
 802265c:	db02      	blt.n	8022664 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802265e:	42ab      	cmp	r3, r5
 8022660:	f2c0 8157 	blt.w	8022912 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022664:	3601      	adds	r6, #1
 8022666:	f100 8144 	bmi.w	80228f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802266a:	42b1      	cmp	r1, r6
 802266c:	f2c0 8141 	blt.w	80228f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022670:	3301      	adds	r3, #1
 8022672:	f100 813e 	bmi.w	80228f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022676:	429a      	cmp	r2, r3
 8022678:	f2c0 813b 	blt.w	80228f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802267c:	9b06      	ldr	r3, [sp, #24]
 802267e:	9f07      	ldr	r7, [sp, #28]
 8022680:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022682:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8022686:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022688:	2b00      	cmp	r3, #0
 802268a:	f340 8164 	ble.w	8022956 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802268e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022690:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8022692:	1418      	asrs	r0, r3, #16
 8022694:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022696:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802269a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802269c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80226a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80226a2:	142d      	asrs	r5, r5, #16
 80226a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80226a8:	f100 81ee 	bmi.w	8022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80226ac:	f102 3eff 	add.w	lr, r2, #4294967295
 80226b0:	4575      	cmp	r5, lr
 80226b2:	f280 81e9 	bge.w	8022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80226b6:	2800      	cmp	r0, #0
 80226b8:	f2c0 81e6 	blt.w	8022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80226bc:	f103 3eff 	add.w	lr, r3, #4294967295
 80226c0:	4570      	cmp	r0, lr
 80226c2:	f280 81e1 	bge.w	8022a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80226c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80226c8:	b212      	sxth	r2, r2
 80226ca:	fb00 5002 	mla	r0, r0, r2, r5
 80226ce:	fa1f fe81 	uxth.w	lr, r1
 80226d2:	eb03 0a00 	add.w	sl, r3, r0
 80226d6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80226da:	f813 9000 	ldrb.w	r9, [r3, r0]
 80226de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80226e2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80226e6:	b29b      	uxth	r3, r3
 80226e8:	f1bc 0f00 	cmp.w	ip, #0
 80226ec:	f000 8179 	beq.w	80229e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80226f0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80226f4:	940a      	str	r4, [sp, #40]	@ 0x28
 80226f6:	eb0a 0b02 	add.w	fp, sl, r2
 80226fa:	fa1f fa8c 	uxth.w	sl, ip
 80226fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8022702:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022706:	fa1f fa8a 	uxth.w	sl, sl
 802270a:	eba5 050e 	sub.w	r5, r5, lr
 802270e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022712:	940b      	str	r4, [sp, #44]	@ 0x2c
 8022714:	eba3 030a 	sub.w	r3, r3, sl
 8022718:	b2ad      	uxth	r5, r5
 802271a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802271c:	b29b      	uxth	r3, r3
 802271e:	fb08 f505 	mul.w	r5, r8, r5
 8022722:	fb09 5303 	mla	r3, r9, r3, r5
 8022726:	fb0a 3304 	mla	r3, sl, r4, r3
 802272a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802272c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022730:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022734:	2b00      	cmp	r3, #0
 8022736:	f000 80cf 	beq.w	80228d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802273a:	9c08      	ldr	r4, [sp, #32]
 802273c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022740:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022744:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022748:	f000 8150 	beq.w	80229ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802274c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8022750:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022754:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022758:	fb09 f000 	mul.w	r0, r9, r0
 802275c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022760:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022764:	f100 0b20 	add.w	fp, r0, #32
 8022768:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802276c:	44ce      	add	lr, r9
 802276e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022772:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022776:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802277a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 802277e:	ea4e 0909 	orr.w	r9, lr, r9
 8022782:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8022786:	8868      	ldrh	r0, [r5, #2]
 8022788:	d019      	beq.n	80227be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802278a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802278e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022792:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022796:	fb08 f800 	mul.w	r8, r8, r0
 802279a:	fb0a fe0e 	mul.w	lr, sl, lr
 802279e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80227a2:	f108 0b20 	add.w	fp, r8, #32
 80227a6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80227aa:	4486      	add	lr, r0
 80227ac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80227b0:	0a00      	lsrs	r0, r0, #8
 80227b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80227b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80227ba:	ea4e 0000 	orr.w	r0, lr, r0
 80227be:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80227c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80227c6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80227ca:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80227ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80227d2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80227d6:	ea4e 0909 	orr.w	r9, lr, r9
 80227da:	ea4a 0000 	orr.w	r0, sl, r0
 80227de:	f1bc 0f00 	cmp.w	ip, #0
 80227e2:	f000 8105 	beq.w	80229f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80227e6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80227ea:	3a01      	subs	r2, #1
 80227ec:	0052      	lsls	r2, r2, #1
 80227ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80227f0:	3202      	adds	r2, #2
 80227f2:	2cff      	cmp	r4, #255	@ 0xff
 80227f4:	eb05 0e02 	add.w	lr, r5, r2
 80227f8:	5aaa      	ldrh	r2, [r5, r2]
 80227fa:	d018      	beq.n	802282e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80227fc:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8022800:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022804:	fb04 fa02 	mul.w	sl, r4, r2
 8022808:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802280c:	fb08 f805 	mul.w	r8, r8, r5
 8022810:	f10a 0520 	add.w	r5, sl, #32
 8022814:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022818:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802281c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022820:	4442      	add	r2, r8
 8022822:	0a2d      	lsrs	r5, r5, #8
 8022824:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022828:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802282c:	432a      	orrs	r2, r5
 802282e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8022830:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022834:	2cff      	cmp	r4, #255	@ 0xff
 8022836:	d01a      	beq.n	802286e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022838:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 802283c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022840:	fb04 fa05 	mul.w	sl, r4, r5
 8022844:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022848:	fb08 f80e 	mul.w	r8, r8, lr
 802284c:	f10a 0e20 	add.w	lr, sl, #32
 8022850:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022854:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022858:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802285c:	4445      	add	r5, r8
 802285e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022862:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022866:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802286a:	ea45 050e 	orr.w	r5, r5, lr
 802286e:	fb1c fe01 	smulbb	lr, ip, r1
 8022872:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022876:	f1cc 0810 	rsb	r8, ip, #16
 802287a:	eba8 0801 	sub.w	r8, r8, r1
 802287e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022882:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022886:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802288a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802288e:	4341      	muls	r1, r0
 8022890:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022894:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022898:	ea4a 0202 	orr.w	r2, sl, r2
 802289c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80228a0:	fb09 1108 	mla	r1, r9, r8, r1
 80228a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80228a8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80228ac:	fb0c 1102 	mla	r1, ip, r2, r1
 80228b0:	ea4b 0505 	orr.w	r5, fp, r5
 80228b4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80228b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80228bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80228c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80228c4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80228c8:	ea42 0e0e 	orr.w	lr, r2, lr
 80228cc:	fa1f f28e 	uxth.w	r2, lr
 80228d0:	2bff      	cmp	r3, #255	@ 0xff
 80228d2:	f040 80a1 	bne.w	8022a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80228d6:	803a      	strh	r2, [r7, #0]
 80228d8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80228da:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80228dc:	4413      	add	r3, r2
 80228de:	931d      	str	r3, [sp, #116]	@ 0x74
 80228e0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80228e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80228e4:	441a      	add	r2, r3
 80228e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80228e8:	921e      	str	r2, [sp, #120]	@ 0x78
 80228ea:	3b01      	subs	r3, #1
 80228ec:	3702      	adds	r7, #2
 80228ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 80228f0:	e6c9      	b.n	8022686 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80228f2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80228f4:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80228f6:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80228f8:	4433      	add	r3, r6
 80228fa:	931d      	str	r3, [sp, #116]	@ 0x74
 80228fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80228fe:	441c      	add	r4, r3
 8022900:	9b06      	ldr	r3, [sp, #24]
 8022902:	941e      	str	r4, [sp, #120]	@ 0x78
 8022904:	3b01      	subs	r3, #1
 8022906:	9306      	str	r3, [sp, #24]
 8022908:	9b07      	ldr	r3, [sp, #28]
 802290a:	3302      	adds	r3, #2
 802290c:	9307      	str	r3, [sp, #28]
 802290e:	e698      	b.n	8022642 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022910:	d028      	beq.n	8022964 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022912:	9b06      	ldr	r3, [sp, #24]
 8022914:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022916:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8022918:	3b01      	subs	r3, #1
 802291a:	fb00 5003 	mla	r0, r0, r3, r5
 802291e:	1400      	asrs	r0, r0, #16
 8022920:	f53f aeac 	bmi.w	802267c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022924:	3901      	subs	r1, #1
 8022926:	4288      	cmp	r0, r1
 8022928:	f6bf aea8 	bge.w	802267c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802292c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802292e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022930:	fb01 0303 	mla	r3, r1, r3, r0
 8022934:	141b      	asrs	r3, r3, #16
 8022936:	f53f aea1 	bmi.w	802267c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802293a:	3a01      	subs	r2, #1
 802293c:	4293      	cmp	r3, r2
 802293e:	f6bf ae9d 	bge.w	802267c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022942:	9b06      	ldr	r3, [sp, #24]
 8022944:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022948:	930f      	str	r3, [sp, #60]	@ 0x3c
 802294a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802294e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022950:	2b00      	cmp	r3, #0
 8022952:	f300 80b6 	bgt.w	8022ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022956:	9b06      	ldr	r3, [sp, #24]
 8022958:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802295c:	9b07      	ldr	r3, [sp, #28]
 802295e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022962:	9307      	str	r3, [sp, #28]
 8022964:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022966:	2b00      	cmp	r3, #0
 8022968:	f340 8218 	ble.w	8022d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802296c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022970:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022974:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022978:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802297a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802297e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022982:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022986:	eef0 6a62 	vmov.f32	s13, s5
 802298a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802298e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022992:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022996:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 802299a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802299e:	eef0 6a43 	vmov.f32	s13, s6
 80229a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80229a6:	ee12 2a90 	vmov	r2, s5
 80229aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80229ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80229b2:	ee13 2a10 	vmov	r2, s6
 80229b6:	931f      	str	r3, [sp, #124]	@ 0x7c
 80229b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80229ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80229be:	9320      	str	r3, [sp, #128]	@ 0x80
 80229c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80229c2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80229c4:	3b01      	subs	r3, #1
 80229c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80229ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80229cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80229ce:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80229d2:	bf08      	it	eq
 80229d4:	4613      	moveq	r3, r2
 80229d6:	9306      	str	r3, [sp, #24]
 80229d8:	eeb0 3a67 	vmov.f32	s6, s15
 80229dc:	eef0 2a47 	vmov.f32	s5, s14
 80229e0:	e621      	b.n	8022626 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80229e2:	fb08 f505 	mul.w	r5, r8, r5
 80229e6:	fb09 5303 	mla	r3, r9, r3, r5
 80229ea:	e6a1      	b.n	8022730 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80229ec:	4681      	mov	r9, r0
 80229ee:	e6c8      	b.n	8022782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80229f0:	f1c1 0210 	rsb	r2, r1, #16
 80229f4:	4341      	muls	r1, r0
 80229f6:	fb09 1902 	mla	r9, r9, r2, r1
 80229fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80229fe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022a02:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022a06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022a0a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022a0e:	ea42 0909 	orr.w	r9, r2, r9
 8022a12:	fa1f f289 	uxth.w	r2, r9
 8022a16:	e75b      	b.n	80228d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022a18:	f8b7 c000 	ldrh.w	ip, [r7]
 8022a1c:	43db      	mvns	r3, r3
 8022a1e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022a22:	fa5f fe83 	uxtb.w	lr, r3
 8022a26:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022a2a:	fb00 f00e 	mul.w	r0, r0, lr
 8022a2e:	1c41      	adds	r1, r0, #1
 8022a30:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022a34:	1211      	asrs	r1, r2, #8
 8022a36:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022a3a:	f021 0107 	bic.w	r1, r1, #7
 8022a3e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022a42:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022a46:	48d7      	ldr	r0, [pc, #860]	@ (8022da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022a48:	fb05 f50e 	mul.w	r5, r5, lr
 8022a4c:	b2c9      	uxtb	r1, r1
 8022a4e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022a52:	1c69      	adds	r1, r5, #1
 8022a54:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022a58:	10d1      	asrs	r1, r2, #3
 8022a5a:	f021 0103 	bic.w	r1, r1, #3
 8022a5e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022a62:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022a66:	b2db      	uxtb	r3, r3
 8022a68:	00c9      	lsls	r1, r1, #3
 8022a6a:	fb03 f30e 	mul.w	r3, r3, lr
 8022a6e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022a72:	4301      	orrs	r1, r0
 8022a74:	1c58      	adds	r0, r3, #1
 8022a76:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022a7a:	00d2      	lsls	r2, r2, #3
 8022a7c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022a80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022a84:	430a      	orrs	r2, r1
 8022a86:	e726      	b.n	80228d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022a88:	f115 0e01 	adds.w	lr, r5, #1
 8022a8c:	f53f af24 	bmi.w	80228d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022a90:	4572      	cmp	r2, lr
 8022a92:	f6ff af21 	blt.w	80228d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022a96:	f110 0e01 	adds.w	lr, r0, #1
 8022a9a:	f53f af1d 	bmi.w	80228d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022a9e:	4573      	cmp	r3, lr
 8022aa0:	f6ff af1a 	blt.w	80228d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022aa4:	b21b      	sxth	r3, r3
 8022aa6:	b212      	sxth	r2, r2
 8022aa8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022aac:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022ab0:	9301      	str	r3, [sp, #4]
 8022ab2:	9200      	str	r2, [sp, #0]
 8022ab4:	4639      	mov	r1, r7
 8022ab6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022aba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022abc:	f7ff fc24 	bl	8022308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022ac0:	e70a      	b.n	80228d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022ac2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022ac4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022ac8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022aca:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022ace:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022ad0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022ad4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022ad6:	141f      	asrs	r7, r3, #16
 8022ad8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022ada:	141b      	asrs	r3, r3, #16
 8022adc:	fb01 3707 	mla	r7, r1, r7, r3
 8022ae0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022ae2:	fa1f fc82 	uxth.w	ip, r2
 8022ae6:	eb03 0a07 	add.w	sl, r3, r7
 8022aea:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022aee:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022af2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022af6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8022afa:	b29b      	uxth	r3, r3
 8022afc:	2d00      	cmp	r5, #0
 8022afe:	f000 80fe 	beq.w	8022cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022b02:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022b06:	940c      	str	r4, [sp, #48]	@ 0x30
 8022b08:	eb0a 0b01 	add.w	fp, sl, r1
 8022b0c:	fa1f fa85 	uxth.w	sl, r5
 8022b10:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b14:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022b18:	fa1f fa8a 	uxth.w	sl, sl
 8022b1c:	eba0 000c 	sub.w	r0, r0, ip
 8022b20:	eba3 030a 	sub.w	r3, r3, sl
 8022b24:	b280      	uxth	r0, r0
 8022b26:	fb08 f000 	mul.w	r0, r8, r0
 8022b2a:	b29b      	uxth	r3, r3
 8022b2c:	fb09 0303 	mla	r3, r9, r3, r0
 8022b30:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022b32:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022b36:	940d      	str	r4, [sp, #52]	@ 0x34
 8022b38:	fb0a 3300 	mla	r3, sl, r0, r3
 8022b3c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022b40:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022b44:	2b00      	cmp	r3, #0
 8022b46:	f000 80cc 	beq.w	8022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022b4a:	9808      	ldr	r0, [sp, #32]
 8022b4c:	9c08      	ldr	r4, [sp, #32]
 8022b4e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022b52:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022b56:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022b5a:	f000 80d5 	beq.w	8022d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022b5e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022b62:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022b66:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022b6a:	fb09 f707 	mul.w	r7, r9, r7
 8022b6e:	fb0a fc0c 	mul.w	ip, sl, ip
 8022b72:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022b76:	f107 0b20 	add.w	fp, r7, #32
 8022b7a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022b7e:	44cc      	add	ip, r9
 8022b80:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022b84:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022b88:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022b8c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022b90:	ea4c 0909 	orr.w	r9, ip, r9
 8022b94:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8022b98:	8847      	ldrh	r7, [r0, #2]
 8022b9a:	d019      	beq.n	8022bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022b9c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022ba0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022ba4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022ba8:	fb08 f807 	mul.w	r8, r8, r7
 8022bac:	fb0a fc0c 	mul.w	ip, sl, ip
 8022bb0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022bb4:	f108 0b20 	add.w	fp, r8, #32
 8022bb8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022bbc:	44bc      	add	ip, r7
 8022bbe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022bc2:	0a3f      	lsrs	r7, r7, #8
 8022bc4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022bc8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022bcc:	ea4c 0707 	orr.w	r7, ip, r7
 8022bd0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022bd4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022bd8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8022bdc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022be0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022be4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022be8:	ea4c 0909 	orr.w	r9, ip, r9
 8022bec:	ea4a 0707 	orr.w	r7, sl, r7
 8022bf0:	2d00      	cmp	r5, #0
 8022bf2:	f000 808b 	beq.w	8022d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022bf6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8022bfa:	3901      	subs	r1, #1
 8022bfc:	0049      	lsls	r1, r1, #1
 8022bfe:	3102      	adds	r1, #2
 8022c00:	eb00 0c01 	add.w	ip, r0, r1
 8022c04:	5a41      	ldrh	r1, [r0, r1]
 8022c06:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022c08:	28ff      	cmp	r0, #255	@ 0xff
 8022c0a:	d019      	beq.n	8022c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022c0c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022c0e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022c12:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022c16:	fb04 fa01 	mul.w	sl, r4, r1
 8022c1a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022c1e:	fb08 f800 	mul.w	r8, r8, r0
 8022c22:	f10a 0020 	add.w	r0, sl, #32
 8022c26:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022c2a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022c2e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022c32:	4441      	add	r1, r8
 8022c34:	0a00      	lsrs	r0, r0, #8
 8022c36:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022c3a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022c3e:	4301      	orrs	r1, r0
 8022c40:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022c42:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022c46:	2cff      	cmp	r4, #255	@ 0xff
 8022c48:	d01a      	beq.n	8022c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022c4a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8022c4e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022c52:	fb04 fa00 	mul.w	sl, r4, r0
 8022c56:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022c5a:	fb08 f80c 	mul.w	r8, r8, ip
 8022c5e:	f10a 0c20 	add.w	ip, sl, #32
 8022c62:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022c66:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022c6a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022c6e:	4440      	add	r0, r8
 8022c70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c74:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022c78:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022c7c:	ea40 000c 	orr.w	r0, r0, ip
 8022c80:	fb15 fc02 	smulbb	ip, r5, r2
 8022c84:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022c88:	f1c5 0810 	rsb	r8, r5, #16
 8022c8c:	eba8 0802 	sub.w	r8, r8, r2
 8022c90:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022c94:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022c98:	437a      	muls	r2, r7
 8022c9a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c9e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022ca2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022ca6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022caa:	fb09 2208 	mla	r2, r9, r8, r2
 8022cae:	ea4a 0101 	orr.w	r1, sl, r1
 8022cb2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022cb6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022cba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022cbe:	fb05 2201 	mla	r2, r5, r1, r2
 8022cc2:	ea4b 0000 	orr.w	r0, fp, r0
 8022cc6:	fb0c 2200 	mla	r2, ip, r0, r2
 8022cca:	0d57      	lsrs	r7, r2, #21
 8022ccc:	0952      	lsrs	r2, r2, #5
 8022cce:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022cd2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022cd6:	433a      	orrs	r2, r7
 8022cd8:	2bff      	cmp	r3, #255	@ 0xff
 8022cda:	b292      	uxth	r2, r2
 8022cdc:	d127      	bne.n	8022d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022cde:	f8ae 2000 	strh.w	r2, [lr]
 8022ce2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022ce4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022ce6:	4413      	add	r3, r2
 8022ce8:	931d      	str	r3, [sp, #116]	@ 0x74
 8022cea:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022cec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022cee:	441a      	add	r2, r3
 8022cf0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022cf2:	921e      	str	r2, [sp, #120]	@ 0x78
 8022cf4:	3b01      	subs	r3, #1
 8022cf6:	f10e 0e02 	add.w	lr, lr, #2
 8022cfa:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022cfc:	e627      	b.n	802294e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022cfe:	fb08 f000 	mul.w	r0, r8, r0
 8022d02:	fb09 0303 	mla	r3, r9, r3, r0
 8022d06:	e71b      	b.n	8022b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022d08:	46b9      	mov	r9, r7
 8022d0a:	e743      	b.n	8022b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022d0c:	f1c2 0110 	rsb	r1, r2, #16
 8022d10:	437a      	muls	r2, r7
 8022d12:	fb09 2901 	mla	r9, r9, r1, r2
 8022d16:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022d1a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022d1e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022d22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022d26:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022d2a:	4302      	orrs	r2, r0
 8022d2c:	e7d4      	b.n	8022cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022d2e:	f8be 7000 	ldrh.w	r7, [lr]
 8022d32:	4c1c      	ldr	r4, [pc, #112]	@ (8022da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022d34:	43db      	mvns	r3, r3
 8022d36:	1238      	asrs	r0, r7, #8
 8022d38:	fa5f fc83 	uxtb.w	ip, r3
 8022d3c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022d40:	10fd      	asrs	r5, r7, #3
 8022d42:	fb00 f00c 	mul.w	r0, r0, ip
 8022d46:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8022d4a:	fb05 f10c 	mul.w	r1, r5, ip
 8022d4e:	1c45      	adds	r5, r0, #1
 8022d50:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022d54:	1215      	asrs	r5, r2, #8
 8022d56:	f025 0507 	bic.w	r5, r5, #7
 8022d5a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022d5e:	1c4d      	adds	r5, r1, #1
 8022d60:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022d64:	10d1      	asrs	r1, r2, #3
 8022d66:	f021 0103 	bic.w	r1, r1, #3
 8022d6a:	00fb      	lsls	r3, r7, #3
 8022d6c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022d70:	b2db      	uxtb	r3, r3
 8022d72:	b2c0      	uxtb	r0, r0
 8022d74:	00c9      	lsls	r1, r1, #3
 8022d76:	fb03 f30c 	mul.w	r3, r3, ip
 8022d7a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022d7e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022d82:	4308      	orrs	r0, r1
 8022d84:	1c59      	adds	r1, r3, #1
 8022d86:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022d8a:	00d2      	lsls	r2, r2, #3
 8022d8c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022d90:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022d94:	4318      	orrs	r0, r3
 8022d96:	f8ae 0000 	strh.w	r0, [lr]
 8022d9a:	e7a2      	b.n	8022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022d9c:	b013      	add	sp, #76	@ 0x4c
 8022d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022da2:	bf00      	nop
 8022da4:	fffff800 	.word	0xfffff800

08022da8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022da8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022dac:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8022db0:	fb05 4c03 	mla	ip, r5, r3, r4
 8022db4:	2d00      	cmp	r5, #0
 8022db6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022dba:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8022dbe:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022dc2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8022dc6:	8808      	ldrh	r0, [r1, #0]
 8022dc8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022dcc:	f2c0 80a7 	blt.w	8022f1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022dd0:	45aa      	cmp	sl, r5
 8022dd2:	f340 80a4 	ble.w	8022f1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022dd6:	2c00      	cmp	r4, #0
 8022dd8:	f2c0 809f 	blt.w	8022f1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022ddc:	42a3      	cmp	r3, r4
 8022dde:	f340 809c 	ble.w	8022f1a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022de2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022de6:	1c62      	adds	r2, r4, #1
 8022de8:	f100 809c 	bmi.w	8022f24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022dec:	4293      	cmp	r3, r2
 8022dee:	f340 8099 	ble.w	8022f24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022df2:	f1b9 0f00 	cmp.w	r9, #0
 8022df6:	f000 8095 	beq.w	8022f24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022dfa:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022dfe:	3501      	adds	r5, #1
 8022e00:	f100 8094 	bmi.w	8022f2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022e04:	45aa      	cmp	sl, r5
 8022e06:	f340 8091 	ble.w	8022f2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022e0a:	2f00      	cmp	r7, #0
 8022e0c:	f000 808e 	beq.w	8022f2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022e10:	2c00      	cmp	r4, #0
 8022e12:	f2c0 8089 	blt.w	8022f28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022e16:	42a3      	cmp	r3, r4
 8022e18:	f340 8086 	ble.w	8022f28 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022e1c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022e20:	3401      	adds	r4, #1
 8022e22:	f100 8086 	bmi.w	8022f32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022e26:	42a3      	cmp	r3, r4
 8022e28:	f340 8083 	ble.w	8022f32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022e2c:	f1b9 0f00 	cmp.w	r9, #0
 8022e30:	d07f      	beq.n	8022f32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022e32:	3301      	adds	r3, #1
 8022e34:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022e38:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022e3c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022e40:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8022e44:	fb19 fe07 	smulbb	lr, r9, r7
 8022e48:	ea44 0808 	orr.w	r8, r4, r8
 8022e4c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022e50:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022e54:	f1c7 0210 	rsb	r2, r7, #16
 8022e58:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022e5c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022e60:	ea44 0c0c 	orr.w	ip, r4, ip
 8022e64:	eba2 0209 	sub.w	r2, r2, r9
 8022e68:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022e6c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022e70:	fb04 f40c 	mul.w	r4, r4, ip
 8022e74:	fb02 4808 	mla	r8, r2, r8, r4
 8022e78:	041a      	lsls	r2, r3, #16
 8022e7a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022e7e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022e82:	4313      	orrs	r3, r2
 8022e84:	042a      	lsls	r2, r5, #16
 8022e86:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022e8a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022e8e:	fb0e 8303 	mla	r3, lr, r3, r8
 8022e92:	432a      	orrs	r2, r5
 8022e94:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022e98:	fb07 3202 	mla	r2, r7, r2, r3
 8022e9c:	0d53      	lsrs	r3, r2, #21
 8022e9e:	0952      	lsrs	r2, r2, #5
 8022ea0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022ea4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022ea8:	431a      	orrs	r2, r3
 8022eaa:	b293      	uxth	r3, r2
 8022eac:	b2b4      	uxth	r4, r6
 8022eae:	1202      	asrs	r2, r0, #8
 8022eb0:	43f6      	mvns	r6, r6
 8022eb2:	b2f6      	uxtb	r6, r6
 8022eb4:	121d      	asrs	r5, r3, #8
 8022eb6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8022eba:	fb12 f206 	smulbb	r2, r2, r6
 8022ebe:	10c7      	asrs	r7, r0, #3
 8022ec0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022ec4:	00c0      	lsls	r0, r0, #3
 8022ec6:	fb05 2504 	mla	r5, r5, r4, r2
 8022eca:	b2c0      	uxtb	r0, r0
 8022ecc:	10da      	asrs	r2, r3, #3
 8022ece:	00db      	lsls	r3, r3, #3
 8022ed0:	b2db      	uxtb	r3, r3
 8022ed2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8022ed6:	fb10 f006 	smulbb	r0, r0, r6
 8022eda:	b2ad      	uxth	r5, r5
 8022edc:	fb03 0004 	mla	r0, r3, r4, r0
 8022ee0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022ee4:	fb17 f706 	smulbb	r7, r7, r6
 8022ee8:	b280      	uxth	r0, r0
 8022eea:	1c6b      	adds	r3, r5, #1
 8022eec:	fb02 7204 	mla	r2, r2, r4, r7
 8022ef0:	b292      	uxth	r2, r2
 8022ef2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022ef6:	1c43      	adds	r3, r0, #1
 8022ef8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022efc:	1c50      	adds	r0, r2, #1
 8022efe:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022f02:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022f06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022f0a:	0952      	lsrs	r2, r2, #5
 8022f0c:	432b      	orrs	r3, r5
 8022f0e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022f12:	4313      	orrs	r3, r2
 8022f14:	800b      	strh	r3, [r1, #0]
 8022f16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022f1a:	4680      	mov	r8, r0
 8022f1c:	e763      	b.n	8022de6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022f1e:	4684      	mov	ip, r0
 8022f20:	4680      	mov	r8, r0
 8022f22:	e76c      	b.n	8022dfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022f24:	4684      	mov	ip, r0
 8022f26:	e76a      	b.n	8022dfe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022f28:	4605      	mov	r5, r0
 8022f2a:	e779      	b.n	8022e20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022f2c:	4603      	mov	r3, r0
 8022f2e:	4605      	mov	r5, r0
 8022f30:	e782      	b.n	8022e38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022f32:	4603      	mov	r3, r0
 8022f34:	e780      	b.n	8022e38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022f36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f3a:	b093      	sub	sp, #76	@ 0x4c
 8022f3c:	461d      	mov	r5, r3
 8022f3e:	9210      	str	r2, [sp, #64]	@ 0x40
 8022f40:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022f42:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8022f46:	920b      	str	r2, [sp, #44]	@ 0x2c
 8022f48:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8022f4c:	910a      	str	r1, [sp, #40]	@ 0x28
 8022f4e:	6859      	ldr	r1, [r3, #4]
 8022f50:	681b      	ldr	r3, [r3, #0]
 8022f52:	9011      	str	r0, [sp, #68]	@ 0x44
 8022f54:	fb01 2707 	mla	r7, r1, r7, r2
 8022f58:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022f5c:	9307      	str	r3, [sp, #28]
 8022f5e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f60:	681b      	ldr	r3, [r3, #0]
 8022f62:	9309      	str	r3, [sp, #36]	@ 0x24
 8022f64:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022f66:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8022f6a:	43db      	mvns	r3, r3
 8022f6c:	b2db      	uxtb	r3, r3
 8022f6e:	9308      	str	r3, [sp, #32]
 8022f70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022f72:	2b00      	cmp	r3, #0
 8022f74:	dc03      	bgt.n	8022f7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022f76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022f78:	2b00      	cmp	r3, #0
 8022f7a:	f340 8203 	ble.w	8023384 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022f7e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022f80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f88:	1e48      	subs	r0, r1, #1
 8022f8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8022f8e:	2d00      	cmp	r5, #0
 8022f90:	f340 80da 	ble.w	8023148 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022f94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022f98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022f9c:	d406      	bmi.n	8022fac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022f9e:	4586      	cmp	lr, r0
 8022fa0:	da04      	bge.n	8022fac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022fa2:	2b00      	cmp	r3, #0
 8022fa4:	db02      	blt.n	8022fac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022fa6:	4563      	cmp	r3, ip
 8022fa8:	f2c0 80cf 	blt.w	802314a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022fac:	f11e 0e01 	adds.w	lr, lr, #1
 8022fb0:	f100 80c1 	bmi.w	8023136 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022fb4:	4571      	cmp	r1, lr
 8022fb6:	f2c0 80be 	blt.w	8023136 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022fba:	3301      	adds	r3, #1
 8022fbc:	f100 80bb 	bmi.w	8023136 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022fc0:	429a      	cmp	r2, r3
 8022fc2:	f2c0 80b8 	blt.w	8023136 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022fc6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022fca:	46a9      	mov	r9, r5
 8022fcc:	f1b9 0f00 	cmp.w	r9, #0
 8022fd0:	f340 80d8 	ble.w	8023184 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022fd4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022fd6:	1421      	asrs	r1, r4, #16
 8022fd8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022fdc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022fe0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022fe4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022fe8:	f100 8111 	bmi.w	802320e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022fec:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022ff0:	4551      	cmp	r1, sl
 8022ff2:	f280 810c 	bge.w	802320e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022ff6:	2800      	cmp	r0, #0
 8022ff8:	f2c0 8109 	blt.w	802320e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022ffc:	f103 3aff 	add.w	sl, r3, #4294967295
 8023000:	4550      	cmp	r0, sl
 8023002:	f280 8104 	bge.w	802320e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023006:	fa0f f38e 	sxth.w	r3, lr
 802300a:	fb00 1103 	mla	r1, r0, r3, r1
 802300e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023010:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8023014:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023018:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802301c:	f1bc 0f00 	cmp.w	ip, #0
 8023020:	d007      	beq.n	8023032 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8023022:	005b      	lsls	r3, r3, #1
 8023024:	eb0a 0003 	add.w	r0, sl, r3
 8023028:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802302c:	930c      	str	r3, [sp, #48]	@ 0x30
 802302e:	8843      	ldrh	r3, [r0, #2]
 8023030:	930d      	str	r3, [sp, #52]	@ 0x34
 8023032:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8023036:	fb12 f30c 	smulbb	r3, r2, ip
 802303a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802303e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023042:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023046:	10db      	asrs	r3, r3, #3
 8023048:	ea40 000e 	orr.w	r0, r0, lr
 802304c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023050:	f1cc 0e10 	rsb	lr, ip, #16
 8023054:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023058:	ebae 0e02 	sub.w	lr, lr, r2
 802305c:	ea4a 0101 	orr.w	r1, sl, r1
 8023060:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023064:	4351      	muls	r1, r2
 8023066:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8023068:	9f08      	ldr	r7, [sp, #32]
 802306a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802306e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023072:	0410      	lsls	r0, r2, #16
 8023074:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023078:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802307c:	4310      	orrs	r0, r2
 802307e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023080:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023082:	0412      	lsls	r2, r2, #16
 8023084:	fb03 e000 	mla	r0, r3, r0, lr
 8023088:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802308c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8023090:	ea42 020e 	orr.w	r2, r2, lr
 8023094:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023098:	fb03 0302 	mla	r3, r3, r2, r0
 802309c:	0d5a      	lsrs	r2, r3, #21
 802309e:	095b      	lsrs	r3, r3, #5
 80230a0:	f8b8 0000 	ldrh.w	r0, [r8]
 80230a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80230a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80230ac:	4313      	orrs	r3, r2
 80230ae:	b29b      	uxth	r3, r3
 80230b0:	1201      	asrs	r1, r0, #8
 80230b2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80230b6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80230ba:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80230be:	fb11 f107 	smulbb	r1, r1, r7
 80230c2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80230c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80230ca:	00c0      	lsls	r0, r0, #3
 80230cc:	fb0c 1c02 	mla	ip, ip, r2, r1
 80230d0:	b2c0      	uxtb	r0, r0
 80230d2:	10d9      	asrs	r1, r3, #3
 80230d4:	00db      	lsls	r3, r3, #3
 80230d6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80230da:	b2db      	uxtb	r3, r3
 80230dc:	fb10 f007 	smulbb	r0, r0, r7
 80230e0:	fa1f fc8c 	uxth.w	ip, ip
 80230e4:	fb03 0302 	mla	r3, r3, r2, r0
 80230e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80230ec:	fb1e fe07 	smulbb	lr, lr, r7
 80230f0:	fb01 e102 	mla	r1, r1, r2, lr
 80230f4:	b29a      	uxth	r2, r3
 80230f6:	f10c 0301 	add.w	r3, ip, #1
 80230fa:	b289      	uxth	r1, r1
 80230fc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023100:	1c53      	adds	r3, r2, #1
 8023102:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023106:	1c4a      	adds	r2, r1, #1
 8023108:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802310c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8023110:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023114:	0949      	lsrs	r1, r1, #5
 8023116:	ea43 030c 	orr.w	r3, r3, ip
 802311a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802311e:	430b      	orrs	r3, r1
 8023120:	f8a8 3000 	strh.w	r3, [r8]
 8023124:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8023126:	441c      	add	r4, r3
 8023128:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802312a:	f108 0802 	add.w	r8, r8, #2
 802312e:	441e      	add	r6, r3
 8023130:	f109 39ff 	add.w	r9, r9, #4294967295
 8023134:	e74a      	b.n	8022fcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023136:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8023138:	441c      	add	r4, r3
 802313a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802313c:	441e      	add	r6, r3
 802313e:	9b07      	ldr	r3, [sp, #28]
 8023140:	3302      	adds	r3, #2
 8023142:	3d01      	subs	r5, #1
 8023144:	9307      	str	r3, [sp, #28]
 8023146:	e722      	b.n	8022f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023148:	d022      	beq.n	8023190 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802314a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802314c:	1e6b      	subs	r3, r5, #1
 802314e:	fb00 4003 	mla	r0, r0, r3, r4
 8023152:	1400      	asrs	r0, r0, #16
 8023154:	f53f af37 	bmi.w	8022fc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023158:	3901      	subs	r1, #1
 802315a:	4288      	cmp	r0, r1
 802315c:	f6bf af33 	bge.w	8022fc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023160:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8023162:	fb01 6303 	mla	r3, r1, r3, r6
 8023166:	141b      	asrs	r3, r3, #16
 8023168:	f53f af2d 	bmi.w	8022fc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802316c:	3a01      	subs	r2, #1
 802316e:	4293      	cmp	r3, r2
 8023170:	f6bf af29 	bge.w	8022fc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023174:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023178:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 802317c:	46a8      	mov	r8, r5
 802317e:	f1b8 0f00 	cmp.w	r8, #0
 8023182:	dc5e      	bgt.n	8023242 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023184:	9b07      	ldr	r3, [sp, #28]
 8023186:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802318a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802318e:	9307      	str	r3, [sp, #28]
 8023190:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023192:	2b00      	cmp	r3, #0
 8023194:	f340 80f6 	ble.w	8023384 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023198:	ee30 0a04 	vadd.f32	s0, s0, s8
 802319c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80231a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80231a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80231a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80231aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80231ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80231b2:	eef0 6a62 	vmov.f32	s13, s5
 80231b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80231ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80231be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80231c2:	ee16 4a90 	vmov	r4, s13
 80231c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80231ca:	eef0 6a43 	vmov.f32	s13, s6
 80231ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80231d2:	ee12 2a90 	vmov	r2, s5
 80231d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80231da:	fb92 f3f3 	sdiv	r3, r2, r3
 80231de:	ee13 2a10 	vmov	r2, s6
 80231e2:	931f      	str	r3, [sp, #124]	@ 0x7c
 80231e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80231e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80231ea:	9320      	str	r3, [sp, #128]	@ 0x80
 80231ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80231ee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80231f0:	3b01      	subs	r3, #1
 80231f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80231f6:	930a      	str	r3, [sp, #40]	@ 0x28
 80231f8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80231fa:	ee16 6a90 	vmov	r6, s13
 80231fe:	bf14      	ite	ne
 8023200:	461d      	movne	r5, r3
 8023202:	4615      	moveq	r5, r2
 8023204:	eeb0 3a67 	vmov.f32	s6, s15
 8023208:	eef0 2a47 	vmov.f32	s5, s14
 802320c:	e6b0      	b.n	8022f70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802320e:	f111 0a01 	adds.w	sl, r1, #1
 8023212:	d487      	bmi.n	8023124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023214:	45d6      	cmp	lr, sl
 8023216:	db85      	blt.n	8023124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023218:	f110 0a01 	adds.w	sl, r0, #1
 802321c:	d482      	bmi.n	8023124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802321e:	4553      	cmp	r3, sl
 8023220:	db80      	blt.n	8023124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023222:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8023224:	9101      	str	r1, [sp, #4]
 8023226:	b21b      	sxth	r3, r3
 8023228:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802322c:	9300      	str	r3, [sp, #0]
 802322e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023232:	fa0f f38e 	sxth.w	r3, lr
 8023236:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023238:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802323a:	4641      	mov	r1, r8
 802323c:	f7ff fdb4 	bl	8022da8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023240:	e770      	b.n	8023124 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023242:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023244:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8023246:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802324a:	1430      	asrs	r0, r6, #16
 802324c:	1423      	asrs	r3, r4, #16
 802324e:	fb01 3000 	mla	r0, r1, r0, r3
 8023252:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023254:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023258:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802325c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023260:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023264:	8858      	ldrh	r0, [r3, #2]
 8023266:	f1be 0f00 	cmp.w	lr, #0
 802326a:	d00b      	beq.n	8023284 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802326c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8023270:	3901      	subs	r1, #1
 8023272:	0049      	lsls	r1, r1, #1
 8023274:	3102      	adds	r1, #2
 8023276:	eb03 0b01 	add.w	fp, r3, r1
 802327a:	5a5b      	ldrh	r3, [r3, r1]
 802327c:	930e      	str	r3, [sp, #56]	@ 0x38
 802327e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023282:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023284:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023288:	fb12 f30e 	smulbb	r3, r2, lr
 802328c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8023290:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023294:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8023298:	10db      	asrs	r3, r3, #3
 802329a:	ea41 010c 	orr.w	r1, r1, ip
 802329e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80232a2:	f1ce 0c10 	rsb	ip, lr, #16
 80232a6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80232aa:	ebac 0c02 	sub.w	ip, ip, r2
 80232ae:	ea4b 0000 	orr.w	r0, fp, r0
 80232b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80232b6:	4350      	muls	r0, r2
 80232b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80232ba:	9f08      	ldr	r7, [sp, #32]
 80232bc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80232c0:	fb0c 0c01 	mla	ip, ip, r1, r0
 80232c4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80232c8:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 80232cc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80232ce:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80232d0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80232d4:	0412      	lsls	r2, r2, #16
 80232d6:	ea4b 0101 	orr.w	r1, fp, r1
 80232da:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80232de:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80232e2:	fb03 c101 	mla	r1, r3, r1, ip
 80232e6:	4302      	orrs	r2, r0
 80232e8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80232ec:	fb03 1202 	mla	r2, r3, r2, r1
 80232f0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80232f4:	0952      	lsrs	r2, r2, #5
 80232f6:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 80232fa:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80232fe:	f8b9 2000 	ldrh.w	r2, [r9]
 8023302:	ea4b 0303 	orr.w	r3, fp, r3
 8023306:	b29b      	uxth	r3, r3
 8023308:	1211      	asrs	r1, r2, #8
 802330a:	1218      	asrs	r0, r3, #8
 802330c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023310:	fb11 f107 	smulbb	r1, r1, r7
 8023314:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023318:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802331c:	00d2      	lsls	r2, r2, #3
 802331e:	fb00 100a 	mla	r0, r0, sl, r1
 8023322:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8023326:	10d9      	asrs	r1, r3, #3
 8023328:	b2d2      	uxtb	r2, r2
 802332a:	00db      	lsls	r3, r3, #3
 802332c:	fb1c fc07 	smulbb	ip, ip, r7
 8023330:	fb12 f207 	smulbb	r2, r2, r7
 8023334:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8023338:	b2db      	uxtb	r3, r3
 802333a:	b280      	uxth	r0, r0
 802333c:	fb01 c10a 	mla	r1, r1, sl, ip
 8023340:	fb03 230a 	mla	r3, r3, sl, r2
 8023344:	b29b      	uxth	r3, r3
 8023346:	b289      	uxth	r1, r1
 8023348:	1c42      	adds	r2, r0, #1
 802334a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802334e:	f101 0c01 	add.w	ip, r1, #1
 8023352:	1c5a      	adds	r2, r3, #1
 8023354:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023358:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802335c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802335e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8023362:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023366:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802336a:	4310      	orrs	r0, r2
 802336c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8023370:	441c      	add	r4, r3
 8023372:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023374:	ea40 000c 	orr.w	r0, r0, ip
 8023378:	f829 0b02 	strh.w	r0, [r9], #2
 802337c:	441e      	add	r6, r3
 802337e:	f108 38ff 	add.w	r8, r8, #4294967295
 8023382:	e6fc      	b.n	802317e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023384:	b013      	add	sp, #76	@ 0x4c
 8023386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802338a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802338a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802338e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023392:	fb0e 4703 	mla	r7, lr, r3, r4
 8023396:	f1be 0f00 	cmp.w	lr, #0
 802339a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802339e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 80233a2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 80233a6:	8808      	ldrh	r0, [r1, #0]
 80233a8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80233ac:	db60      	blt.n	8023470 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80233ae:	45f1      	cmp	r9, lr
 80233b0:	dd5e      	ble.n	8023470 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80233b2:	2c00      	cmp	r4, #0
 80233b4:	db5a      	blt.n	802346c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80233b6:	42a3      	cmp	r3, r4
 80233b8:	dd58      	ble.n	802346c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80233ba:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80233be:	1c62      	adds	r2, r4, #1
 80233c0:	d459      	bmi.n	8023476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80233c2:	4293      	cmp	r3, r2
 80233c4:	dd57      	ble.n	8023476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80233c6:	2d00      	cmp	r5, #0
 80233c8:	d055      	beq.n	8023476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80233ca:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80233ce:	f11e 0e01 	adds.w	lr, lr, #1
 80233d2:	d454      	bmi.n	802347e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80233d4:	45f1      	cmp	r9, lr
 80233d6:	dd52      	ble.n	802347e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80233d8:	2e00      	cmp	r6, #0
 80233da:	d050      	beq.n	802347e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80233dc:	2c00      	cmp	r4, #0
 80233de:	db4c      	blt.n	802347a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80233e0:	42a3      	cmp	r3, r4
 80233e2:	dd4a      	ble.n	802347a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80233e4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80233e8:	3401      	adds	r4, #1
 80233ea:	d405      	bmi.n	80233f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80233ec:	42a3      	cmp	r3, r4
 80233ee:	dd03      	ble.n	80233f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80233f0:	b115      	cbz	r5, 80233f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80233f2:	3301      	adds	r3, #1
 80233f4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80233f8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80233fc:	fb15 f406 	smulbb	r4, r5, r6
 8023400:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8023404:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023408:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802340c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023410:	ea43 0c0c 	orr.w	ip, r3, ip
 8023414:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8023418:	f1c6 0310 	rsb	r3, r6, #16
 802341c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8023420:	1b5b      	subs	r3, r3, r5
 8023422:	ea4e 0707 	orr.w	r7, lr, r7
 8023426:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802342a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802342e:	437d      	muls	r5, r7
 8023430:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023434:	0403      	lsls	r3, r0, #16
 8023436:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802343a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802343e:	4318      	orrs	r0, r3
 8023440:	0413      	lsls	r3, r2, #16
 8023442:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8023446:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802344a:	4313      	orrs	r3, r2
 802344c:	fb04 c000 	mla	r0, r4, r0, ip
 8023450:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023454:	fb06 0003 	mla	r0, r6, r3, r0
 8023458:	0d43      	lsrs	r3, r0, #21
 802345a:	0940      	lsrs	r0, r0, #5
 802345c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023460:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023464:	4318      	orrs	r0, r3
 8023466:	8008      	strh	r0, [r1, #0]
 8023468:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802346c:	4684      	mov	ip, r0
 802346e:	e7a6      	b.n	80233be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023470:	4607      	mov	r7, r0
 8023472:	4684      	mov	ip, r0
 8023474:	e7ab      	b.n	80233ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023476:	4607      	mov	r7, r0
 8023478:	e7a9      	b.n	80233ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802347a:	4602      	mov	r2, r0
 802347c:	e7b4      	b.n	80233e8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802347e:	4602      	mov	r2, r0
 8023480:	e7ba      	b.n	80233f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023482 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023482:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023486:	b08f      	sub	sp, #60	@ 0x3c
 8023488:	461d      	mov	r5, r3
 802348a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802348c:	920c      	str	r2, [sp, #48]	@ 0x30
 802348e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8023492:	9107      	str	r1, [sp, #28]
 8023494:	6859      	ldr	r1, [r3, #4]
 8023496:	681b      	ldr	r3, [r3, #0]
 8023498:	900d      	str	r0, [sp, #52]	@ 0x34
 802349a:	fb01 2707 	mla	r7, r1, r7, r2
 802349e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80234a2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80234a4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 80234a8:	f8d3 8000 	ldr.w	r8, [r3]
 80234ac:	9b07      	ldr	r3, [sp, #28]
 80234ae:	2b00      	cmp	r3, #0
 80234b0:	dc03      	bgt.n	80234ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80234b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80234b4:	2b00      	cmp	r3, #0
 80234b6:	f340 8181 	ble.w	80237bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80234ba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80234bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80234c4:	1e48      	subs	r0, r1, #1
 80234c6:	f102 3cff 	add.w	ip, r2, #4294967295
 80234ca:	2d00      	cmp	r5, #0
 80234cc:	f340 809b 	ble.w	8023606 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80234d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80234d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80234d8:	d406      	bmi.n	80234e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80234da:	4586      	cmp	lr, r0
 80234dc:	da04      	bge.n	80234e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80234de:	2b00      	cmp	r3, #0
 80234e0:	db02      	blt.n	80234e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80234e2:	4563      	cmp	r3, ip
 80234e4:	f2c0 8090 	blt.w	8023608 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80234e8:	f11e 0e01 	adds.w	lr, lr, #1
 80234ec:	f100 8084 	bmi.w	80235f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80234f0:	4571      	cmp	r1, lr
 80234f2:	f2c0 8081 	blt.w	80235f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80234f6:	3301      	adds	r3, #1
 80234f8:	d47e      	bmi.n	80235f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80234fa:	429a      	cmp	r2, r3
 80234fc:	db7c      	blt.n	80235f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80234fe:	46aa      	mov	sl, r5
 8023500:	46b9      	mov	r9, r7
 8023502:	f1ba 0f00 	cmp.w	sl, #0
 8023506:	f340 8099 	ble.w	802363c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802350a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802350c:	1421      	asrs	r1, r4, #16
 802350e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023512:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023516:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802351a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802351e:	f100 80d0 	bmi.w	80236c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023522:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023526:	4559      	cmp	r1, fp
 8023528:	f280 80cb 	bge.w	80236c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802352c:	2800      	cmp	r0, #0
 802352e:	f2c0 80c8 	blt.w	80236c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023532:	f103 3bff 	add.w	fp, r3, #4294967295
 8023536:	4558      	cmp	r0, fp
 8023538:	f280 80c3 	bge.w	80236c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802353c:	fa0f fe8e 	sxth.w	lr, lr
 8023540:	fb00 110e 	mla	r1, r0, lr, r1
 8023544:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023548:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802354c:	8841      	ldrh	r1, [r0, #2]
 802354e:	f1bc 0f00 	cmp.w	ip, #0
 8023552:	d00b      	beq.n	802356c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023554:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8023558:	3b01      	subs	r3, #1
 802355a:	005b      	lsls	r3, r3, #1
 802355c:	3302      	adds	r3, #2
 802355e:	eb00 0e03 	add.w	lr, r0, r3
 8023562:	5ac3      	ldrh	r3, [r0, r3]
 8023564:	9308      	str	r3, [sp, #32]
 8023566:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802356a:	9309      	str	r3, [sp, #36]	@ 0x24
 802356c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023570:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023574:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8023578:	ea40 000b 	orr.w	r0, r0, fp
 802357c:	fb12 f30c 	smulbb	r3, r2, ip
 8023580:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023584:	10db      	asrs	r3, r3, #3
 8023586:	f1cc 0e10 	rsb	lr, ip, #16
 802358a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802358e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023592:	ebae 0e02 	sub.w	lr, lr, r2
 8023596:	ea4b 0101 	orr.w	r1, fp, r1
 802359a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802359e:	4351      	muls	r1, r2
 80235a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80235a2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80235a6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80235aa:	0410      	lsls	r0, r2, #16
 80235ac:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80235b0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80235b4:	4310      	orrs	r0, r2
 80235b6:	9a08      	ldr	r2, [sp, #32]
 80235b8:	9908      	ldr	r1, [sp, #32]
 80235ba:	0412      	lsls	r2, r2, #16
 80235bc:	fb03 e000 	mla	r0, r3, r0, lr
 80235c0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80235c4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80235c8:	ea42 020e 	orr.w	r2, r2, lr
 80235cc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80235d0:	fb03 0302 	mla	r3, r3, r2, r0
 80235d4:	0d5a      	lsrs	r2, r3, #21
 80235d6:	095b      	lsrs	r3, r3, #5
 80235d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80235dc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80235e0:	4313      	orrs	r3, r2
 80235e2:	f8a9 3000 	strh.w	r3, [r9]
 80235e6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80235e8:	441c      	add	r4, r3
 80235ea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80235ec:	f109 0902 	add.w	r9, r9, #2
 80235f0:	441e      	add	r6, r3
 80235f2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80235f6:	e784      	b.n	8023502 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80235f8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80235fa:	441c      	add	r4, r3
 80235fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80235fe:	3d01      	subs	r5, #1
 8023600:	441e      	add	r6, r3
 8023602:	3702      	adds	r7, #2
 8023604:	e761      	b.n	80234ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023606:	d01d      	beq.n	8023644 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023608:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802360a:	1e6b      	subs	r3, r5, #1
 802360c:	fb00 4003 	mla	r0, r0, r3, r4
 8023610:	1400      	asrs	r0, r0, #16
 8023612:	f53f af74 	bmi.w	80234fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023616:	3901      	subs	r1, #1
 8023618:	4288      	cmp	r0, r1
 802361a:	f6bf af70 	bge.w	80234fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802361e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8023620:	fb01 6303 	mla	r3, r1, r3, r6
 8023624:	141b      	asrs	r3, r3, #16
 8023626:	f53f af6a 	bmi.w	80234fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802362a:	3a01      	subs	r2, #1
 802362c:	4293      	cmp	r3, r2
 802362e:	f6bf af66 	bge.w	80234fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023632:	46a9      	mov	r9, r5
 8023634:	46ba      	mov	sl, r7
 8023636:	f1b9 0f00 	cmp.w	r9, #0
 802363a:	dc5a      	bgt.n	80236f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802363c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023640:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023644:	9b07      	ldr	r3, [sp, #28]
 8023646:	2b00      	cmp	r3, #0
 8023648:	f340 80b8 	ble.w	80237bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802364c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023650:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023654:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023658:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802365a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802365e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023662:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023666:	eef0 6a62 	vmov.f32	s13, s5
 802366a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802366e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023672:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023676:	ee16 4a90 	vmov	r4, s13
 802367a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802367e:	eef0 6a43 	vmov.f32	s13, s6
 8023682:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023686:	ee12 2a90 	vmov	r2, s5
 802368a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802368e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023692:	ee13 2a10 	vmov	r2, s6
 8023696:	931b      	str	r3, [sp, #108]	@ 0x6c
 8023698:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802369a:	fb92 f3f3 	sdiv	r3, r2, r3
 802369e:	931c      	str	r3, [sp, #112]	@ 0x70
 80236a0:	9b07      	ldr	r3, [sp, #28]
 80236a2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80236a4:	3b01      	subs	r3, #1
 80236a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80236aa:	9307      	str	r3, [sp, #28]
 80236ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80236ae:	ee16 6a90 	vmov	r6, s13
 80236b2:	bf14      	ite	ne
 80236b4:	461d      	movne	r5, r3
 80236b6:	4615      	moveq	r5, r2
 80236b8:	eeb0 3a67 	vmov.f32	s6, s15
 80236bc:	eef0 2a47 	vmov.f32	s5, s14
 80236c0:	e6f4      	b.n	80234ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80236c2:	f111 0b01 	adds.w	fp, r1, #1
 80236c6:	d48e      	bmi.n	80235e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80236c8:	45de      	cmp	lr, fp
 80236ca:	db8c      	blt.n	80235e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80236cc:	f110 0b01 	adds.w	fp, r0, #1
 80236d0:	d489      	bmi.n	80235e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80236d2:	455b      	cmp	r3, fp
 80236d4:	db87      	blt.n	80235e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80236d6:	b21b      	sxth	r3, r3
 80236d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80236dc:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80236e0:	9300      	str	r3, [sp, #0]
 80236e2:	4642      	mov	r2, r8
 80236e4:	fa0f f38e 	sxth.w	r3, lr
 80236e8:	4649      	mov	r1, r9
 80236ea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80236ec:	f7ff fe4d 	bl	802338a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80236f0:	e779      	b.n	80235e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80236f2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80236f4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80236f8:	1420      	asrs	r0, r4, #16
 80236fa:	1431      	asrs	r1, r6, #16
 80236fc:	fb03 0101 	mla	r1, r3, r1, r0
 8023700:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023704:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023708:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802370c:	8841      	ldrh	r1, [r0, #2]
 802370e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023712:	f1be 0f00 	cmp.w	lr, #0
 8023716:	d00b      	beq.n	8023730 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023718:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802371c:	3b01      	subs	r3, #1
 802371e:	005b      	lsls	r3, r3, #1
 8023720:	3302      	adds	r3, #2
 8023722:	eb00 0b03 	add.w	fp, r0, r3
 8023726:	5ac3      	ldrh	r3, [r0, r3]
 8023728:	930a      	str	r3, [sp, #40]	@ 0x28
 802372a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802372e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023730:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023734:	fb12 f30e 	smulbb	r3, r2, lr
 8023738:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802373c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023740:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8023744:	10db      	asrs	r3, r3, #3
 8023746:	ea40 000c 	orr.w	r0, r0, ip
 802374a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802374e:	f1ce 0c10 	rsb	ip, lr, #16
 8023752:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023756:	ebac 0c02 	sub.w	ip, ip, r2
 802375a:	ea4b 0101 	orr.w	r1, fp, r1
 802375e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023762:	4351      	muls	r1, r2
 8023764:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023766:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802376a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802376e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023772:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8023776:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8023778:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802377a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802377e:	0412      	lsls	r2, r2, #16
 8023780:	ea4b 0000 	orr.w	r0, fp, r0
 8023784:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8023788:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 802378c:	fb03 c000 	mla	r0, r3, r0, ip
 8023790:	ea42 0b0b 	orr.w	fp, r2, fp
 8023794:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023798:	fb03 000b 	mla	r0, r3, fp, r0
 802379c:	0d43      	lsrs	r3, r0, #21
 802379e:	0940      	lsrs	r0, r0, #5
 80237a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80237a4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80237a8:	4318      	orrs	r0, r3
 80237aa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80237ac:	f82a 0b02 	strh.w	r0, [sl], #2
 80237b0:	441c      	add	r4, r3
 80237b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80237b4:	f109 39ff 	add.w	r9, r9, #4294967295
 80237b8:	441e      	add	r6, r3
 80237ba:	e73c      	b.n	8023636 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80237bc:	b00f      	add	sp, #60	@ 0x3c
 80237be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080237c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80237c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80237c6:	b085      	sub	sp, #20
 80237c8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80237cc:	9102      	str	r1, [sp, #8]
 80237ce:	2c00      	cmp	r4, #0
 80237d0:	fb04 7103 	mla	r1, r4, r3, r7
 80237d4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80237d8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80237dc:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80237e0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80237e4:	f2c0 811b 	blt.w	8023a1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80237e8:	45a6      	cmp	lr, r4
 80237ea:	f340 8118 	ble.w	8023a1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80237ee:	2f00      	cmp	r7, #0
 80237f0:	f2c0 8113 	blt.w	8023a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80237f4:	42bb      	cmp	r3, r7
 80237f6:	f340 8110 	ble.w	8023a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80237fa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80237fe:	1c7a      	adds	r2, r7, #1
 8023800:	f100 8110 	bmi.w	8023a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023804:	4293      	cmp	r3, r2
 8023806:	f340 810d 	ble.w	8023a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802380a:	2e00      	cmp	r6, #0
 802380c:	f000 810c 	beq.w	8023a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023810:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023814:	3401      	adds	r4, #1
 8023816:	f100 810b 	bmi.w	8023a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802381a:	45a6      	cmp	lr, r4
 802381c:	f340 8108 	ble.w	8023a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023820:	2800      	cmp	r0, #0
 8023822:	f000 8108 	beq.w	8023a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023826:	2f00      	cmp	r7, #0
 8023828:	f2c0 8100 	blt.w	8023a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802382c:	42bb      	cmp	r3, r7
 802382e:	f340 80fd 	ble.w	8023a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023832:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023836:	3701      	adds	r7, #1
 8023838:	f100 8100 	bmi.w	8023a3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802383c:	42bb      	cmp	r3, r7
 802383e:	f340 80fd 	ble.w	8023a3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023842:	2e00      	cmp	r6, #0
 8023844:	f000 80fc 	beq.w	8023a40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023848:	3301      	adds	r3, #1
 802384a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802384e:	b2b6      	uxth	r6, r6
 8023850:	b280      	uxth	r0, r0
 8023852:	fb00 fe06 	mul.w	lr, r0, r6
 8023856:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802385a:	0136      	lsls	r6, r6, #4
 802385c:	eba6 070e 	sub.w	r7, r6, lr
 8023860:	b280      	uxth	r0, r0
 8023862:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8023866:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802386a:	b2bf      	uxth	r7, r7
 802386c:	1a1b      	subs	r3, r3, r0
 802386e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023872:	b29b      	uxth	r3, r3
 8023874:	fb0a f607 	mul.w	r6, sl, r7
 8023878:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802387c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023880:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023884:	fb00 6609 	mla	r6, r0, r9, r6
 8023888:	fb0e 6608 	mla	r6, lr, r8, r6
 802388c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023890:	9600      	str	r6, [sp, #0]
 8023892:	2e00      	cmp	r6, #0
 8023894:	f000 80be 	beq.w	8023a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023898:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802389c:	fb0b fc0c 	mul.w	ip, fp, ip
 80238a0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80238a4:	fb0b f505 	mul.w	r5, fp, r5
 80238a8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80238ac:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80238b0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80238b4:	44dc      	add	ip, fp
 80238b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238ba:	9501      	str	r5, [sp, #4]
 80238bc:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80238c0:	9503      	str	r5, [sp, #12]
 80238c2:	9d01      	ldr	r5, [sp, #4]
 80238c4:	9e02      	ldr	r6, [sp, #8]
 80238c6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80238ca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80238ce:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80238d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80238d6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80238da:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80238de:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80238e2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80238e6:	4465      	add	r5, ip
 80238e8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80238ec:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80238f0:	fb09 fc0c 	mul.w	ip, r9, ip
 80238f4:	fb09 f904 	mul.w	r9, r9, r4
 80238f8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80238fc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023900:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8023904:	fb08 f404 	mul.w	r4, r8, r4
 8023908:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802390c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023910:	fb08 f802 	mul.w	r8, r8, r2
 8023914:	fb0a fa01 	mul.w	sl, sl, r1
 8023918:	0a22      	lsrs	r2, r4, #8
 802391a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802391e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023922:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8023926:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802392a:	4414      	add	r4, r2
 802392c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023930:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8023934:	0a2d      	lsrs	r5, r5, #8
 8023936:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802393a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802393e:	9a03      	ldr	r2, [sp, #12]
 8023940:	8836      	ldrh	r6, [r6, #0]
 8023942:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023946:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802394a:	437d      	muls	r5, r7
 802394c:	4461      	add	r1, ip
 802394e:	0a24      	lsrs	r4, r4, #8
 8023950:	fb02 5503 	mla	r5, r2, r3, r5
 8023954:	0a09      	lsrs	r1, r1, #8
 8023956:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802395a:	fb04 540e 	mla	r4, r4, lr, r5
 802395e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023962:	fb01 4100 	mla	r1, r1, r0, r4
 8023966:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802396a:	0a09      	lsrs	r1, r1, #8
 802396c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023970:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023974:	fb07 f70a 	mul.w	r7, r7, sl
 8023978:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802397c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023980:	fb03 7101 	mla	r1, r3, r1, r7
 8023984:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023988:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802398c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023990:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023994:	fb00 e101 	mla	r1, r0, r1, lr
 8023998:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 802399c:	9a00      	ldr	r2, [sp, #0]
 802399e:	b287      	uxth	r7, r0
 80239a0:	437a      	muls	r2, r7
 80239a2:	0a09      	lsrs	r1, r1, #8
 80239a4:	1c53      	adds	r3, r2, #1
 80239a6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80239aa:	4321      	orrs	r1, r4
 80239ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80239b0:	1235      	asrs	r5, r6, #8
 80239b2:	0c0a      	lsrs	r2, r1, #16
 80239b4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80239b8:	b2db      	uxtb	r3, r3
 80239ba:	fb12 f207 	smulbb	r2, r2, r7
 80239be:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80239c2:	fb05 2503 	mla	r5, r5, r3, r2
 80239c6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80239ca:	10f2      	asrs	r2, r6, #3
 80239cc:	b2c8      	uxtb	r0, r1
 80239ce:	00f6      	lsls	r6, r6, #3
 80239d0:	fb14 f407 	smulbb	r4, r4, r7
 80239d4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80239d8:	b2f6      	uxtb	r6, r6
 80239da:	fb10 f007 	smulbb	r0, r0, r7
 80239de:	fb02 4203 	mla	r2, r2, r3, r4
 80239e2:	b2ad      	uxth	r5, r5
 80239e4:	fb06 0303 	mla	r3, r6, r3, r0
 80239e8:	b299      	uxth	r1, r3
 80239ea:	b294      	uxth	r4, r2
 80239ec:	1c6b      	adds	r3, r5, #1
 80239ee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80239f2:	1c62      	adds	r2, r4, #1
 80239f4:	1c4b      	adds	r3, r1, #1
 80239f6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80239fa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80239fe:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023a02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a06:	0952      	lsrs	r2, r2, #5
 8023a08:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023a0c:	432b      	orrs	r3, r5
 8023a0e:	4313      	orrs	r3, r2
 8023a10:	9a02      	ldr	r2, [sp, #8]
 8023a12:	8013      	strh	r3, [r2, #0]
 8023a14:	b005      	add	sp, #20
 8023a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a1a:	2500      	movs	r5, #0
 8023a1c:	e6ef      	b.n	80237fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023a1e:	2100      	movs	r1, #0
 8023a20:	460d      	mov	r5, r1
 8023a22:	e6f7      	b.n	8023814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023a24:	2100      	movs	r1, #0
 8023a26:	e6f5      	b.n	8023814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023a28:	4631      	mov	r1, r6
 8023a2a:	e6f3      	b.n	8023814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023a2c:	2400      	movs	r4, #0
 8023a2e:	e702      	b.n	8023836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023a30:	2200      	movs	r2, #0
 8023a32:	4614      	mov	r4, r2
 8023a34:	e70b      	b.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023a36:	4602      	mov	r2, r0
 8023a38:	4604      	mov	r4, r0
 8023a3a:	e708      	b.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023a3c:	2200      	movs	r2, #0
 8023a3e:	e706      	b.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023a40:	4632      	mov	r2, r6
 8023a42:	e704      	b.n	802384e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a48:	b09d      	sub	sp, #116	@ 0x74
 8023a4a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8023a4e:	9219      	str	r2, [sp, #100]	@ 0x64
 8023a50:	9307      	str	r3, [sp, #28]
 8023a52:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8023a54:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8023a58:	931a      	str	r3, [sp, #104]	@ 0x68
 8023a5a:	9117      	str	r1, [sp, #92]	@ 0x5c
 8023a5c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8023a60:	901b      	str	r0, [sp, #108]	@ 0x6c
 8023a62:	6850      	ldr	r0, [r2, #4]
 8023a64:	6812      	ldr	r2, [r2, #0]
 8023a66:	fb00 1303 	mla	r3, r0, r3, r1
 8023a6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8023a70:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023a72:	681b      	ldr	r3, [r3, #0]
 8023a74:	9310      	str	r3, [sp, #64]	@ 0x40
 8023a76:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8023a7a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023a7c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023a7e:	2b00      	cmp	r3, #0
 8023a80:	dc03      	bgt.n	8023a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023a82:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8023a84:	2b00      	cmp	r3, #0
 8023a86:	f340 8375 	ble.w	8024174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023a8a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023a8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023a94:	1e48      	subs	r0, r1, #1
 8023a96:	1e57      	subs	r7, r2, #1
 8023a98:	9b07      	ldr	r3, [sp, #28]
 8023a9a:	2b00      	cmp	r3, #0
 8023a9c:	f340 818e 	ble.w	8023dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023aa0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023aa4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023aa8:	d406      	bmi.n	8023ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023aaa:	4584      	cmp	ip, r0
 8023aac:	da04      	bge.n	8023ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023aae:	2b00      	cmp	r3, #0
 8023ab0:	db02      	blt.n	8023ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023ab2:	42bb      	cmp	r3, r7
 8023ab4:	f2c0 8183 	blt.w	8023dbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023ab8:	f11c 0c01 	adds.w	ip, ip, #1
 8023abc:	f100 8173 	bmi.w	8023da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023ac0:	4561      	cmp	r1, ip
 8023ac2:	f2c0 8170 	blt.w	8023da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023ac6:	3301      	adds	r3, #1
 8023ac8:	f100 816d 	bmi.w	8023da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023acc:	429a      	cmp	r2, r3
 8023ace:	f2c0 816a 	blt.w	8023da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023ad2:	9b07      	ldr	r3, [sp, #28]
 8023ad4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8023ad6:	9318      	str	r3, [sp, #96]	@ 0x60
 8023ad8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023ada:	2b00      	cmp	r3, #0
 8023adc:	f340 818c 	ble.w	8023df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023ae0:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8023ae2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023ae4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023ae8:	689b      	ldr	r3, [r3, #8]
 8023aea:	1422      	asrs	r2, r4, #16
 8023aec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023af0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023af4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023af8:	f100 81cd 	bmi.w	8023e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023afc:	f103 38ff 	add.w	r8, r3, #4294967295
 8023b00:	4542      	cmp	r2, r8
 8023b02:	f280 81c8 	bge.w	8023e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023b06:	f1bc 0f00 	cmp.w	ip, #0
 8023b0a:	f2c0 81c4 	blt.w	8023e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023b0e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023b12:	45c4      	cmp	ip, r8
 8023b14:	f280 81bf 	bge.w	8023e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023b18:	b21b      	sxth	r3, r3
 8023b1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8023b1e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023b20:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023b24:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023b28:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023b2c:	2800      	cmp	r0, #0
 8023b2e:	f000 81a9 	beq.w	8023e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023b32:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023b36:	950c      	str	r5, [sp, #48]	@ 0x30
 8023b38:	0e2d      	lsrs	r5, r5, #24
 8023b3a:	9513      	str	r5, [sp, #76]	@ 0x4c
 8023b3c:	b181      	cbz	r1, 8023b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023b3e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023b42:	3b01      	subs	r3, #1
 8023b44:	009b      	lsls	r3, r3, #2
 8023b46:	3304      	adds	r3, #4
 8023b48:	eb08 0c03 	add.w	ip, r8, r3
 8023b4c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023b50:	9308      	str	r3, [sp, #32]
 8023b52:	0e1b      	lsrs	r3, r3, #24
 8023b54:	9311      	str	r3, [sp, #68]	@ 0x44
 8023b56:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023b5a:	930d      	str	r3, [sp, #52]	@ 0x34
 8023b5c:	0e1b      	lsrs	r3, r3, #24
 8023b5e:	9314      	str	r3, [sp, #80]	@ 0x50
 8023b60:	b280      	uxth	r0, r0
 8023b62:	b289      	uxth	r1, r1
 8023b64:	fb00 f901 	mul.w	r9, r0, r1
 8023b68:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023b6c:	0100      	lsls	r0, r0, #4
 8023b6e:	eba0 0809 	sub.w	r8, r0, r9
 8023b72:	b289      	uxth	r1, r1
 8023b74:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8023b78:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8023b7a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023b7c:	fa1f f888 	uxth.w	r8, r8
 8023b80:	1a5b      	subs	r3, r3, r1
 8023b82:	b29b      	uxth	r3, r3
 8023b84:	fb08 f000 	mul.w	r0, r8, r0
 8023b88:	fb03 000e 	mla	r0, r3, lr, r0
 8023b8c:	fb01 0005 	mla	r0, r1, r5, r0
 8023b90:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023b92:	fb09 0005 	mla	r0, r9, r5, r0
 8023b96:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023b9a:	2800      	cmp	r0, #0
 8023b9c:	f000 80fa 	beq.w	8023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ba0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023ba4:	d01b      	beq.n	8023bde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023ba6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8023baa:	fb0e fa0a 	mul.w	sl, lr, sl
 8023bae:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023bb2:	fb0e fe02 	mul.w	lr, lr, r2
 8023bb6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023bba:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023bbe:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023bc2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023bc6:	4452      	add	r2, sl
 8023bc8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023bcc:	0a12      	lsrs	r2, r2, #8
 8023bce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023bd2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023bd6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023bda:	ea42 020c 	orr.w	r2, r2, ip
 8023bde:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023be0:	2dff      	cmp	r5, #255	@ 0xff
 8023be2:	d021      	beq.n	8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023be4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023be6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023bea:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023bec:	fb05 fb0b 	mul.w	fp, r5, fp
 8023bf0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023bf2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023bf6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023bf8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023bfc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c00:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c04:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023c08:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023c0c:	44de      	add	lr, fp
 8023c0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c1a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c1e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023c22:	ea4e 050a 	orr.w	r5, lr, sl
 8023c26:	950c      	str	r5, [sp, #48]	@ 0x30
 8023c28:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023c2a:	2dff      	cmp	r5, #255	@ 0xff
 8023c2c:	d021      	beq.n	8023c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023c2e:	9d08      	ldr	r5, [sp, #32]
 8023c30:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023c34:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023c36:	fb05 fb0b 	mul.w	fp, r5, fp
 8023c3a:	9d08      	ldr	r5, [sp, #32]
 8023c3c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023c40:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023c42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023c46:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c4a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c4e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023c52:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023c56:	44de      	add	lr, fp
 8023c58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023c6c:	ea4e 050a 	orr.w	r5, lr, sl
 8023c70:	9508      	str	r5, [sp, #32]
 8023c72:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023c74:	2dff      	cmp	r5, #255	@ 0xff
 8023c76:	d021      	beq.n	8023cbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023c78:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023c7a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023c7e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023c80:	fb05 fb0b 	mul.w	fp, r5, fp
 8023c84:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023c86:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023c8a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023c8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023c90:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c94:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c98:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023c9c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023ca0:	44de      	add	lr, fp
 8023ca2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023ca6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023caa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023cae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023cb2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023cb6:	ea4e 050a 	orr.w	r5, lr, sl
 8023cba:	950d      	str	r5, [sp, #52]	@ 0x34
 8023cbc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023cbe:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023cc2:	9d08      	ldr	r5, [sp, #32]
 8023cc4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8023cc8:	fb08 fc0c 	mul.w	ip, r8, ip
 8023ccc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023cd0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023cd4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023cd6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023cda:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023cde:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023ce0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023ce4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023ce8:	fb08 f80e 	mul.w	r8, r8, lr
 8023cec:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023cf0:	fb03 8202 	mla	r2, r3, r2, r8
 8023cf4:	9b08      	ldr	r3, [sp, #32]
 8023cf6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023cf8:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8023cfc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023cfe:	fb01 220a 	mla	r2, r1, sl, r2
 8023d02:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8023d06:	fb09 2901 	mla	r9, r9, r1, r2
 8023d0a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023d0c:	883b      	ldrh	r3, [r7, #0]
 8023d0e:	4342      	muls	r2, r0
 8023d10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023d18:	1c50      	adds	r0, r2, #1
 8023d1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023d1e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023d22:	ea4c 0c09 	orr.w	ip, ip, r9
 8023d26:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023d2a:	1219      	asrs	r1, r3, #8
 8023d2c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023d30:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023d34:	b2c0      	uxtb	r0, r0
 8023d36:	fb12 f205 	smulbb	r2, r2, r5
 8023d3a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023d3e:	fb01 2100 	mla	r1, r1, r0, r2
 8023d42:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023d46:	10da      	asrs	r2, r3, #3
 8023d48:	fa5f fc8c 	uxtb.w	ip, ip
 8023d4c:	00db      	lsls	r3, r3, #3
 8023d4e:	fb1c fc05 	smulbb	ip, ip, r5
 8023d52:	b2db      	uxtb	r3, r3
 8023d54:	b289      	uxth	r1, r1
 8023d56:	fb03 c300 	mla	r3, r3, r0, ip
 8023d5a:	fa1f fc83 	uxth.w	ip, r3
 8023d5e:	1c4b      	adds	r3, r1, #1
 8023d60:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023d64:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023d68:	fb1e fe05 	smulbb	lr, lr, r5
 8023d6c:	f10c 0301 	add.w	r3, ip, #1
 8023d70:	fb02 e200 	mla	r2, r2, r0, lr
 8023d74:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023d78:	b292      	uxth	r2, r2
 8023d7a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023d7e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023d82:	430b      	orrs	r3, r1
 8023d84:	1c51      	adds	r1, r2, #1
 8023d86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023d8a:	0952      	lsrs	r2, r2, #5
 8023d8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023d90:	4313      	orrs	r3, r2
 8023d92:	803b      	strh	r3, [r7, #0]
 8023d94:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023d96:	441c      	add	r4, r3
 8023d98:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023d9a:	441e      	add	r6, r3
 8023d9c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023d9e:	3b01      	subs	r3, #1
 8023da0:	3702      	adds	r7, #2
 8023da2:	9318      	str	r3, [sp, #96]	@ 0x60
 8023da4:	e698      	b.n	8023ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023da6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023da8:	441c      	add	r4, r3
 8023daa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023dac:	441e      	add	r6, r3
 8023dae:	9b07      	ldr	r3, [sp, #28]
 8023db0:	3b01      	subs	r3, #1
 8023db2:	9307      	str	r3, [sp, #28]
 8023db4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023db6:	3302      	adds	r3, #2
 8023db8:	930a      	str	r3, [sp, #40]	@ 0x28
 8023dba:	e66d      	b.n	8023a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023dbc:	d023      	beq.n	8023e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023dbe:	9b07      	ldr	r3, [sp, #28]
 8023dc0:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8023dc2:	3b01      	subs	r3, #1
 8023dc4:	fb00 4003 	mla	r0, r0, r3, r4
 8023dc8:	1400      	asrs	r0, r0, #16
 8023dca:	f53f ae82 	bmi.w	8023ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023dce:	3901      	subs	r1, #1
 8023dd0:	4288      	cmp	r0, r1
 8023dd2:	f6bf ae7e 	bge.w	8023ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023dd6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8023dd8:	fb01 6303 	mla	r3, r1, r3, r6
 8023ddc:	141b      	asrs	r3, r3, #16
 8023dde:	f53f ae78 	bmi.w	8023ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023de2:	3a01      	subs	r2, #1
 8023de4:	4293      	cmp	r3, r2
 8023de6:	f6bf ae74 	bge.w	8023ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023dea:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023dee:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8023df2:	f1bb 0f00 	cmp.w	fp, #0
 8023df6:	dc6c      	bgt.n	8023ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023df8:	9b07      	ldr	r3, [sp, #28]
 8023dfa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023dfe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023e00:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023e04:	930a      	str	r3, [sp, #40]	@ 0x28
 8023e06:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023e08:	2b00      	cmp	r3, #0
 8023e0a:	f340 81b3 	ble.w	8024174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023e0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023e12:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023e16:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023e1a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023e1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023e20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023e24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023e28:	eef0 6a62 	vmov.f32	s13, s5
 8023e2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023e30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023e38:	ee16 4a90 	vmov	r4, s13
 8023e3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023e40:	eef0 6a43 	vmov.f32	s13, s6
 8023e44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023e48:	ee12 2a90 	vmov	r2, s5
 8023e4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023e50:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e54:	ee13 2a10 	vmov	r2, s6
 8023e58:	9329      	str	r3, [sp, #164]	@ 0xa4
 8023e5a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023e5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e60:	932a      	str	r3, [sp, #168]	@ 0xa8
 8023e62:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023e64:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8023e66:	3b01      	subs	r3, #1
 8023e68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e6c:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023e6e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023e70:	bf08      	it	eq
 8023e72:	4613      	moveq	r3, r2
 8023e74:	ee16 6a90 	vmov	r6, s13
 8023e78:	9307      	str	r3, [sp, #28]
 8023e7a:	eeb0 3a67 	vmov.f32	s6, s15
 8023e7e:	eef0 2a47 	vmov.f32	s5, s14
 8023e82:	e5fb      	b.n	8023a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023e84:	2900      	cmp	r1, #0
 8023e86:	f43f ae6b 	beq.w	8023b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023e8a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023e8e:	9308      	str	r3, [sp, #32]
 8023e90:	0e1b      	lsrs	r3, r3, #24
 8023e92:	9311      	str	r3, [sp, #68]	@ 0x44
 8023e94:	e664      	b.n	8023b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023e96:	f112 0801 	adds.w	r8, r2, #1
 8023e9a:	f53f af7b 	bmi.w	8023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023e9e:	4543      	cmp	r3, r8
 8023ea0:	f6ff af78 	blt.w	8023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ea4:	f11c 0801 	adds.w	r8, ip, #1
 8023ea8:	f53f af74 	bmi.w	8023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023eac:	45c6      	cmp	lr, r8
 8023eae:	f6ff af71 	blt.w	8023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023eb2:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8023eb4:	9201      	str	r2, [sp, #4]
 8023eb6:	fa0f f28e 	sxth.w	r2, lr
 8023eba:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023ebe:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023ec2:	9200      	str	r2, [sp, #0]
 8023ec4:	b21b      	sxth	r3, r3
 8023ec6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8023ec8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8023eca:	4639      	mov	r1, r7
 8023ecc:	f7ff fc79 	bl	80237c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023ed0:	e760      	b.n	8023d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ed2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023ed4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023ed6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023eda:	1427      	asrs	r7, r4, #16
 8023edc:	1433      	asrs	r3, r6, #16
 8023ede:	fb01 7303 	mla	r3, r1, r3, r7
 8023ee2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023ee6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023eea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023eee:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023ef2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023ef6:	2a00      	cmp	r2, #0
 8023ef8:	f000 8133 	beq.w	8024162 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023efc:	687d      	ldr	r5, [r7, #4]
 8023efe:	950e      	str	r5, [sp, #56]	@ 0x38
 8023f00:	0e2d      	lsrs	r5, r5, #24
 8023f02:	9515      	str	r5, [sp, #84]	@ 0x54
 8023f04:	b178      	cbz	r0, 8023f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023f06:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8023f0a:	3901      	subs	r1, #1
 8023f0c:	0089      	lsls	r1, r1, #2
 8023f0e:	3104      	adds	r1, #4
 8023f10:	eb07 0e01 	add.w	lr, r7, r1
 8023f14:	5879      	ldr	r1, [r7, r1]
 8023f16:	9109      	str	r1, [sp, #36]	@ 0x24
 8023f18:	0e09      	lsrs	r1, r1, #24
 8023f1a:	9112      	str	r1, [sp, #72]	@ 0x48
 8023f1c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023f20:	910f      	str	r1, [sp, #60]	@ 0x3c
 8023f22:	0e09      	lsrs	r1, r1, #24
 8023f24:	9116      	str	r1, [sp, #88]	@ 0x58
 8023f26:	b292      	uxth	r2, r2
 8023f28:	b280      	uxth	r0, r0
 8023f2a:	fb02 f800 	mul.w	r8, r2, r0
 8023f2e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023f32:	0112      	lsls	r2, r2, #4
 8023f34:	eba2 0e08 	sub.w	lr, r2, r8
 8023f38:	b280      	uxth	r0, r0
 8023f3a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023f3e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8023f40:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023f42:	fa1f fe8e 	uxth.w	lr, lr
 8023f46:	1a12      	subs	r2, r2, r0
 8023f48:	b292      	uxth	r2, r2
 8023f4a:	fb0e f101 	mul.w	r1, lr, r1
 8023f4e:	fb02 110c 	mla	r1, r2, ip, r1
 8023f52:	fb00 1105 	mla	r1, r0, r5, r1
 8023f56:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8023f58:	fb08 1105 	mla	r1, r8, r5, r1
 8023f5c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023f60:	2900      	cmp	r1, #0
 8023f62:	f000 80f5 	beq.w	8024150 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023f66:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023f6a:	d019      	beq.n	8023fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023f6c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023f70:	fb0c fa0a 	mul.w	sl, ip, sl
 8023f74:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023f78:	fb0c fc03 	mul.w	ip, ip, r3
 8023f7c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023f80:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023f84:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023f88:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023f8c:	4453      	add	r3, sl
 8023f8e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023f92:	0a1b      	lsrs	r3, r3, #8
 8023f94:	0a3f      	lsrs	r7, r7, #8
 8023f96:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023f9a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023f9e:	433b      	orrs	r3, r7
 8023fa0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023fa2:	2dff      	cmp	r5, #255	@ 0xff
 8023fa4:	d020      	beq.n	8023fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023fa6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023fa8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023fac:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023fae:	436f      	muls	r7, r5
 8023fb0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023fb2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023fb6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023fb8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023fbc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023fc0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023fc4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023fc8:	44bc      	add	ip, r7
 8023fca:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023fce:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023fd2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023fde:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023fe2:	ea4c 050a 	orr.w	r5, ip, sl
 8023fe6:	950e      	str	r5, [sp, #56]	@ 0x38
 8023fe8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023fea:	2dff      	cmp	r5, #255	@ 0xff
 8023fec:	d020      	beq.n	8024030 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023fee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023ff0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023ff4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023ff6:	436f      	muls	r7, r5
 8023ff8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023ffa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023ffe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024000:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024004:	fb05 fa0a 	mul.w	sl, r5, sl
 8024008:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802400c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024010:	44bc      	add	ip, r7
 8024012:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024016:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802401a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802401e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024022:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024026:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802402a:	ea4c 050a 	orr.w	r5, ip, sl
 802402e:	9509      	str	r5, [sp, #36]	@ 0x24
 8024030:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8024032:	2dff      	cmp	r5, #255	@ 0xff
 8024034:	d020      	beq.n	8024078 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8024036:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024038:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802403c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802403e:	436f      	muls	r7, r5
 8024040:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024042:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024046:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8024048:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802404c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024050:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024054:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024058:	44bc      	add	ip, r7
 802405a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802405e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024062:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024066:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802406a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802406e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024072:	ea4c 050a 	orr.w	r5, ip, sl
 8024076:	950f      	str	r5, [sp, #60]	@ 0x3c
 8024078:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802407a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802407e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024080:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024084:	fb0e f707 	mul.w	r7, lr, r7
 8024088:	fb02 770c 	mla	r7, r2, ip, r7
 802408c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024090:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024092:	fb00 770c 	mla	r7, r0, ip, r7
 8024096:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802409a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802409c:	fb08 770c 	mla	r7, r8, ip, r7
 80240a0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80240a4:	fb0e fe0c 	mul.w	lr, lr, ip
 80240a8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80240ac:	fb02 e303 	mla	r3, r2, r3, lr
 80240b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80240b2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80240b4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80240b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80240ba:	fb00 330a 	mla	r3, r0, sl, r3
 80240be:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80240c2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80240c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80240c8:	f8b9 0000 	ldrh.w	r0, [r9]
 80240cc:	4359      	muls	r1, r3
 80240ce:	0a3f      	lsrs	r7, r7, #8
 80240d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240d4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80240d8:	1c4b      	adds	r3, r1, #1
 80240da:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80240de:	ea47 070c 	orr.w	r7, r7, ip
 80240e2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80240e6:	1202      	asrs	r2, r0, #8
 80240e8:	0c3b      	lsrs	r3, r7, #16
 80240ea:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80240ee:	b2c9      	uxtb	r1, r1
 80240f0:	fb13 f305 	smulbb	r3, r3, r5
 80240f4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80240f8:	fb02 3201 	mla	r2, r2, r1, r3
 80240fc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024100:	10c3      	asrs	r3, r0, #3
 8024102:	b2ff      	uxtb	r7, r7
 8024104:	00c0      	lsls	r0, r0, #3
 8024106:	b2c0      	uxtb	r0, r0
 8024108:	fb17 f705 	smulbb	r7, r7, r5
 802410c:	fb00 7001 	mla	r0, r0, r1, r7
 8024110:	b292      	uxth	r2, r2
 8024112:	fb1c fc05 	smulbb	ip, ip, r5
 8024116:	b280      	uxth	r0, r0
 8024118:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802411c:	fb03 c301 	mla	r3, r3, r1, ip
 8024120:	1c51      	adds	r1, r2, #1
 8024122:	f100 0c01 	add.w	ip, r0, #1
 8024126:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802412a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802412e:	b29b      	uxth	r3, r3
 8024130:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024134:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8024138:	ea4c 0202 	orr.w	r2, ip, r2
 802413c:	f103 0c01 	add.w	ip, r3, #1
 8024140:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024144:	095b      	lsrs	r3, r3, #5
 8024146:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802414a:	431a      	orrs	r2, r3
 802414c:	f8a9 2000 	strh.w	r2, [r9]
 8024150:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8024152:	441c      	add	r4, r3
 8024154:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8024156:	f109 0902 	add.w	r9, r9, #2
 802415a:	441e      	add	r6, r3
 802415c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024160:	e647      	b.n	8023df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024162:	2800      	cmp	r0, #0
 8024164:	f43f aedf 	beq.w	8023f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024168:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802416c:	9109      	str	r1, [sp, #36]	@ 0x24
 802416e:	0e09      	lsrs	r1, r1, #24
 8024170:	9112      	str	r1, [sp, #72]	@ 0x48
 8024172:	e6d8      	b.n	8023f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024174:	b01d      	add	sp, #116	@ 0x74
 8024176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802417a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802417a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802417e:	b085      	sub	sp, #20
 8024180:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8024184:	9102      	str	r1, [sp, #8]
 8024186:	2c00      	cmp	r4, #0
 8024188:	fb04 7103 	mla	r1, r4, r3, r7
 802418c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8024190:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8024194:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8024198:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802419c:	f2c0 810c 	blt.w	80243b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80241a0:	45a6      	cmp	lr, r4
 80241a2:	f340 8109 	ble.w	80243b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80241a6:	2f00      	cmp	r7, #0
 80241a8:	f2c0 8104 	blt.w	80243b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80241ac:	42bb      	cmp	r3, r7
 80241ae:	f340 8101 	ble.w	80243b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80241b2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80241b6:	1c7a      	adds	r2, r7, #1
 80241b8:	f100 8101 	bmi.w	80243be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80241bc:	4293      	cmp	r3, r2
 80241be:	f340 80fe 	ble.w	80243be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80241c2:	2e00      	cmp	r6, #0
 80241c4:	f000 80fd 	beq.w	80243c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80241c8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80241cc:	3401      	adds	r4, #1
 80241ce:	f100 80fc 	bmi.w	80243ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80241d2:	45a6      	cmp	lr, r4
 80241d4:	f340 80f9 	ble.w	80243ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80241d8:	2800      	cmp	r0, #0
 80241da:	f000 80f9 	beq.w	80243d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80241de:	2f00      	cmp	r7, #0
 80241e0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80241e4:	f2c0 80ef 	blt.w	80243c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80241e8:	42bb      	cmp	r3, r7
 80241ea:	f340 80ec 	ble.w	80243c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80241ee:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80241f2:	3701      	adds	r7, #1
 80241f4:	f100 80ef 	bmi.w	80243d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80241f8:	42bb      	cmp	r3, r7
 80241fa:	f340 80ec 	ble.w	80243d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80241fe:	2e00      	cmp	r6, #0
 8024200:	f000 80eb 	beq.w	80243da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024204:	6852      	ldr	r2, [r2, #4]
 8024206:	b2b6      	uxth	r6, r6
 8024208:	b280      	uxth	r0, r0
 802420a:	fb00 fe06 	mul.w	lr, r0, r6
 802420e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024212:	0136      	lsls	r6, r6, #4
 8024214:	eba6 070e 	sub.w	r7, r6, lr
 8024218:	b280      	uxth	r0, r0
 802421a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802421e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024222:	b2bf      	uxth	r7, r7
 8024224:	1a1b      	subs	r3, r3, r0
 8024226:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802422a:	b29b      	uxth	r3, r3
 802422c:	fb07 f60a 	mul.w	r6, r7, sl
 8024230:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024234:	fb0b 6603 	mla	r6, fp, r3, r6
 8024238:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802423c:	fb00 6609 	mla	r6, r0, r9, r6
 8024240:	fb0e 6608 	mla	r6, lr, r8, r6
 8024244:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024248:	9600      	str	r6, [sp, #0]
 802424a:	2e00      	cmp	r6, #0
 802424c:	f000 80af 	beq.w	80243ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024250:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024254:	fb0b fc0c 	mul.w	ip, fp, ip
 8024258:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802425c:	fb0b f505 	mul.w	r5, fp, r5
 8024260:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024264:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8024268:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802426c:	44dc      	add	ip, fp
 802426e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024272:	9501      	str	r5, [sp, #4]
 8024274:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8024278:	9503      	str	r5, [sp, #12]
 802427a:	9d01      	ldr	r5, [sp, #4]
 802427c:	9e02      	ldr	r6, [sp, #8]
 802427e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8024282:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024286:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802428a:	fb0a fc0c 	mul.w	ip, sl, ip
 802428e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024292:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024296:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802429a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802429e:	4465      	add	r5, ip
 80242a0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80242a4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80242a8:	fb09 fc0c 	mul.w	ip, r9, ip
 80242ac:	fb09 f904 	mul.w	r9, r9, r4
 80242b0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80242b4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80242b8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80242bc:	fb08 f404 	mul.w	r4, r8, r4
 80242c0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80242c4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80242c8:	fb08 f802 	mul.w	r8, r8, r2
 80242cc:	fb0a fa01 	mul.w	sl, sl, r1
 80242d0:	0a22      	lsrs	r2, r4, #8
 80242d2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80242d6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80242da:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80242de:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80242e2:	4414      	add	r4, r2
 80242e4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80242e8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80242ec:	0a2d      	lsrs	r5, r5, #8
 80242ee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80242f2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80242f6:	9a03      	ldr	r2, [sp, #12]
 80242f8:	8836      	ldrh	r6, [r6, #0]
 80242fa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80242fe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8024302:	437d      	muls	r5, r7
 8024304:	4461      	add	r1, ip
 8024306:	0a24      	lsrs	r4, r4, #8
 8024308:	fb02 5503 	mla	r5, r2, r3, r5
 802430c:	0a09      	lsrs	r1, r1, #8
 802430e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8024312:	fb04 540e 	mla	r4, r4, lr, r5
 8024316:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802431a:	fb01 4100 	mla	r1, r1, r0, r4
 802431e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024322:	0a09      	lsrs	r1, r1, #8
 8024324:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024328:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802432c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024330:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8024334:	fb07 f70a 	mul.w	r7, r7, sl
 8024338:	fb03 7101 	mla	r1, r3, r1, r7
 802433c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024340:	9b00      	ldr	r3, [sp, #0]
 8024342:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8024346:	fb0e 1e08 	mla	lr, lr, r8, r1
 802434a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802434e:	fb00 e101 	mla	r1, r0, r1, lr
 8024352:	43da      	mvns	r2, r3
 8024354:	1233      	asrs	r3, r6, #8
 8024356:	b2d2      	uxtb	r2, r2
 8024358:	10f0      	asrs	r0, r6, #3
 802435a:	0a09      	lsrs	r1, r1, #8
 802435c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024360:	00f6      	lsls	r6, r6, #3
 8024362:	4353      	muls	r3, r2
 8024364:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024368:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802436c:	b2f6      	uxtb	r6, r6
 802436e:	4321      	orrs	r1, r4
 8024370:	4350      	muls	r0, r2
 8024372:	4356      	muls	r6, r2
 8024374:	1c5a      	adds	r2, r3, #1
 8024376:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802437a:	0c0b      	lsrs	r3, r1, #16
 802437c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024380:	1c42      	adds	r2, r0, #1
 8024382:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024386:	0a0a      	lsrs	r2, r1, #8
 8024388:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802438c:	021b      	lsls	r3, r3, #8
 802438e:	00d2      	lsls	r2, r2, #3
 8024390:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024394:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8024398:	4313      	orrs	r3, r2
 802439a:	1c72      	adds	r2, r6, #1
 802439c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80243a0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80243a4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80243a8:	4319      	orrs	r1, r3
 80243aa:	9b02      	ldr	r3, [sp, #8]
 80243ac:	8019      	strh	r1, [r3, #0]
 80243ae:	b005      	add	sp, #20
 80243b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80243b4:	2500      	movs	r5, #0
 80243b6:	e6fe      	b.n	80241b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80243b8:	2100      	movs	r1, #0
 80243ba:	460d      	mov	r5, r1
 80243bc:	e706      	b.n	80241cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80243be:	2100      	movs	r1, #0
 80243c0:	e704      	b.n	80241cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80243c2:	4631      	mov	r1, r6
 80243c4:	e702      	b.n	80241cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80243c6:	2400      	movs	r4, #0
 80243c8:	e713      	b.n	80241f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80243ca:	2200      	movs	r2, #0
 80243cc:	4614      	mov	r4, r2
 80243ce:	e71a      	b.n	8024206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80243d0:	4602      	mov	r2, r0
 80243d2:	4604      	mov	r4, r0
 80243d4:	e717      	b.n	8024206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80243d6:	2200      	movs	r2, #0
 80243d8:	e715      	b.n	8024206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80243da:	4632      	mov	r2, r6
 80243dc:	e713      	b.n	8024206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080243e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80243e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80243e4:	b09b      	sub	sp, #108	@ 0x6c
 80243e6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 80243ea:	9218      	str	r2, [sp, #96]	@ 0x60
 80243ec:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80243ee:	9116      	str	r1, [sp, #88]	@ 0x58
 80243f0:	9307      	str	r3, [sp, #28]
 80243f2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80243f6:	9019      	str	r0, [sp, #100]	@ 0x64
 80243f8:	6850      	ldr	r0, [r2, #4]
 80243fa:	6812      	ldr	r2, [r2, #0]
 80243fc:	fb00 1303 	mla	r3, r0, r3, r1
 8024400:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024404:	930a      	str	r3, [sp, #40]	@ 0x28
 8024406:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8024408:	681b      	ldr	r3, [r3, #0]
 802440a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802440c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802440e:	2b00      	cmp	r3, #0
 8024410:	dc03      	bgt.n	802441a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024412:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8024414:	2b00      	cmp	r3, #0
 8024416:	f340 8386 	ble.w	8024b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802441a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802441c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024420:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024424:	1e48      	subs	r0, r1, #1
 8024426:	1e57      	subs	r7, r2, #1
 8024428:	9b07      	ldr	r3, [sp, #28]
 802442a:	2b00      	cmp	r3, #0
 802442c:	f340 8166 	ble.w	80246fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024430:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024434:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024438:	d406      	bmi.n	8024448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802443a:	4584      	cmp	ip, r0
 802443c:	da04      	bge.n	8024448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802443e:	2b00      	cmp	r3, #0
 8024440:	db02      	blt.n	8024448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024442:	42bb      	cmp	r3, r7
 8024444:	f2c0 815b 	blt.w	80246fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024448:	f11c 0c01 	adds.w	ip, ip, #1
 802444c:	f100 814b 	bmi.w	80246e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024450:	4561      	cmp	r1, ip
 8024452:	f2c0 8148 	blt.w	80246e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024456:	3301      	adds	r3, #1
 8024458:	f100 8145 	bmi.w	80246e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802445c:	429a      	cmp	r2, r3
 802445e:	f2c0 8142 	blt.w	80246e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024462:	9b07      	ldr	r3, [sp, #28]
 8024464:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8024466:	9317      	str	r3, [sp, #92]	@ 0x5c
 8024468:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802446a:	2b00      	cmp	r3, #0
 802446c:	f340 8165 	ble.w	802473a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024470:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8024472:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8024474:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024478:	689b      	ldr	r3, [r3, #8]
 802447a:	1422      	asrs	r2, r4, #16
 802447c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024480:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024484:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024488:	f100 81d5 	bmi.w	8024836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802448c:	f103 38ff 	add.w	r8, r3, #4294967295
 8024490:	4542      	cmp	r2, r8
 8024492:	f280 81d0 	bge.w	8024836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024496:	f1bc 0f00 	cmp.w	ip, #0
 802449a:	f2c0 81cc 	blt.w	8024836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802449e:	f10e 38ff 	add.w	r8, lr, #4294967295
 80244a2:	45c4      	cmp	ip, r8
 80244a4:	f280 81c7 	bge.w	8024836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80244a8:	b21b      	sxth	r3, r3
 80244aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80244ae:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80244b0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80244b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80244b8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80244bc:	2900      	cmp	r1, #0
 80244be:	f000 8182 	beq.w	80247c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80244c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80244c6:	950b      	str	r5, [sp, #44]	@ 0x2c
 80244c8:	0e2d      	lsrs	r5, r5, #24
 80244ca:	9512      	str	r5, [sp, #72]	@ 0x48
 80244cc:	b180      	cbz	r0, 80244f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80244ce:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80244d2:	3b01      	subs	r3, #1
 80244d4:	009b      	lsls	r3, r3, #2
 80244d6:	3304      	adds	r3, #4
 80244d8:	eb08 0c03 	add.w	ip, r8, r3
 80244dc:	f858 3003 	ldr.w	r3, [r8, r3]
 80244e0:	9308      	str	r3, [sp, #32]
 80244e2:	0e1b      	lsrs	r3, r3, #24
 80244e4:	9310      	str	r3, [sp, #64]	@ 0x40
 80244e6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80244ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80244ec:	0e1b      	lsrs	r3, r3, #24
 80244ee:	9313      	str	r3, [sp, #76]	@ 0x4c
 80244f0:	b289      	uxth	r1, r1
 80244f2:	b280      	uxth	r0, r0
 80244f4:	fb01 f900 	mul.w	r9, r1, r0
 80244f8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80244fc:	0109      	lsls	r1, r1, #4
 80244fe:	eba1 0809 	sub.w	r8, r1, r9
 8024502:	b280      	uxth	r0, r0
 8024504:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8024508:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802450a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802450c:	fa1f f888 	uxth.w	r8, r8
 8024510:	1a09      	subs	r1, r1, r0
 8024512:	b289      	uxth	r1, r1
 8024514:	fb08 f303 	mul.w	r3, r8, r3
 8024518:	fb01 330e 	mla	r3, r1, lr, r3
 802451c:	fb00 3305 	mla	r3, r0, r5, r3
 8024520:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8024522:	fb09 3305 	mla	r3, r9, r5, r3
 8024526:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802452a:	2b00      	cmp	r3, #0
 802452c:	f000 80d2 	beq.w	80246d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024530:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8024534:	d01b      	beq.n	802456e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024536:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802453a:	fb0e fa0a 	mul.w	sl, lr, sl
 802453e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024542:	fb0e fe02 	mul.w	lr, lr, r2
 8024546:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802454a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802454e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024552:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8024556:	4452      	add	r2, sl
 8024558:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802455c:	0a12      	lsrs	r2, r2, #8
 802455e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024562:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8024566:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802456a:	ea42 020c 	orr.w	r2, r2, ip
 802456e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024570:	2dff      	cmp	r5, #255	@ 0xff
 8024572:	d021      	beq.n	80245b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024574:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024576:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802457a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802457c:	fb05 fb0b 	mul.w	fp, r5, fp
 8024580:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024582:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024586:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024588:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802458c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024590:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024594:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024598:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802459c:	44de      	add	lr, fp
 802459e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80245a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80245ae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80245b2:	ea4e 050a 	orr.w	r5, lr, sl
 80245b6:	950b      	str	r5, [sp, #44]	@ 0x2c
 80245b8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80245ba:	2dff      	cmp	r5, #255	@ 0xff
 80245bc:	d021      	beq.n	8024602 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80245be:	9d08      	ldr	r5, [sp, #32]
 80245c0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80245c4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80245c6:	fb05 fb0b 	mul.w	fp, r5, fp
 80245ca:	9d08      	ldr	r5, [sp, #32]
 80245cc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80245d0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80245d2:	fb05 fa0e 	mul.w	sl, r5, lr
 80245d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80245da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80245de:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80245e2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80245e6:	44de      	add	lr, fp
 80245e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80245ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80245f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80245fc:	ea4e 050a 	orr.w	r5, lr, sl
 8024600:	9508      	str	r5, [sp, #32]
 8024602:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8024604:	2dff      	cmp	r5, #255	@ 0xff
 8024606:	d021      	beq.n	802464c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024608:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802460a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802460e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8024610:	fb05 fb0b 	mul.w	fp, r5, fp
 8024614:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024616:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802461a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802461c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024620:	fb05 fa0a 	mul.w	sl, r5, sl
 8024624:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024628:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802462c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8024630:	44de      	add	lr, fp
 8024632:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024636:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802463a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802463e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024642:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024646:	ea4e 050a 	orr.w	r5, lr, sl
 802464a:	950c      	str	r5, [sp, #48]	@ 0x30
 802464c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802464e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024652:	9d08      	ldr	r5, [sp, #32]
 8024654:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8024658:	fb08 fc0c 	mul.w	ip, r8, ip
 802465c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024660:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8024664:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024666:	fb00 cc0e 	mla	ip, r0, lr, ip
 802466a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802466e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024670:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024674:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8024678:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802467c:	fb08 f80e 	mul.w	r8, r8, lr
 8024680:	fb01 8202 	mla	r2, r1, r2, r8
 8024684:	9908      	ldr	r1, [sp, #32]
 8024686:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802468a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802468c:	fb00 220a 	mla	r2, r0, sl, r2
 8024690:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8024694:	fb09 2900 	mla	r9, r9, r0, r2
 8024698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802469c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80246a0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80246a4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80246a8:	ea4c 0c09 	orr.w	ip, ip, r9
 80246ac:	2bff      	cmp	r3, #255	@ 0xff
 80246ae:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80246b2:	f040 8091 	bne.w	80247d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80246b6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80246ba:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 80246be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80246c2:	f022 0207 	bic.w	r2, r2, #7
 80246c6:	431a      	orrs	r2, r3
 80246c8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80246cc:	ea4c 0c02 	orr.w	ip, ip, r2
 80246d0:	f8a7 c000 	strh.w	ip, [r7]
 80246d4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80246d6:	441c      	add	r4, r3
 80246d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80246da:	441e      	add	r6, r3
 80246dc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80246de:	3b01      	subs	r3, #1
 80246e0:	3702      	adds	r7, #2
 80246e2:	9317      	str	r3, [sp, #92]	@ 0x5c
 80246e4:	e6c0      	b.n	8024468 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80246e6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80246e8:	441c      	add	r4, r3
 80246ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80246ec:	441e      	add	r6, r3
 80246ee:	9b07      	ldr	r3, [sp, #28]
 80246f0:	3b01      	subs	r3, #1
 80246f2:	9307      	str	r3, [sp, #28]
 80246f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80246f6:	3302      	adds	r3, #2
 80246f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80246fa:	e695      	b.n	8024428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80246fc:	d024      	beq.n	8024748 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80246fe:	9b07      	ldr	r3, [sp, #28]
 8024700:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8024702:	3b01      	subs	r3, #1
 8024704:	fb00 4003 	mla	r0, r0, r3, r4
 8024708:	1400      	asrs	r0, r0, #16
 802470a:	f53f aeaa 	bmi.w	8024462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802470e:	3901      	subs	r1, #1
 8024710:	4288      	cmp	r0, r1
 8024712:	f6bf aea6 	bge.w	8024462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024716:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8024718:	fb01 6303 	mla	r3, r1, r3, r6
 802471c:	141b      	asrs	r3, r3, #16
 802471e:	f53f aea0 	bmi.w	8024462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024722:	3a01      	subs	r2, #1
 8024724:	4293      	cmp	r3, r2
 8024726:	f6bf ae9c 	bge.w	8024462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802472a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802472e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8024732:	f1bb 0f00 	cmp.w	fp, #0
 8024736:	f300 809a 	bgt.w	802486e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802473a:	9b07      	ldr	r3, [sp, #28]
 802473c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024740:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024742:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024746:	930a      	str	r3, [sp, #40]	@ 0x28
 8024748:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802474a:	2b00      	cmp	r3, #0
 802474c:	f340 81eb 	ble.w	8024b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024750:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024754:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024758:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802475c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802475e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024762:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024766:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802476a:	eef0 6a62 	vmov.f32	s13, s5
 802476e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024772:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024776:	ee77 2a62 	vsub.f32	s5, s14, s5
 802477a:	ee16 4a90 	vmov	r4, s13
 802477e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024782:	eef0 6a43 	vmov.f32	s13, s6
 8024786:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802478a:	ee12 2a90 	vmov	r2, s5
 802478e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024792:	fb92 f3f3 	sdiv	r3, r2, r3
 8024796:	ee13 2a10 	vmov	r2, s6
 802479a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802479c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802479e:	fb92 f3f3 	sdiv	r3, r2, r3
 80247a2:	9328      	str	r3, [sp, #160]	@ 0xa0
 80247a4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80247a6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80247a8:	3b01      	subs	r3, #1
 80247aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247ae:	9316      	str	r3, [sp, #88]	@ 0x58
 80247b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80247b2:	bf08      	it	eq
 80247b4:	4613      	moveq	r3, r2
 80247b6:	ee16 6a90 	vmov	r6, s13
 80247ba:	9307      	str	r3, [sp, #28]
 80247bc:	eeb0 3a67 	vmov.f32	s6, s15
 80247c0:	eef0 2a47 	vmov.f32	s5, s14
 80247c4:	e622      	b.n	802440c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80247c6:	2800      	cmp	r0, #0
 80247c8:	f43f ae92 	beq.w	80244f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80247cc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80247d0:	9308      	str	r3, [sp, #32]
 80247d2:	0e1b      	lsrs	r3, r3, #24
 80247d4:	9310      	str	r3, [sp, #64]	@ 0x40
 80247d6:	e68b      	b.n	80244f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80247d8:	8839      	ldrh	r1, [r7, #0]
 80247da:	4dd4      	ldr	r5, [pc, #848]	@ (8024b2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80247dc:	43db      	mvns	r3, r3
 80247de:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80247e2:	fa5f f883 	uxtb.w	r8, r3
 80247e6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80247ea:	fb0e fe08 	mul.w	lr, lr, r8
 80247ee:	10c8      	asrs	r0, r1, #3
 80247f0:	00cb      	lsls	r3, r1, #3
 80247f2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80247f6:	f10e 0101 	add.w	r1, lr, #1
 80247fa:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80247fe:	fb00 f008 	mul.w	r0, r0, r8
 8024802:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024806:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802480a:	f100 0e01 	add.w	lr, r0, #1
 802480e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024812:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024816:	b2db      	uxtb	r3, r3
 8024818:	b2c9      	uxtb	r1, r1
 802481a:	00d2      	lsls	r2, r2, #3
 802481c:	fb03 f308 	mul.w	r3, r3, r8
 8024820:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024824:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024828:	430a      	orrs	r2, r1
 802482a:	1c59      	adds	r1, r3, #1
 802482c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024830:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024834:	e748      	b.n	80246c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024836:	f112 0801 	adds.w	r8, r2, #1
 802483a:	f53f af4b 	bmi.w	80246d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802483e:	4543      	cmp	r3, r8
 8024840:	f6ff af48 	blt.w	80246d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024844:	f11c 0801 	adds.w	r8, ip, #1
 8024848:	f53f af44 	bmi.w	80246d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802484c:	45c6      	cmp	lr, r8
 802484e:	f6ff af41 	blt.w	80246d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024852:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024856:	fa0f f28e 	sxth.w	r2, lr
 802485a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802485e:	9200      	str	r2, [sp, #0]
 8024860:	b21b      	sxth	r3, r3
 8024862:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024864:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8024866:	4639      	mov	r1, r7
 8024868:	f7ff fc87 	bl	802417a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802486c:	e732      	b.n	80246d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802486e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8024870:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024872:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8024876:	1421      	asrs	r1, r4, #16
 8024878:	1433      	asrs	r3, r6, #16
 802487a:	fb07 1303 	mla	r3, r7, r3, r1
 802487e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024880:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024884:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024888:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802488c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024890:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024894:	2a00      	cmp	r2, #0
 8024896:	f000 8107 	beq.w	8024aa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802489a:	684d      	ldr	r5, [r1, #4]
 802489c:	950d      	str	r5, [sp, #52]	@ 0x34
 802489e:	0e2d      	lsrs	r5, r5, #24
 80248a0:	9514      	str	r5, [sp, #80]	@ 0x50
 80248a2:	b178      	cbz	r0, 80248c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80248a4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80248a8:	3f01      	subs	r7, #1
 80248aa:	00bf      	lsls	r7, r7, #2
 80248ac:	3704      	adds	r7, #4
 80248ae:	eb01 0e07 	add.w	lr, r1, r7
 80248b2:	59c9      	ldr	r1, [r1, r7]
 80248b4:	9109      	str	r1, [sp, #36]	@ 0x24
 80248b6:	0e09      	lsrs	r1, r1, #24
 80248b8:	9111      	str	r1, [sp, #68]	@ 0x44
 80248ba:	f8de 1004 	ldr.w	r1, [lr, #4]
 80248be:	910e      	str	r1, [sp, #56]	@ 0x38
 80248c0:	0e09      	lsrs	r1, r1, #24
 80248c2:	9115      	str	r1, [sp, #84]	@ 0x54
 80248c4:	b292      	uxth	r2, r2
 80248c6:	b280      	uxth	r0, r0
 80248c8:	fb02 f900 	mul.w	r9, r2, r0
 80248cc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80248d0:	0112      	lsls	r2, r2, #4
 80248d2:	eba2 0e09 	sub.w	lr, r2, r9
 80248d6:	b280      	uxth	r0, r0
 80248d8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80248dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80248de:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80248e0:	fa1f fe8e 	uxth.w	lr, lr
 80248e4:	1a09      	subs	r1, r1, r0
 80248e6:	b289      	uxth	r1, r1
 80248e8:	fb0e f202 	mul.w	r2, lr, r2
 80248ec:	fb01 220c 	mla	r2, r1, ip, r2
 80248f0:	fb00 2205 	mla	r2, r0, r5, r2
 80248f4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80248f6:	fb09 2205 	mla	r2, r9, r5, r2
 80248fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80248fe:	2a00      	cmp	r2, #0
 8024900:	f000 80c9 	beq.w	8024a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024904:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8024908:	d019      	beq.n	802493e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802490a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802490e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024912:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024916:	fb0c fc03 	mul.w	ip, ip, r3
 802491a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802491e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024922:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024926:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802492a:	4453      	add	r3, sl
 802492c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024930:	0a1b      	lsrs	r3, r3, #8
 8024932:	0a3f      	lsrs	r7, r7, #8
 8024934:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024938:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802493c:	433b      	orrs	r3, r7
 802493e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024940:	2dff      	cmp	r5, #255	@ 0xff
 8024942:	d020      	beq.n	8024986 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024944:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024946:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802494a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802494c:	436f      	muls	r7, r5
 802494e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024950:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024954:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024956:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802495a:	fb05 fa0a 	mul.w	sl, r5, sl
 802495e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024962:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024966:	44bc      	add	ip, r7
 8024968:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802496c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024970:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024974:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024978:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802497c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024980:	ea4c 050a 	orr.w	r5, ip, sl
 8024984:	950d      	str	r5, [sp, #52]	@ 0x34
 8024986:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024988:	2dff      	cmp	r5, #255	@ 0xff
 802498a:	d020      	beq.n	80249ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802498c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802498e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024992:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024994:	436f      	muls	r7, r5
 8024996:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024998:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802499c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802499e:	fb05 fa0c 	mul.w	sl, r5, ip
 80249a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80249a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80249aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80249ae:	44bc      	add	ip, r7
 80249b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80249b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80249b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80249c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80249c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80249c8:	ea4c 050a 	orr.w	r5, ip, sl
 80249cc:	9509      	str	r5, [sp, #36]	@ 0x24
 80249ce:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80249d0:	2dff      	cmp	r5, #255	@ 0xff
 80249d2:	d020      	beq.n	8024a16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80249d4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80249d6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80249da:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80249dc:	436f      	muls	r7, r5
 80249de:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80249e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80249e4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80249e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80249ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80249ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80249f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80249f6:	44bc      	add	ip, r7
 80249f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80249fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024a00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024a0c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024a10:	ea4c 050a 	orr.w	r5, ip, sl
 8024a14:	950e      	str	r5, [sp, #56]	@ 0x38
 8024a16:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024a18:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024a1c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024a1e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024a22:	fb0e f707 	mul.w	r7, lr, r7
 8024a26:	fb01 770c 	mla	r7, r1, ip, r7
 8024a2a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024a2e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024a30:	fb00 770c 	mla	r7, r0, ip, r7
 8024a34:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024a38:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024a3a:	fb09 770c 	mla	r7, r9, ip, r7
 8024a3e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024a42:	fb0e fe0c 	mul.w	lr, lr, ip
 8024a46:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024a4a:	fb01 e303 	mla	r3, r1, r3, lr
 8024a4e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024a50:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8024a54:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8024a56:	fb00 330a 	mla	r3, r0, sl, r3
 8024a5a:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8024a5e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024a62:	0a3f      	lsrs	r7, r7, #8
 8024a64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a68:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8024a6c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024a70:	ea47 070c 	orr.w	r7, r7, ip
 8024a74:	2aff      	cmp	r2, #255	@ 0xff
 8024a76:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024a7a:	d11e      	bne.n	8024aba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024a7c:	097a      	lsrs	r2, r7, #5
 8024a7e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8024a82:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024a86:	f023 0307 	bic.w	r3, r3, #7
 8024a8a:	4313      	orrs	r3, r2
 8024a8c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024a90:	431f      	orrs	r7, r3
 8024a92:	f8a8 7000 	strh.w	r7, [r8]
 8024a96:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8024a98:	441c      	add	r4, r3
 8024a9a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024a9c:	f108 0802 	add.w	r8, r8, #2
 8024aa0:	441e      	add	r6, r3
 8024aa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024aa6:	e644      	b.n	8024732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024aa8:	2800      	cmp	r0, #0
 8024aaa:	f43f af0b 	beq.w	80248c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024aae:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024ab2:	9109      	str	r1, [sp, #36]	@ 0x24
 8024ab4:	0e09      	lsrs	r1, r1, #24
 8024ab6:	9111      	str	r1, [sp, #68]	@ 0x44
 8024ab8:	e704      	b.n	80248c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024aba:	f8b8 1000 	ldrh.w	r1, [r8]
 8024abe:	43d2      	mvns	r2, r2
 8024ac0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024ac4:	fa5f fe82 	uxtb.w	lr, r2
 8024ac8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024acc:	fb0c fc0e 	mul.w	ip, ip, lr
 8024ad0:	10c8      	asrs	r0, r1, #3
 8024ad2:	00ca      	lsls	r2, r1, #3
 8024ad4:	f10c 0101 	add.w	r1, ip, #1
 8024ad8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024adc:	0c39      	lsrs	r1, r7, #16
 8024ade:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024ae2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024ae6:	4911      	ldr	r1, [pc, #68]	@ (8024b2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024ae8:	fb00 f00e 	mul.w	r0, r0, lr
 8024aec:	fa5f fc8c 	uxtb.w	ip, ip
 8024af0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024af4:	b2d2      	uxtb	r2, r2
 8024af6:	1c41      	adds	r1, r0, #1
 8024af8:	fb02 f20e 	mul.w	r2, r2, lr
 8024afc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024b00:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024b04:	1c51      	adds	r1, r2, #1
 8024b06:	00c0      	lsls	r0, r0, #3
 8024b08:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024b0c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024b10:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024b14:	ea4c 0c00 	orr.w	ip, ip, r0
 8024b18:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024b1c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024b20:	f8a8 c000 	strh.w	ip, [r8]
 8024b24:	e7b7      	b.n	8024a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024b26:	b01b      	add	sp, #108	@ 0x6c
 8024b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b2c:	fffff800 	.word	0xfffff800

08024b30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024b34:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8024b38:	2d00      	cmp	r5, #0
 8024b3a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024b3e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8024b42:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8024b46:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8024b4a:	fb05 0e03 	mla	lr, r5, r3, r0
 8024b4e:	f2c0 808c 	blt.w	8024c6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024b52:	45a9      	cmp	r9, r5
 8024b54:	f340 8089 	ble.w	8024c6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024b58:	2800      	cmp	r0, #0
 8024b5a:	f2c0 8084 	blt.w	8024c66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024b5e:	4580      	cmp	r8, r0
 8024b60:	f340 8081 	ble.w	8024c66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024b64:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024b68:	f01e 0f01 	tst.w	lr, #1
 8024b6c:	5d16      	ldrb	r6, [r2, r4]
 8024b6e:	bf0c      	ite	eq
 8024b70:	f006 060f 	andeq.w	r6, r6, #15
 8024b74:	1136      	asrne	r6, r6, #4
 8024b76:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024b7a:	b2f6      	uxtb	r6, r6
 8024b7c:	1c44      	adds	r4, r0, #1
 8024b7e:	d477      	bmi.n	8024c70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024b80:	45a0      	cmp	r8, r4
 8024b82:	dd75      	ble.n	8024c70 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024b84:	2f00      	cmp	r7, #0
 8024b86:	d075      	beq.n	8024c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024b88:	f10e 0a01 	add.w	sl, lr, #1
 8024b8c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024b90:	f01a 0f01 	tst.w	sl, #1
 8024b94:	5d14      	ldrb	r4, [r2, r4]
 8024b96:	bf0c      	ite	eq
 8024b98:	f004 040f 	andeq.w	r4, r4, #15
 8024b9c:	1124      	asrne	r4, r4, #4
 8024b9e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024ba2:	b2e4      	uxtb	r4, r4
 8024ba4:	3501      	adds	r5, #1
 8024ba6:	d469      	bmi.n	8024c7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024ba8:	45a9      	cmp	r9, r5
 8024baa:	dd67      	ble.n	8024c7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024bac:	f1bc 0f00 	cmp.w	ip, #0
 8024bb0:	d067      	beq.n	8024c82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024bb2:	2800      	cmp	r0, #0
 8024bb4:	db60      	blt.n	8024c78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024bb6:	4580      	cmp	r8, r0
 8024bb8:	dd5e      	ble.n	8024c78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024bba:	eb03 090e 	add.w	r9, r3, lr
 8024bbe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024bc2:	f019 0f01 	tst.w	r9, #1
 8024bc6:	5d55      	ldrb	r5, [r2, r5]
 8024bc8:	bf0c      	ite	eq
 8024bca:	f005 050f 	andeq.w	r5, r5, #15
 8024bce:	112d      	asrne	r5, r5, #4
 8024bd0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024bd4:	b2ed      	uxtb	r5, r5
 8024bd6:	3001      	adds	r0, #1
 8024bd8:	d456      	bmi.n	8024c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024bda:	4580      	cmp	r8, r0
 8024bdc:	dd54      	ble.n	8024c88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024bde:	2f00      	cmp	r7, #0
 8024be0:	d054      	beq.n	8024c8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024be2:	3301      	adds	r3, #1
 8024be4:	449e      	add	lr, r3
 8024be6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024bea:	f01e 0f01 	tst.w	lr, #1
 8024bee:	5cd0      	ldrb	r0, [r2, r3]
 8024bf0:	bf0c      	ite	eq
 8024bf2:	f000 000f 	andeq.w	r0, r0, #15
 8024bf6:	1100      	asrne	r0, r0, #4
 8024bf8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024bfc:	b2c3      	uxtb	r3, r0
 8024bfe:	b2ba      	uxth	r2, r7
 8024c00:	fa1f fc8c 	uxth.w	ip, ip
 8024c04:	fb02 f00c 	mul.w	r0, r2, ip
 8024c08:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024c0c:	0112      	lsls	r2, r2, #4
 8024c0e:	fa1f fc8c 	uxth.w	ip, ip
 8024c12:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8024c16:	1a12      	subs	r2, r2, r0
 8024c18:	eba7 070c 	sub.w	r7, r7, ip
 8024c1c:	b292      	uxth	r2, r2
 8024c1e:	b2bf      	uxth	r7, r7
 8024c20:	4362      	muls	r2, r4
 8024c22:	fb06 2207 	mla	r2, r6, r7, r2
 8024c26:	fb0c 2505 	mla	r5, ip, r5, r2
 8024c2a:	fb00 5303 	mla	r3, r0, r3, r5
 8024c2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024c32:	b1b3      	cbz	r3, 8024c62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024c34:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8024c38:	435a      	muls	r2, r3
 8024c3a:	1c53      	adds	r3, r2, #1
 8024c3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c40:	4a2d      	ldr	r2, [pc, #180]	@ (8024cf8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024c42:	121b      	asrs	r3, r3, #8
 8024c44:	6812      	ldr	r2, [r2, #0]
 8024c46:	2bff      	cmp	r3, #255	@ 0xff
 8024c48:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024c4c:	d120      	bne.n	8024c90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024c4e:	4b2b      	ldr	r3, [pc, #172]	@ (8024cfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024c50:	0950      	lsrs	r0, r2, #5
 8024c52:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024c56:	4033      	ands	r3, r6
 8024c58:	4318      	orrs	r0, r3
 8024c5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024c5e:	4302      	orrs	r2, r0
 8024c60:	800a      	strh	r2, [r1, #0]
 8024c62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024c66:	2600      	movs	r6, #0
 8024c68:	e788      	b.n	8024b7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024c6a:	2400      	movs	r4, #0
 8024c6c:	4626      	mov	r6, r4
 8024c6e:	e799      	b.n	8024ba4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024c70:	2400      	movs	r4, #0
 8024c72:	e797      	b.n	8024ba4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024c74:	463c      	mov	r4, r7
 8024c76:	e795      	b.n	8024ba4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024c78:	2500      	movs	r5, #0
 8024c7a:	e7ac      	b.n	8024bd6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024c7c:	2300      	movs	r3, #0
 8024c7e:	461d      	mov	r5, r3
 8024c80:	e7bd      	b.n	8024bfe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024c82:	4663      	mov	r3, ip
 8024c84:	4665      	mov	r5, ip
 8024c86:	e7ba      	b.n	8024bfe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024c88:	2300      	movs	r3, #0
 8024c8a:	e7b8      	b.n	8024bfe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024c8c:	463b      	mov	r3, r7
 8024c8e:	e7b6      	b.n	8024bfe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024c90:	880d      	ldrh	r5, [r1, #0]
 8024c92:	b29f      	uxth	r7, r3
 8024c94:	122c      	asrs	r4, r5, #8
 8024c96:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024c9a:	43db      	mvns	r3, r3
 8024c9c:	b2db      	uxtb	r3, r3
 8024c9e:	fb10 f007 	smulbb	r0, r0, r7
 8024ca2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024ca6:	fb04 0403 	mla	r4, r4, r3, r0
 8024caa:	b2f6      	uxtb	r6, r6
 8024cac:	10e8      	asrs	r0, r5, #3
 8024cae:	b2d2      	uxtb	r2, r2
 8024cb0:	00ed      	lsls	r5, r5, #3
 8024cb2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024cb6:	fb12 f207 	smulbb	r2, r2, r7
 8024cba:	fb16 f607 	smulbb	r6, r6, r7
 8024cbe:	b2ed      	uxtb	r5, r5
 8024cc0:	b2a4      	uxth	r4, r4
 8024cc2:	fb00 6603 	mla	r6, r0, r3, r6
 8024cc6:	fb05 2303 	mla	r3, r5, r3, r2
 8024cca:	b29a      	uxth	r2, r3
 8024ccc:	1c63      	adds	r3, r4, #1
 8024cce:	b2b0      	uxth	r0, r6
 8024cd0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024cd4:	1c53      	adds	r3, r2, #1
 8024cd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024cda:	1c42      	adds	r2, r0, #1
 8024cdc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ce0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024ce4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ce8:	0940      	lsrs	r0, r0, #5
 8024cea:	4323      	orrs	r3, r4
 8024cec:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024cf0:	4303      	orrs	r3, r0
 8024cf2:	800b      	strh	r3, [r1, #0]
 8024cf4:	e7b5      	b.n	8024c62 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024cf6:	bf00      	nop
 8024cf8:	20013f70 	.word	0x20013f70
 8024cfc:	00fff800 	.word	0x00fff800

08024d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d04:	b097      	sub	sp, #92	@ 0x5c
 8024d06:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8024d0a:	9214      	str	r2, [sp, #80]	@ 0x50
 8024d0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8024d0e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024d10:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024d14:	910d      	str	r1, [sp, #52]	@ 0x34
 8024d16:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024d18:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8024d1c:	9015      	str	r0, [sp, #84]	@ 0x54
 8024d1e:	6850      	ldr	r0, [r2, #4]
 8024d20:	6812      	ldr	r2, [r2, #0]
 8024d22:	fb00 1303 	mla	r3, r0, r3, r1
 8024d26:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024d2a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024d2c:	689b      	ldr	r3, [r3, #8]
 8024d2e:	3301      	adds	r3, #1
 8024d30:	f023 0301 	bic.w	r3, r3, #1
 8024d34:	930a      	str	r3, [sp, #40]	@ 0x28
 8024d36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024d38:	681f      	ldr	r7, [r3, #0]
 8024d3a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024d3c:	2b00      	cmp	r3, #0
 8024d3e:	dc03      	bgt.n	8024d48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024d40:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024d42:	2b00      	cmp	r3, #0
 8024d44:	f340 8287 	ble.w	8025256 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024d48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024d4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024d52:	1e48      	subs	r0, r1, #1
 8024d54:	f102 3cff 	add.w	ip, r2, #4294967295
 8024d58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024d5a:	2b00      	cmp	r3, #0
 8024d5c:	f340 80c4 	ble.w	8024ee8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024d60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024d64:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024d68:	d406      	bmi.n	8024d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024d6a:	4586      	cmp	lr, r0
 8024d6c:	da04      	bge.n	8024d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024d6e:	2b00      	cmp	r3, #0
 8024d70:	db02      	blt.n	8024d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024d72:	4563      	cmp	r3, ip
 8024d74:	f2c0 80b9 	blt.w	8024eea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024d78:	f11e 0e01 	adds.w	lr, lr, #1
 8024d7c:	f100 80aa 	bmi.w	8024ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024d80:	4571      	cmp	r1, lr
 8024d82:	f2c0 80a7 	blt.w	8024ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024d86:	3301      	adds	r3, #1
 8024d88:	f100 80a4 	bmi.w	8024ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024d8c:	429a      	cmp	r2, r3
 8024d8e:	f2c0 80a1 	blt.w	8024ed4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024d92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024d94:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8024d98:	930e      	str	r3, [sp, #56]	@ 0x38
 8024d9a:	46c8      	mov	r8, r9
 8024d9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024d9e:	2b00      	cmp	r3, #0
 8024da0:	f340 80c3 	ble.w	8024f2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024da4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024da6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024daa:	1423      	asrs	r3, r4, #16
 8024dac:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024db0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024db4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024db8:	f100 814d 	bmi.w	8025056 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024dbc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024dc0:	455b      	cmp	r3, fp
 8024dc2:	f280 8148 	bge.w	8025056 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024dc6:	2800      	cmp	r0, #0
 8024dc8:	f2c0 8145 	blt.w	8025056 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024dcc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024dd0:	4558      	cmp	r0, fp
 8024dd2:	f280 8140 	bge.w	8025056 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024dd6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8024dd8:	fb00 3305 	mla	r3, r0, r5, r3
 8024ddc:	0858      	lsrs	r0, r3, #1
 8024dde:	07dd      	lsls	r5, r3, #31
 8024de0:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024de4:	bf54      	ite	pl
 8024de6:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024dea:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024dee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024df2:	fa5f fc8c 	uxtb.w	ip, ip
 8024df6:	2a00      	cmp	r2, #0
 8024df8:	f000 80db 	beq.w	8024fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024dfc:	1c58      	adds	r0, r3, #1
 8024dfe:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024e02:	07c0      	lsls	r0, r0, #31
 8024e04:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024e08:	bf54      	ite	pl
 8024e0a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024e0e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024e12:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024e16:	fa5f f08e 	uxtb.w	r0, lr
 8024e1a:	9010      	str	r0, [sp, #64]	@ 0x40
 8024e1c:	b1c9      	cbz	r1, 8024e52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024e1e:	4453      	add	r3, sl
 8024e20:	0858      	lsrs	r0, r3, #1
 8024e22:	07dd      	lsls	r5, r3, #31
 8024e24:	5c38      	ldrb	r0, [r7, r0]
 8024e26:	bf54      	ite	pl
 8024e28:	f000 000f 	andpl.w	r0, r0, #15
 8024e2c:	1100      	asrmi	r0, r0, #4
 8024e2e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024e32:	3301      	adds	r3, #1
 8024e34:	b2c0      	uxtb	r0, r0
 8024e36:	900b      	str	r0, [sp, #44]	@ 0x2c
 8024e38:	0858      	lsrs	r0, r3, #1
 8024e3a:	07dd      	lsls	r5, r3, #31
 8024e3c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024e40:	bf54      	ite	pl
 8024e42:	f00e 030f 	andpl.w	r3, lr, #15
 8024e46:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024e4a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024e4e:	b2db      	uxtb	r3, r3
 8024e50:	9311      	str	r3, [sp, #68]	@ 0x44
 8024e52:	b292      	uxth	r2, r2
 8024e54:	b289      	uxth	r1, r1
 8024e56:	fb02 f301 	mul.w	r3, r2, r1
 8024e5a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024e5e:	0112      	lsls	r2, r2, #4
 8024e60:	b289      	uxth	r1, r1
 8024e62:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8024e66:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8024e68:	1ad2      	subs	r2, r2, r3
 8024e6a:	1a40      	subs	r0, r0, r1
 8024e6c:	b292      	uxth	r2, r2
 8024e6e:	436a      	muls	r2, r5
 8024e70:	b280      	uxth	r0, r0
 8024e72:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024e76:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024e78:	fb01 c102 	mla	r1, r1, r2, ip
 8024e7c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024e7e:	fb03 1302 	mla	r3, r3, r2, r1
 8024e82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e86:	b1db      	cbz	r3, 8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024e88:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024e8a:	4353      	muls	r3, r2
 8024e8c:	1c5a      	adds	r2, r3, #1
 8024e8e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024e92:	4ac6      	ldr	r2, [pc, #792]	@ (80251ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024e94:	121b      	asrs	r3, r3, #8
 8024e96:	6812      	ldr	r2, [r2, #0]
 8024e98:	2bff      	cmp	r3, #255	@ 0xff
 8024e9a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024e9e:	f040 8099 	bne.w	8024fd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024ea2:	0953      	lsrs	r3, r2, #5
 8024ea4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8024ea8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024eac:	f02c 0c07 	bic.w	ip, ip, #7
 8024eb0:	ea43 0c0c 	orr.w	ip, r3, ip
 8024eb4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024eb8:	ea4c 0202 	orr.w	r2, ip, r2
 8024ebc:	f8a8 2000 	strh.w	r2, [r8]
 8024ec0:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024ec2:	441c      	add	r4, r3
 8024ec4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024ec6:	441e      	add	r6, r3
 8024ec8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024eca:	3b01      	subs	r3, #1
 8024ecc:	f108 0802 	add.w	r8, r8, #2
 8024ed0:	930e      	str	r3, [sp, #56]	@ 0x38
 8024ed2:	e763      	b.n	8024d9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024ed4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024ed6:	441c      	add	r4, r3
 8024ed8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024eda:	441e      	add	r6, r3
 8024edc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024ede:	3b01      	subs	r3, #1
 8024ee0:	9309      	str	r3, [sp, #36]	@ 0x24
 8024ee2:	f109 0902 	add.w	r9, r9, #2
 8024ee6:	e737      	b.n	8024d58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024ee8:	d024      	beq.n	8024f34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024eea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024eec:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8024eee:	3b01      	subs	r3, #1
 8024ef0:	fb00 4003 	mla	r0, r0, r3, r4
 8024ef4:	1400      	asrs	r0, r0, #16
 8024ef6:	f53f af4c 	bmi.w	8024d92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024efa:	3901      	subs	r1, #1
 8024efc:	4288      	cmp	r0, r1
 8024efe:	f6bf af48 	bge.w	8024d92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024f02:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8024f04:	fb01 6303 	mla	r3, r1, r3, r6
 8024f08:	141b      	asrs	r3, r3, #16
 8024f0a:	f53f af42 	bmi.w	8024d92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024f0e:	3a01      	subs	r2, #1
 8024f10:	4293      	cmp	r3, r2
 8024f12:	f6bf af3e 	bge.w	8024d92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024f16:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8024f1a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8024f1e:	930e      	str	r3, [sp, #56]	@ 0x38
 8024f20:	46c8      	mov	r8, r9
 8024f22:	f1bb 0f00 	cmp.w	fp, #0
 8024f26:	f300 80b7 	bgt.w	8025098 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024f2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024f2c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024f30:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024f34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024f36:	2b00      	cmp	r3, #0
 8024f38:	f340 818d 	ble.w	8025256 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024f3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024f40:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024f44:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024f48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024f4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024f52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024f56:	eef0 6a62 	vmov.f32	s13, s5
 8024f5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024f66:	ee16 4a90 	vmov	r4, s13
 8024f6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024f6e:	eef0 6a43 	vmov.f32	s13, s6
 8024f72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024f76:	ee12 2a90 	vmov	r2, s5
 8024f7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024f7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f82:	ee13 2a10 	vmov	r2, s6
 8024f86:	9323      	str	r3, [sp, #140]	@ 0x8c
 8024f88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f8e:	9324      	str	r3, [sp, #144]	@ 0x90
 8024f90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024f92:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024f94:	3b01      	subs	r3, #1
 8024f96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f9a:	930d      	str	r3, [sp, #52]	@ 0x34
 8024f9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f9e:	bf08      	it	eq
 8024fa0:	4613      	moveq	r3, r2
 8024fa2:	ee16 6a90 	vmov	r6, s13
 8024fa6:	9309      	str	r3, [sp, #36]	@ 0x24
 8024fa8:	eeb0 3a67 	vmov.f32	s6, s15
 8024fac:	eef0 2a47 	vmov.f32	s5, s14
 8024fb0:	e6c3      	b.n	8024d3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024fb2:	2900      	cmp	r1, #0
 8024fb4:	f43f af4d 	beq.w	8024e52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024fb8:	eb0a 0003 	add.w	r0, sl, r3
 8024fbc:	0843      	lsrs	r3, r0, #1
 8024fbe:	07c0      	lsls	r0, r0, #31
 8024fc0:	5cfb      	ldrb	r3, [r7, r3]
 8024fc2:	bf54      	ite	pl
 8024fc4:	f003 030f 	andpl.w	r3, r3, #15
 8024fc8:	111b      	asrmi	r3, r3, #4
 8024fca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024fce:	b2db      	uxtb	r3, r3
 8024fd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024fd2:	e73e      	b.n	8024e52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024fd4:	f8b8 e000 	ldrh.w	lr, [r8]
 8024fd8:	fa1f fb83 	uxth.w	fp, r3
 8024fdc:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024fe0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024fe4:	43db      	mvns	r3, r3
 8024fe6:	b2db      	uxtb	r3, r3
 8024fe8:	fb11 f10b 	smulbb	r1, r1, fp
 8024fec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024ff0:	fb00 1003 	mla	r0, r0, r3, r1
 8024ff4:	fa5f fc8c 	uxtb.w	ip, ip
 8024ff8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024ffc:	b2d2      	uxtb	r2, r2
 8024ffe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025002:	b280      	uxth	r0, r0
 8025004:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025008:	fb1c fc0b 	smulbb	ip, ip, fp
 802500c:	fa5f fe8e 	uxtb.w	lr, lr
 8025010:	fb12 fb0b 	smulbb	fp, r2, fp
 8025014:	fb01 cc03 	mla	ip, r1, r3, ip
 8025018:	fb0e bb03 	mla	fp, lr, r3, fp
 802501c:	1c43      	adds	r3, r0, #1
 802501e:	fa1f fc8c 	uxth.w	ip, ip
 8025022:	fa1f fb8b 	uxth.w	fp, fp
 8025026:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802502a:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 802502e:	f10c 0101 	add.w	r1, ip, #1
 8025032:	f10b 0001 	add.w	r0, fp, #1
 8025036:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802503a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802503e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025042:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025046:	4318      	orrs	r0, r3
 8025048:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802504c:	ea40 000c 	orr.w	r0, r0, ip
 8025050:	f8a8 0000 	strh.w	r0, [r8]
 8025054:	e734      	b.n	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025056:	f113 0b01 	adds.w	fp, r3, #1
 802505a:	f53f af31 	bmi.w	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802505e:	45dc      	cmp	ip, fp
 8025060:	f6ff af2e 	blt.w	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025064:	f110 0b01 	adds.w	fp, r0, #1
 8025068:	f53f af2a 	bmi.w	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802506c:	45de      	cmp	lr, fp
 802506e:	f6ff af27 	blt.w	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025072:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8025074:	9302      	str	r3, [sp, #8]
 8025076:	fa0f f38e 	sxth.w	r3, lr
 802507a:	9301      	str	r3, [sp, #4]
 802507c:	fa0f f38c 	sxth.w	r3, ip
 8025080:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025084:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025088:	9300      	str	r3, [sp, #0]
 802508a:	463a      	mov	r2, r7
 802508c:	4653      	mov	r3, sl
 802508e:	4641      	mov	r1, r8
 8025090:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8025092:	f7ff fd4d 	bl	8024b30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8025096:	e713      	b.n	8024ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025098:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802509a:	1422      	asrs	r2, r4, #16
 802509c:	1433      	asrs	r3, r6, #16
 802509e:	fb05 2303 	mla	r3, r5, r3, r2
 80250a2:	085a      	lsrs	r2, r3, #1
 80250a4:	07dd      	lsls	r5, r3, #31
 80250a6:	5cba      	ldrb	r2, [r7, r2]
 80250a8:	bf54      	ite	pl
 80250aa:	f002 020f 	andpl.w	r2, r2, #15
 80250ae:	1112      	asrmi	r2, r2, #4
 80250b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80250b4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80250b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80250bc:	b2d2      	uxtb	r2, r2
 80250be:	2900      	cmp	r1, #0
 80250c0:	d076      	beq.n	80251b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80250c2:	f103 0e01 	add.w	lr, r3, #1
 80250c6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80250ca:	f01e 0f01 	tst.w	lr, #1
 80250ce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80250d2:	bf0c      	ite	eq
 80250d4:	f00c 0c0f 	andeq.w	ip, ip, #15
 80250d8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80250dc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80250e0:	fa5f f58c 	uxtb.w	r5, ip
 80250e4:	9512      	str	r5, [sp, #72]	@ 0x48
 80250e6:	b300      	cbz	r0, 802512a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80250e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80250ea:	442b      	add	r3, r5
 80250ec:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80250f0:	07dd      	lsls	r5, r3, #31
 80250f2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80250f6:	bf54      	ite	pl
 80250f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80250fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025100:	3301      	adds	r3, #1
 8025102:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025106:	fa5f f58c 	uxtb.w	r5, ip
 802510a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802510e:	950c      	str	r5, [sp, #48]	@ 0x30
 8025110:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025114:	07dd      	lsls	r5, r3, #31
 8025116:	bf54      	ite	pl
 8025118:	f00c 0c0f 	andpl.w	ip, ip, #15
 802511c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025120:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025124:	fa5f f38c 	uxtb.w	r3, ip
 8025128:	9313      	str	r3, [sp, #76]	@ 0x4c
 802512a:	b289      	uxth	r1, r1
 802512c:	b280      	uxth	r0, r0
 802512e:	fb01 f300 	mul.w	r3, r1, r0
 8025132:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025136:	0109      	lsls	r1, r1, #4
 8025138:	b280      	uxth	r0, r0
 802513a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802513e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025140:	1ac9      	subs	r1, r1, r3
 8025142:	ebac 0c00 	sub.w	ip, ip, r0
 8025146:	b289      	uxth	r1, r1
 8025148:	4369      	muls	r1, r5
 802514a:	fa1f fc8c 	uxth.w	ip, ip
 802514e:	fb02 120c 	mla	r2, r2, ip, r1
 8025152:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025154:	fb00 2001 	mla	r0, r0, r1, r2
 8025158:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802515a:	fb03 0302 	mla	r3, r3, r2, r0
 802515e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025162:	b1d3      	cbz	r3, 802519a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025164:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8025166:	4353      	muls	r3, r2
 8025168:	1c5a      	adds	r2, r3, #1
 802516a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802516e:	4a0f      	ldr	r2, [pc, #60]	@ (80251ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025170:	121b      	asrs	r3, r3, #8
 8025172:	6812      	ldr	r2, [r2, #0]
 8025174:	2bff      	cmp	r3, #255	@ 0xff
 8025176:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802517a:	d12d      	bne.n	80251d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802517c:	0953      	lsrs	r3, r2, #5
 802517e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8025182:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025186:	f02c 0c07 	bic.w	ip, ip, #7
 802518a:	ea43 0c0c 	orr.w	ip, r3, ip
 802518e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025192:	ea4c 0202 	orr.w	r2, ip, r2
 8025196:	f8a8 2000 	strh.w	r2, [r8]
 802519a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802519c:	441c      	add	r4, r3
 802519e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80251a0:	f108 0802 	add.w	r8, r8, #2
 80251a4:	441e      	add	r6, r3
 80251a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80251aa:	e6ba      	b.n	8024f22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80251ac:	20013f70 	.word	0x20013f70
 80251b0:	2800      	cmp	r0, #0
 80251b2:	d0ba      	beq.n	802512a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80251b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80251b6:	442b      	add	r3, r5
 80251b8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80251bc:	07db      	lsls	r3, r3, #31
 80251be:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80251c2:	bf54      	ite	pl
 80251c4:	f00c 0c0f 	andpl.w	ip, ip, #15
 80251c8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80251cc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80251d0:	fa5f f38c 	uxtb.w	r3, ip
 80251d4:	930c      	str	r3, [sp, #48]	@ 0x30
 80251d6:	e7a8      	b.n	802512a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80251d8:	f8b8 e000 	ldrh.w	lr, [r8]
 80251dc:	fa1f fa83 	uxth.w	sl, r3
 80251e0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80251e4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80251e8:	43db      	mvns	r3, r3
 80251ea:	b2db      	uxtb	r3, r3
 80251ec:	fb11 f10a 	smulbb	r1, r1, sl
 80251f0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80251f4:	fb00 1003 	mla	r0, r0, r3, r1
 80251f8:	b2d2      	uxtb	r2, r2
 80251fa:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80251fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025202:	fa5f fe8e 	uxtb.w	lr, lr
 8025206:	fb12 f20a 	smulbb	r2, r2, sl
 802520a:	fb0e 2203 	mla	r2, lr, r3, r2
 802520e:	fa5f fc8c 	uxtb.w	ip, ip
 8025212:	b280      	uxth	r0, r0
 8025214:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025218:	b292      	uxth	r2, r2
 802521a:	fb1c fc0a 	smulbb	ip, ip, sl
 802521e:	fb01 cc03 	mla	ip, r1, r3, ip
 8025222:	1c43      	adds	r3, r0, #1
 8025224:	1c51      	adds	r1, r2, #1
 8025226:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802522a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802522e:	fa1f fc8c 	uxth.w	ip, ip
 8025232:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025236:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802523a:	4308      	orrs	r0, r1
 802523c:	f10c 0101 	add.w	r1, ip, #1
 8025240:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025244:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025248:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802524c:	ea40 000c 	orr.w	r0, r0, ip
 8025250:	f8a8 0000 	strh.w	r0, [r8]
 8025254:	e7a1      	b.n	802519a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025256:	b017      	add	sp, #92	@ 0x5c
 8025258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802525c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802525c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025260:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8025264:	2d00      	cmp	r5, #0
 8025266:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802526a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802526e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8025272:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8025276:	fb05 0e03 	mla	lr, r5, r3, r0
 802527a:	f2c0 80b0 	blt.w	80253de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802527e:	45a9      	cmp	r9, r5
 8025280:	f340 80ad 	ble.w	80253de <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025284:	2800      	cmp	r0, #0
 8025286:	f2c0 80a8 	blt.w	80253da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802528a:	4580      	cmp	r8, r0
 802528c:	f340 80a5 	ble.w	80253da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025290:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025294:	f01e 0f01 	tst.w	lr, #1
 8025298:	5d16      	ldrb	r6, [r2, r4]
 802529a:	bf0c      	ite	eq
 802529c:	f006 060f 	andeq.w	r6, r6, #15
 80252a0:	1136      	asrne	r6, r6, #4
 80252a2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80252a6:	b2f6      	uxtb	r6, r6
 80252a8:	1c44      	adds	r4, r0, #1
 80252aa:	f100 809b 	bmi.w	80253e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80252ae:	45a0      	cmp	r8, r4
 80252b0:	f340 8098 	ble.w	80253e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80252b4:	2f00      	cmp	r7, #0
 80252b6:	f000 8097 	beq.w	80253e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80252ba:	f10e 0a01 	add.w	sl, lr, #1
 80252be:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80252c2:	f01a 0f01 	tst.w	sl, #1
 80252c6:	5d14      	ldrb	r4, [r2, r4]
 80252c8:	bf0c      	ite	eq
 80252ca:	f004 040f 	andeq.w	r4, r4, #15
 80252ce:	1124      	asrne	r4, r4, #4
 80252d0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80252d4:	b2e4      	uxtb	r4, r4
 80252d6:	3501      	adds	r5, #1
 80252d8:	f100 808a 	bmi.w	80253f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80252dc:	45a9      	cmp	r9, r5
 80252de:	f340 8087 	ble.w	80253f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80252e2:	f1bc 0f00 	cmp.w	ip, #0
 80252e6:	f000 8086 	beq.w	80253f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80252ea:	2800      	cmp	r0, #0
 80252ec:	db7e      	blt.n	80253ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80252ee:	4580      	cmp	r8, r0
 80252f0:	dd7c      	ble.n	80253ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80252f2:	eb03 090e 	add.w	r9, r3, lr
 80252f6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80252fa:	f019 0f01 	tst.w	r9, #1
 80252fe:	5d55      	ldrb	r5, [r2, r5]
 8025300:	bf0c      	ite	eq
 8025302:	f005 050f 	andeq.w	r5, r5, #15
 8025306:	112d      	asrne	r5, r5, #4
 8025308:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802530c:	b2ed      	uxtb	r5, r5
 802530e:	3001      	adds	r0, #1
 8025310:	d474      	bmi.n	80253fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025312:	4580      	cmp	r8, r0
 8025314:	dd72      	ble.n	80253fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025316:	2f00      	cmp	r7, #0
 8025318:	d072      	beq.n	8025400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802531a:	3301      	adds	r3, #1
 802531c:	449e      	add	lr, r3
 802531e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025322:	f01e 0f01 	tst.w	lr, #1
 8025326:	5cd0      	ldrb	r0, [r2, r3]
 8025328:	bf0c      	ite	eq
 802532a:	f000 000f 	andeq.w	r0, r0, #15
 802532e:	1100      	asrne	r0, r0, #4
 8025330:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025334:	b2c3      	uxtb	r3, r0
 8025336:	b2ba      	uxth	r2, r7
 8025338:	fa1f fc8c 	uxth.w	ip, ip
 802533c:	fb02 f00c 	mul.w	r0, r2, ip
 8025340:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025344:	0112      	lsls	r2, r2, #4
 8025346:	fa1f fc8c 	uxth.w	ip, ip
 802534a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802534e:	1a12      	subs	r2, r2, r0
 8025350:	eba7 070c 	sub.w	r7, r7, ip
 8025354:	b292      	uxth	r2, r2
 8025356:	b2bf      	uxth	r7, r7
 8025358:	4362      	muls	r2, r4
 802535a:	fb06 2207 	mla	r2, r6, r7, r2
 802535e:	fb0c 2505 	mla	r5, ip, r5, r2
 8025362:	fb00 5303 	mla	r3, r0, r3, r5
 8025366:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802536a:	b3a3      	cbz	r3, 80253d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802536c:	4a25      	ldr	r2, [pc, #148]	@ (8025404 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802536e:	880e      	ldrh	r6, [r1, #0]
 8025370:	6815      	ldr	r5, [r2, #0]
 8025372:	1234      	asrs	r4, r6, #8
 8025374:	b29a      	uxth	r2, r3
 8025376:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802537a:	43db      	mvns	r3, r3
 802537c:	b2db      	uxtb	r3, r3
 802537e:	fb10 f002 	smulbb	r0, r0, r2
 8025382:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025386:	fb04 0403 	mla	r4, r4, r3, r0
 802538a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802538e:	10f0      	asrs	r0, r6, #3
 8025390:	b2ed      	uxtb	r5, r5
 8025392:	00f6      	lsls	r6, r6, #3
 8025394:	fb17 f702 	smulbb	r7, r7, r2
 8025398:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802539c:	fb15 f202 	smulbb	r2, r5, r2
 80253a0:	b2f6      	uxtb	r6, r6
 80253a2:	b2a4      	uxth	r4, r4
 80253a4:	fb00 7003 	mla	r0, r0, r3, r7
 80253a8:	fb06 2303 	mla	r3, r6, r3, r2
 80253ac:	b29a      	uxth	r2, r3
 80253ae:	1c63      	adds	r3, r4, #1
 80253b0:	b280      	uxth	r0, r0
 80253b2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80253b6:	1c53      	adds	r3, r2, #1
 80253b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80253bc:	1c42      	adds	r2, r0, #1
 80253be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80253c2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80253c6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80253ca:	0940      	lsrs	r0, r0, #5
 80253cc:	4323      	orrs	r3, r4
 80253ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80253d2:	4303      	orrs	r3, r0
 80253d4:	800b      	strh	r3, [r1, #0]
 80253d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80253da:	2600      	movs	r6, #0
 80253dc:	e764      	b.n	80252a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80253de:	2400      	movs	r4, #0
 80253e0:	4626      	mov	r6, r4
 80253e2:	e778      	b.n	80252d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80253e4:	2400      	movs	r4, #0
 80253e6:	e776      	b.n	80252d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80253e8:	463c      	mov	r4, r7
 80253ea:	e774      	b.n	80252d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80253ec:	2500      	movs	r5, #0
 80253ee:	e78e      	b.n	802530e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80253f0:	2300      	movs	r3, #0
 80253f2:	461d      	mov	r5, r3
 80253f4:	e79f      	b.n	8025336 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80253f6:	4663      	mov	r3, ip
 80253f8:	4665      	mov	r5, ip
 80253fa:	e79c      	b.n	8025336 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80253fc:	2300      	movs	r3, #0
 80253fe:	e79a      	b.n	8025336 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025400:	463b      	mov	r3, r7
 8025402:	e798      	b.n	8025336 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025404:	20013f70 	.word	0x20013f70

08025408 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802540c:	b093      	sub	sp, #76	@ 0x4c
 802540e:	461d      	mov	r5, r3
 8025410:	920c      	str	r2, [sp, #48]	@ 0x30
 8025412:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8025414:	9107      	str	r1, [sp, #28]
 8025416:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802541a:	9011      	str	r0, [sp, #68]	@ 0x44
 802541c:	6850      	ldr	r0, [r2, #4]
 802541e:	6812      	ldr	r2, [r2, #0]
 8025420:	fb00 1303 	mla	r3, r0, r3, r1
 8025424:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025428:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802542a:	689b      	ldr	r3, [r3, #8]
 802542c:	3301      	adds	r3, #1
 802542e:	f023 0301 	bic.w	r3, r3, #1
 8025432:	9306      	str	r3, [sp, #24]
 8025434:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025436:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802543a:	681f      	ldr	r7, [r3, #0]
 802543c:	9b07      	ldr	r3, [sp, #28]
 802543e:	2b00      	cmp	r3, #0
 8025440:	dc03      	bgt.n	802544a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025442:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025444:	2b00      	cmp	r3, #0
 8025446:	f340 8267 	ble.w	8025918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802544a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802544c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025450:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025454:	1e48      	subs	r0, r1, #1
 8025456:	f102 3cff 	add.w	ip, r2, #4294967295
 802545a:	2d00      	cmp	r5, #0
 802545c:	f340 80b8 	ble.w	80255d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025460:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025464:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025468:	d406      	bmi.n	8025478 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802546a:	4586      	cmp	lr, r0
 802546c:	da04      	bge.n	8025478 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802546e:	2b00      	cmp	r3, #0
 8025470:	db02      	blt.n	8025478 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025472:	4563      	cmp	r3, ip
 8025474:	f2c0 80ad 	blt.w	80255d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025478:	f11e 0e01 	adds.w	lr, lr, #1
 802547c:	f100 80a0 	bmi.w	80255c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025480:	4571      	cmp	r1, lr
 8025482:	f2c0 809d 	blt.w	80255c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025486:	3301      	adds	r3, #1
 8025488:	f100 809a 	bmi.w	80255c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802548c:	429a      	cmp	r2, r3
 802548e:	f2c0 8097 	blt.w	80255c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025492:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025496:	9509      	str	r5, [sp, #36]	@ 0x24
 8025498:	46c8      	mov	r8, r9
 802549a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802549c:	2b00      	cmp	r3, #0
 802549e:	f340 80b6 	ble.w	802560e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80254a2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80254a6:	9308      	str	r3, [sp, #32]
 80254a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80254aa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80254ae:	1423      	asrs	r3, r4, #16
 80254b0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80254b4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80254b8:	f100 813e 	bmi.w	8025738 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80254bc:	f10c 3bff 	add.w	fp, ip, #4294967295
 80254c0:	455b      	cmp	r3, fp
 80254c2:	f280 8139 	bge.w	8025738 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80254c6:	2800      	cmp	r0, #0
 80254c8:	f2c0 8136 	blt.w	8025738 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80254cc:	f10e 3bff 	add.w	fp, lr, #4294967295
 80254d0:	4558      	cmp	r0, fp
 80254d2:	f280 8131 	bge.w	8025738 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80254d6:	9a06      	ldr	r2, [sp, #24]
 80254d8:	fb00 3302 	mla	r3, r0, r2, r3
 80254dc:	0858      	lsrs	r0, r3, #1
 80254de:	07da      	lsls	r2, r3, #31
 80254e0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80254e4:	9a08      	ldr	r2, [sp, #32]
 80254e6:	bf54      	ite	pl
 80254e8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80254ec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80254f0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80254f4:	fa5f fc8c 	uxtb.w	ip, ip
 80254f8:	2a00      	cmp	r2, #0
 80254fa:	f000 80cb 	beq.w	8025694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80254fe:	1c58      	adds	r0, r3, #1
 8025500:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025504:	07c0      	lsls	r0, r0, #31
 8025506:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802550a:	bf54      	ite	pl
 802550c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025510:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025514:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025518:	fa5f fe8e 	uxtb.w	lr, lr
 802551c:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8025520:	b1b9      	cbz	r1, 8025552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025522:	4453      	add	r3, sl
 8025524:	0858      	lsrs	r0, r3, #1
 8025526:	07da      	lsls	r2, r3, #31
 8025528:	5c38      	ldrb	r0, [r7, r0]
 802552a:	bf54      	ite	pl
 802552c:	f000 000f 	andpl.w	r0, r0, #15
 8025530:	1100      	asrmi	r0, r0, #4
 8025532:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025536:	b2c0      	uxtb	r0, r0
 8025538:	900a      	str	r0, [sp, #40]	@ 0x28
 802553a:	1c58      	adds	r0, r3, #1
 802553c:	0843      	lsrs	r3, r0, #1
 802553e:	07c2      	lsls	r2, r0, #31
 8025540:	5cfb      	ldrb	r3, [r7, r3]
 8025542:	bf54      	ite	pl
 8025544:	f003 030f 	andpl.w	r3, r3, #15
 8025548:	111b      	asrmi	r3, r3, #4
 802554a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802554e:	b2db      	uxtb	r3, r3
 8025550:	930e      	str	r3, [sp, #56]	@ 0x38
 8025552:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025556:	b289      	uxth	r1, r1
 8025558:	fb02 f301 	mul.w	r3, r2, r1
 802555c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025560:	0112      	lsls	r2, r2, #4
 8025562:	b289      	uxth	r1, r1
 8025564:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8025568:	1a40      	subs	r0, r0, r1
 802556a:	fa1f fe80 	uxth.w	lr, r0
 802556e:	1ad2      	subs	r2, r2, r3
 8025570:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025572:	b292      	uxth	r2, r2
 8025574:	4342      	muls	r2, r0
 8025576:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802557a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802557c:	fb01 c102 	mla	r1, r1, r2, ip
 8025580:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025582:	fb03 1302 	mla	r3, r3, r2, r1
 8025586:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802558a:	2bff      	cmp	r3, #255	@ 0xff
 802558c:	f040 8093 	bne.w	80256b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025590:	4bbe      	ldr	r3, [pc, #760]	@ (802588c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025592:	681a      	ldr	r2, [r3, #0]
 8025594:	4bbe      	ldr	r3, [pc, #760]	@ (8025890 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025596:	0951      	lsrs	r1, r2, #5
 8025598:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802559c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80255a0:	430b      	orrs	r3, r1
 80255a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80255a6:	4313      	orrs	r3, r2
 80255a8:	f8a8 3000 	strh.w	r3, [r8]
 80255ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80255ae:	441c      	add	r4, r3
 80255b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80255b2:	441e      	add	r6, r3
 80255b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80255b6:	3b01      	subs	r3, #1
 80255b8:	f108 0802 	add.w	r8, r8, #2
 80255bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80255be:	e76c      	b.n	802549a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80255c0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80255c2:	441c      	add	r4, r3
 80255c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80255c6:	3d01      	subs	r5, #1
 80255c8:	441e      	add	r6, r3
 80255ca:	f109 0902 	add.w	r9, r9, #2
 80255ce:	e744      	b.n	802545a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80255d0:	d021      	beq.n	8025616 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80255d2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80255d4:	1e6b      	subs	r3, r5, #1
 80255d6:	fb00 4003 	mla	r0, r0, r3, r4
 80255da:	1400      	asrs	r0, r0, #16
 80255dc:	f53f af59 	bmi.w	8025492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80255e0:	3901      	subs	r1, #1
 80255e2:	4288      	cmp	r0, r1
 80255e4:	f6bf af55 	bge.w	8025492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80255e8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80255ea:	fb01 6303 	mla	r3, r1, r3, r6
 80255ee:	141b      	asrs	r3, r3, #16
 80255f0:	f53f af4f 	bmi.w	8025492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80255f4:	3a01      	subs	r2, #1
 80255f6:	4293      	cmp	r3, r2
 80255f8:	f6bf af4b 	bge.w	8025492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80255fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025600:	9308      	str	r3, [sp, #32]
 8025602:	46a8      	mov	r8, r5
 8025604:	46ce      	mov	lr, r9
 8025606:	f1b8 0f00 	cmp.w	r8, #0
 802560a:	f300 80b5 	bgt.w	8025778 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802560e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025612:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025616:	9b07      	ldr	r3, [sp, #28]
 8025618:	2b00      	cmp	r3, #0
 802561a:	f340 817d 	ble.w	8025918 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802561e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025622:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025626:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802562a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802562c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025630:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025634:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025638:	eef0 6a62 	vmov.f32	s13, s5
 802563c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025640:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025644:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025648:	ee16 4a90 	vmov	r4, s13
 802564c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025650:	eef0 6a43 	vmov.f32	s13, s6
 8025654:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025658:	ee12 2a90 	vmov	r2, s5
 802565c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025660:	fb92 f3f3 	sdiv	r3, r2, r3
 8025664:	ee13 2a10 	vmov	r2, s6
 8025668:	931f      	str	r3, [sp, #124]	@ 0x7c
 802566a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802566c:	fb92 f3f3 	sdiv	r3, r2, r3
 8025670:	9320      	str	r3, [sp, #128]	@ 0x80
 8025672:	9b07      	ldr	r3, [sp, #28]
 8025674:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8025676:	3b01      	subs	r3, #1
 8025678:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802567c:	9307      	str	r3, [sp, #28]
 802567e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025680:	ee16 6a90 	vmov	r6, s13
 8025684:	bf14      	ite	ne
 8025686:	461d      	movne	r5, r3
 8025688:	4615      	moveq	r5, r2
 802568a:	eeb0 3a67 	vmov.f32	s6, s15
 802568e:	eef0 2a47 	vmov.f32	s5, s14
 8025692:	e6d3      	b.n	802543c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025694:	2900      	cmp	r1, #0
 8025696:	f43f af5c 	beq.w	8025552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802569a:	eb0a 0003 	add.w	r0, sl, r3
 802569e:	0843      	lsrs	r3, r0, #1
 80256a0:	07c0      	lsls	r0, r0, #31
 80256a2:	5cfb      	ldrb	r3, [r7, r3]
 80256a4:	bf54      	ite	pl
 80256a6:	f003 030f 	andpl.w	r3, r3, #15
 80256aa:	111b      	asrmi	r3, r3, #4
 80256ac:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80256b0:	b2db      	uxtb	r3, r3
 80256b2:	930a      	str	r3, [sp, #40]	@ 0x28
 80256b4:	e74d      	b.n	8025552 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80256b6:	2b00      	cmp	r3, #0
 80256b8:	f43f af78 	beq.w	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80256bc:	4a73      	ldr	r2, [pc, #460]	@ (802588c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80256be:	f8b8 c000 	ldrh.w	ip, [r8]
 80256c2:	6810      	ldr	r0, [r2, #0]
 80256c4:	fa1f fe83 	uxth.w	lr, r3
 80256c8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80256cc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80256d0:	43db      	mvns	r3, r3
 80256d2:	b2db      	uxtb	r3, r3
 80256d4:	fb12 f20e 	smulbb	r2, r2, lr
 80256d8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80256dc:	fb01 2103 	mla	r1, r1, r3, r2
 80256e0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80256e4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80256e8:	b2c0      	uxtb	r0, r0
 80256ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80256ee:	fb1b fb0e 	smulbb	fp, fp, lr
 80256f2:	b289      	uxth	r1, r1
 80256f4:	fb10 fe0e 	smulbb	lr, r0, lr
 80256f8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80256fc:	fa5f fc8c 	uxtb.w	ip, ip
 8025700:	fb02 b203 	mla	r2, r2, r3, fp
 8025704:	1c48      	adds	r0, r1, #1
 8025706:	fb0c e303 	mla	r3, ip, r3, lr
 802570a:	b292      	uxth	r2, r2
 802570c:	b29b      	uxth	r3, r3
 802570e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8025712:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8025716:	f102 0b01 	add.w	fp, r2, #1
 802571a:	1c59      	adds	r1, r3, #1
 802571c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025720:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025724:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025728:	0952      	lsrs	r2, r2, #5
 802572a:	4301      	orrs	r1, r0
 802572c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025730:	4311      	orrs	r1, r2
 8025732:	f8a8 1000 	strh.w	r1, [r8]
 8025736:	e739      	b.n	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025738:	f113 0b01 	adds.w	fp, r3, #1
 802573c:	f53f af36 	bmi.w	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025740:	45dc      	cmp	ip, fp
 8025742:	f6ff af33 	blt.w	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025746:	f110 0b01 	adds.w	fp, r0, #1
 802574a:	f53f af2f 	bmi.w	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802574e:	45de      	cmp	lr, fp
 8025750:	f6ff af2c 	blt.w	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025754:	9a08      	ldr	r2, [sp, #32]
 8025756:	9302      	str	r3, [sp, #8]
 8025758:	fa0f f38e 	sxth.w	r3, lr
 802575c:	9301      	str	r3, [sp, #4]
 802575e:	fa0f f38c 	sxth.w	r3, ip
 8025762:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025766:	9105      	str	r1, [sp, #20]
 8025768:	9300      	str	r3, [sp, #0]
 802576a:	463a      	mov	r2, r7
 802576c:	4653      	mov	r3, sl
 802576e:	4641      	mov	r1, r8
 8025770:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8025772:	f7ff fd73 	bl	802525c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8025776:	e719      	b.n	80255ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025778:	9906      	ldr	r1, [sp, #24]
 802577a:	1422      	asrs	r2, r4, #16
 802577c:	1433      	asrs	r3, r6, #16
 802577e:	fb01 2303 	mla	r3, r1, r3, r2
 8025782:	085a      	lsrs	r2, r3, #1
 8025784:	07d9      	lsls	r1, r3, #31
 8025786:	5cba      	ldrb	r2, [r7, r2]
 8025788:	bf54      	ite	pl
 802578a:	f002 020f 	andpl.w	r2, r2, #15
 802578e:	1112      	asrmi	r2, r2, #4
 8025790:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025794:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025798:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802579c:	b2d2      	uxtb	r2, r2
 802579e:	2800      	cmp	r0, #0
 80257a0:	d062      	beq.n	8025868 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80257a2:	f103 0a01 	add.w	sl, r3, #1
 80257a6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80257aa:	f01a 0f01 	tst.w	sl, #1
 80257ae:	5c79      	ldrb	r1, [r7, r1]
 80257b0:	bf0c      	ite	eq
 80257b2:	f001 010f 	andeq.w	r1, r1, #15
 80257b6:	1109      	asrne	r1, r1, #4
 80257b8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80257bc:	b2c9      	uxtb	r1, r1
 80257be:	910f      	str	r1, [sp, #60]	@ 0x3c
 80257c0:	f1bc 0f00 	cmp.w	ip, #0
 80257c4:	d019      	beq.n	80257fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80257c6:	9908      	ldr	r1, [sp, #32]
 80257c8:	440b      	add	r3, r1
 80257ca:	0859      	lsrs	r1, r3, #1
 80257cc:	f013 0f01 	tst.w	r3, #1
 80257d0:	5c79      	ldrb	r1, [r7, r1]
 80257d2:	bf0c      	ite	eq
 80257d4:	f001 010f 	andeq.w	r1, r1, #15
 80257d8:	1109      	asrne	r1, r1, #4
 80257da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80257de:	b2c9      	uxtb	r1, r1
 80257e0:	3301      	adds	r3, #1
 80257e2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80257e4:	0859      	lsrs	r1, r3, #1
 80257e6:	07db      	lsls	r3, r3, #31
 80257e8:	5c79      	ldrb	r1, [r7, r1]
 80257ea:	bf54      	ite	pl
 80257ec:	f001 010f 	andpl.w	r1, r1, #15
 80257f0:	1109      	asrmi	r1, r1, #4
 80257f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80257f6:	b2c9      	uxtb	r1, r1
 80257f8:	9110      	str	r1, [sp, #64]	@ 0x40
 80257fa:	b280      	uxth	r0, r0
 80257fc:	fa1f fc8c 	uxth.w	ip, ip
 8025800:	fb00 f30c 	mul.w	r3, r0, ip
 8025804:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025808:	0100      	lsls	r0, r0, #4
 802580a:	fa1f fc8c 	uxth.w	ip, ip
 802580e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8025812:	eba1 010c 	sub.w	r1, r1, ip
 8025816:	fa1f fa81 	uxth.w	sl, r1
 802581a:	1ac0      	subs	r0, r0, r3
 802581c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802581e:	b280      	uxth	r0, r0
 8025820:	4348      	muls	r0, r1
 8025822:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8025824:	fb02 020a 	mla	r2, r2, sl, r0
 8025828:	fb0c 2c01 	mla	ip, ip, r1, r2
 802582c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802582e:	fb03 c302 	mla	r3, r3, r2, ip
 8025832:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025836:	2bff      	cmp	r3, #255	@ 0xff
 8025838:	d12c      	bne.n	8025894 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802583a:	4b14      	ldr	r3, [pc, #80]	@ (802588c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802583c:	681a      	ldr	r2, [r3, #0]
 802583e:	4b14      	ldr	r3, [pc, #80]	@ (8025890 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025840:	0951      	lsrs	r1, r2, #5
 8025842:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025846:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802584a:	430b      	orrs	r3, r1
 802584c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025850:	4313      	orrs	r3, r2
 8025852:	f8ae 3000 	strh.w	r3, [lr]
 8025856:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025858:	441c      	add	r4, r3
 802585a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802585c:	f10e 0e02 	add.w	lr, lr, #2
 8025860:	441e      	add	r6, r3
 8025862:	f108 38ff 	add.w	r8, r8, #4294967295
 8025866:	e6ce      	b.n	8025606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025868:	f1bc 0f00 	cmp.w	ip, #0
 802586c:	d0c5      	beq.n	80257fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802586e:	9908      	ldr	r1, [sp, #32]
 8025870:	440b      	add	r3, r1
 8025872:	0859      	lsrs	r1, r3, #1
 8025874:	07db      	lsls	r3, r3, #31
 8025876:	5c79      	ldrb	r1, [r7, r1]
 8025878:	bf54      	ite	pl
 802587a:	f001 010f 	andpl.w	r1, r1, #15
 802587e:	1109      	asrmi	r1, r1, #4
 8025880:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025884:	b2c9      	uxtb	r1, r1
 8025886:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025888:	e7b7      	b.n	80257fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802588a:	bf00      	nop
 802588c:	20013f70 	.word	0x20013f70
 8025890:	fffff800 	.word	0xfffff800
 8025894:	2b00      	cmp	r3, #0
 8025896:	d0de      	beq.n	8025856 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025898:	4a21      	ldr	r2, [pc, #132]	@ (8025920 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802589a:	f8be c000 	ldrh.w	ip, [lr]
 802589e:	6810      	ldr	r0, [r2, #0]
 80258a0:	fa1f fa83 	uxth.w	sl, r3
 80258a4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80258a8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80258ac:	43db      	mvns	r3, r3
 80258ae:	b2db      	uxtb	r3, r3
 80258b0:	fb12 f20a 	smulbb	r2, r2, sl
 80258b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80258b8:	fb01 2103 	mla	r1, r1, r3, r2
 80258bc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80258c0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80258c4:	b2c0      	uxtb	r0, r0
 80258c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80258ca:	fa5f fc8c 	uxtb.w	ip, ip
 80258ce:	fb10 f00a 	smulbb	r0, r0, sl
 80258d2:	fb0c 0003 	mla	r0, ip, r3, r0
 80258d6:	b289      	uxth	r1, r1
 80258d8:	fb1b fb0a 	smulbb	fp, fp, sl
 80258dc:	b280      	uxth	r0, r0
 80258de:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80258e2:	fb02 b203 	mla	r2, r2, r3, fp
 80258e6:	1c4b      	adds	r3, r1, #1
 80258e8:	f100 0b01 	add.w	fp, r0, #1
 80258ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80258f0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80258f4:	b292      	uxth	r2, r2
 80258f6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80258fa:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80258fe:	ea4b 0101 	orr.w	r1, fp, r1
 8025902:	f102 0b01 	add.w	fp, r2, #1
 8025906:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802590a:	0952      	lsrs	r2, r2, #5
 802590c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025910:	4311      	orrs	r1, r2
 8025912:	f8ae 1000 	strh.w	r1, [lr]
 8025916:	e79e      	b.n	8025856 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025918:	b013      	add	sp, #76	@ 0x4c
 802591a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802591e:	bf00      	nop
 8025920:	20013f70 	.word	0x20013f70

08025924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025924:	b570      	push	{r4, r5, r6, lr}
 8025926:	1208      	asrs	r0, r1, #8
 8025928:	b29e      	uxth	r6, r3
 802592a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802592e:	1213      	asrs	r3, r2, #8
 8025930:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025934:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8025938:	fb13 f305 	smulbb	r3, r3, r5
 802593c:	fb10 f006 	smulbb	r0, r0, r6
 8025940:	4418      	add	r0, r3
 8025942:	10cc      	asrs	r4, r1, #3
 8025944:	10d3      	asrs	r3, r2, #3
 8025946:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802594a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802594e:	fb13 f305 	smulbb	r3, r3, r5
 8025952:	fb14 f406 	smulbb	r4, r4, r6
 8025956:	00c9      	lsls	r1, r1, #3
 8025958:	00d2      	lsls	r2, r2, #3
 802595a:	441c      	add	r4, r3
 802595c:	b2d2      	uxtb	r2, r2
 802595e:	b2cb      	uxtb	r3, r1
 8025960:	fb12 f205 	smulbb	r2, r2, r5
 8025964:	b280      	uxth	r0, r0
 8025966:	fb13 f306 	smulbb	r3, r3, r6
 802596a:	4413      	add	r3, r2
 802596c:	1c42      	adds	r2, r0, #1
 802596e:	b29b      	uxth	r3, r3
 8025970:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025974:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8025978:	1c58      	adds	r0, r3, #1
 802597a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802597e:	b2a4      	uxth	r4, r4
 8025980:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025984:	4310      	orrs	r0, r2
 8025986:	1c62      	adds	r2, r4, #1
 8025988:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802598c:	0964      	lsrs	r4, r4, #5
 802598e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025992:	4320      	orrs	r0, r4
 8025994:	bd70      	pop	{r4, r5, r6, pc}
	...

08025998 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802599c:	b08f      	sub	sp, #60	@ 0x3c
 802599e:	461c      	mov	r4, r3
 80259a0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80259a4:	9004      	str	r0, [sp, #16]
 80259a6:	460d      	mov	r5, r1
 80259a8:	4616      	mov	r6, r2
 80259aa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80259ac:	2f00      	cmp	r7, #0
 80259ae:	f000 80f6 	beq.w	8025b9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80259b2:	6820      	ldr	r0, [r4, #0]
 80259b4:	6861      	ldr	r1, [r4, #4]
 80259b6:	aa0a      	add	r2, sp, #40	@ 0x28
 80259b8:	c203      	stmia	r2!, {r0, r1}
 80259ba:	6818      	ldr	r0, [r3, #0]
 80259bc:	6859      	ldr	r1, [r3, #4]
 80259be:	aa0c      	add	r2, sp, #48	@ 0x30
 80259c0:	c203      	stmia	r2!, {r0, r1}
 80259c2:	a80a      	add	r0, sp, #40	@ 0x28
 80259c4:	f7ee fbb6 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80259c8:	4621      	mov	r1, r4
 80259ca:	a80c      	add	r0, sp, #48	@ 0x30
 80259cc:	f7ee fbda 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80259d0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80259d4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80259d8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80259dc:	f002 0301 	and.w	r3, r2, #1
 80259e0:	9306      	str	r3, [sp, #24]
 80259e2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80259e6:	f003 0101 	and.w	r1, r3, #1
 80259ea:	9105      	str	r1, [sp, #20]
 80259ec:	9805      	ldr	r0, [sp, #20]
 80259ee:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80259f2:	4403      	add	r3, r0
 80259f4:	fb01 2303 	mla	r3, r1, r3, r2
 80259f8:	f04f 0802 	mov.w	r8, #2
 80259fc:	fb93 f3f8 	sdiv	r3, r3, r8
 8025a00:	441d      	add	r5, r3
 8025a02:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8025a06:	441a      	add	r2, r3
 8025a08:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025a0c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025a10:	4419      	add	r1, r3
 8025a12:	4b64      	ldr	r3, [pc, #400]	@ (8025ba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025a14:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8025a18:	6818      	ldr	r0, [r3, #0]
 8025a1a:	6803      	ldr	r3, [r0, #0]
 8025a1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025a1e:	4798      	blx	r3
 8025a20:	4a61      	ldr	r2, [pc, #388]	@ (8025ba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025a22:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8025a26:	8813      	ldrh	r3, [r2, #0]
 8025a28:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8025a2c:	2fff      	cmp	r7, #255	@ 0xff
 8025a2e:	fb03 a404 	mla	r4, r3, r4, sl
 8025a32:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025a36:	f106 0604 	add.w	r6, r6, #4
 8025a3a:	4611      	mov	r1, r2
 8025a3c:	fb03 fb0b 	mul.w	fp, r3, fp
 8025a40:	d06b      	beq.n	8025b1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025a42:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8025a46:	9303      	str	r3, [sp, #12]
 8025a48:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025a4c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025a50:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8025a54:	9b07      	ldr	r3, [sp, #28]
 8025a56:	42a3      	cmp	r3, r4
 8025a58:	f240 809c 	bls.w	8025b94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025a5c:	9b06      	ldr	r3, [sp, #24]
 8025a5e:	2b00      	cmp	r3, #0
 8025a60:	d039      	beq.n	8025ad6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025a62:	782b      	ldrb	r3, [r5, #0]
 8025a64:	8822      	ldrh	r2, [r4, #0]
 8025a66:	9804      	ldr	r0, [sp, #16]
 8025a68:	f003 030f 	and.w	r3, r3, #15
 8025a6c:	f105 0801 	add.w	r8, r5, #1
 8025a70:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025a74:	9b03      	ldr	r3, [sp, #12]
 8025a76:	9300      	str	r3, [sp, #0]
 8025a78:	463b      	mov	r3, r7
 8025a7a:	f7ff ff53 	bl	8025924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025a7e:	f824 0b02 	strh.w	r0, [r4], #2
 8025a82:	f109 3bff 	add.w	fp, r9, #4294967295
 8025a86:	f1bb 0f01 	cmp.w	fp, #1
 8025a8a:	46a2      	mov	sl, r4
 8025a8c:	f104 0404 	add.w	r4, r4, #4
 8025a90:	dd24      	ble.n	8025adc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025a92:	f898 3000 	ldrb.w	r3, [r8]
 8025a96:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025a9a:	9804      	ldr	r0, [sp, #16]
 8025a9c:	091b      	lsrs	r3, r3, #4
 8025a9e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025aa2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025aa6:	9b03      	ldr	r3, [sp, #12]
 8025aa8:	9300      	str	r3, [sp, #0]
 8025aaa:	463b      	mov	r3, r7
 8025aac:	f7ff ff3a 	bl	8025924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025ab0:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025ab4:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025ab8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025abc:	9804      	ldr	r0, [sp, #16]
 8025abe:	f003 030f 	and.w	r3, r3, #15
 8025ac2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025ac6:	9b03      	ldr	r3, [sp, #12]
 8025ac8:	9300      	str	r3, [sp, #0]
 8025aca:	463b      	mov	r3, r7
 8025acc:	f7ff ff2a 	bl	8025924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025ad0:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025ad4:	e7d7      	b.n	8025a86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025ad6:	46a8      	mov	r8, r5
 8025ad8:	46cb      	mov	fp, r9
 8025ada:	e7d4      	b.n	8025a86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025adc:	d10e      	bne.n	8025afc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025ade:	f898 3000 	ldrb.w	r3, [r8]
 8025ae2:	f8ba 2000 	ldrh.w	r2, [sl]
 8025ae6:	9804      	ldr	r0, [sp, #16]
 8025ae8:	091b      	lsrs	r3, r3, #4
 8025aea:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025aee:	9b03      	ldr	r3, [sp, #12]
 8025af0:	9300      	str	r3, [sp, #0]
 8025af2:	463b      	mov	r3, r7
 8025af4:	f7ff ff16 	bl	8025924 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025af8:	f82a 0b02 	strh.w	r0, [sl], #2
 8025afc:	9b08      	ldr	r3, [sp, #32]
 8025afe:	9a05      	ldr	r2, [sp, #20]
 8025b00:	881c      	ldrh	r4, [r3, #0]
 8025b02:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025b06:	eba4 0409 	sub.w	r4, r4, r9
 8025b0a:	4413      	add	r3, r2
 8025b0c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025b10:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025b12:	fb93 f3f2 	sdiv	r3, r3, r2
 8025b16:	441d      	add	r5, r3
 8025b18:	e79c      	b.n	8025a54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025b1a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025b1e:	45a3      	cmp	fp, r4
 8025b20:	d938      	bls.n	8025b94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025b22:	9b06      	ldr	r3, [sp, #24]
 8025b24:	b1f3      	cbz	r3, 8025b64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025b26:	782b      	ldrb	r3, [r5, #0]
 8025b28:	f003 030f 	and.w	r3, r3, #15
 8025b2c:	1c6a      	adds	r2, r5, #1
 8025b2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025b32:	8023      	strh	r3, [r4, #0]
 8025b34:	f109 30ff 	add.w	r0, r9, #4294967295
 8025b38:	3402      	adds	r4, #2
 8025b3a:	2801      	cmp	r0, #1
 8025b3c:	4623      	mov	r3, r4
 8025b3e:	f104 0404 	add.w	r4, r4, #4
 8025b42:	dd12      	ble.n	8025b6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025b44:	7813      	ldrb	r3, [r2, #0]
 8025b46:	091b      	lsrs	r3, r3, #4
 8025b48:	3802      	subs	r0, #2
 8025b4a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025b4e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025b52:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025b56:	f003 030f 	and.w	r3, r3, #15
 8025b5a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025b5e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025b62:	e7ea      	b.n	8025b3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025b64:	462a      	mov	r2, r5
 8025b66:	4648      	mov	r0, r9
 8025b68:	e7e7      	b.n	8025b3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025b6a:	d106      	bne.n	8025b7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025b6c:	7812      	ldrb	r2, [r2, #0]
 8025b6e:	0912      	lsrs	r2, r2, #4
 8025b70:	3302      	adds	r3, #2
 8025b72:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025b76:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025b7a:	880c      	ldrh	r4, [r1, #0]
 8025b7c:	9a05      	ldr	r2, [sp, #20]
 8025b7e:	eba4 0409 	sub.w	r4, r4, r9
 8025b82:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025b86:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025b8a:	4413      	add	r3, r2
 8025b8c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025b90:	441d      	add	r5, r3
 8025b92:	e7c4      	b.n	8025b1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025b94:	4b03      	ldr	r3, [pc, #12]	@ (8025ba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025b96:	6818      	ldr	r0, [r3, #0]
 8025b98:	6803      	ldr	r3, [r0, #0]
 8025b9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025b9c:	4798      	blx	r3
 8025b9e:	b00f      	add	sp, #60	@ 0x3c
 8025ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ba4:	20013f60 	.word	0x20013f60
 8025ba8:	20013f5a 	.word	0x20013f5a

08025bac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025bac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025bae:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025bb2:	2dff      	cmp	r5, #255	@ 0xff
 8025bb4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025bb8:	d10c      	bne.n	8025bd4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025bba:	2bff      	cmp	r3, #255	@ 0xff
 8025bbc:	d10a      	bne.n	8025bd4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025bbe:	4b25      	ldr	r3, [pc, #148]	@ (8025c54 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025bc0:	0948      	lsrs	r0, r1, #5
 8025bc2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025bc6:	403b      	ands	r3, r7
 8025bc8:	4318      	orrs	r0, r3
 8025bca:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025bce:	4308      	orrs	r0, r1
 8025bd0:	b280      	uxth	r0, r0
 8025bd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025bd4:	fb15 f503 	smulbb	r5, r5, r3
 8025bd8:	b2ab      	uxth	r3, r5
 8025bda:	1c5d      	adds	r5, r3, #1
 8025bdc:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025be0:	1214      	asrs	r4, r2, #8
 8025be2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025be6:	fa1f fc85 	uxth.w	ip, r5
 8025bea:	10d6      	asrs	r6, r2, #3
 8025bec:	00d0      	lsls	r0, r2, #3
 8025bee:	43ed      	mvns	r5, r5
 8025bf0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025bf4:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025bf8:	b2eb      	uxtb	r3, r5
 8025bfa:	b2c0      	uxtb	r0, r0
 8025bfc:	fb12 f20c 	smulbb	r2, r2, ip
 8025c00:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025c04:	fb04 2403 	mla	r4, r4, r3, r2
 8025c08:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025c0c:	b2c8      	uxtb	r0, r1
 8025c0e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8025c12:	b2fd      	uxtb	r5, r7
 8025c14:	fb10 f00c 	smulbb	r0, r0, ip
 8025c18:	b2a4      	uxth	r4, r4
 8025c1a:	fb02 0003 	mla	r0, r2, r3, r0
 8025c1e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025c22:	fb15 f50c 	smulbb	r5, r5, ip
 8025c26:	fb06 5503 	mla	r5, r6, r3, r5
 8025c2a:	b283      	uxth	r3, r0
 8025c2c:	1c60      	adds	r0, r4, #1
 8025c2e:	b2ad      	uxth	r5, r5
 8025c30:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025c34:	1c58      	adds	r0, r3, #1
 8025c36:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025c3a:	1c6b      	adds	r3, r5, #1
 8025c3c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025c40:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8025c44:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025c48:	096d      	lsrs	r5, r5, #5
 8025c4a:	4320      	orrs	r0, r4
 8025c4c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025c50:	4328      	orrs	r0, r5
 8025c52:	e7be      	b.n	8025bd2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025c54:	00fff800 	.word	0x00fff800

08025c58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c5c:	461c      	mov	r4, r3
 8025c5e:	b08d      	sub	sp, #52	@ 0x34
 8025c60:	460d      	mov	r5, r1
 8025c62:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025c64:	6861      	ldr	r1, [r4, #4]
 8025c66:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8025c6a:	4680      	mov	r8, r0
 8025c6c:	6820      	ldr	r0, [r4, #0]
 8025c6e:	4616      	mov	r6, r2
 8025c70:	aa08      	add	r2, sp, #32
 8025c72:	c203      	stmia	r2!, {r0, r1}
 8025c74:	6818      	ldr	r0, [r3, #0]
 8025c76:	6859      	ldr	r1, [r3, #4]
 8025c78:	aa0a      	add	r2, sp, #40	@ 0x28
 8025c7a:	c203      	stmia	r2!, {r0, r1}
 8025c7c:	a808      	add	r0, sp, #32
 8025c7e:	f7ee fa59 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025c82:	4621      	mov	r1, r4
 8025c84:	a80a      	add	r0, sp, #40	@ 0x28
 8025c86:	f7ee fa7d 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025c8a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8025c8e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8025c92:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8025c96:	f002 0301 	and.w	r3, r2, #1
 8025c9a:	9303      	str	r3, [sp, #12]
 8025c9c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025ca0:	f003 0101 	and.w	r1, r3, #1
 8025ca4:	9102      	str	r1, [sp, #8]
 8025ca6:	9802      	ldr	r0, [sp, #8]
 8025ca8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8025cac:	4403      	add	r3, r0
 8025cae:	fb01 2303 	mla	r3, r1, r3, r2
 8025cb2:	f04f 0a02 	mov.w	sl, #2
 8025cb6:	fb93 f3fa 	sdiv	r3, r3, sl
 8025cba:	441d      	add	r5, r3
 8025cbc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025cc0:	441a      	add	r2, r3
 8025cc2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8025cc6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8025cca:	4a3f      	ldr	r2, [pc, #252]	@ (8025dc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025ccc:	9205      	str	r2, [sp, #20]
 8025cce:	4419      	add	r1, r3
 8025cd0:	6810      	ldr	r0, [r2, #0]
 8025cd2:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8025cd6:	6803      	ldr	r3, [r0, #0]
 8025cd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025cda:	4798      	blx	r3
 8025cdc:	4b3b      	ldr	r3, [pc, #236]	@ (8025dcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025cde:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8025ce2:	8819      	ldrh	r1, [r3, #0]
 8025ce4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8025ce8:	fb01 c404 	mla	r4, r1, r4, ip
 8025cec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025cf0:	434f      	muls	r7, r1
 8025cf2:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025cf6:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025cfa:	3604      	adds	r6, #4
 8025cfc:	9204      	str	r2, [sp, #16]
 8025cfe:	9b04      	ldr	r3, [sp, #16]
 8025d00:	429c      	cmp	r4, r3
 8025d02:	d258      	bcs.n	8025db6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025d04:	9b03      	ldr	r3, [sp, #12]
 8025d06:	2b00      	cmp	r3, #0
 8025d08:	d034      	beq.n	8025d74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025d0a:	782b      	ldrb	r3, [r5, #0]
 8025d0c:	f003 030f 	and.w	r3, r3, #15
 8025d10:	1c6f      	adds	r7, r5, #1
 8025d12:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025d16:	0e0b      	lsrs	r3, r1, #24
 8025d18:	d006      	beq.n	8025d28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025d1a:	8822      	ldrh	r2, [r4, #0]
 8025d1c:	9300      	str	r3, [sp, #0]
 8025d1e:	4640      	mov	r0, r8
 8025d20:	464b      	mov	r3, r9
 8025d22:	f7ff ff43 	bl	8025bac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025d26:	8020      	strh	r0, [r4, #0]
 8025d28:	3402      	adds	r4, #2
 8025d2a:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025d2e:	f1ba 0f01 	cmp.w	sl, #1
 8025d32:	dd22      	ble.n	8025d7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025d34:	783b      	ldrb	r3, [r7, #0]
 8025d36:	091b      	lsrs	r3, r3, #4
 8025d38:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025d3c:	0e0b      	lsrs	r3, r1, #24
 8025d3e:	d006      	beq.n	8025d4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025d40:	8822      	ldrh	r2, [r4, #0]
 8025d42:	9300      	str	r3, [sp, #0]
 8025d44:	4640      	mov	r0, r8
 8025d46:	464b      	mov	r3, r9
 8025d48:	f7ff ff30 	bl	8025bac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025d4c:	8020      	strh	r0, [r4, #0]
 8025d4e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025d52:	f003 030f 	and.w	r3, r3, #15
 8025d56:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025d5a:	0e0b      	lsrs	r3, r1, #24
 8025d5c:	d006      	beq.n	8025d6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025d5e:	8862      	ldrh	r2, [r4, #2]
 8025d60:	9300      	str	r3, [sp, #0]
 8025d62:	4640      	mov	r0, r8
 8025d64:	464b      	mov	r3, r9
 8025d66:	f7ff ff21 	bl	8025bac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025d6a:	8060      	strh	r0, [r4, #2]
 8025d6c:	3404      	adds	r4, #4
 8025d6e:	f1aa 0a02 	sub.w	sl, sl, #2
 8025d72:	e7dc      	b.n	8025d2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025d74:	462f      	mov	r7, r5
 8025d76:	46da      	mov	sl, fp
 8025d78:	e7d9      	b.n	8025d2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025d7a:	d10d      	bne.n	8025d98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025d7c:	783b      	ldrb	r3, [r7, #0]
 8025d7e:	091b      	lsrs	r3, r3, #4
 8025d80:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025d84:	0e0b      	lsrs	r3, r1, #24
 8025d86:	d006      	beq.n	8025d96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025d88:	8822      	ldrh	r2, [r4, #0]
 8025d8a:	9300      	str	r3, [sp, #0]
 8025d8c:	4640      	mov	r0, r8
 8025d8e:	464b      	mov	r3, r9
 8025d90:	f7ff ff0c 	bl	8025bac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025d94:	8020      	strh	r0, [r4, #0]
 8025d96:	3402      	adds	r4, #2
 8025d98:	9b06      	ldr	r3, [sp, #24]
 8025d9a:	9a02      	ldr	r2, [sp, #8]
 8025d9c:	881b      	ldrh	r3, [r3, #0]
 8025d9e:	eba3 030b 	sub.w	r3, r3, fp
 8025da2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025da6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025daa:	4413      	add	r3, r2
 8025dac:	9a07      	ldr	r2, [sp, #28]
 8025dae:	fb93 f3f2 	sdiv	r3, r3, r2
 8025db2:	441d      	add	r5, r3
 8025db4:	e7a3      	b.n	8025cfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025db6:	9b05      	ldr	r3, [sp, #20]
 8025db8:	6818      	ldr	r0, [r3, #0]
 8025dba:	6803      	ldr	r3, [r0, #0]
 8025dbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025dbe:	4798      	blx	r3
 8025dc0:	b00d      	add	sp, #52	@ 0x34
 8025dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025dc6:	bf00      	nop
 8025dc8:	20013f60 	.word	0x20013f60
 8025dcc:	20013f5a 	.word	0x20013f5a

08025dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025dd0:	b570      	push	{r4, r5, r6, lr}
 8025dd2:	1214      	asrs	r4, r2, #8
 8025dd4:	788d      	ldrb	r5, [r1, #2]
 8025dd6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025dda:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025dde:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025de2:	fb15 f503 	smulbb	r5, r5, r3
 8025de6:	fb04 5506 	mla	r5, r4, r6, r5
 8025dea:	10d0      	asrs	r0, r2, #3
 8025dec:	784c      	ldrb	r4, [r1, #1]
 8025dee:	7809      	ldrb	r1, [r1, #0]
 8025df0:	00d2      	lsls	r2, r2, #3
 8025df2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8025df6:	b2d2      	uxtb	r2, r2
 8025df8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025dfc:	fb14 f403 	smulbb	r4, r4, r3
 8025e00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025e04:	fb11 f303 	smulbb	r3, r1, r3
 8025e08:	fb00 4406 	mla	r4, r0, r6, r4
 8025e0c:	fb02 3306 	mla	r3, r2, r6, r3
 8025e10:	b2ad      	uxth	r5, r5
 8025e12:	b29b      	uxth	r3, r3
 8025e14:	b2a4      	uxth	r4, r4
 8025e16:	1c68      	adds	r0, r5, #1
 8025e18:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025e1c:	1c62      	adds	r2, r4, #1
 8025e1e:	1c58      	adds	r0, r3, #1
 8025e20:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025e24:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025e28:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025e2c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025e30:	0964      	lsrs	r4, r4, #5
 8025e32:	4328      	orrs	r0, r5
 8025e34:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025e38:	4320      	orrs	r0, r4
 8025e3a:	bd70      	pop	{r4, r5, r6, pc}

08025e3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e40:	b08f      	sub	sp, #60	@ 0x3c
 8025e42:	461c      	mov	r4, r3
 8025e44:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8025e48:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025e4a:	4682      	mov	sl, r0
 8025e4c:	460e      	mov	r6, r1
 8025e4e:	4615      	mov	r5, r2
 8025e50:	2f00      	cmp	r7, #0
 8025e52:	f000 8142 	beq.w	80260da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025e56:	6820      	ldr	r0, [r4, #0]
 8025e58:	6861      	ldr	r1, [r4, #4]
 8025e5a:	aa0a      	add	r2, sp, #40	@ 0x28
 8025e5c:	c203      	stmia	r2!, {r0, r1}
 8025e5e:	6818      	ldr	r0, [r3, #0]
 8025e60:	6859      	ldr	r1, [r3, #4]
 8025e62:	aa0c      	add	r2, sp, #48	@ 0x30
 8025e64:	c203      	stmia	r2!, {r0, r1}
 8025e66:	a80a      	add	r0, sp, #40	@ 0x28
 8025e68:	f7ee f964 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e6c:	4621      	mov	r1, r4
 8025e6e:	a80c      	add	r0, sp, #48	@ 0x30
 8025e70:	f7ee f988 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025e74:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8025e78:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8025e7c:	f002 0301 	and.w	r3, r2, #1
 8025e80:	9306      	str	r3, [sp, #24]
 8025e82:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025e86:	f003 0101 	and.w	r1, r3, #1
 8025e8a:	9105      	str	r1, [sp, #20]
 8025e8c:	9805      	ldr	r0, [sp, #20]
 8025e8e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8025e92:	4403      	add	r3, r0
 8025e94:	fb01 2303 	mla	r3, r1, r3, r2
 8025e98:	f04f 0802 	mov.w	r8, #2
 8025e9c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ea0:	441e      	add	r6, r3
 8025ea2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8025ea6:	441a      	add	r2, r3
 8025ea8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025eac:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025eb0:	4419      	add	r1, r3
 8025eb2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8025eb6:	9303      	str	r3, [sp, #12]
 8025eb8:	4b89      	ldr	r3, [pc, #548]	@ (80260e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025eba:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8025ebe:	6818      	ldr	r0, [r3, #0]
 8025ec0:	6803      	ldr	r3, [r0, #0]
 8025ec2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025ec4:	4798      	blx	r3
 8025ec6:	4a87      	ldr	r2, [pc, #540]	@ (80260e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025ec8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8025ecc:	8813      	ldrh	r3, [r2, #0]
 8025ece:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8025ed2:	2fff      	cmp	r7, #255	@ 0xff
 8025ed4:	fb03 9404 	mla	r4, r3, r4, r9
 8025ed8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025edc:	f105 0504 	add.w	r5, r5, #4
 8025ee0:	4694      	mov	ip, r2
 8025ee2:	fb03 f30b 	mul.w	r3, r3, fp
 8025ee6:	d071      	beq.n	8025fcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025ee8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025eec:	43f9      	mvns	r1, r7
 8025eee:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025ef2:	b2c9      	uxtb	r1, r1
 8025ef4:	9104      	str	r1, [sp, #16]
 8025ef6:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8025efa:	9b07      	ldr	r3, [sp, #28]
 8025efc:	42a3      	cmp	r3, r4
 8025efe:	f240 80e7 	bls.w	80260d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025f02:	9b06      	ldr	r3, [sp, #24]
 8025f04:	2b00      	cmp	r3, #0
 8025f06:	d03d      	beq.n	8025f84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025f08:	7831      	ldrb	r1, [r6, #0]
 8025f0a:	9b04      	ldr	r3, [sp, #16]
 8025f0c:	8822      	ldrh	r2, [r4, #0]
 8025f0e:	9300      	str	r3, [sp, #0]
 8025f10:	f001 010f 	and.w	r1, r1, #15
 8025f14:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025f18:	463b      	mov	r3, r7
 8025f1a:	4429      	add	r1, r5
 8025f1c:	4650      	mov	r0, sl
 8025f1e:	f7ff ff57 	bl	8025dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025f22:	9b03      	ldr	r3, [sp, #12]
 8025f24:	f824 0b02 	strh.w	r0, [r4], #2
 8025f28:	f106 0801 	add.w	r8, r6, #1
 8025f2c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025f30:	f1bb 0f01 	cmp.w	fp, #1
 8025f34:	46a1      	mov	r9, r4
 8025f36:	f104 0404 	add.w	r4, r4, #4
 8025f3a:	dd27      	ble.n	8025f8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025f3c:	f898 1000 	ldrb.w	r1, [r8]
 8025f40:	9b04      	ldr	r3, [sp, #16]
 8025f42:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025f46:	9300      	str	r3, [sp, #0]
 8025f48:	0909      	lsrs	r1, r1, #4
 8025f4a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025f4e:	463b      	mov	r3, r7
 8025f50:	4429      	add	r1, r5
 8025f52:	4650      	mov	r0, sl
 8025f54:	f7ff ff3c 	bl	8025dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025f58:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025f5c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025f60:	9b04      	ldr	r3, [sp, #16]
 8025f62:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025f66:	9300      	str	r3, [sp, #0]
 8025f68:	f001 010f 	and.w	r1, r1, #15
 8025f6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025f70:	463b      	mov	r3, r7
 8025f72:	4429      	add	r1, r5
 8025f74:	4650      	mov	r0, sl
 8025f76:	f7ff ff2b 	bl	8025dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025f7a:	f1ab 0b02 	sub.w	fp, fp, #2
 8025f7e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025f82:	e7d5      	b.n	8025f30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025f84:	46b0      	mov	r8, r6
 8025f86:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025f8a:	e7d1      	b.n	8025f30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025f8c:	d10f      	bne.n	8025fae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025f8e:	f898 1000 	ldrb.w	r1, [r8]
 8025f92:	9b04      	ldr	r3, [sp, #16]
 8025f94:	f8b9 2000 	ldrh.w	r2, [r9]
 8025f98:	9300      	str	r3, [sp, #0]
 8025f9a:	0909      	lsrs	r1, r1, #4
 8025f9c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025fa0:	463b      	mov	r3, r7
 8025fa2:	4429      	add	r1, r5
 8025fa4:	4650      	mov	r0, sl
 8025fa6:	f7ff ff13 	bl	8025dd0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025faa:	f829 0b02 	strh.w	r0, [r9], #2
 8025fae:	9b08      	ldr	r3, [sp, #32]
 8025fb0:	9a05      	ldr	r2, [sp, #20]
 8025fb2:	881c      	ldrh	r4, [r3, #0]
 8025fb4:	9b03      	ldr	r3, [sp, #12]
 8025fb6:	1ae4      	subs	r4, r4, r3
 8025fb8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025fbc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025fc0:	4413      	add	r3, r2
 8025fc2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025fc4:	fb93 f3f2 	sdiv	r3, r3, r2
 8025fc8:	441e      	add	r6, r3
 8025fca:	e796      	b.n	8025efa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025fcc:	4f46      	ldr	r7, [pc, #280]	@ (80260e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025fce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025fd2:	42a3      	cmp	r3, r4
 8025fd4:	d97c      	bls.n	80260d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025fd6:	9a06      	ldr	r2, [sp, #24]
 8025fd8:	2a00      	cmp	r2, #0
 8025fda:	d054      	beq.n	8026086 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025fdc:	7830      	ldrb	r0, [r6, #0]
 8025fde:	f000 000f 	and.w	r0, r0, #15
 8025fe2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025fe6:	eb05 0e00 	add.w	lr, r5, r0
 8025fea:	5c28      	ldrb	r0, [r5, r0]
 8025fec:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025ff0:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025ff4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025ff8:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8025ffc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026000:	ea42 020e 	orr.w	r2, r2, lr
 8026004:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026008:	f824 2b02 	strh.w	r2, [r4], #2
 802600c:	9a03      	ldr	r2, [sp, #12]
 802600e:	1c71      	adds	r1, r6, #1
 8026010:	f102 3eff 	add.w	lr, r2, #4294967295
 8026014:	f1be 0f01 	cmp.w	lr, #1
 8026018:	4620      	mov	r0, r4
 802601a:	f104 0404 	add.w	r4, r4, #4
 802601e:	dd36      	ble.n	802608e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026020:	7808      	ldrb	r0, [r1, #0]
 8026022:	0900      	lsrs	r0, r0, #4
 8026024:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026028:	eb05 0a00 	add.w	sl, r5, r0
 802602c:	f1ae 0e02 	sub.w	lr, lr, #2
 8026030:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026034:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026038:	00d2      	lsls	r2, r2, #3
 802603a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802603e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026042:	ea49 0202 	orr.w	r2, r9, r2
 8026046:	f815 9000 	ldrb.w	r9, [r5, r0]
 802604a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802604e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8026052:	f811 0b01 	ldrb.w	r0, [r1], #1
 8026056:	f000 000f 	and.w	r0, r0, #15
 802605a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802605e:	eb05 0a00 	add.w	sl, r5, r0
 8026062:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026066:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802606a:	00d2      	lsls	r2, r2, #3
 802606c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026070:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026074:	ea49 0202 	orr.w	r2, r9, r2
 8026078:	f815 9000 	ldrb.w	r9, [r5, r0]
 802607c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026080:	f824 2c02 	strh.w	r2, [r4, #-2]
 8026084:	e7c6      	b.n	8026014 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026086:	4631      	mov	r1, r6
 8026088:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802608c:	e7c2      	b.n	8026014 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802608e:	d111      	bne.n	80260b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026090:	7809      	ldrb	r1, [r1, #0]
 8026092:	0909      	lsrs	r1, r1, #4
 8026094:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026098:	186c      	adds	r4, r5, r1
 802609a:	5c69      	ldrb	r1, [r5, r1]
 802609c:	78a2      	ldrb	r2, [r4, #2]
 802609e:	7864      	ldrb	r4, [r4, #1]
 80260a0:	00e4      	lsls	r4, r4, #3
 80260a2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80260a6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80260aa:	4322      	orrs	r2, r4
 80260ac:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80260b0:	f820 2b02 	strh.w	r2, [r0], #2
 80260b4:	9a03      	ldr	r2, [sp, #12]
 80260b6:	f8bc 4000 	ldrh.w	r4, [ip]
 80260ba:	9905      	ldr	r1, [sp, #20]
 80260bc:	1aa4      	subs	r4, r4, r2
 80260be:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80260c2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80260c6:	440a      	add	r2, r1
 80260c8:	fb92 f2f8 	sdiv	r2, r2, r8
 80260cc:	4416      	add	r6, r2
 80260ce:	e780      	b.n	8025fd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80260d0:	4b03      	ldr	r3, [pc, #12]	@ (80260e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80260d2:	6818      	ldr	r0, [r3, #0]
 80260d4:	6803      	ldr	r3, [r0, #0]
 80260d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80260d8:	4798      	blx	r3
 80260da:	b00f      	add	sp, #60	@ 0x3c
 80260dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80260e0:	20013f60 	.word	0x20013f60
 80260e4:	20013f5a 	.word	0x20013f5a
 80260e8:	fffff800 	.word	0xfffff800

080260ec <CRC_Lock>:
 80260ec:	b530      	push	{r4, r5, lr}
 80260ee:	4a2d      	ldr	r2, [pc, #180]	@ (80261a4 <CRC_Lock+0xb8>)
 80260f0:	6813      	ldr	r3, [r2, #0]
 80260f2:	f023 0301 	bic.w	r3, r3, #1
 80260f6:	6013      	str	r3, [r2, #0]
 80260f8:	4b2b      	ldr	r3, [pc, #172]	@ (80261a8 <CRC_Lock+0xbc>)
 80260fa:	681c      	ldr	r4, [r3, #0]
 80260fc:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8026100:	4014      	ands	r4, r2
 8026102:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8026106:	42ac      	cmp	r4, r5
 8026108:	d005      	beq.n	8026116 <CRC_Lock+0x2a>
 802610a:	681c      	ldr	r4, [r3, #0]
 802610c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8026110:	4014      	ands	r4, r2
 8026112:	42ac      	cmp	r4, r5
 8026114:	d125      	bne.n	8026162 <CRC_Lock+0x76>
 8026116:	4b25      	ldr	r3, [pc, #148]	@ (80261ac <CRC_Lock+0xc0>)
 8026118:	681b      	ldr	r3, [r3, #0]
 802611a:	2b00      	cmp	r3, #0
 802611c:	d139      	bne.n	8026192 <CRC_Lock+0xa6>
 802611e:	4b24      	ldr	r3, [pc, #144]	@ (80261b0 <CRC_Lock+0xc4>)
 8026120:	681a      	ldr	r2, [r3, #0]
 8026122:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026126:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802612a:	d00d      	beq.n	8026148 <CRC_Lock+0x5c>
 802612c:	681a      	ldr	r2, [r3, #0]
 802612e:	f240 4483 	movw	r4, #1155	@ 0x483
 8026132:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026136:	42a2      	cmp	r2, r4
 8026138:	d006      	beq.n	8026148 <CRC_Lock+0x5c>
 802613a:	681b      	ldr	r3, [r3, #0]
 802613c:	f240 4285 	movw	r2, #1157	@ 0x485
 8026140:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026144:	4293      	cmp	r3, r2
 8026146:	d124      	bne.n	8026192 <CRC_Lock+0xa6>
 8026148:	4b1a      	ldr	r3, [pc, #104]	@ (80261b4 <CRC_Lock+0xc8>)
 802614a:	2201      	movs	r2, #1
 802614c:	601a      	str	r2, [r3, #0]
 802614e:	681a      	ldr	r2, [r3, #0]
 8026150:	2a00      	cmp	r2, #0
 8026152:	d1fc      	bne.n	802614e <CRC_Lock+0x62>
 8026154:	4b18      	ldr	r3, [pc, #96]	@ (80261b8 <CRC_Lock+0xcc>)
 8026156:	6018      	str	r0, [r3, #0]
 8026158:	6818      	ldr	r0, [r3, #0]
 802615a:	1a43      	subs	r3, r0, r1
 802615c:	4258      	negs	r0, r3
 802615e:	4158      	adcs	r0, r3
 8026160:	e00e      	b.n	8026180 <CRC_Lock+0x94>
 8026162:	681b      	ldr	r3, [r3, #0]
 8026164:	4013      	ands	r3, r2
 8026166:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802616a:	4293      	cmp	r3, r2
 802616c:	d111      	bne.n	8026192 <CRC_Lock+0xa6>
 802616e:	4b13      	ldr	r3, [pc, #76]	@ (80261bc <CRC_Lock+0xd0>)
 8026170:	681b      	ldr	r3, [r3, #0]
 8026172:	f240 4286 	movw	r2, #1158	@ 0x486
 8026176:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802617a:	4293      	cmp	r3, r2
 802617c:	d001      	beq.n	8026182 <CRC_Lock+0x96>
 802617e:	2000      	movs	r0, #0
 8026180:	bd30      	pop	{r4, r5, pc}
 8026182:	4b0f      	ldr	r3, [pc, #60]	@ (80261c0 <CRC_Lock+0xd4>)
 8026184:	2201      	movs	r2, #1
 8026186:	601a      	str	r2, [r3, #0]
 8026188:	681a      	ldr	r2, [r3, #0]
 802618a:	2a00      	cmp	r2, #0
 802618c:	d1fc      	bne.n	8026188 <CRC_Lock+0x9c>
 802618e:	4b0d      	ldr	r3, [pc, #52]	@ (80261c4 <CRC_Lock+0xd8>)
 8026190:	e7e1      	b.n	8026156 <CRC_Lock+0x6a>
 8026192:	4b0d      	ldr	r3, [pc, #52]	@ (80261c8 <CRC_Lock+0xdc>)
 8026194:	2201      	movs	r2, #1
 8026196:	601a      	str	r2, [r3, #0]
 8026198:	681a      	ldr	r2, [r3, #0]
 802619a:	2a00      	cmp	r2, #0
 802619c:	d1fc      	bne.n	8026198 <CRC_Lock+0xac>
 802619e:	4b0b      	ldr	r3, [pc, #44]	@ (80261cc <CRC_Lock+0xe0>)
 80261a0:	e7d9      	b.n	8026156 <CRC_Lock+0x6a>
 80261a2:	bf00      	nop
 80261a4:	e0002000 	.word	0xe0002000
 80261a8:	e000ed00 	.word	0xe000ed00
 80261ac:	e0042000 	.word	0xe0042000
 80261b0:	5c001000 	.word	0x5c001000
 80261b4:	58024c08 	.word	0x58024c08
 80261b8:	58024c00 	.word	0x58024c00
 80261bc:	46008ff0 	.word	0x46008ff0
 80261c0:	46024c08 	.word	0x46024c08
 80261c4:	46024c00 	.word	0x46024c00
 80261c8:	40023008 	.word	0x40023008
 80261cc:	40023000 	.word	0x40023000

080261d0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80261d0:	6101      	str	r1, [r0, #16]
 80261d2:	4770      	bx	lr

080261d4 <_ZN8touchgfx8Gestures4tickEv>:
 80261d4:	7b83      	ldrb	r3, [r0, #14]
 80261d6:	b14b      	cbz	r3, 80261ec <_ZN8touchgfx8Gestures4tickEv+0x18>
 80261d8:	8903      	ldrh	r3, [r0, #8]
 80261da:	3301      	adds	r3, #1
 80261dc:	b29b      	uxth	r3, r3
 80261de:	2b07      	cmp	r3, #7
 80261e0:	8103      	strh	r3, [r0, #8]
 80261e2:	bf81      	itttt	hi
 80261e4:	2300      	movhi	r3, #0
 80261e6:	8143      	strhhi	r3, [r0, #10]
 80261e8:	8183      	strhhi	r3, [r0, #12]
 80261ea:	7383      	strbhi	r3, [r0, #14]
 80261ec:	4770      	bx	lr
	...

080261f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80261f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80261f4:	4698      	mov	r8, r3
 80261f6:	8883      	ldrh	r3, [r0, #4]
 80261f8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80261fc:	eba8 0303 	sub.w	r3, r8, r3
 8026200:	b21b      	sxth	r3, r3
 8026202:	4604      	mov	r4, r0
 8026204:	2b00      	cmp	r3, #0
 8026206:	4617      	mov	r7, r2
 8026208:	4a18      	ldr	r2, [pc, #96]	@ (802626c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802620a:	9200      	str	r2, [sp, #0]
 802620c:	bfb8      	it	lt
 802620e:	425b      	neglt	r3, r3
 8026210:	8aa2      	ldrh	r2, [r4, #20]
 8026212:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8026216:	f8ad 800a 	strh.w	r8, [sp, #10]
 802621a:	b21b      	sxth	r3, r3
 802621c:	460e      	mov	r6, r1
 802621e:	4293      	cmp	r3, r2
 8026220:	88c1      	ldrh	r1, [r0, #6]
 8026222:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026226:	f04f 0000 	mov.w	r0, #0
 802622a:	f88d 0004 	strb.w	r0, [sp, #4]
 802622e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026232:	dc07      	bgt.n	8026244 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026234:	1a69      	subs	r1, r5, r1
 8026236:	b209      	sxth	r1, r1
 8026238:	2900      	cmp	r1, #0
 802623a:	bfb8      	it	lt
 802623c:	4249      	neglt	r1, r1
 802623e:	b209      	sxth	r1, r1
 8026240:	428a      	cmp	r2, r1
 8026242:	da10      	bge.n	8026266 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026244:	6920      	ldr	r0, [r4, #16]
 8026246:	6803      	ldr	r3, [r0, #0]
 8026248:	4669      	mov	r1, sp
 802624a:	685b      	ldr	r3, [r3, #4]
 802624c:	4798      	blx	r3
 802624e:	eba8 0606 	sub.w	r6, r8, r6
 8026252:	2300      	movs	r3, #0
 8026254:	1bef      	subs	r7, r5, r7
 8026256:	2001      	movs	r0, #1
 8026258:	8123      	strh	r3, [r4, #8]
 802625a:	8166      	strh	r6, [r4, #10]
 802625c:	81a7      	strh	r7, [r4, #12]
 802625e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026262:	80e5      	strh	r5, [r4, #6]
 8026264:	73a0      	strb	r0, [r4, #14]
 8026266:	b004      	add	sp, #16
 8026268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802626c:	0802b380 	.word	0x0802b380

08026270 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026272:	461e      	mov	r6, r3
 8026274:	1e4b      	subs	r3, r1, #1
 8026276:	2b01      	cmp	r3, #1
 8026278:	b085      	sub	sp, #20
 802627a:	4604      	mov	r4, r0
 802627c:	460d      	mov	r5, r1
 802627e:	4617      	mov	r7, r2
 8026280:	d84b      	bhi.n	802631a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026282:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026286:	1cd3      	adds	r3, r2, #3
 8026288:	b29b      	uxth	r3, r3
 802628a:	2b06      	cmp	r3, #6
 802628c:	d916      	bls.n	80262bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802628e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8026330 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026292:	f8cd c004 	str.w	ip, [sp, #4]
 8026296:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802629a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802629e:	6900      	ldr	r0, [r0, #16]
 80262a0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80262a4:	f04f 0c00 	mov.w	ip, #0
 80262a8:	f88d c008 	strb.w	ip, [sp, #8]
 80262ac:	f8ad 200a 	strh.w	r2, [sp, #10]
 80262b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80262b4:	6803      	ldr	r3, [r0, #0]
 80262b6:	a901      	add	r1, sp, #4
 80262b8:	689b      	ldr	r3, [r3, #8]
 80262ba:	4798      	blx	r3
 80262bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80262c0:	1cd3      	adds	r3, r2, #3
 80262c2:	b29b      	uxth	r3, r3
 80262c4:	2b06      	cmp	r3, #6
 80262c6:	d916      	bls.n	80262f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80262c8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8026330 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80262cc:	f8cd c004 	str.w	ip, [sp, #4]
 80262d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80262d4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80262d8:	6920      	ldr	r0, [r4, #16]
 80262da:	f8ad 100c 	strh.w	r1, [sp, #12]
 80262de:	f04f 0c01 	mov.w	ip, #1
 80262e2:	f88d c008 	strb.w	ip, [sp, #8]
 80262e6:	f8ad 200a 	strh.w	r2, [sp, #10]
 80262ea:	f8ad 300e 	strh.w	r3, [sp, #14]
 80262ee:	6803      	ldr	r3, [r0, #0]
 80262f0:	a901      	add	r1, sp, #4
 80262f2:	689b      	ldr	r3, [r3, #8]
 80262f4:	4798      	blx	r3
 80262f6:	4b0d      	ldr	r3, [pc, #52]	@ (802632c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80262f8:	9301      	str	r3, [sp, #4]
 80262fa:	6920      	ldr	r0, [r4, #16]
 80262fc:	f88d 5008 	strb.w	r5, [sp, #8]
 8026300:	2300      	movs	r3, #0
 8026302:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026306:	f8ad 600c 	strh.w	r6, [sp, #12]
 802630a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802630e:	6803      	ldr	r3, [r0, #0]
 8026310:	a901      	add	r1, sp, #4
 8026312:	681b      	ldr	r3, [r3, #0]
 8026314:	4798      	blx	r3
 8026316:	b005      	add	sp, #20
 8026318:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802631a:	2900      	cmp	r1, #0
 802631c:	d1eb      	bne.n	80262f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802631e:	80a2      	strh	r2, [r4, #4]
 8026320:	80c6      	strh	r6, [r0, #6]
 8026322:	60a1      	str	r1, [r4, #8]
 8026324:	81a1      	strh	r1, [r4, #12]
 8026326:	73a1      	strb	r1, [r4, #14]
 8026328:	e7e5      	b.n	80262f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802632a:	bf00      	nop
 802632c:	0802b36c 	.word	0x0802b36c
 8026330:	0802b394 	.word	0x0802b394

08026334 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8026334:	10c9      	asrs	r1, r1, #3
 8026336:	2900      	cmp	r1, #0
 8026338:	bfb8      	it	lt
 802633a:	4249      	neglt	r1, r1
 802633c:	2801      	cmp	r0, #1
 802633e:	d108      	bne.n	8026352 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8026340:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026344:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8026348:	4601      	mov	r1, r0
 802634a:	dd02      	ble.n	8026352 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802634c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8026350:	4770      	bx	lr
 8026352:	29ff      	cmp	r1, #255	@ 0xff
 8026354:	bfa8      	it	ge
 8026356:	21ff      	movge	r1, #255	@ 0xff
 8026358:	4608      	mov	r0, r1
 802635a:	4770      	bx	lr

0802635c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802635c:	b410      	push	{r4}
 802635e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026362:	429c      	cmp	r4, r3
 8026364:	d803      	bhi.n	802636e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026366:	f85d 4b04 	ldr.w	r4, [sp], #4
 802636a:	f7ec b9d5 	b.w	8012718 <_ZN8touchgfx7Outline6lineToEii>
 802636e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026372:	4770      	bx	lr

08026374 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026378:	b08b      	sub	sp, #44	@ 0x2c
 802637a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802637e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8026382:	9308      	str	r3, [sp, #32]
 8026384:	4606      	mov	r6, r0
 8026386:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 802638a:	9309      	str	r3, [sp, #36]	@ 0x24
 802638c:	468a      	mov	sl, r1
 802638e:	f7ec fb30 	bl	80129f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026392:	68b5      	ldr	r5, [r6, #8]
 8026394:	4604      	mov	r4, r0
 8026396:	2d00      	cmp	r5, #0
 8026398:	d044      	beq.n	8026424 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802639a:	6873      	ldr	r3, [r6, #4]
 802639c:	42ab      	cmp	r3, r5
 802639e:	d33d      	bcc.n	802641c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80263a0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80263a4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 80263a8:	eb02 0b03 	add.w	fp, r2, r3
 80263ac:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80263b0:	fb02 1203 	mla	r2, r2, r3, r1
 80263b4:	9205      	str	r2, [sp, #20]
 80263b6:	1e6a      	subs	r2, r5, #1
 80263b8:	9204      	str	r2, [sp, #16]
 80263ba:	f04f 0800 	mov.w	r8, #0
 80263be:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80263c2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80263c6:	454b      	cmp	r3, r9
 80263c8:	463a      	mov	r2, r7
 80263ca:	d008      	beq.n	80263de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80263cc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 80263d0:	eb03 0b09 	add.w	fp, r3, r9
 80263d4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80263d8:	fb03 1309 	mla	r3, r3, r9, r1
 80263dc:	9305      	str	r3, [sp, #20]
 80263de:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80263e2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80263e6:	4498      	add	r8, r3
 80263e8:	9b04      	ldr	r3, [sp, #16]
 80263ea:	3b01      	subs	r3, #1
 80263ec:	9304      	str	r3, [sp, #16]
 80263ee:	9b04      	ldr	r3, [sp, #16]
 80263f0:	3301      	adds	r3, #1
 80263f2:	d015      	beq.n	8026420 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80263f4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80263f8:	42bb      	cmp	r3, r7
 80263fa:	d117      	bne.n	802642c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80263fc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026400:	9b04      	ldr	r3, [sp, #16]
 8026402:	4548      	cmp	r0, r9
 8026404:	f103 33ff 	add.w	r3, r3, #4294967295
 8026408:	d17f      	bne.n	802650a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802640a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802640e:	4401      	add	r1, r0
 8026410:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026414:	4480      	add	r8, r0
 8026416:	e7e9      	b.n	80263ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026418:	461f      	mov	r7, r3
 802641a:	e044      	b.n	80264a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802641c:	2000      	movs	r0, #0
 802641e:	e002      	b.n	8026426 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026420:	2900      	cmp	r1, #0
 8026422:	d16f      	bne.n	8026504 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026424:	2001      	movs	r0, #1
 8026426:	b00b      	add	sp, #44	@ 0x2c
 8026428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802642c:	2900      	cmp	r1, #0
 802642e:	d030      	beq.n	8026492 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026430:	2f00      	cmp	r7, #0
 8026432:	db29      	blt.n	8026488 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026434:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8026438:	42bb      	cmp	r3, r7
 802643a:	dd25      	ble.n	8026488 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802643c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026440:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8026444:	f7ff ff76 	bl	8026334 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8026448:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802644a:	fb10 f003 	smulbb	r0, r0, r3
 802644e:	b280      	uxth	r0, r0
 8026450:	1c41      	adds	r1, r0, #1
 8026452:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026456:	1209      	asrs	r1, r1, #8
 8026458:	f011 0fff 	tst.w	r1, #255	@ 0xff
 802645c:	d014      	beq.n	8026488 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802645e:	9808      	ldr	r0, [sp, #32]
 8026460:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8026462:	b2c9      	uxtb	r1, r1
 8026464:	b2ba      	uxth	r2, r7
 8026466:	9102      	str	r1, [sp, #8]
 8026468:	2101      	movs	r1, #1
 802646a:	4413      	add	r3, r2
 802646c:	9101      	str	r1, [sp, #4]
 802646e:	4402      	add	r2, r0
 8026470:	fa0f f18b 	sxth.w	r1, fp
 8026474:	f8da 0000 	ldr.w	r0, [sl]
 8026478:	9100      	str	r1, [sp, #0]
 802647a:	6941      	ldr	r1, [r0, #20]
 802647c:	b21b      	sxth	r3, r3
 802647e:	460d      	mov	r5, r1
 8026480:	b212      	sxth	r2, r2
 8026482:	9905      	ldr	r1, [sp, #20]
 8026484:	4650      	mov	r0, sl
 8026486:	47a8      	blx	r5
 8026488:	9b04      	ldr	r3, [sp, #16]
 802648a:	3301      	adds	r3, #1
 802648c:	f107 0201 	add.w	r2, r7, #1
 8026490:	d0c8      	beq.n	8026424 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026492:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026496:	1abb      	subs	r3, r7, r2
 8026498:	2b00      	cmp	r3, #0
 802649a:	dd31      	ble.n	8026500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802649c:	2a00      	cmp	r2, #0
 802649e:	dabb      	bge.n	8026418 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80264a0:	2f00      	cmp	r7, #0
 80264a2:	dd2d      	ble.n	8026500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80264a4:	2200      	movs	r2, #0
 80264a6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80264aa:	19d1      	adds	r1, r2, r7
 80264ac:	4299      	cmp	r1, r3
 80264ae:	db02      	blt.n	80264b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80264b0:	1a9f      	subs	r7, r3, r2
 80264b2:	2f00      	cmp	r7, #0
 80264b4:	dd24      	ble.n	8026500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80264b6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80264ba:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80264be:	f7ff ff39 	bl	8026334 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80264c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80264c4:	fb10 f003 	smulbb	r0, r0, r3
 80264c8:	b280      	uxth	r0, r0
 80264ca:	1c41      	adds	r1, r0, #1
 80264cc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80264d0:	1209      	asrs	r1, r1, #8
 80264d2:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80264d6:	d013      	beq.n	8026500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80264d8:	9808      	ldr	r0, [sp, #32]
 80264da:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80264dc:	b292      	uxth	r2, r2
 80264de:	b2c9      	uxtb	r1, r1
 80264e0:	4413      	add	r3, r2
 80264e2:	9102      	str	r1, [sp, #8]
 80264e4:	4402      	add	r2, r0
 80264e6:	b23f      	sxth	r7, r7
 80264e8:	f8da 0000 	ldr.w	r0, [sl]
 80264ec:	9701      	str	r7, [sp, #4]
 80264ee:	fa0f f18b 	sxth.w	r1, fp
 80264f2:	9100      	str	r1, [sp, #0]
 80264f4:	6947      	ldr	r7, [r0, #20]
 80264f6:	9905      	ldr	r1, [sp, #20]
 80264f8:	b21b      	sxth	r3, r3
 80264fa:	b212      	sxth	r2, r2
 80264fc:	4650      	mov	r0, sl
 80264fe:	47b8      	blx	r7
 8026500:	464b      	mov	r3, r9
 8026502:	e75c      	b.n	80263be <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026504:	2f00      	cmp	r7, #0
 8026506:	da95      	bge.n	8026434 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026508:	e78c      	b.n	8026424 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802650a:	2900      	cmp	r1, #0
 802650c:	d0f8      	beq.n	8026500 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802650e:	e78f      	b.n	8026430 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026510 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8026510:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026514:	461e      	mov	r6, r3
 8026516:	4b36      	ldr	r3, [pc, #216]	@ (80265f0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8026518:	e9c0 3100 	strd	r3, r1, [r0]
 802651c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8026520:	8103      	strh	r3, [r0, #8]
 8026522:	2500      	movs	r5, #0
 8026524:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8026528:	7283      	strb	r3, [r0, #10]
 802652a:	f100 0814 	add.w	r8, r0, #20
 802652e:	4604      	mov	r4, r0
 8026530:	8185      	strh	r5, [r0, #12]
 8026532:	81c5      	strh	r5, [r0, #14]
 8026534:	8205      	strh	r5, [r0, #16]
 8026536:	8245      	strh	r5, [r0, #18]
 8026538:	4640      	mov	r0, r8
 802653a:	4617      	mov	r7, r2
 802653c:	f7eb fc24 	bl	8011d88 <_ZN8touchgfx7OutlineC1Ev>
 8026540:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8026544:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8026548:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 802654c:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8026550:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8026554:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8026558:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 802655c:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8026560:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8026564:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8026568:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 802656c:	6830      	ldr	r0, [r6, #0]
 802656e:	6871      	ldr	r1, [r6, #4]
 8026570:	8872      	ldrh	r2, [r6, #2]
 8026572:	8835      	ldrh	r5, [r6, #0]
 8026574:	466b      	mov	r3, sp
 8026576:	c303      	stmia	r3!, {r0, r1}
 8026578:	887b      	ldrh	r3, [r7, #2]
 802657a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 802657e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8026582:	4413      	add	r3, r2
 8026584:	883a      	ldrh	r2, [r7, #0]
 8026586:	81e3      	strh	r3, [r4, #14]
 8026588:	442a      	add	r2, r5
 802658a:	81a2      	strh	r2, [r4, #12]
 802658c:	8220      	strh	r0, [r4, #16]
 802658e:	8261      	strh	r1, [r4, #18]
 8026590:	4668      	mov	r0, sp
 8026592:	4639      	mov	r1, r7
 8026594:	f7ed fdf6 	bl	8014184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026598:	f104 000c 	add.w	r0, r4, #12
 802659c:	f7ed fdca 	bl	8014134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80265a0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80265a4:	f8bd 2000 	ldrh.w	r2, [sp]
 80265a8:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 80265ac:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 80265b0:	4640      	mov	r0, r8
 80265b2:	f7eb fbcd 	bl	8011d50 <_ZN8touchgfx7Outline5resetEv>
 80265b6:	f9bd 3000 	ldrsh.w	r3, [sp]
 80265ba:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 80265be:	015b      	lsls	r3, r3, #5
 80265c0:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80265c2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80265c6:	015b      	lsls	r3, r3, #5
 80265c8:	6523      	str	r3, [r4, #80]	@ 0x50
 80265ca:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80265ce:	015b      	lsls	r3, r3, #5
 80265d0:	6563      	str	r3, [r4, #84]	@ 0x54
 80265d2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80265d6:	015b      	lsls	r3, r3, #5
 80265d8:	65a3      	str	r3, [r4, #88]	@ 0x58
 80265da:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 80265de:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 80265e2:	4620      	mov	r0, r4
 80265e4:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 80265e8:	b002      	add	sp, #8
 80265ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80265ee:	bf00      	nop
 80265f0:	0802b6d0 	.word	0x0802b6d0

080265f4 <_ZN8touchgfx6Canvas5closeEv>:
 80265f4:	b538      	push	{r3, r4, r5, lr}
 80265f6:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80265fa:	4604      	mov	r4, r0
 80265fc:	b193      	cbz	r3, 8026624 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80265fe:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8026602:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8026606:	4213      	tst	r3, r2
 8026608:	d10c      	bne.n	8026624 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802660a:	f100 0514 	add.w	r5, r0, #20
 802660e:	b123      	cbz	r3, 802661a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026610:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8026614:	4628      	mov	r0, r5
 8026616:	f7ff fea1 	bl	802635c <_ZN8touchgfx10Rasterizer6lineToEii>
 802661a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802661e:	4628      	mov	r0, r5
 8026620:	f7ff fe9c 	bl	802635c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026624:	2300      	movs	r3, #0
 8026626:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802662a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802662e:	4298      	cmp	r0, r3
 8026630:	bf34      	ite	cc
 8026632:	2000      	movcc	r0, #0
 8026634:	2001      	movcs	r0, #1
 8026636:	bd38      	pop	{r3, r4, r5, pc}

08026638 <_ZN8touchgfx6Canvas6renderEh>:
 8026638:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802663c:	7a85      	ldrb	r5, [r0, #10]
 802663e:	4369      	muls	r1, r5
 8026640:	1c4d      	adds	r5, r1, #1
 8026642:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026646:	122d      	asrs	r5, r5, #8
 8026648:	4604      	mov	r4, r0
 802664a:	f000 8099 	beq.w	8026780 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802664e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8026652:	2b00      	cmp	r3, #0
 8026654:	f000 8094 	beq.w	8026780 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8026658:	f7ff ffcc 	bl	80265f4 <_ZN8touchgfx6Canvas5closeEv>
 802665c:	4607      	mov	r7, r0
 802665e:	2800      	cmp	r0, #0
 8026660:	d045      	beq.n	80266ee <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8026662:	6860      	ldr	r0, [r4, #4]
 8026664:	4e47      	ldr	r6, [pc, #284]	@ (8026784 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8026666:	6803      	ldr	r3, [r0, #0]
 8026668:	6837      	ldr	r7, [r6, #0]
 802666a:	689b      	ldr	r3, [r3, #8]
 802666c:	4798      	blx	r3
 802666e:	4601      	mov	r1, r0
 8026670:	4638      	mov	r0, r7
 8026672:	f7e8 fa59 	bl	800eb28 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8026676:	4607      	mov	r7, r0
 8026678:	f7dc ff96 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 802667c:	6803      	ldr	r3, [r0, #0]
 802667e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8026680:	4798      	blx	r3
 8026682:	4680      	mov	r8, r0
 8026684:	f7dc ff90 	bl	80035a8 <_ZN8touchgfx3HAL3lcdEv>
 8026688:	6803      	ldr	r3, [r0, #0]
 802668a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802668c:	4798      	blx	r3
 802668e:	280b      	cmp	r0, #11
 8026690:	d85b      	bhi.n	802674a <_ZN8touchgfx6Canvas6renderEh+0x112>
 8026692:	e8df f000 	tbb	[pc, r0]
 8026696:	5c51      	.short	0x5c51
 8026698:	305a066c 	.word	0x305a066c
 802669c:	65656540 	.word	0x65656540
 80266a0:	6565      	.short	0x6565
 80266a2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80266a6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80266aa:	2208      	movs	r2, #8
 80266ac:	fb91 f2f2 	sdiv	r2, r1, r2
 80266b0:	fb08 2303 	mla	r3, r8, r3, r2
 80266b4:	441f      	add	r7, r3
 80266b6:	424b      	negs	r3, r1
 80266b8:	f003 0307 	and.w	r3, r3, #7
 80266bc:	f001 0107 	and.w	r1, r1, #7
 80266c0:	bf58      	it	pl
 80266c2:	4259      	negpl	r1, r3
 80266c4:	b2c9      	uxtb	r1, r1
 80266c6:	b2ed      	uxtb	r5, r5
 80266c8:	463a      	mov	r2, r7
 80266ca:	e9cd 1500 	strd	r1, r5, [sp]
 80266ce:	fa0f f388 	sxth.w	r3, r8
 80266d2:	6861      	ldr	r1, [r4, #4]
 80266d4:	f104 0014 	add.w	r0, r4, #20
 80266d8:	f7ff fe4c 	bl	8026374 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80266dc:	4607      	mov	r7, r0
 80266de:	6860      	ldr	r0, [r4, #4]
 80266e0:	6803      	ldr	r3, [r0, #0]
 80266e2:	691b      	ldr	r3, [r3, #16]
 80266e4:	4798      	blx	r3
 80266e6:	6830      	ldr	r0, [r6, #0]
 80266e8:	6803      	ldr	r3, [r0, #0]
 80266ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80266ec:	4798      	blx	r3
 80266ee:	4638      	mov	r0, r7
 80266f0:	b002      	add	sp, #8
 80266f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80266f6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80266fa:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80266fe:	2204      	movs	r2, #4
 8026700:	fb91 f2f2 	sdiv	r2, r1, r2
 8026704:	fb08 2303 	mla	r3, r8, r3, r2
 8026708:	441f      	add	r7, r3
 802670a:	424b      	negs	r3, r1
 802670c:	f003 0303 	and.w	r3, r3, #3
 8026710:	f001 0103 	and.w	r1, r1, #3
 8026714:	e7d4      	b.n	80266c0 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8026716:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802671a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802671e:	2900      	cmp	r1, #0
 8026720:	f04f 0202 	mov.w	r2, #2
 8026724:	fb91 f2f2 	sdiv	r2, r1, r2
 8026728:	f001 0101 	and.w	r1, r1, #1
 802672c:	fb08 2303 	mla	r3, r8, r3, r2
 8026730:	441f      	add	r7, r3
 8026732:	bfb8      	it	lt
 8026734:	4249      	neglt	r1, r1
 8026736:	e7c5      	b.n	80266c4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8026738:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802673c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026740:	fb08 f303 	mul.w	r3, r8, r3
 8026744:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026748:	441f      	add	r7, r3
 802674a:	2100      	movs	r1, #0
 802674c:	e7bb      	b.n	80266c6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802674e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026752:	fb08 f203 	mul.w	r2, r8, r3
 8026756:	89a3      	ldrh	r3, [r4, #12]
 8026758:	2103      	movs	r1, #3
 802675a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802675e:	e7f3      	b.n	8026748 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8026760:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026764:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026768:	fb08 2303 	mla	r3, r8, r3, r2
 802676c:	e7ec      	b.n	8026748 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802676e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8026772:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026776:	fb08 f303 	mul.w	r3, r8, r3
 802677a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802677e:	e7e3      	b.n	8026748 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8026780:	2701      	movs	r7, #1
 8026782:	e7b4      	b.n	80266ee <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8026784:	20013f60 	.word	0x20013f60

08026788 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8026788:	b510      	push	{r4, lr}
 802678a:	4b06      	ldr	r3, [pc, #24]	@ (80267a4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802678c:	781b      	ldrb	r3, [r3, #0]
 802678e:	2b01      	cmp	r3, #1
 8026790:	d107      	bne.n	80267a2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8026792:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8026796:	680b      	ldr	r3, [r1, #0]
 8026798:	6814      	ldr	r4, [r2, #0]
 802679a:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802679e:	6013      	str	r3, [r2, #0]
 80267a0:	600c      	str	r4, [r1, #0]
 80267a2:	bd10      	pop	{r4, pc}
 80267a4:	20013f58 	.word	0x20013f58

080267a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80267a8:	b513      	push	{r0, r1, r4, lr}
 80267aa:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80267ae:	4604      	mov	r4, r0
 80267b0:	e9cd 2100 	strd	r2, r1, [sp]
 80267b4:	b9a3      	cbnz	r3, 80267e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80267b6:	466a      	mov	r2, sp
 80267b8:	a901      	add	r1, sp, #4
 80267ba:	4620      	mov	r0, r4
 80267bc:	f7ff ffe4 	bl	8026788 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80267c0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80267c2:	9901      	ldr	r1, [sp, #4]
 80267c4:	9a00      	ldr	r2, [sp, #0]
 80267c6:	1ac9      	subs	r1, r1, r3
 80267c8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80267ca:	9101      	str	r1, [sp, #4]
 80267cc:	1ad2      	subs	r2, r2, r3
 80267ce:	2a00      	cmp	r2, #0
 80267d0:	9200      	str	r2, [sp, #0]
 80267d2:	da0b      	bge.n	80267ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80267d4:	2301      	movs	r3, #1
 80267d6:	2900      	cmp	r1, #0
 80267d8:	da0e      	bge.n	80267f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80267da:	f043 0304 	orr.w	r3, r3, #4
 80267de:	e013      	b.n	8026808 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80267e0:	f7ff ff08 	bl	80265f4 <_ZN8touchgfx6Canvas5closeEv>
 80267e4:	2800      	cmp	r0, #0
 80267e6:	d1e6      	bne.n	80267b6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80267e8:	b002      	add	sp, #8
 80267ea:	bd10      	pop	{r4, pc}
 80267ec:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80267ee:	429a      	cmp	r2, r3
 80267f0:	bfac      	ite	ge
 80267f2:	2302      	movge	r3, #2
 80267f4:	2300      	movlt	r3, #0
 80267f6:	e7ee      	b.n	80267d6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80267f8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80267fa:	4281      	cmp	r1, r0
 80267fc:	bfac      	ite	ge
 80267fe:	2008      	movge	r0, #8
 8026800:	2000      	movlt	r0, #0
 8026802:	4318      	orrs	r0, r3
 8026804:	b2c3      	uxtb	r3, r0
 8026806:	b158      	cbz	r0, 8026820 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026808:	2200      	movs	r2, #0
 802680a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802680e:	9901      	ldr	r1, [sp, #4]
 8026810:	9a00      	ldr	r2, [sp, #0]
 8026812:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8026814:	6722      	str	r2, [r4, #112]	@ 0x70
 8026816:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802681a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802681e:	e7e3      	b.n	80267e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026820:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8026824:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8026828:	4298      	cmp	r0, r3
 802682a:	d803      	bhi.n	8026834 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802682c:	f104 0014 	add.w	r0, r4, #20
 8026830:	f7eb ff8c 	bl	801274c <_ZN8touchgfx7Outline6moveToEii>
 8026834:	2301      	movs	r3, #1
 8026836:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802683a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802683e:	2300      	movs	r3, #0
 8026840:	e7e5      	b.n	802680e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026842 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026842:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026844:	ab02      	add	r3, sp, #8
 8026846:	4604      	mov	r4, r0
 8026848:	f843 2d08 	str.w	r2, [r3, #-8]!
 802684c:	9101      	str	r1, [sp, #4]
 802684e:	461a      	mov	r2, r3
 8026850:	a901      	add	r1, sp, #4
 8026852:	f7ff ff99 	bl	8026788 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026856:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8026858:	9901      	ldr	r1, [sp, #4]
 802685a:	9a00      	ldr	r2, [sp, #0]
 802685c:	1ac9      	subs	r1, r1, r3
 802685e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8026860:	9101      	str	r1, [sp, #4]
 8026862:	1ad2      	subs	r2, r2, r3
 8026864:	2a00      	cmp	r2, #0
 8026866:	9200      	str	r2, [sp, #0]
 8026868:	db1c      	blt.n	80268a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802686a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802686c:	429a      	cmp	r2, r3
 802686e:	bfac      	ite	ge
 8026870:	2002      	movge	r0, #2
 8026872:	2000      	movlt	r0, #0
 8026874:	2900      	cmp	r1, #0
 8026876:	db17      	blt.n	80268a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026878:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802687a:	4299      	cmp	r1, r3
 802687c:	bfac      	ite	ge
 802687e:	2308      	movge	r3, #8
 8026880:	2300      	movlt	r3, #0
 8026882:	4303      	orrs	r3, r0
 8026884:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8026888:	b2dd      	uxtb	r5, r3
 802688a:	b978      	cbnz	r0, 80268ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802688c:	f104 0014 	add.w	r0, r4, #20
 8026890:	f7ff fd64 	bl	802635c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026894:	9b01      	ldr	r3, [sp, #4]
 8026896:	6623      	str	r3, [r4, #96]	@ 0x60
 8026898:	9b00      	ldr	r3, [sp, #0]
 802689a:	6663      	str	r3, [r4, #100]	@ 0x64
 802689c:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80268a0:	b002      	add	sp, #8
 80268a2:	bd70      	pop	{r4, r5, r6, pc}
 80268a4:	2001      	movs	r0, #1
 80268a6:	e7e5      	b.n	8026874 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80268a8:	2304      	movs	r3, #4
 80268aa:	e7ea      	b.n	8026882 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80268ac:	b113      	cbz	r3, 80268b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80268ae:	ea10 0305 	ands.w	r3, r0, r5
 80268b2:	d11c      	bne.n	80268ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80268b4:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80268b8:	f104 0614 	add.w	r6, r4, #20
 80268bc:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 80268c0:	b98b      	cbnz	r3, 80268e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80268c2:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80268c6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80268ca:	4298      	cmp	r0, r3
 80268cc:	d802      	bhi.n	80268d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80268ce:	4630      	mov	r0, r6
 80268d0:	f7eb ff3c 	bl	801274c <_ZN8touchgfx7Outline6moveToEii>
 80268d4:	2301      	movs	r3, #1
 80268d6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80268da:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80268de:	e9dd 2100 	ldrd	r2, r1, [sp]
 80268e2:	4630      	mov	r0, r6
 80268e4:	e7d4      	b.n	8026890 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80268e6:	4630      	mov	r0, r6
 80268e8:	f7ff fd38 	bl	802635c <_ZN8touchgfx10Rasterizer6lineToEii>
 80268ec:	e7f7      	b.n	80268de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80268ee:	461d      	mov	r5, r3
 80268f0:	e7d0      	b.n	8026894 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080268f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 80268f4:	b538      	push	{r3, r4, r5, lr}
 80268f6:	ed2d 8b10 	vpush	{d8-d15}
 80268fa:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 80268fe:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 8026a68 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8026902:	4605      	mov	r5, r0
 8026904:	eeb0 ca40 	vmov.f32	s24, s0
 8026908:	eef0 ca60 	vmov.f32	s25, s1
 802690c:	eeb0 da41 	vmov.f32	s26, s2
 8026910:	eef0 da61 	vmov.f32	s27, s3
 8026914:	eeb0 ea42 	vmov.f32	s28, s4
 8026918:	eef0 ea62 	vmov.f32	s29, s5
 802691c:	460c      	mov	r4, r1
 802691e:	eef0 aa6b 	vmov.f32	s21, s23
 8026922:	2c08      	cmp	r4, #8
 8026924:	d86e      	bhi.n	8026a04 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8026926:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802692a:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802692e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8026932:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8026936:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802693a:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802693e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026942:	ee7c faad 	vadd.f32	s31, s25, s27
 8026946:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802694a:	ee3d aaae 	vadd.f32	s20, s27, s29
 802694e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8026952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026956:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802695a:	ee6f faab 	vmul.f32	s31, s31, s23
 802695e:	ee69 9aab 	vmul.f32	s19, s19, s23
 8026962:	ee2a aa2b 	vmul.f32	s20, s20, s23
 8026966:	bf48      	it	mi
 8026968:	eef1 7a67 	vnegmi.f32	s15, s15
 802696c:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8026970:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8026974:	eef4 7acb 	vcmpe.f32	s15, s22
 8026978:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802697c:	ee68 8aab 	vmul.f32	s17, s17, s23
 8026980:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8026984:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8026988:	dd3f      	ble.n	8026a0a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802698a:	ee27 7a07 	vmul.f32	s14, s14, s14
 802698e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8026992:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8026996:	ee27 7a06 	vmul.f32	s14, s14, s12
 802699a:	eef4 7ac7 	vcmpe.f32	s15, s14
 802699e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80269a2:	d847      	bhi.n	8026a34 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80269a4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80269a8:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80269ac:	f000 fa59 	bl	8026e62 <atan2f>
 80269b0:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 80269b4:	eeb0 8a40 	vmov.f32	s16, s0
 80269b8:	ee3d 0aec 	vsub.f32	s0, s27, s25
 80269bc:	f000 fa51 	bl	8026e62 <atan2f>
 80269c0:	ee38 0a40 	vsub.f32	s0, s16, s0
 80269c4:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8026a6c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 80269c8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80269cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80269d0:	bf48      	it	mi
 80269d2:	eeb1 0a40 	vnegmi.f32	s0, s0
 80269d6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80269da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80269de:	bfa4      	itt	ge
 80269e0:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8026a70 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 80269e4:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80269e8:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8026a74 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 80269ec:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80269f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80269f4:	d51e      	bpl.n	8026a34 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80269f6:	eef0 0a49 	vmov.f32	s1, s18
 80269fa:	eeb0 0a68 	vmov.f32	s0, s17
 80269fe:	4628      	mov	r0, r5
 8026a00:	f7e9 fa14 	bl	800fe2c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8026a04:	ecbd 8b10 	vpop	{d8-d15}
 8026a08:	bd38      	pop	{r3, r4, r5, pc}
 8026a0a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8026a0e:	eeb0 7a68 	vmov.f32	s14, s17
 8026a12:	eea7 7aea 	vfms.f32	s14, s15, s21
 8026a16:	ee7c 7aae 	vadd.f32	s15, s25, s29
 8026a1a:	eef0 6a49 	vmov.f32	s13, s18
 8026a1e:	eee7 6aea 	vfms.f32	s13, s15, s21
 8026a22:	ee66 7aa6 	vmul.f32	s15, s13, s13
 8026a26:	eee7 7a07 	vfma.f32	s15, s14, s14
 8026a2a:	eef4 7ac6 	vcmpe.f32	s15, s12
 8026a2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026a32:	d9e0      	bls.n	80269f6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8026a34:	3401      	adds	r4, #1
 8026a36:	eef0 0a6c 	vmov.f32	s1, s25
 8026a3a:	eeb0 0a4c 	vmov.f32	s0, s24
 8026a3e:	4621      	mov	r1, r4
 8026a40:	eef0 2a49 	vmov.f32	s5, s18
 8026a44:	eeb0 2a68 	vmov.f32	s4, s17
 8026a48:	eef0 1a6f 	vmov.f32	s3, s31
 8026a4c:	eeb0 1a4f 	vmov.f32	s2, s30
 8026a50:	4628      	mov	r0, r5
 8026a52:	f7ff ff4f 	bl	80268f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8026a56:	eef0 da4a 	vmov.f32	s27, s20
 8026a5a:	eeb0 da69 	vmov.f32	s26, s19
 8026a5e:	eef0 ca49 	vmov.f32	s25, s18
 8026a62:	eeb0 ca68 	vmov.f32	s24, s17
 8026a66:	e75c      	b.n	8026922 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 8026a68:	2edbe6ff 	.word	0x2edbe6ff
 8026a6c:	40490fdb 	.word	0x40490fdb
 8026a70:	40c90fdb 	.word	0x40c90fdb
 8026a74:	3dcccccd 	.word	0x3dcccccd

08026a78 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8026a78:	b530      	push	{r4, r5, lr}
 8026a7a:	ed2d 8b10 	vpush	{d8-d15}
 8026a7e:	4604      	mov	r4, r0
 8026a80:	b085      	sub	sp, #20
 8026a82:	eef0 8a40 	vmov.f32	s17, s0
 8026a86:	eef0 9a60 	vmov.f32	s19, s1
 8026a8a:	eef0 fa41 	vmov.f32	s31, s2
 8026a8e:	eeb0 fa61 	vmov.f32	s30, s3
 8026a92:	eef0 ba42 	vmov.f32	s23, s4
 8026a96:	eeb0 ca62 	vmov.f32	s24, s5
 8026a9a:	eef0 aa43 	vmov.f32	s21, s6
 8026a9e:	eeb0 ba63 	vmov.f32	s22, s7
 8026aa2:	460d      	mov	r5, r1
 8026aa4:	2d08      	cmp	r5, #8
 8026aa6:	f200 8115 	bhi.w	8026cd4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 8026aaa:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8026aae:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8026ab2:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8026ab6:	ee26 6a27 	vmul.f32	s12, s12, s15
 8026aba:	ee38 daaf 	vadd.f32	s26, s17, s31
 8026abe:	ed8d 6a01 	vstr	s12, [sp, #4]
 8026ac2:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8026ac6:	ee2d da27 	vmul.f32	s26, s26, s15
 8026aca:	ee7c ca0b 	vadd.f32	s25, s24, s22
 8026ace:	eeb0 ea4d 	vmov.f32	s28, s26
 8026ad2:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8026ad6:	ee6c caa7 	vmul.f32	s25, s25, s15
 8026ada:	ee66 6a27 	vmul.f32	s13, s12, s15
 8026ade:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8026ae2:	edcd 6a03 	vstr	s13, [sp, #12]
 8026ae6:	ee79 da8f 	vadd.f32	s27, s19, s30
 8026aea:	eef0 6a6c 	vmov.f32	s13, s25
 8026aee:	eee7 6a27 	vfma.f32	s13, s14, s15
 8026af2:	ee6d daa7 	vmul.f32	s27, s27, s15
 8026af6:	ee2e ea27 	vmul.f32	s28, s28, s15
 8026afa:	eef0 ea6d 	vmov.f32	s29, s27
 8026afe:	eee7 ea27 	vfma.f32	s29, s14, s15
 8026b02:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8026b06:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8026b0a:	ed8d 7a02 	vstr	s14, [sp, #8]
 8026b0e:	ed9d 7a03 	vldr	s14, [sp, #12]
 8026b12:	ee3e 9a07 	vadd.f32	s18, s28, s14
 8026b16:	ed9d 7a02 	vldr	s14, [sp, #8]
 8026b1a:	ee3e aa87 	vadd.f32	s20, s29, s14
 8026b1e:	ee29 9a27 	vmul.f32	s18, s18, s15
 8026b22:	ee2a aa27 	vmul.f32	s20, s20, s15
 8026b26:	eef0 6a67 	vmov.f32	s13, s15
 8026b2a:	2d00      	cmp	r5, #0
 8026b2c:	f000 810d 	beq.w	8026d4a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026b30:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8026b34:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8026b38:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8026b3c:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8026b40:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8026b44:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8026b48:	eea6 7a27 	vfma.f32	s14, s12, s15
 8026b4c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8026b50:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8026b54:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8026b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b5c:	eea5 6a27 	vfma.f32	s12, s10, s15
 8026b60:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8026d90 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8026b64:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8026b68:	bf48      	it	mi
 8026b6a:	eeb1 7a47 	vnegmi.f32	s14, s14
 8026b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b72:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8026b76:	bf48      	it	mi
 8026b78:	eeb1 6a46 	vnegmi.f32	s12, s12
 8026b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b80:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8026b84:	f340 80aa 	ble.w	8026cdc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8026b88:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8026b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026b90:	dd5c      	ble.n	8026c4c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8026b92:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8026b96:	ee37 7a06 	vadd.f32	s14, s14, s12
 8026b9a:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8026b9e:	ee27 7a07 	vmul.f32	s14, s14, s14
 8026ba2:	ee65 7a85 	vmul.f32	s15, s11, s10
 8026ba6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8026baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026bae:	f200 80cc 	bhi.w	8026d4a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026bb2:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8026bb6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8026bba:	f000 f952 	bl	8026e62 <atan2f>
 8026bbe:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8026bc2:	eeb0 8a40 	vmov.f32	s16, s0
 8026bc6:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8026bca:	f000 f94a 	bl	8026e62 <atan2f>
 8026bce:	ee38 fa40 	vsub.f32	s30, s16, s0
 8026bd2:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8026bd6:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8026bda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026bde:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8026be2:	bf48      	it	mi
 8026be4:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8026be8:	f000 f93b 	bl	8026e62 <atan2f>
 8026bec:	ee30 0a48 	vsub.f32	s0, s0, s16
 8026bf0:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8026d94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8026bf4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026bf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026bfc:	eeb4 fae7 	vcmpe.f32	s30, s15
 8026c00:	bf48      	it	mi
 8026c02:	eeb1 0a40 	vnegmi.f32	s0, s0
 8026c06:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8026d94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8026c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026c0e:	bfa8      	it	ge
 8026c10:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8026d98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8026c14:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026c18:	bfa8      	it	ge
 8026c1a:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8026c1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026c22:	bfa8      	it	ge
 8026c24:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8026d98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8026c28:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8026d9c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8026c2c:	bfa8      	it	ge
 8026c2e:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8026c32:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8026c36:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026c3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026c3e:	f140 8084 	bpl.w	8026d4a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026c42:	eef0 0a4a 	vmov.f32	s1, s20
 8026c46:	eeb0 0a49 	vmov.f32	s0, s18
 8026c4a:	e040      	b.n	8026cce <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8026c4c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8026c50:	ee27 7a07 	vmul.f32	s14, s14, s14
 8026c54:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8026c58:	ee67 7a85 	vmul.f32	s15, s15, s10
 8026c5c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8026c60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026c64:	d871      	bhi.n	8026d4a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026c66:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8026c6a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8026c6e:	f000 f8f8 	bl	8026e62 <atan2f>
 8026c72:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8026c76:	eeb0 8a40 	vmov.f32	s16, s0
 8026c7a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8026c7e:	f000 f8f0 	bl	8026e62 <atan2f>
 8026c82:	ee38 0a40 	vsub.f32	s0, s16, s0
 8026c86:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8026d94 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8026c8a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026c8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026c92:	bf48      	it	mi
 8026c94:	eeb1 0a40 	vnegmi.f32	s0, s0
 8026c98:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ca0:	bfa4      	itt	ge
 8026ca2:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8026d98 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8026ca6:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8026caa:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8026d9c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8026cae:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026cb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026cb6:	d548      	bpl.n	8026d4a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026cb8:	eef0 0a4f 	vmov.f32	s1, s30
 8026cbc:	eeb0 0a6f 	vmov.f32	s0, s31
 8026cc0:	4620      	mov	r0, r4
 8026cc2:	f7e9 f8b3 	bl	800fe2c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8026cc6:	eef0 0a4c 	vmov.f32	s1, s24
 8026cca:	eeb0 0a6b 	vmov.f32	s0, s23
 8026cce:	4620      	mov	r0, r4
 8026cd0:	f7e9 f8ac 	bl	800fe2c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8026cd4:	b005      	add	sp, #20
 8026cd6:	ecbd 8b10 	vpop	{d8-d15}
 8026cda:	bd30      	pop	{r4, r5, pc}
 8026cdc:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8026d90 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8026ce0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8026ce4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ce8:	dd19      	ble.n	8026d1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8026cea:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8026cee:	ee26 7a06 	vmul.f32	s14, s12, s12
 8026cf2:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8026cf6:	ee67 7a85 	vmul.f32	s15, s15, s10
 8026cfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8026cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d02:	d822      	bhi.n	8026d4a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8026d04:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8026d08:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8026d0c:	f000 f8a9 	bl	8026e62 <atan2f>
 8026d10:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8026d14:	eeb0 8a40 	vmov.f32	s16, s0
 8026d18:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8026d1c:	e7af      	b.n	8026c7e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8026d1e:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8026d22:	eeb0 7a49 	vmov.f32	s14, s18
 8026d26:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8026d2a:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8026d2e:	eeb0 6a4a 	vmov.f32	s12, s20
 8026d32:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8026d36:	ee66 7a06 	vmul.f32	s15, s12, s12
 8026d3a:	eee7 7a07 	vfma.f32	s15, s14, s14
 8026d3e:	eef4 7ac5 	vcmpe.f32	s15, s10
 8026d42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d46:	f67f af7c 	bls.w	8026c42 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8026d4a:	3501      	adds	r5, #1
 8026d4c:	eef0 0a69 	vmov.f32	s1, s19
 8026d50:	eeb0 0a68 	vmov.f32	s0, s17
 8026d54:	4629      	mov	r1, r5
 8026d56:	eef0 3a4a 	vmov.f32	s7, s20
 8026d5a:	eeb0 3a49 	vmov.f32	s6, s18
 8026d5e:	eef0 2a6e 	vmov.f32	s5, s29
 8026d62:	eeb0 2a4e 	vmov.f32	s4, s28
 8026d66:	eef0 1a6d 	vmov.f32	s3, s27
 8026d6a:	eeb0 1a4d 	vmov.f32	s2, s26
 8026d6e:	4620      	mov	r0, r4
 8026d70:	f7ff fe82 	bl	8026a78 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8026d74:	eeb0 ca6c 	vmov.f32	s24, s25
 8026d78:	eddd ba01 	vldr	s23, [sp, #4]
 8026d7c:	ed9d fa02 	vldr	s30, [sp, #8]
 8026d80:	eddd fa03 	vldr	s31, [sp, #12]
 8026d84:	eef0 9a4a 	vmov.f32	s19, s20
 8026d88:	eef0 8a49 	vmov.f32	s17, s18
 8026d8c:	e68a      	b.n	8026aa4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8026d8e:	bf00      	nop
 8026d90:	2edbe6ff 	.word	0x2edbe6ff
 8026d94:	40490fdb 	.word	0x40490fdb
 8026d98:	40c90fdb 	.word	0x40c90fdb
 8026d9c:	3dcccccd 	.word	0x3dcccccd

08026da0 <_ZN8touchgfx6CanvasD1Ev>:
 8026da0:	b510      	push	{r4, lr}
 8026da2:	4b04      	ldr	r3, [pc, #16]	@ (8026db4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026da4:	4604      	mov	r4, r0
 8026da6:	f840 3b14 	str.w	r3, [r0], #20
 8026daa:	f7ea ffc9 	bl	8011d40 <_ZN8touchgfx7OutlineD1Ev>
 8026dae:	4620      	mov	r0, r4
 8026db0:	bd10      	pop	{r4, pc}
 8026db2:	bf00      	nop
 8026db4:	0802b6d0 	.word	0x0802b6d0

08026db8 <_ZN8touchgfx6CanvasD0Ev>:
 8026db8:	b510      	push	{r4, lr}
 8026dba:	4604      	mov	r4, r0
 8026dbc:	f7ff fff0 	bl	8026da0 <_ZN8touchgfx6CanvasD1Ev>
 8026dc0:	4620      	mov	r0, r4
 8026dc2:	2174      	movs	r1, #116	@ 0x74
 8026dc4:	f000 f826 	bl	8026e14 <_ZdlPvj>
 8026dc8:	4620      	mov	r0, r4
 8026dca:	bd10      	pop	{r4, pc}

08026dcc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026dcc:	b570      	push	{r4, r5, r6, lr}
 8026dce:	790b      	ldrb	r3, [r1, #4]
 8026dd0:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8026dd4:	2b00      	cmp	r3, #0
 8026dd6:	bf0c      	ite	eq
 8026dd8:	2301      	moveq	r3, #1
 8026dda:	2300      	movne	r3, #0
 8026ddc:	4604      	mov	r4, r0
 8026dde:	460e      	mov	r6, r1
 8026de0:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8026de4:	d109      	bne.n	8026dfa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026de6:	b14d      	cbz	r5, 8026dfc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026de8:	7933      	ldrb	r3, [r6, #4]
 8026dea:	2b01      	cmp	r3, #1
 8026dec:	d10c      	bne.n	8026e08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026dee:	6823      	ldr	r3, [r4, #0]
 8026df0:	4620      	mov	r0, r4
 8026df2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8026df4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026df8:	4718      	bx	r3
 8026dfa:	b12d      	cbz	r5, 8026e08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026dfc:	6823      	ldr	r3, [r4, #0]
 8026dfe:	4620      	mov	r0, r4
 8026e00:	695b      	ldr	r3, [r3, #20]
 8026e02:	4798      	blx	r3
 8026e04:	2d00      	cmp	r5, #0
 8026e06:	d1ef      	bne.n	8026de8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026e08:	bd70      	pop	{r4, r5, r6, pc}

08026e0a <__aeabi_atexit>:
 8026e0a:	460b      	mov	r3, r1
 8026e0c:	4601      	mov	r1, r0
 8026e0e:	4618      	mov	r0, r3
 8026e10:	f001 b81e 	b.w	8027e50 <__cxa_atexit>

08026e14 <_ZdlPvj>:
 8026e14:	f000 b812 	b.w	8026e3c <_ZdlPv>

08026e18 <__cxa_guard_acquire>:
 8026e18:	6802      	ldr	r2, [r0, #0]
 8026e1a:	07d2      	lsls	r2, r2, #31
 8026e1c:	4603      	mov	r3, r0
 8026e1e:	d405      	bmi.n	8026e2c <__cxa_guard_acquire+0x14>
 8026e20:	7842      	ldrb	r2, [r0, #1]
 8026e22:	b102      	cbz	r2, 8026e26 <__cxa_guard_acquire+0xe>
 8026e24:	deff      	udf	#255	@ 0xff
 8026e26:	2001      	movs	r0, #1
 8026e28:	7058      	strb	r0, [r3, #1]
 8026e2a:	4770      	bx	lr
 8026e2c:	2000      	movs	r0, #0
 8026e2e:	4770      	bx	lr

08026e30 <__cxa_guard_release>:
 8026e30:	2301      	movs	r3, #1
 8026e32:	6003      	str	r3, [r0, #0]
 8026e34:	4770      	bx	lr

08026e36 <__cxa_pure_virtual>:
 8026e36:	b508      	push	{r3, lr}
 8026e38:	f000 f80e 	bl	8026e58 <_ZSt9terminatev>

08026e3c <_ZdlPv>:
 8026e3c:	f000 bf52 	b.w	8027ce4 <free>

08026e40 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8026e40:	b508      	push	{r3, lr}
 8026e42:	4780      	blx	r0
 8026e44:	f000 ff1a 	bl	8027c7c <abort>

08026e48 <_ZSt13get_terminatev>:
 8026e48:	4b02      	ldr	r3, [pc, #8]	@ (8026e54 <_ZSt13get_terminatev+0xc>)
 8026e4a:	6818      	ldr	r0, [r3, #0]
 8026e4c:	f3bf 8f5b 	dmb	ish
 8026e50:	4770      	bx	lr
 8026e52:	bf00      	nop
 8026e54:	20000100 	.word	0x20000100

08026e58 <_ZSt9terminatev>:
 8026e58:	b508      	push	{r3, lr}
 8026e5a:	f7ff fff5 	bl	8026e48 <_ZSt13get_terminatev>
 8026e5e:	f7ff ffef 	bl	8026e40 <_ZN10__cxxabiv111__terminateEPFvvE>

08026e62 <atan2f>:
 8026e62:	f000 b94d 	b.w	8027100 <__ieee754_atan2f>
	...

08026e68 <sqrtf>:
 8026e68:	b508      	push	{r3, lr}
 8026e6a:	ed2d 8b02 	vpush	{d8}
 8026e6e:	eeb0 8a40 	vmov.f32	s16, s0
 8026e72:	f000 f8a1 	bl	8026fb8 <__ieee754_sqrtf>
 8026e76:	eeb4 8a48 	vcmp.f32	s16, s16
 8026e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e7e:	d60c      	bvs.n	8026e9a <sqrtf+0x32>
 8026e80:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8026ea0 <sqrtf+0x38>
 8026e84:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8026e88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e8c:	d505      	bpl.n	8026e9a <sqrtf+0x32>
 8026e8e:	f001 f9b9 	bl	8028204 <__errno>
 8026e92:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8026e96:	2321      	movs	r3, #33	@ 0x21
 8026e98:	6003      	str	r3, [r0, #0]
 8026e9a:	ecbd 8b02 	vpop	{d8}
 8026e9e:	bd08      	pop	{r3, pc}
 8026ea0:	00000000 	.word	0x00000000

08026ea4 <cosf>:
 8026ea4:	ee10 3a10 	vmov	r3, s0
 8026ea8:	b507      	push	{r0, r1, r2, lr}
 8026eaa:	4a1e      	ldr	r2, [pc, #120]	@ (8026f24 <cosf+0x80>)
 8026eac:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8026eb0:	4293      	cmp	r3, r2
 8026eb2:	d806      	bhi.n	8026ec2 <cosf+0x1e>
 8026eb4:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8026f28 <cosf+0x84>
 8026eb8:	b003      	add	sp, #12
 8026eba:	f85d eb04 	ldr.w	lr, [sp], #4
 8026ebe:	f000 b87f 	b.w	8026fc0 <__kernel_cosf>
 8026ec2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8026ec6:	d304      	bcc.n	8026ed2 <cosf+0x2e>
 8026ec8:	ee30 0a40 	vsub.f32	s0, s0, s0
 8026ecc:	b003      	add	sp, #12
 8026ece:	f85d fb04 	ldr.w	pc, [sp], #4
 8026ed2:	4668      	mov	r0, sp
 8026ed4:	f000 f9b4 	bl	8027240 <__ieee754_rem_pio2f>
 8026ed8:	f000 0003 	and.w	r0, r0, #3
 8026edc:	2801      	cmp	r0, #1
 8026ede:	d009      	beq.n	8026ef4 <cosf+0x50>
 8026ee0:	2802      	cmp	r0, #2
 8026ee2:	d010      	beq.n	8026f06 <cosf+0x62>
 8026ee4:	b9b0      	cbnz	r0, 8026f14 <cosf+0x70>
 8026ee6:	eddd 0a01 	vldr	s1, [sp, #4]
 8026eea:	ed9d 0a00 	vldr	s0, [sp]
 8026eee:	f000 f867 	bl	8026fc0 <__kernel_cosf>
 8026ef2:	e7eb      	b.n	8026ecc <cosf+0x28>
 8026ef4:	eddd 0a01 	vldr	s1, [sp, #4]
 8026ef8:	ed9d 0a00 	vldr	s0, [sp]
 8026efc:	f000 f8b8 	bl	8027070 <__kernel_sinf>
 8026f00:	eeb1 0a40 	vneg.f32	s0, s0
 8026f04:	e7e2      	b.n	8026ecc <cosf+0x28>
 8026f06:	eddd 0a01 	vldr	s1, [sp, #4]
 8026f0a:	ed9d 0a00 	vldr	s0, [sp]
 8026f0e:	f000 f857 	bl	8026fc0 <__kernel_cosf>
 8026f12:	e7f5      	b.n	8026f00 <cosf+0x5c>
 8026f14:	eddd 0a01 	vldr	s1, [sp, #4]
 8026f18:	ed9d 0a00 	vldr	s0, [sp]
 8026f1c:	2001      	movs	r0, #1
 8026f1e:	f000 f8a7 	bl	8027070 <__kernel_sinf>
 8026f22:	e7d3      	b.n	8026ecc <cosf+0x28>
 8026f24:	3f490fd8 	.word	0x3f490fd8
 8026f28:	00000000 	.word	0x00000000

08026f2c <sinf>:
 8026f2c:	ee10 3a10 	vmov	r3, s0
 8026f30:	b507      	push	{r0, r1, r2, lr}
 8026f32:	4a1f      	ldr	r2, [pc, #124]	@ (8026fb0 <sinf+0x84>)
 8026f34:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8026f38:	4293      	cmp	r3, r2
 8026f3a:	d807      	bhi.n	8026f4c <sinf+0x20>
 8026f3c:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8026fb4 <sinf+0x88>
 8026f40:	2000      	movs	r0, #0
 8026f42:	b003      	add	sp, #12
 8026f44:	f85d eb04 	ldr.w	lr, [sp], #4
 8026f48:	f000 b892 	b.w	8027070 <__kernel_sinf>
 8026f4c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8026f50:	d304      	bcc.n	8026f5c <sinf+0x30>
 8026f52:	ee30 0a40 	vsub.f32	s0, s0, s0
 8026f56:	b003      	add	sp, #12
 8026f58:	f85d fb04 	ldr.w	pc, [sp], #4
 8026f5c:	4668      	mov	r0, sp
 8026f5e:	f000 f96f 	bl	8027240 <__ieee754_rem_pio2f>
 8026f62:	f000 0003 	and.w	r0, r0, #3
 8026f66:	2801      	cmp	r0, #1
 8026f68:	d00a      	beq.n	8026f80 <sinf+0x54>
 8026f6a:	2802      	cmp	r0, #2
 8026f6c:	d00f      	beq.n	8026f8e <sinf+0x62>
 8026f6e:	b9c0      	cbnz	r0, 8026fa2 <sinf+0x76>
 8026f70:	eddd 0a01 	vldr	s1, [sp, #4]
 8026f74:	ed9d 0a00 	vldr	s0, [sp]
 8026f78:	2001      	movs	r0, #1
 8026f7a:	f000 f879 	bl	8027070 <__kernel_sinf>
 8026f7e:	e7ea      	b.n	8026f56 <sinf+0x2a>
 8026f80:	eddd 0a01 	vldr	s1, [sp, #4]
 8026f84:	ed9d 0a00 	vldr	s0, [sp]
 8026f88:	f000 f81a 	bl	8026fc0 <__kernel_cosf>
 8026f8c:	e7e3      	b.n	8026f56 <sinf+0x2a>
 8026f8e:	eddd 0a01 	vldr	s1, [sp, #4]
 8026f92:	ed9d 0a00 	vldr	s0, [sp]
 8026f96:	2001      	movs	r0, #1
 8026f98:	f000 f86a 	bl	8027070 <__kernel_sinf>
 8026f9c:	eeb1 0a40 	vneg.f32	s0, s0
 8026fa0:	e7d9      	b.n	8026f56 <sinf+0x2a>
 8026fa2:	eddd 0a01 	vldr	s1, [sp, #4]
 8026fa6:	ed9d 0a00 	vldr	s0, [sp]
 8026faa:	f000 f809 	bl	8026fc0 <__kernel_cosf>
 8026fae:	e7f5      	b.n	8026f9c <sinf+0x70>
 8026fb0:	3f490fd8 	.word	0x3f490fd8
 8026fb4:	00000000 	.word	0x00000000

08026fb8 <__ieee754_sqrtf>:
 8026fb8:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8026fbc:	4770      	bx	lr
	...

08026fc0 <__kernel_cosf>:
 8026fc0:	ee10 3a10 	vmov	r3, s0
 8026fc4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8026fc8:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8026fcc:	eef0 6a40 	vmov.f32	s13, s0
 8026fd0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8026fd4:	d204      	bcs.n	8026fe0 <__kernel_cosf+0x20>
 8026fd6:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8026fda:	ee17 2a90 	vmov	r2, s15
 8026fde:	b342      	cbz	r2, 8027032 <__kernel_cosf+0x72>
 8026fe0:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8026fe4:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8027050 <__kernel_cosf+0x90>
 8026fe8:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8027054 <__kernel_cosf+0x94>
 8026fec:	4a1a      	ldr	r2, [pc, #104]	@ (8027058 <__kernel_cosf+0x98>)
 8026fee:	eea7 6a27 	vfma.f32	s12, s14, s15
 8026ff2:	4293      	cmp	r3, r2
 8026ff4:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802705c <__kernel_cosf+0x9c>
 8026ff8:	eee6 7a07 	vfma.f32	s15, s12, s14
 8026ffc:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8027060 <__kernel_cosf+0xa0>
 8027000:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027004:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8027064 <__kernel_cosf+0xa4>
 8027008:	eee6 7a07 	vfma.f32	s15, s12, s14
 802700c:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8027068 <__kernel_cosf+0xa8>
 8027010:	eea7 6a87 	vfma.f32	s12, s15, s14
 8027014:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8027018:	ee26 6a07 	vmul.f32	s12, s12, s14
 802701c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8027020:	eee7 0a06 	vfma.f32	s1, s14, s12
 8027024:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027028:	d804      	bhi.n	8027034 <__kernel_cosf+0x74>
 802702a:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802702e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027032:	4770      	bx	lr
 8027034:	4a0d      	ldr	r2, [pc, #52]	@ (802706c <__kernel_cosf+0xac>)
 8027036:	4293      	cmp	r3, r2
 8027038:	bf9a      	itte	ls
 802703a:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802703e:	ee07 3a10 	vmovls	s14, r3
 8027042:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8027046:	ee30 0a47 	vsub.f32	s0, s0, s14
 802704a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802704e:	e7ec      	b.n	802702a <__kernel_cosf+0x6a>
 8027050:	ad47d74e 	.word	0xad47d74e
 8027054:	310f74f6 	.word	0x310f74f6
 8027058:	3e999999 	.word	0x3e999999
 802705c:	b493f27c 	.word	0xb493f27c
 8027060:	37d00d01 	.word	0x37d00d01
 8027064:	bab60b61 	.word	0xbab60b61
 8027068:	3d2aaaab 	.word	0x3d2aaaab
 802706c:	3f480000 	.word	0x3f480000

08027070 <__kernel_sinf>:
 8027070:	ee10 3a10 	vmov	r3, s0
 8027074:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8027078:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802707c:	d204      	bcs.n	8027088 <__kernel_sinf+0x18>
 802707e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8027082:	ee17 3a90 	vmov	r3, s15
 8027086:	b35b      	cbz	r3, 80270e0 <__kernel_sinf+0x70>
 8027088:	ee20 7a00 	vmul.f32	s14, s0, s0
 802708c:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80270e4 <__kernel_sinf+0x74>
 8027090:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80270e8 <__kernel_sinf+0x78>
 8027094:	eea7 6a27 	vfma.f32	s12, s14, s15
 8027098:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80270ec <__kernel_sinf+0x7c>
 802709c:	eee6 7a07 	vfma.f32	s15, s12, s14
 80270a0:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80270f0 <__kernel_sinf+0x80>
 80270a4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80270a8:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80270f4 <__kernel_sinf+0x84>
 80270ac:	ee60 6a07 	vmul.f32	s13, s0, s14
 80270b0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80270b4:	b930      	cbnz	r0, 80270c4 <__kernel_sinf+0x54>
 80270b6:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80270f8 <__kernel_sinf+0x88>
 80270ba:	eea7 6a27 	vfma.f32	s12, s14, s15
 80270be:	eea6 0a26 	vfma.f32	s0, s12, s13
 80270c2:	4770      	bx	lr
 80270c4:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80270c8:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80270cc:	eee0 7a86 	vfma.f32	s15, s1, s12
 80270d0:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80270d4:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80270fc <__kernel_sinf+0x8c>
 80270d8:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80270dc:	ee30 0a60 	vsub.f32	s0, s0, s1
 80270e0:	4770      	bx	lr
 80270e2:	bf00      	nop
 80270e4:	2f2ec9d3 	.word	0x2f2ec9d3
 80270e8:	b2d72f34 	.word	0xb2d72f34
 80270ec:	3638ef1b 	.word	0x3638ef1b
 80270f0:	b9500d01 	.word	0xb9500d01
 80270f4:	3c088889 	.word	0x3c088889
 80270f8:	be2aaaab 	.word	0xbe2aaaab
 80270fc:	3e2aaaab 	.word	0x3e2aaaab

08027100 <__ieee754_atan2f>:
 8027100:	ee10 2a90 	vmov	r2, s1
 8027104:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8027108:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802710c:	b510      	push	{r4, lr}
 802710e:	eef0 7a40 	vmov.f32	s15, s0
 8027112:	d806      	bhi.n	8027122 <__ieee754_atan2f+0x22>
 8027114:	ee10 0a10 	vmov	r0, s0
 8027118:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 802711c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027120:	d904      	bls.n	802712c <__ieee754_atan2f+0x2c>
 8027122:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8027126:	eeb0 0a67 	vmov.f32	s0, s15
 802712a:	bd10      	pop	{r4, pc}
 802712c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8027130:	d103      	bne.n	802713a <__ieee754_atan2f+0x3a>
 8027132:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027136:	f000 b9b3 	b.w	80274a0 <atanf>
 802713a:	1794      	asrs	r4, r2, #30
 802713c:	f004 0402 	and.w	r4, r4, #2
 8027140:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8027144:	b943      	cbnz	r3, 8027158 <__ieee754_atan2f+0x58>
 8027146:	2c02      	cmp	r4, #2
 8027148:	d05e      	beq.n	8027208 <__ieee754_atan2f+0x108>
 802714a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802721c <__ieee754_atan2f+0x11c>
 802714e:	2c03      	cmp	r4, #3
 8027150:	bf08      	it	eq
 8027152:	eef0 7a47 	vmoveq.f32	s15, s14
 8027156:	e7e6      	b.n	8027126 <__ieee754_atan2f+0x26>
 8027158:	b941      	cbnz	r1, 802716c <__ieee754_atan2f+0x6c>
 802715a:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8027220 <__ieee754_atan2f+0x120>
 802715e:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8027224 <__ieee754_atan2f+0x124>
 8027162:	2800      	cmp	r0, #0
 8027164:	bfa8      	it	ge
 8027166:	eef0 7a47 	vmovge.f32	s15, s14
 802716a:	e7dc      	b.n	8027126 <__ieee754_atan2f+0x26>
 802716c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8027170:	d110      	bne.n	8027194 <__ieee754_atan2f+0x94>
 8027172:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027176:	f104 34ff 	add.w	r4, r4, #4294967295
 802717a:	d107      	bne.n	802718c <__ieee754_atan2f+0x8c>
 802717c:	2c02      	cmp	r4, #2
 802717e:	d846      	bhi.n	802720e <__ieee754_atan2f+0x10e>
 8027180:	4b29      	ldr	r3, [pc, #164]	@ (8027228 <__ieee754_atan2f+0x128>)
 8027182:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8027186:	edd3 7a00 	vldr	s15, [r3]
 802718a:	e7cc      	b.n	8027126 <__ieee754_atan2f+0x26>
 802718c:	2c02      	cmp	r4, #2
 802718e:	d841      	bhi.n	8027214 <__ieee754_atan2f+0x114>
 8027190:	4b26      	ldr	r3, [pc, #152]	@ (802722c <__ieee754_atan2f+0x12c>)
 8027192:	e7f6      	b.n	8027182 <__ieee754_atan2f+0x82>
 8027194:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8027198:	d0df      	beq.n	802715a <__ieee754_atan2f+0x5a>
 802719a:	1a5b      	subs	r3, r3, r1
 802719c:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80271a0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80271a4:	da1a      	bge.n	80271dc <__ieee754_atan2f+0xdc>
 80271a6:	2a00      	cmp	r2, #0
 80271a8:	da01      	bge.n	80271ae <__ieee754_atan2f+0xae>
 80271aa:	313c      	adds	r1, #60	@ 0x3c
 80271ac:	db19      	blt.n	80271e2 <__ieee754_atan2f+0xe2>
 80271ae:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80271b2:	f000 fa49 	bl	8027648 <fabsf>
 80271b6:	f000 f973 	bl	80274a0 <atanf>
 80271ba:	eef0 7a40 	vmov.f32	s15, s0
 80271be:	2c01      	cmp	r4, #1
 80271c0:	d012      	beq.n	80271e8 <__ieee754_atan2f+0xe8>
 80271c2:	2c02      	cmp	r4, #2
 80271c4:	d017      	beq.n	80271f6 <__ieee754_atan2f+0xf6>
 80271c6:	2c00      	cmp	r4, #0
 80271c8:	d0ad      	beq.n	8027126 <__ieee754_atan2f+0x26>
 80271ca:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8027230 <__ieee754_atan2f+0x130>
 80271ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80271d2:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8027234 <__ieee754_atan2f+0x134>
 80271d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80271da:	e7a4      	b.n	8027126 <__ieee754_atan2f+0x26>
 80271dc:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8027224 <__ieee754_atan2f+0x124>
 80271e0:	e7ed      	b.n	80271be <__ieee754_atan2f+0xbe>
 80271e2:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8027238 <__ieee754_atan2f+0x138>
 80271e6:	e7ea      	b.n	80271be <__ieee754_atan2f+0xbe>
 80271e8:	ee17 3a90 	vmov	r3, s15
 80271ec:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80271f0:	ee07 3a90 	vmov	s15, r3
 80271f4:	e797      	b.n	8027126 <__ieee754_atan2f+0x26>
 80271f6:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8027230 <__ieee754_atan2f+0x130>
 80271fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80271fe:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8027234 <__ieee754_atan2f+0x134>
 8027202:	ee77 7a67 	vsub.f32	s15, s14, s15
 8027206:	e78e      	b.n	8027126 <__ieee754_atan2f+0x26>
 8027208:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8027234 <__ieee754_atan2f+0x134>
 802720c:	e78b      	b.n	8027126 <__ieee754_atan2f+0x26>
 802720e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 802723c <__ieee754_atan2f+0x13c>
 8027212:	e788      	b.n	8027126 <__ieee754_atan2f+0x26>
 8027214:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8027238 <__ieee754_atan2f+0x138>
 8027218:	e785      	b.n	8027126 <__ieee754_atan2f+0x26>
 802721a:	bf00      	nop
 802721c:	c0490fdb 	.word	0xc0490fdb
 8027220:	bfc90fdb 	.word	0xbfc90fdb
 8027224:	3fc90fdb 	.word	0x3fc90fdb
 8027228:	0802b6e8 	.word	0x0802b6e8
 802722c:	0802b6dc 	.word	0x0802b6dc
 8027230:	33bbbd2e 	.word	0x33bbbd2e
 8027234:	40490fdb 	.word	0x40490fdb
 8027238:	00000000 	.word	0x00000000
 802723c:	3f490fdb 	.word	0x3f490fdb

08027240 <__ieee754_rem_pio2f>:
 8027240:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027242:	ee10 6a10 	vmov	r6, s0
 8027246:	4b88      	ldr	r3, [pc, #544]	@ (8027468 <__ieee754_rem_pio2f+0x228>)
 8027248:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 802724c:	429d      	cmp	r5, r3
 802724e:	b087      	sub	sp, #28
 8027250:	4604      	mov	r4, r0
 8027252:	d805      	bhi.n	8027260 <__ieee754_rem_pio2f+0x20>
 8027254:	2300      	movs	r3, #0
 8027256:	ed80 0a00 	vstr	s0, [r0]
 802725a:	6043      	str	r3, [r0, #4]
 802725c:	2000      	movs	r0, #0
 802725e:	e022      	b.n	80272a6 <__ieee754_rem_pio2f+0x66>
 8027260:	4b82      	ldr	r3, [pc, #520]	@ (802746c <__ieee754_rem_pio2f+0x22c>)
 8027262:	429d      	cmp	r5, r3
 8027264:	d83a      	bhi.n	80272dc <__ieee754_rem_pio2f+0x9c>
 8027266:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802726a:	2e00      	cmp	r6, #0
 802726c:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8027470 <__ieee754_rem_pio2f+0x230>
 8027270:	4a80      	ldr	r2, [pc, #512]	@ (8027474 <__ieee754_rem_pio2f+0x234>)
 8027272:	f023 030f 	bic.w	r3, r3, #15
 8027276:	dd18      	ble.n	80272aa <__ieee754_rem_pio2f+0x6a>
 8027278:	4293      	cmp	r3, r2
 802727a:	ee70 7a47 	vsub.f32	s15, s0, s14
 802727e:	bf09      	itett	eq
 8027280:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8027478 <__ieee754_rem_pio2f+0x238>
 8027284:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802747c <__ieee754_rem_pio2f+0x23c>
 8027288:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8027480 <__ieee754_rem_pio2f+0x240>
 802728c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027290:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8027294:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027298:	ed80 7a00 	vstr	s14, [r0]
 802729c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80272a0:	edc0 7a01 	vstr	s15, [r0, #4]
 80272a4:	2001      	movs	r0, #1
 80272a6:	b007      	add	sp, #28
 80272a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80272aa:	4293      	cmp	r3, r2
 80272ac:	ee70 7a07 	vadd.f32	s15, s0, s14
 80272b0:	bf09      	itett	eq
 80272b2:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8027478 <__ieee754_rem_pio2f+0x238>
 80272b6:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802747c <__ieee754_rem_pio2f+0x23c>
 80272ba:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8027480 <__ieee754_rem_pio2f+0x240>
 80272be:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80272c2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80272c6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80272ca:	ed80 7a00 	vstr	s14, [r0]
 80272ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80272d2:	edc0 7a01 	vstr	s15, [r0, #4]
 80272d6:	f04f 30ff 	mov.w	r0, #4294967295
 80272da:	e7e4      	b.n	80272a6 <__ieee754_rem_pio2f+0x66>
 80272dc:	4b69      	ldr	r3, [pc, #420]	@ (8027484 <__ieee754_rem_pio2f+0x244>)
 80272de:	429d      	cmp	r5, r3
 80272e0:	d873      	bhi.n	80273ca <__ieee754_rem_pio2f+0x18a>
 80272e2:	f000 f9b1 	bl	8027648 <fabsf>
 80272e6:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8027488 <__ieee754_rem_pio2f+0x248>
 80272ea:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80272ee:	eee0 7a07 	vfma.f32	s15, s0, s14
 80272f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80272f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80272fa:	ee17 0a90 	vmov	r0, s15
 80272fe:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8027470 <__ieee754_rem_pio2f+0x230>
 8027302:	eea7 0a67 	vfms.f32	s0, s14, s15
 8027306:	281f      	cmp	r0, #31
 8027308:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802747c <__ieee754_rem_pio2f+0x23c>
 802730c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027310:	eeb1 6a47 	vneg.f32	s12, s14
 8027314:	ee70 6a67 	vsub.f32	s13, s0, s15
 8027318:	ee16 1a90 	vmov	r1, s13
 802731c:	dc09      	bgt.n	8027332 <__ieee754_rem_pio2f+0xf2>
 802731e:	4a5b      	ldr	r2, [pc, #364]	@ (802748c <__ieee754_rem_pio2f+0x24c>)
 8027320:	1e47      	subs	r7, r0, #1
 8027322:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8027326:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 802732a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802732e:	4293      	cmp	r3, r2
 8027330:	d107      	bne.n	8027342 <__ieee754_rem_pio2f+0x102>
 8027332:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8027336:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 802733a:	2a08      	cmp	r2, #8
 802733c:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8027340:	dc14      	bgt.n	802736c <__ieee754_rem_pio2f+0x12c>
 8027342:	6021      	str	r1, [r4, #0]
 8027344:	ed94 7a00 	vldr	s14, [r4]
 8027348:	ee30 0a47 	vsub.f32	s0, s0, s14
 802734c:	2e00      	cmp	r6, #0
 802734e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027352:	ed84 0a01 	vstr	s0, [r4, #4]
 8027356:	daa6      	bge.n	80272a6 <__ieee754_rem_pio2f+0x66>
 8027358:	eeb1 7a47 	vneg.f32	s14, s14
 802735c:	eeb1 0a40 	vneg.f32	s0, s0
 8027360:	ed84 7a00 	vstr	s14, [r4]
 8027364:	ed84 0a01 	vstr	s0, [r4, #4]
 8027368:	4240      	negs	r0, r0
 802736a:	e79c      	b.n	80272a6 <__ieee754_rem_pio2f+0x66>
 802736c:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8027478 <__ieee754_rem_pio2f+0x238>
 8027370:	eef0 6a40 	vmov.f32	s13, s0
 8027374:	eee6 6a25 	vfma.f32	s13, s12, s11
 8027378:	ee70 7a66 	vsub.f32	s15, s0, s13
 802737c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027380:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8027480 <__ieee754_rem_pio2f+0x240>
 8027384:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027388:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802738c:	ee15 2a90 	vmov	r2, s11
 8027390:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027394:	1a5b      	subs	r3, r3, r1
 8027396:	2b19      	cmp	r3, #25
 8027398:	dc04      	bgt.n	80273a4 <__ieee754_rem_pio2f+0x164>
 802739a:	edc4 5a00 	vstr	s11, [r4]
 802739e:	eeb0 0a66 	vmov.f32	s0, s13
 80273a2:	e7cf      	b.n	8027344 <__ieee754_rem_pio2f+0x104>
 80273a4:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8027490 <__ieee754_rem_pio2f+0x250>
 80273a8:	eeb0 0a66 	vmov.f32	s0, s13
 80273ac:	eea6 0a25 	vfma.f32	s0, s12, s11
 80273b0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80273b4:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8027494 <__ieee754_rem_pio2f+0x254>
 80273b8:	eee6 7a25 	vfma.f32	s15, s12, s11
 80273bc:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80273c0:	ee30 7a67 	vsub.f32	s14, s0, s15
 80273c4:	ed84 7a00 	vstr	s14, [r4]
 80273c8:	e7bc      	b.n	8027344 <__ieee754_rem_pio2f+0x104>
 80273ca:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 80273ce:	d306      	bcc.n	80273de <__ieee754_rem_pio2f+0x19e>
 80273d0:	ee70 7a40 	vsub.f32	s15, s0, s0
 80273d4:	edc0 7a01 	vstr	s15, [r0, #4]
 80273d8:	edc0 7a00 	vstr	s15, [r0]
 80273dc:	e73e      	b.n	802725c <__ieee754_rem_pio2f+0x1c>
 80273de:	15ea      	asrs	r2, r5, #23
 80273e0:	3a86      	subs	r2, #134	@ 0x86
 80273e2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80273e6:	ee07 3a90 	vmov	s15, r3
 80273ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80273ee:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8027498 <__ieee754_rem_pio2f+0x258>
 80273f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80273f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80273fa:	ed8d 7a03 	vstr	s14, [sp, #12]
 80273fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027402:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027406:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802740a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802740e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8027412:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027416:	eef5 7a40 	vcmp.f32	s15, #0.0
 802741a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802741e:	edcd 7a05 	vstr	s15, [sp, #20]
 8027422:	d11e      	bne.n	8027462 <__ieee754_rem_pio2f+0x222>
 8027424:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8027428:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802742c:	bf0c      	ite	eq
 802742e:	2301      	moveq	r3, #1
 8027430:	2302      	movne	r3, #2
 8027432:	491a      	ldr	r1, [pc, #104]	@ (802749c <__ieee754_rem_pio2f+0x25c>)
 8027434:	9101      	str	r1, [sp, #4]
 8027436:	2102      	movs	r1, #2
 8027438:	9100      	str	r1, [sp, #0]
 802743a:	a803      	add	r0, sp, #12
 802743c:	4621      	mov	r1, r4
 802743e:	f000 f971 	bl	8027724 <__kernel_rem_pio2f>
 8027442:	2e00      	cmp	r6, #0
 8027444:	f6bf af2f 	bge.w	80272a6 <__ieee754_rem_pio2f+0x66>
 8027448:	edd4 7a00 	vldr	s15, [r4]
 802744c:	eef1 7a67 	vneg.f32	s15, s15
 8027450:	edc4 7a00 	vstr	s15, [r4]
 8027454:	edd4 7a01 	vldr	s15, [r4, #4]
 8027458:	eef1 7a67 	vneg.f32	s15, s15
 802745c:	edc4 7a01 	vstr	s15, [r4, #4]
 8027460:	e782      	b.n	8027368 <__ieee754_rem_pio2f+0x128>
 8027462:	2303      	movs	r3, #3
 8027464:	e7e5      	b.n	8027432 <__ieee754_rem_pio2f+0x1f2>
 8027466:	bf00      	nop
 8027468:	3f490fd8 	.word	0x3f490fd8
 802746c:	4016cbe3 	.word	0x4016cbe3
 8027470:	3fc90f80 	.word	0x3fc90f80
 8027474:	3fc90fd0 	.word	0x3fc90fd0
 8027478:	37354400 	.word	0x37354400
 802747c:	37354443 	.word	0x37354443
 8027480:	2e85a308 	.word	0x2e85a308
 8027484:	43490f80 	.word	0x43490f80
 8027488:	3f22f984 	.word	0x3f22f984
 802748c:	0802b6f4 	.word	0x0802b6f4
 8027490:	2e85a300 	.word	0x2e85a300
 8027494:	248d3132 	.word	0x248d3132
 8027498:	43800000 	.word	0x43800000
 802749c:	0802b774 	.word	0x0802b774

080274a0 <atanf>:
 80274a0:	b538      	push	{r3, r4, r5, lr}
 80274a2:	ee10 5a10 	vmov	r5, s0
 80274a6:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80274aa:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80274ae:	eef0 7a40 	vmov.f32	s15, s0
 80274b2:	d310      	bcc.n	80274d6 <atanf+0x36>
 80274b4:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 80274b8:	d904      	bls.n	80274c4 <atanf+0x24>
 80274ba:	ee70 7a00 	vadd.f32	s15, s0, s0
 80274be:	eeb0 0a67 	vmov.f32	s0, s15
 80274c2:	bd38      	pop	{r3, r4, r5, pc}
 80274c4:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80275fc <atanf+0x15c>
 80274c8:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8027600 <atanf+0x160>
 80274cc:	2d00      	cmp	r5, #0
 80274ce:	bfc8      	it	gt
 80274d0:	eef0 7a47 	vmovgt.f32	s15, s14
 80274d4:	e7f3      	b.n	80274be <atanf+0x1e>
 80274d6:	4b4b      	ldr	r3, [pc, #300]	@ (8027604 <atanf+0x164>)
 80274d8:	429c      	cmp	r4, r3
 80274da:	d810      	bhi.n	80274fe <atanf+0x5e>
 80274dc:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80274e0:	d20a      	bcs.n	80274f8 <atanf+0x58>
 80274e2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8027608 <atanf+0x168>
 80274e6:	ee30 7a07 	vadd.f32	s14, s0, s14
 80274ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80274ee:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80274f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80274f6:	dce2      	bgt.n	80274be <atanf+0x1e>
 80274f8:	f04f 33ff 	mov.w	r3, #4294967295
 80274fc:	e013      	b.n	8027526 <atanf+0x86>
 80274fe:	f000 f8a3 	bl	8027648 <fabsf>
 8027502:	4b42      	ldr	r3, [pc, #264]	@ (802760c <atanf+0x16c>)
 8027504:	429c      	cmp	r4, r3
 8027506:	d84f      	bhi.n	80275a8 <atanf+0x108>
 8027508:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802750c:	429c      	cmp	r4, r3
 802750e:	d841      	bhi.n	8027594 <atanf+0xf4>
 8027510:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8027514:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8027518:	eea0 7a27 	vfma.f32	s14, s0, s15
 802751c:	2300      	movs	r3, #0
 802751e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027522:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027526:	1c5a      	adds	r2, r3, #1
 8027528:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802752c:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8027610 <atanf+0x170>
 8027530:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8027614 <atanf+0x174>
 8027534:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8027618 <atanf+0x178>
 8027538:	ee66 6a06 	vmul.f32	s13, s12, s12
 802753c:	eee6 5a87 	vfma.f32	s11, s13, s14
 8027540:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802761c <atanf+0x17c>
 8027544:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8027548:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8027620 <atanf+0x180>
 802754c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8027550:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8027624 <atanf+0x184>
 8027554:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8027558:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8027628 <atanf+0x188>
 802755c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8027560:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802762c <atanf+0x18c>
 8027564:	eea6 5a87 	vfma.f32	s10, s13, s14
 8027568:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8027630 <atanf+0x190>
 802756c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8027570:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8027634 <atanf+0x194>
 8027574:	eea7 5a26 	vfma.f32	s10, s14, s13
 8027578:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8027638 <atanf+0x198>
 802757c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8027580:	ee27 7a26 	vmul.f32	s14, s14, s13
 8027584:	eea5 7a86 	vfma.f32	s14, s11, s12
 8027588:	ee27 7a87 	vmul.f32	s14, s15, s14
 802758c:	d121      	bne.n	80275d2 <atanf+0x132>
 802758e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027592:	e794      	b.n	80274be <atanf+0x1e>
 8027594:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8027598:	ee30 7a67 	vsub.f32	s14, s0, s15
 802759c:	ee30 0a27 	vadd.f32	s0, s0, s15
 80275a0:	2301      	movs	r3, #1
 80275a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275a6:	e7be      	b.n	8027526 <atanf+0x86>
 80275a8:	4b24      	ldr	r3, [pc, #144]	@ (802763c <atanf+0x19c>)
 80275aa:	429c      	cmp	r4, r3
 80275ac:	d80b      	bhi.n	80275c6 <atanf+0x126>
 80275ae:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80275b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80275b6:	eea0 7a27 	vfma.f32	s14, s0, s15
 80275ba:	2302      	movs	r3, #2
 80275bc:	ee70 6a67 	vsub.f32	s13, s0, s15
 80275c0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80275c4:	e7af      	b.n	8027526 <atanf+0x86>
 80275c6:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80275ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275ce:	2303      	movs	r3, #3
 80275d0:	e7a9      	b.n	8027526 <atanf+0x86>
 80275d2:	4a1b      	ldr	r2, [pc, #108]	@ (8027640 <atanf+0x1a0>)
 80275d4:	491b      	ldr	r1, [pc, #108]	@ (8027644 <atanf+0x1a4>)
 80275d6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80275da:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80275de:	edd3 6a00 	vldr	s13, [r3]
 80275e2:	ee37 7a66 	vsub.f32	s14, s14, s13
 80275e6:	2d00      	cmp	r5, #0
 80275e8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80275ec:	edd2 7a00 	vldr	s15, [r2]
 80275f0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80275f4:	bfb8      	it	lt
 80275f6:	eef1 7a67 	vneglt.f32	s15, s15
 80275fa:	e760      	b.n	80274be <atanf+0x1e>
 80275fc:	bfc90fdb 	.word	0xbfc90fdb
 8027600:	3fc90fdb 	.word	0x3fc90fdb
 8027604:	3edfffff 	.word	0x3edfffff
 8027608:	7149f2ca 	.word	0x7149f2ca
 802760c:	3f97ffff 	.word	0x3f97ffff
 8027610:	3c8569d7 	.word	0x3c8569d7
 8027614:	3d4bda59 	.word	0x3d4bda59
 8027618:	bd6ef16b 	.word	0xbd6ef16b
 802761c:	3d886b35 	.word	0x3d886b35
 8027620:	3dba2e6e 	.word	0x3dba2e6e
 8027624:	3e124925 	.word	0x3e124925
 8027628:	3eaaaaab 	.word	0x3eaaaaab
 802762c:	bd15a221 	.word	0xbd15a221
 8027630:	bd9d8795 	.word	0xbd9d8795
 8027634:	bde38e38 	.word	0xbde38e38
 8027638:	be4ccccd 	.word	0xbe4ccccd
 802763c:	401bffff 	.word	0x401bffff
 8027640:	0802ba9c 	.word	0x0802ba9c
 8027644:	0802ba8c 	.word	0x0802ba8c

08027648 <fabsf>:
 8027648:	ee10 3a10 	vmov	r3, s0
 802764c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8027650:	ee00 3a10 	vmov	s0, r3
 8027654:	4770      	bx	lr
	...

08027658 <scalbnf>:
 8027658:	ee10 3a10 	vmov	r3, s0
 802765c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8027660:	d02b      	beq.n	80276ba <scalbnf+0x62>
 8027662:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8027666:	d302      	bcc.n	802766e <scalbnf+0x16>
 8027668:	ee30 0a00 	vadd.f32	s0, s0, s0
 802766c:	4770      	bx	lr
 802766e:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8027672:	d123      	bne.n	80276bc <scalbnf+0x64>
 8027674:	4b24      	ldr	r3, [pc, #144]	@ (8027708 <scalbnf+0xb0>)
 8027676:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802770c <scalbnf+0xb4>
 802767a:	4298      	cmp	r0, r3
 802767c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8027680:	db17      	blt.n	80276b2 <scalbnf+0x5a>
 8027682:	ee10 3a10 	vmov	r3, s0
 8027686:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802768a:	3a19      	subs	r2, #25
 802768c:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8027690:	4288      	cmp	r0, r1
 8027692:	dd15      	ble.n	80276c0 <scalbnf+0x68>
 8027694:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8027710 <scalbnf+0xb8>
 8027698:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8027714 <scalbnf+0xbc>
 802769c:	ee10 3a10 	vmov	r3, s0
 80276a0:	eeb0 7a67 	vmov.f32	s14, s15
 80276a4:	2b00      	cmp	r3, #0
 80276a6:	bfb8      	it	lt
 80276a8:	eef0 7a66 	vmovlt.f32	s15, s13
 80276ac:	ee27 0a87 	vmul.f32	s0, s15, s14
 80276b0:	4770      	bx	lr
 80276b2:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8027718 <scalbnf+0xc0>
 80276b6:	ee27 0a80 	vmul.f32	s0, s15, s0
 80276ba:	4770      	bx	lr
 80276bc:	0dd2      	lsrs	r2, r2, #23
 80276be:	e7e5      	b.n	802768c <scalbnf+0x34>
 80276c0:	4410      	add	r0, r2
 80276c2:	28fe      	cmp	r0, #254	@ 0xfe
 80276c4:	dce6      	bgt.n	8027694 <scalbnf+0x3c>
 80276c6:	2800      	cmp	r0, #0
 80276c8:	dd06      	ble.n	80276d8 <scalbnf+0x80>
 80276ca:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80276ce:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80276d2:	ee00 3a10 	vmov	s0, r3
 80276d6:	4770      	bx	lr
 80276d8:	f110 0f16 	cmn.w	r0, #22
 80276dc:	da09      	bge.n	80276f2 <scalbnf+0x9a>
 80276de:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 8027718 <scalbnf+0xc0>
 80276e2:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802771c <scalbnf+0xc4>
 80276e6:	ee10 3a10 	vmov	r3, s0
 80276ea:	eeb0 7a67 	vmov.f32	s14, s15
 80276ee:	2b00      	cmp	r3, #0
 80276f0:	e7d9      	b.n	80276a6 <scalbnf+0x4e>
 80276f2:	3019      	adds	r0, #25
 80276f4:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80276f8:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80276fc:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8027720 <scalbnf+0xc8>
 8027700:	ee07 3a90 	vmov	s15, r3
 8027704:	e7d7      	b.n	80276b6 <scalbnf+0x5e>
 8027706:	bf00      	nop
 8027708:	ffff3cb0 	.word	0xffff3cb0
 802770c:	4c000000 	.word	0x4c000000
 8027710:	7149f2ca 	.word	0x7149f2ca
 8027714:	f149f2ca 	.word	0xf149f2ca
 8027718:	0da24260 	.word	0x0da24260
 802771c:	8da24260 	.word	0x8da24260
 8027720:	33000000 	.word	0x33000000

08027724 <__kernel_rem_pio2f>:
 8027724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027728:	ed2d 8b04 	vpush	{d8-d9}
 802772c:	b0d9      	sub	sp, #356	@ 0x164
 802772e:	4690      	mov	r8, r2
 8027730:	9001      	str	r0, [sp, #4]
 8027732:	4ab6      	ldr	r2, [pc, #728]	@ (8027a0c <__kernel_rem_pio2f+0x2e8>)
 8027734:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8027736:	f118 0f04 	cmn.w	r8, #4
 802773a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802773e:	460f      	mov	r7, r1
 8027740:	f103 3bff 	add.w	fp, r3, #4294967295
 8027744:	db26      	blt.n	8027794 <__kernel_rem_pio2f+0x70>
 8027746:	f1b8 0203 	subs.w	r2, r8, #3
 802774a:	bf48      	it	mi
 802774c:	f108 0204 	addmi.w	r2, r8, #4
 8027750:	10d2      	asrs	r2, r2, #3
 8027752:	1c55      	adds	r5, r2, #1
 8027754:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8027756:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 802775a:	00e8      	lsls	r0, r5, #3
 802775c:	eba2 060b 	sub.w	r6, r2, fp
 8027760:	9002      	str	r0, [sp, #8]
 8027762:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8027766:	eb0a 0c0b 	add.w	ip, sl, fp
 802776a:	ac1c      	add	r4, sp, #112	@ 0x70
 802776c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8027770:	2000      	movs	r0, #0
 8027772:	4560      	cmp	r0, ip
 8027774:	dd10      	ble.n	8027798 <__kernel_rem_pio2f+0x74>
 8027776:	a91c      	add	r1, sp, #112	@ 0x70
 8027778:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802777c:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8027780:	2600      	movs	r6, #0
 8027782:	4556      	cmp	r6, sl
 8027784:	dc24      	bgt.n	80277d0 <__kernel_rem_pio2f+0xac>
 8027786:	f8dd e004 	ldr.w	lr, [sp, #4]
 802778a:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 802778e:	4684      	mov	ip, r0
 8027790:	2400      	movs	r4, #0
 8027792:	e016      	b.n	80277c2 <__kernel_rem_pio2f+0x9e>
 8027794:	2200      	movs	r2, #0
 8027796:	e7dc      	b.n	8027752 <__kernel_rem_pio2f+0x2e>
 8027798:	42c6      	cmn	r6, r0
 802779a:	bf5d      	ittte	pl
 802779c:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80277a0:	ee07 1a90 	vmovpl	s15, r1
 80277a4:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80277a8:	eef0 7a47 	vmovmi.f32	s15, s14
 80277ac:	ece4 7a01 	vstmia	r4!, {s15}
 80277b0:	3001      	adds	r0, #1
 80277b2:	e7de      	b.n	8027772 <__kernel_rem_pio2f+0x4e>
 80277b4:	ecfe 6a01 	vldmia	lr!, {s13}
 80277b8:	ed3c 7a01 	vldmdb	ip!, {s14}
 80277bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80277c0:	3401      	adds	r4, #1
 80277c2:	455c      	cmp	r4, fp
 80277c4:	ddf6      	ble.n	80277b4 <__kernel_rem_pio2f+0x90>
 80277c6:	ece9 7a01 	vstmia	r9!, {s15}
 80277ca:	3601      	adds	r6, #1
 80277cc:	3004      	adds	r0, #4
 80277ce:	e7d8      	b.n	8027782 <__kernel_rem_pio2f+0x5e>
 80277d0:	a908      	add	r1, sp, #32
 80277d2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80277d6:	9104      	str	r1, [sp, #16]
 80277d8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80277da:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8027a18 <__kernel_rem_pio2f+0x2f4>
 80277de:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8027a14 <__kernel_rem_pio2f+0x2f0>
 80277e2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80277e6:	9203      	str	r2, [sp, #12]
 80277e8:	4654      	mov	r4, sl
 80277ea:	00a2      	lsls	r2, r4, #2
 80277ec:	9205      	str	r2, [sp, #20]
 80277ee:	aa58      	add	r2, sp, #352	@ 0x160
 80277f0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80277f4:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 80277f8:	a944      	add	r1, sp, #272	@ 0x110
 80277fa:	aa08      	add	r2, sp, #32
 80277fc:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8027800:	4694      	mov	ip, r2
 8027802:	4626      	mov	r6, r4
 8027804:	2e00      	cmp	r6, #0
 8027806:	dc4c      	bgt.n	80278a2 <__kernel_rem_pio2f+0x17e>
 8027808:	4628      	mov	r0, r5
 802780a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802780e:	f7ff ff23 	bl	8027658 <scalbnf>
 8027812:	eeb0 8a40 	vmov.f32	s16, s0
 8027816:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802781a:	ee28 0a00 	vmul.f32	s0, s16, s0
 802781e:	f000 f9e9 	bl	8027bf4 <floorf>
 8027822:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8027826:	eea0 8a67 	vfms.f32	s16, s0, s15
 802782a:	2d00      	cmp	r5, #0
 802782c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8027830:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8027834:	ee17 9a90 	vmov	r9, s15
 8027838:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802783c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8027840:	dd41      	ble.n	80278c6 <__kernel_rem_pio2f+0x1a2>
 8027842:	f104 3cff 	add.w	ip, r4, #4294967295
 8027846:	a908      	add	r1, sp, #32
 8027848:	f1c5 0e08 	rsb	lr, r5, #8
 802784c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8027850:	fa46 f00e 	asr.w	r0, r6, lr
 8027854:	4481      	add	r9, r0
 8027856:	fa00 f00e 	lsl.w	r0, r0, lr
 802785a:	1a36      	subs	r6, r6, r0
 802785c:	f1c5 0007 	rsb	r0, r5, #7
 8027860:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8027864:	4106      	asrs	r6, r0
 8027866:	2e00      	cmp	r6, #0
 8027868:	dd3c      	ble.n	80278e4 <__kernel_rem_pio2f+0x1c0>
 802786a:	f04f 0e00 	mov.w	lr, #0
 802786e:	f109 0901 	add.w	r9, r9, #1
 8027872:	4670      	mov	r0, lr
 8027874:	4574      	cmp	r4, lr
 8027876:	dc68      	bgt.n	802794a <__kernel_rem_pio2f+0x226>
 8027878:	2d00      	cmp	r5, #0
 802787a:	dd03      	ble.n	8027884 <__kernel_rem_pio2f+0x160>
 802787c:	2d01      	cmp	r5, #1
 802787e:	d074      	beq.n	802796a <__kernel_rem_pio2f+0x246>
 8027880:	2d02      	cmp	r5, #2
 8027882:	d07d      	beq.n	8027980 <__kernel_rem_pio2f+0x25c>
 8027884:	2e02      	cmp	r6, #2
 8027886:	d12d      	bne.n	80278e4 <__kernel_rem_pio2f+0x1c0>
 8027888:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802788c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8027890:	b340      	cbz	r0, 80278e4 <__kernel_rem_pio2f+0x1c0>
 8027892:	4628      	mov	r0, r5
 8027894:	9306      	str	r3, [sp, #24]
 8027896:	f7ff fedf 	bl	8027658 <scalbnf>
 802789a:	9b06      	ldr	r3, [sp, #24]
 802789c:	ee38 8a40 	vsub.f32	s16, s16, s0
 80278a0:	e020      	b.n	80278e4 <__kernel_rem_pio2f+0x1c0>
 80278a2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80278a6:	3e01      	subs	r6, #1
 80278a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80278ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80278b0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80278b4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80278b8:	ecac 0a01 	vstmia	ip!, {s0}
 80278bc:	ed30 0a01 	vldmdb	r0!, {s0}
 80278c0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80278c4:	e79e      	b.n	8027804 <__kernel_rem_pio2f+0xe0>
 80278c6:	d105      	bne.n	80278d4 <__kernel_rem_pio2f+0x1b0>
 80278c8:	1e60      	subs	r0, r4, #1
 80278ca:	a908      	add	r1, sp, #32
 80278cc:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80278d0:	11f6      	asrs	r6, r6, #7
 80278d2:	e7c8      	b.n	8027866 <__kernel_rem_pio2f+0x142>
 80278d4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80278d8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80278dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278e0:	da31      	bge.n	8027946 <__kernel_rem_pio2f+0x222>
 80278e2:	2600      	movs	r6, #0
 80278e4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80278e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278ec:	f040 8098 	bne.w	8027a20 <__kernel_rem_pio2f+0x2fc>
 80278f0:	1e60      	subs	r0, r4, #1
 80278f2:	2200      	movs	r2, #0
 80278f4:	4550      	cmp	r0, sl
 80278f6:	da4b      	bge.n	8027990 <__kernel_rem_pio2f+0x26c>
 80278f8:	2a00      	cmp	r2, #0
 80278fa:	d065      	beq.n	80279c8 <__kernel_rem_pio2f+0x2a4>
 80278fc:	3c01      	subs	r4, #1
 80278fe:	ab08      	add	r3, sp, #32
 8027900:	3d08      	subs	r5, #8
 8027902:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8027906:	2b00      	cmp	r3, #0
 8027908:	d0f8      	beq.n	80278fc <__kernel_rem_pio2f+0x1d8>
 802790a:	4628      	mov	r0, r5
 802790c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8027910:	f7ff fea2 	bl	8027658 <scalbnf>
 8027914:	1c63      	adds	r3, r4, #1
 8027916:	aa44      	add	r2, sp, #272	@ 0x110
 8027918:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8027a18 <__kernel_rem_pio2f+0x2f4>
 802791c:	0099      	lsls	r1, r3, #2
 802791e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8027922:	4623      	mov	r3, r4
 8027924:	2b00      	cmp	r3, #0
 8027926:	f280 80a9 	bge.w	8027a7c <__kernel_rem_pio2f+0x358>
 802792a:	4623      	mov	r3, r4
 802792c:	2b00      	cmp	r3, #0
 802792e:	f2c0 80c7 	blt.w	8027ac0 <__kernel_rem_pio2f+0x39c>
 8027932:	aa44      	add	r2, sp, #272	@ 0x110
 8027934:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8027938:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8027a10 <__kernel_rem_pio2f+0x2ec>
 802793c:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 8027940:	2000      	movs	r0, #0
 8027942:	1ae2      	subs	r2, r4, r3
 8027944:	e0b1      	b.n	8027aaa <__kernel_rem_pio2f+0x386>
 8027946:	2602      	movs	r6, #2
 8027948:	e78f      	b.n	802786a <__kernel_rem_pio2f+0x146>
 802794a:	f852 1b04 	ldr.w	r1, [r2], #4
 802794e:	b948      	cbnz	r0, 8027964 <__kernel_rem_pio2f+0x240>
 8027950:	b121      	cbz	r1, 802795c <__kernel_rem_pio2f+0x238>
 8027952:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8027956:	f842 1c04 	str.w	r1, [r2, #-4]
 802795a:	2101      	movs	r1, #1
 802795c:	f10e 0e01 	add.w	lr, lr, #1
 8027960:	4608      	mov	r0, r1
 8027962:	e787      	b.n	8027874 <__kernel_rem_pio2f+0x150>
 8027964:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8027968:	e7f5      	b.n	8027956 <__kernel_rem_pio2f+0x232>
 802796a:	f104 3cff 	add.w	ip, r4, #4294967295
 802796e:	aa08      	add	r2, sp, #32
 8027970:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8027974:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8027978:	a908      	add	r1, sp, #32
 802797a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802797e:	e781      	b.n	8027884 <__kernel_rem_pio2f+0x160>
 8027980:	f104 3cff 	add.w	ip, r4, #4294967295
 8027984:	aa08      	add	r2, sp, #32
 8027986:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802798a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802798e:	e7f3      	b.n	8027978 <__kernel_rem_pio2f+0x254>
 8027990:	a908      	add	r1, sp, #32
 8027992:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8027996:	3801      	subs	r0, #1
 8027998:	430a      	orrs	r2, r1
 802799a:	e7ab      	b.n	80278f4 <__kernel_rem_pio2f+0x1d0>
 802799c:	3201      	adds	r2, #1
 802799e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80279a2:	2e00      	cmp	r6, #0
 80279a4:	d0fa      	beq.n	802799c <__kernel_rem_pio2f+0x278>
 80279a6:	9905      	ldr	r1, [sp, #20]
 80279a8:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 80279ac:	eb0d 0001 	add.w	r0, sp, r1
 80279b0:	18e6      	adds	r6, r4, r3
 80279b2:	a91c      	add	r1, sp, #112	@ 0x70
 80279b4:	f104 0c01 	add.w	ip, r4, #1
 80279b8:	384c      	subs	r0, #76	@ 0x4c
 80279ba:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80279be:	4422      	add	r2, r4
 80279c0:	4562      	cmp	r2, ip
 80279c2:	da04      	bge.n	80279ce <__kernel_rem_pio2f+0x2aa>
 80279c4:	4614      	mov	r4, r2
 80279c6:	e710      	b.n	80277ea <__kernel_rem_pio2f+0xc6>
 80279c8:	9804      	ldr	r0, [sp, #16]
 80279ca:	2201      	movs	r2, #1
 80279cc:	e7e7      	b.n	802799e <__kernel_rem_pio2f+0x27a>
 80279ce:	9903      	ldr	r1, [sp, #12]
 80279d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80279d4:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80279d8:	9105      	str	r1, [sp, #20]
 80279da:	ee07 1a90 	vmov	s15, r1
 80279de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80279e2:	2400      	movs	r4, #0
 80279e4:	ece6 7a01 	vstmia	r6!, {s15}
 80279e8:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 80279ec:	46b1      	mov	r9, r6
 80279ee:	455c      	cmp	r4, fp
 80279f0:	dd04      	ble.n	80279fc <__kernel_rem_pio2f+0x2d8>
 80279f2:	ece0 7a01 	vstmia	r0!, {s15}
 80279f6:	f10c 0c01 	add.w	ip, ip, #1
 80279fa:	e7e1      	b.n	80279c0 <__kernel_rem_pio2f+0x29c>
 80279fc:	ecfe 6a01 	vldmia	lr!, {s13}
 8027a00:	ed39 7a01 	vldmdb	r9!, {s14}
 8027a04:	3401      	adds	r4, #1
 8027a06:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027a0a:	e7f0      	b.n	80279ee <__kernel_rem_pio2f+0x2ca>
 8027a0c:	0802bad8 	.word	0x0802bad8
 8027a10:	0802baac 	.word	0x0802baac
 8027a14:	43800000 	.word	0x43800000
 8027a18:	3b800000 	.word	0x3b800000
 8027a1c:	00000000 	.word	0x00000000
 8027a20:	9b02      	ldr	r3, [sp, #8]
 8027a22:	eeb0 0a48 	vmov.f32	s0, s16
 8027a26:	eba3 0008 	sub.w	r0, r3, r8
 8027a2a:	f7ff fe15 	bl	8027658 <scalbnf>
 8027a2e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8027a14 <__kernel_rem_pio2f+0x2f0>
 8027a32:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8027a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a3a:	db19      	blt.n	8027a70 <__kernel_rem_pio2f+0x34c>
 8027a3c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8027a18 <__kernel_rem_pio2f+0x2f4>
 8027a40:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027a44:	aa08      	add	r2, sp, #32
 8027a46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027a4a:	3508      	adds	r5, #8
 8027a4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027a50:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8027a54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027a58:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027a5c:	ee10 3a10 	vmov	r3, s0
 8027a60:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027a64:	ee17 3a90 	vmov	r3, s15
 8027a68:	3401      	adds	r4, #1
 8027a6a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027a6e:	e74c      	b.n	802790a <__kernel_rem_pio2f+0x1e6>
 8027a70:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027a74:	aa08      	add	r2, sp, #32
 8027a76:	ee10 3a10 	vmov	r3, s0
 8027a7a:	e7f6      	b.n	8027a6a <__kernel_rem_pio2f+0x346>
 8027a7c:	a808      	add	r0, sp, #32
 8027a7e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027a82:	9001      	str	r0, [sp, #4]
 8027a84:	ee07 0a90 	vmov	s15, r0
 8027a88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027a8c:	3b01      	subs	r3, #1
 8027a8e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027a92:	ee20 0a07 	vmul.f32	s0, s0, s14
 8027a96:	ed62 7a01 	vstmdb	r2!, {s15}
 8027a9a:	e743      	b.n	8027924 <__kernel_rem_pio2f+0x200>
 8027a9c:	ecfc 6a01 	vldmia	ip!, {s13}
 8027aa0:	ecb5 7a01 	vldmia	r5!, {s14}
 8027aa4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027aa8:	3001      	adds	r0, #1
 8027aaa:	4550      	cmp	r0, sl
 8027aac:	dc01      	bgt.n	8027ab2 <__kernel_rem_pio2f+0x38e>
 8027aae:	4290      	cmp	r0, r2
 8027ab0:	ddf4      	ble.n	8027a9c <__kernel_rem_pio2f+0x378>
 8027ab2:	a858      	add	r0, sp, #352	@ 0x160
 8027ab4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8027ab8:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8027abc:	3b01      	subs	r3, #1
 8027abe:	e735      	b.n	802792c <__kernel_rem_pio2f+0x208>
 8027ac0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8027ac2:	2b02      	cmp	r3, #2
 8027ac4:	dc09      	bgt.n	8027ada <__kernel_rem_pio2f+0x3b6>
 8027ac6:	2b00      	cmp	r3, #0
 8027ac8:	dc27      	bgt.n	8027b1a <__kernel_rem_pio2f+0x3f6>
 8027aca:	d040      	beq.n	8027b4e <__kernel_rem_pio2f+0x42a>
 8027acc:	f009 0007 	and.w	r0, r9, #7
 8027ad0:	b059      	add	sp, #356	@ 0x164
 8027ad2:	ecbd 8b04 	vpop	{d8-d9}
 8027ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ada:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8027adc:	2b03      	cmp	r3, #3
 8027ade:	d1f5      	bne.n	8027acc <__kernel_rem_pio2f+0x3a8>
 8027ae0:	aa30      	add	r2, sp, #192	@ 0xc0
 8027ae2:	1f0b      	subs	r3, r1, #4
 8027ae4:	4413      	add	r3, r2
 8027ae6:	461a      	mov	r2, r3
 8027ae8:	4620      	mov	r0, r4
 8027aea:	2800      	cmp	r0, #0
 8027aec:	dc50      	bgt.n	8027b90 <__kernel_rem_pio2f+0x46c>
 8027aee:	4622      	mov	r2, r4
 8027af0:	2a01      	cmp	r2, #1
 8027af2:	dc5d      	bgt.n	8027bb0 <__kernel_rem_pio2f+0x48c>
 8027af4:	ab30      	add	r3, sp, #192	@ 0xc0
 8027af6:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 8027afa:	440b      	add	r3, r1
 8027afc:	2c01      	cmp	r4, #1
 8027afe:	dc67      	bgt.n	8027bd0 <__kernel_rem_pio2f+0x4ac>
 8027b00:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8027b04:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8027b08:	2e00      	cmp	r6, #0
 8027b0a:	d167      	bne.n	8027bdc <__kernel_rem_pio2f+0x4b8>
 8027b0c:	edc7 6a00 	vstr	s13, [r7]
 8027b10:	ed87 7a01 	vstr	s14, [r7, #4]
 8027b14:	edc7 7a02 	vstr	s15, [r7, #8]
 8027b18:	e7d8      	b.n	8027acc <__kernel_rem_pio2f+0x3a8>
 8027b1a:	ab30      	add	r3, sp, #192	@ 0xc0
 8027b1c:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 8027b20:	440b      	add	r3, r1
 8027b22:	4622      	mov	r2, r4
 8027b24:	2a00      	cmp	r2, #0
 8027b26:	da24      	bge.n	8027b72 <__kernel_rem_pio2f+0x44e>
 8027b28:	b34e      	cbz	r6, 8027b7e <__kernel_rem_pio2f+0x45a>
 8027b2a:	eef1 7a47 	vneg.f32	s15, s14
 8027b2e:	edc7 7a00 	vstr	s15, [r7]
 8027b32:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8027b36:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027b3a:	aa31      	add	r2, sp, #196	@ 0xc4
 8027b3c:	2301      	movs	r3, #1
 8027b3e:	429c      	cmp	r4, r3
 8027b40:	da20      	bge.n	8027b84 <__kernel_rem_pio2f+0x460>
 8027b42:	b10e      	cbz	r6, 8027b48 <__kernel_rem_pio2f+0x424>
 8027b44:	eef1 7a67 	vneg.f32	s15, s15
 8027b48:	edc7 7a01 	vstr	s15, [r7, #4]
 8027b4c:	e7be      	b.n	8027acc <__kernel_rem_pio2f+0x3a8>
 8027b4e:	ab30      	add	r3, sp, #192	@ 0xc0
 8027b50:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8027a1c <__kernel_rem_pio2f+0x2f8>
 8027b54:	440b      	add	r3, r1
 8027b56:	2c00      	cmp	r4, #0
 8027b58:	da05      	bge.n	8027b66 <__kernel_rem_pio2f+0x442>
 8027b5a:	b10e      	cbz	r6, 8027b60 <__kernel_rem_pio2f+0x43c>
 8027b5c:	eef1 7a67 	vneg.f32	s15, s15
 8027b60:	edc7 7a00 	vstr	s15, [r7]
 8027b64:	e7b2      	b.n	8027acc <__kernel_rem_pio2f+0x3a8>
 8027b66:	ed33 7a01 	vldmdb	r3!, {s14}
 8027b6a:	3c01      	subs	r4, #1
 8027b6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027b70:	e7f1      	b.n	8027b56 <__kernel_rem_pio2f+0x432>
 8027b72:	ed73 7a01 	vldmdb	r3!, {s15}
 8027b76:	3a01      	subs	r2, #1
 8027b78:	ee37 7a27 	vadd.f32	s14, s14, s15
 8027b7c:	e7d2      	b.n	8027b24 <__kernel_rem_pio2f+0x400>
 8027b7e:	eef0 7a47 	vmov.f32	s15, s14
 8027b82:	e7d4      	b.n	8027b2e <__kernel_rem_pio2f+0x40a>
 8027b84:	ecb2 7a01 	vldmia	r2!, {s14}
 8027b88:	3301      	adds	r3, #1
 8027b8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027b8e:	e7d6      	b.n	8027b3e <__kernel_rem_pio2f+0x41a>
 8027b90:	ed72 7a01 	vldmdb	r2!, {s15}
 8027b94:	edd2 6a01 	vldr	s13, [r2, #4]
 8027b98:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027b9c:	3801      	subs	r0, #1
 8027b9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027ba2:	ed82 7a00 	vstr	s14, [r2]
 8027ba6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027baa:	edc2 7a01 	vstr	s15, [r2, #4]
 8027bae:	e79c      	b.n	8027aea <__kernel_rem_pio2f+0x3c6>
 8027bb0:	ed73 7a01 	vldmdb	r3!, {s15}
 8027bb4:	edd3 6a01 	vldr	s13, [r3, #4]
 8027bb8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027bbc:	3a01      	subs	r2, #1
 8027bbe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027bc2:	ed83 7a00 	vstr	s14, [r3]
 8027bc6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8027bca:	edc3 7a01 	vstr	s15, [r3, #4]
 8027bce:	e78f      	b.n	8027af0 <__kernel_rem_pio2f+0x3cc>
 8027bd0:	ed33 7a01 	vldmdb	r3!, {s14}
 8027bd4:	3c01      	subs	r4, #1
 8027bd6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8027bda:	e78f      	b.n	8027afc <__kernel_rem_pio2f+0x3d8>
 8027bdc:	eef1 6a66 	vneg.f32	s13, s13
 8027be0:	eeb1 7a47 	vneg.f32	s14, s14
 8027be4:	edc7 6a00 	vstr	s13, [r7]
 8027be8:	ed87 7a01 	vstr	s14, [r7, #4]
 8027bec:	eef1 7a67 	vneg.f32	s15, s15
 8027bf0:	e790      	b.n	8027b14 <__kernel_rem_pio2f+0x3f0>
 8027bf2:	bf00      	nop

08027bf4 <floorf>:
 8027bf4:	ee10 3a10 	vmov	r3, s0
 8027bf8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027bfc:	3a7f      	subs	r2, #127	@ 0x7f
 8027bfe:	2a16      	cmp	r2, #22
 8027c00:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8027c04:	dc2b      	bgt.n	8027c5e <floorf+0x6a>
 8027c06:	2a00      	cmp	r2, #0
 8027c08:	da12      	bge.n	8027c30 <floorf+0x3c>
 8027c0a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8027c70 <floorf+0x7c>
 8027c0e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027c12:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027c1a:	dd06      	ble.n	8027c2a <floorf+0x36>
 8027c1c:	2b00      	cmp	r3, #0
 8027c1e:	da24      	bge.n	8027c6a <floorf+0x76>
 8027c20:	2900      	cmp	r1, #0
 8027c22:	4b14      	ldr	r3, [pc, #80]	@ (8027c74 <floorf+0x80>)
 8027c24:	bf08      	it	eq
 8027c26:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 8027c2a:	ee00 3a10 	vmov	s0, r3
 8027c2e:	4770      	bx	lr
 8027c30:	4911      	ldr	r1, [pc, #68]	@ (8027c78 <floorf+0x84>)
 8027c32:	4111      	asrs	r1, r2
 8027c34:	420b      	tst	r3, r1
 8027c36:	d0fa      	beq.n	8027c2e <floorf+0x3a>
 8027c38:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8027c70 <floorf+0x7c>
 8027c3c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027c40:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027c44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027c48:	ddef      	ble.n	8027c2a <floorf+0x36>
 8027c4a:	2b00      	cmp	r3, #0
 8027c4c:	bfbe      	ittt	lt
 8027c4e:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8027c52:	fa40 f202 	asrlt.w	r2, r0, r2
 8027c56:	189b      	addlt	r3, r3, r2
 8027c58:	ea23 0301 	bic.w	r3, r3, r1
 8027c5c:	e7e5      	b.n	8027c2a <floorf+0x36>
 8027c5e:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8027c62:	d3e4      	bcc.n	8027c2e <floorf+0x3a>
 8027c64:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027c68:	4770      	bx	lr
 8027c6a:	2300      	movs	r3, #0
 8027c6c:	e7dd      	b.n	8027c2a <floorf+0x36>
 8027c6e:	bf00      	nop
 8027c70:	7149f2ca 	.word	0x7149f2ca
 8027c74:	bf800000 	.word	0xbf800000
 8027c78:	007fffff 	.word	0x007fffff

08027c7c <abort>:
 8027c7c:	b508      	push	{r3, lr}
 8027c7e:	2006      	movs	r0, #6
 8027c80:	f000 fa4e 	bl	8028120 <raise>
 8027c84:	2001      	movs	r0, #1
 8027c86:	f7da fbbf 	bl	8002408 <_exit>
	...

08027c8c <__assert_func>:
 8027c8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027c8e:	4614      	mov	r4, r2
 8027c90:	461a      	mov	r2, r3
 8027c92:	4b09      	ldr	r3, [pc, #36]	@ (8027cb8 <__assert_func+0x2c>)
 8027c94:	681b      	ldr	r3, [r3, #0]
 8027c96:	4605      	mov	r5, r0
 8027c98:	68d8      	ldr	r0, [r3, #12]
 8027c9a:	b14c      	cbz	r4, 8027cb0 <__assert_func+0x24>
 8027c9c:	4b07      	ldr	r3, [pc, #28]	@ (8027cbc <__assert_func+0x30>)
 8027c9e:	9100      	str	r1, [sp, #0]
 8027ca0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027ca4:	4906      	ldr	r1, [pc, #24]	@ (8027cc0 <__assert_func+0x34>)
 8027ca6:	462b      	mov	r3, r5
 8027ca8:	f000 f984 	bl	8027fb4 <fiprintf>
 8027cac:	f7ff ffe6 	bl	8027c7c <abort>
 8027cb0:	4b04      	ldr	r3, [pc, #16]	@ (8027cc4 <__assert_func+0x38>)
 8027cb2:	461c      	mov	r4, r3
 8027cb4:	e7f3      	b.n	8027c9e <__assert_func+0x12>
 8027cb6:	bf00      	nop
 8027cb8:	20000110 	.word	0x20000110
 8027cbc:	08029fd8 	.word	0x08029fd8
 8027cc0:	08029fe5 	.word	0x08029fe5
 8027cc4:	08029f9b 	.word	0x08029f9b

08027cc8 <atexit>:
 8027cc8:	2300      	movs	r3, #0
 8027cca:	4601      	mov	r1, r0
 8027ccc:	461a      	mov	r2, r3
 8027cce:	4618      	mov	r0, r3
 8027cd0:	f000 bad4 	b.w	802827c <__register_exitproc>

08027cd4 <malloc>:
 8027cd4:	4b02      	ldr	r3, [pc, #8]	@ (8027ce0 <malloc+0xc>)
 8027cd6:	4601      	mov	r1, r0
 8027cd8:	6818      	ldr	r0, [r3, #0]
 8027cda:	f000 b82d 	b.w	8027d38 <_malloc_r>
 8027cde:	bf00      	nop
 8027ce0:	20000110 	.word	0x20000110

08027ce4 <free>:
 8027ce4:	4b02      	ldr	r3, [pc, #8]	@ (8027cf0 <free+0xc>)
 8027ce6:	4601      	mov	r1, r0
 8027ce8:	6818      	ldr	r0, [r3, #0]
 8027cea:	f000 bb23 	b.w	8028334 <_free_r>
 8027cee:	bf00      	nop
 8027cf0:	20000110 	.word	0x20000110

08027cf4 <sbrk_aligned>:
 8027cf4:	b570      	push	{r4, r5, r6, lr}
 8027cf6:	4e0f      	ldr	r6, [pc, #60]	@ (8027d34 <sbrk_aligned+0x40>)
 8027cf8:	460c      	mov	r4, r1
 8027cfa:	6831      	ldr	r1, [r6, #0]
 8027cfc:	4605      	mov	r5, r0
 8027cfe:	b911      	cbnz	r1, 8027d06 <sbrk_aligned+0x12>
 8027d00:	f000 fa5e 	bl	80281c0 <_sbrk_r>
 8027d04:	6030      	str	r0, [r6, #0]
 8027d06:	4621      	mov	r1, r4
 8027d08:	4628      	mov	r0, r5
 8027d0a:	f000 fa59 	bl	80281c0 <_sbrk_r>
 8027d0e:	1c43      	adds	r3, r0, #1
 8027d10:	d103      	bne.n	8027d1a <sbrk_aligned+0x26>
 8027d12:	f04f 34ff 	mov.w	r4, #4294967295
 8027d16:	4620      	mov	r0, r4
 8027d18:	bd70      	pop	{r4, r5, r6, pc}
 8027d1a:	1cc4      	adds	r4, r0, #3
 8027d1c:	f024 0403 	bic.w	r4, r4, #3
 8027d20:	42a0      	cmp	r0, r4
 8027d22:	d0f8      	beq.n	8027d16 <sbrk_aligned+0x22>
 8027d24:	1a21      	subs	r1, r4, r0
 8027d26:	4628      	mov	r0, r5
 8027d28:	f000 fa4a 	bl	80281c0 <_sbrk_r>
 8027d2c:	3001      	adds	r0, #1
 8027d2e:	d1f2      	bne.n	8027d16 <sbrk_aligned+0x22>
 8027d30:	e7ef      	b.n	8027d12 <sbrk_aligned+0x1e>
 8027d32:	bf00      	nop
 8027d34:	200149bc 	.word	0x200149bc

08027d38 <_malloc_r>:
 8027d38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027d3c:	1ccd      	adds	r5, r1, #3
 8027d3e:	f025 0503 	bic.w	r5, r5, #3
 8027d42:	3508      	adds	r5, #8
 8027d44:	2d0c      	cmp	r5, #12
 8027d46:	bf38      	it	cc
 8027d48:	250c      	movcc	r5, #12
 8027d4a:	2d00      	cmp	r5, #0
 8027d4c:	4606      	mov	r6, r0
 8027d4e:	db01      	blt.n	8027d54 <_malloc_r+0x1c>
 8027d50:	42a9      	cmp	r1, r5
 8027d52:	d904      	bls.n	8027d5e <_malloc_r+0x26>
 8027d54:	230c      	movs	r3, #12
 8027d56:	6033      	str	r3, [r6, #0]
 8027d58:	2000      	movs	r0, #0
 8027d5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027d5e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8027e34 <_malloc_r+0xfc>
 8027d62:	f000 f869 	bl	8027e38 <__malloc_lock>
 8027d66:	f8d8 3000 	ldr.w	r3, [r8]
 8027d6a:	461c      	mov	r4, r3
 8027d6c:	bb44      	cbnz	r4, 8027dc0 <_malloc_r+0x88>
 8027d6e:	4629      	mov	r1, r5
 8027d70:	4630      	mov	r0, r6
 8027d72:	f7ff ffbf 	bl	8027cf4 <sbrk_aligned>
 8027d76:	1c43      	adds	r3, r0, #1
 8027d78:	4604      	mov	r4, r0
 8027d7a:	d158      	bne.n	8027e2e <_malloc_r+0xf6>
 8027d7c:	f8d8 4000 	ldr.w	r4, [r8]
 8027d80:	4627      	mov	r7, r4
 8027d82:	2f00      	cmp	r7, #0
 8027d84:	d143      	bne.n	8027e0e <_malloc_r+0xd6>
 8027d86:	2c00      	cmp	r4, #0
 8027d88:	d04b      	beq.n	8027e22 <_malloc_r+0xea>
 8027d8a:	6823      	ldr	r3, [r4, #0]
 8027d8c:	4639      	mov	r1, r7
 8027d8e:	4630      	mov	r0, r6
 8027d90:	eb04 0903 	add.w	r9, r4, r3
 8027d94:	f000 fa14 	bl	80281c0 <_sbrk_r>
 8027d98:	4581      	cmp	r9, r0
 8027d9a:	d142      	bne.n	8027e22 <_malloc_r+0xea>
 8027d9c:	6821      	ldr	r1, [r4, #0]
 8027d9e:	1a6d      	subs	r5, r5, r1
 8027da0:	4629      	mov	r1, r5
 8027da2:	4630      	mov	r0, r6
 8027da4:	f7ff ffa6 	bl	8027cf4 <sbrk_aligned>
 8027da8:	3001      	adds	r0, #1
 8027daa:	d03a      	beq.n	8027e22 <_malloc_r+0xea>
 8027dac:	6823      	ldr	r3, [r4, #0]
 8027dae:	442b      	add	r3, r5
 8027db0:	6023      	str	r3, [r4, #0]
 8027db2:	f8d8 3000 	ldr.w	r3, [r8]
 8027db6:	685a      	ldr	r2, [r3, #4]
 8027db8:	bb62      	cbnz	r2, 8027e14 <_malloc_r+0xdc>
 8027dba:	f8c8 7000 	str.w	r7, [r8]
 8027dbe:	e00f      	b.n	8027de0 <_malloc_r+0xa8>
 8027dc0:	6822      	ldr	r2, [r4, #0]
 8027dc2:	1b52      	subs	r2, r2, r5
 8027dc4:	d420      	bmi.n	8027e08 <_malloc_r+0xd0>
 8027dc6:	2a0b      	cmp	r2, #11
 8027dc8:	d917      	bls.n	8027dfa <_malloc_r+0xc2>
 8027dca:	1961      	adds	r1, r4, r5
 8027dcc:	42a3      	cmp	r3, r4
 8027dce:	6025      	str	r5, [r4, #0]
 8027dd0:	bf18      	it	ne
 8027dd2:	6059      	strne	r1, [r3, #4]
 8027dd4:	6863      	ldr	r3, [r4, #4]
 8027dd6:	bf08      	it	eq
 8027dd8:	f8c8 1000 	streq.w	r1, [r8]
 8027ddc:	5162      	str	r2, [r4, r5]
 8027dde:	604b      	str	r3, [r1, #4]
 8027de0:	4630      	mov	r0, r6
 8027de2:	f000 f82f 	bl	8027e44 <__malloc_unlock>
 8027de6:	f104 000b 	add.w	r0, r4, #11
 8027dea:	1d23      	adds	r3, r4, #4
 8027dec:	f020 0007 	bic.w	r0, r0, #7
 8027df0:	1ac2      	subs	r2, r0, r3
 8027df2:	bf1c      	itt	ne
 8027df4:	1a1b      	subne	r3, r3, r0
 8027df6:	50a3      	strne	r3, [r4, r2]
 8027df8:	e7af      	b.n	8027d5a <_malloc_r+0x22>
 8027dfa:	6862      	ldr	r2, [r4, #4]
 8027dfc:	42a3      	cmp	r3, r4
 8027dfe:	bf0c      	ite	eq
 8027e00:	f8c8 2000 	streq.w	r2, [r8]
 8027e04:	605a      	strne	r2, [r3, #4]
 8027e06:	e7eb      	b.n	8027de0 <_malloc_r+0xa8>
 8027e08:	4623      	mov	r3, r4
 8027e0a:	6864      	ldr	r4, [r4, #4]
 8027e0c:	e7ae      	b.n	8027d6c <_malloc_r+0x34>
 8027e0e:	463c      	mov	r4, r7
 8027e10:	687f      	ldr	r7, [r7, #4]
 8027e12:	e7b6      	b.n	8027d82 <_malloc_r+0x4a>
 8027e14:	461a      	mov	r2, r3
 8027e16:	685b      	ldr	r3, [r3, #4]
 8027e18:	42a3      	cmp	r3, r4
 8027e1a:	d1fb      	bne.n	8027e14 <_malloc_r+0xdc>
 8027e1c:	2300      	movs	r3, #0
 8027e1e:	6053      	str	r3, [r2, #4]
 8027e20:	e7de      	b.n	8027de0 <_malloc_r+0xa8>
 8027e22:	230c      	movs	r3, #12
 8027e24:	6033      	str	r3, [r6, #0]
 8027e26:	4630      	mov	r0, r6
 8027e28:	f000 f80c 	bl	8027e44 <__malloc_unlock>
 8027e2c:	e794      	b.n	8027d58 <_malloc_r+0x20>
 8027e2e:	6005      	str	r5, [r0, #0]
 8027e30:	e7d6      	b.n	8027de0 <_malloc_r+0xa8>
 8027e32:	bf00      	nop
 8027e34:	200149c0 	.word	0x200149c0

08027e38 <__malloc_lock>:
 8027e38:	4801      	ldr	r0, [pc, #4]	@ (8027e40 <__malloc_lock+0x8>)
 8027e3a:	f000 ba0e 	b.w	802825a <__retarget_lock_acquire_recursive>
 8027e3e:	bf00      	nop
 8027e40:	20014b04 	.word	0x20014b04

08027e44 <__malloc_unlock>:
 8027e44:	4801      	ldr	r0, [pc, #4]	@ (8027e4c <__malloc_unlock+0x8>)
 8027e46:	f000 ba09 	b.w	802825c <__retarget_lock_release_recursive>
 8027e4a:	bf00      	nop
 8027e4c:	20014b04 	.word	0x20014b04

08027e50 <__cxa_atexit>:
 8027e50:	b510      	push	{r4, lr}
 8027e52:	4604      	mov	r4, r0
 8027e54:	4804      	ldr	r0, [pc, #16]	@ (8027e68 <__cxa_atexit+0x18>)
 8027e56:	4613      	mov	r3, r2
 8027e58:	b120      	cbz	r0, 8027e64 <__cxa_atexit+0x14>
 8027e5a:	460a      	mov	r2, r1
 8027e5c:	2002      	movs	r0, #2
 8027e5e:	4621      	mov	r1, r4
 8027e60:	f000 fa0c 	bl	802827c <__register_exitproc>
 8027e64:	bd10      	pop	{r4, pc}
 8027e66:	bf00      	nop
 8027e68:	0802827d 	.word	0x0802827d

08027e6c <std>:
 8027e6c:	2300      	movs	r3, #0
 8027e6e:	b510      	push	{r4, lr}
 8027e70:	4604      	mov	r4, r0
 8027e72:	e9c0 3300 	strd	r3, r3, [r0]
 8027e76:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8027e7a:	6083      	str	r3, [r0, #8]
 8027e7c:	8181      	strh	r1, [r0, #12]
 8027e7e:	6643      	str	r3, [r0, #100]	@ 0x64
 8027e80:	81c2      	strh	r2, [r0, #14]
 8027e82:	6183      	str	r3, [r0, #24]
 8027e84:	4619      	mov	r1, r3
 8027e86:	2208      	movs	r2, #8
 8027e88:	305c      	adds	r0, #92	@ 0x5c
 8027e8a:	f000 f918 	bl	80280be <memset>
 8027e8e:	4b0d      	ldr	r3, [pc, #52]	@ (8027ec4 <std+0x58>)
 8027e90:	6263      	str	r3, [r4, #36]	@ 0x24
 8027e92:	4b0d      	ldr	r3, [pc, #52]	@ (8027ec8 <std+0x5c>)
 8027e94:	62a3      	str	r3, [r4, #40]	@ 0x28
 8027e96:	4b0d      	ldr	r3, [pc, #52]	@ (8027ecc <std+0x60>)
 8027e98:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8027e9a:	4b0d      	ldr	r3, [pc, #52]	@ (8027ed0 <std+0x64>)
 8027e9c:	6323      	str	r3, [r4, #48]	@ 0x30
 8027e9e:	4b0d      	ldr	r3, [pc, #52]	@ (8027ed4 <std+0x68>)
 8027ea0:	6224      	str	r4, [r4, #32]
 8027ea2:	429c      	cmp	r4, r3
 8027ea4:	d006      	beq.n	8027eb4 <std+0x48>
 8027ea6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8027eaa:	4294      	cmp	r4, r2
 8027eac:	d002      	beq.n	8027eb4 <std+0x48>
 8027eae:	33d0      	adds	r3, #208	@ 0xd0
 8027eb0:	429c      	cmp	r4, r3
 8027eb2:	d105      	bne.n	8027ec0 <std+0x54>
 8027eb4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8027eb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027ebc:	f000 b9cc 	b.w	8028258 <__retarget_lock_init_recursive>
 8027ec0:	bd10      	pop	{r4, pc}
 8027ec2:	bf00      	nop
 8027ec4:	08028039 	.word	0x08028039
 8027ec8:	0802805b 	.word	0x0802805b
 8027ecc:	08028093 	.word	0x08028093
 8027ed0:	080280b7 	.word	0x080280b7
 8027ed4:	200149c4 	.word	0x200149c4

08027ed8 <stdio_exit_handler>:
 8027ed8:	4a02      	ldr	r2, [pc, #8]	@ (8027ee4 <stdio_exit_handler+0xc>)
 8027eda:	4903      	ldr	r1, [pc, #12]	@ (8027ee8 <stdio_exit_handler+0x10>)
 8027edc:	4803      	ldr	r0, [pc, #12]	@ (8027eec <stdio_exit_handler+0x14>)
 8027ede:	f000 b87b 	b.w	8027fd8 <_fwalk_sglue>
 8027ee2:	bf00      	nop
 8027ee4:	20000104 	.word	0x20000104
 8027ee8:	08028a6d 	.word	0x08028a6d
 8027eec:	20000114 	.word	0x20000114

08027ef0 <cleanup_stdio>:
 8027ef0:	6841      	ldr	r1, [r0, #4]
 8027ef2:	4b0c      	ldr	r3, [pc, #48]	@ (8027f24 <cleanup_stdio+0x34>)
 8027ef4:	4299      	cmp	r1, r3
 8027ef6:	b510      	push	{r4, lr}
 8027ef8:	4604      	mov	r4, r0
 8027efa:	d001      	beq.n	8027f00 <cleanup_stdio+0x10>
 8027efc:	f000 fdb6 	bl	8028a6c <_fflush_r>
 8027f00:	68a1      	ldr	r1, [r4, #8]
 8027f02:	4b09      	ldr	r3, [pc, #36]	@ (8027f28 <cleanup_stdio+0x38>)
 8027f04:	4299      	cmp	r1, r3
 8027f06:	d002      	beq.n	8027f0e <cleanup_stdio+0x1e>
 8027f08:	4620      	mov	r0, r4
 8027f0a:	f000 fdaf 	bl	8028a6c <_fflush_r>
 8027f0e:	68e1      	ldr	r1, [r4, #12]
 8027f10:	4b06      	ldr	r3, [pc, #24]	@ (8027f2c <cleanup_stdio+0x3c>)
 8027f12:	4299      	cmp	r1, r3
 8027f14:	d004      	beq.n	8027f20 <cleanup_stdio+0x30>
 8027f16:	4620      	mov	r0, r4
 8027f18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f1c:	f000 bda6 	b.w	8028a6c <_fflush_r>
 8027f20:	bd10      	pop	{r4, pc}
 8027f22:	bf00      	nop
 8027f24:	200149c4 	.word	0x200149c4
 8027f28:	20014a2c 	.word	0x20014a2c
 8027f2c:	20014a94 	.word	0x20014a94

08027f30 <global_stdio_init.part.0>:
 8027f30:	b510      	push	{r4, lr}
 8027f32:	4b0b      	ldr	r3, [pc, #44]	@ (8027f60 <global_stdio_init.part.0+0x30>)
 8027f34:	4c0b      	ldr	r4, [pc, #44]	@ (8027f64 <global_stdio_init.part.0+0x34>)
 8027f36:	4a0c      	ldr	r2, [pc, #48]	@ (8027f68 <global_stdio_init.part.0+0x38>)
 8027f38:	601a      	str	r2, [r3, #0]
 8027f3a:	4620      	mov	r0, r4
 8027f3c:	2200      	movs	r2, #0
 8027f3e:	2104      	movs	r1, #4
 8027f40:	f7ff ff94 	bl	8027e6c <std>
 8027f44:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8027f48:	2201      	movs	r2, #1
 8027f4a:	2109      	movs	r1, #9
 8027f4c:	f7ff ff8e 	bl	8027e6c <std>
 8027f50:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8027f54:	2202      	movs	r2, #2
 8027f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f5a:	2112      	movs	r1, #18
 8027f5c:	f7ff bf86 	b.w	8027e6c <std>
 8027f60:	20014afc 	.word	0x20014afc
 8027f64:	200149c4 	.word	0x200149c4
 8027f68:	08027ed9 	.word	0x08027ed9

08027f6c <__sfp_lock_acquire>:
 8027f6c:	4801      	ldr	r0, [pc, #4]	@ (8027f74 <__sfp_lock_acquire+0x8>)
 8027f6e:	f000 b974 	b.w	802825a <__retarget_lock_acquire_recursive>
 8027f72:	bf00      	nop
 8027f74:	20014b06 	.word	0x20014b06

08027f78 <__sfp_lock_release>:
 8027f78:	4801      	ldr	r0, [pc, #4]	@ (8027f80 <__sfp_lock_release+0x8>)
 8027f7a:	f000 b96f 	b.w	802825c <__retarget_lock_release_recursive>
 8027f7e:	bf00      	nop
 8027f80:	20014b06 	.word	0x20014b06

08027f84 <__sinit>:
 8027f84:	b510      	push	{r4, lr}
 8027f86:	4604      	mov	r4, r0
 8027f88:	f7ff fff0 	bl	8027f6c <__sfp_lock_acquire>
 8027f8c:	6a23      	ldr	r3, [r4, #32]
 8027f8e:	b11b      	cbz	r3, 8027f98 <__sinit+0x14>
 8027f90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027f94:	f7ff bff0 	b.w	8027f78 <__sfp_lock_release>
 8027f98:	4b04      	ldr	r3, [pc, #16]	@ (8027fac <__sinit+0x28>)
 8027f9a:	6223      	str	r3, [r4, #32]
 8027f9c:	4b04      	ldr	r3, [pc, #16]	@ (8027fb0 <__sinit+0x2c>)
 8027f9e:	681b      	ldr	r3, [r3, #0]
 8027fa0:	2b00      	cmp	r3, #0
 8027fa2:	d1f5      	bne.n	8027f90 <__sinit+0xc>
 8027fa4:	f7ff ffc4 	bl	8027f30 <global_stdio_init.part.0>
 8027fa8:	e7f2      	b.n	8027f90 <__sinit+0xc>
 8027faa:	bf00      	nop
 8027fac:	08027ef1 	.word	0x08027ef1
 8027fb0:	20014afc 	.word	0x20014afc

08027fb4 <fiprintf>:
 8027fb4:	b40e      	push	{r1, r2, r3}
 8027fb6:	b503      	push	{r0, r1, lr}
 8027fb8:	4601      	mov	r1, r0
 8027fba:	ab03      	add	r3, sp, #12
 8027fbc:	4805      	ldr	r0, [pc, #20]	@ (8027fd4 <fiprintf+0x20>)
 8027fbe:	f853 2b04 	ldr.w	r2, [r3], #4
 8027fc2:	6800      	ldr	r0, [r0, #0]
 8027fc4:	9301      	str	r3, [sp, #4]
 8027fc6:	f000 fa29 	bl	802841c <_vfiprintf_r>
 8027fca:	b002      	add	sp, #8
 8027fcc:	f85d eb04 	ldr.w	lr, [sp], #4
 8027fd0:	b003      	add	sp, #12
 8027fd2:	4770      	bx	lr
 8027fd4:	20000110 	.word	0x20000110

08027fd8 <_fwalk_sglue>:
 8027fd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027fdc:	4607      	mov	r7, r0
 8027fde:	4688      	mov	r8, r1
 8027fe0:	4614      	mov	r4, r2
 8027fe2:	2600      	movs	r6, #0
 8027fe4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027fe8:	f1b9 0901 	subs.w	r9, r9, #1
 8027fec:	d505      	bpl.n	8027ffa <_fwalk_sglue+0x22>
 8027fee:	6824      	ldr	r4, [r4, #0]
 8027ff0:	2c00      	cmp	r4, #0
 8027ff2:	d1f7      	bne.n	8027fe4 <_fwalk_sglue+0xc>
 8027ff4:	4630      	mov	r0, r6
 8027ff6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027ffa:	89ab      	ldrh	r3, [r5, #12]
 8027ffc:	2b01      	cmp	r3, #1
 8027ffe:	d907      	bls.n	8028010 <_fwalk_sglue+0x38>
 8028000:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8028004:	3301      	adds	r3, #1
 8028006:	d003      	beq.n	8028010 <_fwalk_sglue+0x38>
 8028008:	4629      	mov	r1, r5
 802800a:	4638      	mov	r0, r7
 802800c:	47c0      	blx	r8
 802800e:	4306      	orrs	r6, r0
 8028010:	3568      	adds	r5, #104	@ 0x68
 8028012:	e7e9      	b.n	8027fe8 <_fwalk_sglue+0x10>

08028014 <iprintf>:
 8028014:	b40f      	push	{r0, r1, r2, r3}
 8028016:	b507      	push	{r0, r1, r2, lr}
 8028018:	4906      	ldr	r1, [pc, #24]	@ (8028034 <iprintf+0x20>)
 802801a:	ab04      	add	r3, sp, #16
 802801c:	6808      	ldr	r0, [r1, #0]
 802801e:	f853 2b04 	ldr.w	r2, [r3], #4
 8028022:	6881      	ldr	r1, [r0, #8]
 8028024:	9301      	str	r3, [sp, #4]
 8028026:	f000 f9f9 	bl	802841c <_vfiprintf_r>
 802802a:	b003      	add	sp, #12
 802802c:	f85d eb04 	ldr.w	lr, [sp], #4
 8028030:	b004      	add	sp, #16
 8028032:	4770      	bx	lr
 8028034:	20000110 	.word	0x20000110

08028038 <__sread>:
 8028038:	b510      	push	{r4, lr}
 802803a:	460c      	mov	r4, r1
 802803c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028040:	f000 f898 	bl	8028174 <_read_r>
 8028044:	2800      	cmp	r0, #0
 8028046:	bfab      	itete	ge
 8028048:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802804a:	89a3      	ldrhlt	r3, [r4, #12]
 802804c:	181b      	addge	r3, r3, r0
 802804e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8028052:	bfac      	ite	ge
 8028054:	6563      	strge	r3, [r4, #84]	@ 0x54
 8028056:	81a3      	strhlt	r3, [r4, #12]
 8028058:	bd10      	pop	{r4, pc}

0802805a <__swrite>:
 802805a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802805e:	461f      	mov	r7, r3
 8028060:	898b      	ldrh	r3, [r1, #12]
 8028062:	05db      	lsls	r3, r3, #23
 8028064:	4605      	mov	r5, r0
 8028066:	460c      	mov	r4, r1
 8028068:	4616      	mov	r6, r2
 802806a:	d505      	bpl.n	8028078 <__swrite+0x1e>
 802806c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028070:	2302      	movs	r3, #2
 8028072:	2200      	movs	r2, #0
 8028074:	f000 f86c 	bl	8028150 <_lseek_r>
 8028078:	89a3      	ldrh	r3, [r4, #12]
 802807a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802807e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8028082:	81a3      	strh	r3, [r4, #12]
 8028084:	4632      	mov	r2, r6
 8028086:	463b      	mov	r3, r7
 8028088:	4628      	mov	r0, r5
 802808a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802808e:	f000 b8a7 	b.w	80281e0 <_write_r>

08028092 <__sseek>:
 8028092:	b510      	push	{r4, lr}
 8028094:	460c      	mov	r4, r1
 8028096:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802809a:	f000 f859 	bl	8028150 <_lseek_r>
 802809e:	1c43      	adds	r3, r0, #1
 80280a0:	89a3      	ldrh	r3, [r4, #12]
 80280a2:	bf15      	itete	ne
 80280a4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80280a6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80280aa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80280ae:	81a3      	strheq	r3, [r4, #12]
 80280b0:	bf18      	it	ne
 80280b2:	81a3      	strhne	r3, [r4, #12]
 80280b4:	bd10      	pop	{r4, pc}

080280b6 <__sclose>:
 80280b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80280ba:	f000 b839 	b.w	8028130 <_close_r>

080280be <memset>:
 80280be:	4402      	add	r2, r0
 80280c0:	4603      	mov	r3, r0
 80280c2:	4293      	cmp	r3, r2
 80280c4:	d100      	bne.n	80280c8 <memset+0xa>
 80280c6:	4770      	bx	lr
 80280c8:	f803 1b01 	strb.w	r1, [r3], #1
 80280cc:	e7f9      	b.n	80280c2 <memset+0x4>

080280ce <_raise_r>:
 80280ce:	291f      	cmp	r1, #31
 80280d0:	b538      	push	{r3, r4, r5, lr}
 80280d2:	4605      	mov	r5, r0
 80280d4:	460c      	mov	r4, r1
 80280d6:	d904      	bls.n	80280e2 <_raise_r+0x14>
 80280d8:	2316      	movs	r3, #22
 80280da:	6003      	str	r3, [r0, #0]
 80280dc:	f04f 30ff 	mov.w	r0, #4294967295
 80280e0:	bd38      	pop	{r3, r4, r5, pc}
 80280e2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80280e4:	b112      	cbz	r2, 80280ec <_raise_r+0x1e>
 80280e6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80280ea:	b94b      	cbnz	r3, 8028100 <_raise_r+0x32>
 80280ec:	4628      	mov	r0, r5
 80280ee:	f000 f865 	bl	80281bc <_getpid_r>
 80280f2:	4622      	mov	r2, r4
 80280f4:	4601      	mov	r1, r0
 80280f6:	4628      	mov	r0, r5
 80280f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80280fc:	f000 b84c 	b.w	8028198 <_kill_r>
 8028100:	2b01      	cmp	r3, #1
 8028102:	d00a      	beq.n	802811a <_raise_r+0x4c>
 8028104:	1c59      	adds	r1, r3, #1
 8028106:	d103      	bne.n	8028110 <_raise_r+0x42>
 8028108:	2316      	movs	r3, #22
 802810a:	6003      	str	r3, [r0, #0]
 802810c:	2001      	movs	r0, #1
 802810e:	e7e7      	b.n	80280e0 <_raise_r+0x12>
 8028110:	2100      	movs	r1, #0
 8028112:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8028116:	4620      	mov	r0, r4
 8028118:	4798      	blx	r3
 802811a:	2000      	movs	r0, #0
 802811c:	e7e0      	b.n	80280e0 <_raise_r+0x12>
	...

08028120 <raise>:
 8028120:	4b02      	ldr	r3, [pc, #8]	@ (802812c <raise+0xc>)
 8028122:	4601      	mov	r1, r0
 8028124:	6818      	ldr	r0, [r3, #0]
 8028126:	f7ff bfd2 	b.w	80280ce <_raise_r>
 802812a:	bf00      	nop
 802812c:	20000110 	.word	0x20000110

08028130 <_close_r>:
 8028130:	b538      	push	{r3, r4, r5, lr}
 8028132:	4d06      	ldr	r5, [pc, #24]	@ (802814c <_close_r+0x1c>)
 8028134:	2300      	movs	r3, #0
 8028136:	4604      	mov	r4, r0
 8028138:	4608      	mov	r0, r1
 802813a:	602b      	str	r3, [r5, #0]
 802813c:	f7da f978 	bl	8002430 <_close>
 8028140:	1c43      	adds	r3, r0, #1
 8028142:	d102      	bne.n	802814a <_close_r+0x1a>
 8028144:	682b      	ldr	r3, [r5, #0]
 8028146:	b103      	cbz	r3, 802814a <_close_r+0x1a>
 8028148:	6023      	str	r3, [r4, #0]
 802814a:	bd38      	pop	{r3, r4, r5, pc}
 802814c:	20014b00 	.word	0x20014b00

08028150 <_lseek_r>:
 8028150:	b538      	push	{r3, r4, r5, lr}
 8028152:	4d07      	ldr	r5, [pc, #28]	@ (8028170 <_lseek_r+0x20>)
 8028154:	4604      	mov	r4, r0
 8028156:	4608      	mov	r0, r1
 8028158:	4611      	mov	r1, r2
 802815a:	2200      	movs	r2, #0
 802815c:	602a      	str	r2, [r5, #0]
 802815e:	461a      	mov	r2, r3
 8028160:	f7da f970 	bl	8002444 <_lseek>
 8028164:	1c43      	adds	r3, r0, #1
 8028166:	d102      	bne.n	802816e <_lseek_r+0x1e>
 8028168:	682b      	ldr	r3, [r5, #0]
 802816a:	b103      	cbz	r3, 802816e <_lseek_r+0x1e>
 802816c:	6023      	str	r3, [r4, #0]
 802816e:	bd38      	pop	{r3, r4, r5, pc}
 8028170:	20014b00 	.word	0x20014b00

08028174 <_read_r>:
 8028174:	b538      	push	{r3, r4, r5, lr}
 8028176:	4d07      	ldr	r5, [pc, #28]	@ (8028194 <_read_r+0x20>)
 8028178:	4604      	mov	r4, r0
 802817a:	4608      	mov	r0, r1
 802817c:	4611      	mov	r1, r2
 802817e:	2200      	movs	r2, #0
 8028180:	602a      	str	r2, [r5, #0]
 8028182:	461a      	mov	r2, r3
 8028184:	f7da f946 	bl	8002414 <_read>
 8028188:	1c43      	adds	r3, r0, #1
 802818a:	d102      	bne.n	8028192 <_read_r+0x1e>
 802818c:	682b      	ldr	r3, [r5, #0]
 802818e:	b103      	cbz	r3, 8028192 <_read_r+0x1e>
 8028190:	6023      	str	r3, [r4, #0]
 8028192:	bd38      	pop	{r3, r4, r5, pc}
 8028194:	20014b00 	.word	0x20014b00

08028198 <_kill_r>:
 8028198:	b538      	push	{r3, r4, r5, lr}
 802819a:	4d07      	ldr	r5, [pc, #28]	@ (80281b8 <_kill_r+0x20>)
 802819c:	2300      	movs	r3, #0
 802819e:	4604      	mov	r4, r0
 80281a0:	4608      	mov	r0, r1
 80281a2:	4611      	mov	r1, r2
 80281a4:	602b      	str	r3, [r5, #0]
 80281a6:	f7da f927 	bl	80023f8 <_kill>
 80281aa:	1c43      	adds	r3, r0, #1
 80281ac:	d102      	bne.n	80281b4 <_kill_r+0x1c>
 80281ae:	682b      	ldr	r3, [r5, #0]
 80281b0:	b103      	cbz	r3, 80281b4 <_kill_r+0x1c>
 80281b2:	6023      	str	r3, [r4, #0]
 80281b4:	bd38      	pop	{r3, r4, r5, pc}
 80281b6:	bf00      	nop
 80281b8:	20014b00 	.word	0x20014b00

080281bc <_getpid_r>:
 80281bc:	f7da b91a 	b.w	80023f4 <_getpid>

080281c0 <_sbrk_r>:
 80281c0:	b538      	push	{r3, r4, r5, lr}
 80281c2:	4d06      	ldr	r5, [pc, #24]	@ (80281dc <_sbrk_r+0x1c>)
 80281c4:	2300      	movs	r3, #0
 80281c6:	4604      	mov	r4, r0
 80281c8:	4608      	mov	r0, r1
 80281ca:	602b      	str	r3, [r5, #0]
 80281cc:	f7da f948 	bl	8002460 <_sbrk>
 80281d0:	1c43      	adds	r3, r0, #1
 80281d2:	d102      	bne.n	80281da <_sbrk_r+0x1a>
 80281d4:	682b      	ldr	r3, [r5, #0]
 80281d6:	b103      	cbz	r3, 80281da <_sbrk_r+0x1a>
 80281d8:	6023      	str	r3, [r4, #0]
 80281da:	bd38      	pop	{r3, r4, r5, pc}
 80281dc:	20014b00 	.word	0x20014b00

080281e0 <_write_r>:
 80281e0:	b538      	push	{r3, r4, r5, lr}
 80281e2:	4d07      	ldr	r5, [pc, #28]	@ (8028200 <_write_r+0x20>)
 80281e4:	4604      	mov	r4, r0
 80281e6:	4608      	mov	r0, r1
 80281e8:	4611      	mov	r1, r2
 80281ea:	2200      	movs	r2, #0
 80281ec:	602a      	str	r2, [r5, #0]
 80281ee:	461a      	mov	r2, r3
 80281f0:	f7da f92a 	bl	8002448 <_write>
 80281f4:	1c43      	adds	r3, r0, #1
 80281f6:	d102      	bne.n	80281fe <_write_r+0x1e>
 80281f8:	682b      	ldr	r3, [r5, #0]
 80281fa:	b103      	cbz	r3, 80281fe <_write_r+0x1e>
 80281fc:	6023      	str	r3, [r4, #0]
 80281fe:	bd38      	pop	{r3, r4, r5, pc}
 8028200:	20014b00 	.word	0x20014b00

08028204 <__errno>:
 8028204:	4b01      	ldr	r3, [pc, #4]	@ (802820c <__errno+0x8>)
 8028206:	6818      	ldr	r0, [r3, #0]
 8028208:	4770      	bx	lr
 802820a:	bf00      	nop
 802820c:	20000110 	.word	0x20000110

08028210 <__libc_init_array>:
 8028210:	b570      	push	{r4, r5, r6, lr}
 8028212:	4d0d      	ldr	r5, [pc, #52]	@ (8028248 <__libc_init_array+0x38>)
 8028214:	4c0d      	ldr	r4, [pc, #52]	@ (802824c <__libc_init_array+0x3c>)
 8028216:	1b64      	subs	r4, r4, r5
 8028218:	10a4      	asrs	r4, r4, #2
 802821a:	2600      	movs	r6, #0
 802821c:	42a6      	cmp	r6, r4
 802821e:	d109      	bne.n	8028234 <__libc_init_array+0x24>
 8028220:	4d0b      	ldr	r5, [pc, #44]	@ (8028250 <__libc_init_array+0x40>)
 8028222:	4c0c      	ldr	r4, [pc, #48]	@ (8028254 <__libc_init_array+0x44>)
 8028224:	f000 fd62 	bl	8028cec <_init>
 8028228:	1b64      	subs	r4, r4, r5
 802822a:	10a4      	asrs	r4, r4, #2
 802822c:	2600      	movs	r6, #0
 802822e:	42a6      	cmp	r6, r4
 8028230:	d105      	bne.n	802823e <__libc_init_array+0x2e>
 8028232:	bd70      	pop	{r4, r5, r6, pc}
 8028234:	f855 3b04 	ldr.w	r3, [r5], #4
 8028238:	4798      	blx	r3
 802823a:	3601      	adds	r6, #1
 802823c:	e7ee      	b.n	802821c <__libc_init_array+0xc>
 802823e:	f855 3b04 	ldr.w	r3, [r5], #4
 8028242:	4798      	blx	r3
 8028244:	3601      	adds	r6, #1
 8028246:	e7f2      	b.n	802822e <__libc_init_array+0x1e>
 8028248:	0804baf8 	.word	0x0804baf8
 802824c:	0804baf8 	.word	0x0804baf8
 8028250:	0804baf8 	.word	0x0804baf8
 8028254:	0804bb0c 	.word	0x0804bb0c

08028258 <__retarget_lock_init_recursive>:
 8028258:	4770      	bx	lr

0802825a <__retarget_lock_acquire_recursive>:
 802825a:	4770      	bx	lr

0802825c <__retarget_lock_release_recursive>:
 802825c:	4770      	bx	lr

0802825e <memcpy>:
 802825e:	440a      	add	r2, r1
 8028260:	4291      	cmp	r1, r2
 8028262:	f100 33ff 	add.w	r3, r0, #4294967295
 8028266:	d100      	bne.n	802826a <memcpy+0xc>
 8028268:	4770      	bx	lr
 802826a:	b510      	push	{r4, lr}
 802826c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028270:	f803 4f01 	strb.w	r4, [r3, #1]!
 8028274:	4291      	cmp	r1, r2
 8028276:	d1f9      	bne.n	802826c <memcpy+0xe>
 8028278:	bd10      	pop	{r4, pc}
	...

0802827c <__register_exitproc>:
 802827c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8028280:	4d27      	ldr	r5, [pc, #156]	@ (8028320 <__register_exitproc+0xa4>)
 8028282:	4607      	mov	r7, r0
 8028284:	6828      	ldr	r0, [r5, #0]
 8028286:	4691      	mov	r9, r2
 8028288:	460e      	mov	r6, r1
 802828a:	4698      	mov	r8, r3
 802828c:	f7ff ffe5 	bl	802825a <__retarget_lock_acquire_recursive>
 8028290:	4a24      	ldr	r2, [pc, #144]	@ (8028324 <__register_exitproc+0xa8>)
 8028292:	6814      	ldr	r4, [r2, #0]
 8028294:	b93c      	cbnz	r4, 80282a6 <__register_exitproc+0x2a>
 8028296:	4b24      	ldr	r3, [pc, #144]	@ (8028328 <__register_exitproc+0xac>)
 8028298:	6013      	str	r3, [r2, #0]
 802829a:	4a24      	ldr	r2, [pc, #144]	@ (802832c <__register_exitproc+0xb0>)
 802829c:	b112      	cbz	r2, 80282a4 <__register_exitproc+0x28>
 802829e:	6812      	ldr	r2, [r2, #0]
 80282a0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80282a4:	4c20      	ldr	r4, [pc, #128]	@ (8028328 <__register_exitproc+0xac>)
 80282a6:	6863      	ldr	r3, [r4, #4]
 80282a8:	2b1f      	cmp	r3, #31
 80282aa:	dd06      	ble.n	80282ba <__register_exitproc+0x3e>
 80282ac:	6828      	ldr	r0, [r5, #0]
 80282ae:	f7ff ffd5 	bl	802825c <__retarget_lock_release_recursive>
 80282b2:	f04f 30ff 	mov.w	r0, #4294967295
 80282b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80282ba:	b32f      	cbz	r7, 8028308 <__register_exitproc+0x8c>
 80282bc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80282c0:	b968      	cbnz	r0, 80282de <__register_exitproc+0x62>
 80282c2:	4b1b      	ldr	r3, [pc, #108]	@ (8028330 <__register_exitproc+0xb4>)
 80282c4:	2b00      	cmp	r3, #0
 80282c6:	d0f1      	beq.n	80282ac <__register_exitproc+0x30>
 80282c8:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80282cc:	f7ff fd02 	bl	8027cd4 <malloc>
 80282d0:	2800      	cmp	r0, #0
 80282d2:	d0eb      	beq.n	80282ac <__register_exitproc+0x30>
 80282d4:	2300      	movs	r3, #0
 80282d6:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80282da:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80282de:	6863      	ldr	r3, [r4, #4]
 80282e0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80282e4:	2201      	movs	r2, #1
 80282e6:	409a      	lsls	r2, r3
 80282e8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80282ec:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80282f0:	4313      	orrs	r3, r2
 80282f2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80282f6:	2f02      	cmp	r7, #2
 80282f8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80282fc:	bf02      	ittt	eq
 80282fe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8028302:	4313      	orreq	r3, r2
 8028304:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8028308:	6863      	ldr	r3, [r4, #4]
 802830a:	6828      	ldr	r0, [r5, #0]
 802830c:	1c5a      	adds	r2, r3, #1
 802830e:	3302      	adds	r3, #2
 8028310:	6062      	str	r2, [r4, #4]
 8028312:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8028316:	f7ff ffa1 	bl	802825c <__retarget_lock_release_recursive>
 802831a:	2000      	movs	r0, #0
 802831c:	e7cb      	b.n	80282b6 <__register_exitproc+0x3a>
 802831e:	bf00      	nop
 8028320:	20000160 	.word	0x20000160
 8028324:	20014b94 	.word	0x20014b94
 8028328:	20014b08 	.word	0x20014b08
 802832c:	0802bae4 	.word	0x0802bae4
 8028330:	08027cd5 	.word	0x08027cd5

08028334 <_free_r>:
 8028334:	b538      	push	{r3, r4, r5, lr}
 8028336:	4605      	mov	r5, r0
 8028338:	2900      	cmp	r1, #0
 802833a:	d041      	beq.n	80283c0 <_free_r+0x8c>
 802833c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8028340:	1f0c      	subs	r4, r1, #4
 8028342:	2b00      	cmp	r3, #0
 8028344:	bfb8      	it	lt
 8028346:	18e4      	addlt	r4, r4, r3
 8028348:	f7ff fd76 	bl	8027e38 <__malloc_lock>
 802834c:	4a1d      	ldr	r2, [pc, #116]	@ (80283c4 <_free_r+0x90>)
 802834e:	6813      	ldr	r3, [r2, #0]
 8028350:	b933      	cbnz	r3, 8028360 <_free_r+0x2c>
 8028352:	6063      	str	r3, [r4, #4]
 8028354:	6014      	str	r4, [r2, #0]
 8028356:	4628      	mov	r0, r5
 8028358:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802835c:	f7ff bd72 	b.w	8027e44 <__malloc_unlock>
 8028360:	42a3      	cmp	r3, r4
 8028362:	d908      	bls.n	8028376 <_free_r+0x42>
 8028364:	6820      	ldr	r0, [r4, #0]
 8028366:	1821      	adds	r1, r4, r0
 8028368:	428b      	cmp	r3, r1
 802836a:	bf01      	itttt	eq
 802836c:	6819      	ldreq	r1, [r3, #0]
 802836e:	685b      	ldreq	r3, [r3, #4]
 8028370:	1809      	addeq	r1, r1, r0
 8028372:	6021      	streq	r1, [r4, #0]
 8028374:	e7ed      	b.n	8028352 <_free_r+0x1e>
 8028376:	461a      	mov	r2, r3
 8028378:	685b      	ldr	r3, [r3, #4]
 802837a:	b10b      	cbz	r3, 8028380 <_free_r+0x4c>
 802837c:	42a3      	cmp	r3, r4
 802837e:	d9fa      	bls.n	8028376 <_free_r+0x42>
 8028380:	6811      	ldr	r1, [r2, #0]
 8028382:	1850      	adds	r0, r2, r1
 8028384:	42a0      	cmp	r0, r4
 8028386:	d10b      	bne.n	80283a0 <_free_r+0x6c>
 8028388:	6820      	ldr	r0, [r4, #0]
 802838a:	4401      	add	r1, r0
 802838c:	1850      	adds	r0, r2, r1
 802838e:	4283      	cmp	r3, r0
 8028390:	6011      	str	r1, [r2, #0]
 8028392:	d1e0      	bne.n	8028356 <_free_r+0x22>
 8028394:	6818      	ldr	r0, [r3, #0]
 8028396:	685b      	ldr	r3, [r3, #4]
 8028398:	6053      	str	r3, [r2, #4]
 802839a:	4408      	add	r0, r1
 802839c:	6010      	str	r0, [r2, #0]
 802839e:	e7da      	b.n	8028356 <_free_r+0x22>
 80283a0:	d902      	bls.n	80283a8 <_free_r+0x74>
 80283a2:	230c      	movs	r3, #12
 80283a4:	602b      	str	r3, [r5, #0]
 80283a6:	e7d6      	b.n	8028356 <_free_r+0x22>
 80283a8:	6820      	ldr	r0, [r4, #0]
 80283aa:	1821      	adds	r1, r4, r0
 80283ac:	428b      	cmp	r3, r1
 80283ae:	bf04      	itt	eq
 80283b0:	6819      	ldreq	r1, [r3, #0]
 80283b2:	685b      	ldreq	r3, [r3, #4]
 80283b4:	6063      	str	r3, [r4, #4]
 80283b6:	bf04      	itt	eq
 80283b8:	1809      	addeq	r1, r1, r0
 80283ba:	6021      	streq	r1, [r4, #0]
 80283bc:	6054      	str	r4, [r2, #4]
 80283be:	e7ca      	b.n	8028356 <_free_r+0x22>
 80283c0:	bd38      	pop	{r3, r4, r5, pc}
 80283c2:	bf00      	nop
 80283c4:	200149c0 	.word	0x200149c0

080283c8 <__sfputc_r>:
 80283c8:	6893      	ldr	r3, [r2, #8]
 80283ca:	3b01      	subs	r3, #1
 80283cc:	2b00      	cmp	r3, #0
 80283ce:	b410      	push	{r4}
 80283d0:	6093      	str	r3, [r2, #8]
 80283d2:	da08      	bge.n	80283e6 <__sfputc_r+0x1e>
 80283d4:	6994      	ldr	r4, [r2, #24]
 80283d6:	42a3      	cmp	r3, r4
 80283d8:	db01      	blt.n	80283de <__sfputc_r+0x16>
 80283da:	290a      	cmp	r1, #10
 80283dc:	d103      	bne.n	80283e6 <__sfputc_r+0x1e>
 80283de:	f85d 4b04 	ldr.w	r4, [sp], #4
 80283e2:	f000 bb6b 	b.w	8028abc <__swbuf_r>
 80283e6:	6813      	ldr	r3, [r2, #0]
 80283e8:	1c58      	adds	r0, r3, #1
 80283ea:	6010      	str	r0, [r2, #0]
 80283ec:	7019      	strb	r1, [r3, #0]
 80283ee:	4608      	mov	r0, r1
 80283f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80283f4:	4770      	bx	lr

080283f6 <__sfputs_r>:
 80283f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80283f8:	4606      	mov	r6, r0
 80283fa:	460f      	mov	r7, r1
 80283fc:	4614      	mov	r4, r2
 80283fe:	18d5      	adds	r5, r2, r3
 8028400:	42ac      	cmp	r4, r5
 8028402:	d101      	bne.n	8028408 <__sfputs_r+0x12>
 8028404:	2000      	movs	r0, #0
 8028406:	e007      	b.n	8028418 <__sfputs_r+0x22>
 8028408:	f814 1b01 	ldrb.w	r1, [r4], #1
 802840c:	463a      	mov	r2, r7
 802840e:	4630      	mov	r0, r6
 8028410:	f7ff ffda 	bl	80283c8 <__sfputc_r>
 8028414:	1c43      	adds	r3, r0, #1
 8028416:	d1f3      	bne.n	8028400 <__sfputs_r+0xa>
 8028418:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802841c <_vfiprintf_r>:
 802841c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028420:	460d      	mov	r5, r1
 8028422:	b09d      	sub	sp, #116	@ 0x74
 8028424:	4614      	mov	r4, r2
 8028426:	4698      	mov	r8, r3
 8028428:	4606      	mov	r6, r0
 802842a:	b118      	cbz	r0, 8028434 <_vfiprintf_r+0x18>
 802842c:	6a03      	ldr	r3, [r0, #32]
 802842e:	b90b      	cbnz	r3, 8028434 <_vfiprintf_r+0x18>
 8028430:	f7ff fda8 	bl	8027f84 <__sinit>
 8028434:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8028436:	07d9      	lsls	r1, r3, #31
 8028438:	d405      	bmi.n	8028446 <_vfiprintf_r+0x2a>
 802843a:	89ab      	ldrh	r3, [r5, #12]
 802843c:	059a      	lsls	r2, r3, #22
 802843e:	d402      	bmi.n	8028446 <_vfiprintf_r+0x2a>
 8028440:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028442:	f7ff ff0a 	bl	802825a <__retarget_lock_acquire_recursive>
 8028446:	89ab      	ldrh	r3, [r5, #12]
 8028448:	071b      	lsls	r3, r3, #28
 802844a:	d501      	bpl.n	8028450 <_vfiprintf_r+0x34>
 802844c:	692b      	ldr	r3, [r5, #16]
 802844e:	b99b      	cbnz	r3, 8028478 <_vfiprintf_r+0x5c>
 8028450:	4629      	mov	r1, r5
 8028452:	4630      	mov	r0, r6
 8028454:	f000 fb70 	bl	8028b38 <__swsetup_r>
 8028458:	b170      	cbz	r0, 8028478 <_vfiprintf_r+0x5c>
 802845a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802845c:	07dc      	lsls	r4, r3, #31
 802845e:	d504      	bpl.n	802846a <_vfiprintf_r+0x4e>
 8028460:	f04f 30ff 	mov.w	r0, #4294967295
 8028464:	b01d      	add	sp, #116	@ 0x74
 8028466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802846a:	89ab      	ldrh	r3, [r5, #12]
 802846c:	0598      	lsls	r0, r3, #22
 802846e:	d4f7      	bmi.n	8028460 <_vfiprintf_r+0x44>
 8028470:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028472:	f7ff fef3 	bl	802825c <__retarget_lock_release_recursive>
 8028476:	e7f3      	b.n	8028460 <_vfiprintf_r+0x44>
 8028478:	2300      	movs	r3, #0
 802847a:	9309      	str	r3, [sp, #36]	@ 0x24
 802847c:	2320      	movs	r3, #32
 802847e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8028482:	f8cd 800c 	str.w	r8, [sp, #12]
 8028486:	2330      	movs	r3, #48	@ 0x30
 8028488:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8028638 <_vfiprintf_r+0x21c>
 802848c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8028490:	f04f 0901 	mov.w	r9, #1
 8028494:	4623      	mov	r3, r4
 8028496:	469a      	mov	sl, r3
 8028498:	f813 2b01 	ldrb.w	r2, [r3], #1
 802849c:	b10a      	cbz	r2, 80284a2 <_vfiprintf_r+0x86>
 802849e:	2a25      	cmp	r2, #37	@ 0x25
 80284a0:	d1f9      	bne.n	8028496 <_vfiprintf_r+0x7a>
 80284a2:	ebba 0b04 	subs.w	fp, sl, r4
 80284a6:	d00b      	beq.n	80284c0 <_vfiprintf_r+0xa4>
 80284a8:	465b      	mov	r3, fp
 80284aa:	4622      	mov	r2, r4
 80284ac:	4629      	mov	r1, r5
 80284ae:	4630      	mov	r0, r6
 80284b0:	f7ff ffa1 	bl	80283f6 <__sfputs_r>
 80284b4:	3001      	adds	r0, #1
 80284b6:	f000 80a7 	beq.w	8028608 <_vfiprintf_r+0x1ec>
 80284ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80284bc:	445a      	add	r2, fp
 80284be:	9209      	str	r2, [sp, #36]	@ 0x24
 80284c0:	f89a 3000 	ldrb.w	r3, [sl]
 80284c4:	2b00      	cmp	r3, #0
 80284c6:	f000 809f 	beq.w	8028608 <_vfiprintf_r+0x1ec>
 80284ca:	2300      	movs	r3, #0
 80284cc:	f04f 32ff 	mov.w	r2, #4294967295
 80284d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80284d4:	f10a 0a01 	add.w	sl, sl, #1
 80284d8:	9304      	str	r3, [sp, #16]
 80284da:	9307      	str	r3, [sp, #28]
 80284dc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80284e0:	931a      	str	r3, [sp, #104]	@ 0x68
 80284e2:	4654      	mov	r4, sl
 80284e4:	2205      	movs	r2, #5
 80284e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80284ea:	4853      	ldr	r0, [pc, #332]	@ (8028638 <_vfiprintf_r+0x21c>)
 80284ec:	f7d7 fe80 	bl	80001f0 <memchr>
 80284f0:	9a04      	ldr	r2, [sp, #16]
 80284f2:	b9d8      	cbnz	r0, 802852c <_vfiprintf_r+0x110>
 80284f4:	06d1      	lsls	r1, r2, #27
 80284f6:	bf44      	itt	mi
 80284f8:	2320      	movmi	r3, #32
 80284fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80284fe:	0713      	lsls	r3, r2, #28
 8028500:	bf44      	itt	mi
 8028502:	232b      	movmi	r3, #43	@ 0x2b
 8028504:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8028508:	f89a 3000 	ldrb.w	r3, [sl]
 802850c:	2b2a      	cmp	r3, #42	@ 0x2a
 802850e:	d015      	beq.n	802853c <_vfiprintf_r+0x120>
 8028510:	9a07      	ldr	r2, [sp, #28]
 8028512:	4654      	mov	r4, sl
 8028514:	2000      	movs	r0, #0
 8028516:	f04f 0c0a 	mov.w	ip, #10
 802851a:	4621      	mov	r1, r4
 802851c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028520:	3b30      	subs	r3, #48	@ 0x30
 8028522:	2b09      	cmp	r3, #9
 8028524:	d94b      	bls.n	80285be <_vfiprintf_r+0x1a2>
 8028526:	b1b0      	cbz	r0, 8028556 <_vfiprintf_r+0x13a>
 8028528:	9207      	str	r2, [sp, #28]
 802852a:	e014      	b.n	8028556 <_vfiprintf_r+0x13a>
 802852c:	eba0 0308 	sub.w	r3, r0, r8
 8028530:	fa09 f303 	lsl.w	r3, r9, r3
 8028534:	4313      	orrs	r3, r2
 8028536:	9304      	str	r3, [sp, #16]
 8028538:	46a2      	mov	sl, r4
 802853a:	e7d2      	b.n	80284e2 <_vfiprintf_r+0xc6>
 802853c:	9b03      	ldr	r3, [sp, #12]
 802853e:	1d19      	adds	r1, r3, #4
 8028540:	681b      	ldr	r3, [r3, #0]
 8028542:	9103      	str	r1, [sp, #12]
 8028544:	2b00      	cmp	r3, #0
 8028546:	bfbb      	ittet	lt
 8028548:	425b      	neglt	r3, r3
 802854a:	f042 0202 	orrlt.w	r2, r2, #2
 802854e:	9307      	strge	r3, [sp, #28]
 8028550:	9307      	strlt	r3, [sp, #28]
 8028552:	bfb8      	it	lt
 8028554:	9204      	strlt	r2, [sp, #16]
 8028556:	7823      	ldrb	r3, [r4, #0]
 8028558:	2b2e      	cmp	r3, #46	@ 0x2e
 802855a:	d10a      	bne.n	8028572 <_vfiprintf_r+0x156>
 802855c:	7863      	ldrb	r3, [r4, #1]
 802855e:	2b2a      	cmp	r3, #42	@ 0x2a
 8028560:	d132      	bne.n	80285c8 <_vfiprintf_r+0x1ac>
 8028562:	9b03      	ldr	r3, [sp, #12]
 8028564:	1d1a      	adds	r2, r3, #4
 8028566:	681b      	ldr	r3, [r3, #0]
 8028568:	9203      	str	r2, [sp, #12]
 802856a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802856e:	3402      	adds	r4, #2
 8028570:	9305      	str	r3, [sp, #20]
 8028572:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8028648 <_vfiprintf_r+0x22c>
 8028576:	7821      	ldrb	r1, [r4, #0]
 8028578:	2203      	movs	r2, #3
 802857a:	4650      	mov	r0, sl
 802857c:	f7d7 fe38 	bl	80001f0 <memchr>
 8028580:	b138      	cbz	r0, 8028592 <_vfiprintf_r+0x176>
 8028582:	9b04      	ldr	r3, [sp, #16]
 8028584:	eba0 000a 	sub.w	r0, r0, sl
 8028588:	2240      	movs	r2, #64	@ 0x40
 802858a:	4082      	lsls	r2, r0
 802858c:	4313      	orrs	r3, r2
 802858e:	3401      	adds	r4, #1
 8028590:	9304      	str	r3, [sp, #16]
 8028592:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028596:	4829      	ldr	r0, [pc, #164]	@ (802863c <_vfiprintf_r+0x220>)
 8028598:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802859c:	2206      	movs	r2, #6
 802859e:	f7d7 fe27 	bl	80001f0 <memchr>
 80285a2:	2800      	cmp	r0, #0
 80285a4:	d03f      	beq.n	8028626 <_vfiprintf_r+0x20a>
 80285a6:	4b26      	ldr	r3, [pc, #152]	@ (8028640 <_vfiprintf_r+0x224>)
 80285a8:	bb1b      	cbnz	r3, 80285f2 <_vfiprintf_r+0x1d6>
 80285aa:	9b03      	ldr	r3, [sp, #12]
 80285ac:	3307      	adds	r3, #7
 80285ae:	f023 0307 	bic.w	r3, r3, #7
 80285b2:	3308      	adds	r3, #8
 80285b4:	9303      	str	r3, [sp, #12]
 80285b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80285b8:	443b      	add	r3, r7
 80285ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80285bc:	e76a      	b.n	8028494 <_vfiprintf_r+0x78>
 80285be:	fb0c 3202 	mla	r2, ip, r2, r3
 80285c2:	460c      	mov	r4, r1
 80285c4:	2001      	movs	r0, #1
 80285c6:	e7a8      	b.n	802851a <_vfiprintf_r+0xfe>
 80285c8:	2300      	movs	r3, #0
 80285ca:	3401      	adds	r4, #1
 80285cc:	9305      	str	r3, [sp, #20]
 80285ce:	4619      	mov	r1, r3
 80285d0:	f04f 0c0a 	mov.w	ip, #10
 80285d4:	4620      	mov	r0, r4
 80285d6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80285da:	3a30      	subs	r2, #48	@ 0x30
 80285dc:	2a09      	cmp	r2, #9
 80285de:	d903      	bls.n	80285e8 <_vfiprintf_r+0x1cc>
 80285e0:	2b00      	cmp	r3, #0
 80285e2:	d0c6      	beq.n	8028572 <_vfiprintf_r+0x156>
 80285e4:	9105      	str	r1, [sp, #20]
 80285e6:	e7c4      	b.n	8028572 <_vfiprintf_r+0x156>
 80285e8:	fb0c 2101 	mla	r1, ip, r1, r2
 80285ec:	4604      	mov	r4, r0
 80285ee:	2301      	movs	r3, #1
 80285f0:	e7f0      	b.n	80285d4 <_vfiprintf_r+0x1b8>
 80285f2:	ab03      	add	r3, sp, #12
 80285f4:	9300      	str	r3, [sp, #0]
 80285f6:	462a      	mov	r2, r5
 80285f8:	4b12      	ldr	r3, [pc, #72]	@ (8028644 <_vfiprintf_r+0x228>)
 80285fa:	a904      	add	r1, sp, #16
 80285fc:	4630      	mov	r0, r6
 80285fe:	f3af 8000 	nop.w
 8028602:	4607      	mov	r7, r0
 8028604:	1c78      	adds	r0, r7, #1
 8028606:	d1d6      	bne.n	80285b6 <_vfiprintf_r+0x19a>
 8028608:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802860a:	07d9      	lsls	r1, r3, #31
 802860c:	d405      	bmi.n	802861a <_vfiprintf_r+0x1fe>
 802860e:	89ab      	ldrh	r3, [r5, #12]
 8028610:	059a      	lsls	r2, r3, #22
 8028612:	d402      	bmi.n	802861a <_vfiprintf_r+0x1fe>
 8028614:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028616:	f7ff fe21 	bl	802825c <__retarget_lock_release_recursive>
 802861a:	89ab      	ldrh	r3, [r5, #12]
 802861c:	065b      	lsls	r3, r3, #25
 802861e:	f53f af1f 	bmi.w	8028460 <_vfiprintf_r+0x44>
 8028622:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028624:	e71e      	b.n	8028464 <_vfiprintf_r+0x48>
 8028626:	ab03      	add	r3, sp, #12
 8028628:	9300      	str	r3, [sp, #0]
 802862a:	462a      	mov	r2, r5
 802862c:	4b05      	ldr	r3, [pc, #20]	@ (8028644 <_vfiprintf_r+0x228>)
 802862e:	a904      	add	r1, sp, #16
 8028630:	4630      	mov	r0, r6
 8028632:	f000 f879 	bl	8028728 <_printf_i>
 8028636:	e7e4      	b.n	8028602 <_vfiprintf_r+0x1e6>
 8028638:	0802a014 	.word	0x0802a014
 802863c:	0802a01e 	.word	0x0802a01e
 8028640:	00000000 	.word	0x00000000
 8028644:	080283f7 	.word	0x080283f7
 8028648:	0802a01a 	.word	0x0802a01a

0802864c <_printf_common>:
 802864c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028650:	4616      	mov	r6, r2
 8028652:	4698      	mov	r8, r3
 8028654:	688a      	ldr	r2, [r1, #8]
 8028656:	690b      	ldr	r3, [r1, #16]
 8028658:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802865c:	4293      	cmp	r3, r2
 802865e:	bfb8      	it	lt
 8028660:	4613      	movlt	r3, r2
 8028662:	6033      	str	r3, [r6, #0]
 8028664:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8028668:	4607      	mov	r7, r0
 802866a:	460c      	mov	r4, r1
 802866c:	b10a      	cbz	r2, 8028672 <_printf_common+0x26>
 802866e:	3301      	adds	r3, #1
 8028670:	6033      	str	r3, [r6, #0]
 8028672:	6823      	ldr	r3, [r4, #0]
 8028674:	0699      	lsls	r1, r3, #26
 8028676:	bf42      	ittt	mi
 8028678:	6833      	ldrmi	r3, [r6, #0]
 802867a:	3302      	addmi	r3, #2
 802867c:	6033      	strmi	r3, [r6, #0]
 802867e:	6825      	ldr	r5, [r4, #0]
 8028680:	f015 0506 	ands.w	r5, r5, #6
 8028684:	d106      	bne.n	8028694 <_printf_common+0x48>
 8028686:	f104 0a19 	add.w	sl, r4, #25
 802868a:	68e3      	ldr	r3, [r4, #12]
 802868c:	6832      	ldr	r2, [r6, #0]
 802868e:	1a9b      	subs	r3, r3, r2
 8028690:	42ab      	cmp	r3, r5
 8028692:	dc26      	bgt.n	80286e2 <_printf_common+0x96>
 8028694:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8028698:	6822      	ldr	r2, [r4, #0]
 802869a:	3b00      	subs	r3, #0
 802869c:	bf18      	it	ne
 802869e:	2301      	movne	r3, #1
 80286a0:	0692      	lsls	r2, r2, #26
 80286a2:	d42b      	bmi.n	80286fc <_printf_common+0xb0>
 80286a4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80286a8:	4641      	mov	r1, r8
 80286aa:	4638      	mov	r0, r7
 80286ac:	47c8      	blx	r9
 80286ae:	3001      	adds	r0, #1
 80286b0:	d01e      	beq.n	80286f0 <_printf_common+0xa4>
 80286b2:	6823      	ldr	r3, [r4, #0]
 80286b4:	6922      	ldr	r2, [r4, #16]
 80286b6:	f003 0306 	and.w	r3, r3, #6
 80286ba:	2b04      	cmp	r3, #4
 80286bc:	bf02      	ittt	eq
 80286be:	68e5      	ldreq	r5, [r4, #12]
 80286c0:	6833      	ldreq	r3, [r6, #0]
 80286c2:	1aed      	subeq	r5, r5, r3
 80286c4:	68a3      	ldr	r3, [r4, #8]
 80286c6:	bf0c      	ite	eq
 80286c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80286cc:	2500      	movne	r5, #0
 80286ce:	4293      	cmp	r3, r2
 80286d0:	bfc4      	itt	gt
 80286d2:	1a9b      	subgt	r3, r3, r2
 80286d4:	18ed      	addgt	r5, r5, r3
 80286d6:	2600      	movs	r6, #0
 80286d8:	341a      	adds	r4, #26
 80286da:	42b5      	cmp	r5, r6
 80286dc:	d11a      	bne.n	8028714 <_printf_common+0xc8>
 80286de:	2000      	movs	r0, #0
 80286e0:	e008      	b.n	80286f4 <_printf_common+0xa8>
 80286e2:	2301      	movs	r3, #1
 80286e4:	4652      	mov	r2, sl
 80286e6:	4641      	mov	r1, r8
 80286e8:	4638      	mov	r0, r7
 80286ea:	47c8      	blx	r9
 80286ec:	3001      	adds	r0, #1
 80286ee:	d103      	bne.n	80286f8 <_printf_common+0xac>
 80286f0:	f04f 30ff 	mov.w	r0, #4294967295
 80286f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80286f8:	3501      	adds	r5, #1
 80286fa:	e7c6      	b.n	802868a <_printf_common+0x3e>
 80286fc:	18e1      	adds	r1, r4, r3
 80286fe:	1c5a      	adds	r2, r3, #1
 8028700:	2030      	movs	r0, #48	@ 0x30
 8028702:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8028706:	4422      	add	r2, r4
 8028708:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802870c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8028710:	3302      	adds	r3, #2
 8028712:	e7c7      	b.n	80286a4 <_printf_common+0x58>
 8028714:	2301      	movs	r3, #1
 8028716:	4622      	mov	r2, r4
 8028718:	4641      	mov	r1, r8
 802871a:	4638      	mov	r0, r7
 802871c:	47c8      	blx	r9
 802871e:	3001      	adds	r0, #1
 8028720:	d0e6      	beq.n	80286f0 <_printf_common+0xa4>
 8028722:	3601      	adds	r6, #1
 8028724:	e7d9      	b.n	80286da <_printf_common+0x8e>
	...

08028728 <_printf_i>:
 8028728:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802872c:	7e0f      	ldrb	r7, [r1, #24]
 802872e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8028730:	2f78      	cmp	r7, #120	@ 0x78
 8028732:	4691      	mov	r9, r2
 8028734:	4680      	mov	r8, r0
 8028736:	460c      	mov	r4, r1
 8028738:	469a      	mov	sl, r3
 802873a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802873e:	d807      	bhi.n	8028750 <_printf_i+0x28>
 8028740:	2f62      	cmp	r7, #98	@ 0x62
 8028742:	d80a      	bhi.n	802875a <_printf_i+0x32>
 8028744:	2f00      	cmp	r7, #0
 8028746:	f000 80d1 	beq.w	80288ec <_printf_i+0x1c4>
 802874a:	2f58      	cmp	r7, #88	@ 0x58
 802874c:	f000 80b8 	beq.w	80288c0 <_printf_i+0x198>
 8028750:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8028754:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8028758:	e03a      	b.n	80287d0 <_printf_i+0xa8>
 802875a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802875e:	2b15      	cmp	r3, #21
 8028760:	d8f6      	bhi.n	8028750 <_printf_i+0x28>
 8028762:	a101      	add	r1, pc, #4	@ (adr r1, 8028768 <_printf_i+0x40>)
 8028764:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8028768:	080287c1 	.word	0x080287c1
 802876c:	080287d5 	.word	0x080287d5
 8028770:	08028751 	.word	0x08028751
 8028774:	08028751 	.word	0x08028751
 8028778:	08028751 	.word	0x08028751
 802877c:	08028751 	.word	0x08028751
 8028780:	080287d5 	.word	0x080287d5
 8028784:	08028751 	.word	0x08028751
 8028788:	08028751 	.word	0x08028751
 802878c:	08028751 	.word	0x08028751
 8028790:	08028751 	.word	0x08028751
 8028794:	080288d3 	.word	0x080288d3
 8028798:	080287ff 	.word	0x080287ff
 802879c:	0802888d 	.word	0x0802888d
 80287a0:	08028751 	.word	0x08028751
 80287a4:	08028751 	.word	0x08028751
 80287a8:	080288f5 	.word	0x080288f5
 80287ac:	08028751 	.word	0x08028751
 80287b0:	080287ff 	.word	0x080287ff
 80287b4:	08028751 	.word	0x08028751
 80287b8:	08028751 	.word	0x08028751
 80287bc:	08028895 	.word	0x08028895
 80287c0:	6833      	ldr	r3, [r6, #0]
 80287c2:	1d1a      	adds	r2, r3, #4
 80287c4:	681b      	ldr	r3, [r3, #0]
 80287c6:	6032      	str	r2, [r6, #0]
 80287c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80287cc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80287d0:	2301      	movs	r3, #1
 80287d2:	e09c      	b.n	802890e <_printf_i+0x1e6>
 80287d4:	6833      	ldr	r3, [r6, #0]
 80287d6:	6820      	ldr	r0, [r4, #0]
 80287d8:	1d19      	adds	r1, r3, #4
 80287da:	6031      	str	r1, [r6, #0]
 80287dc:	0606      	lsls	r6, r0, #24
 80287de:	d501      	bpl.n	80287e4 <_printf_i+0xbc>
 80287e0:	681d      	ldr	r5, [r3, #0]
 80287e2:	e003      	b.n	80287ec <_printf_i+0xc4>
 80287e4:	0645      	lsls	r5, r0, #25
 80287e6:	d5fb      	bpl.n	80287e0 <_printf_i+0xb8>
 80287e8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80287ec:	2d00      	cmp	r5, #0
 80287ee:	da03      	bge.n	80287f8 <_printf_i+0xd0>
 80287f0:	232d      	movs	r3, #45	@ 0x2d
 80287f2:	426d      	negs	r5, r5
 80287f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80287f8:	4858      	ldr	r0, [pc, #352]	@ (802895c <_printf_i+0x234>)
 80287fa:	230a      	movs	r3, #10
 80287fc:	e011      	b.n	8028822 <_printf_i+0xfa>
 80287fe:	6821      	ldr	r1, [r4, #0]
 8028800:	6833      	ldr	r3, [r6, #0]
 8028802:	0608      	lsls	r0, r1, #24
 8028804:	f853 5b04 	ldr.w	r5, [r3], #4
 8028808:	d402      	bmi.n	8028810 <_printf_i+0xe8>
 802880a:	0649      	lsls	r1, r1, #25
 802880c:	bf48      	it	mi
 802880e:	b2ad      	uxthmi	r5, r5
 8028810:	2f6f      	cmp	r7, #111	@ 0x6f
 8028812:	4852      	ldr	r0, [pc, #328]	@ (802895c <_printf_i+0x234>)
 8028814:	6033      	str	r3, [r6, #0]
 8028816:	bf14      	ite	ne
 8028818:	230a      	movne	r3, #10
 802881a:	2308      	moveq	r3, #8
 802881c:	2100      	movs	r1, #0
 802881e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8028822:	6866      	ldr	r6, [r4, #4]
 8028824:	60a6      	str	r6, [r4, #8]
 8028826:	2e00      	cmp	r6, #0
 8028828:	db05      	blt.n	8028836 <_printf_i+0x10e>
 802882a:	6821      	ldr	r1, [r4, #0]
 802882c:	432e      	orrs	r6, r5
 802882e:	f021 0104 	bic.w	r1, r1, #4
 8028832:	6021      	str	r1, [r4, #0]
 8028834:	d04b      	beq.n	80288ce <_printf_i+0x1a6>
 8028836:	4616      	mov	r6, r2
 8028838:	fbb5 f1f3 	udiv	r1, r5, r3
 802883c:	fb03 5711 	mls	r7, r3, r1, r5
 8028840:	5dc7      	ldrb	r7, [r0, r7]
 8028842:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8028846:	462f      	mov	r7, r5
 8028848:	42bb      	cmp	r3, r7
 802884a:	460d      	mov	r5, r1
 802884c:	d9f4      	bls.n	8028838 <_printf_i+0x110>
 802884e:	2b08      	cmp	r3, #8
 8028850:	d10b      	bne.n	802886a <_printf_i+0x142>
 8028852:	6823      	ldr	r3, [r4, #0]
 8028854:	07df      	lsls	r7, r3, #31
 8028856:	d508      	bpl.n	802886a <_printf_i+0x142>
 8028858:	6923      	ldr	r3, [r4, #16]
 802885a:	6861      	ldr	r1, [r4, #4]
 802885c:	4299      	cmp	r1, r3
 802885e:	bfde      	ittt	le
 8028860:	2330      	movle	r3, #48	@ 0x30
 8028862:	f806 3c01 	strble.w	r3, [r6, #-1]
 8028866:	f106 36ff 	addle.w	r6, r6, #4294967295
 802886a:	1b92      	subs	r2, r2, r6
 802886c:	6122      	str	r2, [r4, #16]
 802886e:	f8cd a000 	str.w	sl, [sp]
 8028872:	464b      	mov	r3, r9
 8028874:	aa03      	add	r2, sp, #12
 8028876:	4621      	mov	r1, r4
 8028878:	4640      	mov	r0, r8
 802887a:	f7ff fee7 	bl	802864c <_printf_common>
 802887e:	3001      	adds	r0, #1
 8028880:	d14a      	bne.n	8028918 <_printf_i+0x1f0>
 8028882:	f04f 30ff 	mov.w	r0, #4294967295
 8028886:	b004      	add	sp, #16
 8028888:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802888c:	6823      	ldr	r3, [r4, #0]
 802888e:	f043 0320 	orr.w	r3, r3, #32
 8028892:	6023      	str	r3, [r4, #0]
 8028894:	4832      	ldr	r0, [pc, #200]	@ (8028960 <_printf_i+0x238>)
 8028896:	2778      	movs	r7, #120	@ 0x78
 8028898:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802889c:	6823      	ldr	r3, [r4, #0]
 802889e:	6831      	ldr	r1, [r6, #0]
 80288a0:	061f      	lsls	r7, r3, #24
 80288a2:	f851 5b04 	ldr.w	r5, [r1], #4
 80288a6:	d402      	bmi.n	80288ae <_printf_i+0x186>
 80288a8:	065f      	lsls	r7, r3, #25
 80288aa:	bf48      	it	mi
 80288ac:	b2ad      	uxthmi	r5, r5
 80288ae:	6031      	str	r1, [r6, #0]
 80288b0:	07d9      	lsls	r1, r3, #31
 80288b2:	bf44      	itt	mi
 80288b4:	f043 0320 	orrmi.w	r3, r3, #32
 80288b8:	6023      	strmi	r3, [r4, #0]
 80288ba:	b11d      	cbz	r5, 80288c4 <_printf_i+0x19c>
 80288bc:	2310      	movs	r3, #16
 80288be:	e7ad      	b.n	802881c <_printf_i+0xf4>
 80288c0:	4826      	ldr	r0, [pc, #152]	@ (802895c <_printf_i+0x234>)
 80288c2:	e7e9      	b.n	8028898 <_printf_i+0x170>
 80288c4:	6823      	ldr	r3, [r4, #0]
 80288c6:	f023 0320 	bic.w	r3, r3, #32
 80288ca:	6023      	str	r3, [r4, #0]
 80288cc:	e7f6      	b.n	80288bc <_printf_i+0x194>
 80288ce:	4616      	mov	r6, r2
 80288d0:	e7bd      	b.n	802884e <_printf_i+0x126>
 80288d2:	6833      	ldr	r3, [r6, #0]
 80288d4:	6825      	ldr	r5, [r4, #0]
 80288d6:	6961      	ldr	r1, [r4, #20]
 80288d8:	1d18      	adds	r0, r3, #4
 80288da:	6030      	str	r0, [r6, #0]
 80288dc:	062e      	lsls	r6, r5, #24
 80288de:	681b      	ldr	r3, [r3, #0]
 80288e0:	d501      	bpl.n	80288e6 <_printf_i+0x1be>
 80288e2:	6019      	str	r1, [r3, #0]
 80288e4:	e002      	b.n	80288ec <_printf_i+0x1c4>
 80288e6:	0668      	lsls	r0, r5, #25
 80288e8:	d5fb      	bpl.n	80288e2 <_printf_i+0x1ba>
 80288ea:	8019      	strh	r1, [r3, #0]
 80288ec:	2300      	movs	r3, #0
 80288ee:	6123      	str	r3, [r4, #16]
 80288f0:	4616      	mov	r6, r2
 80288f2:	e7bc      	b.n	802886e <_printf_i+0x146>
 80288f4:	6833      	ldr	r3, [r6, #0]
 80288f6:	1d1a      	adds	r2, r3, #4
 80288f8:	6032      	str	r2, [r6, #0]
 80288fa:	681e      	ldr	r6, [r3, #0]
 80288fc:	6862      	ldr	r2, [r4, #4]
 80288fe:	2100      	movs	r1, #0
 8028900:	4630      	mov	r0, r6
 8028902:	f7d7 fc75 	bl	80001f0 <memchr>
 8028906:	b108      	cbz	r0, 802890c <_printf_i+0x1e4>
 8028908:	1b80      	subs	r0, r0, r6
 802890a:	6060      	str	r0, [r4, #4]
 802890c:	6863      	ldr	r3, [r4, #4]
 802890e:	6123      	str	r3, [r4, #16]
 8028910:	2300      	movs	r3, #0
 8028912:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8028916:	e7aa      	b.n	802886e <_printf_i+0x146>
 8028918:	6923      	ldr	r3, [r4, #16]
 802891a:	4632      	mov	r2, r6
 802891c:	4649      	mov	r1, r9
 802891e:	4640      	mov	r0, r8
 8028920:	47d0      	blx	sl
 8028922:	3001      	adds	r0, #1
 8028924:	d0ad      	beq.n	8028882 <_printf_i+0x15a>
 8028926:	6823      	ldr	r3, [r4, #0]
 8028928:	079b      	lsls	r3, r3, #30
 802892a:	d413      	bmi.n	8028954 <_printf_i+0x22c>
 802892c:	68e0      	ldr	r0, [r4, #12]
 802892e:	9b03      	ldr	r3, [sp, #12]
 8028930:	4298      	cmp	r0, r3
 8028932:	bfb8      	it	lt
 8028934:	4618      	movlt	r0, r3
 8028936:	e7a6      	b.n	8028886 <_printf_i+0x15e>
 8028938:	2301      	movs	r3, #1
 802893a:	4632      	mov	r2, r6
 802893c:	4649      	mov	r1, r9
 802893e:	4640      	mov	r0, r8
 8028940:	47d0      	blx	sl
 8028942:	3001      	adds	r0, #1
 8028944:	d09d      	beq.n	8028882 <_printf_i+0x15a>
 8028946:	3501      	adds	r5, #1
 8028948:	68e3      	ldr	r3, [r4, #12]
 802894a:	9903      	ldr	r1, [sp, #12]
 802894c:	1a5b      	subs	r3, r3, r1
 802894e:	42ab      	cmp	r3, r5
 8028950:	dcf2      	bgt.n	8028938 <_printf_i+0x210>
 8028952:	e7eb      	b.n	802892c <_printf_i+0x204>
 8028954:	2500      	movs	r5, #0
 8028956:	f104 0619 	add.w	r6, r4, #25
 802895a:	e7f5      	b.n	8028948 <_printf_i+0x220>
 802895c:	0802a025 	.word	0x0802a025
 8028960:	0802a036 	.word	0x0802a036

08028964 <__sflush_r>:
 8028964:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8028968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802896c:	0716      	lsls	r6, r2, #28
 802896e:	4605      	mov	r5, r0
 8028970:	460c      	mov	r4, r1
 8028972:	d454      	bmi.n	8028a1e <__sflush_r+0xba>
 8028974:	684b      	ldr	r3, [r1, #4]
 8028976:	2b00      	cmp	r3, #0
 8028978:	dc02      	bgt.n	8028980 <__sflush_r+0x1c>
 802897a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802897c:	2b00      	cmp	r3, #0
 802897e:	dd48      	ble.n	8028a12 <__sflush_r+0xae>
 8028980:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8028982:	2e00      	cmp	r6, #0
 8028984:	d045      	beq.n	8028a12 <__sflush_r+0xae>
 8028986:	2300      	movs	r3, #0
 8028988:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802898c:	682f      	ldr	r7, [r5, #0]
 802898e:	6a21      	ldr	r1, [r4, #32]
 8028990:	602b      	str	r3, [r5, #0]
 8028992:	d030      	beq.n	80289f6 <__sflush_r+0x92>
 8028994:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8028996:	89a3      	ldrh	r3, [r4, #12]
 8028998:	0759      	lsls	r1, r3, #29
 802899a:	d505      	bpl.n	80289a8 <__sflush_r+0x44>
 802899c:	6863      	ldr	r3, [r4, #4]
 802899e:	1ad2      	subs	r2, r2, r3
 80289a0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80289a2:	b10b      	cbz	r3, 80289a8 <__sflush_r+0x44>
 80289a4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80289a6:	1ad2      	subs	r2, r2, r3
 80289a8:	2300      	movs	r3, #0
 80289aa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80289ac:	6a21      	ldr	r1, [r4, #32]
 80289ae:	4628      	mov	r0, r5
 80289b0:	47b0      	blx	r6
 80289b2:	1c43      	adds	r3, r0, #1
 80289b4:	89a3      	ldrh	r3, [r4, #12]
 80289b6:	d106      	bne.n	80289c6 <__sflush_r+0x62>
 80289b8:	6829      	ldr	r1, [r5, #0]
 80289ba:	291d      	cmp	r1, #29
 80289bc:	d82b      	bhi.n	8028a16 <__sflush_r+0xb2>
 80289be:	4a2a      	ldr	r2, [pc, #168]	@ (8028a68 <__sflush_r+0x104>)
 80289c0:	40ca      	lsrs	r2, r1
 80289c2:	07d6      	lsls	r6, r2, #31
 80289c4:	d527      	bpl.n	8028a16 <__sflush_r+0xb2>
 80289c6:	2200      	movs	r2, #0
 80289c8:	6062      	str	r2, [r4, #4]
 80289ca:	04d9      	lsls	r1, r3, #19
 80289cc:	6922      	ldr	r2, [r4, #16]
 80289ce:	6022      	str	r2, [r4, #0]
 80289d0:	d504      	bpl.n	80289dc <__sflush_r+0x78>
 80289d2:	1c42      	adds	r2, r0, #1
 80289d4:	d101      	bne.n	80289da <__sflush_r+0x76>
 80289d6:	682b      	ldr	r3, [r5, #0]
 80289d8:	b903      	cbnz	r3, 80289dc <__sflush_r+0x78>
 80289da:	6560      	str	r0, [r4, #84]	@ 0x54
 80289dc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80289de:	602f      	str	r7, [r5, #0]
 80289e0:	b1b9      	cbz	r1, 8028a12 <__sflush_r+0xae>
 80289e2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80289e6:	4299      	cmp	r1, r3
 80289e8:	d002      	beq.n	80289f0 <__sflush_r+0x8c>
 80289ea:	4628      	mov	r0, r5
 80289ec:	f7ff fca2 	bl	8028334 <_free_r>
 80289f0:	2300      	movs	r3, #0
 80289f2:	6363      	str	r3, [r4, #52]	@ 0x34
 80289f4:	e00d      	b.n	8028a12 <__sflush_r+0xae>
 80289f6:	2301      	movs	r3, #1
 80289f8:	4628      	mov	r0, r5
 80289fa:	47b0      	blx	r6
 80289fc:	4602      	mov	r2, r0
 80289fe:	1c50      	adds	r0, r2, #1
 8028a00:	d1c9      	bne.n	8028996 <__sflush_r+0x32>
 8028a02:	682b      	ldr	r3, [r5, #0]
 8028a04:	2b00      	cmp	r3, #0
 8028a06:	d0c6      	beq.n	8028996 <__sflush_r+0x32>
 8028a08:	2b1d      	cmp	r3, #29
 8028a0a:	d001      	beq.n	8028a10 <__sflush_r+0xac>
 8028a0c:	2b16      	cmp	r3, #22
 8028a0e:	d11e      	bne.n	8028a4e <__sflush_r+0xea>
 8028a10:	602f      	str	r7, [r5, #0]
 8028a12:	2000      	movs	r0, #0
 8028a14:	e022      	b.n	8028a5c <__sflush_r+0xf8>
 8028a16:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028a1a:	b21b      	sxth	r3, r3
 8028a1c:	e01b      	b.n	8028a56 <__sflush_r+0xf2>
 8028a1e:	690f      	ldr	r7, [r1, #16]
 8028a20:	2f00      	cmp	r7, #0
 8028a22:	d0f6      	beq.n	8028a12 <__sflush_r+0xae>
 8028a24:	0793      	lsls	r3, r2, #30
 8028a26:	680e      	ldr	r6, [r1, #0]
 8028a28:	bf08      	it	eq
 8028a2a:	694b      	ldreq	r3, [r1, #20]
 8028a2c:	600f      	str	r7, [r1, #0]
 8028a2e:	bf18      	it	ne
 8028a30:	2300      	movne	r3, #0
 8028a32:	eba6 0807 	sub.w	r8, r6, r7
 8028a36:	608b      	str	r3, [r1, #8]
 8028a38:	f1b8 0f00 	cmp.w	r8, #0
 8028a3c:	dde9      	ble.n	8028a12 <__sflush_r+0xae>
 8028a3e:	6a21      	ldr	r1, [r4, #32]
 8028a40:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8028a42:	4643      	mov	r3, r8
 8028a44:	463a      	mov	r2, r7
 8028a46:	4628      	mov	r0, r5
 8028a48:	47b0      	blx	r6
 8028a4a:	2800      	cmp	r0, #0
 8028a4c:	dc08      	bgt.n	8028a60 <__sflush_r+0xfc>
 8028a4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028a52:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028a56:	81a3      	strh	r3, [r4, #12]
 8028a58:	f04f 30ff 	mov.w	r0, #4294967295
 8028a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a60:	4407      	add	r7, r0
 8028a62:	eba8 0800 	sub.w	r8, r8, r0
 8028a66:	e7e7      	b.n	8028a38 <__sflush_r+0xd4>
 8028a68:	20400001 	.word	0x20400001

08028a6c <_fflush_r>:
 8028a6c:	b538      	push	{r3, r4, r5, lr}
 8028a6e:	690b      	ldr	r3, [r1, #16]
 8028a70:	4605      	mov	r5, r0
 8028a72:	460c      	mov	r4, r1
 8028a74:	b913      	cbnz	r3, 8028a7c <_fflush_r+0x10>
 8028a76:	2500      	movs	r5, #0
 8028a78:	4628      	mov	r0, r5
 8028a7a:	bd38      	pop	{r3, r4, r5, pc}
 8028a7c:	b118      	cbz	r0, 8028a86 <_fflush_r+0x1a>
 8028a7e:	6a03      	ldr	r3, [r0, #32]
 8028a80:	b90b      	cbnz	r3, 8028a86 <_fflush_r+0x1a>
 8028a82:	f7ff fa7f 	bl	8027f84 <__sinit>
 8028a86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028a8a:	2b00      	cmp	r3, #0
 8028a8c:	d0f3      	beq.n	8028a76 <_fflush_r+0xa>
 8028a8e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8028a90:	07d0      	lsls	r0, r2, #31
 8028a92:	d404      	bmi.n	8028a9e <_fflush_r+0x32>
 8028a94:	0599      	lsls	r1, r3, #22
 8028a96:	d402      	bmi.n	8028a9e <_fflush_r+0x32>
 8028a98:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8028a9a:	f7ff fbde 	bl	802825a <__retarget_lock_acquire_recursive>
 8028a9e:	4628      	mov	r0, r5
 8028aa0:	4621      	mov	r1, r4
 8028aa2:	f7ff ff5f 	bl	8028964 <__sflush_r>
 8028aa6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8028aa8:	07da      	lsls	r2, r3, #31
 8028aaa:	4605      	mov	r5, r0
 8028aac:	d4e4      	bmi.n	8028a78 <_fflush_r+0xc>
 8028aae:	89a3      	ldrh	r3, [r4, #12]
 8028ab0:	059b      	lsls	r3, r3, #22
 8028ab2:	d4e1      	bmi.n	8028a78 <_fflush_r+0xc>
 8028ab4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8028ab6:	f7ff fbd1 	bl	802825c <__retarget_lock_release_recursive>
 8028aba:	e7dd      	b.n	8028a78 <_fflush_r+0xc>

08028abc <__swbuf_r>:
 8028abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028abe:	460e      	mov	r6, r1
 8028ac0:	4614      	mov	r4, r2
 8028ac2:	4605      	mov	r5, r0
 8028ac4:	b118      	cbz	r0, 8028ace <__swbuf_r+0x12>
 8028ac6:	6a03      	ldr	r3, [r0, #32]
 8028ac8:	b90b      	cbnz	r3, 8028ace <__swbuf_r+0x12>
 8028aca:	f7ff fa5b 	bl	8027f84 <__sinit>
 8028ace:	69a3      	ldr	r3, [r4, #24]
 8028ad0:	60a3      	str	r3, [r4, #8]
 8028ad2:	89a3      	ldrh	r3, [r4, #12]
 8028ad4:	071a      	lsls	r2, r3, #28
 8028ad6:	d501      	bpl.n	8028adc <__swbuf_r+0x20>
 8028ad8:	6923      	ldr	r3, [r4, #16]
 8028ada:	b943      	cbnz	r3, 8028aee <__swbuf_r+0x32>
 8028adc:	4621      	mov	r1, r4
 8028ade:	4628      	mov	r0, r5
 8028ae0:	f000 f82a 	bl	8028b38 <__swsetup_r>
 8028ae4:	b118      	cbz	r0, 8028aee <__swbuf_r+0x32>
 8028ae6:	f04f 37ff 	mov.w	r7, #4294967295
 8028aea:	4638      	mov	r0, r7
 8028aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028aee:	6823      	ldr	r3, [r4, #0]
 8028af0:	6922      	ldr	r2, [r4, #16]
 8028af2:	1a98      	subs	r0, r3, r2
 8028af4:	6963      	ldr	r3, [r4, #20]
 8028af6:	b2f6      	uxtb	r6, r6
 8028af8:	4283      	cmp	r3, r0
 8028afa:	4637      	mov	r7, r6
 8028afc:	dc05      	bgt.n	8028b0a <__swbuf_r+0x4e>
 8028afe:	4621      	mov	r1, r4
 8028b00:	4628      	mov	r0, r5
 8028b02:	f7ff ffb3 	bl	8028a6c <_fflush_r>
 8028b06:	2800      	cmp	r0, #0
 8028b08:	d1ed      	bne.n	8028ae6 <__swbuf_r+0x2a>
 8028b0a:	68a3      	ldr	r3, [r4, #8]
 8028b0c:	3b01      	subs	r3, #1
 8028b0e:	60a3      	str	r3, [r4, #8]
 8028b10:	6823      	ldr	r3, [r4, #0]
 8028b12:	1c5a      	adds	r2, r3, #1
 8028b14:	6022      	str	r2, [r4, #0]
 8028b16:	701e      	strb	r6, [r3, #0]
 8028b18:	6962      	ldr	r2, [r4, #20]
 8028b1a:	1c43      	adds	r3, r0, #1
 8028b1c:	429a      	cmp	r2, r3
 8028b1e:	d004      	beq.n	8028b2a <__swbuf_r+0x6e>
 8028b20:	89a3      	ldrh	r3, [r4, #12]
 8028b22:	07db      	lsls	r3, r3, #31
 8028b24:	d5e1      	bpl.n	8028aea <__swbuf_r+0x2e>
 8028b26:	2e0a      	cmp	r6, #10
 8028b28:	d1df      	bne.n	8028aea <__swbuf_r+0x2e>
 8028b2a:	4621      	mov	r1, r4
 8028b2c:	4628      	mov	r0, r5
 8028b2e:	f7ff ff9d 	bl	8028a6c <_fflush_r>
 8028b32:	2800      	cmp	r0, #0
 8028b34:	d0d9      	beq.n	8028aea <__swbuf_r+0x2e>
 8028b36:	e7d6      	b.n	8028ae6 <__swbuf_r+0x2a>

08028b38 <__swsetup_r>:
 8028b38:	b538      	push	{r3, r4, r5, lr}
 8028b3a:	4b29      	ldr	r3, [pc, #164]	@ (8028be0 <__swsetup_r+0xa8>)
 8028b3c:	4605      	mov	r5, r0
 8028b3e:	6818      	ldr	r0, [r3, #0]
 8028b40:	460c      	mov	r4, r1
 8028b42:	b118      	cbz	r0, 8028b4c <__swsetup_r+0x14>
 8028b44:	6a03      	ldr	r3, [r0, #32]
 8028b46:	b90b      	cbnz	r3, 8028b4c <__swsetup_r+0x14>
 8028b48:	f7ff fa1c 	bl	8027f84 <__sinit>
 8028b4c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028b50:	0719      	lsls	r1, r3, #28
 8028b52:	d422      	bmi.n	8028b9a <__swsetup_r+0x62>
 8028b54:	06da      	lsls	r2, r3, #27
 8028b56:	d407      	bmi.n	8028b68 <__swsetup_r+0x30>
 8028b58:	2209      	movs	r2, #9
 8028b5a:	602a      	str	r2, [r5, #0]
 8028b5c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028b60:	81a3      	strh	r3, [r4, #12]
 8028b62:	f04f 30ff 	mov.w	r0, #4294967295
 8028b66:	e033      	b.n	8028bd0 <__swsetup_r+0x98>
 8028b68:	0758      	lsls	r0, r3, #29
 8028b6a:	d512      	bpl.n	8028b92 <__swsetup_r+0x5a>
 8028b6c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8028b6e:	b141      	cbz	r1, 8028b82 <__swsetup_r+0x4a>
 8028b70:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8028b74:	4299      	cmp	r1, r3
 8028b76:	d002      	beq.n	8028b7e <__swsetup_r+0x46>
 8028b78:	4628      	mov	r0, r5
 8028b7a:	f7ff fbdb 	bl	8028334 <_free_r>
 8028b7e:	2300      	movs	r3, #0
 8028b80:	6363      	str	r3, [r4, #52]	@ 0x34
 8028b82:	89a3      	ldrh	r3, [r4, #12]
 8028b84:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8028b88:	81a3      	strh	r3, [r4, #12]
 8028b8a:	2300      	movs	r3, #0
 8028b8c:	6063      	str	r3, [r4, #4]
 8028b8e:	6923      	ldr	r3, [r4, #16]
 8028b90:	6023      	str	r3, [r4, #0]
 8028b92:	89a3      	ldrh	r3, [r4, #12]
 8028b94:	f043 0308 	orr.w	r3, r3, #8
 8028b98:	81a3      	strh	r3, [r4, #12]
 8028b9a:	6923      	ldr	r3, [r4, #16]
 8028b9c:	b94b      	cbnz	r3, 8028bb2 <__swsetup_r+0x7a>
 8028b9e:	89a3      	ldrh	r3, [r4, #12]
 8028ba0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8028ba4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8028ba8:	d003      	beq.n	8028bb2 <__swsetup_r+0x7a>
 8028baa:	4621      	mov	r1, r4
 8028bac:	4628      	mov	r0, r5
 8028bae:	f000 f83f 	bl	8028c30 <__smakebuf_r>
 8028bb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028bb6:	f013 0201 	ands.w	r2, r3, #1
 8028bba:	d00a      	beq.n	8028bd2 <__swsetup_r+0x9a>
 8028bbc:	2200      	movs	r2, #0
 8028bbe:	60a2      	str	r2, [r4, #8]
 8028bc0:	6962      	ldr	r2, [r4, #20]
 8028bc2:	4252      	negs	r2, r2
 8028bc4:	61a2      	str	r2, [r4, #24]
 8028bc6:	6922      	ldr	r2, [r4, #16]
 8028bc8:	b942      	cbnz	r2, 8028bdc <__swsetup_r+0xa4>
 8028bca:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8028bce:	d1c5      	bne.n	8028b5c <__swsetup_r+0x24>
 8028bd0:	bd38      	pop	{r3, r4, r5, pc}
 8028bd2:	0799      	lsls	r1, r3, #30
 8028bd4:	bf58      	it	pl
 8028bd6:	6962      	ldrpl	r2, [r4, #20]
 8028bd8:	60a2      	str	r2, [r4, #8]
 8028bda:	e7f4      	b.n	8028bc6 <__swsetup_r+0x8e>
 8028bdc:	2000      	movs	r0, #0
 8028bde:	e7f7      	b.n	8028bd0 <__swsetup_r+0x98>
 8028be0:	20000110 	.word	0x20000110

08028be4 <__swhatbuf_r>:
 8028be4:	b570      	push	{r4, r5, r6, lr}
 8028be6:	460c      	mov	r4, r1
 8028be8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028bec:	2900      	cmp	r1, #0
 8028bee:	b096      	sub	sp, #88	@ 0x58
 8028bf0:	4615      	mov	r5, r2
 8028bf2:	461e      	mov	r6, r3
 8028bf4:	da0d      	bge.n	8028c12 <__swhatbuf_r+0x2e>
 8028bf6:	89a3      	ldrh	r3, [r4, #12]
 8028bf8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8028bfc:	f04f 0100 	mov.w	r1, #0
 8028c00:	bf14      	ite	ne
 8028c02:	2340      	movne	r3, #64	@ 0x40
 8028c04:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8028c08:	2000      	movs	r0, #0
 8028c0a:	6031      	str	r1, [r6, #0]
 8028c0c:	602b      	str	r3, [r5, #0]
 8028c0e:	b016      	add	sp, #88	@ 0x58
 8028c10:	bd70      	pop	{r4, r5, r6, pc}
 8028c12:	466a      	mov	r2, sp
 8028c14:	f000 f848 	bl	8028ca8 <_fstat_r>
 8028c18:	2800      	cmp	r0, #0
 8028c1a:	dbec      	blt.n	8028bf6 <__swhatbuf_r+0x12>
 8028c1c:	9901      	ldr	r1, [sp, #4]
 8028c1e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8028c22:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8028c26:	4259      	negs	r1, r3
 8028c28:	4159      	adcs	r1, r3
 8028c2a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8028c2e:	e7eb      	b.n	8028c08 <__swhatbuf_r+0x24>

08028c30 <__smakebuf_r>:
 8028c30:	898b      	ldrh	r3, [r1, #12]
 8028c32:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8028c34:	079d      	lsls	r5, r3, #30
 8028c36:	4606      	mov	r6, r0
 8028c38:	460c      	mov	r4, r1
 8028c3a:	d507      	bpl.n	8028c4c <__smakebuf_r+0x1c>
 8028c3c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8028c40:	6023      	str	r3, [r4, #0]
 8028c42:	6123      	str	r3, [r4, #16]
 8028c44:	2301      	movs	r3, #1
 8028c46:	6163      	str	r3, [r4, #20]
 8028c48:	b003      	add	sp, #12
 8028c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028c4c:	ab01      	add	r3, sp, #4
 8028c4e:	466a      	mov	r2, sp
 8028c50:	f7ff ffc8 	bl	8028be4 <__swhatbuf_r>
 8028c54:	9f00      	ldr	r7, [sp, #0]
 8028c56:	4605      	mov	r5, r0
 8028c58:	4639      	mov	r1, r7
 8028c5a:	4630      	mov	r0, r6
 8028c5c:	f7ff f86c 	bl	8027d38 <_malloc_r>
 8028c60:	b948      	cbnz	r0, 8028c76 <__smakebuf_r+0x46>
 8028c62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028c66:	059a      	lsls	r2, r3, #22
 8028c68:	d4ee      	bmi.n	8028c48 <__smakebuf_r+0x18>
 8028c6a:	f023 0303 	bic.w	r3, r3, #3
 8028c6e:	f043 0302 	orr.w	r3, r3, #2
 8028c72:	81a3      	strh	r3, [r4, #12]
 8028c74:	e7e2      	b.n	8028c3c <__smakebuf_r+0xc>
 8028c76:	89a3      	ldrh	r3, [r4, #12]
 8028c78:	6020      	str	r0, [r4, #0]
 8028c7a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8028c7e:	81a3      	strh	r3, [r4, #12]
 8028c80:	9b01      	ldr	r3, [sp, #4]
 8028c82:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8028c86:	b15b      	cbz	r3, 8028ca0 <__smakebuf_r+0x70>
 8028c88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028c8c:	4630      	mov	r0, r6
 8028c8e:	f000 f81d 	bl	8028ccc <_isatty_r>
 8028c92:	b128      	cbz	r0, 8028ca0 <__smakebuf_r+0x70>
 8028c94:	89a3      	ldrh	r3, [r4, #12]
 8028c96:	f023 0303 	bic.w	r3, r3, #3
 8028c9a:	f043 0301 	orr.w	r3, r3, #1
 8028c9e:	81a3      	strh	r3, [r4, #12]
 8028ca0:	89a3      	ldrh	r3, [r4, #12]
 8028ca2:	431d      	orrs	r5, r3
 8028ca4:	81a5      	strh	r5, [r4, #12]
 8028ca6:	e7cf      	b.n	8028c48 <__smakebuf_r+0x18>

08028ca8 <_fstat_r>:
 8028ca8:	b538      	push	{r3, r4, r5, lr}
 8028caa:	4d07      	ldr	r5, [pc, #28]	@ (8028cc8 <_fstat_r+0x20>)
 8028cac:	2300      	movs	r3, #0
 8028cae:	4604      	mov	r4, r0
 8028cb0:	4608      	mov	r0, r1
 8028cb2:	4611      	mov	r1, r2
 8028cb4:	602b      	str	r3, [r5, #0]
 8028cb6:	f7d9 fbbe 	bl	8002436 <_fstat>
 8028cba:	1c43      	adds	r3, r0, #1
 8028cbc:	d102      	bne.n	8028cc4 <_fstat_r+0x1c>
 8028cbe:	682b      	ldr	r3, [r5, #0]
 8028cc0:	b103      	cbz	r3, 8028cc4 <_fstat_r+0x1c>
 8028cc2:	6023      	str	r3, [r4, #0]
 8028cc4:	bd38      	pop	{r3, r4, r5, pc}
 8028cc6:	bf00      	nop
 8028cc8:	20014b00 	.word	0x20014b00

08028ccc <_isatty_r>:
 8028ccc:	b538      	push	{r3, r4, r5, lr}
 8028cce:	4d06      	ldr	r5, [pc, #24]	@ (8028ce8 <_isatty_r+0x1c>)
 8028cd0:	2300      	movs	r3, #0
 8028cd2:	4604      	mov	r4, r0
 8028cd4:	4608      	mov	r0, r1
 8028cd6:	602b      	str	r3, [r5, #0]
 8028cd8:	f7d9 fbb2 	bl	8002440 <_isatty>
 8028cdc:	1c43      	adds	r3, r0, #1
 8028cde:	d102      	bne.n	8028ce6 <_isatty_r+0x1a>
 8028ce0:	682b      	ldr	r3, [r5, #0]
 8028ce2:	b103      	cbz	r3, 8028ce6 <_isatty_r+0x1a>
 8028ce4:	6023      	str	r3, [r4, #0]
 8028ce6:	bd38      	pop	{r3, r4, r5, pc}
 8028ce8:	20014b00 	.word	0x20014b00

08028cec <_init>:
 8028cec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028cee:	bf00      	nop
 8028cf0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028cf2:	bc08      	pop	{r3}
 8028cf4:	469e      	mov	lr, r3
 8028cf6:	4770      	bx	lr

08028cf8 <_fini>:
 8028cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028cfa:	bf00      	nop
 8028cfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028cfe:	bc08      	pop	{r3}
 8028d00:	469e      	mov	lr, r3
 8028d02:	4770      	bx	lr
