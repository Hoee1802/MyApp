
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bc2c  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002e2c  0802bde0  0802bde0  0002cde0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002dbe  0802ec0c  0802ec0c  0002fc0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000038  080319cc  080319cc  000329cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000018e  08031a04  08031a04  00032a04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0001d080  08031b94  08031b94  00032b94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0804ec14  0804ec14  00050380  2**0
                  CONTENTS
  8 .ARM          00000008  0804ec14  0804ec14  0004fc14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0804ec1c  0804ec1c  00050380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0804ec1c  0804ec1c  0004fc1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0804ec30  0804ec30  0004fc30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0804ec38  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  0804ed9c  00050180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  0804ee9c  00050280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          00014920  20000380  0804ef9c  00050380  2**2
                  ALLOC
 16 ._user_heap_stack 00001400  20014ca0  0804ef9c  00050ca0  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00050380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00051000  2**2
                  ALLOC
 19 .debug_line   0007ef6a  00000000  00000000  000503b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000057  00000000  00000000  000cf31a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   001d2d8f  00000000  00000000  000cf371  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 00026768  00000000  00000000  002a2100  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00004198  00000000  00000000  002c8868  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0011e58a  00000000  00000000  002cca00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 0000656a  00000000  00000000  003eaf8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0002a63d  00000000  00000000  003f14f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003843b  00000000  00000000  0041bb31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  00453f6c  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000b558  00000000  00000000  00454030  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bdc4 	.word	0x0802bdc4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	0802bdc4 	.word	0x0802bdc4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2f>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b70:	bf24      	itt	cs
 8000b72:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b76:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b7a:	d90d      	bls.n	8000b98 <__aeabi_d2f+0x30>
 8000b7c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b80:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b84:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b88:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b8c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b90:	bf08      	it	eq
 8000b92:	f020 0001 	biceq.w	r0, r0, #1
 8000b96:	4770      	bx	lr
 8000b98:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b9c:	d121      	bne.n	8000be2 <__aeabi_d2f+0x7a>
 8000b9e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000ba2:	bfbc      	itt	lt
 8000ba4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	4770      	bxlt	lr
 8000baa:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bae:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bb2:	f1c2 0218 	rsb	r2, r2, #24
 8000bb6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bba:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bbe:	fa20 f002 	lsr.w	r0, r0, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	f040 0001 	orrne.w	r0, r0, #1
 8000bc8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bcc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bd0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bd4:	ea40 000c 	orr.w	r0, r0, ip
 8000bd8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bdc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000be0:	e7cc      	b.n	8000b7c <__aeabi_d2f+0x14>
 8000be2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000be6:	d107      	bne.n	8000bf8 <__aeabi_d2f+0x90>
 8000be8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bec:	bf1e      	ittt	ne
 8000bee:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000bf2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bf6:	4770      	bxne	lr
 8000bf8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bfc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c00:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c04:	4770      	bx	lr
 8000c06:	bf00      	nop

08000c08 <__aeabi_ldivmod>:
 8000c08:	b97b      	cbnz	r3, 8000c2a <__aeabi_ldivmod+0x22>
 8000c0a:	b972      	cbnz	r2, 8000c2a <__aeabi_ldivmod+0x22>
 8000c0c:	2900      	cmp	r1, #0
 8000c0e:	bfbe      	ittt	lt
 8000c10:	2000      	movlt	r0, #0
 8000c12:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000c16:	e006      	blt.n	8000c26 <__aeabi_ldivmod+0x1e>
 8000c18:	bf08      	it	eq
 8000c1a:	2800      	cmpeq	r0, #0
 8000c1c:	bf1c      	itt	ne
 8000c1e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000c22:	f04f 30ff 	movne.w	r0, #4294967295
 8000c26:	f000 b9d3 	b.w	8000fd0 <__aeabi_idiv0>
 8000c2a:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c2e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c32:	2900      	cmp	r1, #0
 8000c34:	db09      	blt.n	8000c4a <__aeabi_ldivmod+0x42>
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	db1a      	blt.n	8000c70 <__aeabi_ldivmod+0x68>
 8000c3a:	f000 f84d 	bl	8000cd8 <__udivmoddi4>
 8000c3e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c42:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c46:	b004      	add	sp, #16
 8000c48:	4770      	bx	lr
 8000c4a:	4240      	negs	r0, r0
 8000c4c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c50:	2b00      	cmp	r3, #0
 8000c52:	db1b      	blt.n	8000c8c <__aeabi_ldivmod+0x84>
 8000c54:	f000 f840 	bl	8000cd8 <__udivmoddi4>
 8000c58:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c5c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c60:	b004      	add	sp, #16
 8000c62:	4240      	negs	r0, r0
 8000c64:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c68:	4252      	negs	r2, r2
 8000c6a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c6e:	4770      	bx	lr
 8000c70:	4252      	negs	r2, r2
 8000c72:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c76:	f000 f82f 	bl	8000cd8 <__udivmoddi4>
 8000c7a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c7e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c82:	b004      	add	sp, #16
 8000c84:	4240      	negs	r0, r0
 8000c86:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c8a:	4770      	bx	lr
 8000c8c:	4252      	negs	r2, r2
 8000c8e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000c92:	f000 f821 	bl	8000cd8 <__udivmoddi4>
 8000c96:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c9a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c9e:	b004      	add	sp, #16
 8000ca0:	4252      	negs	r2, r2
 8000ca2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000ca6:	4770      	bx	lr

08000ca8 <__aeabi_uldivmod>:
 8000ca8:	b953      	cbnz	r3, 8000cc0 <__aeabi_uldivmod+0x18>
 8000caa:	b94a      	cbnz	r2, 8000cc0 <__aeabi_uldivmod+0x18>
 8000cac:	2900      	cmp	r1, #0
 8000cae:	bf08      	it	eq
 8000cb0:	2800      	cmpeq	r0, #0
 8000cb2:	bf1c      	itt	ne
 8000cb4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cb8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cbc:	f000 b988 	b.w	8000fd0 <__aeabi_idiv0>
 8000cc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cc8:	f000 f806 	bl	8000cd8 <__udivmoddi4>
 8000ccc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cd4:	b004      	add	sp, #16
 8000cd6:	4770      	bx	lr

08000cd8 <__udivmoddi4>:
 8000cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cdc:	9d08      	ldr	r5, [sp, #32]
 8000cde:	468e      	mov	lr, r1
 8000ce0:	4604      	mov	r4, r0
 8000ce2:	4688      	mov	r8, r1
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	d14a      	bne.n	8000d7e <__udivmoddi4+0xa6>
 8000ce8:	428a      	cmp	r2, r1
 8000cea:	4617      	mov	r7, r2
 8000cec:	d962      	bls.n	8000db4 <__udivmoddi4+0xdc>
 8000cee:	fab2 f682 	clz	r6, r2
 8000cf2:	b14e      	cbz	r6, 8000d08 <__udivmoddi4+0x30>
 8000cf4:	f1c6 0320 	rsb	r3, r6, #32
 8000cf8:	fa01 f806 	lsl.w	r8, r1, r6
 8000cfc:	fa20 f303 	lsr.w	r3, r0, r3
 8000d00:	40b7      	lsls	r7, r6
 8000d02:	ea43 0808 	orr.w	r8, r3, r8
 8000d06:	40b4      	lsls	r4, r6
 8000d08:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d0c:	fa1f fc87 	uxth.w	ip, r7
 8000d10:	fbb8 f1fe 	udiv	r1, r8, lr
 8000d14:	0c23      	lsrs	r3, r4, #16
 8000d16:	fb0e 8811 	mls	r8, lr, r1, r8
 8000d1a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d1e:	fb01 f20c 	mul.w	r2, r1, ip
 8000d22:	429a      	cmp	r2, r3
 8000d24:	d909      	bls.n	8000d3a <__udivmoddi4+0x62>
 8000d26:	18fb      	adds	r3, r7, r3
 8000d28:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d2c:	f080 80ea 	bcs.w	8000f04 <__udivmoddi4+0x22c>
 8000d30:	429a      	cmp	r2, r3
 8000d32:	f240 80e7 	bls.w	8000f04 <__udivmoddi4+0x22c>
 8000d36:	3902      	subs	r1, #2
 8000d38:	443b      	add	r3, r7
 8000d3a:	1a9a      	subs	r2, r3, r2
 8000d3c:	b2a3      	uxth	r3, r4
 8000d3e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d42:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d46:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000d4a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d4e:	459c      	cmp	ip, r3
 8000d50:	d909      	bls.n	8000d66 <__udivmoddi4+0x8e>
 8000d52:	18fb      	adds	r3, r7, r3
 8000d54:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d58:	f080 80d6 	bcs.w	8000f08 <__udivmoddi4+0x230>
 8000d5c:	459c      	cmp	ip, r3
 8000d5e:	f240 80d3 	bls.w	8000f08 <__udivmoddi4+0x230>
 8000d62:	443b      	add	r3, r7
 8000d64:	3802      	subs	r0, #2
 8000d66:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000d6a:	eba3 030c 	sub.w	r3, r3, ip
 8000d6e:	2100      	movs	r1, #0
 8000d70:	b11d      	cbz	r5, 8000d7a <__udivmoddi4+0xa2>
 8000d72:	40f3      	lsrs	r3, r6
 8000d74:	2200      	movs	r2, #0
 8000d76:	e9c5 3200 	strd	r3, r2, [r5]
 8000d7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7e:	428b      	cmp	r3, r1
 8000d80:	d905      	bls.n	8000d8e <__udivmoddi4+0xb6>
 8000d82:	b10d      	cbz	r5, 8000d88 <__udivmoddi4+0xb0>
 8000d84:	e9c5 0100 	strd	r0, r1, [r5]
 8000d88:	2100      	movs	r1, #0
 8000d8a:	4608      	mov	r0, r1
 8000d8c:	e7f5      	b.n	8000d7a <__udivmoddi4+0xa2>
 8000d8e:	fab3 f183 	clz	r1, r3
 8000d92:	2900      	cmp	r1, #0
 8000d94:	d146      	bne.n	8000e24 <__udivmoddi4+0x14c>
 8000d96:	4573      	cmp	r3, lr
 8000d98:	d302      	bcc.n	8000da0 <__udivmoddi4+0xc8>
 8000d9a:	4282      	cmp	r2, r0
 8000d9c:	f200 8105 	bhi.w	8000faa <__udivmoddi4+0x2d2>
 8000da0:	1a84      	subs	r4, r0, r2
 8000da2:	eb6e 0203 	sbc.w	r2, lr, r3
 8000da6:	2001      	movs	r0, #1
 8000da8:	4690      	mov	r8, r2
 8000daa:	2d00      	cmp	r5, #0
 8000dac:	d0e5      	beq.n	8000d7a <__udivmoddi4+0xa2>
 8000dae:	e9c5 4800 	strd	r4, r8, [r5]
 8000db2:	e7e2      	b.n	8000d7a <__udivmoddi4+0xa2>
 8000db4:	2a00      	cmp	r2, #0
 8000db6:	f000 8090 	beq.w	8000eda <__udivmoddi4+0x202>
 8000dba:	fab2 f682 	clz	r6, r2
 8000dbe:	2e00      	cmp	r6, #0
 8000dc0:	f040 80a4 	bne.w	8000f0c <__udivmoddi4+0x234>
 8000dc4:	1a8a      	subs	r2, r1, r2
 8000dc6:	0c03      	lsrs	r3, r0, #16
 8000dc8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000dcc:	b280      	uxth	r0, r0
 8000dce:	b2bc      	uxth	r4, r7
 8000dd0:	2101      	movs	r1, #1
 8000dd2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000dd6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000dda:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000dde:	fb04 f20c 	mul.w	r2, r4, ip
 8000de2:	429a      	cmp	r2, r3
 8000de4:	d907      	bls.n	8000df6 <__udivmoddi4+0x11e>
 8000de6:	18fb      	adds	r3, r7, r3
 8000de8:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000dec:	d202      	bcs.n	8000df4 <__udivmoddi4+0x11c>
 8000dee:	429a      	cmp	r2, r3
 8000df0:	f200 80e0 	bhi.w	8000fb4 <__udivmoddi4+0x2dc>
 8000df4:	46c4      	mov	ip, r8
 8000df6:	1a9b      	subs	r3, r3, r2
 8000df8:	fbb3 f2fe 	udiv	r2, r3, lr
 8000dfc:	fb0e 3312 	mls	r3, lr, r2, r3
 8000e00:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000e04:	fb02 f404 	mul.w	r4, r2, r4
 8000e08:	429c      	cmp	r4, r3
 8000e0a:	d907      	bls.n	8000e1c <__udivmoddi4+0x144>
 8000e0c:	18fb      	adds	r3, r7, r3
 8000e0e:	f102 30ff 	add.w	r0, r2, #4294967295
 8000e12:	d202      	bcs.n	8000e1a <__udivmoddi4+0x142>
 8000e14:	429c      	cmp	r4, r3
 8000e16:	f200 80ca 	bhi.w	8000fae <__udivmoddi4+0x2d6>
 8000e1a:	4602      	mov	r2, r0
 8000e1c:	1b1b      	subs	r3, r3, r4
 8000e1e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000e22:	e7a5      	b.n	8000d70 <__udivmoddi4+0x98>
 8000e24:	f1c1 0620 	rsb	r6, r1, #32
 8000e28:	408b      	lsls	r3, r1
 8000e2a:	fa22 f706 	lsr.w	r7, r2, r6
 8000e2e:	431f      	orrs	r7, r3
 8000e30:	fa0e f401 	lsl.w	r4, lr, r1
 8000e34:	fa20 f306 	lsr.w	r3, r0, r6
 8000e38:	fa2e fe06 	lsr.w	lr, lr, r6
 8000e3c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000e40:	4323      	orrs	r3, r4
 8000e42:	fa00 f801 	lsl.w	r8, r0, r1
 8000e46:	fa1f fc87 	uxth.w	ip, r7
 8000e4a:	fbbe f0f9 	udiv	r0, lr, r9
 8000e4e:	0c1c      	lsrs	r4, r3, #16
 8000e50:	fb09 ee10 	mls	lr, r9, r0, lr
 8000e54:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000e58:	fb00 fe0c 	mul.w	lr, r0, ip
 8000e5c:	45a6      	cmp	lr, r4
 8000e5e:	fa02 f201 	lsl.w	r2, r2, r1
 8000e62:	d909      	bls.n	8000e78 <__udivmoddi4+0x1a0>
 8000e64:	193c      	adds	r4, r7, r4
 8000e66:	f100 3aff 	add.w	sl, r0, #4294967295
 8000e6a:	f080 809c 	bcs.w	8000fa6 <__udivmoddi4+0x2ce>
 8000e6e:	45a6      	cmp	lr, r4
 8000e70:	f240 8099 	bls.w	8000fa6 <__udivmoddi4+0x2ce>
 8000e74:	3802      	subs	r0, #2
 8000e76:	443c      	add	r4, r7
 8000e78:	eba4 040e 	sub.w	r4, r4, lr
 8000e7c:	fa1f fe83 	uxth.w	lr, r3
 8000e80:	fbb4 f3f9 	udiv	r3, r4, r9
 8000e84:	fb09 4413 	mls	r4, r9, r3, r4
 8000e88:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000e8c:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e90:	45a4      	cmp	ip, r4
 8000e92:	d908      	bls.n	8000ea6 <__udivmoddi4+0x1ce>
 8000e94:	193c      	adds	r4, r7, r4
 8000e96:	f103 3eff 	add.w	lr, r3, #4294967295
 8000e9a:	f080 8082 	bcs.w	8000fa2 <__udivmoddi4+0x2ca>
 8000e9e:	45a4      	cmp	ip, r4
 8000ea0:	d97f      	bls.n	8000fa2 <__udivmoddi4+0x2ca>
 8000ea2:	3b02      	subs	r3, #2
 8000ea4:	443c      	add	r4, r7
 8000ea6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000eaa:	eba4 040c 	sub.w	r4, r4, ip
 8000eae:	fba0 ec02 	umull	lr, ip, r0, r2
 8000eb2:	4564      	cmp	r4, ip
 8000eb4:	4673      	mov	r3, lr
 8000eb6:	46e1      	mov	r9, ip
 8000eb8:	d362      	bcc.n	8000f80 <__udivmoddi4+0x2a8>
 8000eba:	d05f      	beq.n	8000f7c <__udivmoddi4+0x2a4>
 8000ebc:	b15d      	cbz	r5, 8000ed6 <__udivmoddi4+0x1fe>
 8000ebe:	ebb8 0203 	subs.w	r2, r8, r3
 8000ec2:	eb64 0409 	sbc.w	r4, r4, r9
 8000ec6:	fa04 f606 	lsl.w	r6, r4, r6
 8000eca:	fa22 f301 	lsr.w	r3, r2, r1
 8000ece:	431e      	orrs	r6, r3
 8000ed0:	40cc      	lsrs	r4, r1
 8000ed2:	e9c5 6400 	strd	r6, r4, [r5]
 8000ed6:	2100      	movs	r1, #0
 8000ed8:	e74f      	b.n	8000d7a <__udivmoddi4+0xa2>
 8000eda:	fbb1 fcf2 	udiv	ip, r1, r2
 8000ede:	0c01      	lsrs	r1, r0, #16
 8000ee0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000ee4:	b280      	uxth	r0, r0
 8000ee6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000eea:	463b      	mov	r3, r7
 8000eec:	4638      	mov	r0, r7
 8000eee:	463c      	mov	r4, r7
 8000ef0:	46b8      	mov	r8, r7
 8000ef2:	46be      	mov	lr, r7
 8000ef4:	2620      	movs	r6, #32
 8000ef6:	fbb1 f1f7 	udiv	r1, r1, r7
 8000efa:	eba2 0208 	sub.w	r2, r2, r8
 8000efe:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000f02:	e766      	b.n	8000dd2 <__udivmoddi4+0xfa>
 8000f04:	4601      	mov	r1, r0
 8000f06:	e718      	b.n	8000d3a <__udivmoddi4+0x62>
 8000f08:	4610      	mov	r0, r2
 8000f0a:	e72c      	b.n	8000d66 <__udivmoddi4+0x8e>
 8000f0c:	f1c6 0220 	rsb	r2, r6, #32
 8000f10:	fa2e f302 	lsr.w	r3, lr, r2
 8000f14:	40b7      	lsls	r7, r6
 8000f16:	40b1      	lsls	r1, r6
 8000f18:	fa20 f202 	lsr.w	r2, r0, r2
 8000f1c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000f20:	430a      	orrs	r2, r1
 8000f22:	fbb3 f8fe 	udiv	r8, r3, lr
 8000f26:	b2bc      	uxth	r4, r7
 8000f28:	fb0e 3318 	mls	r3, lr, r8, r3
 8000f2c:	0c11      	lsrs	r1, r2, #16
 8000f2e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f32:	fb08 f904 	mul.w	r9, r8, r4
 8000f36:	40b0      	lsls	r0, r6
 8000f38:	4589      	cmp	r9, r1
 8000f3a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000f3e:	b280      	uxth	r0, r0
 8000f40:	d93e      	bls.n	8000fc0 <__udivmoddi4+0x2e8>
 8000f42:	1879      	adds	r1, r7, r1
 8000f44:	f108 3cff 	add.w	ip, r8, #4294967295
 8000f48:	d201      	bcs.n	8000f4e <__udivmoddi4+0x276>
 8000f4a:	4589      	cmp	r9, r1
 8000f4c:	d81f      	bhi.n	8000f8e <__udivmoddi4+0x2b6>
 8000f4e:	eba1 0109 	sub.w	r1, r1, r9
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fb09 f804 	mul.w	r8, r9, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	b292      	uxth	r2, r2
 8000f60:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f64:	4542      	cmp	r2, r8
 8000f66:	d229      	bcs.n	8000fbc <__udivmoddi4+0x2e4>
 8000f68:	18ba      	adds	r2, r7, r2
 8000f6a:	f109 31ff 	add.w	r1, r9, #4294967295
 8000f6e:	d2c4      	bcs.n	8000efa <__udivmoddi4+0x222>
 8000f70:	4542      	cmp	r2, r8
 8000f72:	d2c2      	bcs.n	8000efa <__udivmoddi4+0x222>
 8000f74:	f1a9 0102 	sub.w	r1, r9, #2
 8000f78:	443a      	add	r2, r7
 8000f7a:	e7be      	b.n	8000efa <__udivmoddi4+0x222>
 8000f7c:	45f0      	cmp	r8, lr
 8000f7e:	d29d      	bcs.n	8000ebc <__udivmoddi4+0x1e4>
 8000f80:	ebbe 0302 	subs.w	r3, lr, r2
 8000f84:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000f88:	3801      	subs	r0, #1
 8000f8a:	46e1      	mov	r9, ip
 8000f8c:	e796      	b.n	8000ebc <__udivmoddi4+0x1e4>
 8000f8e:	eba7 0909 	sub.w	r9, r7, r9
 8000f92:	4449      	add	r1, r9
 8000f94:	f1a8 0c02 	sub.w	ip, r8, #2
 8000f98:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f9c:	fb09 f804 	mul.w	r8, r9, r4
 8000fa0:	e7db      	b.n	8000f5a <__udivmoddi4+0x282>
 8000fa2:	4673      	mov	r3, lr
 8000fa4:	e77f      	b.n	8000ea6 <__udivmoddi4+0x1ce>
 8000fa6:	4650      	mov	r0, sl
 8000fa8:	e766      	b.n	8000e78 <__udivmoddi4+0x1a0>
 8000faa:	4608      	mov	r0, r1
 8000fac:	e6fd      	b.n	8000daa <__udivmoddi4+0xd2>
 8000fae:	443b      	add	r3, r7
 8000fb0:	3a02      	subs	r2, #2
 8000fb2:	e733      	b.n	8000e1c <__udivmoddi4+0x144>
 8000fb4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000fb8:	443b      	add	r3, r7
 8000fba:	e71c      	b.n	8000df6 <__udivmoddi4+0x11e>
 8000fbc:	4649      	mov	r1, r9
 8000fbe:	e79c      	b.n	8000efa <__udivmoddi4+0x222>
 8000fc0:	eba1 0109 	sub.w	r1, r1, r9
 8000fc4:	46c4      	mov	ip, r8
 8000fc6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000fca:	fb09 f804 	mul.w	r8, r9, r4
 8000fce:	e7c4      	b.n	8000f5a <__udivmoddi4+0x282>

08000fd0 <__aeabi_idiv0>:
 8000fd0:	4770      	bx	lr
 8000fd2:	bf00      	nop

08000fd4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000fd4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800100c <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000fd8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000fda:	e003      	b.n	8000fe4 <LoopCopyDataInit>

08000fdc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000fdc:	4b0c      	ldr	r3, [pc, #48]	@ (8001010 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000fde:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000fe0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000fe2:	3104      	adds	r1, #4

08000fe4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000fe4:	480b      	ldr	r0, [pc, #44]	@ (8001014 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000fe6:	4b0c      	ldr	r3, [pc, #48]	@ (8001018 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000fe8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000fea:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000fec:	d3f6      	bcc.n	8000fdc <CopyDataInit>
  ldr  r2, =_sbss
 8000fee:	4a0b      	ldr	r2, [pc, #44]	@ (800101c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000ff0:	e002      	b.n	8000ff8 <LoopFillZerobss>

08000ff2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000ff2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000ff4:	f842 3b04 	str.w	r3, [r2], #4

08000ff8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000ff8:	4b09      	ldr	r3, [pc, #36]	@ (8001020 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000ffa:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ffc:	d3f9      	bcc.n	8000ff2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ffe:	f00a f931 	bl	800b264 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001002:	f02a f971 	bl	802b2e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001006:	f001 f965 	bl	80022d4 <main>
  bx  lr    
 800100a:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 800100c:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001010:	0804ec38 	.word	0x0804ec38
  ldr  r0, =_sdata
 8001014:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001018:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 800101c:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 8001020:	20014ca0 	.word	0x20014ca0

08001024 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001024:	e7fe      	b.n	8001024 <ADC_IRQHandler>

08001026 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001026:	4770      	bx	lr

08001028 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001028:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800102a:	f000 fda7 	bl	8001b7c <touchgfx_components_init>
    touchgfx_init();
}
 800102e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 8001032:	f000 bd29 	b.w	8001a88 <touchgfx_init>

08001036 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8001036:	f000 bda3 	b.w	8001b80 <touchgfx_taskEntry>

0800103a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800103a:	4770      	bx	lr

0800103c <_ZN20STM32TouchControllerD0Ev>:
 800103c:	b510      	push	{r4, lr}
 800103e:	2104      	movs	r1, #4
 8001040:	4604      	mov	r4, r0
 8001042:	f028 fe51 	bl	8029ce8 <_ZdlPvj>
 8001046:	4620      	mov	r0, r4
 8001048:	bd10      	pop	{r4, pc}
	...

0800104c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800104c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800104e:	4b0c      	ldr	r3, [pc, #48]	@ (8001080 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001050:	4c0c      	ldr	r4, [pc, #48]	@ (8001084 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001052:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001054:	4b0c      	ldr	r3, [pc, #48]	@ (8001088 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001056:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 8001058:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800105a:	6863      	ldr	r3, [r4, #4]
 800105c:	4798      	blx	r3
 800105e:	f640 0311 	movw	r3, #2065	@ 0x811
 8001062:	4298      	cmp	r0, r3
 8001064:	d10a      	bne.n	800107c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001066:	4d09      	ldr	r5, [pc, #36]	@ (800108c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001068:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800106a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800106c:	2082      	movs	r0, #130	@ 0x82
 800106e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001070:	682b      	ldr	r3, [r5, #0]
 8001072:	2082      	movs	r0, #130	@ 0x82
 8001074:	68db      	ldr	r3, [r3, #12]
 8001076:	4798      	blx	r3
 8001078:	2000      	movs	r0, #0
    }

    return ret;
}
 800107a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800107c:	2001      	movs	r0, #1
 800107e:	e7fc      	b.n	800107a <_Z11BSP_TS_Inittt+0x2e>
 8001080:	200003a6 	.word	0x200003a6
 8001084:	2000004c 	.word	0x2000004c
 8001088:	200003a4 	.word	0x200003a4
 800108c:	200003a8 	.word	0x200003a8

08001090 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001090:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8001094:	20f0      	movs	r0, #240	@ 0xf0
 8001096:	f7ff bfd9 	b.w	800104c <_Z11BSP_TS_Inittt>
	...

0800109c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800109c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800109e:	4d2f      	ldr	r5, [pc, #188]	@ (800115c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80010a0:	682b      	ldr	r3, [r5, #0]
{
 80010a2:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010a4:	691b      	ldr	r3, [r3, #16]
 80010a6:	2082      	movs	r0, #130	@ 0x82
 80010a8:	4798      	blx	r3
 80010aa:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80010ac:	2800      	cmp	r0, #0
 80010ae:	d044      	beq.n	800113a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80010b0:	682b      	ldr	r3, [r5, #0]
 80010b2:	f10d 0206 	add.w	r2, sp, #6
 80010b6:	695b      	ldr	r3, [r3, #20]
 80010b8:	a901      	add	r1, sp, #4
 80010ba:	2082      	movs	r0, #130	@ 0x82
 80010bc:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 80010be:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80010c2:	f5a2 72b4 	sub.w	r2, r2, #360	@ 0x168
 80010c6:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80010c8:	2a0a      	cmp	r2, #10
 80010ca:	d938      	bls.n	800113e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 80010cc:	230b      	movs	r3, #11
 80010ce:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80010d2:	4b23      	ldr	r3, [pc, #140]	@ (8001160 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
 80010d4:	881b      	ldrh	r3, [r3, #0]
 80010d6:	429a      	cmp	r2, r3
 80010d8:	d901      	bls.n	80010de <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
        {
            yr = TsYBoundary - 1;
 80010da:	3b01      	subs	r3, #1
 80010dc:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80010de:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80010e2:	4820      	ldr	r0, [pc, #128]	@ (8001164 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
 80010e4:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 80010e8:	428b      	cmp	r3, r1
 80010ea:	d82a      	bhi.n	8001142 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80010ec:	f5c3 6371 	rsb	r3, r3, #3856	@ 0xf10
 80010f0:	330e      	adds	r3, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80010f2:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80010f4:	b29b      	uxth	r3, r3
        xr = x / 15;
 80010f6:	250f      	movs	r5, #15
 80010f8:	fbb3 f3f5 	udiv	r3, r3, r5
        else if (xr > TsXBoundary)
 80010fc:	4d1a      	ldr	r5, [pc, #104]	@ (8001168 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>)
 80010fe:	882d      	ldrh	r5, [r5, #0]
 8001100:	42ab      	cmp	r3, r5
            xr = TsXBoundary - 1;
 8001102:	bf84      	itt	hi
 8001104:	f105 35ff 	addhi.w	r5, r5, #4294967295
 8001108:	b2ab      	uxthhi	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 800110a:	428b      	cmp	r3, r1
 800110c:	461d      	mov	r5, r3
 800110e:	b28e      	uxth	r6, r1
 8001110:	d920      	bls.n	8001154 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>
 8001112:	1b9b      	subs	r3, r3, r6
 8001114:	b299      	uxth	r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001116:	4e15      	ldr	r6, [pc, #84]	@ (800116c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001118:	6837      	ldr	r7, [r6, #0]
 800111a:	b2bb      	uxth	r3, r7
 800111c:	42ba      	cmp	r2, r7
 800111e:	bf8c      	ite	hi
 8001120:	1ad3      	subhi	r3, r2, r3
 8001122:	1a9b      	subls	r3, r3, r2
 8001124:	b29b      	uxth	r3, r3

        if (xDiff + yDiff > 5)
 8001126:	4419      	add	r1, r3
 8001128:	2905      	cmp	r1, #5
        {
            _x = x;
 800112a:	bfc8      	it	gt
 800112c:	6005      	strgt	r5, [r0, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 800112e:	6803      	ldr	r3, [r0, #0]
            _y = y;
 8001130:	bfc8      	it	gt
 8001132:	6032      	strgt	r2, [r6, #0]
        TsState->X = _x;
 8001134:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001136:	6833      	ldr	r3, [r6, #0]
 8001138:	80a3      	strh	r3, [r4, #4]
    }
}
 800113a:	b003      	add	sp, #12
 800113c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 800113e:	2200      	movs	r2, #0
 8001140:	e7cd      	b.n	80010de <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x42>
            x = 3800 - x;
 8001142:	f5c3 636d 	rsb	r3, r3, #3792	@ 0xed0
 8001146:	3308      	adds	r3, #8
 8001148:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800114a:	2b0e      	cmp	r3, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800114c:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 800114e:	d8d2      	bhi.n	80010f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x5a>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001150:	2500      	movs	r5, #0
            xr = 0;
 8001152:	462b      	mov	r3, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001154:	1ac9      	subs	r1, r1, r3
 8001156:	b289      	uxth	r1, r1
 8001158:	e7dd      	b.n	8001116 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
 800115a:	bf00      	nop
 800115c:	200003a8 	.word	0x200003a8
 8001160:	200003a4 	.word	0x200003a4
 8001164:	200003a0 	.word	0x200003a0
 8001168:	200003a6 	.word	0x200003a6
 800116c:	2000039c 	.word	0x2000039c

08001170 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001170:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001172:	4668      	mov	r0, sp
{
 8001174:	460d      	mov	r5, r1
 8001176:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001178:	f7ff ff90 	bl	800109c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 800117c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001180:	b140      	cbz	r0, 8001194 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
        x = state.X;
 8001182:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001186:	602b      	str	r3, [r5, #0]
        y = 320-state.Y;
 8001188:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800118c:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8001190:	6023      	str	r3, [r4, #0]
        return true;
 8001192:	2001      	movs	r0, #1
}
 8001194:	b003      	add	sp, #12
 8001196:	bd30      	pop	{r4, r5, pc}

08001198 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001198:	2803      	cmp	r0, #3
 800119a:	d821      	bhi.n	80011e0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800119c:	e8df f000 	tbb	[pc, r0]
 80011a0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80011a4:	4b0f      	ldr	r3, [pc, #60]	@ (80011e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011a6:	681a      	ldr	r2, [r3, #0]
 80011a8:	fab2 f282 	clz	r2, r2
 80011ac:	0952      	lsrs	r2, r2, #5
 80011ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80011b0:	480d      	ldr	r0, [pc, #52]	@ (80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80011b2:	f00a bd1f 	b.w	800bbf4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80011b6:	4b0b      	ldr	r3, [pc, #44]	@ (80011e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011b8:	685a      	ldr	r2, [r3, #4]
 80011ba:	fab2 f282 	clz	r2, r2
 80011be:	0952      	lsrs	r2, r2, #5
 80011c0:	2108      	movs	r1, #8
 80011c2:	e7f5      	b.n	80011b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80011c4:	4b07      	ldr	r3, [pc, #28]	@ (80011e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011c6:	689a      	ldr	r2, [r3, #8]
 80011c8:	fab2 f282 	clz	r2, r2
 80011cc:	0952      	lsrs	r2, r2, #5
 80011ce:	2110      	movs	r1, #16
 80011d0:	e7ee      	b.n	80011b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80011d2:	4b04      	ldr	r3, [pc, #16]	@ (80011e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011d4:	68da      	ldr	r2, [r3, #12]
 80011d6:	fab2 f282 	clz	r2, r2
 80011da:	0952      	lsrs	r2, r2, #5
 80011dc:	2120      	movs	r1, #32
 80011de:	e7e7      	b.n	80011b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80011e0:	4770      	bx	lr
 80011e2:	bf00      	nop
 80011e4:	200003ac 	.word	0x200003ac
 80011e8:	40021000 	.word	0x40021000

080011ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80011ec:	2803      	cmp	r0, #3
 80011ee:	d821      	bhi.n	8001234 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80011f0:	e8df f000 	tbb	[pc, r0]
 80011f4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80011f8:	4b0f      	ldr	r3, [pc, #60]	@ (8001238 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80011fa:	681a      	ldr	r2, [r3, #0]
 80011fc:	3a00      	subs	r2, #0
 80011fe:	bf18      	it	ne
 8001200:	2201      	movne	r2, #1
 8001202:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001204:	480d      	ldr	r0, [pc, #52]	@ (800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8001206:	f00a bcf5 	b.w	800bbf4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 800120a:	4b0b      	ldr	r3, [pc, #44]	@ (8001238 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800120c:	685a      	ldr	r2, [r3, #4]
 800120e:	3a00      	subs	r2, #0
 8001210:	bf18      	it	ne
 8001212:	2201      	movne	r2, #1
 8001214:	2108      	movs	r1, #8
 8001216:	e7f5      	b.n	8001204 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001218:	4b07      	ldr	r3, [pc, #28]	@ (8001238 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 800121a:	689a      	ldr	r2, [r3, #8]
 800121c:	3a00      	subs	r2, #0
 800121e:	bf18      	it	ne
 8001220:	2201      	movne	r2, #1
 8001222:	2110      	movs	r1, #16
 8001224:	e7ee      	b.n	8001204 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8001226:	4b04      	ldr	r3, [pc, #16]	@ (8001238 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001228:	68da      	ldr	r2, [r3, #12]
 800122a:	3a00      	subs	r2, #0
 800122c:	bf18      	it	ne
 800122e:	2201      	movne	r2, #1
 8001230:	2120      	movs	r1, #32
 8001232:	e7e7      	b.n	8001204 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001234:	4770      	bx	lr
 8001236:	bf00      	nop
 8001238:	200003ac 	.word	0x200003ac
 800123c:	40021000 	.word	0x40021000

08001240 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001240:	2803      	cmp	r0, #3
 8001242:	d80d      	bhi.n	8001260 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8001244:	e8df f000 	tbb	[pc, r0]
 8001248:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800124c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800124e:	4805      	ldr	r0, [pc, #20]	@ (8001264 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8001250:	f00a bcd5 	b.w	800bbfe <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001254:	2108      	movs	r1, #8
 8001256:	e7fa      	b.n	800124e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001258:	2110      	movs	r1, #16
 800125a:	e7f8      	b.n	800124e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800125c:	2120      	movs	r1, #32
 800125e:	e7f6      	b.n	800124e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8001260:	4770      	bx	lr
 8001262:	bf00      	nop
 8001264:	40021000 	.word	0x40021000

08001268 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001268:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800126a:	2803      	cmp	r0, #3
 800126c:	d811      	bhi.n	8001292 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800126e:	e8df f000 	tbb	[pc, r0]
 8001272:	0a02      	.short	0x0a02
 8001274:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001276:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001278:	4807      	ldr	r0, [pc, #28]	@ (8001298 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800127a:	f00a fcb5 	bl	800bbe8 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800127e:	1e43      	subs	r3, r0, #1
 8001280:	4258      	negs	r0, r3
 8001282:	4158      	adcs	r0, r3
 8001284:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001286:	2108      	movs	r1, #8
 8001288:	e7f6      	b.n	8001278 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800128a:	2110      	movs	r1, #16
 800128c:	e7f4      	b.n	8001278 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800128e:	2120      	movs	r1, #32
 8001290:	e7f2      	b.n	8001278 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8001292:	2000      	movs	r0, #0
 8001294:	e7f3      	b.n	800127e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001296:	bf00      	nop
 8001298:	40021000 	.word	0x40021000

0800129c <_ZN8touchgfx4GPIO4initEv>:
{
 800129c:	b570      	push	{r4, r5, r6, lr}
 800129e:	4d08      	ldr	r5, [pc, #32]	@ (80012c0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80012a0:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80012a2:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80012a4:	b2e0      	uxtb	r0, r4
 80012a6:	f7ff ffdf 	bl	8001268 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80012aa:	b118      	cbz	r0, 80012b4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80012b0:	bf18      	it	ne
 80012b2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80012b4:	3401      	adds	r4, #1
 80012b6:	2c05      	cmp	r4, #5
 80012b8:	f105 0504 	add.w	r5, r5, #4
 80012bc:	d1f2      	bne.n	80012a4 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80012be:	bd70      	pop	{r4, r5, r6, pc}
 80012c0:	200003ac 	.word	0x200003ac

080012c4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80012c4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80012c6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 80012ca:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 80012ce:	4770      	bx	lr

080012d0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80012d0:	2000      	movs	r0, #0
 80012d2:	4770      	bx	lr

080012d4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80012d4:	4b03      	ldr	r3, [pc, #12]	@ (80012e4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80012d6:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80012d8:	3900      	subs	r1, #0
 80012da:	bf18      	it	ne
 80012dc:	2101      	movne	r1, #1
 80012de:	7019      	strb	r1, [r3, #0]
    }
 80012e0:	4770      	bx	lr
 80012e2:	bf00      	nop
 80012e4:	20013f5f 	.word	0x20013f5f

080012e8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80012e8:	2000      	movs	r0, #0
 80012ea:	4770      	bx	lr

080012ec <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80012ec:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80012ee:	b10b      	cbz	r3, 80012f4 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80012f0:	4608      	mov	r0, r1
 80012f2:	4718      	bx	r3
        }
    }
 80012f4:	4770      	bx	lr

080012f6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80012f6:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80012fa:	4770      	bx	lr

080012fc <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80012fc:	6840      	ldr	r0, [r0, #4]
 80012fe:	6803      	ldr	r3, [r0, #0]
 8001300:	699b      	ldr	r3, [r3, #24]
 8001302:	4718      	bx	r3

08001304 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001304:	4770      	bx	lr

08001306 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001306:	4770      	bx	lr

08001308 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001308:	4770      	bx	lr
	...

0800130c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 800130c:	b510      	push	{r4, lr}
 800130e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001310:	f000 fd44 	bl	8001d9c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001314:	6823      	ldr	r3, [r4, #0]
 8001316:	4903      	ldr	r1, [pc, #12]	@ (8001324 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001318:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800131c:	4620      	mov	r0, r4
}
 800131e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001322:	4718      	bx	r3
 8001324:	d0000000 	.word	0xd0000000

08001328 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001328:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800132a:	6803      	ldr	r3, [r0, #0]
{
 800132c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800132e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001332:	4798      	blx	r3
    enableInterrupts();
 8001334:	6823      	ldr	r3, [r4, #0]
 8001336:	4620      	mov	r0, r4
 8001338:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800133a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800133c:	f000 f8ec 	bl	8001518 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001340:	6823      	ldr	r3, [r4, #0]
 8001342:	4620      	mov	r0, r4
 8001344:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001346:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001348:	2029      	movs	r0, #41	@ 0x29
 800134a:	f001 fa43 	bl	80027d4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800134e:	f000 f8e3 	bl	8001518 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001352:	6823      	ldr	r3, [r4, #0]
 8001354:	4620      	mov	r0, r4
 8001356:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001358:	4798      	blx	r3
    for (;;)
 800135a:	e7f8      	b.n	800134e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800135c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800135c:	b510      	push	{r4, lr}
 800135e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001360:	f00f ff48 	bl	80111f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001364:	6823      	ldr	r3, [r4, #0]
 8001366:	4620      	mov	r0, r4
 8001368:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001370:	4718      	bx	r3

08001372 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001372:	f000 bcf7 	b.w	8001d64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001376 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001376:	f000 bcfb 	b.w	8001d70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800137a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800137a:	f000 bd2d 	b.w	8001dd8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800137e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800137e:	f000 bccd 	b.w	8001d1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001382 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001382:	f000 bd3d 	b.w	8001e00 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001386 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001386:	f000 bd45 	b.w	8001e14 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800138a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800138a:	f000 bcd1 	b.w	8001d30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800138e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800138e:	f00f b99d 	b.w	80106cc <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001392 <_ZN11TouchGFXHALD0Ev>:
 8001392:	b510      	push	{r4, lr}
 8001394:	217c      	movs	r1, #124	@ 0x7c
 8001396:	4604      	mov	r4, r0
 8001398:	f028 fca6 	bl	8029ce8 <_ZdlPvj>
 800139c:	4620      	mov	r0, r4
 800139e:	bd10      	pop	{r4, pc}

080013a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80013a0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80013a2:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 80013a6:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 80013aa:	4b0c      	ldr	r3, [pc, #48]	@ (80013dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80013ac:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80013ae:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80013b0:	d009      	beq.n	80013c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80013b2:	b93a      	cbnz	r2, 80013c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013b4:	4a0a      	ldr	r2, [pc, #40]	@ (80013e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80013b6:	490b      	ldr	r1, [pc, #44]	@ (80013e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013b8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80013ba:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80013bc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013be:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80013c0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80013c2:	701a      	strb	r2, [r3, #0]
    }
 80013c4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80013c6:	2a00      	cmp	r2, #0
 80013c8:	d0fc      	beq.n	80013c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013ca:	4a05      	ldr	r2, [pc, #20]	@ (80013e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80013cc:	4905      	ldr	r1, [pc, #20]	@ (80013e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013ce:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80013d0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80013d2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80013d4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80013d6:	2200      	movs	r2, #0
 80013d8:	e7f3      	b.n	80013c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80013da:	bf00      	nop
 80013dc:	20013f58 	.word	0x20013f58
 80013e0:	20013f54 	.word	0x20013f54
 80013e4:	20013f56 	.word	0x20013f56

080013e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80013e8:	b570      	push	{r4, r5, r6, lr}
 80013ea:	460d      	mov	r5, r1
 80013ec:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80013ee:	b935      	cbnz	r5, 80013fe <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80013f0:	4b09      	ldr	r3, [pc, #36]	@ (8001418 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80013f2:	4a0a      	ldr	r2, [pc, #40]	@ (800141c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80013f4:	480a      	ldr	r0, [pc, #40]	@ (8001420 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80013f6:	f240 21d2 	movw	r1, #722	@ 0x2d2
 80013fa:	f029 fcb3 	bl	802ad64 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80013fe:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001402:	4b08      	ldr	r3, [pc, #32]	@ (8001424 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001404:	3a00      	subs	r2, #0
 8001406:	bf18      	it	ne
 8001408:	2201      	movne	r2, #1
 800140a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800140c:	6803      	ldr	r3, [r0, #0]
    }
 800140e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001412:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8001416:	4718      	bx	r3
 8001418:	0802be58 	.word	0x0802be58
 800141c:	0802be90 	.word	0x0802be90
 8001420:	0802bede 	.word	0x0802bede
 8001424:	20013f5e 	.word	0x20013f5e

08001428 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001428:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800142a:	4b09      	ldr	r3, [pc, #36]	@ (8001450 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800142c:	881b      	ldrh	r3, [r3, #0]
 800142e:	428b      	cmp	r3, r1
 8001430:	d803      	bhi.n	800143a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001432:	4b08      	ldr	r3, [pc, #32]	@ (8001454 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001434:	881b      	ldrh	r3, [r3, #0]
 8001436:	4293      	cmp	r3, r2
 8001438:	d905      	bls.n	8001446 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800143a:	4b07      	ldr	r3, [pc, #28]	@ (8001458 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800143c:	4a07      	ldr	r2, [pc, #28]	@ (800145c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800143e:	4808      	ldr	r0, [pc, #32]	@ (8001460 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001440:	219e      	movs	r1, #158	@ 0x9e
 8001442:	f029 fc8f 	bl	802ad64 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001446:	4b07      	ldr	r3, [pc, #28]	@ (8001464 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001448:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800144a:	4b07      	ldr	r3, [pc, #28]	@ (8001468 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800144c:	801a      	strh	r2, [r3, #0]
    }
 800144e:	bd08      	pop	{r3, pc}
 8001450:	20013f54 	.word	0x20013f54
 8001454:	20013f56 	.word	0x20013f56
 8001458:	0802bf23 	.word	0x0802bf23
 800145c:	0802bf86 	.word	0x0802bf86
 8001460:	0802bede 	.word	0x0802bede
 8001464:	20013f5a 	.word	0x20013f5a
 8001468:	20013f5c 	.word	0x20013f5c

0800146c <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800146c:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 800146e:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8001472:	b118      	cbz	r0, 800147c <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8001474:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8001476:	6803      	ldr	r3, [r0, #0]
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	4718      	bx	r3
    }
 800147c:	4770      	bx	lr
	...

08001480 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001480:	2101      	movs	r1, #1
{
 8001482:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001484:	2200      	movs	r2, #0
 8001486:	4608      	mov	r0, r1
 8001488:	f00c fe16 	bl	800e0b8 <osSemaphoreNew>
 800148c:	4b0a      	ldr	r3, [pc, #40]	@ (80014b8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800148e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001490:	b928      	cbnz	r0, 800149e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001492:	4b0a      	ldr	r3, [pc, #40]	@ (80014bc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001494:	4a0a      	ldr	r2, [pc, #40]	@ (80014c0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001496:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001498:	480a      	ldr	r0, [pc, #40]	@ (80014c4 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800149a:	f029 fc63 	bl	802ad64 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800149e:	2200      	movs	r2, #0
 80014a0:	2104      	movs	r1, #4
 80014a2:	2001      	movs	r0, #1
 80014a4:	f00c fea7 	bl	800e1f6 <osMessageQueueNew>
 80014a8:	4b07      	ldr	r3, [pc, #28]	@ (80014c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80014aa:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014ac:	b918      	cbnz	r0, 80014b6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80014ae:	4b07      	ldr	r3, [pc, #28]	@ (80014cc <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80014b0:	4a03      	ldr	r2, [pc, #12]	@ (80014c0 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014b2:	212c      	movs	r1, #44	@ 0x2c
 80014b4:	e7f0      	b.n	8001498 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80014b6:	bd08      	pop	{r3, pc}
 80014b8:	200003c0 	.word	0x200003c0
 80014bc:	0802bfc9 	.word	0x0802bfc9
 80014c0:	0802c012 	.word	0x0802c012
 80014c4:	0802c041 	.word	0x0802c041
 80014c8:	200003bc 	.word	0x200003bc
 80014cc:	0802c07f 	.word	0x0802c07f

080014d0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80014d0:	4b02      	ldr	r3, [pc, #8]	@ (80014dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80014d2:	f04f 31ff 	mov.w	r1, #4294967295
 80014d6:	6818      	ldr	r0, [r3, #0]
 80014d8:	f00c be38 	b.w	800e14c <osSemaphoreAcquire>
 80014dc:	200003c0 	.word	0x200003c0

080014e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80014e0:	4b01      	ldr	r3, [pc, #4]	@ (80014e8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80014e2:	6818      	ldr	r0, [r3, #0]
 80014e4:	f00c be5e 	b.w	800e1a4 <osSemaphoreRelease>
 80014e8:	200003c0 	.word	0x200003c0

080014ec <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80014ec:	4b02      	ldr	r3, [pc, #8]	@ (80014f8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80014ee:	2100      	movs	r1, #0
 80014f0:	6818      	ldr	r0, [r3, #0]
 80014f2:	f00c be2b 	b.w	800e14c <osSemaphoreAcquire>
 80014f6:	bf00      	nop
 80014f8:	200003c0 	.word	0x200003c0

080014fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 80014fc:	f7ff bff0 	b.w	80014e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001500 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001500:	4803      	ldr	r0, [pc, #12]	@ (8001510 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001502:	4904      	ldr	r1, [pc, #16]	@ (8001514 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001504:	6800      	ldr	r0, [r0, #0]
 8001506:	2300      	movs	r3, #0
 8001508:	461a      	mov	r2, r3
 800150a:	f00c beaf 	b.w	800e26c <osMessageQueuePut>
 800150e:	bf00      	nop
 8001510:	200003bc 	.word	0x200003bc
 8001514:	20000004 	.word	0x20000004

08001518 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001518:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800151a:	4c08      	ldr	r4, [pc, #32]	@ (800153c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800151c:	2300      	movs	r3, #0
 800151e:	461a      	mov	r2, r3
 8001520:	a901      	add	r1, sp, #4
 8001522:	6820      	ldr	r0, [r4, #0]
 8001524:	f00c fed3 	bl	800e2ce <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001528:	6820      	ldr	r0, [r4, #0]
 800152a:	f04f 33ff 	mov.w	r3, #4294967295
 800152e:	2200      	movs	r2, #0
 8001530:	a901      	add	r1, sp, #4
 8001532:	f00c fecc 	bl	800e2ce <osMessageQueueGet>
}
 8001536:	b002      	add	sp, #8
 8001538:	bd10      	pop	{r4, pc}
 800153a:	bf00      	nop
 800153c:	200003bc 	.word	0x200003bc

08001540 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001540:	6803      	ldr	r3, [r0, #0]
 8001542:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001544:	4718      	bx	r3

08001546 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001546:	2001      	movs	r0, #1
 8001548:	4770      	bx	lr

0800154a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800154a:	6803      	ldr	r3, [r0, #0]
 800154c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800154e:	4718      	bx	r3

08001550 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8001550:	e7fe      	b.n	8001550 <DMA2D_XferErrorCallback>

08001552 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001552:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8001556:	4770      	bx	lr

08001558 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001558:	4b05      	ldr	r3, [pc, #20]	@ (8001570 <_ZN8STM32DMAD1Ev+0x18>)
 800155a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800155c:	4b05      	ldr	r3, [pc, #20]	@ (8001574 <_ZN8STM32DMAD1Ev+0x1c>)
 800155e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001562:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001566:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800156a:	f3bf 8f6f 	isb	sy
}
 800156e:	4770      	bx	lr
 8001570:	0802d224 	.word	0x0802d224
 8001574:	e000e100 	.word	0xe000e100

08001578 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001578:	b510      	push	{r4, lr}
 800157a:	4604      	mov	r4, r0
}
 800157c:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8001580:	f7ff ffea 	bl	8001558 <_ZN8STM32DMAD1Ev>
 8001584:	4620      	mov	r0, r4
 8001586:	f028 fbaf 	bl	8029ce8 <_ZdlPvj>
 800158a:	4620      	mov	r0, r4
 800158c:	bd10      	pop	{r4, pc}
	...

08001590 <_ZN8STM32DMA10initializeEv>:
{
 8001590:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001592:	2300      	movs	r3, #0
 8001594:	9301      	str	r3, [sp, #4]
 8001596:	4b0e      	ldr	r3, [pc, #56]	@ (80015d0 <_ZN8STM32DMA10initializeEv+0x40>)
 8001598:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800159a:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800159e:	631a      	str	r2, [r3, #48]	@ 0x30
 80015a0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80015a2:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 80015a6:	9201      	str	r2, [sp, #4]
 80015a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80015aa:	691a      	ldr	r2, [r3, #16]
 80015ac:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80015b0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80015b2:	691a      	ldr	r2, [r3, #16]
 80015b4:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 80015b8:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80015ba:	4b06      	ldr	r3, [pc, #24]	@ (80015d4 <_ZN8STM32DMA10initializeEv+0x44>)
 80015bc:	4a06      	ldr	r2, [pc, #24]	@ (80015d8 <_ZN8STM32DMA10initializeEv+0x48>)
 80015be:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 80015c0:	4a06      	ldr	r2, [pc, #24]	@ (80015dc <_ZN8STM32DMA10initializeEv+0x4c>)
 80015c2:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015c4:	4b06      	ldr	r3, [pc, #24]	@ (80015e0 <_ZN8STM32DMA10initializeEv+0x50>)
 80015c6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80015ca:	609a      	str	r2, [r3, #8]
}
 80015cc:	b002      	add	sp, #8
 80015ce:	4770      	bx	lr
 80015d0:	40023800 	.word	0x40023800
 80015d4:	20002fe0 	.word	0x20002fe0
 80015d8:	08001831 	.word	0x08001831
 80015dc:	08001551 	.word	0x08001551
 80015e0:	e000e100 	.word	0xe000e100

080015e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 80015e4:	b508      	push	{r3, lr}
    switch (format)
 80015e6:	280a      	cmp	r0, #10
 80015e8:	d809      	bhi.n	80015fe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 80015ea:	e8df f000 	tbb	[pc, r0]
 80015ee:	1006      	.short	0x1006
 80015f0:	0808080e 	.word	0x0808080e
 80015f4:	10101008 	.word	0x10101008
 80015f8:	10          	.byte	0x10
 80015f9:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80015fa:	2002      	movs	r0, #2
}
 80015fc:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80015fe:	4b05      	ldr	r3, [pc, #20]	@ (8001614 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8001600:	4a05      	ldr	r2, [pc, #20]	@ (8001618 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8001602:	4806      	ldr	r0, [pc, #24]	@ (800161c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8001604:	2190      	movs	r1, #144	@ 0x90
 8001606:	f029 fbad 	bl	802ad64 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800160a:	2000      	movs	r0, #0
 800160c:	e7f6      	b.n	80015fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 800160e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8001610:	e7f4      	b.n	80015fc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8001612:	bf00      	nop
 8001614:	0802c0c1 	.word	0x0802c0c1
 8001618:	0802c0dc 	.word	0x0802c0dc
 800161c:	0802c127 	.word	0x0802c127

08001620 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001620:	b538      	push	{r3, r4, r5, lr}
 8001622:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001624:	7f88      	ldrb	r0, [r1, #30]
 8001626:	f7ff ffdd 	bl	80015e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800162a:	8aa5      	ldrh	r5, [r4, #20]
 800162c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800162e:	4b16      	ldr	r3, [pc, #88]	@ (8001688 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001630:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001632:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001634:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8001638:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800163a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800163c:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800163e:	1b52      	subs	r2, r2, r5
 8001640:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001642:	6825      	ldr	r5, [r4, #0]
 8001644:	2d08      	cmp	r5, #8
 8001646:	d10e      	bne.n	8001666 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001648:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800164a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800164c:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800164e:	7f20      	ldrb	r0, [r4, #28]
 8001650:	4a0e      	ldr	r2, [pc, #56]	@ (800168c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001652:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001656:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001658:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800165a:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 800165c:	4a0c      	ldr	r2, [pc, #48]	@ (8001690 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800165e:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001660:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001662:	601a      	str	r2, [r3, #0]
    }
}
 8001664:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001666:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001668:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800166a:	611a      	str	r2, [r3, #16]
 800166c:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800166e:	0a0a      	lsrs	r2, r1, #8
 8001670:	0948      	lsrs	r0, r1, #5
 8001672:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8001676:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800167a:	4302      	orrs	r2, r0
 800167c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001680:	430a      	orrs	r2, r1
 8001682:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8001684:	4a03      	ldr	r2, [pc, #12]	@ (8001694 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001686:	e7ec      	b.n	8001662 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001688:	4002b000 	.word	0x4002b000
 800168c:	00010009 	.word	0x00010009
 8001690:	00022301 	.word	0x00022301
 8001694:	00032301 	.word	0x00032301

08001698 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8001698:	b508      	push	{r3, lr}
    switch (format)
 800169a:	280b      	cmp	r0, #11
 800169c:	d80b      	bhi.n	80016b6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 800169e:	e8df f000 	tbb	[pc, r0]
 80016a2:	1206      	.short	0x1206
 80016a4:	0a0a0a10 	.word	0x0a0a0a10
 80016a8:	0808080a 	.word	0x0808080a
 80016ac:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80016ae:	2002      	movs	r0, #2
}
 80016b0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80016b2:	2005      	movs	r0, #5
        break;
 80016b4:	e7fc      	b.n	80016b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 80016b6:	4b05      	ldr	r3, [pc, #20]	@ (80016cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 80016b8:	4a05      	ldr	r2, [pc, #20]	@ (80016d0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 80016ba:	4806      	ldr	r0, [pc, #24]	@ (80016d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 80016bc:	216f      	movs	r1, #111	@ 0x6f
 80016be:	f029 fb51 	bl	802ad64 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80016c2:	2000      	movs	r0, #0
 80016c4:	e7f4      	b.n	80016b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 80016c6:	2001      	movs	r0, #1
    return dma2dColorMode;
 80016c8:	e7f2      	b.n	80016b0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 80016ca:	bf00      	nop
 80016cc:	0802c0c1 	.word	0x0802c0c1
 80016d0:	0802c163 	.word	0x0802c163
 80016d4:	0802c127 	.word	0x0802c127

080016d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 80016d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016dc:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 80016e0:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016e2:	4640      	mov	r0, r8
 80016e4:	f7ff ffd8 	bl	8001698 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016e8:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016ea:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016ec:	4638      	mov	r0, r7
 80016ee:	f7ff ffd3 	bl	8001698 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 80016f2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016f4:	4638      	mov	r0, r7
 80016f6:	f7ff ff75 	bl	80015e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80016fa:	8aa1      	ldrh	r1, [r4, #20]
 80016fc:	8b62      	ldrh	r2, [r4, #26]
 80016fe:	4b44      	ldr	r3, [pc, #272]	@ (8001810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001700:	1a52      	subs	r2, r2, r1
 8001702:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001704:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001706:	8b22      	ldrh	r2, [r4, #24]
 8001708:	1a52      	subs	r2, r2, r1
 800170a:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800170c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800170e:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001710:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001714:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001716:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001718:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800171a:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800171c:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 800171e:	6820      	ldr	r0, [r4, #0]
 8001720:	2880      	cmp	r0, #128	@ 0x80
 8001722:	d028      	beq.n	8001776 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8001724:	7f22      	ldrb	r2, [r4, #28]
 8001726:	d80f      	bhi.n	8001748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8001728:	2820      	cmp	r0, #32
 800172a:	d067      	beq.n	80017fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800172c:	2840      	cmp	r0, #64	@ 0x40
 800172e:	d065      	beq.n	80017fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8001730:	2804      	cmp	r0, #4
 8001732:	d01a      	beq.n	800176a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001734:	4b36      	ldr	r3, [pc, #216]	@ (8001810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001736:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800173a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 800173e:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001740:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001742:	d061      	beq.n	8001808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001744:	4a33      	ldr	r2, [pc, #204]	@ (8001814 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001746:	e044      	b.n	80017d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8001748:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 800174c:	d004      	beq.n	8001758 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 800174e:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8001752:	d1ef      	bne.n	8001734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001754:	4830      	ldr	r0, [pc, #192]	@ (8001818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001756:	e000      	b.n	800175a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001758:	4830      	ldr	r0, [pc, #192]	@ (800181c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800175a:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 800175e:	61da      	str	r2, [r3, #28]
 8001760:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001762:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001764:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001766:	6159      	str	r1, [r3, #20]
 8001768:	e032      	b.n	80017d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800176a:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 800176e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001772:	61da      	str	r2, [r3, #28]
 8001774:	e7f6      	b.n	8001764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001776:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001778:	1d02      	adds	r2, r0, #4
 800177a:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800177c:	7f22      	ldrb	r2, [r4, #28]
 800177e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001782:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8001786:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001788:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800178a:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800178c:	7801      	ldrb	r1, [r0, #0]
 800178e:	b141      	cbz	r1, 80017a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8001790:	2901      	cmp	r1, #1
 8001792:	d021      	beq.n	80017d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8001794:	4b22      	ldr	r3, [pc, #136]	@ (8001820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001796:	4a23      	ldr	r2, [pc, #140]	@ (8001824 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8001798:	4823      	ldr	r0, [pc, #140]	@ (8001828 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 800179a:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 800179e:	f029 fae1 	bl	802ad64 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017a2:	69da      	ldr	r2, [r3, #28]
 80017a4:	8841      	ldrh	r1, [r0, #2]
 80017a6:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80017aa:	3901      	subs	r1, #1
 80017ac:	f022 0210 	bic.w	r2, r2, #16
 80017b0:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80017b4:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80017b6:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80017b8:	4b15      	ldr	r3, [pc, #84]	@ (8001810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80017ba:	69da      	ldr	r2, [r3, #28]
 80017bc:	f042 0220 	orr.w	r2, r2, #32
 80017c0:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80017c2:	69da      	ldr	r2, [r3, #28]
 80017c4:	0692      	lsls	r2, r2, #26
 80017c6:	d4fc      	bmi.n	80017c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80017c8:	2210      	movs	r2, #16
 80017ca:	609a      	str	r2, [r3, #8]
            if (blend)
 80017cc:	2900      	cmp	r1, #0
 80017ce:	d0b9      	beq.n	8001744 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80017d0:	4a16      	ldr	r2, [pc, #88]	@ (800182c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80017d2:	601a      	str	r2, [r3, #0]
}
 80017d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 80017d8:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017dc:	69da      	ldr	r2, [r3, #28]
 80017de:	8840      	ldrh	r0, [r0, #2]
 80017e0:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 80017e4:	f100 30ff 	add.w	r0, r0, #4294967295
 80017e8:	f022 0210 	bic.w	r2, r2, #16
 80017ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80017f0:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80017f4:	bf18      	it	ne
 80017f6:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017f8:	61da      	str	r2, [r3, #28]
                break;
 80017fa:	e7dd      	b.n	80017b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80017fc:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001800:	4b03      	ldr	r3, [pc, #12]	@ (8001810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001802:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8001806:	e7b4      	b.n	8001772 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8001808:	f242 3201 	movw	r2, #8961	@ 0x2301
 800180c:	e7e1      	b.n	80017d2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800180e:	bf00      	nop
 8001810:	4002b000 	.word	0x4002b000
 8001814:	00012301 	.word	0x00012301
 8001818:	00020009 	.word	0x00020009
 800181c:	0002000a 	.word	0x0002000a
 8001820:	0802c1ad 	.word	0x0802c1ad
 8001824:	0802c1c7 	.word	0x0802c1c7
 8001828:	0802c127 	.word	0x0802c127
 800182c:	00022301 	.word	0x00022301

08001830 <DMA2D_XferCpltCallback>:
        return instance;
 8001830:	4b02      	ldr	r3, [pc, #8]	@ (800183c <DMA2D_XferCpltCallback+0xc>)
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001836:	6803      	ldr	r3, [r0, #0]
 8001838:	695b      	ldr	r3, [r3, #20]
 800183a:	4718      	bx	r3
 800183c:	20013f60 	.word	0x20013f60

08001840 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001840:	b570      	push	{r4, r5, r6, lr}
 8001842:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001844:	4625      	mov	r5, r4
 8001846:	4b0a      	ldr	r3, [pc, #40]	@ (8001870 <_ZN8STM32DMAC1Ev+0x30>)
 8001848:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800184a:	2600      	movs	r6, #0
 800184c:	6060      	str	r0, [r4, #4]
 800184e:	7226      	strb	r6, [r4, #8]
 8001850:	7266      	strb	r6, [r4, #9]
 8001852:	f845 3b20 	str.w	r3, [r5], #32
 8001856:	2260      	movs	r2, #96	@ 0x60
 8001858:	4629      	mov	r1, r5
 800185a:	f00f fe23 	bl	80114a4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800185e:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8001862:	60ee      	str	r6, [r5, #12]
 8001864:	3524      	adds	r5, #36	@ 0x24
 8001866:	429d      	cmp	r5, r3
 8001868:	d1fb      	bne.n	8001862 <_ZN8STM32DMAC1Ev+0x22>
}
 800186a:	4620      	mov	r0, r4
 800186c:	bd70      	pop	{r4, r5, r6, pc}
 800186e:	bf00      	nop
 8001870:	0802d224 	.word	0x0802d224

08001874 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001874:	4b03      	ldr	r3, [pc, #12]	@ (8001884 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8001876:	681a      	ldr	r2, [r3, #0]
 8001878:	07d2      	lsls	r2, r2, #31
 800187a:	d4fc      	bmi.n	8001876 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800187c:	2223      	movs	r2, #35	@ 0x23
 800187e:	609a      	str	r2, [r3, #8]
}
 8001880:	4770      	bx	lr
 8001882:	bf00      	nop
 8001884:	4002b000 	.word	0x4002b000

08001888 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8001888:	4770      	bx	lr
	...

0800188c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800188c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800188e:	4c0f      	ldr	r4, [pc, #60]	@ (80018cc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001890:	6825      	ldr	r5, [r4, #0]
 8001892:	07ed      	lsls	r5, r5, #31
 8001894:	d4fc      	bmi.n	8001890 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001896:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001898:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800189a:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800189c:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018a0:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 80018a2:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018a4:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018a6:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80018a8:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 80018aa:	d00a      	beq.n	80018c2 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018ac:	4908      	ldr	r1, [pc, #32]	@ (80018d0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018ae:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018b0:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 80018b4:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 80018b6:	4b07      	ldr	r3, [pc, #28]	@ (80018d4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 80018b8:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 80018ba:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 80018bc:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80018be:	6023      	str	r3, [r4, #0]
    }
}
 80018c0:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80018c2:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 80018c4:	9b03      	ldr	r3, [sp, #12]
 80018c6:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80018c8:	4b03      	ldr	r3, [pc, #12]	@ (80018d8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 80018ca:	e7f8      	b.n	80018be <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 80018cc:	4002b000 	.word	0x4002b000
 80018d0:	00010009 	.word	0x00010009
 80018d4:	00020001 	.word	0x00020001
 80018d8:	00030001 	.word	0x00030001

080018dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 80018dc:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80018de:	4c0e      	ldr	r4, [pc, #56]	@ (8001918 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 80018e0:	6825      	ldr	r5, [r4, #0]
 80018e2:	07ed      	lsls	r5, r5, #31
 80018e4:	d4fc      	bmi.n	80018e0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018e6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018e8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018ea:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018ec:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018f0:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 80018f2:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018f4:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018f6:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80018f8:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80018fa:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 80018fc:	d008      	beq.n	8001910 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80018fe:	061b      	lsls	r3, r3, #24
 8001900:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8001904:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001906:	4b05      	ldr	r3, [pc, #20]	@ (800191c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001908:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800190a:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800190c:	6023      	str	r3, [r4, #0]
    }
}
 800190e:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001910:	4b03      	ldr	r3, [pc, #12]	@ (8001920 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8001912:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8001914:	2301      	movs	r3, #1
 8001916:	e7f9      	b.n	800190c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8001918:	4002b000 	.word	0x4002b000
 800191c:	00020001 	.word	0x00020001
 8001920:	ff020002 	.word	0xff020002

08001924 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8001924:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001926:	4c0b      	ldr	r4, [pc, #44]	@ (8001954 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8001928:	6825      	ldr	r5, [r4, #0]
 800192a:	07ed      	lsls	r5, r5, #31
 800192c:	d4fc      	bmi.n	8001928 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800192e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001930:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001932:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001934:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001936:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800193a:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800193c:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001940:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001942:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001944:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8001946:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001948:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800194a:	4b03      	ldr	r3, [pc, #12]	@ (8001958 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800194c:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800194e:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001950:	6023      	str	r3, [r4, #0]
}
 8001952:	bd30      	pop	{r4, r5, pc}
 8001954:	4002b000 	.word	0x4002b000
 8001958:	00020001 	.word	0x00020001

0800195c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 800195c:	2001      	movs	r0, #1
 800195e:	4770      	bx	lr

08001960 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001960:	2038      	movs	r0, #56	@ 0x38
 8001962:	4770      	bx	lr

08001964 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001964:	2338      	movs	r3, #56	@ 0x38
 8001966:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800196a:	3008      	adds	r0, #8
 800196c:	4770      	bx	lr

0800196e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800196e:	2338      	movs	r3, #56	@ 0x38
 8001970:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001974:	3008      	adds	r0, #8
 8001976:	4770      	bx	lr

08001978 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001978:	2001      	movs	r0, #1
 800197a:	4770      	bx	lr

0800197c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800197c:	f641 007c 	movw	r0, #6268	@ 0x187c
 8001980:	4770      	bx	lr

08001982 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001982:	f641 037c 	movw	r3, #6268	@ 0x187c
 8001986:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800198a:	3008      	adds	r0, #8
 800198c:	4770      	bx	lr

0800198e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800198e:	f641 037c 	movw	r3, #6268	@ 0x187c
 8001992:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001996:	3008      	adds	r0, #8
 8001998:	4770      	bx	lr

0800199a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800199a:	2001      	movs	r0, #1
 800199c:	4770      	bx	lr

0800199e <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800199e:	2010      	movs	r0, #16
 80019a0:	4770      	bx	lr

080019a2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019a2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80019a6:	3008      	adds	r0, #8
 80019a8:	4770      	bx	lr

080019aa <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80019aa:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80019ae:	3008      	adds	r0, #8
 80019b0:	4770      	bx	lr

080019b2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
 80019b2:	4608      	mov	r0, r1
 80019b4:	f002 bbb0 	b.w	8004118 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>

080019b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80019b8:	b510      	push	{r4, lr}
 80019ba:	4b03      	ldr	r3, [pc, #12]	@ (80019c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80019bc:	6003      	str	r3, [r0, #0]
 80019be:	4604      	mov	r4, r0
 80019c0:	f00e fbd9 	bl	8010176 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019c4:	4620      	mov	r0, r4
 80019c6:	bd10      	pop	{r4, pc}
 80019c8:	0802d2dc 	.word	0x0802d2dc

080019cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80019cc:	b510      	push	{r4, lr}
 80019ce:	4604      	mov	r4, r0
 80019d0:	f7ff fff2 	bl	80019b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80019d4:	4620      	mov	r0, r4
 80019d6:	2140      	movs	r1, #64	@ 0x40
 80019d8:	f028 f986 	bl	8029ce8 <_ZdlPvj>
 80019dc:	4620      	mov	r0, r4
 80019de:	bd10      	pop	{r4, pc}

080019e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80019e0:	b510      	push	{r4, lr}
 80019e2:	4b03      	ldr	r3, [pc, #12]	@ (80019f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80019e4:	6003      	str	r3, [r0, #0]
 80019e6:	4604      	mov	r4, r0
 80019e8:	f00e fbc5 	bl	8010176 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019ec:	4620      	mov	r0, r4
 80019ee:	bd10      	pop	{r4, pc}
 80019f0:	0802d2a8 	.word	0x0802d2a8

080019f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80019f4:	b510      	push	{r4, lr}
 80019f6:	4604      	mov	r4, r0
 80019f8:	f7ff fff2 	bl	80019e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019fc:	4620      	mov	r0, r4
 80019fe:	f641 0184 	movw	r1, #6276	@ 0x1884
 8001a02:	f028 f971 	bl	8029ce8 <_ZdlPvj>
 8001a06:	4620      	mov	r0, r4
 8001a08:	bd10      	pop	{r4, pc}
	...

08001a0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a0c:	b510      	push	{r4, lr}
 8001a0e:	4b03      	ldr	r3, [pc, #12]	@ (8001a1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a10:	6003      	str	r3, [r0, #0]
 8001a12:	4604      	mov	r4, r0
 8001a14:	f00e fbaf 	bl	8010176 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a18:	4620      	mov	r0, r4
 8001a1a:	bd10      	pop	{r4, pc}
 8001a1c:	0802d274 	.word	0x0802d274

08001a20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a20:	b510      	push	{r4, lr}
 8001a22:	4604      	mov	r4, r0
 8001a24:	f7ff fff2 	bl	8001a0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a28:	4620      	mov	r0, r4
 8001a2a:	2118      	movs	r1, #24
 8001a2c:	f028 f95c 	bl	8029ce8 <_ZdlPvj>
 8001a30:	4620      	mov	r0, r4
 8001a32:	bd10      	pop	{r4, pc}

08001a34 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001a34:	b510      	push	{r4, lr}
 8001a36:	4b09      	ldr	r3, [pc, #36]	@ (8001a5c <_ZN12FrontendHeapD1Ev+0x28>)
 8001a38:	6003      	str	r3, [r0, #0]
 8001a3a:	4604      	mov	r4, r0
 8001a3c:	f500 50c5 	add.w	r0, r0, #6304	@ 0x18a0
 8001a40:	3010      	adds	r0, #16
 8001a42:	f7ff ffb9 	bl	80019b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001a46:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001a4a:	f7ff ffc9 	bl	80019e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15StartScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a4e:	f104 0014 	add.w	r0, r4, #20
 8001a52:	f7ff ffdb 	bl	8001a0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI18EndScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a56:	4620      	mov	r0, r4
 8001a58:	bd10      	pop	{r4, pc}
 8001a5a:	bf00      	nop
 8001a5c:	0802d310 	.word	0x0802d310

08001a60 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001a60:	b508      	push	{r3, lr}
 8001a62:	4802      	ldr	r0, [pc, #8]	@ (8001a6c <__tcf_0+0xc>)
 8001a64:	f7ff ffe6 	bl	8001a34 <_ZN12FrontendHeapD1Ev>
 8001a68:	bd08      	pop	{r3, pc}
 8001a6a:	bf00      	nop
 8001a6c:	20001294 	.word	0x20001294

08001a70 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001a70:	b510      	push	{r4, lr}
 8001a72:	4604      	mov	r4, r0
 8001a74:	f7ff ffde 	bl	8001a34 <_ZN12FrontendHeapD1Ev>
 8001a78:	4620      	mov	r0, r4
 8001a7a:	f44f 51d3 	mov.w	r1, #6752	@ 0x1a60
 8001a7e:	f028 f933 	bl	8029ce8 <_ZdlPvj>
 8001a82:	4620      	mov	r0, r4
 8001a84:	bd10      	pop	{r4, pc}
	...

08001a88 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001a88:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001a8c:	f001 fa1c 	bl	8002ec8 <_ZN14BitmapDatabase11getInstanceEv>
 8001a90:	4605      	mov	r5, r0
 8001a92:	f001 fa1d 	bl	8002ed0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001a96:	2400      	movs	r4, #0
 8001a98:	4601      	mov	r1, r0
 8001a9a:	4623      	mov	r3, r4
 8001a9c:	4628      	mov	r0, r5
 8001a9e:	4622      	mov	r2, r4
 8001aa0:	9400      	str	r4, [sp, #0]
 8001aa2:	f019 f8c5 	bl	801ac30 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001aa6:	4b27      	ldr	r3, [pc, #156]	@ (8001b44 <touchgfx_init+0xbc>)
 8001aa8:	4a27      	ldr	r2, [pc, #156]	@ (8001b48 <touchgfx_init+0xc0>)
 8001aaa:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001aac:	4620      	mov	r0, r4
 8001aae:	f005 fc59 	bl	8007364 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001ab2:	4d26      	ldr	r5, [pc, #152]	@ (8001b4c <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001ab4:	4b26      	ldr	r3, [pc, #152]	@ (8001b50 <touchgfx_init+0xc8>)
 8001ab6:	4a27      	ldr	r2, [pc, #156]	@ (8001b54 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001ab8:	4827      	ldr	r0, [pc, #156]	@ (8001b58 <touchgfx_init+0xd0>)
 8001aba:	609a      	str	r2, [r3, #8]
 8001abc:	f019 f820 	bl	801ab00 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001ac0:	682b      	ldr	r3, [r5, #0]
 8001ac2:	f3bf 8f5b 	dmb	ish
 8001ac6:	07db      	lsls	r3, r3, #31
 8001ac8:	d436      	bmi.n	8001b38 <touchgfx_init+0xb0>
 8001aca:	4628      	mov	r0, r5
 8001acc:	f028 f90e 	bl	8029cec <__cxa_guard_acquire>
 8001ad0:	b390      	cbz	r0, 8001b38 <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001ad2:	4c22      	ldr	r4, [pc, #136]	@ (8001b5c <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 8001ad4:	4f22      	ldr	r7, [pc, #136]	@ (8001b60 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001ad6:	4b23      	ldr	r3, [pc, #140]	@ (8001b64 <touchgfx_init+0xdc>)
 8001ad8:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8001ada:	f107 0654 	add.w	r6, r7, #84	@ 0x54
        : presenterStorage(pres),
 8001ade:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001ae2:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 8001ae6:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001ae8:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001aec:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001aee:	6126      	str	r6, [r4, #16]
 8001af0:	f00e fb42 	bl	8010178 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001af4:	4b1c      	ldr	r3, [pc, #112]	@ (8001b68 <touchgfx_init+0xe0>)
 8001af6:	6163      	str	r3, [r4, #20]
 8001af8:	4640      	mov	r0, r8
 8001afa:	f00e fb3d 	bl	8010178 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001afe:	4b1b      	ldr	r3, [pc, #108]	@ (8001b6c <touchgfx_init+0xe4>)
 8001b00:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001b02:	4638      	mov	r0, r7
 8001b04:	f00e fb38 	bl	8010178 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b08:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8001b0c:	f503 600f 	add.w	r0, r3, #2288	@ 0x8f0
 8001b10:	4a17      	ldr	r2, [pc, #92]	@ (8001b70 <touchgfx_init+0xe8>)
 8001b12:	f8c3 28b0 	str.w	r2, [r3, #2224]	@ 0x8b0
 8001b16:	f009 f8a1 	bl	800ac5c <_ZN5ModelC1Ev>
 8001b1a:	4622      	mov	r2, r4
 8001b1c:	f107 0140 	add.w	r1, r7, #64	@ 0x40
 8001b20:	4630      	mov	r0, r6
 8001b22:	f006 fd39 	bl	8008598 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001b26:	4630      	mov	r0, r6
 8001b28:	f002 faf6 	bl	8004118 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001b2c:	4811      	ldr	r0, [pc, #68]	@ (8001b74 <touchgfx_init+0xec>)
 8001b2e:	f029 f937 	bl	802ada0 <atexit>
 8001b32:	4628      	mov	r0, r5
 8001b34:	f028 f8e6 	bl	8029d04 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001b38:	480f      	ldr	r0, [pc, #60]	@ (8001b78 <touchgfx_init+0xf0>)
}
 8001b3a:	b002      	add	sp, #8
 8001b3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001b40:	f7ff bbe4 	b.w	800130c <_ZN11TouchGFXHAL10initializeEv>
 8001b44:	20013fc4 	.word	0x20013fc4
 8001b48:	20000440 	.word	0x20000440
 8001b4c:	20001290 	.word	0x20001290
 8001b50:	20000460 	.word	0x20000460
 8001b54:	20000444 	.word	0x20000444
 8001b58:	20000008 	.word	0x20000008
 8001b5c:	20001294 	.word	0x20001294
 8001b60:	20002b44 	.word	0x20002b44
 8001b64:	0802d310 	.word	0x0802d310
 8001b68:	0802d274 	.word	0x0802d274
 8001b6c:	0802d2a8 	.word	0x0802d2a8
 8001b70:	0802d2dc 	.word	0x0802d2dc
 8001b74:	08001a61 	.word	0x08001a61
 8001b78:	200003c4 	.word	0x200003c4

08001b7c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001b7c:	4770      	bx	lr
	...

08001b80 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001b80:	4801      	ldr	r0, [pc, #4]	@ (8001b88 <touchgfx_taskEntry+0x8>)
 8001b82:	f7ff bbd1 	b.w	8001328 <_ZN11TouchGFXHAL9taskEntryEv>
 8001b86:	bf00      	nop
 8001b88:	200003c4 	.word	0x200003c4

08001b8c <_GLOBAL__sub_I_touchgfx_init>:
}
 8001b8c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001b8e:	4e24      	ldr	r6, [pc, #144]	@ (8001c20 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 8001b90:	4c24      	ldr	r4, [pc, #144]	@ (8001c24 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8001b92:	4d25      	ldr	r5, [pc, #148]	@ (8001c28 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001b94:	4b25      	ldr	r3, [pc, #148]	@ (8001c2c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8001b96:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001b98:	4630      	mov	r0, r6
 8001b9a:	f7ff fe51 	bl	8001840 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001b9e:	4628      	mov	r0, r5
 8001ba0:	f01e f94c 	bl	801fe3c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001ba4:	4822      	ldr	r0, [pc, #136]	@ (8001c30 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001ba6:	f016 fcd9 	bl	801855c <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001baa:	4b22      	ldr	r3, [pc, #136]	@ (8001c34 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001bac:	4822      	ldr	r0, [pc, #136]	@ (8001c38 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          touchController(touchCtrl),
 8001bae:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001bb0:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001bb2:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001bb6:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001bba:	4920      	ldr	r1, [pc, #128]	@ (8001c3c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001bbc:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001bbe:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001bc2:	491f      	ldr	r1, [pc, #124]	@ (8001c40 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8001bc4:	6799      	str	r1, [r3, #120]	@ 0x78
        instance = this;
 8001bc6:	491f      	ldr	r1, [pc, #124]	@ (8001c44 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          useAuxiliaryLCD(false),
 8001bc8:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
        instance = this;
 8001bcc:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001bce:	21f0      	movs	r1, #240	@ 0xf0
 8001bd0:	8001      	strh	r1, [r0, #0]
 8001bd2:	481d      	ldr	r0, [pc, #116]	@ (8001c48 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          lastY(0),
 8001bd4:	665a      	str	r2, [r3, #100]	@ 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001bd6:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001bd8:	481c      	ldr	r0, [pc, #112]	@ (8001c4c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          updateMCULoad(0),
 8001bda:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001bde:	f44f 71a0 	mov.w	r1, #320	@ 0x140
          buttonController(0),
 8001be2:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001be6:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001bea:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001bee:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 8001bf2:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 8001bf6:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001bfa:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 8001bfe:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          cc_begin(0),
 8001c02:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 8001c04:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c08:	8001      	strh	r1, [r0, #0]
 8001c0a:	4811      	ldr	r0, [pc, #68]	@ (8001c50 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001c0c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001c0e:	4911      	ldr	r1, [pc, #68]	@ (8001c54 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 8001c10:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001c12:	2201      	movs	r2, #1
 8001c14:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001c18:	4a0f      	ldr	r2, [pc, #60]	@ (8001c58 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001c1a:	601a      	str	r2, [r3, #0]
}
 8001c1c:	bd70      	pop	{r4, r5, r6, pc}
 8001c1e:	bf00      	nop
 8001c20:	200004ec 	.word	0x200004ec
 8001c24:	2000128c 	.word	0x2000128c
 8001c28:	20000460 	.word	0x20000460
 8001c2c:	0802be48 	.word	0x0802be48
 8001c30:	20000444 	.word	0x20000444
 8001c34:	200003c4 	.word	0x200003c4
 8001c38:	20013f54 	.word	0x20013f54
 8001c3c:	01000001 	.word	0x01000001
 8001c40:	01010000 	.word	0x01010000
 8001c44:	20013f60 	.word	0x20013f60
 8001c48:	20013f5a 	.word	0x20013f5a
 8001c4c:	20013f56 	.word	0x20013f56
 8001c50:	20013f5c 	.word	0x20013f5c
 8001c54:	20013f58 	.word	0x20013f58
 8001c58:	0802d14c 	.word	0x0802d14c

08001c5c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001c5c:	4801      	ldr	r0, [pc, #4]	@ (8001c64 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001c5e:	f7ff bc7b 	b.w	8001558 <_ZN8STM32DMAD1Ev>
 8001c62:	bf00      	nop
 8001c64:	200004ec 	.word	0x200004ec

08001c68 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001c68:	2000      	movs	r0, #0
 8001c6a:	4770      	bx	lr

08001c6c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001c6c:	8081      	strh	r1, [r0, #4]
    }
 8001c6e:	4770      	bx	lr

08001c70 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001c70:	80c1      	strh	r1, [r0, #6]
    }
 8001c72:	4770      	bx	lr

08001c74 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001c74:	8101      	strh	r1, [r0, #8]
    }
 8001c76:	4770      	bx	lr

08001c78 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001c78:	8141      	strh	r1, [r0, #10]
    }
 8001c7a:	4770      	bx	lr

08001c7c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001c7c:	4770      	bx	lr

08001c7e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c7e:	4770      	bx	lr

08001c80 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c80:	4770      	bx	lr

08001c82 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c82:	4770      	bx	lr

08001c84 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001c84:	4770      	bx	lr

08001c86 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001c86:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001c88:	88c4      	ldrh	r4, [r0, #6]
 8001c8a:	6803      	ldr	r3, [r0, #0]
 8001c8c:	1b12      	subs	r2, r2, r4
 8001c8e:	8884      	ldrh	r4, [r0, #4]
 8001c90:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001c92:	1b09      	subs	r1, r1, r4
 8001c94:	b212      	sxth	r2, r2
    }
 8001c96:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001c9a:	b209      	sxth	r1, r1
 8001c9c:	4718      	bx	r3

08001c9e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001c9e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001ca2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001ca4:	f04f 33ff 	mov.w	r3, #4294967295
 8001ca8:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001caa:	6813      	ldr	r3, [r2, #0]
 8001cac:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001cae:	6010      	str	r0, [r2, #0]
    }
 8001cb0:	4770      	bx	lr

08001cb2 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001cb2:	2000      	movs	r0, #0
 8001cb4:	4770      	bx	lr

08001cb6 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001cb6:	888b      	ldrh	r3, [r1, #4]
 8001cb8:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001cba:	2001      	movs	r0, #1
 8001cbc:	4770      	bx	lr

08001cbe <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001cbe:	4770      	bx	lr

08001cc0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001cc0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001cc4:	4770      	bx	lr

08001cc6 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001cc6:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001cca:	4770      	bx	lr

08001ccc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001ccc:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001cce:	2200      	movs	r2, #0
        return rect.width;
 8001cd0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001cd4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001cd8:	8002      	strh	r2, [r0, #0]
 8001cda:	8042      	strh	r2, [r0, #2]
 8001cdc:	8084      	strh	r4, [r0, #4]
 8001cde:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001ce0:	bd10      	pop	{r4, pc}

08001ce2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001ce2:	2200      	movs	r2, #0
 8001ce4:	8002      	strh	r2, [r0, #0]
 8001ce6:	8042      	strh	r2, [r0, #2]
 8001ce8:	8082      	strh	r2, [r0, #4]
 8001cea:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001cec:	4770      	bx	lr

08001cee <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 8001cee:	7701      	strb	r1, [r0, #28]
    }
 8001cf0:	4770      	bx	lr

08001cf2 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 8001cf2:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 8001cf6:	4770      	bx	lr

08001cf8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 8001cf8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 8001cfc:	4770      	bx	lr

08001cfe <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 8001cfe:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 8001d02:	4770      	bx	lr

08001d04 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 8001d04:	2001      	movs	r0, #1
 8001d06:	4770      	bx	lr

08001d08 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 8001d08:	3098      	adds	r0, #152	@ 0x98
 8001d0a:	4770      	bx	lr

08001d0c <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 8001d0c:	308c      	adds	r0, #140	@ 0x8c
 8001d0e:	4770      	bx	lr

08001d10 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 8001d10:	3084      	adds	r0, #132	@ 0x84
 8001d12:	4770      	bx	lr

08001d14 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001d14:	4770      	bx	lr

08001d16 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001d16:	4770      	bx	lr

08001d18 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 8001d18:	4770      	bx	lr
	...

08001d1c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d1c:	4b03      	ldr	r3, [pc, #12]	@ (8001d2c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001d1e:	2290      	movs	r2, #144	@ 0x90
 8001d20:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 8001d24:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001d28:	4770      	bx	lr
 8001d2a:	bf00      	nop
 8001d2c:	e000e100 	.word	0xe000e100

08001d30 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d30:	4a09      	ldr	r2, [pc, #36]	@ (8001d58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001d32:	490a      	ldr	r1, [pc, #40]	@ (8001d5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001d34:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d36:	480a      	ldr	r0, [pc, #40]	@ (8001d60 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d38:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001d3c:	3b01      	subs	r3, #1
 8001d3e:	b29b      	uxth	r3, r3
 8001d40:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d42:	6911      	ldr	r1, [r2, #16]
 8001d44:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001d48:	3901      	subs	r1, #1
 8001d4a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001d4c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001d4e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001d50:	f043 0301 	orr.w	r3, r3, #1
 8001d54:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001d56:	4770      	bx	lr
 8001d58:	40016800 	.word	0x40016800
 8001d5c:	20002cf6 	.word	0x20002cf6
 8001d60:	20002cf4 	.word	0x20002cf4

08001d64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001d64:	4b01      	ldr	r3, [pc, #4]	@ (8001d6c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001d66:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001d6a:	4770      	bx	lr
 8001d6c:	40016800 	.word	0x40016800

08001d70 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d70:	4b02      	ldr	r3, [pc, #8]	@ (8001d7c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d72:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d74:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d78:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001d7a:	4770      	bx	lr
 8001d7c:	40016800 	.word	0x40016800

08001d80 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001d80:	b510      	push	{r4, lr}
 8001d82:	212c      	movs	r1, #44	@ 0x2c
 8001d84:	4604      	mov	r4, r0
 8001d86:	f027 ffaf 	bl	8029ce8 <_ZdlPvj>
 8001d8a:	4620      	mov	r0, r4
 8001d8c:	bd10      	pop	{r4, pc}

08001d8e <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001d8e:	b510      	push	{r4, lr}
 8001d90:	21bc      	movs	r1, #188	@ 0xbc
 8001d92:	4604      	mov	r4, r0
 8001d94:	f027 ffa8 	bl	8029ce8 <_ZdlPvj>
 8001d98:	4620      	mov	r0, r4
 8001d9a:	bd10      	pop	{r4, pc}

08001d9c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001d9c:	b570      	push	{r4, r5, r6, lr}
 8001d9e:	4604      	mov	r4, r0
    HAL::initialize();
 8001da0:	f00e fce9 	bl	8010776 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001da4:	6823      	ldr	r3, [r4, #0]
 8001da6:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
 8001da8:	f015 fa84 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
 8001dac:	4601      	mov	r1, r0
 8001dae:	4620      	mov	r0, r4
 8001db0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001db2:	6823      	ldr	r3, [r4, #0]
 8001db4:	4a05      	ldr	r2, [pc, #20]	@ (8001dcc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001db6:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
 8001dba:	4620      	mov	r0, r4
 8001dbc:	46ac      	mov	ip, r5
 8001dbe:	2300      	movs	r3, #0
}
 8001dc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001dc4:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001dc8:	4760      	bx	ip
 8001dca:	bf00      	nop
 8001dcc:	d004b000 	.word	0xd004b000

08001dd0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001dd0:	f00e bcb8 	b.w	8010744 <_ZN8touchgfx3HAL10beginFrameEv>

08001dd4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001dd4:	f00e bcc2 	b.w	801075c <_ZN8touchgfx3HAL8endFrameEv>

08001dd8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001dd8:	f00e bc7e 	b.w	80106d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001ddc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001ddc:	f00e bddf 	b.w	801099e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001de0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001de0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001de4:	b112      	cbz	r2, 8001dec <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001de6:	6803      	ldr	r3, [r0, #0]
 8001de8:	695b      	ldr	r3, [r3, #20]
 8001dea:	4718      	bx	r3
    }
 8001dec:	4770      	bx	lr

08001dee <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001dee:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8001df2:	b11a      	cbz	r2, 8001dfc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001df4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 8001df8:	b102      	cbz	r2, 8001dfc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001dfa:	6018      	str	r0, [r3, #0]
        }
    }
 8001dfc:	4770      	bx	lr
	...

08001e00 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e00:	4b03      	ldr	r3, [pc, #12]	@ (8001e10 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001e02:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001e06:	609a      	str	r2, [r3, #8]
 8001e08:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e0c:	609a      	str	r2, [r3, #8]
}
 8001e0e:	4770      	bx	lr
 8001e10:	e000e100 	.word	0xe000e100

08001e14 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e14:	4b08      	ldr	r3, [pc, #32]	@ (8001e38 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001e16:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001e1a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e22:	f3bf 8f6f 	isb	sy
 8001e26:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8001e2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e32:	f3bf 8f6f 	isb	sy
}
 8001e36:	4770      	bx	lr
 8001e38:	e000e100 	.word	0xe000e100

08001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001e3c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001e3e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001e40:	4e12      	ldr	r6, [pc, #72]	@ (8001e8c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001e42:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001e44:	4b12      	ldr	r3, [pc, #72]	@ (8001e90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001e46:	6003      	str	r3, [r0, #0]
 8001e48:	6833      	ldr	r3, [r6, #0]
 8001e4a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001e4e:	4605      	mov	r5, r0
 8001e50:	b10a      	cbz	r2, 8001e56 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001e52:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001e54:	b900      	cbnz	r0, 8001e58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001e56:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001e58:	6803      	ldr	r3, [r0, #0]
 8001e5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e5c:	4798      	blx	r3
        return auxiliaryLCD;
 8001e5e:	6833      	ldr	r3, [r6, #0]
 8001e60:	fab0 f480 	clz	r4, r0
 8001e64:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001e66:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001e68:	b130      	cbz	r0, 8001e78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001e6a:	6803      	ldr	r3, [r0, #0]
 8001e6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e6e:	4798      	blx	r3
 8001e70:	2800      	cmp	r0, #0
 8001e72:	bf08      	it	eq
 8001e74:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001e78:	b92c      	cbnz	r4, 8001e86 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001e7a:	4b06      	ldr	r3, [pc, #24]	@ (8001e94 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001e7c:	4a06      	ldr	r2, [pc, #24]	@ (8001e98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001e7e:	4807      	ldr	r0, [pc, #28]	@ (8001e9c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001e80:	212c      	movs	r1, #44	@ 0x2c
 8001e82:	f028 ff6f 	bl	802ad64 <__assert_func>
    }
 8001e86:	4628      	mov	r0, r5
 8001e88:	bd70      	pop	{r4, r5, r6, pc}
 8001e8a:	bf00      	nop
 8001e8c:	20013f60 	.word	0x20013f60
 8001e90:	0802d324 	.word	0x0802d324
 8001e94:	0802c205 	.word	0x0802c205
 8001e98:	0802c263 	.word	0x0802c263
 8001e9c:	0802c29c 	.word	0x0802c29c

08001ea0 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001ea0:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001ea2:	4e24      	ldr	r6, [pc, #144]	@ (8001f34 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x94>)
 8001ea4:	6835      	ldr	r5, [r6, #0]
 8001ea6:	f3bf 8f5b 	dmb	ish
 8001eaa:	f015 0501 	ands.w	r5, r5, #1
 8001eae:	d13f      	bne.n	8001f30 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
 8001eb0:	4630      	mov	r0, r6
 8001eb2:	f027 ff1b 	bl	8029cec <__cxa_guard_acquire>
 8001eb6:	2800      	cmp	r0, #0
 8001eb8:	d03a      	beq.n	8001f30 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x90>
class CWRVectorRenderer : public VectorRenderer
 8001eba:	4c1f      	ldr	r4, [pc, #124]	@ (8001f38 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001ebc:	4b1f      	ldr	r3, [pc, #124]	@ (8001f3c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001ebe:	6125      	str	r5, [r4, #16]
 8001ec0:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001ec4:	e9c4 3500 	strd	r3, r5, [r4]
 8001ec8:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001ecc:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001ece:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001ed0:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8001ed2:	f016 fda2 	bl	8018a1a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 8001ed6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001eda:	f011 fbb1 	bl	8013640 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8001ede:	4b18      	ldr	r3, [pc, #96]	@ (8001f40 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001ee0:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001ee2:	4620      	mov	r0, r4
 8001ee4:	4b17      	ldr	r3, [pc, #92]	@ (8001f44 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 8001ee6:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8001eea:	f7ff ffa7 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8001eee:	4b16      	ldr	r3, [pc, #88]	@ (8001f48 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 8001ef0:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 8001ef4:	3324      	adds	r3, #36	@ 0x24
 8001ef6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 8001efa:	2364      	movs	r3, #100	@ 0x64
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 8001efc:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8001f00:	2300      	movs	r3, #0
 8001f02:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 8001f06:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 8001f0a:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8001f0e:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 8001f12:	480e      	ldr	r0, [pc, #56]	@ (8001f4c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 8001f14:	4b0e      	ldr	r3, [pc, #56]	@ (8001f50 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8001f16:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 8001f1a:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8001f1e:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8001f22:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 8001f26:	f028 ff3b 	bl	802ada0 <atexit>
 8001f2a:	4630      	mov	r0, r6
 8001f2c:	f027 feea 	bl	8029d04 <__cxa_guard_release>
}
 8001f30:	4801      	ldr	r0, [pc, #4]	@ (8001f38 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001f32:	bd70      	pop	{r4, r5, r6, pc}
 8001f34:	20002cf8 	.word	0x20002cf8
 8001f38:	20002cfc 	.word	0x20002cfc
 8001f3c:	0802de94 	.word	0x0802de94
 8001f40:	0802d344 	.word	0x0802d344
 8001f44:	0802d3bc 	.word	0x0802d3bc
 8001f48:	0802de48 	.word	0x0802de48
 8001f4c:	08001d19 	.word	0x08001d19
 8001f50:	0802de28 	.word	0x0802de28

08001f54 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001f54:	b510      	push	{r4, lr}
        return instance;
 8001f56:	4c14      	ldr	r4, [pc, #80]	@ (8001fa8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001f58:	6823      	ldr	r3, [r4, #0]
 8001f5a:	b323      	cbz	r3, 8001fa6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001f5c:	4b13      	ldr	r3, [pc, #76]	@ (8001fac <HAL_LTDC_LineEventCallback+0x58>)
 8001f5e:	4a14      	ldr	r2, [pc, #80]	@ (8001fb0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001f60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f62:	8811      	ldrh	r1, [r2, #0]
 8001f64:	428b      	cmp	r3, r1
 8001f66:	d113      	bne.n	8001f90 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001f68:	4b12      	ldr	r3, [pc, #72]	@ (8001fb4 <HAL_LTDC_LineEventCallback+0x60>)
 8001f6a:	8819      	ldrh	r1, [r3, #0]
 8001f6c:	f00a fc4a 	bl	800c804 <HAL_LTDC_ProgramLineEvent>
 8001f70:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001f72:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
 8001f76:	3301      	adds	r3, #1
 8001f78:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001f7c:	f7ff fac0 	bl	8001500 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001f80:	6820      	ldr	r0, [r4, #0]
 8001f82:	f00f f937 	bl	80111f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001f86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001f8a:	2000      	movs	r0, #0
 8001f8c:	f7ff b904 	b.w	8001198 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001f90:	f00a fc38 	bl	800c804 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001f94:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001f96:	6803      	ldr	r3, [r0, #0]
 8001f98:	6a1b      	ldr	r3, [r3, #32]
 8001f9a:	4798      	blx	r3
    }
 8001f9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001fa0:	2000      	movs	r0, #0
 8001fa2:	f7ff b923 	b.w	80011ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001fa6:	bd10      	pop	{r4, pc}
 8001fa8:	20013f60 	.word	0x20013f60
 8001fac:	40016800 	.word	0x40016800
 8001fb0:	20002cf6 	.word	0x20002cf6
 8001fb4:	20002cf4 	.word	0x20002cf4

08001fb8 <JoystickTask>:
//void uart_print(const char* msg) {
//    HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
//}

extern "C" void JoystickTask(void *argument)
{
 8001fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Khởi tạo giá trị ADC ở giữa dải (2048 cho ADC 12-bit)
    uint32_t adc_values[4] = {2048, 2048, 2048, 2048}; // Lưu giá trị ADC: [JOY1_X, JOY1_Y, JOY2_X, JOY2_Y]
 8001fbc:	4c66      	ldr	r4, [pc, #408]	@ (8002158 <JoystickTask+0x1a0>)
 8001fbe:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
{
 8001fc2:	b08f      	sub	sp, #60	@ 0x3c
    uint32_t adc_values[4] = {2048, 2048, 2048, 2048}; // Lưu giá trị ADC: [JOY1_X, JOY1_Y, JOY2_X, JOY2_Y]
 8001fc4:	af02      	add	r7, sp, #8
 8001fc6:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
    // Cấu hình kênh ADC
    ADC_ChannelConfTypeDef sConfig = {0};
    uint8_t channel_rank = 1;

    // Cấu hình tất cả 4 kênh cho ADC1 ở chế độ Scan
    uint32_t channels[4] = {JOY1_X_CHANNEL, JOY1_Y_CHANNEL, JOY2_X_CHANNEL, JOY2_Y_CHANNEL};
 8001fca:	3410      	adds	r4, #16
    ADC_ChannelConfTypeDef sConfig = {0};
 8001fcc:	2300      	movs	r3, #0
 8001fce:	9309      	str	r3, [sp, #36]	@ 0x24
    uint32_t channels[4] = {JOY1_X_CHANNEL, JOY1_Y_CHANNEL, JOY2_X_CHANNEL, JOY2_Y_CHANNEL};
 8001fd0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8001fd4:	ad0a      	add	r5, sp, #40	@ 0x28
 8001fd6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8001fda:	2401      	movs	r4, #1
    for (int i = 0; i < 4; i++) {
        sConfig.Channel = channels[i];
        sConfig.Rank = channel_rank++;
        sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001fdc:	2606      	movs	r6, #6
        sConfig.Channel = channels[i];
 8001fde:	f855 3b04 	ldr.w	r3, [r5], #4
        HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001fe2:	485e      	ldr	r0, [pc, #376]	@ (800215c <JoystickTask+0x1a4>)
        sConfig.SamplingTime = ADC_SAMPLETIME_144CYCLES;
 8001fe4:	9608      	str	r6, [sp, #32]
        sConfig.Rank = channel_rank++;
 8001fe6:	e9cd 3406 	strd	r3, r4, [sp, #24]
        HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001fea:	a906      	add	r1, sp, #24
    for (int i = 0; i < 4; i++) {
 8001fec:	3401      	adds	r4, #1
        HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8001fee:	f009 fb1f 	bl	800b630 <HAL_ADC_ConfigChannel>
    for (int i = 0; i < 4; i++) {
 8001ff2:	2c05      	cmp	r4, #5
 8001ff4:	d1f3      	bne.n	8001fde <JoystickTask+0x26>
    }

    // Cấu hình ADC1 ở chế độ Scan
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 8001ff6:	4b59      	ldr	r3, [pc, #356]	@ (800215c <JoystickTask+0x1a4>)
    GPIO_PinState lastJoy1ButtonState = GPIO_PIN_SET;
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;

    for (;;) {
        // Bắt đầu quét tất cả các kênh
        HAL_ADC_Start(&hadc1);
 8001ff8:	f8df 8160 	ldr.w	r8, [pc, #352]	@ 800215c <JoystickTask+0x1a4>
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 8001ffc:	681b      	ldr	r3, [r3, #0]
        if (adc_values[1] < JOY_THRESHOLD_LEFT) {
            command = JOY1_LEFT;
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        } else if (adc_values[1] > JOY_THRESHOLD_RIGHT) {
            command = JOY1_RIGHT;
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8001ffe:	4c58      	ldr	r4, [pc, #352]	@ (8002160 <JoystickTask+0x1a8>)
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 8002000:	685a      	ldr	r2, [r3, #4]
			command = JOY1_DOWN;
			osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
		}

        // Xử lý nút bấm Joystick 1
        GPIO_PinState joy1ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY1_BUTTON_PIN);
 8002002:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 8002168 <JoystickTask+0x1b0>
    hadc1.Instance->CR1 |= ADC_CR1_SCAN; // Bật chế độ Scan
 8002006:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800200a:	605a      	str	r2, [r3, #4]
    hadc1.Instance->SQR1 &= ~(ADC_SQR1_L); // Xóa số lượng kênh
 800200c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800200e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8002012:	62da      	str	r2, [r3, #44]	@ 0x2c
    hadc1.Instance->SQR1 |= (3 << 20); // Thiết lập 4 kênh (L = 3, vì đếm từ 0)
 8002014:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
    GPIO_PinState lastJoy2ButtonState = GPIO_PIN_SET;
 8002016:	f04f 0a01 	mov.w	sl, #1
    hadc1.Instance->SQR1 |= (3 << 20); // Thiết lập 4 kênh (L = 3, vì đếm từ 0)
 800201a:	f442 1240 	orr.w	r2, r2, #3145728	@ 0x300000
 800201e:	62da      	str	r2, [r3, #44]	@ 0x2c
    GPIO_PinState lastJoy1ButtonState = GPIO_PIN_SET;
 8002020:	4656      	mov	r6, sl
        HAL_ADC_Start(&hadc1);
 8002022:	4640      	mov	r0, r8
 8002024:	f009 fa14 	bl	800b450 <HAL_ADC_Start>
        for (int i = 0; i < 4; i++) {
 8002028:	46bb      	mov	fp, r7
 800202a:	2500      	movs	r5, #0
            HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 800202c:	f04f 31ff 	mov.w	r1, #4294967295
 8002030:	4640      	mov	r0, r8
 8002032:	f009 faa6 	bl	800b582 <HAL_ADC_PollForConversion>
            adc_values[i] = HAL_ADC_GetValue(&hadc1);
 8002036:	4640      	mov	r0, r8
 8002038:	f009 faf6 	bl	800b628 <HAL_ADC_GetValue>
        for (int i = 0; i < 4; i++) {
 800203c:	3501      	adds	r5, #1
 800203e:	2d04      	cmp	r5, #4
            adc_values[i] = HAL_ADC_GetValue(&hadc1);
 8002040:	f84b 0b04 	str.w	r0, [fp], #4
        for (int i = 0; i < 4; i++) {
 8002044:	d1f2      	bne.n	800202c <JoystickTask+0x74>
        HAL_ADC_Stop(&hadc1);
 8002046:	4640      	mov	r0, r8
 8002048:	f009 fa80 	bl	800b54c <HAL_ADC_Stop>
        if (adc_values[1] < JOY_THRESHOLD_LEFT) {
 800204c:	9b03      	ldr	r3, [sp, #12]
 800204e:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002052:	d265      	bcs.n	8002120 <JoystickTask+0x168>
            command = JOY1_LEFT;
 8002054:	2300      	movs	r3, #0
 8002056:	f88d 3007 	strb.w	r3, [sp, #7]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800205a:	6820      	ldr	r0, [r4, #0]
 800205c:	461a      	mov	r2, r3
 800205e:	f10d 0107 	add.w	r1, sp, #7
 8002062:	f00c f903 	bl	800e26c <osMessageQueuePut>
        if (adc_values[0] < JOY_THRESHOLD_LEFT) {
 8002066:	9b02      	ldr	r3, [sp, #8]
 8002068:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800206c:	d261      	bcs.n	8002132 <JoystickTask+0x17a>
            command = JOY1_UP;
 800206e:	2302      	movs	r3, #2
			command = JOY1_DOWN;
 8002070:	f88d 3007 	strb.w	r3, [sp, #7]
			osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8002074:	2300      	movs	r3, #0
 8002076:	6820      	ldr	r0, [r4, #0]
 8002078:	461a      	mov	r2, r3
 800207a:	f10d 0107 	add.w	r1, sp, #7
 800207e:	f00c f8f5 	bl	800e26c <osMessageQueuePut>
        GPIO_PinState joy1ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY1_BUTTON_PIN);
 8002082:	2104      	movs	r1, #4
 8002084:	4648      	mov	r0, r9
 8002086:	f009 fdaf 	bl	800bbe8 <HAL_GPIO_ReadPin>
        if (joy1ButtonState == GPIO_PIN_RESET && lastJoy1ButtonState == GPIO_PIN_SET) {
 800208a:	4605      	mov	r5, r0
 800208c:	b958      	cbnz	r0, 80020a6 <JoystickTask+0xee>
 800208e:	2e01      	cmp	r6, #1
 8002090:	d109      	bne.n	80020a6 <JoystickTask+0xee>
            command = JOY1_BUTTON;
 8002092:	2308      	movs	r3, #8
 8002094:	f88d 3007 	strb.w	r3, [sp, #7]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 8002098:	4602      	mov	r2, r0
 800209a:	4603      	mov	r3, r0
 800209c:	f10d 0107 	add.w	r1, sp, #7
 80020a0:	6820      	ldr	r0, [r4, #0]
 80020a2:	f00c f8e3 	bl	800e26c <osMessageQueuePut>
        }
        lastJoy1ButtonState = joy1ButtonState;

        // Xử lý Joystick 2
        // Trục X
        if (adc_values[3] < JOY_THRESHOLD_LEFT) {
 80020a6:	9b05      	ldr	r3, [sp, #20]
 80020a8:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80020ac:	d247      	bcs.n	800213e <JoystickTask+0x186>
            command = JOY2_LEFT;
 80020ae:	2304      	movs	r3, #4
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        } else if (adc_values[3] > JOY_THRESHOLD_RIGHT) {
            command = JOY2_RIGHT;
 80020b0:	f88d 3007 	strb.w	r3, [sp, #7]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80020b4:	2300      	movs	r3, #0
 80020b6:	6820      	ldr	r0, [r4, #0]
 80020b8:	461a      	mov	r2, r3
 80020ba:	f10d 0107 	add.w	r1, sp, #7
 80020be:	f00c f8d5 	bl	800e26c <osMessageQueuePut>
        }

        // Trục Y
        if (adc_values[2] < JOY_THRESHOLD_LEFT) {
 80020c2:	9b04      	ldr	r3, [sp, #16]
 80020c4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80020c8:	d23f      	bcs.n	800214a <JoystickTask+0x192>
            command = JOY2_UP;
 80020ca:	2306      	movs	r3, #6
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
        }
        else if (adc_values[2] > JOY_THRESHOLD_RIGHT) {
		   command = JOY2_DOWN;
 80020cc:	f88d 3007 	strb.w	r3, [sp, #7]
		   osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80020d0:	2300      	movs	r3, #0
 80020d2:	6820      	ldr	r0, [r4, #0]
 80020d4:	461a      	mov	r2, r3
 80020d6:	f10d 0107 	add.w	r1, sp, #7
 80020da:	f00c f8c7 	bl	800e26c <osMessageQueuePut>
	   }
        // Xử lý nút bấm Joystick 2
        GPIO_PinState joy2ButtonState = HAL_GPIO_ReadPin(JOY_BUTTON_PORT, JOY2_BUTTON_PIN);
 80020de:	2108      	movs	r1, #8
 80020e0:	4648      	mov	r0, r9
 80020e2:	f009 fd81 	bl	800bbe8 <HAL_GPIO_ReadPin>
        if (joy2ButtonState == GPIO_PIN_RESET && lastJoy2ButtonState == GPIO_PIN_SET) {
 80020e6:	4606      	mov	r6, r0
 80020e8:	b960      	cbnz	r0, 8002104 <JoystickTask+0x14c>
 80020ea:	f1ba 0f01 	cmp.w	sl, #1
 80020ee:	d109      	bne.n	8002104 <JoystickTask+0x14c>
            command = JOY2_BUTTON;
 80020f0:	2309      	movs	r3, #9
 80020f2:	f88d 3007 	strb.w	r3, [sp, #7]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 80020f6:	4602      	mov	r2, r0
 80020f8:	4603      	mov	r3, r0
 80020fa:	f10d 0107 	add.w	r1, sp, #7
 80020fe:	6820      	ldr	r0, [r4, #0]
 8002100:	f00c f8b4 	bl	800e26c <osMessageQueuePut>
        }
        lastJoy2ButtonState = joy2ButtonState;

        // Cập nhật bộ đếm thời gian
        tick_counter += 20;
 8002104:	4a17      	ldr	r2, [pc, #92]	@ (8002164 <JoystickTask+0x1ac>)
 8002106:	6813      	ldr	r3, [r2, #0]
 8002108:	3314      	adds	r3, #20
        if (tick_counter >= 500) {
 800210a:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800210e:	bf28      	it	cs
 8002110:	2300      	movcs	r3, #0
//            sprintf(buffer, "JOY1: X=%lu, Y=%lu | JOY2: X=%lu, Y=%lu\r\n",
//                    adc_values[0], adc_values[1], adc_values[2], adc_values[3]);
//            uart_print(buffer);
        }

        osDelay(10); // Tạm dừng 10ms
 8002112:	200a      	movs	r0, #10
        tick_counter += 20;
 8002114:	6013      	str	r3, [r2, #0]
        lastJoy2ButtonState = joy2ButtonState;
 8002116:	46b2      	mov	sl, r6
        osDelay(10); // Tạm dừng 10ms
 8002118:	f00b ffc2 	bl	800e0a0 <osDelay>
        lastJoy1ButtonState = joy1ButtonState;
 800211c:	462e      	mov	r6, r5
    }
 800211e:	e780      	b.n	8002022 <JoystickTask+0x6a>
        } else if (adc_values[1] > JOY_THRESHOLD_RIGHT) {
 8002120:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8002124:	4293      	cmp	r3, r2
 8002126:	d99e      	bls.n	8002066 <JoystickTask+0xae>
            command = JOY1_RIGHT;
 8002128:	2301      	movs	r3, #1
 800212a:	f88d 3007 	strb.w	r3, [sp, #7]
            osMessageQueuePut(joystickQueueHandle, &command, 0, 0);
 800212e:	2300      	movs	r3, #0
 8002130:	e793      	b.n	800205a <JoystickTask+0xa2>
        }else if (adc_values[0] > JOY_THRESHOLD_RIGHT) {
 8002132:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8002136:	4293      	cmp	r3, r2
 8002138:	d9a3      	bls.n	8002082 <JoystickTask+0xca>
			command = JOY1_DOWN;
 800213a:	2303      	movs	r3, #3
 800213c:	e798      	b.n	8002070 <JoystickTask+0xb8>
        } else if (adc_values[3] > JOY_THRESHOLD_RIGHT) {
 800213e:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 8002142:	4293      	cmp	r3, r2
 8002144:	d9bd      	bls.n	80020c2 <JoystickTask+0x10a>
            command = JOY2_RIGHT;
 8002146:	2305      	movs	r3, #5
 8002148:	e7b2      	b.n	80020b0 <JoystickTask+0xf8>
        else if (adc_values[2] > JOY_THRESHOLD_RIGHT) {
 800214a:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 800214e:	4293      	cmp	r3, r2
 8002150:	d9c5      	bls.n	80020de <JoystickTask+0x126>
		   command = JOY2_DOWN;
 8002152:	2307      	movs	r3, #7
 8002154:	e7ba      	b.n	80020cc <JoystickTask+0x114>
 8002156:	bf00      	nop
 8002158:	0802bde0 	.word	0x0802bde0
 800215c:	20002e10 	.word	0x20002e10
 8002160:	20002dc0 	.word	0x20002dc0
 8002164:	20002db8 	.word	0x20002db8
 8002168:	40021800 	.word	0x40021800

0800216c <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 800216c:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800216e:	4b06      	ldr	r3, [pc, #24]	@ (8002188 <SPI5_Write+0x1c>)
{
 8002170:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002174:	681b      	ldr	r3, [r3, #0]
 8002176:	4805      	ldr	r0, [pc, #20]	@ (800218c <SPI5_Write+0x20>)
 8002178:	2201      	movs	r2, #1
 800217a:	f10d 0106 	add.w	r1, sp, #6
 800217e:	f00b f8f1 	bl	800d364 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8002182:	b003      	add	sp, #12
 8002184:	f85d fb04 	ldr.w	pc, [sp], #4
 8002188:	2000000c 	.word	0x2000000c
 800218c:	20002e8c 	.word	0x20002e8c

08002190 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8002190:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8002192:	2064      	movs	r0, #100	@ 0x64
 8002194:	f00b ff84 	bl	800e0a0 <osDelay>
  for(;;)
 8002198:	e7fb      	b.n	8002192 <StartDefaultTask+0x2>
	...

0800219c <SystemClock_Config>:
{
 800219c:	b530      	push	{r4, r5, lr}
 800219e:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80021a0:	2210      	movs	r2, #16
 80021a2:	2100      	movs	r1, #0
 80021a4:	a80a      	add	r0, sp, #40	@ 0x28
 80021a6:	f028 fff6 	bl	802b196 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80021aa:	2214      	movs	r2, #20
 80021ac:	2100      	movs	r1, #0
 80021ae:	a803      	add	r0, sp, #12
 80021b0:	f028 fff1 	bl	802b196 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80021b4:	2400      	movs	r4, #0
 80021b6:	4b1e      	ldr	r3, [pc, #120]	@ (8002230 <SystemClock_Config+0x94>)
 80021b8:	9401      	str	r4, [sp, #4]
 80021ba:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80021bc:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80021c0:	641a      	str	r2, [r3, #64]	@ 0x40
 80021c2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021c4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80021c8:	9301      	str	r3, [sp, #4]
 80021ca:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80021cc:	4b19      	ldr	r3, [pc, #100]	@ (8002234 <SystemClock_Config+0x98>)
 80021ce:	9402      	str	r4, [sp, #8]
 80021d0:	681a      	ldr	r2, [r3, #0]
 80021d2:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80021d6:	601a      	str	r2, [r3, #0]
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80021de:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80021e0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80021e2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80021e4:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80021e8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80021ec:	2502      	movs	r5, #2
 80021ee:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 80021f2:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80021f4:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 80021f8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80021fc:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002200:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8002202:	2304      	movs	r3, #4
 8002204:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002206:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002208:	f00a fb54 	bl	800c8b4 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800220c:	f00a fb18 	bl	800c840 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002210:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002212:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002216:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800221a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800221e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002222:	2105      	movs	r1, #5
 8002224:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002226:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002228:	f00a fd20 	bl	800cc6c <HAL_RCC_ClockConfig>
}
 800222c:	b015      	add	sp, #84	@ 0x54
 800222e:	bd30      	pop	{r4, r5, pc}
 8002230:	40023800 	.word	0x40023800
 8002234:	40007000 	.word	0x40007000

08002238 <MX_ADC1_Init>:
void MX_ADC1_Init(void){
 8002238:	b082      	sub	sp, #8
    __HAL_RCC_ADC1_CLK_ENABLE();
 800223a:	2300      	movs	r3, #0
 800223c:	4a0f      	ldr	r2, [pc, #60]	@ (800227c <MX_ADC1_Init+0x44>)
 800223e:	9301      	str	r3, [sp, #4]
 8002240:	6c51      	ldr	r1, [r2, #68]	@ 0x44
      hadc1.Instance = ADC1;
 8002242:	480f      	ldr	r0, [pc, #60]	@ (8002280 <MX_ADC1_Init+0x48>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8002244:	f441 7180 	orr.w	r1, r1, #256	@ 0x100
 8002248:	6451      	str	r1, [r2, #68]	@ 0x44
 800224a:	6c52      	ldr	r2, [r2, #68]	@ 0x44
      hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800224c:	6083      	str	r3, [r0, #8]
    __HAL_RCC_ADC1_CLK_ENABLE();
 800224e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8002252:	9201      	str	r2, [sp, #4]
 8002254:	9a01      	ldr	r2, [sp, #4]
      hadc1.Instance = ADC1;
 8002256:	4a0b      	ldr	r2, [pc, #44]	@ (8002284 <MX_ADC1_Init+0x4c>)
      hadc1.Init.ScanConvMode = DISABLE;
 8002258:	6103      	str	r3, [r0, #16]
      hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800225a:	e9c0 2300 	strd	r2, r3, [r0]
      hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800225e:	4a0a      	ldr	r2, [pc, #40]	@ (8002288 <MX_ADC1_Init+0x50>)
 8002260:	6282      	str	r2, [r0, #40]	@ 0x28
      hadc1.Init.NbrOfConversion = 1;
 8002262:	2201      	movs	r2, #1
      hadc1.Init.ContinuousConvMode = DISABLE;
 8002264:	7603      	strb	r3, [r0, #24]
      hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002266:	f880 3020 	strb.w	r3, [r0, #32]
      hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800226a:	62c3      	str	r3, [r0, #44]	@ 0x2c
      hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800226c:	60c3      	str	r3, [r0, #12]
      hadc1.Init.NbrOfConversion = 1;
 800226e:	61c2      	str	r2, [r0, #28]
      hadc1.Init.DMAContinuousRequests = DISABLE;
 8002270:	f880 3030 	strb.w	r3, [r0, #48]	@ 0x30
      hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002274:	6142      	str	r2, [r0, #20]
}
 8002276:	b002      	add	sp, #8
    HAL_ADC_Init(&hadc1);
 8002278:	f009 b844 	b.w	800b304 <HAL_ADC_Init>
 800227c:	40023800 	.word	0x40023800
 8002280:	20002e10 	.word	0x20002e10
 8002284:	40012000 	.word	0x40012000
 8002288:	0f000001 	.word	0x0f000001

0800228c <MX_USART1_UART_Init>:
{
 800228c:	b082      	sub	sp, #8
    __HAL_RCC_USART1_CLK_ENABLE();
 800228e:	2300      	movs	r3, #0
 8002290:	4a0d      	ldr	r2, [pc, #52]	@ (80022c8 <MX_USART1_UART_Init+0x3c>)
 8002292:	9301      	str	r3, [sp, #4]
 8002294:	6c51      	ldr	r1, [r2, #68]	@ 0x44
    huart1.Instance = USART1;
 8002296:	480d      	ldr	r0, [pc, #52]	@ (80022cc <MX_USART1_UART_Init+0x40>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8002298:	f041 0110 	orr.w	r1, r1, #16
 800229c:	6451      	str	r1, [r2, #68]	@ 0x44
 800229e:	6c52      	ldr	r2, [r2, #68]	@ 0x44
    huart1.Init.BaudRate = 115200;
 80022a0:	490b      	ldr	r1, [pc, #44]	@ (80022d0 <MX_USART1_UART_Init+0x44>)
    huart1.Init.Parity = UART_PARITY_NONE;
 80022a2:	6103      	str	r3, [r0, #16]
    __HAL_RCC_USART1_CLK_ENABLE();
 80022a4:	f002 0210 	and.w	r2, r2, #16
 80022a8:	9201      	str	r2, [sp, #4]
 80022aa:	9a01      	ldr	r2, [sp, #4]
    huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80022ac:	61c3      	str	r3, [r0, #28]
    huart1.Init.BaudRate = 115200;
 80022ae:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80022b2:	e9c0 1200 	strd	r1, r2, [r0]
    huart1.Init.Mode = UART_MODE_TX_RX;
 80022b6:	220c      	movs	r2, #12
    huart1.Init.StopBits = UART_STOPBITS_1;
 80022b8:	e9c0 3302 	strd	r3, r3, [r0, #8]
    huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80022bc:	e9c0 2305 	strd	r2, r3, [r0, #20]
}
 80022c0:	b002      	add	sp, #8
    if (HAL_UART_Init(&huart1) != HAL_OK)
 80022c2:	f00b bd4e 	b.w	800dd62 <HAL_UART_Init>
 80022c6:	bf00      	nop
 80022c8:	40023800 	.word	0x40023800
 80022cc:	20002dd0 	.word	0x20002dd0
 80022d0:	40011000 	.word	0x40011000

080022d4 <main>:
{
 80022d4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80022d8:	b09b      	sub	sp, #108	@ 0x6c
  HAL_Init();
 80022da:	f008 ffd1 	bl	800b280 <HAL_Init>
  MX_ADC1_Init();
 80022de:	f7ff ffab 	bl	8002238 <MX_ADC1_Init>
  SystemClock_Config();
 80022e2:	f7ff ff5b 	bl	800219c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022e6:	2214      	movs	r2, #20
 80022e8:	2100      	movs	r1, #0
 80022ea:	a80d      	add	r0, sp, #52	@ 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80022ec:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022ee:	f028 ff52 	bl	802b196 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80022f2:	4bc5      	ldr	r3, [pc, #788]	@ (8002608 <main+0x334>)
 80022f4:	9400      	str	r4, [sp, #0]
 80022f6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80022f8:	48c4      	ldr	r0, [pc, #784]	@ (800260c <main+0x338>)
  hi2c3.Instance = I2C3;
 80022fa:	4dc5      	ldr	r5, [pc, #788]	@ (8002610 <main+0x33c>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80022fc:	f042 0210 	orr.w	r2, r2, #16
 8002300:	631a      	str	r2, [r3, #48]	@ 0x30
 8002302:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002304:	f002 0210 	and.w	r2, r2, #16
 8002308:	9200      	str	r2, [sp, #0]
 800230a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800230c:	9401      	str	r4, [sp, #4]
 800230e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002310:	f042 0220 	orr.w	r2, r2, #32
 8002314:	631a      	str	r2, [r3, #48]	@ 0x30
 8002316:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002318:	f002 0220 	and.w	r2, r2, #32
 800231c:	9201      	str	r2, [sp, #4]
 800231e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002320:	9402      	str	r4, [sp, #8]
 8002322:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002324:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8002328:	631a      	str	r2, [r3, #48]	@ 0x30
 800232a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800232c:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8002330:	9202      	str	r2, [sp, #8]
 8002332:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002334:	9403      	str	r4, [sp, #12]
 8002336:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002338:	f042 0204 	orr.w	r2, r2, #4
 800233c:	631a      	str	r2, [r3, #48]	@ 0x30
 800233e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002340:	f002 0204 	and.w	r2, r2, #4
 8002344:	9203      	str	r2, [sp, #12]
 8002346:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002348:	9404      	str	r4, [sp, #16]
 800234a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800234c:	f042 0201 	orr.w	r2, r2, #1
 8002350:	631a      	str	r2, [r3, #48]	@ 0x30
 8002352:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002354:	f002 0201 	and.w	r2, r2, #1
 8002358:	9204      	str	r2, [sp, #16]
 800235a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800235c:	9405      	str	r4, [sp, #20]
 800235e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002360:	f042 0202 	orr.w	r2, r2, #2
 8002364:	631a      	str	r2, [r3, #48]	@ 0x30
 8002366:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002368:	f002 0202 	and.w	r2, r2, #2
 800236c:	9205      	str	r2, [sp, #20]
 800236e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8002370:	9406      	str	r4, [sp, #24]
 8002372:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002374:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002378:	631a      	str	r2, [r3, #48]	@ 0x30
 800237a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800237c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002380:	9206      	str	r2, [sp, #24]
 8002382:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002384:	9407      	str	r4, [sp, #28]
 8002386:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002388:	f042 0208 	orr.w	r2, r2, #8
 800238c:	631a      	str	r2, [r3, #48]	@ 0x30
 800238e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002390:	f003 0308 	and.w	r3, r3, #8
 8002394:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8002396:	4622      	mov	r2, r4
 8002398:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800239a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800239c:	f009 fc2a 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80023a0:	489c      	ldr	r0, [pc, #624]	@ (8002614 <main+0x340>)
 80023a2:	4622      	mov	r2, r4
 80023a4:	2104      	movs	r1, #4
 80023a6:	f009 fc25 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80023aa:	4622      	mov	r2, r4
 80023ac:	489a      	ldr	r0, [pc, #616]	@ (8002618 <main+0x344>)
 80023ae:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 80023b2:	f009 fc1f 	bl	800bbf4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023b6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023b8:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023bc:	233c      	movs	r3, #60	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80023be:	4893      	ldr	r0, [pc, #588]	@ (800260c <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023c0:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80023c4:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023c6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80023c8:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023cc:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023d0:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80023d2:	f009 fb25 	bl	800ba20 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023d6:	488f      	ldr	r0, [pc, #572]	@ (8002614 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023d8:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023da:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023dc:	e9cd b60d 	strd	fp, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023e0:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023e2:	f009 fb1d 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80023e6:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023ea:	488b      	ldr	r0, [pc, #556]	@ (8002618 <main+0x344>)
 80023ec:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023ee:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023f2:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023f6:	f009 fb13 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_5|GPIO_PIN_7;
 80023fa:	23a1      	movs	r3, #161	@ 0xa1
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023fc:	4887      	ldr	r0, [pc, #540]	@ (800261c <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023fe:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002400:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002402:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002406:	e9cd 380d 	strd	r3, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800240a:	f009 fb09 	bl	800ba20 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800240e:	4881      	ldr	r0, [pc, #516]	@ (8002614 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002410:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002412:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002414:	e9cd 980d 	strd	r9, r8, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002418:	f009 fb02 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800241c:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800241e:	4880      	ldr	r0, [pc, #512]	@ (8002620 <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002420:	960f      	str	r6, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002422:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002424:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002428:	f009 fafa 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 800242c:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002430:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002432:	e9cd 370d 	strd	r3, r7, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002436:	4879      	ldr	r0, [pc, #484]	@ (800261c <main+0x348>)
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002438:	2307      	movs	r3, #7
 800243a:	9311      	str	r3, [sp, #68]	@ 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800243c:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002440:	f009 faee 	bl	800ba20 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8002444:	4877      	ldr	r0, [pc, #476]	@ (8002624 <main+0x350>)
 8002446:	4a78      	ldr	r2, [pc, #480]	@ (8002628 <main+0x354>)
 8002448:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800244a:	f009 f9df 	bl	800b80c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800244e:	4b77      	ldr	r3, [pc, #476]	@ (800262c <main+0x358>)
 8002450:	4a77      	ldr	r2, [pc, #476]	@ (8002630 <main+0x35c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002452:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8002454:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8002458:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800245a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800245e:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8002462:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002466:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800246a:	f009 fdd1 	bl	800c010 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800246e:	2110      	movs	r1, #16
 8002470:	4628      	mov	r0, r5
 8002472:	f00a f815 	bl	800c4a0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8002476:	4621      	mov	r1, r4
 8002478:	4628      	mov	r0, r5
 800247a:	f00a f830 	bl	800c4de <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800247e:	486d      	ldr	r0, [pc, #436]	@ (8002634 <main+0x360>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002480:	496d      	ldr	r1, [pc, #436]	@ (8002638 <main+0x364>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002482:	6284      	str	r4, [r0, #40]	@ 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002484:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002488:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800248c:	f44f 7500 	mov.w	r5, #512	@ 0x200
 8002490:	2218      	movs	r2, #24
  hspi5.Init.CRCPolynomial = 10;
 8002492:	f04f 0a0a 	mov.w	sl, #10
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8002496:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800249a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800249e:	4d67      	ldr	r5, [pc, #412]	@ (800263c <main+0x368>)
  hspi5.Init.CRCPolynomial = 10;
 80024a0:	f8c0 a02c 	str.w	sl, [r0, #44]	@ 0x2c
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80024a4:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80024a8:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80024ac:	f00a fefe 	bl	800d2ac <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80024b0:	4a63      	ldr	r2, [pc, #396]	@ (8002640 <main+0x36c>)
  SdramTiming.LoadToActiveDelay = 2;
 80024b2:	970d      	str	r7, [sp, #52]	@ 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80024b4:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80024b8:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80024bc:	2240      	movs	r2, #64	@ 0x40
 80024be:	e9c5 c204 	strd	ip, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80024c2:	f44f 72c0 	mov.w	r2, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80024c6:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80024ca:	f44f 6200 	mov.w	r2, #2048	@ 0x800
  SdramTiming.ExitSelfRefreshDelay = 7;
 80024ce:	2307      	movs	r3, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80024d0:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80024d4:	a90d      	add	r1, sp, #52	@ 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80024d6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80024da:	4628      	mov	r0, r5
  SdramTiming.WriteRecoveryTime = 3;
 80024dc:	e9cd 3810 	strd	r3, r8, [sp, #64]	@ 0x40
  SdramTiming.SelfRefreshTime = 4;
 80024e0:	e9cd 3b0e 	strd	r3, fp, [sp, #56]	@ 0x38
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80024e4:	62aa      	str	r2, [r5, #40]	@ 0x28
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80024e6:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  SdramTiming.RCDDelay = 2;
 80024ea:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80024ee:	f00a fdc1 	bl	800d074 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80024f2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80024f6:	a909      	add	r1, sp, #36	@ 0x24
 80024f8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80024fa:	e9cd 6909 	strd	r6, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80024fe:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
 __IO uint32_t tmpmrd =0;
 8002502:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002504:	f00a fdd6 	bl	800d0b4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8002508:	4630      	mov	r0, r6
 800250a:	f008 fee5 	bl	800b2d8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800250e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002512:	a909      	add	r1, sp, #36	@ 0x24
 8002514:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002516:	e9cd 7909 	strd	r7, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800251a:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800251e:	f00a fdc9 	bl	800d0b4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002522:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002526:	a909      	add	r1, sp, #36	@ 0x24
 8002528:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800252a:	e9cd 8909 	strd	r8, r9, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 800252e:	e9cd b40b 	strd	fp, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002532:	f00a fdbf 	bl	800d0b4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8002536:	f44f 730c 	mov.w	r3, #560	@ 0x230
 800253a:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800253c:	9b08      	ldr	r3, [sp, #32]
 800253e:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002540:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002544:	a909      	add	r1, sp, #36	@ 0x24
 8002546:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002548:	e9cd b909 	strd	fp, r9, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 800254c:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800254e:	f00a fdb1 	bl	800d0b4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8002552:	f240 516a 	movw	r1, #1386	@ 0x56a
 8002556:	4628      	mov	r0, r5
 8002558:	f00a fdca 	bl	800d0f0 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800255c:	2234      	movs	r2, #52	@ 0x34
 800255e:	4621      	mov	r1, r4
 8002560:	eb0d 0002 	add.w	r0, sp, r2
 8002564:	f028 fe17 	bl	802b196 <memset>
  hltdc.Instance = LTDC;
 8002568:	4d36      	ldr	r5, [pc, #216]	@ (8002644 <main+0x370>)
 800256a:	4b37      	ldr	r3, [pc, #220]	@ (8002648 <main+0x374>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800256c:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800256e:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8002572:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8002574:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8002578:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800257a:	f240 1e0d 	movw	lr, #269	@ 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 800257e:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8002582:	f240 1343 	movw	r3, #323	@ 0x143
 8002586:	e9c5 e309 	strd	lr, r3, [r5, #36]	@ 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800258a:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800258c:	f240 1347 	movw	r3, #327	@ 0x147
 8002590:	f240 1817 	movw	r8, #279	@ 0x117
 8002594:	e9c5 830b 	strd	r8, r3, [r5, #44]	@ 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8002598:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 800259c:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 800259e:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80025a2:	f00a f837 	bl	800c614 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80025a6:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.WindowX1 = 240;
 80025a8:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 80025aa:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80025ae:	f44f 6980 	mov.w	r9, #1024	@ 0x400
 80025b2:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80025b4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  pLayerCfg.WindowY0 = 0;
 80025b8:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80025bc:	e9cd 9114 	strd	r9, r1, [sp, #80]	@ 0x50
  pLayerCfg.ImageWidth = 240;
 80025c0:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80025c4:	a90d      	add	r1, sp, #52	@ 0x34
 80025c6:	4622      	mov	r2, r4
 80025c8:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80025ca:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  LcdDrv = &ili9341_drv;
 80025ce:	4d1f      	ldr	r5, [pc, #124]	@ (800264c <main+0x378>)
  pLayerCfg.ImageHeight = 320;
 80025d0:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.WindowX0 = 0;
 80025d2:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80025d4:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 80025d8:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80025dc:	f00a f8e5 	bl	800c7aa <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80025e0:	4b1b      	ldr	r3, [pc, #108]	@ (8002650 <main+0x37c>)
 80025e2:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80025e8:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 80025ea:	4d1a      	ldr	r5, [pc, #104]	@ (8002654 <main+0x380>)
  LcdDrv->DisplayOff();
 80025ec:	68db      	ldr	r3, [r3, #12]
 80025ee:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80025f0:	4b19      	ldr	r3, [pc, #100]	@ (8002658 <main+0x384>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80025f2:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80025f4:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80025f8:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80025fc:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8002600:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
 8002604:	e02a      	b.n	800265c <main+0x388>
 8002606:	bf00      	nop
 8002608:	40023800 	.word	0x40023800
 800260c:	40021000 	.word	0x40021000
 8002610:	20002f8c 	.word	0x20002f8c
 8002614:	40020800 	.word	0x40020800
 8002618:	40020c00 	.word	0x40020c00
 800261c:	40020000 	.word	0x40020000
 8002620:	40021800 	.word	0x40021800
 8002624:	20003020 	.word	0x20003020
 8002628:	40023000 	.word	0x40023000
 800262c:	40005c00 	.word	0x40005c00
 8002630:	000186a0 	.word	0x000186a0
 8002634:	20002e8c 	.word	0x20002e8c
 8002638:	40015000 	.word	0x40015000
 800263c:	20002e58 	.word	0x20002e58
 8002640:	a0000140 	.word	0xa0000140
 8002644:	20002ee4 	.word	0x20002ee4
 8002648:	40016800 	.word	0x40016800
 800264c:	20002dbc 	.word	0x20002dbc
 8002650:	20000014 	.word	0x20000014
 8002654:	20002fe0 	.word	0x20002fe0
 8002658:	4002b000 	.word	0x4002b000
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800265c:	f009 f8e6 	bl	800b82c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8002660:	4631      	mov	r1, r6
 8002662:	4628      	mov	r0, r5
 8002664:	f009 f998 	bl	800b998 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8002668:	f7fe fcde 	bl	8001028 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800266c:	f7fe fcdb 	bl	8001026 <MX_TouchGFX_PreOSInit>
  MX_USART1_UART_Init();
 8002670:	f7ff fe0c 	bl	800228c <MX_USART1_UART_Init>
  osKernelInitialize();
 8002674:	f00b fca4 	bl	800dfc0 <osKernelInitialize>
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 8002678:	4a0f      	ldr	r2, [pc, #60]	@ (80026b8 <main+0x3e4>)
 800267a:	4631      	mov	r1, r6
 800267c:	4650      	mov	r0, sl
 800267e:	f00b fdba 	bl	800e1f6 <osMessageQueueNew>
 8002682:	4b0e      	ldr	r3, [pc, #56]	@ (80026bc <main+0x3e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002684:	4a0e      	ldr	r2, [pc, #56]	@ (80026c0 <main+0x3ec>)
  joystickQueueHandle = osMessageQueueNew(10, sizeof(JoystickCommand_t), &joystickQueue_attributes);
 8002686:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002688:	4621      	mov	r1, r4
 800268a:	480e      	ldr	r0, [pc, #56]	@ (80026c4 <main+0x3f0>)
 800268c:	f00b fcc4 	bl	800e018 <osThreadNew>
 8002690:	4b0d      	ldr	r3, [pc, #52]	@ (80026c8 <main+0x3f4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002692:	4a0e      	ldr	r2, [pc, #56]	@ (80026cc <main+0x3f8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002694:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002696:	4621      	mov	r1, r4
 8002698:	480d      	ldr	r0, [pc, #52]	@ (80026d0 <main+0x3fc>)
 800269a:	f00b fcbd 	bl	800e018 <osThreadNew>
 800269e:	4b0d      	ldr	r3, [pc, #52]	@ (80026d4 <main+0x400>)
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 80026a0:	4a0d      	ldr	r2, [pc, #52]	@ (80026d8 <main+0x404>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80026a2:	6018      	str	r0, [r3, #0]
  joystickTaskHandle = osThreadNew(JoystickTask, NULL, &joystickTask_attributes);
 80026a4:	4621      	mov	r1, r4
 80026a6:	480d      	ldr	r0, [pc, #52]	@ (80026dc <main+0x408>)
 80026a8:	f00b fcb6 	bl	800e018 <osThreadNew>
 80026ac:	4b0c      	ldr	r3, [pc, #48]	@ (80026e0 <main+0x40c>)
 80026ae:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80026b0:	f00b fc98 	bl	800dfe4 <osKernelStart>
  while (1)
 80026b4:	e7fe      	b.n	80026b4 <main+0x3e0>
 80026b6:	bf00      	nop
 80026b8:	0802d400 	.word	0x0802d400
 80026bc:	20002dc0 	.word	0x20002dc0
 80026c0:	0802d460 	.word	0x0802d460
 80026c4:	08002191 	.word	0x08002191
 80026c8:	20002dcc 	.word	0x20002dcc
 80026cc:	0802d43c 	.word	0x0802d43c
 80026d0:	08001037 	.word	0x08001037
 80026d4:	20002dc8 	.word	0x20002dc8
 80026d8:	0802d418 	.word	0x0802d418
 80026dc:	08001fb9 	.word	0x08001fb9
 80026e0:	20002dc4 	.word	0x20002dc4

080026e4 <IOE_Init>:
void IOE_Init(void)
 80026e4:	4770      	bx	lr

080026e6 <IOE_ITConfig>:
void IOE_ITConfig(void)
 80026e6:	4770      	bx	lr

080026e8 <IOE_Write>:
{
 80026e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80026ea:	4b09      	ldr	r3, [pc, #36]	@ (8002710 <IOE_Write+0x28>)
 80026ec:	f88d 2017 	strb.w	r2, [sp, #23]
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	9302      	str	r3, [sp, #8]
 80026f4:	f10d 0217 	add.w	r2, sp, #23
 80026f8:	2301      	movs	r3, #1
 80026fa:	9200      	str	r2, [sp, #0]
 80026fc:	9301      	str	r3, [sp, #4]
 80026fe:	460a      	mov	r2, r1
 8002700:	4601      	mov	r1, r0
 8002702:	4804      	ldr	r0, [pc, #16]	@ (8002714 <IOE_Write+0x2c>)
 8002704:	f009 fd2c 	bl	800c160 <HAL_I2C_Mem_Write>
}
 8002708:	b007      	add	sp, #28
 800270a:	f85d fb04 	ldr.w	pc, [sp], #4
 800270e:	bf00      	nop
 8002710:	20000010 	.word	0x20000010
 8002714:	20002f8c 	.word	0x20002f8c

08002718 <IOE_Read>:
{
 8002718:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800271a:	2300      	movs	r3, #0
 800271c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002720:	4b08      	ldr	r3, [pc, #32]	@ (8002744 <IOE_Read+0x2c>)
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	9302      	str	r3, [sp, #8]
{
 8002726:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002728:	2301      	movs	r3, #1
 800272a:	f10d 0117 	add.w	r1, sp, #23
 800272e:	9100      	str	r1, [sp, #0]
 8002730:	9301      	str	r3, [sp, #4]
 8002732:	4601      	mov	r1, r0
 8002734:	4804      	ldr	r0, [pc, #16]	@ (8002748 <IOE_Read+0x30>)
 8002736:	f009 fda3 	bl	800c280 <HAL_I2C_Mem_Read>
}
 800273a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800273e:	b007      	add	sp, #28
 8002740:	f85d fb04 	ldr.w	pc, [sp], #4
 8002744:	20000010 	.word	0x20000010
 8002748:	20002f8c 	.word	0x20002f8c

0800274c <IOE_ReadMultiple>:
{
 800274c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800274e:	4c08      	ldr	r4, [pc, #32]	@ (8002770 <IOE_ReadMultiple+0x24>)
 8002750:	6824      	ldr	r4, [r4, #0]
 8002752:	9200      	str	r2, [sp, #0]
 8002754:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002758:	460a      	mov	r2, r1
 800275a:	2301      	movs	r3, #1
 800275c:	4601      	mov	r1, r0
 800275e:	4805      	ldr	r0, [pc, #20]	@ (8002774 <IOE_ReadMultiple+0x28>)
 8002760:	f009 fd8e 	bl	800c280 <HAL_I2C_Mem_Read>
}
 8002764:	3800      	subs	r0, #0
 8002766:	bf18      	it	ne
 8002768:	2001      	movne	r0, #1
 800276a:	b004      	add	sp, #16
 800276c:	bd10      	pop	{r4, pc}
 800276e:	bf00      	nop
 8002770:	20000010 	.word	0x20000010
 8002774:	20002f8c 	.word	0x20002f8c

08002778 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002778:	f008 bdae 	b.w	800b2d8 <HAL_Delay>

0800277c <LCD_IO_Init>:
{
 800277c:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800277e:	4c06      	ldr	r4, [pc, #24]	@ (8002798 <LCD_IO_Init+0x1c>)
 8002780:	2200      	movs	r2, #0
 8002782:	4620      	mov	r0, r4
 8002784:	2104      	movs	r1, #4
 8002786:	f009 fa35 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800278a:	4620      	mov	r0, r4
 800278c:	2201      	movs	r2, #1
}
 800278e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002792:	2104      	movs	r1, #4
 8002794:	f009 ba2e 	b.w	800bbf4 <HAL_GPIO_WritePin>
 8002798:	40020800 	.word	0x40020800

0800279c <LCD_IO_WriteData>:
{
 800279c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800279e:	4d0b      	ldr	r5, [pc, #44]	@ (80027cc <LCD_IO_WriteData+0x30>)
{
 80027a0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80027a2:	2201      	movs	r2, #1
 80027a4:	480a      	ldr	r0, [pc, #40]	@ (80027d0 <LCD_IO_WriteData+0x34>)
 80027a6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027aa:	f009 fa23 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80027ae:	2200      	movs	r2, #0
 80027b0:	2104      	movs	r1, #4
 80027b2:	4628      	mov	r0, r5
 80027b4:	f009 fa1e 	bl	800bbf4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80027b8:	4620      	mov	r0, r4
 80027ba:	f7ff fcd7 	bl	800216c <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80027be:	4628      	mov	r0, r5
 80027c0:	2201      	movs	r2, #1
}
 80027c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80027c6:	2104      	movs	r1, #4
 80027c8:	f009 ba14 	b.w	800bbf4 <HAL_GPIO_WritePin>
 80027cc:	40020800 	.word	0x40020800
 80027d0:	40020c00 	.word	0x40020c00

080027d4 <LCD_IO_WriteReg>:
{
 80027d4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80027d6:	4d0b      	ldr	r5, [pc, #44]	@ (8002804 <LCD_IO_WriteReg+0x30>)
{
 80027d8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80027da:	2200      	movs	r2, #0
 80027dc:	480a      	ldr	r0, [pc, #40]	@ (8002808 <LCD_IO_WriteReg+0x34>)
 80027de:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027e2:	f009 fa07 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80027e6:	2200      	movs	r2, #0
 80027e8:	2104      	movs	r1, #4
 80027ea:	4628      	mov	r0, r5
 80027ec:	f009 fa02 	bl	800bbf4 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80027f0:	4620      	mov	r0, r4
 80027f2:	f7ff fcbb 	bl	800216c <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80027f6:	4628      	mov	r0, r5
 80027f8:	2201      	movs	r2, #1
}
 80027fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80027fe:	2104      	movs	r1, #4
 8002800:	f009 b9f8 	b.w	800bbf4 <HAL_GPIO_WritePin>
 8002804:	40020800 	.word	0x40020800
 8002808:	40020c00 	.word	0x40020c00

0800280c <LCD_IO_ReadData>:
{
 800280c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800280e:	4e14      	ldr	r6, [pc, #80]	@ (8002860 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002810:	4f14      	ldr	r7, [pc, #80]	@ (8002864 <LCD_IO_ReadData+0x58>)
{
 8002812:	4605      	mov	r5, r0
 8002814:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002816:	4630      	mov	r0, r6
 8002818:	2200      	movs	r2, #0
 800281a:	2104      	movs	r1, #4
 800281c:	f009 f9ea 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002820:	2200      	movs	r2, #0
 8002822:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002826:	4638      	mov	r0, r7
 8002828:	f009 f9e4 	bl	800bbf4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800282c:	4628      	mov	r0, r5
 800282e:	f7ff fc9d 	bl	800216c <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002832:	4b0d      	ldr	r3, [pc, #52]	@ (8002868 <LCD_IO_ReadData+0x5c>)
 8002834:	480d      	ldr	r0, [pc, #52]	@ (800286c <LCD_IO_ReadData+0x60>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	4622      	mov	r2, r4
 800283a:	a901      	add	r1, sp, #4
 800283c:	f00a ff3e 	bl	800d6bc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002840:	4638      	mov	r0, r7
 8002842:	2201      	movs	r2, #1
 8002844:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8002848:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800284a:	f009 f9d3 	bl	800bbf4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800284e:	4630      	mov	r0, r6
 8002850:	2201      	movs	r2, #1
 8002852:	2104      	movs	r1, #4
 8002854:	f009 f9ce 	bl	800bbf4 <HAL_GPIO_WritePin>
}
 8002858:	4620      	mov	r0, r4
 800285a:	b003      	add	sp, #12
 800285c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800285e:	bf00      	nop
 8002860:	40020800 	.word	0x40020800
 8002864:	40020c00 	.word	0x40020c00
 8002868:	2000000c 	.word	0x2000000c
 800286c:	20002e8c 	.word	0x20002e8c

08002870 <LCD_Delay>:
  HAL_Delay(Delay);
 8002870:	f008 bd32 	b.w	800b2d8 <HAL_Delay>

08002874 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002874:	6802      	ldr	r2, [r0, #0]
 8002876:	4b03      	ldr	r3, [pc, #12]	@ (8002884 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002878:	429a      	cmp	r2, r3
 800287a:	d101      	bne.n	8002880 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800287c:	f008 bd1a 	b.w	800b2b4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002880:	4770      	bx	lr
 8002882:	bf00      	nop
 8002884:	40001000 	.word	0x40001000

08002888 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002888:	4770      	bx	lr
	...

0800288c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800288c:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800288e:	4b0e      	ldr	r3, [pc, #56]	@ (80028c8 <HAL_MspInit+0x3c>)
 8002890:	2200      	movs	r2, #0
 8002892:	9200      	str	r2, [sp, #0]
 8002894:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002896:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800289a:	6459      	str	r1, [r3, #68]	@ 0x44
 800289c:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800289e:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80028a2:	9100      	str	r1, [sp, #0]
 80028a4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028a6:	9201      	str	r2, [sp, #4]
 80028a8:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80028aa:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80028ae:	6419      	str	r1, [r3, #64]	@ 0x40
 80028b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028b2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80028b6:	9301      	str	r3, [sp, #4]
 80028b8:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80028ba:	210f      	movs	r1, #15
 80028bc:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80028c0:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80028c2:	f008 bf63 	b.w	800b78c <HAL_NVIC_SetPriority>
 80028c6:	bf00      	nop
 80028c8:	40023800 	.word	0x40023800

080028cc <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80028cc:	6802      	ldr	r2, [r0, #0]
 80028ce:	4b09      	ldr	r3, [pc, #36]	@ (80028f4 <HAL_CRC_MspInit+0x28>)
 80028d0:	429a      	cmp	r2, r3
{
 80028d2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80028d4:	d10b      	bne.n	80028ee <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80028d6:	2300      	movs	r3, #0
 80028d8:	9301      	str	r3, [sp, #4]
 80028da:	4b07      	ldr	r3, [pc, #28]	@ (80028f8 <HAL_CRC_MspInit+0x2c>)
 80028dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80028de:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80028e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80028e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028e6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80028ea:	9301      	str	r3, [sp, #4]
 80028ec:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 80028ee:	b002      	add	sp, #8
 80028f0:	4770      	bx	lr
 80028f2:	bf00      	nop
 80028f4:	40023000 	.word	0x40023000
 80028f8:	40023800 	.word	0x40023800

080028fc <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80028fc:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80028fe:	4b0f      	ldr	r3, [pc, #60]	@ (800293c <HAL_DMA2D_MspInit+0x40>)
 8002900:	6802      	ldr	r2, [r0, #0]
 8002902:	429a      	cmp	r2, r3
 8002904:	d116      	bne.n	8002934 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002906:	2200      	movs	r2, #0
 8002908:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 800290c:	9201      	str	r2, [sp, #4]
 800290e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002910:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8002914:	6319      	str	r1, [r3, #48]	@ 0x30
 8002916:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002918:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800291c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800291e:	2105      	movs	r1, #5
 8002920:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002922:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002924:	f008 ff32 	bl	800b78c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002928:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
 800292a:	b003      	add	sp, #12
 800292c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002930:	f008 bf5e 	b.w	800b7f0 <HAL_NVIC_EnableIRQ>
}
 8002934:	b003      	add	sp, #12
 8002936:	f85d fb04 	ldr.w	pc, [sp], #4
 800293a:	bf00      	nop
 800293c:	4002b000 	.word	0x4002b000

08002940 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002940:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002944:	4604      	mov	r4, r0
 8002946:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002948:	2214      	movs	r2, #20
 800294a:	2100      	movs	r1, #0
 800294c:	a803      	add	r0, sp, #12
 800294e:	f028 fc22 	bl	802b196 <memset>
  if(hi2c->Instance==I2C3)
 8002952:	6822      	ldr	r2, [r4, #0]
 8002954:	4b24      	ldr	r3, [pc, #144]	@ (80029e8 <HAL_I2C_MspInit+0xa8>)
 8002956:	429a      	cmp	r2, r3
 8002958:	d143      	bne.n	80029e2 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800295a:	4c24      	ldr	r4, [pc, #144]	@ (80029ec <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800295c:	4824      	ldr	r0, [pc, #144]	@ (80029f0 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800295e:	2500      	movs	r5, #0
 8002960:	9500      	str	r5, [sp, #0]
 8002962:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002964:	f043 0304 	orr.w	r3, r3, #4
 8002968:	6323      	str	r3, [r4, #48]	@ 0x30
 800296a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800296c:	f003 0304 	and.w	r3, r3, #4
 8002970:	9300      	str	r3, [sp, #0]
 8002972:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002974:	9501      	str	r5, [sp, #4]
 8002976:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002978:	f043 0301 	orr.w	r3, r3, #1
 800297c:	6323      	str	r3, [r4, #48]	@ 0x30
 800297e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002980:	f003 0301 	and.w	r3, r3, #1
 8002984:	9301      	str	r3, [sp, #4]
 8002986:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002988:	f04f 0912 	mov.w	r9, #18
 800298c:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002990:	f04f 0801 	mov.w	r8, #1
 8002994:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002996:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002998:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800299a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800299e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80029a2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80029a4:	f009 f83c 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80029a8:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029ac:	4811      	ldr	r0, [pc, #68]	@ (80029f4 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80029ae:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029b0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80029b2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029b6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029ba:	f009 f831 	bl	800ba20 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80029be:	9502      	str	r5, [sp, #8]
 80029c0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80029c2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80029c6:	6423      	str	r3, [r4, #64]	@ 0x40
 80029c8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80029ca:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80029ce:	9302      	str	r3, [sp, #8]
 80029d0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80029d2:	6a23      	ldr	r3, [r4, #32]
 80029d4:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80029d8:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80029da:	6a23      	ldr	r3, [r4, #32]
 80029dc:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80029e0:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */

  }

}
 80029e2:	b009      	add	sp, #36	@ 0x24
 80029e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80029e8:	40005c00 	.word	0x40005c00
 80029ec:	40023800 	.word	0x40023800
 80029f0:	40020800 	.word	0x40020800
 80029f4:	40020000 	.word	0x40020000

080029f8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80029f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80029fa:	b099      	sub	sp, #100	@ 0x64
 80029fc:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029fe:	2214      	movs	r2, #20
 8002a00:	2100      	movs	r1, #0
 8002a02:	a807      	add	r0, sp, #28
 8002a04:	f028 fbc7 	bl	802b196 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002a08:	2230      	movs	r2, #48	@ 0x30
 8002a0a:	eb0d 0002 	add.w	r0, sp, r2
 8002a0e:	2100      	movs	r1, #0
 8002a10:	f028 fbc1 	bl	802b196 <memset>
  if(hltdc->Instance==LTDC)
 8002a14:	6822      	ldr	r2, [r4, #0]
 8002a16:	4b5e      	ldr	r3, [pc, #376]	@ (8002b90 <HAL_LTDC_MspInit+0x198>)
 8002a18:	429a      	cmp	r2, r3
 8002a1a:	f040 80b7 	bne.w	8002b8c <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002a1e:	2308      	movs	r3, #8
 8002a20:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002a22:	23c0      	movs	r3, #192	@ 0xc0
 8002a24:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002a26:	2304      	movs	r3, #4
 8002a28:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002a2a:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002a2c:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8002a30:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002a32:	f00a f9f3 	bl	800ce1c <HAL_RCCEx_PeriphCLKConfig>
 8002a36:	b108      	cbz	r0, 8002a3c <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002a38:	f7ff ff26 	bl	8002888 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002a3c:	4b55      	ldr	r3, [pc, #340]	@ (8002b94 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a3e:	4856      	ldr	r0, [pc, #344]	@ (8002b98 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002a40:	2400      	movs	r4, #0
 8002a42:	9400      	str	r4, [sp, #0]
 8002a44:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002a46:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002a4a:	645a      	str	r2, [r3, #68]	@ 0x44
 8002a4c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002a4e:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002a52:	9200      	str	r2, [sp, #0]
 8002a54:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002a56:	9401      	str	r4, [sp, #4]
 8002a58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a5a:	f042 0220 	orr.w	r2, r2, #32
 8002a5e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a62:	f002 0220 	and.w	r2, r2, #32
 8002a66:	9201      	str	r2, [sp, #4]
 8002a68:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002a6a:	9402      	str	r4, [sp, #8]
 8002a6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a6e:	f042 0201 	orr.w	r2, r2, #1
 8002a72:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a76:	f002 0201 	and.w	r2, r2, #1
 8002a7a:	9202      	str	r2, [sp, #8]
 8002a7c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a7e:	9403      	str	r4, [sp, #12]
 8002a80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a82:	f042 0202 	orr.w	r2, r2, #2
 8002a86:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a88:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a8a:	f002 0202 	and.w	r2, r2, #2
 8002a8e:	9203      	str	r2, [sp, #12]
 8002a90:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002a92:	9404      	str	r4, [sp, #16]
 8002a94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a96:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002a9a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002a9e:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002aa2:	9204      	str	r2, [sp, #16]
 8002aa4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002aa6:	9405      	str	r4, [sp, #20]
 8002aa8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002aaa:	f042 0204 	orr.w	r2, r2, #4
 8002aae:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ab0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002ab2:	f002 0204 	and.w	r2, r2, #4
 8002ab6:	9205      	str	r2, [sp, #20]
 8002ab8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002aba:	9406      	str	r4, [sp, #24]
 8002abc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002abe:	f042 0208 	orr.w	r2, r2, #8
 8002ac2:	631a      	str	r2, [r3, #48]	@ 0x30
 8002ac4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ac6:	f003 0308 	and.w	r3, r3, #8
 8002aca:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002acc:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002ace:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002ad0:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002ad2:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ad4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002ad8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ada:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002ade:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002ae2:	f008 ff9d 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002ae6:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002aea:	482c      	ldr	r0, [pc, #176]	@ (8002b9c <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002aec:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002aee:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002af0:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002af4:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002af6:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002afa:	f008 ff91 	bl	800ba20 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002afe:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b00:	4827      	ldr	r0, [pc, #156]	@ (8002ba0 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002b02:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b04:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b06:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b0a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b0e:	f008 ff87 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002b12:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b16:	4822      	ldr	r0, [pc, #136]	@ (8002ba0 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b18:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b1a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b1c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b20:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b24:	f008 ff7c 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002b28:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b2c:	481d      	ldr	r0, [pc, #116]	@ (8002ba4 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b2e:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b30:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b32:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b36:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b3a:	f008 ff71 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002b3e:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b40:	4819      	ldr	r0, [pc, #100]	@ (8002ba8 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b42:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b44:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b46:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b4a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002b4e:	f008 ff67 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002b52:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002b54:	4815      	ldr	r0, [pc, #84]	@ (8002bac <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b56:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002b58:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b5a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b5e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002b62:	f008 ff5d 	bl	800ba20 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002b66:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b6a:	480e      	ldr	r0, [pc, #56]	@ (8002ba4 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002b6c:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b6e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b70:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002b74:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002b78:	f008 ff52 	bl	800ba20 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002b7c:	2058      	movs	r0, #88	@ 0x58
 8002b7e:	4622      	mov	r2, r4
 8002b80:	2105      	movs	r1, #5
 8002b82:	f008 fe03 	bl	800b78c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002b86:	2058      	movs	r0, #88	@ 0x58
 8002b88:	f008 fe32 	bl	800b7f0 <HAL_NVIC_EnableIRQ>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002b8c:	b019      	add	sp, #100	@ 0x64
 8002b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b90:	40016800 	.word	0x40016800
 8002b94:	40023800 	.word	0x40023800
 8002b98:	40021400 	.word	0x40021400
 8002b9c:	40020000 	.word	0x40020000
 8002ba0:	40020400 	.word	0x40020400
 8002ba4:	40021800 	.word	0x40021800
 8002ba8:	40020800 	.word	0x40020800
 8002bac:	40020c00 	.word	0x40020c00

08002bb0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002bb0:	b510      	push	{r4, lr}
 8002bb2:	4604      	mov	r4, r0
 8002bb4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002bb6:	2214      	movs	r2, #20
 8002bb8:	2100      	movs	r1, #0
 8002bba:	a803      	add	r0, sp, #12
 8002bbc:	f028 faeb 	bl	802b196 <memset>
  if(hspi->Instance==SPI5)
 8002bc0:	6822      	ldr	r2, [r4, #0]
 8002bc2:	4b14      	ldr	r3, [pc, #80]	@ (8002c14 <HAL_SPI_MspInit+0x64>)
 8002bc4:	429a      	cmp	r2, r3
 8002bc6:	d123      	bne.n	8002c10 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002bc8:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002bcc:	2100      	movs	r1, #0
 8002bce:	9101      	str	r1, [sp, #4]
 8002bd0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002bd2:	4811      	ldr	r0, [pc, #68]	@ (8002c18 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002bd4:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8002bd8:	645a      	str	r2, [r3, #68]	@ 0x44
 8002bda:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002bdc:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002be0:	9201      	str	r2, [sp, #4]
 8002be2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002be4:	9102      	str	r1, [sp, #8]
 8002be6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002be8:	f042 0220 	orr.w	r2, r2, #32
 8002bec:	631a      	str	r2, [r3, #48]	@ 0x30
 8002bee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002bf0:	f003 0320 	and.w	r3, r3, #32
 8002bf4:	9302      	str	r3, [sp, #8]
 8002bf6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bf8:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002bfc:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002bfe:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c00:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002c04:	2305      	movs	r3, #5
 8002c06:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c0a:	a903      	add	r1, sp, #12
 8002c0c:	f008 ff08 	bl	800ba20 <HAL_GPIO_Init>

  /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002c10:	b008      	add	sp, #32
 8002c12:	bd10      	pop	{r4, pc}
 8002c14:	40015000 	.word	0x40015000
 8002c18:	40021400 	.word	0x40021400

08002c1c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c20:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002c22:	2300      	movs	r3, #0
 8002c24:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002c26:	4b2b      	ldr	r3, [pc, #172]	@ (8002cd4 <HAL_SDRAM_MspInit+0xb8>)
 8002c28:	681c      	ldr	r4, [r3, #0]
 8002c2a:	2c00      	cmp	r4, #0
 8002c2c:	d14f      	bne.n	8002cce <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002c2e:	f04f 0801 	mov.w	r8, #1
 8002c32:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c36:	4b28      	ldr	r3, [pc, #160]	@ (8002cd8 <HAL_SDRAM_MspInit+0xbc>)
 8002c38:	9400      	str	r4, [sp, #0]
 8002c3a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c3c:	4827      	ldr	r0, [pc, #156]	@ (8002cdc <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c3e:	ea42 0208 	orr.w	r2, r2, r8
 8002c42:	639a      	str	r2, [r3, #56]	@ 0x38
 8002c44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c46:	ea03 0308 	and.w	r3, r3, r8
 8002c4a:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c4c:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c4e:	2603      	movs	r6, #3
 8002c50:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002c52:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c54:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c56:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8002c5a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c5e:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c62:	f008 fedd 	bl	800ba20 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c66:	481e      	ldr	r0, [pc, #120]	@ (8002ce0 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c68:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c6a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c6c:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c70:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c74:	f008 fed4 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002c78:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002c7c:	4819      	ldr	r0, [pc, #100]	@ (8002ce4 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c7e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002c80:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c82:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c86:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002c8a:	f008 fec9 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002c8e:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002c92:	4815      	ldr	r0, [pc, #84]	@ (8002ce8 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002c94:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002c96:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c98:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c9c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ca0:	f008 febe 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002ca4:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ca8:	4810      	ldr	r0, [pc, #64]	@ (8002cec <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002caa:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cac:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cae:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cb2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002cb6:	f008 feb3 	bl	800ba20 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002cba:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002cbc:	480c      	ldr	r0, [pc, #48]	@ (8002cf0 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002cbe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002cc0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002cc6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002cca:	f008 fea9 	bl	800ba20 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002cce:	b006      	add	sp, #24
 8002cd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002cd4:	20003028 	.word	0x20003028
 8002cd8:	40023800 	.word	0x40023800
 8002cdc:	40021400 	.word	0x40021400
 8002ce0:	40020800 	.word	0x40020800
 8002ce4:	40021800 	.word	0x40021800
 8002ce8:	40021000 	.word	0x40021000
 8002cec:	40020c00 	.word	0x40020c00
 8002cf0:	40020400 	.word	0x40020400

08002cf4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002cf4:	b570      	push	{r4, r5, r6, lr}
 8002cf6:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	9302      	str	r3, [sp, #8]
 8002cfc:	4b20      	ldr	r3, [pc, #128]	@ (8002d80 <HAL_InitTick+0x8c>)
 8002cfe:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002d00:	f042 0210 	orr.w	r2, r2, #16
 8002d04:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d08:	f003 0310 	and.w	r3, r3, #16
 8002d0c:	9302      	str	r3, [sp, #8]
{
 8002d0e:	4605      	mov	r5, r0

/* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002d10:	a901      	add	r1, sp, #4
 8002d12:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002d14:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002d16:	f00a f863 	bl	800cde0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002d1a:	9b06      	ldr	r3, [sp, #24]
 8002d1c:	bb4b      	cbnz	r3, 8002d72 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002d1e:	f00a f83f 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002d22:	4e18      	ldr	r6, [pc, #96]	@ (8002d84 <HAL_InitTick+0x90>)
 8002d24:	4b18      	ldr	r3, [pc, #96]	@ (8002d88 <HAL_InitTick+0x94>)
 8002d26:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002d28:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002d2c:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002d2e:	4b17      	ldr	r3, [pc, #92]	@ (8002d8c <HAL_InitTick+0x98>)
 8002d30:	fbb0 f3f3 	udiv	r3, r0, r3
 8002d34:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002d36:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002d38:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002d3a:	2300      	movs	r3, #0
 8002d3c:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002d3e:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002d40:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002d42:	f00a fe8b 	bl	800da5c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002d46:	4604      	mov	r4, r0
 8002d48:	b980      	cbnz	r0, 8002d6c <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002d4a:	4630      	mov	r0, r6
 8002d4c:	f00a fd5c 	bl	800d808 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002d50:	4604      	mov	r4, r0
 8002d52:	b958      	cbnz	r0, 8002d6c <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002d54:	2036      	movs	r0, #54	@ 0x36
 8002d56:	f008 fd4b 	bl	800b7f0 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002d5a:	2d0f      	cmp	r5, #15
 8002d5c:	d80d      	bhi.n	8002d7a <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002d5e:	4622      	mov	r2, r4
 8002d60:	4629      	mov	r1, r5
 8002d62:	2036      	movs	r0, #54	@ 0x36
 8002d64:	f008 fd12 	bl	800b78c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002d68:	4b09      	ldr	r3, [pc, #36]	@ (8002d90 <HAL_InitTick+0x9c>)
 8002d6a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002d6c:	4620      	mov	r0, r4
 8002d6e:	b008      	add	sp, #32
 8002d70:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002d72:	f00a f815 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 8002d76:	0040      	lsls	r0, r0, #1
 8002d78:	e7d3      	b.n	8002d22 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002d7a:	2401      	movs	r4, #1
 8002d7c:	e7f6      	b.n	8002d6c <HAL_InitTick+0x78>
 8002d7e:	bf00      	nop
 8002d80:	40023800 	.word	0x40023800
 8002d84:	2000302c 	.word	0x2000302c
 8002d88:	40001000 	.word	0x40001000
 8002d8c:	000f4240 	.word	0x000f4240
 8002d90:	2000007c 	.word	0x2000007c

08002d94 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002d94:	4770      	bx	lr

08002d96 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002d96:	e7fe      	b.n	8002d96 <HardFault_Handler>

08002d98 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002d98:	e7fe      	b.n	8002d98 <MemManage_Handler>

08002d9a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002d9a:	e7fe      	b.n	8002d9a <BusFault_Handler>

08002d9c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002d9c:	e7fe      	b.n	8002d9c <UsageFault_Handler>

08002d9e <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002d9e:	4770      	bx	lr

08002da0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002da0:	4801      	ldr	r0, [pc, #4]	@ (8002da8 <TIM6_DAC_IRQHandler+0x8>)
 8002da2:	f00a bd6f 	b.w	800d884 <HAL_TIM_IRQHandler>
 8002da6:	bf00      	nop
 8002da8:	2000302c 	.word	0x2000302c

08002dac <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002dac:	4801      	ldr	r0, [pc, #4]	@ (8002db4 <LTDC_IRQHandler+0x8>)
 8002dae:	f009 bc9f 	b.w	800c6f0 <HAL_LTDC_IRQHandler>
 8002db2:	bf00      	nop
 8002db4:	20002ee4 	.word	0x20002ee4

08002db8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002db8:	4801      	ldr	r0, [pc, #4]	@ (8002dc0 <DMA2D_IRQHandler+0x8>)
 8002dba:	f008 bd63 	b.w	800b884 <HAL_DMA2D_IRQHandler>
 8002dbe:	bf00      	nop
 8002dc0:	20002fe0 	.word	0x20002fe0

08002dc4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002dc4:	2001      	movs	r0, #1
 8002dc6:	4770      	bx	lr

08002dc8 <_kill>:

int _kill(int pid, int sig)
{
 8002dc8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002dca:	f028 fa87 	bl	802b2dc <__errno>
 8002dce:	2316      	movs	r3, #22
 8002dd0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002dd2:	f04f 30ff 	mov.w	r0, #4294967295
 8002dd6:	bd08      	pop	{r3, pc}

08002dd8 <_exit>:

void _exit (int status)
{
 8002dd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002dda:	f028 fa7f 	bl	802b2dc <__errno>
 8002dde:	2316      	movs	r3, #22
 8002de0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002de2:	e7fe      	b.n	8002de2 <_exit+0xa>

08002de4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002de4:	b570      	push	{r4, r5, r6, lr}
 8002de6:	460d      	mov	r5, r1
 8002de8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002dea:	460e      	mov	r6, r1
 8002dec:	1b73      	subs	r3, r6, r5
 8002dee:	429c      	cmp	r4, r3
 8002df0:	dc01      	bgt.n	8002df6 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002df2:	4620      	mov	r0, r4
 8002df4:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002df6:	f3af 8000 	nop.w
 8002dfa:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002dfe:	e7f5      	b.n	8002dec <_read+0x8>

08002e00 <_close>:
//}

int _close(int file)
{
	return -1;
}
 8002e00:	f04f 30ff 	mov.w	r0, #4294967295
 8002e04:	4770      	bx	lr

08002e06 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002e06:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002e0a:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002e0c:	2000      	movs	r0, #0
 8002e0e:	4770      	bx	lr

08002e10 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002e10:	2001      	movs	r0, #1
 8002e12:	4770      	bx	lr

08002e14 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002e14:	2000      	movs	r0, #0
 8002e16:	4770      	bx	lr

08002e18 <_write>:
{
	errno = ENOMEM;
	return -1;
}
__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002e18:	b510      	push	{r4, lr}
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 8002e1a:	f04f 33ff 	mov.w	r3, #4294967295
{
 8002e1e:	4614      	mov	r4, r2
    HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, HAL_MAX_DELAY);
 8002e20:	4802      	ldr	r0, [pc, #8]	@ (8002e2c <_write+0x14>)
 8002e22:	b292      	uxth	r2, r2
 8002e24:	f00a ffcb 	bl	800ddbe <HAL_UART_Transmit>
    return len;
}
 8002e28:	4620      	mov	r0, r4
 8002e2a:	bd10      	pop	{r4, pc}
 8002e2c:	20002dd0 	.word	0x20002dd0

08002e30 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002e30:	4a0a      	ldr	r2, [pc, #40]	@ (8002e5c <_sbrk+0x2c>)
 8002e32:	6811      	ldr	r1, [r2, #0]
{
 8002e34:	b508      	push	{r3, lr}
 8002e36:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002e38:	b909      	cbnz	r1, 8002e3e <_sbrk+0xe>
		heap_end = &end;
 8002e3a:	4909      	ldr	r1, [pc, #36]	@ (8002e60 <_sbrk+0x30>)
 8002e3c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002e3e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002e40:	4669      	mov	r1, sp
 8002e42:	4403      	add	r3, r0
 8002e44:	428b      	cmp	r3, r1
 8002e46:	d906      	bls.n	8002e56 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002e48:	f028 fa48 	bl	802b2dc <__errno>
 8002e4c:	230c      	movs	r3, #12
 8002e4e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002e50:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002e54:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002e56:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002e58:	e7fc      	b.n	8002e54 <_sbrk+0x24>
 8002e5a:	bf00      	nop
 8002e5c:	20003074 	.word	0x20003074
 8002e60:	20014ca0 	.word	0x20014ca0

08002e64 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_08 = 5; // verdana_20_4bpp
    static const touchgfx::FontId TYPOGRAPHY_09 = 5; // verdana_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002e64:	4770      	bx	lr

08002e66 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002e66:	b508      	push	{r3, lr}
    switch (typography)
 8002e68:	290c      	cmp	r1, #12
 8002e6a:	d824      	bhi.n	8002eb6 <_ZN23ApplicationFontProvider7getFontEt+0x50>
 8002e6c:	e8df f001 	tbb	[pc, r1]
 8002e70:	130f0b07 	.word	0x130f0b07
 8002e74:	1f1f1f17 	.word	0x1f1f1f17
 8002e78:	1f1f1b1f 	.word	0x1f1f1b1f
 8002e7c:	1f          	.byte	0x1f
 8002e7d:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // verdana_17_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002e7e:	f004 fabd 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002e82:	6800      	ldr	r0, [r0, #0]
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
    default:
        return 0;
    }
}
 8002e84:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002e86:	f004 fab9 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002e8a:	6840      	ldr	r0, [r0, #4]
 8002e8c:	e7fa      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002e8e:	f004 fab5 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002e92:	6880      	ldr	r0, [r0, #8]
 8002e94:	e7f6      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002e96:	f004 fab1 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002e9a:	68c0      	ldr	r0, [r0, #12]
 8002e9c:	e7f2      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002e9e:	f004 faad 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002ea2:	6900      	ldr	r0, [r0, #16]
 8002ea4:	e7ee      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 8002ea6:	f004 faa9 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002eaa:	6980      	ldr	r0, [r0, #24]
 8002eac:	e7ea      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002eae:	f004 faa5 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 8002eb2:	6940      	ldr	r0, [r0, #20]
 8002eb4:	e7e6      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>
    switch (typography)
 8002eb6:	2000      	movs	r0, #0
 8002eb8:	e7e4      	b.n	8002e84 <_ZN23ApplicationFontProvider7getFontEt+0x1e>

08002eba <_ZN23ApplicationFontProviderD0Ev>:
 8002eba:	b510      	push	{r4, lr}
 8002ebc:	2104      	movs	r1, #4
 8002ebe:	4604      	mov	r4, r0
 8002ec0:	f026 ff12 	bl	8029ce8 <_ZdlPvj>
 8002ec4:	4620      	mov	r0, r4
 8002ec6:	bd10      	pop	{r4, pc}

08002ec8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002ec8:	4800      	ldr	r0, [pc, #0]	@ (8002ecc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002eca:	4770      	bx	lr
 8002ecc:	0802d498 	.word	0x0802d498

08002ed0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002ed0:	2005      	movs	r0, #5
 8002ed2:	4770      	bx	lr

08002ed4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002ed4:	b513      	push	{r0, r1, r4, lr}
 8002ed6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002ed8:	b151      	cbz	r1, 8002ef0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002eda:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002edc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002ede:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002ee2:	aa01      	add	r2, sp, #4
 8002ee4:	689c      	ldr	r4, [r3, #8]
 8002ee6:	f10d 0303 	add.w	r3, sp, #3
 8002eea:	47a0      	blx	r4
        return glyph;
    }
 8002eec:	b002      	add	sp, #8
 8002eee:	bd10      	pop	{r4, pc}
            return 0;
 8002ef0:	4608      	mov	r0, r1
 8002ef2:	e7fb      	b.n	8002eec <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002ef4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002ef4:	89c0      	ldrh	r0, [r0, #14]
 8002ef6:	4770      	bx	lr

08002ef8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002ef8:	8a00      	ldrh	r0, [r0, #16]
 8002efa:	4770      	bx	lr

08002efc <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002efc:	88c0      	ldrh	r0, [r0, #6]
 8002efe:	4770      	bx	lr

08002f00 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002f00:	8880      	ldrh	r0, [r0, #4]
 8002f02:	4770      	bx	lr

08002f04 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002f04:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f06:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002f0a:	4770      	bx	lr

08002f0c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002f0c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002f0e:	09c0      	lsrs	r0, r0, #7
 8002f10:	4770      	bx	lr

08002f12 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002f12:	2000      	movs	r0, #0
 8002f14:	4770      	bx	lr
	...

08002f18 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002f18:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f20 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002f1c:	4770      	bx	lr
 8002f1e:	bf00      	nop
 8002f20:	00000000 	.word	0x00000000

08002f24 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002f24:	4770      	bx	lr

08002f26 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002f26:	4770      	bx	lr

08002f28 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002f28:	4770      	bx	lr

08002f2a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002f2a:	4770      	bx	lr

08002f2c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002f2c:	4770      	bx	lr

08002f2e <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002f2e:	4770      	bx	lr

08002f30 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002f30:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002f32:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002f34:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f36:	466d      	mov	r5, sp
        rect.width = width;
 8002f38:	8101      	strh	r1, [r0, #8]
 8002f3a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002f3e:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8002f40:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f42:	4628      	mov	r0, r5
 8002f44:	4798      	blx	r3
 8002f46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f4a:	343c      	adds	r4, #60	@ 0x3c
 8002f4c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002f50:	b005      	add	sp, #20
 8002f52:	bd30      	pop	{r4, r5, pc}

08002f54 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002f54:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002f56:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 8002f58:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002f5a:	466d      	mov	r5, sp
        rect.height = height;
 8002f5c:	8141      	strh	r1, [r0, #10]
 8002f5e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002f62:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 8002f64:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002f66:	4628      	mov	r0, r5
 8002f68:	4798      	blx	r3
 8002f6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002f6e:	343c      	adds	r4, #60	@ 0x3c
 8002f70:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002f74:	b005      	add	sp, #20
 8002f76:	bd30      	pop	{r4, r5, pc}

08002f78 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002f78:	2200      	movs	r2, #0
 8002f7a:	8002      	strh	r2, [r0, #0]
 8002f7c:	8042      	strh	r2, [r0, #2]
 8002f7e:	8082      	strh	r2, [r0, #4]
 8002f80:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002f82:	4770      	bx	lr

08002f84 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002f84:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 8002f88:	4770      	bx	lr

08002f8a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002f8a:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002f8c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002f8e:	4604      	mov	r4, r0
        setX(x);
 8002f90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002f92:	4615      	mov	r5, r2
        setX(x);
 8002f94:	4798      	blx	r3
        setBaselineY(baselineY);
 8002f96:	6823      	ldr	r3, [r4, #0]
 8002f98:	4629      	mov	r1, r5
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 8002f9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002fa2:	4718      	bx	r3

08002fa4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002fa4:	2000      	movs	r0, #0
 8002fa6:	4770      	bx	lr

08002fa8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002fa8:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 8002faa:	4770      	bx	lr

08002fac <_ZN8touchgfx9DraggableINS_3BoxEED1Ev>:
 * can be freely moved around using the touch screen.
 *
 * @tparam T specifies the type to extend with the Draggable behavior.
 */
template <class T>
class Draggable : public T
 8002fac:	4770      	bx	lr

08002fae <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002fae:	4770      	bx	lr

08002fb0 <_ZN23EasyReadyScreenViewBase11setupScreenEv>:
}

void EasyReadyScreenViewBase::setupScreen()
{

}
 8002fb0:	4770      	bx	lr

08002fb2 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002fb2:	b510      	push	{r4, lr}
    }
 8002fb4:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002fb6:	4604      	mov	r4, r0
    }
 8002fb8:	f026 fe96 	bl	8029ce8 <_ZdlPvj>
 8002fbc:	4620      	mov	r0, r4
 8002fbe:	bd10      	pop	{r4, pc}

08002fc0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002fc0:	b510      	push	{r4, lr}
 8002fc2:	214c      	movs	r1, #76	@ 0x4c
 8002fc4:	4604      	mov	r4, r0
 8002fc6:	f026 fe8f 	bl	8029ce8 <_ZdlPvj>
 8002fca:	4620      	mov	r0, r4
 8002fcc:	bd10      	pop	{r4, pc}

08002fce <_ZN8touchgfx9DraggableINS_3BoxEED0Ev>:
 8002fce:	b510      	push	{r4, lr}
 8002fd0:	212c      	movs	r1, #44	@ 0x2c
 8002fd2:	4604      	mov	r4, r0
 8002fd4:	f026 fe88 	bl	8029ce8 <_ZdlPvj>
 8002fd8:	4620      	mov	r0, r4
 8002fda:	bd10      	pop	{r4, pc}

08002fdc <_ZN8touchgfx9DraggableINS_3BoxEE15handleDragEventERKNS_9DragEventE>:
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
 8002fdc:	890b      	ldrh	r3, [r1, #8]
 8002fde:	898a      	ldrh	r2, [r1, #12]
 8002fe0:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
 8002fe2:	894b      	ldrh	r3, [r1, #10]
 8002fe4:	88c9      	ldrh	r1, [r1, #6]
 8002fe6:	1a59      	subs	r1, r3, r1
     * @param  event The drag event.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        T::handleDragEvent(event);
        T::moveRelative(event.getDeltaX(), event.getDeltaY());
 8002fe8:	b212      	sxth	r2, r2
 8002fea:	b209      	sxth	r1, r1
 8002fec:	f015 ba82 	b.w	80184f4 <_ZN8touchgfx8Drawable12moveRelativeEss>

08002ff0 <_ZN23EasyReadyScreenViewBaseD1Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8002ff0:	b510      	push	{r4, lr}
 8002ff2:	4b03      	ldr	r3, [pc, #12]	@ (8003000 <_ZN23EasyReadyScreenViewBaseD1Ev+0x10>)
 8002ff4:	6003      	str	r3, [r0, #0]
 8002ff6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002ff8:	f012 fc62 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	bd10      	pop	{r4, pc}
 8003000:	0802d60c 	.word	0x0802d60c

08003004 <_ZN23EasyReadyScreenViewBaseD0Ev>:
EasyReadyScreenViewBase::~EasyReadyScreenViewBase()
 8003004:	b510      	push	{r4, lr}
 8003006:	4b06      	ldr	r3, [pc, #24]	@ (8003020 <_ZN23EasyReadyScreenViewBaseD0Ev+0x1c>)
 8003008:	6003      	str	r3, [r0, #0]
 800300a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800300c:	f012 fc58 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003010:	4620      	mov	r0, r4
 8003012:	f241 51b8 	movw	r1, #5560	@ 0x15b8
 8003016:	f026 fe67 	bl	8029ce8 <_ZdlPvj>
 800301a:	4620      	mov	r0, r4
 800301c:	bd10      	pop	{r4, pc}
 800301e:	bf00      	nop
 8003020:	0802d60c 	.word	0x0802d60c

08003024 <_ZNK8touchgfx3Box17invalidateContentEv>:
        return alpha;
    }

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8003024:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 8003026:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
 800302a:	b10b      	cbz	r3, 8003030 <_ZNK8touchgfx3Box17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 800302c:	f7fe fed8 	bl	8001de0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8003030:	bd08      	pop	{r3, pc}

08003032 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003032:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003034:	f7fe fed4 	bl	8001de0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003038:	bd08      	pop	{r3, pc}
	...

0800303c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800303c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800303e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003040:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003042:	4b12      	ldr	r3, [pc, #72]	@ (800308c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003044:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003046:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003048:	b28d      	uxth	r5, r1
 800304a:	b92b      	cbnz	r3, 8003058 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800304c:	4b10      	ldr	r3, [pc, #64]	@ (8003090 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800304e:	4a11      	ldr	r2, [pc, #68]	@ (8003094 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003050:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003052:	4811      	ldr	r0, [pc, #68]	@ (8003098 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003054:	f027 fe86 	bl	802ad64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003058:	4910      	ldr	r1, [pc, #64]	@ (800309c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800305a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800305c:	8809      	ldrh	r1, [r1, #0]
 800305e:	4291      	cmp	r1, r2
 8003060:	d803      	bhi.n	800306a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003062:	4b0f      	ldr	r3, [pc, #60]	@ (80030a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003064:	4a0b      	ldr	r2, [pc, #44]	@ (8003094 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003066:	216d      	movs	r1, #109	@ 0x6d
 8003068:	e7f3      	b.n	8003052 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800306a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800306e:	4b0d      	ldr	r3, [pc, #52]	@ (80030a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003076:	6803      	ldr	r3, [r0, #0]
 8003078:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800307a:	4798      	blx	r3
 800307c:	1a29      	subs	r1, r5, r0
 800307e:	4633      	mov	r3, r6
 8003080:	4620      	mov	r0, r4
 8003082:	b209      	sxth	r1, r1
    }
 8003084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003088:	4718      	bx	r3
 800308a:	bf00      	nop
 800308c:	20013fb8 	.word	0x20013fb8
 8003090:	0802c32e 	.word	0x0802c32e
 8003094:	0802c370 	.word	0x0802c370
 8003098:	0802c3ab 	.word	0x0802c3ab
 800309c:	20013fbc 	.word	0x20013fbc
 80030a0:	0802c3f2 	.word	0x0802c3f2
 80030a4:	20013fc0 	.word	0x20013fc0

080030a8 <_ZN23EasyReadyScreenViewBase15handleTickEventEv>:

void EasyReadyScreenViewBase::handleTickEvent()
{
 80030a8:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 80030aa:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 80030ae:	f8d4 35b4 	ldr.w	r3, [r4, #1460]	@ 0x5b4
 80030b2:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80030b4:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 80030b6:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80030ba:	d106      	bne.n	80030ca <_ZN23EasyReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80030bc:	f014 f8fa 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to EasyScreen
        //Go to EasyScreen with no screen transition
        application().gotoEasyScreenScreenNoTransition();
 80030c0:	f001 f88a 	bl	80041d8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 80030c4:	2300      	movs	r3, #0
 80030c6:	f8c4 35b4 	str.w	r3, [r4, #1460]	@ 0x5b4
    }
}
 80030ca:	bd10      	pop	{r4, pc}

080030cc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80030cc:	2200      	movs	r2, #0
 80030ce:	f04f 31ff 	mov.w	r1, #4294967295
 80030d2:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80030d6:	6082      	str	r2, [r0, #8]
    }
 80030d8:	4770      	bx	lr

080030da <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80030da:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80030dc:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80030de:	4604      	mov	r4, r0
        setX(x);
 80030e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80030e2:	4615      	mov	r5, r2
        setX(x);
 80030e4:	4798      	blx	r3
        setY(y);
 80030e6:	6823      	ldr	r3, [r4, #0]
 80030e8:	4629      	mov	r1, r5
 80030ea:	4620      	mov	r0, r4
 80030ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80030ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80030f2:	4718      	bx	r3

080030f4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80030f4:	b570      	push	{r4, r5, r6, lr}
 80030f6:	4604      	mov	r4, r0
 80030f8:	461d      	mov	r5, r3
 80030fa:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80030fe:	f7ff ffec 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003102:	6823      	ldr	r3, [r4, #0]
 8003104:	4629      	mov	r1, r5
 8003106:	4620      	mov	r0, r4
 8003108:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800310a:	4798      	blx	r3
        setHeight(height);
 800310c:	6823      	ldr	r3, [r4, #0]
 800310e:	4631      	mov	r1, r6
 8003110:	4620      	mov	r0, r4
 8003112:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8003114:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003118:	4718      	bx	r3
	...

0800311c <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 800311c:	4a09      	ldr	r2, [pc, #36]	@ (8003144 <_ZN8touchgfx3BoxC1Ev+0x28>)
 800311e:	6002      	str	r2, [r0, #0]
          touchable(false),
 8003120:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003124:	2200      	movs	r2, #0
 8003126:	8481      	strh	r1, [r0, #36]	@ 0x24
 8003128:	21ff      	movs	r1, #255	@ 0xff
 800312a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800312e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003132:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003136:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800313a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
        : color(col)
 800313e:	6282      	str	r2, [r0, #40]	@ 0x28
    }
 8003140:	4770      	bx	lr
 8003142:	bf00      	nop
 8003144:	0802e1ec 	.word	0x0802e1ec

08003148 <_ZN8touchgfx8TextAreaC1Ev>:
          touchable(false),
 8003148:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800314c:	8481      	strh	r1, [r0, #36]	@ 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800314e:	490d      	ldr	r1, [pc, #52]	@ (8003184 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003150:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 8003152:	490d      	ldr	r1, [pc, #52]	@ (8003188 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003154:	6281      	str	r1, [r0, #40]	@ 0x28
 8003156:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800315a:	8581      	strh	r1, [r0, #44]	@ 0x2c
 800315c:	f44f 017f 	mov.w	r1, #16711680	@ 0xff0000
        : x(0), y(0), width(0), height(0)
 8003160:	2200      	movs	r2, #0
 8003162:	6341      	str	r1, [r0, #52]	@ 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003164:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 8003168:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800316c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003170:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003174:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 8003178:	e9c0 1210 	strd	r1, r2, [r0, #64]	@ 0x40
        : color(col)
 800317c:	6302      	str	r2, [r0, #48]	@ 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800317e:	8702      	strh	r2, [r0, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003180:	63c2      	str	r2, [r0, #60]	@ 0x3c
    }
 8003182:	4770      	bx	lr
 8003184:	0802e15c 	.word	0x0802e15c
 8003188:	0802d504 	.word	0x0802d504

0800318c <_ZN23EasyReadyScreenViewBaseC1Ev>:
EasyReadyScreenViewBase::EasyReadyScreenViewBase() :
 800318c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003190:	4604      	mov	r4, r0
 8003192:	b091      	sub	sp, #68	@ 0x44
    frameCountInteraction1Interval(0)
 8003194:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003196:	f04f 0b00 	mov.w	fp, #0
 800319a:	f015 ffc3 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 800319e:	4bd4      	ldr	r3, [pc, #848]	@ (80034f0 <_ZN23EasyReadyScreenViewBaseC1Ev+0x364>)
 80031a0:	f8c4 b03c 	str.w	fp, [r4, #60]	@ 0x3c
 80031a4:	f847 3b40 	str.w	r3, [r7], #64
 80031a8:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
 80031ac:	4638      	mov	r0, r7
 80031ae:	f7ff ffb5 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80031b2:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80031b6:	4630      	mov	r0, r6
 80031b8:	f7ff ffb0 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80031bc:	4640      	mov	r0, r8
 80031be:	f7ff ffad 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80031c2:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80031c6:	4618      	mov	r0, r3
 80031c8:	9305      	str	r3, [sp, #20]
 80031ca:	f7ff ffa7 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80031ce:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80031d2:	4618      	mov	r0, r3
 80031d4:	9306      	str	r3, [sp, #24]
 80031d6:	f00f fd25 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 80031da:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 80031de:	4618      	mov	r0, r3
 80031e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80031e2:	f7fe fe2b 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80031e6:	4bc3      	ldr	r3, [pc, #780]	@ (80034f4 <_ZN23EasyReadyScreenViewBaseC1Ev+0x368>)
 80031e8:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 80031ec:	3324      	adds	r3, #36	@ 0x24
 80031ee:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        : T()
 80031f2:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 80031f6:	4618      	mov	r0, r3
 80031f8:	f8c4 b144 	str.w	fp, [r4, #324]	@ 0x144
 80031fc:	4dbe      	ldr	r5, [pc, #760]	@ (80034f8 <_ZN23EasyReadyScreenViewBaseC1Ev+0x36c>)
 80031fe:	9308      	str	r3, [sp, #32]
        touchable = touch;
 8003200:	f04f 0901 	mov.w	r9, #1
 8003204:	f7ff ff8a 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8003208:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 800320c:	f504 7ad2 	add.w	sl, r4, #420	@ 0x1a4
 8003210:	4618      	mov	r0, r3
 8003212:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8003216:	f884 9170 	strb.w	r9, [r4, #368]	@ 0x170
 800321a:	9307      	str	r3, [sp, #28]
 800321c:	f7ff ff7e 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8003220:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8003224:	f884 919c 	strb.w	r9, [r4, #412]	@ 0x19c
 8003228:	4650      	mov	r0, sl
 800322a:	f7ff ff8d 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 800322e:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 8003232:	4618      	mov	r0, r3
 8003234:	9302      	str	r3, [sp, #8]
 8003236:	f7ff ff87 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800323a:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 800323e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003240:	4dae      	ldr	r5, [pc, #696]	@ (80034fc <_ZN23EasyReadyScreenViewBaseC1Ev+0x370>)
        : TextArea()
 8003242:	9303      	str	r3, [sp, #12]
 8003244:	f7ff ff80 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8003248:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 800324c:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
        : TextArea()
 8003250:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003252:	f8c4 b27c 	str.w	fp, [r4, #636]	@ 0x27c
        : TextArea()
 8003256:	9304      	str	r3, [sp, #16]
 8003258:	f7ff ff76 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 800325c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 8003260:	f8c4 5280 	str.w	r5, [r4, #640]	@ 0x280
 8003264:	f8c4 b2c8 	str.w	fp, [r4, #712]	@ 0x2c8
    __background.setPosition(0, 0, 320, 240);
 8003268:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 800326a:	f8c3 b5b4 	str.w	fp, [r3, #1460]	@ 0x5b4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800326e:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8003272:	f504 703d 	add.w	r0, r4, #756	@ 0x2f4
 8003276:	f012 fb19 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800327a:	465a      	mov	r2, fp
 800327c:	4638      	mov	r0, r7
 800327e:	9500      	str	r5, [sp, #0]
 8003280:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003284:	4659      	mov	r1, fp
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003286:	f104 0904 	add.w	r9, r4, #4
 800328a:	f7ff ff33 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800328e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003292:	4639      	mov	r1, r7
 8003294:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003296:	4648      	mov	r0, r9
 8003298:	f00c ff82 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800329c:	f04f 37ff 	mov.w	r7, #4294967295
    box3.setPosition(0, 0, 320, 240);
 80032a0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80032a4:	465a      	mov	r2, fp
 80032a6:	4630      	mov	r0, r6
 80032a8:	9500      	str	r5, [sp, #0]
 80032aa:	4659      	mov	r1, fp
 80032ac:	f7ff ff22 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032b0:	4631      	mov	r1, r6
 80032b2:	f8c4 7094 	str.w	r7, [r4, #148]	@ 0x94
 80032b6:	4648      	mov	r0, r9
 80032b8:	f00c ff72 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 80032bc:	2202      	movs	r2, #2
 80032be:	23ec      	movs	r3, #236	@ 0xec
 80032c0:	4611      	mov	r1, r2
 80032c2:	4640      	mov	r0, r8
 80032c4:	9300      	str	r3, [sp, #0]
 80032c6:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 80032ca:	f7ff ff13 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032ce:	4b8c      	ldr	r3, [pc, #560]	@ (8003500 <_ZN23EasyReadyScreenViewBaseC1Ev+0x374>)
 80032d0:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80032d4:	4641      	mov	r1, r8
 80032d6:	4648      	mov	r0, r9
 80032d8:	f00c ff62 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 80032dc:	465a      	mov	r2, fp
 80032de:	9805      	ldr	r0, [sp, #20]
 80032e0:	9500      	str	r5, [sp, #0]
 80032e2:	2303      	movs	r3, #3
 80032e4:	21a0      	movs	r1, #160	@ 0xa0
 80032e6:	f7ff ff05 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 80032ea:	23dc      	movs	r3, #220	@ 0xdc
 80032ec:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 80032ee:	f8c4 70ec 	str.w	r7, [r4, #236]	@ 0xec
        alpha = newAlpha;
 80032f2:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80032f6:	4648      	mov	r0, r9
 80032f8:	f00c ff52 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 80032fc:	230e      	movs	r3, #14
 80032fe:	2272      	movs	r2, #114	@ 0x72
 8003300:	9806      	ldr	r0, [sp, #24]
 8003302:	9300      	str	r3, [sp, #0]
 8003304:	219b      	movs	r1, #155	@ 0x9b
 8003306:	f7ff fef5 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 800330a:	23c0      	movs	r3, #192	@ 0xc0
 800330c:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003310:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8003314:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 8003318:	4b7a      	ldr	r3, [pc, #488]	@ (8003504 <_ZN23EasyReadyScreenViewBaseC1Ev+0x378>)
 800331a:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800331e:	f649 0361 	movw	r3, #39009	@ 0x9861
 8003322:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 8003326:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003328:	9906      	ldr	r1, [sp, #24]
 800332a:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 800332e:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8003332:	4648      	mov	r0, r9
    paddle1.setPosition(8, 100, 5, 40);
 8003334:	2528      	movs	r5, #40	@ 0x28
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8003336:	f8c4 b130 	str.w	fp, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800333a:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
 800333e:	f00c ff2f 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003342:	2305      	movs	r3, #5
 8003344:	2264      	movs	r2, #100	@ 0x64
 8003346:	9808      	ldr	r0, [sp, #32]
 8003348:	9500      	str	r5, [sp, #0]
 800334a:	2108      	movs	r1, #8
 800334c:	f7ff fed2 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003350:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8003352:	f8c4 7174 	str.w	r7, [r4, #372]	@ 0x174
 8003356:	4648      	mov	r0, r9
 8003358:	f00c ff22 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 100, 5, 40);
 800335c:	2305      	movs	r3, #5
 800335e:	2264      	movs	r2, #100	@ 0x64
 8003360:	9807      	ldr	r0, [sp, #28]
 8003362:	9500      	str	r5, [sp, #0]
 8003364:	f44f 719a 	mov.w	r1, #308	@ 0x134
 8003368:	f7ff fec4 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
    player1.setPosition(116, 95, 19, 52);
 800336c:	f04f 0834 	mov.w	r8, #52	@ 0x34
 8003370:	9907      	ldr	r1, [sp, #28]
 8003372:	f8c4 71a0 	str.w	r7, [r4, #416]	@ 0x1a0
 8003376:	4648      	mov	r0, r9
        boundingArea = calculateBoundingArea();
 8003378:	446d      	add	r5, sp
 800337a:	f00c ff11 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800337e:	2313      	movs	r3, #19
 8003380:	225f      	movs	r2, #95	@ 0x5f
 8003382:	4650      	mov	r0, sl
 8003384:	f8cd 8000 	str.w	r8, [sp]
 8003388:	2174      	movs	r1, #116	@ 0x74
 800338a:	f7ff feb3 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800338e:	4651      	mov	r1, sl
        color = newColor;
 8003390:	f8c4 71d4 	str.w	r7, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 8003394:	4628      	mov	r0, r5
        linespace = space;
 8003396:	f8a4 b1d8 	strh.w	fp, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 800339a:	f010 fdc7 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800339e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033a2:	f504 76f0 	add.w	r6, r4, #480	@ 0x1e0
 80033a6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        wideTextAction = action;
 80033aa:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 80033ae:	4651      	mov	r1, sl
        wideTextAction = action;
 80033b0:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 80033b4:	4628      	mov	r0, r5
 80033b6:	f010 fdb9 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033ba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80033be:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80033c2:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80033c6:	4651      	mov	r1, sl
        rotation = textRotation;
 80033c8:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 80033cc:	4628      	mov	r0, r5
 80033ce:	f010 fdad 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033d6:	2315      	movs	r3, #21
 80033d8:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1OW4));
 80033dc:	4650      	mov	r0, sl
 80033de:	4e4a      	ldr	r6, [pc, #296]	@ (8003508 <_ZN23EasyReadyScreenViewBaseC1Ev+0x37c>)
 80033e0:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 80033e4:	a90e      	add	r1, sp, #56	@ 0x38
 80033e6:	960e      	str	r6, [sp, #56]	@ 0x38
 80033e8:	f011 f848 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 80033ec:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 80033f0:	f884 11da 	strb.w	r1, [r4, #474]	@ 0x1da
 80033f4:	4648      	mov	r0, r9
 80033f6:	4651      	mov	r1, sl
 80033f8:	f00c fed2 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 80033fc:	2313      	movs	r3, #19
 80033fe:	225f      	movs	r2, #95	@ 0x5f
 8003400:	9802      	ldr	r0, [sp, #8]
 8003402:	f8cd 8000 	str.w	r8, [sp]
 8003406:	21bb      	movs	r1, #187	@ 0xbb
 8003408:	f7ff fe74 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 800340c:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 800340e:	f8c4 721c 	str.w	r7, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8003412:	4628      	mov	r0, r5
        linespace = space;
 8003414:	f8a4 b220 	strh.w	fp, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8003418:	f010 fd88 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800341c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003420:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8003424:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8003428:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800342c:	9902      	ldr	r1, [sp, #8]
        wideTextAction = action;
 800342e:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8003432:	4628      	mov	r0, r5
        wideTextAction = action;
 8003434:	4617      	mov	r7, r2
        boundingArea = calculateBoundingArea();
 8003436:	f010 fd79 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800343a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800343e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8003442:	9902      	ldr	r1, [sp, #8]
        rotation = textRotation;
 8003444:	f884 7224 	strb.w	r7, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 8003448:	4628      	mov	r0, r5
 800344a:	f010 fd6f 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800344e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003452:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ERV8));
 8003456:	aa0e      	add	r2, sp, #56	@ 0x38
 8003458:	2312      	movs	r3, #18
 800345a:	4611      	mov	r1, r2
 800345c:	9802      	ldr	r0, [sp, #8]
 800345e:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003462:	960e      	str	r6, [sp, #56]	@ 0x38
 8003464:	f011 f80a 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
 8003468:	f06f 0141 	mvn.w	r1, #65	@ 0x41
 800346c:	f884 1222 	strb.w	r1, [r4, #546]	@ 0x222
 8003470:	4648      	mov	r0, r9
 8003472:	9902      	ldr	r1, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003474:	f8df a0ac 	ldr.w	sl, [pc, #172]	@ 8003524 <_ZN23EasyReadyScreenViewBaseC1Ev+0x398>
 8003478:	f00c fe92 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 112);
 800347c:	2270      	movs	r2, #112	@ 0x70
 800347e:	9803      	ldr	r0, [sp, #12]
 8003480:	2135      	movs	r1, #53	@ 0x35
 8003482:	f7ff fe2a 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003486:	4b21      	ldr	r3, [pc, #132]	@ (800350c <_ZN23EasyReadyScreenViewBaseC1Ev+0x380>)
 8003488:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 800348c:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8003490:	9903      	ldr	r1, [sp, #12]
 8003492:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003496:	f8a4 b268 	strh.w	fp, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 800349a:	4628      	mov	r0, r5
 800349c:	4798      	blx	r3
 800349e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034a2:	f504 771c 	add.w	r7, r4, #624	@ 0x270
        rotation = textRotation;
 80034a6:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 80034aa:	e887 0007 	stmia.w	r7, {r0, r1, r2}
        rotation = textRotation;
 80034ae:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 80034b2:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 80034b6:	9903      	ldr	r1, [sp, #12]
 80034b8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80034bc:	4628      	mov	r0, r5
 80034be:	4798      	blx	r3
 80034c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034c4:	f8da 3000 	ldr.w	r3, [sl]
 80034c8:	e887 0007 	stmia.w	r7, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 80034cc:	f504 7733 	add.w	r7, r4, #716	@ 0x2cc
 80034d0:	b92b      	cbnz	r3, 80034de <_ZN23EasyReadyScreenViewBaseC1Ev+0x352>
 80034d2:	4b0f      	ldr	r3, [pc, #60]	@ (8003510 <_ZN23EasyReadyScreenViewBaseC1Ev+0x384>)
 80034d4:	4a0f      	ldr	r2, [pc, #60]	@ (8003514 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 80034d6:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034d8:	480f      	ldr	r0, [pc, #60]	@ (8003518 <_ZN23EasyReadyScreenViewBaseC1Ev+0x38c>)
 80034da:	f027 fc43 	bl	802ad64 <__assert_func>
 80034de:	4b0f      	ldr	r3, [pc, #60]	@ (800351c <_ZN23EasyReadyScreenViewBaseC1Ev+0x390>)
 80034e0:	881b      	ldrh	r3, [r3, #0]
 80034e2:	2b09      	cmp	r3, #9
 80034e4:	d820      	bhi.n	8003528 <_ZN23EasyReadyScreenViewBaseC1Ev+0x39c>
 80034e6:	4b0e      	ldr	r3, [pc, #56]	@ (8003520 <_ZN23EasyReadyScreenViewBaseC1Ev+0x394>)
 80034e8:	4a0a      	ldr	r2, [pc, #40]	@ (8003514 <_ZN23EasyReadyScreenViewBaseC1Ev+0x388>)
 80034ea:	2161      	movs	r1, #97	@ 0x61
 80034ec:	e7f4      	b.n	80034d8 <_ZN23EasyReadyScreenViewBaseC1Ev+0x34c>
 80034ee:	bf00      	nop
 80034f0:	0802d60c 	.word	0x0802d60c
 80034f4:	0802de48 	.word	0x0802de48
 80034f8:	0802d5a4 	.word	0x0802d5a4
 80034fc:	0802d514 	.word	0x0802d514
 8003500:	ff0c3837 	.word	0xff0c3837
 8003504:	ff990c0c 	.word	0xff990c0c
 8003508:	0802d504 	.word	0x0802d504
 800350c:	ffdeab5f 	.word	0xffdeab5f
 8003510:	0802c32e 	.word	0x0802c32e
 8003514:	0802c430 	.word	0x0802c430
 8003518:	0802c3ab 	.word	0x0802c3ab
 800351c:	20013fbc 	.word	0x20013fbc
 8003520:	0802c3f2 	.word	0x0802c3f2
 8003524:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8003528:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 800361c <_ZN23EasyReadyScreenViewBaseC1Ev+0x490>
 800352c:	2109      	movs	r1, #9
 800352e:	f8d8 0000 	ldr.w	r0, [r8]
 8003532:	f003 ff53 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8003536:	4a36      	ldr	r2, [pc, #216]	@ (8003610 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 8003538:	4603      	mov	r3, r0
 800353a:	210a      	movs	r1, #10
 800353c:	4638      	mov	r0, r7
 800353e:	f017 fad1 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 8003542:	9803      	ldr	r0, [sp, #12]
        wc1 = value;
 8003544:	f8c4 727c 	str.w	r7, [r4, #636]	@ 0x27c
 8003548:	f010 ff78 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 800354c:	27d2      	movs	r7, #210	@ 0xd2
        : typedTextId(id)
 800354e:	2314      	movs	r3, #20
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HVEB));
 8003550:	9803      	ldr	r0, [sp, #12]
 8003552:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 8003556:	a90e      	add	r1, sp, #56	@ 0x38
 8003558:	960e      	str	r6, [sp, #56]	@ 0x38
 800355a:	f010 ff8f 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800355e:	9903      	ldr	r1, [sp, #12]
 8003560:	f884 726a 	strb.w	r7, [r4, #618]	@ 0x26a
 8003564:	4648      	mov	r0, r9
 8003566:	f00c fe1b 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 800356a:	226f      	movs	r2, #111	@ 0x6f
 800356c:	9804      	ldr	r0, [sp, #16]
 800356e:	21f3      	movs	r1, #243	@ 0xf3
 8003570:	f7ff fdb3 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003574:	4b27      	ldr	r3, [pc, #156]	@ (8003614 <_ZN23EasyReadyScreenViewBaseC1Ev+0x488>)
 8003576:	f8c4 32b0 	str.w	r3, [r4, #688]	@ 0x2b0
        boundingArea = calculateBoundingArea();
 800357a:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 800357e:	9904      	ldr	r1, [sp, #16]
 8003580:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003584:	f8a4 b2b4 	strh.w	fp, [r4, #692]	@ 0x2b4
        boundingArea = calculateBoundingArea();
 8003588:	4628      	mov	r0, r5
 800358a:	4798      	blx	r3
 800358c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003590:	f504 7b2f 	add.w	fp, r4, #700	@ 0x2bc
        rotation = textRotation;
 8003594:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8003598:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 800359c:	f884 32b8 	strb.w	r3, [r4, #696]	@ 0x2b8
        boundingArea = calculateBoundingArea();
 80035a0:	f8d4 3280 	ldr.w	r3, [r4, #640]	@ 0x280
 80035a4:	9904      	ldr	r1, [sp, #16]
 80035a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80035aa:	4628      	mov	r0, r5
 80035ac:	4798      	blx	r3
 80035ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80035b2:	f8da 3000 	ldr.w	r3, [sl]
 80035b6:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER1BUFFER).getText());
 80035ba:	f504 7538 	add.w	r5, r4, #736	@ 0x2e0
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d087      	beq.n	80034d2 <_ZN23EasyReadyScreenViewBaseC1Ev+0x346>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80035c2:	4b15      	ldr	r3, [pc, #84]	@ (8003618 <_ZN23EasyReadyScreenViewBaseC1Ev+0x48c>)
 80035c4:	881b      	ldrh	r3, [r3, #0]
 80035c6:	2b09      	cmp	r3, #9
 80035c8:	d98d      	bls.n	80034e6 <_ZN23EasyReadyScreenViewBaseC1Ev+0x35a>
        return texts->getText(typedTextId);
 80035ca:	f8d8 0000 	ldr.w	r0, [r8]
 80035ce:	2109      	movs	r1, #9
 80035d0:	f003 ff04 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80035d4:	4a0e      	ldr	r2, [pc, #56]	@ (8003610 <_ZN23EasyReadyScreenViewBaseC1Ev+0x484>)
 80035d6:	4603      	mov	r3, r0
 80035d8:	210a      	movs	r1, #10
 80035da:	4628      	mov	r0, r5
 80035dc:	f017 fa82 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 80035e0:	9804      	ldr	r0, [sp, #16]
 80035e2:	f8c4 52c8 	str.w	r5, [r4, #712]	@ 0x2c8
 80035e6:	f010 ff29 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80035ea:	2313      	movs	r3, #19
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WSW0));
 80035ec:	9804      	ldr	r0, [sp, #16]
 80035ee:	f8ad 303c 	strh.w	r3, [sp, #60]	@ 0x3c
 80035f2:	a90e      	add	r1, sp, #56	@ 0x38
 80035f4:	960e      	str	r6, [sp, #56]	@ 0x38
 80035f6:	f010 ff41 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035fa:	4648      	mov	r0, r9
 80035fc:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 80035fe:	f884 72b6 	strb.w	r7, [r4, #694]	@ 0x2b6
 8003602:	f00c fdcd 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003606:	4620      	mov	r0, r4
 8003608:	b011      	add	sp, #68	@ 0x44
 800360a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800360e:	bf00      	nop
 8003610:	0802c47b 	.word	0x0802c47b
 8003614:	ffdeab5f 	.word	0xffdeab5f
 8003618:	20013fbc 	.word	0x20013fbc
 800361c:	20013fc4 	.word	0x20013fc4

08003620 <_ZN18EasyScreenViewBase11setupScreenEv>:
}

void EasyScreenViewBase::setupScreen()
{

}
 8003620:	4770      	bx	lr
	...

08003624 <_ZN18EasyScreenViewBaseD1Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8003624:	b510      	push	{r4, lr}
 8003626:	4b03      	ldr	r3, [pc, #12]	@ (8003634 <_ZN18EasyScreenViewBaseD1Ev+0x10>)
 8003628:	6003      	str	r3, [r0, #0]
 800362a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800362c:	f012 f948 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003630:	4620      	mov	r0, r4
 8003632:	bd10      	pop	{r4, pc}
 8003634:	0802d640 	.word	0x0802d640

08003638 <_ZN18EasyScreenViewBaseD0Ev>:
EasyScreenViewBase::~EasyScreenViewBase()
 8003638:	b510      	push	{r4, lr}
 800363a:	4b06      	ldr	r3, [pc, #24]	@ (8003654 <_ZN18EasyScreenViewBaseD0Ev+0x1c>)
 800363c:	6003      	str	r3, [r0, #0]
 800363e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003640:	f012 f93e 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003644:	4620      	mov	r0, r4
 8003646:	f241 61bc 	movw	r1, #5820	@ 0x16bc
 800364a:	f026 fb4d 	bl	8029ce8 <_ZdlPvj>
 800364e:	4620      	mov	r0, r4
 8003650:	bd10      	pop	{r4, pc}
 8003652:	bf00      	nop
 8003654:	0802d640 	.word	0x0802d640

08003658 <_ZN18EasyScreenViewBaseC1Ev>:
EasyScreenViewBase::EasyScreenViewBase()
 8003658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800365c:	4604      	mov	r4, r0
 800365e:	b095      	sub	sp, #84	@ 0x54
 8003660:	4625      	mov	r5, r4
 8003662:	2600      	movs	r6, #0
 8003664:	f015 fd5e 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 8003668:	4b98      	ldr	r3, [pc, #608]	@ (80038cc <_ZN18EasyScreenViewBaseC1Ev+0x274>)
 800366a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 800366c:	f845 3b40 	str.w	r3, [r5], #64
 8003670:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8003674:	4628      	mov	r0, r5
 8003676:	f7ff fd51 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 800367a:	4650      	mov	r0, sl
 800367c:	f7ff fd4e 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8003680:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 8003684:	f104 08c4 	add.w	r8, r4, #196	@ 0xc4
 8003688:	4618      	mov	r0, r3
 800368a:	9307      	str	r3, [sp, #28]
 800368c:	f7ff fd46 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8003690:	4640      	mov	r0, r8
 8003692:	f7ff fd43 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8003696:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 800369a:	4618      	mov	r0, r3
 800369c:	4f8c      	ldr	r7, [pc, #560]	@ (80038d0 <_ZN18EasyScreenViewBaseC1Ev+0x278>)
 800369e:	930a      	str	r3, [sp, #40]	@ 0x28
 80036a0:	f04f 0901 	mov.w	r9, #1
 80036a4:	f7ff fd3a 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80036a8:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80036ac:	4618      	mov	r0, r3
        : TextArea()
 80036ae:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 80036b2:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 80036b6:	f884 9114 	strb.w	r9, [r4, #276]	@ 0x114
 80036ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80036bc:	f7ff fd2e 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80036c0:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 80036c4:	f884 9140 	strb.w	r9, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 80036c8:	4f82      	ldr	r7, [pc, #520]	@ (80038d4 <_ZN18EasyScreenViewBaseC1Ev+0x27c>)
        : TextArea()
 80036ca:	4658      	mov	r0, fp
 80036cc:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 80036d0:	f7ff fd3a 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80036d4:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 80036d8:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 80036dc:	4648      	mov	r0, r9
 80036de:	f7ff fd33 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 80036e2:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 80036e6:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 80036ea:	4618      	mov	r0, r3
 80036ec:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 80036f0:	9305      	str	r3, [sp, #20]
 80036f2:	f7ff fd29 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 80036f6:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 80036fa:	4618      	mov	r0, r3
 80036fc:	9306      	str	r3, [sp, #24]
 80036fe:	f7ff fd23 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8003702:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 8003706:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003708:	4f73      	ldr	r7, [pc, #460]	@ (80038d8 <_ZN18EasyScreenViewBaseC1Ev+0x280>)
 800370a:	9308      	str	r3, [sp, #32]
 800370c:	f00f fa8a 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8003710:	f504 732e 	add.w	r3, r4, #696	@ 0x2b8
 8003714:	4618      	mov	r0, r3
 8003716:	930d      	str	r3, [sp, #52]	@ 0x34
 8003718:	f7fe fb90 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800371c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003720:	f8c4 32c0 	str.w	r3, [r4, #704]	@ 0x2c0
 8003724:	f504 7333 	add.w	r3, r4, #716	@ 0x2cc
 8003728:	f8c4 72b8 	str.w	r7, [r4, #696]	@ 0x2b8
 800372c:	4618      	mov	r0, r3
 800372e:	f8c4 62c4 	str.w	r6, [r4, #708]	@ 0x2c4
 8003732:	9303      	str	r3, [sp, #12]
 8003734:	f010 f92c 	bl	8013990 <_ZN8touchgfx4LineC1Ev>
 8003738:	f504 734f 	add.w	r3, r4, #828	@ 0x33c
 800373c:	4618      	mov	r0, r3
 800373e:	930c      	str	r3, [sp, #48]	@ 0x30
 8003740:	f7fe fb7c 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003744:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003748:	f8c4 3344 	str.w	r3, [r4, #836]	@ 0x344
 800374c:	f504 7354 	add.w	r3, r4, #848	@ 0x350
 8003750:	f8c4 733c 	str.w	r7, [r4, #828]	@ 0x33c
 8003754:	4618      	mov	r0, r3
 8003756:	f8c4 6348 	str.w	r6, [r4, #840]	@ 0x348
 800375a:	9304      	str	r3, [sp, #16]
 800375c:	f010 f918 	bl	8013990 <_ZN8touchgfx4LineC1Ev>
 8003760:	f504 7370 	add.w	r3, r4, #960	@ 0x3c0
 8003764:	4618      	mov	r0, r3
 8003766:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003768:	f7fe fb68 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800376c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003770:	f8c4 73c0 	str.w	r7, [r4, #960]	@ 0x3c0
 8003774:	f8c4 33c8 	str.w	r3, [r4, #968]	@ 0x3c8
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003778:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800377c:	f504 707f 	add.w	r0, r4, #1020	@ 0x3fc
 8003780:	f8c4 63cc 	str.w	r6, [r4, #972]	@ 0x3cc
 8003784:	f012 f892 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8003788:	23f0      	movs	r3, #240	@ 0xf0
 800378a:	4632      	mov	r2, r6
 800378c:	4628      	mov	r0, r5
 800378e:	9300      	str	r3, [sp, #0]
 8003790:	4631      	mov	r1, r6
 8003792:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003796:	f7ff fcad 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800379a:	1d27      	adds	r7, r4, #4
 800379c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80037a0:	4629      	mov	r1, r5
 80037a2:	66a3      	str	r3, [r4, #104]	@ 0x68
 80037a4:	4638      	mov	r0, r7
 80037a6:	f00c fcfb 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 80037aa:	23f0      	movs	r3, #240	@ 0xf0
 80037ac:	4632      	mov	r2, r6
 80037ae:	4650      	mov	r0, sl
 80037b0:	9300      	str	r3, [sp, #0]
 80037b2:	4631      	mov	r1, r6
 80037b4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80037b8:	f7ff fc9c 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037bc:	f04f 33ff 	mov.w	r3, #4294967295
 80037c0:	4651      	mov	r1, sl
 80037c2:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 80037c6:	4638      	mov	r0, r7
 80037c8:	f00c fcea 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 80037cc:	2202      	movs	r2, #2
 80037ce:	23ec      	movs	r3, #236	@ 0xec
 80037d0:	4611      	mov	r1, r2
 80037d2:	9807      	ldr	r0, [sp, #28]
 80037d4:	9300      	str	r3, [sp, #0]
 80037d6:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 80037da:	f7ff fc8b 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037de:	4b3f      	ldr	r3, [pc, #252]	@ (80038dc <_ZN18EasyScreenViewBaseC1Ev+0x284>)
 80037e0:	9907      	ldr	r1, [sp, #28]
 80037e2:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80037e6:	4638      	mov	r0, r7
 80037e8:	f00c fcda 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 80037ec:	23f0      	movs	r3, #240	@ 0xf0
 80037ee:	4632      	mov	r2, r6
 80037f0:	4640      	mov	r0, r8
 80037f2:	9300      	str	r3, [sp, #0]
 80037f4:	21a0      	movs	r1, #160	@ 0xa0
 80037f6:	2303      	movs	r3, #3
 80037f8:	f7ff fc7c 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037fc:	f04f 33ff 	mov.w	r3, #4294967295
 8003800:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8003804:	23dc      	movs	r3, #220	@ 0xdc
 8003806:	4641      	mov	r1, r8
    paddle1.setPosition(8, 100, 5, 40);
 8003808:	2528      	movs	r5, #40	@ 0x28
 800380a:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 800380e:	4638      	mov	r0, r7
 8003810:	f00c fcc6 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003814:	2264      	movs	r2, #100	@ 0x64
 8003816:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8003818:	9500      	str	r5, [sp, #0]
 800381a:	2305      	movs	r3, #5
 800381c:	2108      	movs	r1, #8
 800381e:	f7ff fc69 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003822:	f04f 33ff 	mov.w	r3, #4294967295
 8003826:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003828:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
 800382c:	4638      	mov	r0, r7
 800382e:	f00c fcb7 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 8003832:	2264      	movs	r2, #100	@ 0x64
 8003834:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003836:	9500      	str	r5, [sp, #0]
 8003838:	2305      	movs	r3, #5
 800383a:	f240 1133 	movw	r1, #307	@ 0x133
 800383e:	f7ff fc59 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003842:	f04f 33ff 	mov.w	r3, #4294967295
 8003846:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
 800384a:	9909      	ldr	r1, [sp, #36]	@ 0x24
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800384c:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 80038f8 <_ZN18EasyScreenViewBaseC1Ev+0x2a0>
 8003850:	4638      	mov	r0, r7
 8003852:	f00c fca5 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 8003856:	2216      	movs	r2, #22
 8003858:	21b8      	movs	r1, #184	@ 0xb8
 800385a:	4658      	mov	r0, fp
 800385c:	f7ff fc3d 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003860:	4b1f      	ldr	r3, [pc, #124]	@ (80038e0 <_ZN18EasyScreenViewBaseC1Ev+0x288>)
 8003862:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 8003866:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 800386a:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 800386e:	ad0e      	add	r5, sp, #56	@ 0x38
 8003870:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003874:	4659      	mov	r1, fp
 8003876:	4628      	mov	r0, r5
 8003878:	4798      	blx	r3
 800387a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800387e:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 8003882:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8003886:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800388a:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 800388e:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8003892:	4659      	mov	r1, fp
 8003894:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8003898:	4628      	mov	r0, r5
 800389a:	4798      	blx	r3
 800389c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER1).getText());
 80038a0:	f504 7375 	add.w	r3, r4, #980	@ 0x3d4
 80038a4:	9307      	str	r3, [sp, #28]
 80038a6:	f8da 3000 	ldr.w	r3, [sl]
 80038aa:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80038ae:	b92b      	cbnz	r3, 80038bc <_ZN18EasyScreenViewBaseC1Ev+0x264>
 80038b0:	4b0c      	ldr	r3, [pc, #48]	@ (80038e4 <_ZN18EasyScreenViewBaseC1Ev+0x28c>)
 80038b2:	4a0d      	ldr	r2, [pc, #52]	@ (80038e8 <_ZN18EasyScreenViewBaseC1Ev+0x290>)
 80038b4:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038b6:	480d      	ldr	r0, [pc, #52]	@ (80038ec <_ZN18EasyScreenViewBaseC1Ev+0x294>)
 80038b8:	f027 fa54 	bl	802ad64 <__assert_func>
 80038bc:	4b0c      	ldr	r3, [pc, #48]	@ (80038f0 <_ZN18EasyScreenViewBaseC1Ev+0x298>)
 80038be:	881b      	ldrh	r3, [r3, #0]
 80038c0:	2b06      	cmp	r3, #6
 80038c2:	d81b      	bhi.n	80038fc <_ZN18EasyScreenViewBaseC1Ev+0x2a4>
 80038c4:	4b0b      	ldr	r3, [pc, #44]	@ (80038f4 <_ZN18EasyScreenViewBaseC1Ev+0x29c>)
 80038c6:	4a08      	ldr	r2, [pc, #32]	@ (80038e8 <_ZN18EasyScreenViewBaseC1Ev+0x290>)
 80038c8:	2161      	movs	r1, #97	@ 0x61
 80038ca:	e7f4      	b.n	80038b6 <_ZN18EasyScreenViewBaseC1Ev+0x25e>
 80038cc:	0802d640 	.word	0x0802d640
 80038d0:	0802d5a4 	.word	0x0802d5a4
 80038d4:	0802d514 	.word	0x0802d514
 80038d8:	0802de48 	.word	0x0802de48
 80038dc:	ff0c3837 	.word	0xff0c3837
 80038e0:	ff595656 	.word	0xff595656
 80038e4:	0802c32e 	.word	0x0802c32e
 80038e8:	0802c430 	.word	0x0802c430
 80038ec:	0802c3ab 	.word	0x0802c3ab
 80038f0:	20013fbc 	.word	0x20013fbc
 80038f4:	0802c3f2 	.word	0x0802c3f2
 80038f8:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 80038fc:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 8003bd8 <_ZN18EasyScreenViewBaseC1Ev+0x580>
 8003900:	2106      	movs	r1, #6
 8003902:	f8d8 0000 	ldr.w	r0, [r8]
 8003906:	f003 fd69 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 800390a:	4aae      	ldr	r2, [pc, #696]	@ (8003bc4 <_ZN18EasyScreenViewBaseC1Ev+0x56c>)
 800390c:	4603      	mov	r3, r0
 800390e:	210a      	movs	r1, #10
 8003910:	9807      	ldr	r0, [sp, #28]
 8003912:	f017 f8e7 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003916:	9b07      	ldr	r3, [sp, #28]
 8003918:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 800391c:	4658      	mov	r0, fp
 800391e:	f010 fd8d 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003922:	4ba9      	ldr	r3, [pc, #676]	@ (8003bc8 <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003924:	9312      	str	r3, [sp, #72]	@ 0x48
 8003926:	f04f 0221 	mov.w	r2, #33	@ 0x21
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I1JY));
 800392a:	4658      	mov	r0, fp
 800392c:	a912      	add	r1, sp, #72	@ 0x48
 800392e:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
 8003932:	f010 fda3 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003936:	4659      	mov	r1, fp
 8003938:	4638      	mov	r0, r7
 800393a:	f00c fc31 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 800393e:	22c3      	movs	r2, #195	@ 0xc3
 8003940:	2175      	movs	r1, #117	@ 0x75
 8003942:	4648      	mov	r0, r9
 8003944:	f7ff fbc9 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003948:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 800394c:	4a9f      	ldr	r2, [pc, #636]	@ (8003bcc <_ZN18EasyScreenViewBaseC1Ev+0x574>)
        boundingArea = calculateBoundingArea();
 800394e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8003952:	f8c4 21c4 	str.w	r2, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 8003956:	4649      	mov	r1, r9
 8003958:	4628      	mov	r0, r5
        linespace = space;
 800395a:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 800395e:	4798      	blx	r3
 8003960:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003964:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 8003968:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 800396c:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8003970:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8003974:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 8003978:	f884 21cc 	strb.w	r2, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 800397c:	4649      	mov	r1, r9
 800397e:	4628      	mov	r0, r5
 8003980:	4798      	blx	r3
 8003982:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003986:	f8da 3000 	ldr.w	r3, [sl]
 800398a:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER1).getText());
 800398e:	f504 7b7a 	add.w	fp, r4, #1000	@ 0x3e8
 8003992:	2b00      	cmp	r3, #0
 8003994:	d08c      	beq.n	80038b0 <_ZN18EasyScreenViewBaseC1Ev+0x258>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003996:	4a8e      	ldr	r2, [pc, #568]	@ (8003bd0 <_ZN18EasyScreenViewBaseC1Ev+0x578>)
 8003998:	8813      	ldrh	r3, [r2, #0]
 800399a:	2b05      	cmp	r3, #5
 800399c:	d992      	bls.n	80038c4 <_ZN18EasyScreenViewBaseC1Ev+0x26c>
        return texts->getText(typedTextId);
 800399e:	f8d8 0000 	ldr.w	r0, [r8]
 80039a2:	2105      	movs	r1, #5
 80039a4:	f003 fd1a 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80039a8:	4a86      	ldr	r2, [pc, #536]	@ (8003bc4 <_ZN18EasyScreenViewBaseC1Ev+0x56c>)
 80039aa:	4603      	mov	r3, r0
 80039ac:	210a      	movs	r1, #10
 80039ae:	4658      	mov	r0, fp
 80039b0:	f017 f898 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 80039b4:	4648      	mov	r0, r9
 80039b6:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 80039ba:	f010 fd3f 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80039be:	f04f 0820 	mov.w	r8, #32
 80039c2:	4b81      	ldr	r3, [pc, #516]	@ (8003bc8 <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 80039c4:	9312      	str	r3, [sp, #72]	@ 0x48
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 80039c6:	4648      	mov	r0, r9
 80039c8:	a912      	add	r1, sp, #72	@ 0x48
    player1.setPosition(140, 180, 19, 52);
 80039ca:	f04f 0a34 	mov.w	sl, #52	@ 0x34
 80039ce:	f8ad 804c 	strh.w	r8, [sp, #76]	@ 0x4c
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJHY));
 80039d2:	f010 fd53 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039d6:	4649      	mov	r1, r9
 80039d8:	4638      	mov	r0, r7
 80039da:	f00c fbe1 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(140, 180, 19, 52);
 80039de:	2313      	movs	r3, #19
 80039e0:	22b4      	movs	r2, #180	@ 0xb4
 80039e2:	9805      	ldr	r0, [sp, #20]
 80039e4:	f8cd a000 	str.w	sl, [sp]
 80039e8:	218c      	movs	r1, #140	@ 0x8c
 80039ea:	f7ff fb83 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80039ee:	f04f 31ff 	mov.w	r1, #4294967295
 80039f2:	f8c4 1210 	str.w	r1, [r4, #528]	@ 0x210
        boundingArea = calculateBoundingArea();
 80039f6:	4628      	mov	r0, r5
 80039f8:	9905      	ldr	r1, [sp, #20]
        linespace = space;
 80039fa:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 80039fe:	f010 fa95 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a02:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a06:	f504 7907 	add.w	r9, r4, #540	@ 0x21c
 8003a0a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8003a0e:	f04f 0201 	mov.w	r2, #1
        boundingArea = calculateBoundingArea();
 8003a12:	9905      	ldr	r1, [sp, #20]
        rotation = textRotation;
 8003a14:	f884 2218 	strb.w	r2, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 8003a18:	4628      	mov	r0, r5
 8003a1a:	f010 fa87 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a1e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a22:	4b69      	ldr	r3, [pc, #420]	@ (8003bc8 <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003a24:	9312      	str	r3, [sp, #72]	@ 0x48
 8003a26:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8003a2a:	231f      	movs	r3, #31
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G2S8));
 8003a2c:	9805      	ldr	r0, [sp, #20]
 8003a2e:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 8003a32:	a912      	add	r1, sp, #72	@ 0x48
        alpha = newAlpha;
 8003a34:	f04f 09be 	mov.w	r9, #190	@ 0xbe
 8003a38:	f010 fd20 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a3c:	9905      	ldr	r1, [sp, #20]
 8003a3e:	f884 9216 	strb.w	r9, [r4, #534]	@ 0x216
 8003a42:	4638      	mov	r0, r7
 8003a44:	f00c fbac 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 8003a48:	2313      	movs	r3, #19
 8003a4a:	9806      	ldr	r0, [sp, #24]
 8003a4c:	f8cd a000 	str.w	sl, [sp]
 8003a50:	2207      	movs	r2, #7
 8003a52:	21a5      	movs	r1, #165	@ 0xa5
 8003a54:	f7ff fb4e 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003a58:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003a5c:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8003a5e:	f8c4 2258 	str.w	r2, [r4, #600]	@ 0x258
        boundingArea = calculateBoundingArea();
 8003a62:	4628      	mov	r0, r5
        linespace = space;
 8003a64:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8003a68:	f010 fa60 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a6c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a70:	f504 7a19 	add.w	sl, r4, #612	@ 0x264
 8003a74:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        rotation = textRotation;
 8003a78:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8003a7c:	9906      	ldr	r1, [sp, #24]
        rotation = textRotation;
 8003a7e:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8003a82:	4628      	mov	r0, r5
 8003a84:	f010 fa52 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a88:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a8c:	4b4e      	ldr	r3, [pc, #312]	@ (8003bc8 <_ZN18EasyScreenViewBaseC1Ev+0x570>)
 8003a8e:	9312      	str	r3, [sp, #72]	@ 0x48
 8003a90:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 8003a94:	231e      	movs	r3, #30
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD39));
 8003a96:	9806      	ldr	r0, [sp, #24]
 8003a98:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 8003a9c:	a912      	add	r1, sp, #72	@ 0x48
 8003a9e:	f010 fced 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003aa2:	9906      	ldr	r1, [sp, #24]
        alpha = newAlpha;
 8003aa4:	f884 925e 	strb.w	r9, [r4, #606]	@ 0x25e
 8003aa8:	4638      	mov	r0, r7
 8003aaa:	f00c fb79 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8003aae:	230e      	movs	r3, #14
 8003ab0:	2272      	movs	r2, #114	@ 0x72
 8003ab2:	9808      	ldr	r0, [sp, #32]
 8003ab4:	9300      	str	r3, [sp, #0]
 8003ab6:	219a      	movs	r1, #154	@ 0x9a
 8003ab8:	f7ff fb1c 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8003abc:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8003abe:	e9c4 33a7 	strd	r3, r3, [r4, #668]	@ 0x29c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8003ac2:	23c0      	movs	r3, #192	@ 0xc0
 8003ac4:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003ac8:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8003acc:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
 8003ad0:	4b40      	ldr	r3, [pc, #256]	@ (8003bd4 <_ZN18EasyScreenViewBaseC1Ev+0x57c>)
 8003ad2:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003ad6:	f649 0361 	movw	r3, #39009	@ 0x9861
 8003ada:	f8a4 32c8 	strh.w	r3, [r4, #712]	@ 0x2c8
 8003ade:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003ae0:	9908      	ldr	r1, [sp, #32]
 8003ae2:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
 8003ae6:	4638      	mov	r0, r7
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8003ae8:	f8c4 62b0 	str.w	r6, [r4, #688]	@ 0x2b0
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8003aec:	f8c4 62a8 	str.w	r6, [r4, #680]	@ 0x2a8
 8003af0:	f00c fb56 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(13, 114, 33, 19);
 8003af4:	2313      	movs	r3, #19
 8003af6:	9803      	ldr	r0, [sp, #12]
 8003af8:	9300      	str	r3, [sp, #0]
 8003afa:	2272      	movs	r2, #114	@ 0x72
 8003afc:	2321      	movs	r3, #33	@ 0x21
 8003afe:	210d      	movs	r1, #13
 8003b00:	f7ff faf8 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b04:	f04f 33ff 	mov.w	r3, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b08:	22a0      	movs	r2, #160	@ 0xa0
 8003b0a:	f8c4 3348 	str.w	r3, [r4, #840]	@ 0x348
 8003b0e:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
 8003b12:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8003b14:	f8c4 32f4 	str.w	r3, [r4, #756]	@ 0x2f4
 8003b18:	4611      	mov	r1, r2
 8003b1a:	9803      	ldr	r0, [sp, #12]
 8003b1c:	f010 f84e 	bl	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b20:	9803      	ldr	r0, [sp, #12]
 8003b22:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8003b26:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8003b2a:	f010 f852 	bl	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003b2e:	f8d4 3308 	ldr.w	r3, [r4, #776]	@ 0x308
 8003b32:	4543      	cmp	r3, r8
 8003b34:	d004      	beq.n	8003b40 <_ZN18EasyScreenViewBaseC1Ev+0x4e8>
            return;
        }

        lineWidthQ5 = widthQ5;

        updateCachedShape();
 8003b36:	9803      	ldr	r0, [sp, #12]
        lineWidthQ5 = widthQ5;
 8003b38:	f8c4 8308 	str.w	r8, [r4, #776]	@ 0x308
        updateCachedShape();
 8003b3c:	f00f ff48 	bl	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8003b40:	9803      	ldr	r0, [sp, #12]
 8003b42:	2100      	movs	r1, #0
 8003b44:	f010 f850 	bl	8013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8003b48:	235f      	movs	r3, #95	@ 0x5f
 8003b4a:	9903      	ldr	r1, [sp, #12]
 8003b4c:	f884 32f2 	strb.w	r3, [r4, #754]	@ 0x2f2
 8003b50:	4638      	mov	r0, r7
 8003b52:	f00c fb25 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(268, 114, 33, 19);
 8003b56:	2313      	movs	r3, #19
 8003b58:	9804      	ldr	r0, [sp, #16]
 8003b5a:	9300      	str	r3, [sp, #0]
 8003b5c:	2272      	movs	r2, #114	@ 0x72
 8003b5e:	2321      	movs	r3, #33	@ 0x21
 8003b60:	f44f 7186 	mov.w	r1, #268	@ 0x10c
 8003b64:	f7ff fac6 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b68:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b6c:	22a0      	movs	r2, #160	@ 0xa0
 8003b6e:	f8c4 33cc 	str.w	r3, [r4, #972]	@ 0x3cc
 8003b72:	f8a4 33d0 	strh.w	r3, [r4, #976]	@ 0x3d0
        canvasPainter = &painter;
 8003b76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003b78:	f8c4 3378 	str.w	r3, [r4, #888]	@ 0x378
 8003b7c:	4611      	mov	r1, r2
 8003b7e:	9804      	ldr	r0, [sp, #16]
 8003b80:	f010 f81c 	bl	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b84:	9804      	ldr	r0, [sp, #16]
 8003b86:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8003b8a:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8003b8e:	f010 f820 	bl	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003b92:	f8d4 338c 	ldr.w	r3, [r4, #908]	@ 0x38c
 8003b96:	2b20      	cmp	r3, #32
 8003b98:	d005      	beq.n	8003ba6 <_ZN18EasyScreenViewBaseC1Ev+0x54e>
        lineWidthQ5 = widthQ5;
 8003b9a:	2320      	movs	r3, #32
        updateCachedShape();
 8003b9c:	9804      	ldr	r0, [sp, #16]
        lineWidthQ5 = widthQ5;
 8003b9e:	f8c4 338c 	str.w	r3, [r4, #908]	@ 0x38c
        updateCachedShape();
 8003ba2:	f00f ff15 	bl	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8003ba6:	9804      	ldr	r0, [sp, #16]
 8003ba8:	2100      	movs	r1, #0
 8003baa:	f010 f81d 	bl	8013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8003bae:	235f      	movs	r3, #95	@ 0x5f
 8003bb0:	4638      	mov	r0, r7
 8003bb2:	9904      	ldr	r1, [sp, #16]
 8003bb4:	f884 3376 	strb.w	r3, [r4, #886]	@ 0x376
 8003bb8:	f00c faf2 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	b015      	add	sp, #84	@ 0x54
 8003bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bc4:	0802c47b 	.word	0x0802c47b
 8003bc8:	0802d504 	.word	0x0802d504
 8003bcc:	ff595656 	.word	0xff595656
 8003bd0:	20013fbc 	.word	0x20013fbc
 8003bd4:	ff990c0c 	.word	0xff990c0c
 8003bd8:	20013fc4 	.word	0x20013fc4

08003bdc <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003bdc:	4770      	bx	lr

08003bde <_ZN17EndScreenViewBaseD1Ev>:
}

EndScreenViewBase::~EndScreenViewBase()
{

}
 8003bde:	4770      	bx	lr

08003be0 <_ZN17EndScreenViewBase11setupScreenEv>:

void EndScreenViewBase::setupScreen()
{

}
 8003be0:	4770      	bx	lr

08003be2 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8003be2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8003be4:	68c2      	ldr	r2, [r0, #12]
 8003be6:	6844      	ldr	r4, [r0, #4]
 8003be8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003bea:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003bec:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003bf0:	07d2      	lsls	r2, r2, #31
 8003bf2:	bf48      	it	mi
 8003bf4:	5962      	ldrmi	r2, [r4, r5]
 8003bf6:	689b      	ldr	r3, [r3, #8]
    }
 8003bf8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003bfa:	bf48      	it	mi
 8003bfc:	58d3      	ldrmi	r3, [r2, r3]
 8003bfe:	4718      	bx	r3

08003c00 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 8003c00:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003c02:	6840      	ldr	r0, [r0, #4]
 8003c04:	b130      	cbz	r0, 8003c14 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003c06:	689a      	ldr	r2, [r3, #8]
 8003c08:	b91a      	cbnz	r2, 8003c12 <_ZNK8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8003c0a:	68d8      	ldr	r0, [r3, #12]
 8003c0c:	f000 0001 	and.w	r0, r0, #1
 8003c10:	4770      	bx	lr
 8003c12:	2001      	movs	r0, #1
    }
 8003c14:	4770      	bx	lr

08003c16 <_ZN8touchgfx8CallbackI17EndScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c16:	b510      	push	{r4, lr}
 8003c18:	2110      	movs	r1, #16
 8003c1a:	4604      	mov	r4, r0
 8003c1c:	f026 f864 	bl	8029ce8 <_ZdlPvj>
 8003c20:	4620      	mov	r0, r4
 8003c22:	bd10      	pop	{r4, pc}

08003c24 <_ZN17EndScreenViewBaseD0Ev>:
EndScreenViewBase::~EndScreenViewBase()
 8003c24:	b510      	push	{r4, lr}
}
 8003c26:	f44f 71cc 	mov.w	r1, #408	@ 0x198
EndScreenViewBase::~EndScreenViewBase()
 8003c2a:	4604      	mov	r4, r0
}
 8003c2c:	f026 f85c 	bl	8029ce8 <_ZdlPvj>
 8003c30:	4620      	mov	r0, r4
 8003c32:	bd10      	pop	{r4, pc}

08003c34 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void EndScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playagainButton)
 8003c34:	3098      	adds	r0, #152	@ 0x98
 8003c36:	4288      	cmp	r0, r1
{
 8003c38:	b508      	push	{r3, lr}
    if (&src == &playagainButton)
 8003c3a:	d105      	bne.n	8003c48 <_ZN17EndScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~EndScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003c3c:	f013 fb3a 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When playagainButton clicked change screen to StartScreen
        //Go to StartScreen with screen transition towards East
        application().gotoStartScreenScreenWipeTransitionEast();
    }
}
 8003c40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoStartScreenScreenWipeTransitionEast();
 8003c44:	f000 ba78 	b.w	8004138 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>
}
 8003c48:	bd08      	pop	{r3, pc}
	...

08003c4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 8003c4e:	4b19      	ldr	r3, [pc, #100]	@ (8003cb4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 8003c50:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 8003c52:	881b      	ldrh	r3, [r3, #0]
 8003c54:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003c56:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003c58:	d92a      	bls.n	8003cb0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c5a:	4b17      	ldr	r3, [pc, #92]	@ (8003cb8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	b92b      	cbnz	r3, 8003c6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003c60:	4b16      	ldr	r3, [pc, #88]	@ (8003cbc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003c62:	4a17      	ldr	r2, [pc, #92]	@ (8003cc0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003c64:	4817      	ldr	r0, [pc, #92]	@ (8003cc4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003c66:	216c      	movs	r1, #108	@ 0x6c
 8003c68:	f027 f87c 	bl	802ad64 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003c6c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003c70:	4b15      	ldr	r3, [pc, #84]	@ (8003cc8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003c78:	4b14      	ldr	r3, [pc, #80]	@ (8003ccc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003c7a:	6818      	ldr	r0, [r3, #0]
 8003c7c:	f003 fbae 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003c80:	682b      	ldr	r3, [r5, #0]
 8003c82:	4607      	mov	r7, r0
 8003c84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003c86:	4628      	mov	r0, r5
 8003c88:	4798      	blx	r3
 8003c8a:	682b      	ldr	r3, [r5, #0]
 8003c8c:	4604      	mov	r4, r0
 8003c8e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c90:	4639      	mov	r1, r7
 8003c92:	4628      	mov	r0, r5
 8003c94:	4798      	blx	r3
 8003c96:	682b      	ldr	r3, [r5, #0]
 8003c98:	fb14 f400 	smulbb	r4, r4, r0
 8003c9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c9e:	4639      	mov	r1, r7
 8003ca0:	4628      	mov	r0, r5
 8003ca2:	4798      	blx	r3
 8003ca4:	b2a4      	uxth	r4, r4
 8003ca6:	1823      	adds	r3, r4, r0
 8003ca8:	b21b      	sxth	r3, r3
 8003caa:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003cae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003cb0:	2300      	movs	r3, #0
 8003cb2:	e7fa      	b.n	8003caa <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003cb4:	20013fbc 	.word	0x20013fbc
 8003cb8:	20013fb8 	.word	0x20013fb8
 8003cbc:	0802c32e 	.word	0x0802c32e
 8003cc0:	0802c370 	.word	0x0802c370
 8003cc4:	0802c3ab 	.word	0x0802c3ab
 8003cc8:	20013fc0 	.word	0x20013fc0
 8003ccc:	20013fc4 	.word	0x20013fc4

08003cd0 <_ZN17EndScreenViewBaseC1Ev>:
EndScreenViewBase::EndScreenViewBase() :
 8003cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cd4:	4604      	mov	r4, r0
 8003cd6:	b08b      	sub	sp, #44	@ 0x2c
    buttonCallback(this, &EndScreenViewBase::buttonCallbackHandler)
 8003cd8:	46a2      	mov	sl, r4
 8003cda:	2500      	movs	r5, #0
 8003cdc:	f015 fa22 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 8003ce0:	4b6b      	ldr	r3, [pc, #428]	@ (8003e90 <_ZN17EndScreenViewBaseC1Ev+0x1c0>)
 8003ce2:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8003ce4:	f84a 3b40 	str.w	r3, [sl], #64
 8003ce8:	f104 0b6c 	add.w	fp, r4, #108	@ 0x6c
 8003cec:	4650      	mov	r0, sl
 8003cee:	f104 0998 	add.w	r9, r4, #152	@ 0x98
 8003cf2:	f7ff fa13 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8003cf6:	4658      	mov	r0, fp
 8003cf8:	f7ff fa10 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 8003cfc:	f104 06e0 	add.w	r6, r4, #224	@ 0xe0
 8003d00:	4648      	mov	r0, r9
 8003d02:	f010 ff17 	bl	8014b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d06:	4630      	mov	r0, r6
 8003d08:	f7ff fa1e 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8003d0c:	f504 7896 	add.w	r8, r4, #300	@ 0x12c
        : TextAreaWithWildcardBase(), wc1(0)
 8003d10:	4b60      	ldr	r3, [pc, #384]	@ (8003e94 <_ZN17EndScreenViewBaseC1Ev+0x1c4>)
 8003d12:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
 8003d16:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
 8003d1a:	4640      	mov	r0, r8
 8003d1c:	f7ff fa14 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003d20:	4b5d      	ldr	r3, [pc, #372]	@ (8003e98 <_ZN17EndScreenViewBaseC1Ev+0x1c8>)
 8003d22:	e9c4 3462 	strd	r3, r4, [r4, #392]	@ 0x188
 8003d26:	4b5d      	ldr	r3, [pc, #372]	@ (8003e9c <_ZN17EndScreenViewBaseC1Ev+0x1cc>)
 8003d28:	e9c4 3564 	strd	r3, r5, [r4, #400]	@ 0x190
    __background.setPosition(0, 0, 320, 240);
 8003d2c:	23f0      	movs	r3, #240	@ 0xf0
 8003d2e:	462a      	mov	r2, r5
 8003d30:	4650      	mov	r0, sl
 8003d32:	9300      	str	r3, [sp, #0]
 8003d34:	4629      	mov	r1, r5
 8003d36:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003d3a:	f7ff f9db 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d3e:	1d27      	adds	r7, r4, #4
 8003d40:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8003d44:	4651      	mov	r1, sl
 8003d46:	66a3      	str	r3, [r4, #104]	@ 0x68
 8003d48:	4638      	mov	r0, r7
 8003d4a:	f00c fa29 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 320, 240);
 8003d4e:	23f0      	movs	r3, #240	@ 0xf0
 8003d50:	462a      	mov	r2, r5
 8003d52:	4658      	mov	r0, fp
 8003d54:	9300      	str	r3, [sp, #0]
 8003d56:	4629      	mov	r1, r5
 8003d58:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8003d5c:	f7ff f9ca 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d60:	4b4f      	ldr	r3, [pc, #316]	@ (8003ea0 <_ZN17EndScreenViewBaseC1Ev+0x1d0>)
 8003d62:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8003d66:	4659      	mov	r1, fp
 8003d68:	4638      	mov	r0, r7
 8003d6a:	f00c fa19 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playagainButton.setXY(91, 164);
 8003d6e:	4648      	mov	r0, r9
 8003d70:	22a4      	movs	r2, #164	@ 0xa4
 8003d72:	215b      	movs	r1, #91	@ 0x5b
 8003d74:	f7ff f9b1 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    playagainButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_DISABLED_ID));
 8003d78:	aa08      	add	r2, sp, #32
 8003d7a:	a907      	add	r1, sp, #28
 8003d7c:	4648      	mov	r0, r9
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003d7e:	f8ad 501c 	strh.w	r5, [sp, #28]
 8003d82:	f8ad 5020 	strh.w	r5, [sp, #32]
 8003d86:	f010 fbcc 	bl	8014522 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003d8a:	2323      	movs	r3, #35	@ 0x23
        updateTextPosition();
 8003d8c:	4648      	mov	r0, r9
 8003d8e:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
 8003d92:	f7ff ff5b 	bl	8003c4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8003d96:	4a43      	ldr	r2, [pc, #268]	@ (8003ea4 <_ZN17EndScreenViewBaseC1Ev+0x1d4>)
        color = newColor;
 8003d98:	f8df a12c 	ldr.w	sl, [pc, #300]	@ 8003ec8 <_ZN17EndScreenViewBaseC1Ev+0x1f8>
 8003d9c:	f04f 33ff 	mov.w	r3, #4294967295
 8003da0:	e9c4 2335 	strd	r2, r3, [r4, #212]	@ 0xd4
    playagainButton.setAction(buttonCallback);
 8003da4:	f504 73c4 	add.w	r3, r4, #392	@ 0x188
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003da8:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8003dac:	4649      	mov	r1, r9
 8003dae:	4638      	mov	r0, r7
 8003db0:	f00c f9f6 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    playerwin.setXY(105, 93);
 8003db4:	225d      	movs	r2, #93	@ 0x5d
 8003db6:	2169      	movs	r1, #105	@ 0x69
 8003db8:	4630      	mov	r0, r6
 8003dba:	f7ff f98e 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003dbe:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
        color = newColor;
 8003dc2:	f8c4 a110 	str.w	sl, [r4, #272]	@ 0x110
        boundingArea = calculateBoundingArea();
 8003dc6:	f10d 0908 	add.w	r9, sp, #8
 8003dca:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8003dce:	f8a4 5114 	strh.w	r5, [r4, #276]	@ 0x114
        boundingArea = calculateBoundingArea();
 8003dd2:	4631      	mov	r1, r6
 8003dd4:	4648      	mov	r0, r9
 8003dd6:	4798      	blx	r3
 8003dd8:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003ddc:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8003de0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003de4:	4b30      	ldr	r3, [pc, #192]	@ (8003ea8 <_ZN17EndScreenViewBaseC1Ev+0x1d8>)
 8003de6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%s", touchgfx::TypedText(T_WINNERBUFFER).getText());
 8003de8:	f504 7bba 	add.w	fp, r4, #372	@ 0x174
 8003dec:	b92b      	cbnz	r3, 8003dfa <_ZN17EndScreenViewBaseC1Ev+0x12a>
 8003dee:	4b2f      	ldr	r3, [pc, #188]	@ (8003eac <_ZN17EndScreenViewBaseC1Ev+0x1dc>)
 8003df0:	4a2f      	ldr	r2, [pc, #188]	@ (8003eb0 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003df2:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003df4:	482f      	ldr	r0, [pc, #188]	@ (8003eb4 <_ZN17EndScreenViewBaseC1Ev+0x1e4>)
 8003df6:	f026 ffb5 	bl	802ad64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003dfa:	4b2f      	ldr	r3, [pc, #188]	@ (8003eb8 <_ZN17EndScreenViewBaseC1Ev+0x1e8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003dfc:	881b      	ldrh	r3, [r3, #0]
 8003dfe:	b91b      	cbnz	r3, 8003e08 <_ZN17EndScreenViewBaseC1Ev+0x138>
 8003e00:	4b2e      	ldr	r3, [pc, #184]	@ (8003ebc <_ZN17EndScreenViewBaseC1Ev+0x1ec>)
 8003e02:	4a2b      	ldr	r2, [pc, #172]	@ (8003eb0 <_ZN17EndScreenViewBaseC1Ev+0x1e0>)
 8003e04:	2161      	movs	r1, #97	@ 0x61
 8003e06:	e7f5      	b.n	8003df4 <_ZN17EndScreenViewBaseC1Ev+0x124>
        return texts->getText(typedTextId);
 8003e08:	4b2d      	ldr	r3, [pc, #180]	@ (8003ec0 <_ZN17EndScreenViewBaseC1Ev+0x1f0>)
 8003e0a:	4629      	mov	r1, r5
 8003e0c:	6818      	ldr	r0, [r3, #0]
 8003e0e:	f003 fae5 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8003e12:	4a2c      	ldr	r2, [pc, #176]	@ (8003ec4 <_ZN17EndScreenViewBaseC1Ev+0x1f4>)
 8003e14:	4603      	mov	r3, r0
 8003e16:	210a      	movs	r1, #10
 8003e18:	4658      	mov	r0, fp
 8003e1a:	f016 fe63 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003e1e:	f8c4 b128 	str.w	fp, [r4, #296]	@ 0x128
    playerwin.resizeToCurrentText();
 8003e22:	4630      	mov	r0, r6
 8003e24:	f010 fb0a 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e28:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 8003ecc <_ZN17EndScreenViewBaseC1Ev+0x1fc>
 8003e2c:	f8cd b020 	str.w	fp, [sp, #32]
 8003e30:	2328      	movs	r3, #40	@ 0x28
    playerwin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9392));
 8003e32:	a908      	add	r1, sp, #32
 8003e34:	4630      	mov	r0, r6
 8003e36:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003e3a:	f010 fb1f 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e3e:	4631      	mov	r1, r6
 8003e40:	4638      	mov	r0, r7
 8003e42:	f00c f9ad 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    winner.setXY(91, 28);
 8003e46:	221c      	movs	r2, #28
 8003e48:	4640      	mov	r0, r8
 8003e4a:	215b      	movs	r1, #91	@ 0x5b
 8003e4c:	f7ff f945 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 8003e50:	4641      	mov	r1, r8
 8003e52:	4648      	mov	r0, r9
        color = newColor;
 8003e54:	f8c4 a15c 	str.w	sl, [r4, #348]	@ 0x15c
        linespace = space;
 8003e58:	f8a4 5160 	strh.w	r5, [r4, #352]	@ 0x160
        boundingArea = calculateBoundingArea();
 8003e5c:	f010 f866 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e60:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8003e64:	f504 73b4 	add.w	r3, r4, #360	@ 0x168
 8003e68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003e6c:	2322      	movs	r3, #34	@ 0x22
    winner.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86XU));
 8003e6e:	a908      	add	r1, sp, #32
 8003e70:	4640      	mov	r0, r8
 8003e72:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8003e76:	f8cd b020 	str.w	fp, [sp, #32]
 8003e7a:	f010 faff 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e7e:	4638      	mov	r0, r7
 8003e80:	4641      	mov	r1, r8
 8003e82:	f00c f98d 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003e86:	4620      	mov	r0, r4
 8003e88:	b00b      	add	sp, #44	@ 0x2c
 8003e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e8e:	bf00      	nop
 8003e90:	0802d68c 	.word	0x0802d68c
 8003e94:	0802d514 	.word	0x0802d514
 8003e98:	0802d674 	.word	0x0802d674
 8003e9c:	08003c35 	.word	0x08003c35
 8003ea0:	ffaddced 	.word	0xffaddced
 8003ea4:	ffedf1f5 	.word	0xffedf1f5
 8003ea8:	20013fb8 	.word	0x20013fb8
 8003eac:	0802c32e 	.word	0x0802c32e
 8003eb0:	0802c430 	.word	0x0802c430
 8003eb4:	0802c3ab 	.word	0x0802c3ab
 8003eb8:	20013fbc 	.word	0x20013fbc
 8003ebc:	0802c3f2 	.word	0x0802c3f2
 8003ec0:	20013fc4 	.word	0x20013fc4
 8003ec4:	0802c47b 	.word	0x0802c47b
 8003ec8:	ff3f4669 	.word	0xff3f4669
 8003ecc:	0802d504 	.word	0x0802d504

08003ed0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003ed0:	4770      	bx	lr

08003ed2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003ed2:	4770      	bx	lr

08003ed4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003ed4:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8003ed8:	6808      	ldr	r0, [r1, #0]
 8003eda:	6849      	ldr	r1, [r1, #4]
 8003edc:	c303      	stmia	r3!, {r0, r1}
    }
 8003ede:	4770      	bx	lr

08003ee0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003ee0:	4770      	bx	lr

08003ee2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003ee2:	4770      	bx	lr

08003ee4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003ee4:	6041      	str	r1, [r0, #4]
    }
 8003ee6:	4770      	bx	lr

08003ee8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003ee8:	b510      	push	{r4, lr}
 8003eea:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003eec:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003ef0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003ef4:	8002      	strh	r2, [r0, #0]
 8003ef6:	8042      	strh	r2, [r0, #2]
 8003ef8:	8084      	strh	r4, [r0, #4]
 8003efa:	80c1      	strh	r1, [r0, #6]
        }
 8003efc:	bd10      	pop	{r4, pc}

08003efe <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003efe:	4770      	bx	lr

08003f00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003f00:	4770      	bx	lr

08003f02 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003f02:	4770      	bx	lr

08003f04 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8003f04:	4b06      	ldr	r3, [pc, #24]	@ (8003f20 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003f06:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8003f0a:	2300      	movs	r3, #0
 8003f0c:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003f10:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003f14:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8003f18:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
 8003f1c:	4770      	bx	lr
 8003f1e:	bf00      	nop
 8003f20:	0800476d 	.word	0x0800476d

08003f24 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003f24:	2301      	movs	r3, #1
 8003f26:	7203      	strb	r3, [r0, #8]
    }
 8003f28:	4770      	bx	lr

08003f2a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003f2a:	4770      	bx	lr

08003f2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003f2c:	4770      	bx	lr

08003f2e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003f2e:	4770      	bx	lr

08003f30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003f30:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003f32:	6840      	ldr	r0, [r0, #4]
 8003f34:	6803      	ldr	r3, [r0, #0]
 8003f36:	3110      	adds	r1, #16
 8003f38:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003f3a:	4718      	bx	r3

08003f3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8003f3c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003f3e:	6840      	ldr	r0, [r0, #4]
 8003f40:	6803      	ldr	r3, [r0, #0]
 8003f42:	3110      	adds	r1, #16
 8003f44:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003f46:	4718      	bx	r3

08003f48 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003f48:	4770      	bx	lr

08003f4a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003f4a:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003f4c:	68c2      	ldr	r2, [r0, #12]
 8003f4e:	6841      	ldr	r1, [r0, #4]
 8003f50:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003f52:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003f54:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003f58:	07d2      	lsls	r2, r2, #31
 8003f5a:	bf48      	it	mi
 8003f5c:	590a      	ldrmi	r2, [r1, r4]
 8003f5e:	689b      	ldr	r3, [r3, #8]
    }
 8003f60:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003f64:	bf48      	it	mi
 8003f66:	58d3      	ldrmi	r3, [r2, r3]
 8003f68:	4718      	bx	r3

08003f6a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8003f6a:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8003f6c:	6840      	ldr	r0, [r0, #4]
 8003f6e:	b130      	cbz	r0, 8003f7e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003f70:	689a      	ldr	r2, [r3, #8]
 8003f72:	b91a      	cbnz	r2, 8003f7c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8003f74:	68d8      	ldr	r0, [r3, #12]
 8003f76:	f000 0001 	and.w	r0, r0, #1
 8003f7a:	4770      	bx	lr
 8003f7c:	2001      	movs	r0, #1
    }
 8003f7e:	4770      	bx	lr

08003f80 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003f80:	b510      	push	{r4, lr}
 8003f82:	210c      	movs	r1, #12
 8003f84:	4604      	mov	r4, r0
 8003f86:	f025 feaf 	bl	8029ce8 <_ZdlPvj>
 8003f8a:	4620      	mov	r0, r4
 8003f8c:	bd10      	pop	{r4, pc}

08003f8e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003f8e:	b510      	push	{r4, lr}
 8003f90:	2110      	movs	r1, #16
 8003f92:	4604      	mov	r4, r0
 8003f94:	f025 fea8 	bl	8029ce8 <_ZdlPvj>
 8003f98:	4620      	mov	r0, r4
 8003f9a:	bd10      	pop	{r4, pc}

08003f9c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003f9c:	b510      	push	{r4, lr}
 8003f9e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003fa2:	4604      	mov	r4, r0
 8003fa4:	f025 fea0 	bl	8029ce8 <_ZdlPvj>
 8003fa8:	4620      	mov	r0, r4
 8003faa:	bd10      	pop	{r4, pc}

08003fac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8003fac:	b510      	push	{r4, lr}
 8003fae:	2138      	movs	r1, #56	@ 0x38
 8003fb0:	4604      	mov	r4, r0
 8003fb2:	f025 fe99 	bl	8029ce8 <_ZdlPvj>
 8003fb6:	4620      	mov	r0, r4
 8003fb8:	bd10      	pop	{r4, pc}

08003fba <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003fba:	b510      	push	{r4, lr}
 8003fbc:	2128      	movs	r1, #40	@ 0x28
 8003fbe:	4604      	mov	r4, r0
 8003fc0:	f025 fe92 	bl	8029ce8 <_ZdlPvj>
 8003fc4:	4620      	mov	r0, r4
 8003fc6:	bd10      	pop	{r4, pc}

08003fc8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003fc8:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003fca:	f013 f973 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
 8003fce:	6803      	ldr	r3, [r0, #0]
    }
 8003fd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003fd4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003fd6:	4718      	bx	r3

08003fd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003fd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003fda:	4604      	mov	r4, r0
        animationCounter++;
 8003fdc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003fde:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003fe0:	3001      	adds	r0, #1
 8003fe2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003fe4:	4298      	cmp	r0, r3
        animationCounter++;
 8003fe6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003fe8:	d905      	bls.n	8003ff6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003fea:	2301      	movs	r3, #1
 8003fec:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003fee:	2300      	movs	r3, #0
 8003ff0:	72a3      	strb	r3, [r4, #10]
    }
 8003ff2:	b003      	add	sp, #12
 8003ff4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003ff6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003ffa:	2100      	movs	r1, #0
 8003ffc:	f015 fa44 	bl	8019488 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004000:	07c3      	lsls	r3, r0, #31
 8004002:	d507      	bpl.n	8004014 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x3c>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004004:	2800      	cmp	r0, #0
 8004006:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800400a:	bfc8      	it	gt
 800400c:	2301      	movgt	r3, #1
 800400e:	fa13 f080 	uxtah	r0, r3, r0
 8004012:	b200      	sxth	r0, r0
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004014:	4b14      	ldr	r3, [pc, #80]	@ (8004068 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>)
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004016:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004018:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800401a:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800401c:	b283      	uxth	r3, r0
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800401e:	4813      	ldr	r0, [pc, #76]	@ (800406c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
 8004020:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004024:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004028:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800402a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800402c:	442b      	add	r3, r5
 800402e:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004030:	b212      	sxth	r2, r2
 8004032:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004036:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8004038:	8322      	strh	r2, [r4, #24]
 800403a:	f8ad 2000 	strh.w	r2, [sp]
 800403e:	2200      	movs	r2, #0
 8004040:	691b      	ldr	r3, [r3, #16]
 8004042:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004046:	4669      	mov	r1, sp
 8004048:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800404a:	7aa3      	ldrb	r3, [r4, #10]
 800404c:	2b01      	cmp	r3, #1
 800404e:	d1d0      	bne.n	8003ff2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004050:	4b07      	ldr	r3, [pc, #28]	@ (8004070 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
 8004052:	781b      	ldrb	r3, [r3, #0]
 8004054:	2b00      	cmp	r3, #0
 8004056:	d0cc      	beq.n	8003ff2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004058:	f013 f92c 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800405c:	b003      	add	sp, #12
 800405e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004062:	f013 b92d 	b.w	80172c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8004066:	bf00      	nop
 8004068:	20013f54 	.word	0x20013f54
 800406c:	20013f56 	.word	0x20013f56
 8004070:	20013f5e 	.word	0x20013f5e

08004074 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004074:	b510      	push	{r4, lr}
 8004076:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004078:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 800407c:	b158      	cbz	r0, 8004096 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	68db      	ldr	r3, [r3, #12]
 8004082:	4798      	blx	r3
 8004084:	b138      	cbz	r0, 8004096 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8004086:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 800408a:	6803      	ldr	r3, [r0, #0]
 800408c:	689b      	ldr	r3, [r3, #8]
 800408e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004090:	2300      	movs	r3, #0
 8004092:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8004096:	bd10      	pop	{r4, pc}

08004098 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004098:	4b04      	ldr	r3, [pc, #16]	@ (80040ac <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80040a0:	b10a      	cbz	r2, 80040a6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80040a2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80040a4:	b900      	cbnz	r0, 80040a8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80040a6:	6898      	ldr	r0, [r3, #8]
    }
 80040a8:	4770      	bx	lr
 80040aa:	bf00      	nop
 80040ac:	20013f60 	.word	0x20013f60

080040b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80040b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040b2:	4617      	mov	r7, r2
 80040b4:	4604      	mov	r4, r0
 80040b6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80040b8:	f013 f9e6 	bl	8017488 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80040bc:	4b12      	ldr	r3, [pc, #72]	@ (8004108 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80040be:	601c      	str	r4, [r3, #0]
      model(m)
 80040c0:	4b12      	ldr	r3, [pc, #72]	@ (800410c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80040c2:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80040c4:	4b12      	ldr	r3, [pc, #72]	@ (8004110 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 80040c6:	2500      	movs	r5, #0
 80040c8:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 80040cc:	4b11      	ldr	r3, [pc, #68]	@ (8004114 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80040ce:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 80040d2:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80040d4:	6803      	ldr	r3, [r0, #0]
 80040d6:	4629      	mov	r1, r5
 80040d8:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80040da:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 80040de:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80040e2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80040e4:	4628      	mov	r0, r5
 80040e6:	f003 f93d 	bl	8007364 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80040ea:	f7ff ffd5 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 80040ee:	f01d fcf8 	bl	8021ae2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80040f2:	f7ff ffd1 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 80040f6:	f01d fd6f 	bl	8021bd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 80040fa:	f7ff ffcd 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 80040fe:	f01d fd77 	bl	8021bf0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8004102:	4620      	mov	r0, r4
 8004104:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004106:	bf00      	nop
 8004108:	20013fb4 	.word	0x20013fb4
 800410c:	0802d740 	.word	0x0802d740
 8004110:	0802d728 	.word	0x0802d728
 8004114:	20013f60 	.word	0x20013f60

08004118 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004118:	4b06      	ldr	r3, [pc, #24]	@ (8004134 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x1c>)
 800411a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800411e:	2300      	movs	r3, #0
 8004120:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004124:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004128:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800412c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004130:	4770      	bx	lr
 8004132:	bf00      	nop
 8004134:	0800476d 	.word	0x0800476d

08004138 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv>:
 8004138:	4b06      	ldr	r3, [pc, #24]	@ (8004154 <_ZN23FrontendApplicationBase39gotoStartScreenScreenWipeTransitionEastEv+0x1c>)
 800413a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800413e:	2300      	movs	r3, #0
 8004140:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004144:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004148:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800414c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004150:	4770      	bx	lr
 8004152:	bf00      	nop
 8004154:	08004cd9 	.word	0x08004cd9

08004158 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>:
 8004158:	4b06      	ldr	r3, [pc, #24]	@ (8004174 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv+0x1c>)
 800415a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800415e:	2300      	movs	r3, #0
 8004160:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardScreen

void FrontendApplicationBase::gotoHardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004164:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004168:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800416c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004170:	4770      	bx	lr
 8004172:	bf00      	nop
 8004174:	08004621 	.word	0x08004621

08004178 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>:
 8004178:	4b06      	ldr	r3, [pc, #24]	@ (8004194 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv+0x1c>)
 800417a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800417e:	2300      	movs	r3, #0
 8004180:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// HardReadyScreen

void FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHardReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004184:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004188:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800418c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004190:	4770      	bx	lr
 8004192:	bf00      	nop
 8004194:	08004b9d 	.word	0x08004b9d

08004198 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>:
 8004198:	4b06      	ldr	r3, [pc, #24]	@ (80041b4 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv+0x1c>)
 800419a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800419e:	2300      	movs	r3, #0
 80041a0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumScreen

void FrontendApplicationBase::gotoMediumScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80041a8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80041ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80041b0:	4770      	bx	lr
 80041b2:	bf00      	nop
 80041b4:	080044d5 	.word	0x080044d5

080041b8 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>:
 80041b8:	4b06      	ldr	r3, [pc, #24]	@ (80041d4 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv+0x1c>)
 80041ba:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80041be:	2300      	movs	r3, #0
 80041c0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MediumReadyScreen

void FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMediumReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80041c8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80041cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80041d0:	4770      	bx	lr
 80041d2:	bf00      	nop
 80041d4:	08004a61 	.word	0x08004a61

080041d8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>:
 80041d8:	4b06      	ldr	r3, [pc, #24]	@ (80041f4 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv+0x1c>)
 80041da:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80041de:	2300      	movs	r3, #0
 80041e0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyScreen

void FrontendApplicationBase::gotoEasyScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041e4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80041e8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80041ec:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80041f0:	4770      	bx	lr
 80041f2:	bf00      	nop
 80041f4:	08004389 	.word	0x08004389

080041f8 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>:
 80041f8:	4b06      	ldr	r3, [pc, #24]	@ (8004214 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv+0x1c>)
 80041fa:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80041fe:	2300      	movs	r3, #0
 8004200:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EasyReadyScreen

void FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEasyReadyScreenScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004204:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004208:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800420c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004210:	4770      	bx	lr
 8004212:	bf00      	nop
 8004214:	08004925 	.word	0x08004925

08004218 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>:
 8004218:	4b06      	ldr	r3, [pc, #24]	@ (8004234 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv+0x1c>)
 800421a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800421e:	2300      	movs	r3, #0
 8004220:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// EndScreen

void FrontendApplicationBase::gotoEndScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004224:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8004228:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800422c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8004230:	4770      	bx	lr
 8004232:	bf00      	nop
 8004234:	08004241 	.word	0x08004241

08004238 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004238:	6803      	ldr	r3, [r0, #0]
 800423a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800423c:	4718      	bx	r3
	...

08004240 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoEndScreenScreenNoTransitionImpl()
{
 8004240:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EndScreenView, EndScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004244:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004248:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800424a:	68b0      	ldr	r0, [r6, #8]
 800424c:	6803      	ldr	r3, [r0, #0]
 800424e:	6a1b      	ldr	r3, [r3, #32]
 8004250:	4798      	blx	r3
 8004252:	f5b0 7fcc 	cmp.w	r0, #408	@ 0x198
 8004256:	d205      	bcs.n	8004264 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x24>
 8004258:	4b43      	ldr	r3, [pc, #268]	@ (8004368 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x128>)
 800425a:	4a44      	ldr	r2, [pc, #272]	@ (800436c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 800425c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800425e:	4844      	ldr	r0, [pc, #272]	@ (8004370 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x130>)
 8004260:	f026 fd80 	bl	802ad64 <__assert_func>
 8004264:	6870      	ldr	r0, [r6, #4]
 8004266:	6803      	ldr	r3, [r0, #0]
 8004268:	6a1b      	ldr	r3, [r3, #32]
 800426a:	4798      	blx	r3
 800426c:	280f      	cmp	r0, #15
 800426e:	d803      	bhi.n	8004278 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x38>
 8004270:	4b40      	ldr	r3, [pc, #256]	@ (8004374 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x134>)
 8004272:	4a3e      	ldr	r2, [pc, #248]	@ (800436c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 8004274:	21a4      	movs	r1, #164	@ 0xa4
 8004276:	e7f2      	b.n	800425e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004278:	68f0      	ldr	r0, [r6, #12]
 800427a:	6803      	ldr	r3, [r0, #0]
 800427c:	6a1b      	ldr	r3, [r3, #32]
 800427e:	4798      	blx	r3
 8004280:	280b      	cmp	r0, #11
 8004282:	d803      	bhi.n	800428c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x4c>
 8004284:	4b3c      	ldr	r3, [pc, #240]	@ (8004378 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x138>)
 8004286:	4a39      	ldr	r2, [pc, #228]	@ (800436c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x12c>)
 8004288:	21a5      	movs	r1, #165	@ 0xa5
 800428a:	e7e8      	b.n	800425e <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800428c:	f013 f812 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004290:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 8004380 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004294:	3004      	adds	r0, #4
 8004296:	f013 f85a 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800429a:	f8d9 0000 	ldr.w	r0, [r9]
 800429e:	b110      	cbz	r0, 80042a6 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80042a0:	6803      	ldr	r3, [r0, #0]
 80042a2:	68db      	ldr	r3, [r3, #12]
 80042a4:	4798      	blx	r3
    if (*currentTrans)
 80042a6:	f8d9 0000 	ldr.w	r0, [r9]
 80042aa:	b110      	cbz	r0, 80042b2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80042ac:	6803      	ldr	r3, [r0, #0]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4798      	blx	r3
    if (*currentScreen)
 80042b2:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004384 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x144>
 80042b6:	f8d8 0000 	ldr.w	r0, [r8]
 80042ba:	b110      	cbz	r0, 80042c2 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80042bc:	6803      	ldr	r3, [r0, #0]
 80042be:	695b      	ldr	r3, [r3, #20]
 80042c0:	4798      	blx	r3
    if (*currentPresenter)
 80042c2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80042c6:	b110      	cbz	r0, 80042ce <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80042c8:	6803      	ldr	r3, [r0, #0]
 80042ca:	685b      	ldr	r3, [r3, #4]
 80042cc:	4798      	blx	r3
    if (*currentScreen)
 80042ce:	f8d8 0000 	ldr.w	r0, [r8]
 80042d2:	b110      	cbz	r0, 80042da <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 80042d4:	6803      	ldr	r3, [r0, #0]
 80042d6:	681b      	ldr	r3, [r3, #0]
 80042d8:	4798      	blx	r3
    if (*currentPresenter)
 80042da:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80042de:	b110      	cbz	r0, 80042e6 <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80042e0:	6803      	ldr	r3, [r0, #0]
 80042e2:	689b      	ldr	r3, [r3, #8]
 80042e4:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042e6:	68f0      	ldr	r0, [r6, #12]
 80042e8:	2100      	movs	r1, #0
 80042ea:	f7ff ffa5 	bl	8004238 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 80042ee:	f04f 0b00 	mov.w	fp, #0
 80042f2:	4b22      	ldr	r3, [pc, #136]	@ (800437c <_ZN23FrontendApplicationBase35gotoEndScreenScreenNoTransitionImplEv+0x13c>)
 80042f4:	f8c0 b004 	str.w	fp, [r0, #4]
 80042f8:	4604      	mov	r4, r0
 80042fa:	f880 b008 	strb.w	fp, [r0, #8]
 80042fe:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004300:	68b0      	ldr	r0, [r6, #8]
 8004302:	6803      	ldr	r3, [r0, #0]
 8004304:	4659      	mov	r1, fp
 8004306:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004308:	4798      	blx	r3
 800430a:	4605      	mov	r5, r0
 800430c:	f004 f8f8 	bl	8008500 <_ZN13EndScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004310:	6870      	ldr	r0, [r6, #4]
 8004312:	6803      	ldr	r3, [r0, #0]
 8004314:	4659      	mov	r1, fp
 8004316:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004318:	4798      	blx	r3
 800431a:	4629      	mov	r1, r5
 800431c:	4606      	mov	r6, r0
 800431e:	f004 f8cb 	bl	80084b8 <_ZN18EndScreenPresenterC1ER13EndScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8004322:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004324:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004328:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800432c:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004330:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004334:	682b      	ldr	r3, [r5, #0]
//    virtual void movePaddle2Right() {}
//    virtual void paddle1Action() {}
//    virtual void paddle2Action() {}
    void bind(Model* m)
    {
        model = m;
 8004336:	f8c6 a008 	str.w	sl, [r6, #8]
 800433a:	4628      	mov	r0, r5
 800433c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800433e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004340:	4798      	blx	r3
    newPresenter->activate();
 8004342:	6833      	ldr	r3, [r6, #0]
 8004344:	4630      	mov	r0, r6
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800434a:	4621      	mov	r1, r4
 800434c:	4628      	mov	r0, r5
 800434e:	f015 f895 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004352:	6823      	ldr	r3, [r4, #0]
 8004354:	4620      	mov	r0, r4
 8004356:	691b      	ldr	r3, [r3, #16]
 8004358:	4798      	blx	r3
    newTransition->invalidate();
 800435a:	6823      	ldr	r3, [r4, #0]
 800435c:	695b      	ldr	r3, [r3, #20]
 800435e:	4620      	mov	r0, r4
}
 8004360:	b001      	add	sp, #4
 8004362:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004366:	4718      	bx	r3
 8004368:	0802c47e 	.word	0x0802c47e
 800436c:	0802c50c 	.word	0x0802c50c
 8004370:	0802c5e2 	.word	0x0802c5e2
 8004374:	0802c629 	.word	0x0802c629
 8004378:	0802c6cc 	.word	0x0802c6cc
 800437c:	0802d794 	.word	0x0802d794
 8004380:	20013fa8 	.word	0x20013fa8
 8004384:	20013fa4 	.word	0x20013fa4

08004388 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv>:
{
 8004388:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<EasyScreenView, EasyScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800438c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004390:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004392:	68b0      	ldr	r0, [r6, #8]
 8004394:	6803      	ldr	r3, [r0, #0]
 8004396:	6a1b      	ldr	r3, [r3, #32]
 8004398:	4798      	blx	r3
 800439a:	f241 63fb 	movw	r3, #5883	@ 0x16fb
 800439e:	4298      	cmp	r0, r3
 80043a0:	d805      	bhi.n	80043ae <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x26>
 80043a2:	4b44      	ldr	r3, [pc, #272]	@ (80044b4 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x12c>)
 80043a4:	4a44      	ldr	r2, [pc, #272]	@ (80044b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80043a6:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a8:	4844      	ldr	r0, [pc, #272]	@ (80044bc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x134>)
 80043aa:	f026 fcdb 	bl	802ad64 <__assert_func>
 80043ae:	6870      	ldr	r0, [r6, #4]
 80043b0:	6803      	ldr	r3, [r0, #0]
 80043b2:	6a1b      	ldr	r3, [r3, #32]
 80043b4:	4798      	blx	r3
 80043b6:	280f      	cmp	r0, #15
 80043b8:	d803      	bhi.n	80043c2 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x3a>
 80043ba:	4b41      	ldr	r3, [pc, #260]	@ (80044c0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x138>)
 80043bc:	4a3e      	ldr	r2, [pc, #248]	@ (80044b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80043be:	21a4      	movs	r1, #164	@ 0xa4
 80043c0:	e7f2      	b.n	80043a8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043c2:	68f0      	ldr	r0, [r6, #12]
 80043c4:	6803      	ldr	r3, [r0, #0]
 80043c6:	6a1b      	ldr	r3, [r3, #32]
 80043c8:	4798      	blx	r3
 80043ca:	280b      	cmp	r0, #11
 80043cc:	d803      	bhi.n	80043d6 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x4e>
 80043ce:	4b3d      	ldr	r3, [pc, #244]	@ (80044c4 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x13c>)
 80043d0:	4a39      	ldr	r2, [pc, #228]	@ (80044b8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x130>)
 80043d2:	21a5      	movs	r1, #165	@ 0xa5
 80043d4:	e7e8      	b.n	80043a8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043d6:	f012 ff6d 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043da:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80044cc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x144>
 80043de:	3004      	adds	r0, #4
 80043e0:	f012 ffb5 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043e4:	f8d9 0000 	ldr.w	r0, [r9]
 80043e8:	b110      	cbz	r0, 80043f0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80043ea:	6803      	ldr	r3, [r0, #0]
 80043ec:	68db      	ldr	r3, [r3, #12]
 80043ee:	4798      	blx	r3
    if (*currentTrans)
 80043f0:	f8d9 0000 	ldr.w	r0, [r9]
 80043f4:	b110      	cbz	r0, 80043fc <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80043f6:	6803      	ldr	r3, [r0, #0]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	4798      	blx	r3
    if (*currentScreen)
 80043fc:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80044d0 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x148>
 8004400:	f8d8 0000 	ldr.w	r0, [r8]
 8004404:	b110      	cbz	r0, 800440c <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004406:	6803      	ldr	r3, [r0, #0]
 8004408:	695b      	ldr	r3, [r3, #20]
 800440a:	4798      	blx	r3
    if (*currentPresenter)
 800440c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004410:	b110      	cbz	r0, 8004418 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004412:	6803      	ldr	r3, [r0, #0]
 8004414:	685b      	ldr	r3, [r3, #4]
 8004416:	4798      	blx	r3
    if (*currentScreen)
 8004418:	f8d8 0000 	ldr.w	r0, [r8]
 800441c:	b110      	cbz	r0, 8004424 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800441e:	6803      	ldr	r3, [r0, #0]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	4798      	blx	r3
    if (*currentPresenter)
 8004424:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004428:	b110      	cbz	r0, 8004430 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800442a:	6803      	ldr	r3, [r0, #0]
 800442c:	689b      	ldr	r3, [r3, #8]
 800442e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004430:	68f0      	ldr	r0, [r6, #12]
 8004432:	2100      	movs	r1, #0
 8004434:	f7ff ff00 	bl	8004238 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004438:	f04f 0b00 	mov.w	fp, #0
 800443c:	4b22      	ldr	r3, [pc, #136]	@ (80044c8 <_ZN23FrontendApplicationBase36gotoEasyScreenScreenNoTransitionImplEv+0x140>)
 800443e:	f8c0 b004 	str.w	fp, [r0, #4]
 8004442:	4604      	mov	r4, r0
 8004444:	f880 b008 	strb.w	fp, [r0, #8]
 8004448:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800444a:	68b0      	ldr	r0, [r6, #8]
 800444c:	6803      	ldr	r3, [r0, #0]
 800444e:	4659      	mov	r1, fp
 8004450:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004452:	4798      	blx	r3
 8004454:	4605      	mov	r5, r0
 8004456:	f003 f8c5 	bl	80075e4 <_ZN14EasyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800445a:	6870      	ldr	r0, [r6, #4]
 800445c:	6803      	ldr	r3, [r0, #0]
 800445e:	4659      	mov	r1, fp
 8004460:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004462:	4798      	blx	r3
 8004464:	4629      	mov	r1, r5
 8004466:	4606      	mov	r6, r0
 8004468:	f003 f890 	bl	800758c <_ZN19EasyScreenPresenterC1ER14EasyScreenView>
    model->bind(newPresenter);
 800446c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800446e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004472:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004476:	f8c8 5000 	str.w	r5, [r8]
 800447a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800447e:	682b      	ldr	r3, [r5, #0]
 8004480:	f8c6 a008 	str.w	sl, [r6, #8]
 8004484:	4628      	mov	r0, r5
 8004486:	68db      	ldr	r3, [r3, #12]
 8004488:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800448a:	4798      	blx	r3
    newPresenter->activate();
 800448c:	6833      	ldr	r3, [r6, #0]
 800448e:	4630      	mov	r0, r6
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004494:	4621      	mov	r1, r4
 8004496:	4628      	mov	r0, r5
 8004498:	f014 fff0 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800449c:	6823      	ldr	r3, [r4, #0]
 800449e:	4620      	mov	r0, r4
 80044a0:	691b      	ldr	r3, [r3, #16]
 80044a2:	4798      	blx	r3
    newTransition->invalidate();
 80044a4:	6823      	ldr	r3, [r4, #0]
 80044a6:	695b      	ldr	r3, [r3, #20]
 80044a8:	4620      	mov	r0, r4
}
 80044aa:	b001      	add	sp, #4
 80044ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044b0:	4718      	bx	r3
 80044b2:	bf00      	nop
 80044b4:	0802c47e 	.word	0x0802c47e
 80044b8:	0802c76f 	.word	0x0802c76f
 80044bc:	0802c5e2 	.word	0x0802c5e2
 80044c0:	0802c629 	.word	0x0802c629
 80044c4:	0802c6cc 	.word	0x0802c6cc
 80044c8:	0802d794 	.word	0x0802d794
 80044cc:	20013fa8 	.word	0x20013fa8
 80044d0:	20013fa4 	.word	0x20013fa4

080044d4 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv>:
{
 80044d4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MediumScreenView, MediumScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044d8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80044dc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044de:	68b0      	ldr	r0, [r6, #8]
 80044e0:	6803      	ldr	r3, [r0, #0]
 80044e2:	6a1b      	ldr	r3, [r3, #32]
 80044e4:	4798      	blx	r3
 80044e6:	f241 7363 	movw	r3, #5987	@ 0x1763
 80044ea:	4298      	cmp	r0, r3
 80044ec:	d805      	bhi.n	80044fa <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x26>
 80044ee:	4b44      	ldr	r3, [pc, #272]	@ (8004600 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x12c>)
 80044f0:	4a44      	ldr	r2, [pc, #272]	@ (8004604 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 80044f2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044f4:	4844      	ldr	r0, [pc, #272]	@ (8004608 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x134>)
 80044f6:	f026 fc35 	bl	802ad64 <__assert_func>
 80044fa:	6870      	ldr	r0, [r6, #4]
 80044fc:	6803      	ldr	r3, [r0, #0]
 80044fe:	6a1b      	ldr	r3, [r3, #32]
 8004500:	4798      	blx	r3
 8004502:	280f      	cmp	r0, #15
 8004504:	d803      	bhi.n	800450e <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x3a>
 8004506:	4b41      	ldr	r3, [pc, #260]	@ (800460c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x138>)
 8004508:	4a3e      	ldr	r2, [pc, #248]	@ (8004604 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 800450a:	21a4      	movs	r1, #164	@ 0xa4
 800450c:	e7f2      	b.n	80044f4 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800450e:	68f0      	ldr	r0, [r6, #12]
 8004510:	6803      	ldr	r3, [r0, #0]
 8004512:	6a1b      	ldr	r3, [r3, #32]
 8004514:	4798      	blx	r3
 8004516:	280b      	cmp	r0, #11
 8004518:	d803      	bhi.n	8004522 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x4e>
 800451a:	4b3d      	ldr	r3, [pc, #244]	@ (8004610 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x13c>)
 800451c:	4a39      	ldr	r2, [pc, #228]	@ (8004604 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x130>)
 800451e:	21a5      	movs	r1, #165	@ 0xa5
 8004520:	e7e8      	b.n	80044f4 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004522:	f012 fec7 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004526:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8004618 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x144>
 800452a:	3004      	adds	r0, #4
 800452c:	f012 ff0f 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004530:	f8d9 0000 	ldr.w	r0, [r9]
 8004534:	b110      	cbz	r0, 800453c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004536:	6803      	ldr	r3, [r0, #0]
 8004538:	68db      	ldr	r3, [r3, #12]
 800453a:	4798      	blx	r3
    if (*currentTrans)
 800453c:	f8d9 0000 	ldr.w	r0, [r9]
 8004540:	b110      	cbz	r0, 8004548 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004542:	6803      	ldr	r3, [r0, #0]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	4798      	blx	r3
    if (*currentScreen)
 8004548:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800461c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x148>
 800454c:	f8d8 0000 	ldr.w	r0, [r8]
 8004550:	b110      	cbz	r0, 8004558 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004552:	6803      	ldr	r3, [r0, #0]
 8004554:	695b      	ldr	r3, [r3, #20]
 8004556:	4798      	blx	r3
    if (*currentPresenter)
 8004558:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800455c:	b110      	cbz	r0, 8004564 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800455e:	6803      	ldr	r3, [r0, #0]
 8004560:	685b      	ldr	r3, [r3, #4]
 8004562:	4798      	blx	r3
    if (*currentScreen)
 8004564:	f8d8 0000 	ldr.w	r0, [r8]
 8004568:	b110      	cbz	r0, 8004570 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800456a:	6803      	ldr	r3, [r0, #0]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	4798      	blx	r3
    if (*currentPresenter)
 8004570:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004574:	b110      	cbz	r0, 800457c <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004576:	6803      	ldr	r3, [r0, #0]
 8004578:	689b      	ldr	r3, [r3, #8]
 800457a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800457c:	68f0      	ldr	r0, [r6, #12]
 800457e:	2100      	movs	r1, #0
 8004580:	f7ff fe5a 	bl	8004238 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8004584:	f04f 0b00 	mov.w	fp, #0
 8004588:	4b22      	ldr	r3, [pc, #136]	@ (8004614 <_ZN23FrontendApplicationBase38gotoMediumScreenScreenNoTransitionImplEv+0x140>)
 800458a:	f8c0 b004 	str.w	fp, [r0, #4]
 800458e:	4604      	mov	r4, r0
 8004590:	f880 b008 	strb.w	fp, [r0, #8]
 8004594:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004596:	68b0      	ldr	r0, [r6, #8]
 8004598:	6803      	ldr	r3, [r0, #0]
 800459a:	4659      	mov	r1, fp
 800459c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800459e:	4798      	blx	r3
 80045a0:	4605      	mov	r5, r0
 80045a2:	f005 fbd1 	bl	8009d48 <_ZN16MediumScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045a6:	6870      	ldr	r0, [r6, #4]
 80045a8:	6803      	ldr	r3, [r0, #0]
 80045aa:	4659      	mov	r1, fp
 80045ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045ae:	4798      	blx	r3
 80045b0:	4629      	mov	r1, r5
 80045b2:	4606      	mov	r6, r0
 80045b4:	f005 fb9c 	bl	8009cf0 <_ZN21MediumScreenPresenterC1ER16MediumScreenView>
    model->bind(newPresenter);
 80045b8:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80045ba:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80045be:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80045c2:	f8c8 5000 	str.w	r5, [r8]
 80045c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045ca:	682b      	ldr	r3, [r5, #0]
 80045cc:	f8c6 a008 	str.w	sl, [r6, #8]
 80045d0:	4628      	mov	r0, r5
 80045d2:	68db      	ldr	r3, [r3, #12]
 80045d4:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80045d6:	4798      	blx	r3
    newPresenter->activate();
 80045d8:	6833      	ldr	r3, [r6, #0]
 80045da:	4630      	mov	r0, r6
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045e0:	4621      	mov	r1, r4
 80045e2:	4628      	mov	r0, r5
 80045e4:	f014 ff4a 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045e8:	6823      	ldr	r3, [r4, #0]
 80045ea:	4620      	mov	r0, r4
 80045ec:	691b      	ldr	r3, [r3, #16]
 80045ee:	4798      	blx	r3
    newTransition->invalidate();
 80045f0:	6823      	ldr	r3, [r4, #0]
 80045f2:	695b      	ldr	r3, [r3, #20]
 80045f4:	4620      	mov	r0, r4
}
 80045f6:	b001      	add	sp, #4
 80045f8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045fc:	4718      	bx	r3
 80045fe:	bf00      	nop
 8004600:	0802c47e 	.word	0x0802c47e
 8004604:	0802c847 	.word	0x0802c847
 8004608:	0802c5e2 	.word	0x0802c5e2
 800460c:	0802c629 	.word	0x0802c629
 8004610:	0802c6cc 	.word	0x0802c6cc
 8004614:	0802d794 	.word	0x0802d794
 8004618:	20013fa8 	.word	0x20013fa8
 800461c:	20013fa4 	.word	0x20013fa4

08004620 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv>:
{
 8004620:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HardScreenView, HardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004624:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004628:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800462a:	68b0      	ldr	r0, [r6, #8]
 800462c:	6803      	ldr	r3, [r0, #0]
 800462e:	6a1b      	ldr	r3, [r3, #32]
 8004630:	4798      	blx	r3
 8004632:	f641 0313 	movw	r3, #6163	@ 0x1813
 8004636:	4298      	cmp	r0, r3
 8004638:	d805      	bhi.n	8004646 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x26>
 800463a:	4b44      	ldr	r3, [pc, #272]	@ (800474c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x12c>)
 800463c:	4a44      	ldr	r2, [pc, #272]	@ (8004750 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 800463e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004640:	4844      	ldr	r0, [pc, #272]	@ (8004754 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x134>)
 8004642:	f026 fb8f 	bl	802ad64 <__assert_func>
 8004646:	6870      	ldr	r0, [r6, #4]
 8004648:	6803      	ldr	r3, [r0, #0]
 800464a:	6a1b      	ldr	r3, [r3, #32]
 800464c:	4798      	blx	r3
 800464e:	280f      	cmp	r0, #15
 8004650:	d803      	bhi.n	800465a <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x3a>
 8004652:	4b41      	ldr	r3, [pc, #260]	@ (8004758 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x138>)
 8004654:	4a3e      	ldr	r2, [pc, #248]	@ (8004750 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 8004656:	21a4      	movs	r1, #164	@ 0xa4
 8004658:	e7f2      	b.n	8004640 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800465a:	68f0      	ldr	r0, [r6, #12]
 800465c:	6803      	ldr	r3, [r0, #0]
 800465e:	6a1b      	ldr	r3, [r3, #32]
 8004660:	4798      	blx	r3
 8004662:	280b      	cmp	r0, #11
 8004664:	d803      	bhi.n	800466e <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x4e>
 8004666:	4b3d      	ldr	r3, [pc, #244]	@ (800475c <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x13c>)
 8004668:	4a39      	ldr	r2, [pc, #228]	@ (8004750 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x130>)
 800466a:	21a5      	movs	r1, #165	@ 0xa5
 800466c:	e7e8      	b.n	8004640 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800466e:	f012 fe21 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004672:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8004764 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x144>
 8004676:	3004      	adds	r0, #4
 8004678:	f012 fe69 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800467c:	f8d9 0000 	ldr.w	r0, [r9]
 8004680:	b110      	cbz	r0, 8004688 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004682:	6803      	ldr	r3, [r0, #0]
 8004684:	68db      	ldr	r3, [r3, #12]
 8004686:	4798      	blx	r3
    if (*currentTrans)
 8004688:	f8d9 0000 	ldr.w	r0, [r9]
 800468c:	b110      	cbz	r0, 8004694 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800468e:	6803      	ldr	r3, [r0, #0]
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	4798      	blx	r3
    if (*currentScreen)
 8004694:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8004768 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x148>
 8004698:	f8d8 0000 	ldr.w	r0, [r8]
 800469c:	b110      	cbz	r0, 80046a4 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800469e:	6803      	ldr	r3, [r0, #0]
 80046a0:	695b      	ldr	r3, [r3, #20]
 80046a2:	4798      	blx	r3
    if (*currentPresenter)
 80046a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80046a8:	b110      	cbz	r0, 80046b0 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80046aa:	6803      	ldr	r3, [r0, #0]
 80046ac:	685b      	ldr	r3, [r3, #4]
 80046ae:	4798      	blx	r3
    if (*currentScreen)
 80046b0:	f8d8 0000 	ldr.w	r0, [r8]
 80046b4:	b110      	cbz	r0, 80046bc <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80046b6:	6803      	ldr	r3, [r0, #0]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	4798      	blx	r3
    if (*currentPresenter)
 80046bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80046c0:	b110      	cbz	r0, 80046c8 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80046c2:	6803      	ldr	r3, [r0, #0]
 80046c4:	689b      	ldr	r3, [r3, #8]
 80046c6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046c8:	68f0      	ldr	r0, [r6, #12]
 80046ca:	2100      	movs	r1, #0
 80046cc:	f7ff fdb4 	bl	8004238 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80046d0:	f04f 0b00 	mov.w	fp, #0
 80046d4:	4b22      	ldr	r3, [pc, #136]	@ (8004760 <_ZN23FrontendApplicationBase36gotoHardScreenScreenNoTransitionImplEv+0x140>)
 80046d6:	f8c0 b004 	str.w	fp, [r0, #4]
 80046da:	4604      	mov	r4, r0
 80046dc:	f880 b008 	strb.w	fp, [r0, #8]
 80046e0:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046e2:	68b0      	ldr	r0, [r6, #8]
 80046e4:	6803      	ldr	r3, [r0, #0]
 80046e6:	4659      	mov	r1, fp
 80046e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046ea:	4798      	blx	r3
 80046ec:	4605      	mov	r5, r0
 80046ee:	f004 f827 	bl	8008740 <_ZN14HardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046f2:	6870      	ldr	r0, [r6, #4]
 80046f4:	6803      	ldr	r3, [r0, #0]
 80046f6:	4659      	mov	r1, fp
 80046f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046fa:	4798      	blx	r3
 80046fc:	4629      	mov	r1, r5
 80046fe:	4606      	mov	r6, r0
 8004700:	f003 fff2 	bl	80086e8 <_ZN19HardScreenPresenterC1ER14HardScreenView>
    model->bind(newPresenter);
 8004704:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004706:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800470a:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800470e:	f8c8 5000 	str.w	r5, [r8]
 8004712:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004716:	682b      	ldr	r3, [r5, #0]
 8004718:	f8c6 a008 	str.w	sl, [r6, #8]
 800471c:	4628      	mov	r0, r5
 800471e:	68db      	ldr	r3, [r3, #12]
 8004720:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004722:	4798      	blx	r3
    newPresenter->activate();
 8004724:	6833      	ldr	r3, [r6, #0]
 8004726:	4630      	mov	r0, r6
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800472c:	4621      	mov	r1, r4
 800472e:	4628      	mov	r0, r5
 8004730:	f014 fea4 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004734:	6823      	ldr	r3, [r4, #0]
 8004736:	4620      	mov	r0, r4
 8004738:	691b      	ldr	r3, [r3, #16]
 800473a:	4798      	blx	r3
    newTransition->invalidate();
 800473c:	6823      	ldr	r3, [r4, #0]
 800473e:	695b      	ldr	r3, [r3, #20]
 8004740:	4620      	mov	r0, r4
}
 8004742:	b001      	add	sp, #4
 8004744:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004748:	4718      	bx	r3
 800474a:	bf00      	nop
 800474c:	0802c47e 	.word	0x0802c47e
 8004750:	0802c923 	.word	0x0802c923
 8004754:	0802c5e2 	.word	0x0802c5e2
 8004758:	0802c629 	.word	0x0802c629
 800475c:	0802c6cc 	.word	0x0802c6cc
 8004760:	0802d794 	.word	0x0802d794
 8004764:	20013fa8 	.word	0x20013fa8
 8004768:	20013fa4 	.word	0x20013fa4

0800476c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
 800476c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004770:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004774:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004776:	68b0      	ldr	r0, [r6, #8]
 8004778:	6803      	ldr	r3, [r0, #0]
 800477a:	6a1b      	ldr	r3, [r3, #32]
 800477c:	4798      	blx	r3
 800477e:	f641 037b 	movw	r3, #6267	@ 0x187b
 8004782:	4298      	cmp	r0, r3
 8004784:	d805      	bhi.n	8004792 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x26>
 8004786:	4b44      	ldr	r3, [pc, #272]	@ (8004898 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>)
 8004788:	4a44      	ldr	r2, [pc, #272]	@ (800489c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 800478a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800478c:	4844      	ldr	r0, [pc, #272]	@ (80048a0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x134>)
 800478e:	f026 fae9 	bl	802ad64 <__assert_func>
 8004792:	6870      	ldr	r0, [r6, #4]
 8004794:	6803      	ldr	r3, [r0, #0]
 8004796:	6a1b      	ldr	r3, [r3, #32]
 8004798:	4798      	blx	r3
 800479a:	280f      	cmp	r0, #15
 800479c:	d803      	bhi.n	80047a6 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x3a>
 800479e:	4b41      	ldr	r3, [pc, #260]	@ (80048a4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x138>)
 80047a0:	4a3e      	ldr	r2, [pc, #248]	@ (800489c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 80047a2:	21a4      	movs	r1, #164	@ 0xa4
 80047a4:	e7f2      	b.n	800478c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047a6:	68f0      	ldr	r0, [r6, #12]
 80047a8:	6803      	ldr	r3, [r0, #0]
 80047aa:	6a1b      	ldr	r3, [r3, #32]
 80047ac:	4798      	blx	r3
 80047ae:	280b      	cmp	r0, #11
 80047b0:	d803      	bhi.n	80047ba <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x4e>
 80047b2:	4b3d      	ldr	r3, [pc, #244]	@ (80048a8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x13c>)
 80047b4:	4a39      	ldr	r2, [pc, #228]	@ (800489c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x130>)
 80047b6:	21a5      	movs	r1, #165	@ 0xa5
 80047b8:	e7e8      	b.n	800478c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80047ba:	f012 fd7b 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80047be:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 80048b0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x144>
 80047c2:	3004      	adds	r0, #4
 80047c4:	f012 fdc3 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80047c8:	f8d9 0000 	ldr.w	r0, [r9]
 80047cc:	b110      	cbz	r0, 80047d4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80047ce:	6803      	ldr	r3, [r0, #0]
 80047d0:	68db      	ldr	r3, [r3, #12]
 80047d2:	4798      	blx	r3
    if (*currentTrans)
 80047d4:	f8d9 0000 	ldr.w	r0, [r9]
 80047d8:	b110      	cbz	r0, 80047e0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80047da:	6803      	ldr	r3, [r0, #0]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4798      	blx	r3
    if (*currentScreen)
 80047e0:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 80048b4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
 80047e4:	f8d8 0000 	ldr.w	r0, [r8]
 80047e8:	b110      	cbz	r0, 80047f0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047ea:	6803      	ldr	r3, [r0, #0]
 80047ec:	695b      	ldr	r3, [r3, #20]
 80047ee:	4798      	blx	r3
    if (*currentPresenter)
 80047f0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80047f4:	b110      	cbz	r0, 80047fc <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047f6:	6803      	ldr	r3, [r0, #0]
 80047f8:	685b      	ldr	r3, [r3, #4]
 80047fa:	4798      	blx	r3
    if (*currentScreen)
 80047fc:	f8d8 0000 	ldr.w	r0, [r8]
 8004800:	b110      	cbz	r0, 8004808 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004802:	6803      	ldr	r3, [r0, #0]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	4798      	blx	r3
    if (*currentPresenter)
 8004808:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800480c:	b110      	cbz	r0, 8004814 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800480e:	6803      	ldr	r3, [r0, #0]
 8004810:	689b      	ldr	r3, [r3, #8]
 8004812:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004814:	68f0      	ldr	r0, [r6, #12]
 8004816:	2100      	movs	r1, #0
 8004818:	f7ff fd0e 	bl	8004238 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800481c:	f04f 0b00 	mov.w	fp, #0
 8004820:	4b22      	ldr	r3, [pc, #136]	@ (80048ac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>)
 8004822:	f8c0 b004 	str.w	fp, [r0, #4]
 8004826:	4604      	mov	r4, r0
 8004828:	f880 b008 	strb.w	fp, [r0, #8]
 800482c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800482e:	68b0      	ldr	r0, [r6, #8]
 8004830:	6803      	ldr	r3, [r0, #0]
 8004832:	4659      	mov	r1, fp
 8004834:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004836:	4798      	blx	r3
 8004838:	4605      	mov	r5, r0
 800483a:	f006 fa67 	bl	800ad0c <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800483e:	6870      	ldr	r0, [r6, #4]
 8004840:	6803      	ldr	r3, [r0, #0]
 8004842:	4659      	mov	r1, fp
 8004844:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004846:	4798      	blx	r3
 8004848:	4629      	mov	r1, r5
 800484a:	4606      	mov	r6, r0
 800484c:	f006 fa3c 	bl	800acc8 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 8004850:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004852:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004856:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800485a:	f8c8 5000 	str.w	r5, [r8]
 800485e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004862:	682b      	ldr	r3, [r5, #0]
 8004864:	f8c6 a008 	str.w	sl, [r6, #8]
 8004868:	4628      	mov	r0, r5
 800486a:	68db      	ldr	r3, [r3, #12]
 800486c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800486e:	4798      	blx	r3
    newPresenter->activate();
 8004870:	6833      	ldr	r3, [r6, #0]
 8004872:	4630      	mov	r0, r6
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004878:	4621      	mov	r1, r4
 800487a:	4628      	mov	r0, r5
 800487c:	f014 fdfe 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004880:	6823      	ldr	r3, [r4, #0]
 8004882:	4620      	mov	r0, r4
 8004884:	691b      	ldr	r3, [r3, #16]
 8004886:	4798      	blx	r3
    newTransition->invalidate();
 8004888:	6823      	ldr	r3, [r4, #0]
 800488a:	695b      	ldr	r3, [r3, #20]
 800488c:	4620      	mov	r0, r4
}
 800488e:	b001      	add	sp, #4
 8004890:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004894:	4718      	bx	r3
 8004896:	bf00      	nop
 8004898:	0802c47e 	.word	0x0802c47e
 800489c:	0802c9fb 	.word	0x0802c9fb
 80048a0:	0802c5e2 	.word	0x0802c5e2
 80048a4:	0802c629 	.word	0x0802c629
 80048a8:	0802c6cc 	.word	0x0802c6cc
 80048ac:	0802d794 	.word	0x0802d794
 80048b0:	20013fa8 	.word	0x20013fa8
 80048b4:	20013fa4 	.word	0x20013fa4

080048b8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 80048b8:	6803      	ldr	r3, [r0, #0]
 80048ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048bc:	4718      	bx	r3
	...

080048c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
 80048c0:	2300      	movs	r3, #0
    WipeTransition(const uint8_t transitionSteps = 20)
 80048c2:	b570      	push	{r4, r5, r6, lr}
          solid()
 80048c4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80048c8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80048cc:	e9c0 3309 	strd	r3, r3, [r0, #36]	@ 0x24
 80048d0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80048d4:	6043      	str	r3, [r0, #4]
 80048d6:	7203      	strb	r3, [r0, #8]
          animationCounter(0),
 80048d8:	7283      	strb	r3, [r0, #10]
          calculatedValue(0),
 80048da:	81c3      	strh	r3, [r0, #14]
          solid()
 80048dc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80048e0:	6343      	str	r3, [r0, #52]	@ 0x34
    class FullSolidRect : public Widget
 80048e2:	4b0c      	ldr	r3, [pc, #48]	@ (8004914 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 80048e4:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80048e6:	4b0c      	ldr	r3, [pc, #48]	@ (8004918 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
          animationSteps(transitionSteps),
 80048e8:	7241      	strb	r1, [r0, #9]
            targetValue = HAL::DISPLAY_WIDTH;
 80048ea:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80048ee:	4b0b      	ldr	r3, [pc, #44]	@ (800491c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
          solid()
 80048f0:	4a0b      	ldr	r2, [pc, #44]	@ (8004920 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80048f2:	f9b3 6000 	ldrsh.w	r6, [r3]
          solid()
 80048f6:	6002      	str	r2, [r0, #0]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80048f8:	f100 0510 	add.w	r5, r0, #16
    WipeTransition(const uint8_t transitionSteps = 20)
 80048fc:	4604      	mov	r4, r0
            targetValue = HAL::DISPLAY_WIDTH;
 80048fe:	8181      	strh	r1, [r0, #12]
        setWidth(width);
 8004900:	4628      	mov	r0, r5
 8004902:	f7fd f9b7 	bl	8001c74 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8004906:	4628      	mov	r0, r5
 8004908:	4631      	mov	r1, r6
 800490a:	f7fd f9b5 	bl	8001c78 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 800490e:	4620      	mov	r0, r4
 8004910:	bd70      	pop	{r4, r5, r6, pc}
 8004912:	bf00      	nop
 8004914:	0802d6c0 	.word	0x0802d6c0
 8004918:	20013f54 	.word	0x20013f54
 800491c:	20013f56 	.word	0x20013f56
 8004920:	0802d7b8 	.word	0x0802d7b8

08004924 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv>:
{
 8004924:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<EasyReadyScreenView, EasyReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004928:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 800492c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800492e:	68b0      	ldr	r0, [r6, #8]
 8004930:	6803      	ldr	r3, [r0, #0]
 8004932:	6a1b      	ldr	r3, [r3, #32]
 8004934:	4798      	blx	r3
 8004936:	f241 53bb 	movw	r3, #5563	@ 0x15bb
 800493a:	4298      	cmp	r0, r3
 800493c:	d805      	bhi.n	800494a <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x26>
 800493e:	4b41      	ldr	r3, [pc, #260]	@ (8004a44 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8004940:	4a41      	ldr	r2, [pc, #260]	@ (8004a48 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004942:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004944:	4841      	ldr	r0, [pc, #260]	@ (8004a4c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8004946:	f026 fa0d 	bl	802ad64 <__assert_func>
 800494a:	6870      	ldr	r0, [r6, #4]
 800494c:	6803      	ldr	r3, [r0, #0]
 800494e:	6a1b      	ldr	r3, [r3, #32]
 8004950:	4798      	blx	r3
 8004952:	280f      	cmp	r0, #15
 8004954:	d803      	bhi.n	800495e <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8004956:	4b3e      	ldr	r3, [pc, #248]	@ (8004a50 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004958:	4a3b      	ldr	r2, [pc, #236]	@ (8004a48 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 800495a:	21a4      	movs	r1, #164	@ 0xa4
 800495c:	e7f2      	b.n	8004944 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800495e:	68f0      	ldr	r0, [r6, #12]
 8004960:	6803      	ldr	r3, [r0, #0]
 8004962:	6a1b      	ldr	r3, [r3, #32]
 8004964:	4798      	blx	r3
 8004966:	2837      	cmp	r0, #55	@ 0x37
 8004968:	d803      	bhi.n	8004972 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 800496a:	4b3a      	ldr	r3, [pc, #232]	@ (8004a54 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 800496c:	4a36      	ldr	r2, [pc, #216]	@ (8004a48 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 800496e:	21a5      	movs	r1, #165	@ 0xa5
 8004970:	e7e8      	b.n	8004944 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004972:	f012 fc9f 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004976:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004a58 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x134>
 800497a:	3004      	adds	r0, #4
 800497c:	f012 fce7 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004980:	f8d9 0000 	ldr.w	r0, [r9]
 8004984:	b110      	cbz	r0, 800498c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004986:	6803      	ldr	r3, [r0, #0]
 8004988:	68db      	ldr	r3, [r3, #12]
 800498a:	4798      	blx	r3
    if (*currentTrans)
 800498c:	f8d9 0000 	ldr.w	r0, [r9]
 8004990:	b110      	cbz	r0, 8004998 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004992:	6803      	ldr	r3, [r0, #0]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	4798      	blx	r3
    if (*currentScreen)
 8004998:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004a5c <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x138>
 800499c:	f8d8 0000 	ldr.w	r0, [r8]
 80049a0:	b110      	cbz	r0, 80049a8 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80049a2:	6803      	ldr	r3, [r0, #0]
 80049a4:	695b      	ldr	r3, [r3, #20]
 80049a6:	4798      	blx	r3
    if (*currentPresenter)
 80049a8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80049ac:	b110      	cbz	r0, 80049b4 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80049ae:	6803      	ldr	r3, [r0, #0]
 80049b0:	685b      	ldr	r3, [r3, #4]
 80049b2:	4798      	blx	r3
    if (*currentScreen)
 80049b4:	f8d8 0000 	ldr.w	r0, [r8]
 80049b8:	b110      	cbz	r0, 80049c0 <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80049ba:	6803      	ldr	r3, [r0, #0]
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	4798      	blx	r3
    if (*currentPresenter)
 80049c0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80049c4:	b110      	cbz	r0, 80049cc <_ZN23FrontendApplicationBase47gotoEasyReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80049c6:	6803      	ldr	r3, [r0, #0]
 80049c8:	689b      	ldr	r3, [r3, #8]
 80049ca:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049cc:	68f0      	ldr	r0, [r6, #12]
 80049ce:	2100      	movs	r1, #0
 80049d0:	f7ff ff72 	bl	80048b8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80049d4:	2114      	movs	r1, #20
 80049d6:	4604      	mov	r4, r0
 80049d8:	f7ff ff72 	bl	80048c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049dc:	68b0      	ldr	r0, [r6, #8]
 80049de:	6803      	ldr	r3, [r0, #0]
 80049e0:	2100      	movs	r1, #0
 80049e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049e4:	4798      	blx	r3
 80049e6:	4605      	mov	r5, r0
 80049e8:	f002 fd72 	bl	80074d0 <_ZN19EasyReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049ec:	6870      	ldr	r0, [r6, #4]
 80049ee:	6803      	ldr	r3, [r0, #0]
 80049f0:	2100      	movs	r1, #0
 80049f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049f4:	4798      	blx	r3
 80049f6:	4629      	mov	r1, r5
 80049f8:	4606      	mov	r6, r0
 80049fa:	f002 fd33 	bl	8007464 <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>
    model->bind(newPresenter);
 80049fe:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004a00:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004a04:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004a08:	f8c8 5000 	str.w	r5, [r8]
 8004a0c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a10:	682b      	ldr	r3, [r5, #0]
 8004a12:	f8c6 a008 	str.w	sl, [r6, #8]
 8004a16:	4628      	mov	r0, r5
 8004a18:	68db      	ldr	r3, [r3, #12]
 8004a1a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004a1c:	4798      	blx	r3
    newPresenter->activate();
 8004a1e:	6833      	ldr	r3, [r6, #0]
 8004a20:	4630      	mov	r0, r6
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a26:	4621      	mov	r1, r4
 8004a28:	4628      	mov	r0, r5
 8004a2a:	f014 fd27 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a2e:	6823      	ldr	r3, [r4, #0]
 8004a30:	4620      	mov	r0, r4
 8004a32:	691b      	ldr	r3, [r3, #16]
 8004a34:	4798      	blx	r3
    newTransition->invalidate();
 8004a36:	6823      	ldr	r3, [r4, #0]
 8004a38:	4620      	mov	r0, r4
 8004a3a:	695b      	ldr	r3, [r3, #20]
}
 8004a3c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a40:	4718      	bx	r3
 8004a42:	bf00      	nop
 8004a44:	0802c47e 	.word	0x0802c47e
 8004a48:	0802cad5 	.word	0x0802cad5
 8004a4c:	0802c5e2 	.word	0x0802c5e2
 8004a50:	0802c629 	.word	0x0802c629
 8004a54:	0802c6cc 	.word	0x0802c6cc
 8004a58:	20013fa8 	.word	0x20013fa8
 8004a5c:	20013fa4 	.word	0x20013fa4

08004a60 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv>:
{
 8004a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MediumReadyScreenView, MediumReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a64:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004a68:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a6a:	68b0      	ldr	r0, [r6, #8]
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	6a1b      	ldr	r3, [r3, #32]
 8004a70:	4798      	blx	r3
 8004a72:	f241 6323 	movw	r3, #5667	@ 0x1623
 8004a76:	4298      	cmp	r0, r3
 8004a78:	d805      	bhi.n	8004a86 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8004a7a:	4b41      	ldr	r3, [pc, #260]	@ (8004b80 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8004a7c:	4a41      	ldr	r2, [pc, #260]	@ (8004b84 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004a7e:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a80:	4841      	ldr	r0, [pc, #260]	@ (8004b88 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8004a82:	f026 f96f 	bl	802ad64 <__assert_func>
 8004a86:	6870      	ldr	r0, [r6, #4]
 8004a88:	6803      	ldr	r3, [r0, #0]
 8004a8a:	6a1b      	ldr	r3, [r3, #32]
 8004a8c:	4798      	blx	r3
 8004a8e:	280f      	cmp	r0, #15
 8004a90:	d803      	bhi.n	8004a9a <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8004a92:	4b3e      	ldr	r3, [pc, #248]	@ (8004b8c <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004a94:	4a3b      	ldr	r2, [pc, #236]	@ (8004b84 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004a96:	21a4      	movs	r1, #164	@ 0xa4
 8004a98:	e7f2      	b.n	8004a80 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a9a:	68f0      	ldr	r0, [r6, #12]
 8004a9c:	6803      	ldr	r3, [r0, #0]
 8004a9e:	6a1b      	ldr	r3, [r3, #32]
 8004aa0:	4798      	blx	r3
 8004aa2:	2837      	cmp	r0, #55	@ 0x37
 8004aa4:	d803      	bhi.n	8004aae <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8004aa6:	4b3a      	ldr	r3, [pc, #232]	@ (8004b90 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8004aa8:	4a36      	ldr	r2, [pc, #216]	@ (8004b84 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004aaa:	21a5      	movs	r1, #165	@ 0xa5
 8004aac:	e7e8      	b.n	8004a80 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004aae:	f012 fc01 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ab2:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004b94 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8004ab6:	3004      	adds	r0, #4
 8004ab8:	f012 fc49 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004abc:	f8d9 0000 	ldr.w	r0, [r9]
 8004ac0:	b110      	cbz	r0, 8004ac8 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ac2:	6803      	ldr	r3, [r0, #0]
 8004ac4:	68db      	ldr	r3, [r3, #12]
 8004ac6:	4798      	blx	r3
    if (*currentTrans)
 8004ac8:	f8d9 0000 	ldr.w	r0, [r9]
 8004acc:	b110      	cbz	r0, 8004ad4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004ace:	6803      	ldr	r3, [r0, #0]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	4798      	blx	r3
    if (*currentScreen)
 8004ad4:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004b98 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8004ad8:	f8d8 0000 	ldr.w	r0, [r8]
 8004adc:	b110      	cbz	r0, 8004ae4 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004ade:	6803      	ldr	r3, [r0, #0]
 8004ae0:	695b      	ldr	r3, [r3, #20]
 8004ae2:	4798      	blx	r3
    if (*currentPresenter)
 8004ae4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004ae8:	b110      	cbz	r0, 8004af0 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004aea:	6803      	ldr	r3, [r0, #0]
 8004aec:	685b      	ldr	r3, [r3, #4]
 8004aee:	4798      	blx	r3
    if (*currentScreen)
 8004af0:	f8d8 0000 	ldr.w	r0, [r8]
 8004af4:	b110      	cbz	r0, 8004afc <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004af6:	6803      	ldr	r3, [r0, #0]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	4798      	blx	r3
    if (*currentPresenter)
 8004afc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004b00:	b110      	cbz	r0, 8004b08 <_ZN23FrontendApplicationBase49gotoMediumReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b02:	6803      	ldr	r3, [r0, #0]
 8004b04:	689b      	ldr	r3, [r3, #8]
 8004b06:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b08:	68f0      	ldr	r0, [r6, #12]
 8004b0a:	2100      	movs	r1, #0
 8004b0c:	f7ff fed4 	bl	80048b8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b10:	2114      	movs	r1, #20
 8004b12:	4604      	mov	r4, r0
 8004b14:	f7ff fed4 	bl	80048c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b18:	68b0      	ldr	r0, [r6, #8]
 8004b1a:	6803      	ldr	r3, [r0, #0]
 8004b1c:	2100      	movs	r1, #0
 8004b1e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b20:	4798      	blx	r3
 8004b22:	4605      	mov	r5, r0
 8004b24:	f005 f886 	bl	8009c34 <_ZN21MediumReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b28:	6870      	ldr	r0, [r6, #4]
 8004b2a:	6803      	ldr	r3, [r0, #0]
 8004b2c:	2100      	movs	r1, #0
 8004b2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b30:	4798      	blx	r3
 8004b32:	4629      	mov	r1, r5
 8004b34:	4606      	mov	r6, r0
 8004b36:	f005 f847 	bl	8009bc8 <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>
    model->bind(newPresenter);
 8004b3a:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004b3c:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004b40:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004b44:	f8c8 5000 	str.w	r5, [r8]
 8004b48:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b4c:	682b      	ldr	r3, [r5, #0]
 8004b4e:	f8c6 a008 	str.w	sl, [r6, #8]
 8004b52:	4628      	mov	r0, r5
 8004b54:	68db      	ldr	r3, [r3, #12]
 8004b56:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004b58:	4798      	blx	r3
    newPresenter->activate();
 8004b5a:	6833      	ldr	r3, [r6, #0]
 8004b5c:	4630      	mov	r0, r6
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b62:	4621      	mov	r1, r4
 8004b64:	4628      	mov	r0, r5
 8004b66:	f014 fc89 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b6a:	6823      	ldr	r3, [r4, #0]
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	691b      	ldr	r3, [r3, #16]
 8004b70:	4798      	blx	r3
    newTransition->invalidate();
 8004b72:	6823      	ldr	r3, [r4, #0]
 8004b74:	4620      	mov	r0, r4
 8004b76:	695b      	ldr	r3, [r3, #20]
}
 8004b78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b7c:	4718      	bx	r3
 8004b7e:	bf00      	nop
 8004b80:	0802c47e 	.word	0x0802c47e
 8004b84:	0802cbc9 	.word	0x0802cbc9
 8004b88:	0802c5e2 	.word	0x0802c5e2
 8004b8c:	0802c629 	.word	0x0802c629
 8004b90:	0802c6cc 	.word	0x0802c6cc
 8004b94:	20013fa8 	.word	0x20013fa8
 8004b98:	20013fa4 	.word	0x20013fa4

08004b9c <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv>:
{
 8004b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<HardReadyScreenView, HardReadyScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ba0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004ba4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ba6:	68b0      	ldr	r0, [r6, #8]
 8004ba8:	6803      	ldr	r3, [r0, #0]
 8004baa:	6a1b      	ldr	r3, [r3, #32]
 8004bac:	4798      	blx	r3
 8004bae:	f241 63d3 	movw	r3, #5843	@ 0x16d3
 8004bb2:	4298      	cmp	r0, r3
 8004bb4:	d805      	bhi.n	8004bc2 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x26>
 8004bb6:	4b41      	ldr	r3, [pc, #260]	@ (8004cbc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x120>)
 8004bb8:	4a41      	ldr	r2, [pc, #260]	@ (8004cc0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004bba:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bbc:	4841      	ldr	r0, [pc, #260]	@ (8004cc4 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x128>)
 8004bbe:	f026 f8d1 	bl	802ad64 <__assert_func>
 8004bc2:	6870      	ldr	r0, [r6, #4]
 8004bc4:	6803      	ldr	r3, [r0, #0]
 8004bc6:	6a1b      	ldr	r3, [r3, #32]
 8004bc8:	4798      	blx	r3
 8004bca:	280f      	cmp	r0, #15
 8004bcc:	d803      	bhi.n	8004bd6 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x3a>
 8004bce:	4b3e      	ldr	r3, [pc, #248]	@ (8004cc8 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004bd0:	4a3b      	ldr	r2, [pc, #236]	@ (8004cc0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004bd2:	21a4      	movs	r1, #164	@ 0xa4
 8004bd4:	e7f2      	b.n	8004bbc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bd6:	68f0      	ldr	r0, [r6, #12]
 8004bd8:	6803      	ldr	r3, [r0, #0]
 8004bda:	6a1b      	ldr	r3, [r3, #32]
 8004bdc:	4798      	blx	r3
 8004bde:	2837      	cmp	r0, #55	@ 0x37
 8004be0:	d803      	bhi.n	8004bea <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x4e>
 8004be2:	4b3a      	ldr	r3, [pc, #232]	@ (8004ccc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x130>)
 8004be4:	4a36      	ldr	r2, [pc, #216]	@ (8004cc0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x124>)
 8004be6:	21a5      	movs	r1, #165	@ 0xa5
 8004be8:	e7e8      	b.n	8004bbc <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004bea:	f012 fb63 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bee:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004cd0 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x134>
 8004bf2:	3004      	adds	r0, #4
 8004bf4:	f012 fbab 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004bf8:	f8d9 0000 	ldr.w	r0, [r9]
 8004bfc:	b110      	cbz	r0, 8004c04 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004bfe:	6803      	ldr	r3, [r0, #0]
 8004c00:	68db      	ldr	r3, [r3, #12]
 8004c02:	4798      	blx	r3
    if (*currentTrans)
 8004c04:	f8d9 0000 	ldr.w	r0, [r9]
 8004c08:	b110      	cbz	r0, 8004c10 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c0a:	6803      	ldr	r3, [r0, #0]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	4798      	blx	r3
    if (*currentScreen)
 8004c10:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004cd4 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x138>
 8004c14:	f8d8 0000 	ldr.w	r0, [r8]
 8004c18:	b110      	cbz	r0, 8004c20 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c1a:	6803      	ldr	r3, [r0, #0]
 8004c1c:	695b      	ldr	r3, [r3, #20]
 8004c1e:	4798      	blx	r3
    if (*currentPresenter)
 8004c20:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004c24:	b110      	cbz	r0, 8004c2c <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c26:	6803      	ldr	r3, [r0, #0]
 8004c28:	685b      	ldr	r3, [r3, #4]
 8004c2a:	4798      	blx	r3
    if (*currentScreen)
 8004c2c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c30:	b110      	cbz	r0, 8004c38 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c32:	6803      	ldr	r3, [r0, #0]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4798      	blx	r3
    if (*currentPresenter)
 8004c38:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004c3c:	b110      	cbz	r0, 8004c44 <_ZN23FrontendApplicationBase47gotoHardReadyScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c3e:	6803      	ldr	r3, [r0, #0]
 8004c40:	689b      	ldr	r3, [r3, #8]
 8004c42:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c44:	68f0      	ldr	r0, [r6, #12]
 8004c46:	2100      	movs	r1, #0
 8004c48:	f7ff fe36 	bl	80048b8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004c4c:	2114      	movs	r1, #20
 8004c4e:	4604      	mov	r4, r0
 8004c50:	f7ff fe36 	bl	80048c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c54:	68b0      	ldr	r0, [r6, #8]
 8004c56:	6803      	ldr	r3, [r0, #0]
 8004c58:	2100      	movs	r1, #0
 8004c5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c5c:	4798      	blx	r3
 8004c5e:	4605      	mov	r5, r0
 8004c60:	f003 fce8 	bl	8008634 <_ZN19HardReadyScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c64:	6870      	ldr	r0, [r6, #4]
 8004c66:	6803      	ldr	r3, [r0, #0]
 8004c68:	2100      	movs	r1, #0
 8004c6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c6c:	4798      	blx	r3
 8004c6e:	4629      	mov	r1, r5
 8004c70:	4606      	mov	r6, r0
 8004c72:	f003 fca9 	bl	80085c8 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>
    model->bind(newPresenter);
 8004c76:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004c78:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004c7c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004c80:	f8c8 5000 	str.w	r5, [r8]
 8004c84:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c88:	682b      	ldr	r3, [r5, #0]
 8004c8a:	f8c6 a008 	str.w	sl, [r6, #8]
 8004c8e:	4628      	mov	r0, r5
 8004c90:	68db      	ldr	r3, [r3, #12]
 8004c92:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004c94:	4798      	blx	r3
    newPresenter->activate();
 8004c96:	6833      	ldr	r3, [r6, #0]
 8004c98:	4630      	mov	r0, r6
 8004c9a:	681b      	ldr	r3, [r3, #0]
 8004c9c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c9e:	4621      	mov	r1, r4
 8004ca0:	4628      	mov	r0, r5
 8004ca2:	f014 fbeb 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ca6:	6823      	ldr	r3, [r4, #0]
 8004ca8:	4620      	mov	r0, r4
 8004caa:	691b      	ldr	r3, [r3, #16]
 8004cac:	4798      	blx	r3
    newTransition->invalidate();
 8004cae:	6823      	ldr	r3, [r4, #0]
 8004cb0:	4620      	mov	r0, r4
 8004cb2:	695b      	ldr	r3, [r3, #20]
}
 8004cb4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cb8:	4718      	bx	r3
 8004cba:	bf00      	nop
 8004cbc:	0802c47e 	.word	0x0802c47e
 8004cc0:	0802ccc1 	.word	0x0802ccc1
 8004cc4:	0802c5e2 	.word	0x0802c5e2
 8004cc8:	0802c629 	.word	0x0802c629
 8004ccc:	0802c6cc 	.word	0x0802c6cc
 8004cd0:	20013fa8 	.word	0x20013fa8
 8004cd4:	20013fa4 	.word	0x20013fa4

08004cd8 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv>:
{
 8004cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cdc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004ce0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ce2:	68b0      	ldr	r0, [r6, #8]
 8004ce4:	6803      	ldr	r3, [r0, #0]
 8004ce6:	6a1b      	ldr	r3, [r3, #32]
 8004ce8:	4798      	blx	r3
 8004cea:	f641 037b 	movw	r3, #6267	@ 0x187b
 8004cee:	4298      	cmp	r0, r3
 8004cf0:	d805      	bhi.n	8004cfe <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x26>
 8004cf2:	4b41      	ldr	r3, [pc, #260]	@ (8004df8 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x120>)
 8004cf4:	4a41      	ldr	r2, [pc, #260]	@ (8004dfc <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004cf6:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004cf8:	4841      	ldr	r0, [pc, #260]	@ (8004e00 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x128>)
 8004cfa:	f026 f833 	bl	802ad64 <__assert_func>
 8004cfe:	6870      	ldr	r0, [r6, #4]
 8004d00:	6803      	ldr	r3, [r0, #0]
 8004d02:	6a1b      	ldr	r3, [r3, #32]
 8004d04:	4798      	blx	r3
 8004d06:	280f      	cmp	r0, #15
 8004d08:	d803      	bhi.n	8004d12 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x3a>
 8004d0a:	4b3e      	ldr	r3, [pc, #248]	@ (8004e04 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x12c>)
 8004d0c:	4a3b      	ldr	r2, [pc, #236]	@ (8004dfc <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004d0e:	21a4      	movs	r1, #164	@ 0xa4
 8004d10:	e7f2      	b.n	8004cf8 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d12:	68f0      	ldr	r0, [r6, #12]
 8004d14:	6803      	ldr	r3, [r0, #0]
 8004d16:	6a1b      	ldr	r3, [r3, #32]
 8004d18:	4798      	blx	r3
 8004d1a:	2837      	cmp	r0, #55	@ 0x37
 8004d1c:	d803      	bhi.n	8004d26 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x4e>
 8004d1e:	4b3a      	ldr	r3, [pc, #232]	@ (8004e08 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x130>)
 8004d20:	4a36      	ldr	r2, [pc, #216]	@ (8004dfc <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x124>)
 8004d22:	21a5      	movs	r1, #165	@ 0xa5
 8004d24:	e7e8      	b.n	8004cf8 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d26:	f012 fac5 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d2a:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004e0c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x134>
 8004d2e:	3004      	adds	r0, #4
 8004d30:	f012 fb0d 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d34:	f8d9 0000 	ldr.w	r0, [r9]
 8004d38:	b110      	cbz	r0, 8004d40 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d3a:	6803      	ldr	r3, [r0, #0]
 8004d3c:	68db      	ldr	r3, [r3, #12]
 8004d3e:	4798      	blx	r3
    if (*currentTrans)
 8004d40:	f8d9 0000 	ldr.w	r0, [r9]
 8004d44:	b110      	cbz	r0, 8004d4c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d46:	6803      	ldr	r3, [r0, #0]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	4798      	blx	r3
    if (*currentScreen)
 8004d4c:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004e10 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x138>
 8004d50:	f8d8 0000 	ldr.w	r0, [r8]
 8004d54:	b110      	cbz	r0, 8004d5c <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004d56:	6803      	ldr	r3, [r0, #0]
 8004d58:	695b      	ldr	r3, [r3, #20]
 8004d5a:	4798      	blx	r3
    if (*currentPresenter)
 8004d5c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004d60:	b110      	cbz	r0, 8004d68 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004d62:	6803      	ldr	r3, [r0, #0]
 8004d64:	685b      	ldr	r3, [r3, #4]
 8004d66:	4798      	blx	r3
    if (*currentScreen)
 8004d68:	f8d8 0000 	ldr.w	r0, [r8]
 8004d6c:	b110      	cbz	r0, 8004d74 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004d6e:	6803      	ldr	r3, [r0, #0]
 8004d70:	681b      	ldr	r3, [r3, #0]
 8004d72:	4798      	blx	r3
    if (*currentPresenter)
 8004d74:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004d78:	b110      	cbz	r0, 8004d80 <_ZN23FrontendApplicationBase43gotoStartScreenScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004d7a:	6803      	ldr	r3, [r0, #0]
 8004d7c:	689b      	ldr	r3, [r3, #8]
 8004d7e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d80:	68f0      	ldr	r0, [r6, #12]
 8004d82:	2100      	movs	r1, #0
 8004d84:	f7ff fd98 	bl	80048b8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004d88:	2114      	movs	r1, #20
 8004d8a:	4604      	mov	r4, r0
 8004d8c:	f7ff fd98 	bl	80048c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d90:	68b0      	ldr	r0, [r6, #8]
 8004d92:	6803      	ldr	r3, [r0, #0]
 8004d94:	2100      	movs	r1, #0
 8004d96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d98:	4798      	blx	r3
 8004d9a:	4605      	mov	r5, r0
 8004d9c:	f005 ffb6 	bl	800ad0c <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004da0:	6870      	ldr	r0, [r6, #4]
 8004da2:	6803      	ldr	r3, [r0, #0]
 8004da4:	2100      	movs	r1, #0
 8004da6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004da8:	4798      	blx	r3
 8004daa:	4629      	mov	r1, r5
 8004dac:	4606      	mov	r6, r0
 8004dae:	f005 ff8b 	bl	800acc8 <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
 8004db2:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004db4:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004db8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004dbc:	f8c8 5000 	str.w	r5, [r8]
 8004dc0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dc4:	682b      	ldr	r3, [r5, #0]
 8004dc6:	f8c6 a008 	str.w	sl, [r6, #8]
 8004dca:	4628      	mov	r0, r5
 8004dcc:	68db      	ldr	r3, [r3, #12]
 8004dce:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004dd0:	4798      	blx	r3
    newPresenter->activate();
 8004dd2:	6833      	ldr	r3, [r6, #0]
 8004dd4:	4630      	mov	r0, r6
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dda:	4621      	mov	r1, r4
 8004ddc:	4628      	mov	r0, r5
 8004dde:	f014 fb4d 	bl	801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004de2:	6823      	ldr	r3, [r4, #0]
 8004de4:	4620      	mov	r0, r4
 8004de6:	691b      	ldr	r3, [r3, #16]
 8004de8:	4798      	blx	r3
    newTransition->invalidate();
 8004dea:	6823      	ldr	r3, [r4, #0]
 8004dec:	4620      	mov	r0, r4
 8004dee:	695b      	ldr	r3, [r3, #20]
}
 8004df0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004df4:	4718      	bx	r3
 8004df6:	bf00      	nop
 8004df8:	0802c47e 	.word	0x0802c47e
 8004dfc:	0802cdb5 	.word	0x0802cdb5
 8004e00:	0802c5e2 	.word	0x0802c5e2
 8004e04:	0802c629 	.word	0x0802c629
 8004e08:	0802c6cc 	.word	0x0802c6cc
 8004e0c:	20013fa8 	.word	0x20013fa8
 8004e10:	20013fa4 	.word	0x20013fa4

08004e14 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004e14:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8004e16:	4770      	bx	lr

08004e18 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004e18:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8004e1a:	4770      	bx	lr

08004e1c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004e1c:	4770      	bx	lr

08004e1e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004e1e:	888b      	ldrh	r3, [r1, #4]
 8004e20:	69c0      	ldr	r0, [r0, #28]
 8004e22:	680a      	ldr	r2, [r1, #0]
 8004e24:	0adb      	lsrs	r3, r3, #11
 8004e26:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004e2a:	4410      	add	r0, r2
 8004e2c:	4770      	bx	lr

08004e2e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004e2e:	b510      	push	{r4, lr}
 8004e30:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8004e32:	b1ba      	cbz	r2, 8004e64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004e34:	7b10      	ldrb	r0, [r2, #12]
 8004e36:	b168      	cbz	r0, 8004e54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004e38:	7b53      	ldrb	r3, [r2, #13]
 8004e3a:	7ad2      	ldrb	r2, [r2, #11]
 8004e3c:	021b      	lsls	r3, r3, #8
 8004e3e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004e42:	431a      	orrs	r2, r3
 8004e44:	6a23      	ldr	r3, [r4, #32]
 8004e46:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004e4a:	881a      	ldrh	r2, [r3, #0]
 8004e4c:	428a      	cmp	r2, r1
 8004e4e:	d102      	bne.n	8004e56 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004e50:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8004e54:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004e56:	d805      	bhi.n	8004e64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004e58:	3801      	subs	r0, #1
 8004e5a:	b280      	uxth	r0, r0
 8004e5c:	3304      	adds	r3, #4
 8004e5e:	2800      	cmp	r0, #0
 8004e60:	d1f3      	bne.n	8004e4a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004e62:	e7f7      	b.n	8004e54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004e64:	2000      	movs	r0, #0
 8004e66:	e7f5      	b.n	8004e54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004e68 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004e68:	b510      	push	{r4, lr}
 8004e6a:	212c      	movs	r1, #44	@ 0x2c
 8004e6c:	4604      	mov	r4, r0
 8004e6e:	f024 ff3b 	bl	8029ce8 <_ZdlPvj>
 8004e72:	4620      	mov	r0, r4
 8004e74:	bd10      	pop	{r4, pc}
	...

08004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004e78:	b530      	push	{r4, r5, lr}
 8004e7a:	b08b      	sub	sp, #44	@ 0x2c
 8004e7c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004e7e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8004e82:	9508      	str	r5, [sp, #32]
 8004e84:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8004e88:	9507      	str	r5, [sp, #28]
 8004e8a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8004e8e:	9506      	str	r5, [sp, #24]
 8004e90:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8004e94:	9505      	str	r5, [sp, #20]
 8004e96:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8004e9a:	9504      	str	r5, [sp, #16]
 8004e9c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8004ea0:	9503      	str	r5, [sp, #12]
 8004ea2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8004ea6:	9502      	str	r5, [sp, #8]
 8004ea8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8004eac:	9501      	str	r5, [sp, #4]
 8004eae:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8004eb2:	9500      	str	r5, [sp, #0]
 8004eb4:	f013 fe6e 	bl	8018b94 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004eb8:	4b06      	ldr	r3, [pc, #24]	@ (8004ed4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004eba:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004ebc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8004ebe:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004ec0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8004ec2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004ec4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004ec6:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8004ec8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8004eca:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8004ecc:	4620      	mov	r0, r4
 8004ece:	b00b      	add	sp, #44	@ 0x2c
 8004ed0:	bd30      	pop	{r4, r5, pc}
 8004ed2:	bf00      	nop
 8004ed4:	0802d7dc 	.word	0x0802d7dc

08004ed8 <_ZN23HardReadyScreenViewBase11setupScreenEv>:
}

void HardReadyScreenViewBase::setupScreen()
{

}
 8004ed8:	4770      	bx	lr
	...

08004edc <_ZN23HardReadyScreenViewBaseD1Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 8004edc:	b510      	push	{r4, lr}
 8004ede:	4b03      	ldr	r3, [pc, #12]	@ (8004eec <_ZN23HardReadyScreenViewBaseD1Ev+0x10>)
 8004ee0:	6003      	str	r3, [r0, #0]
 8004ee2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004ee4:	f010 fcec 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004ee8:	4620      	mov	r0, r4
 8004eea:	bd10      	pop	{r4, pc}
 8004eec:	0802d8ac 	.word	0x0802d8ac

08004ef0 <_ZN23HardReadyScreenViewBaseD0Ev>:
HardReadyScreenViewBase::~HardReadyScreenViewBase()
 8004ef0:	b510      	push	{r4, lr}
 8004ef2:	4b06      	ldr	r3, [pc, #24]	@ (8004f0c <_ZN23HardReadyScreenViewBaseD0Ev+0x1c>)
 8004ef4:	6003      	str	r3, [r0, #0]
 8004ef6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004ef8:	f010 fce2 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004efc:	4620      	mov	r0, r4
 8004efe:	f241 61d0 	movw	r1, #5840	@ 0x16d0
 8004f02:	f024 fef1 	bl	8029ce8 <_ZdlPvj>
 8004f06:	4620      	mov	r0, r4
 8004f08:	bd10      	pop	{r4, pc}
 8004f0a:	bf00      	nop
 8004f0c:	0802d8ac 	.word	0x0802d8ac

08004f10 <_ZN23HardReadyScreenViewBase15handleTickEventEv>:

void HardReadyScreenViewBase::handleTickEvent()
{
 8004f10:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 8004f12:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8004f16:	f8d4 36cc 	ldr.w	r3, [r4, #1740]	@ 0x6cc
 8004f1a:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8004f1c:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 8004f1e:	f8c4 36cc 	str.w	r3, [r4, #1740]	@ 0x6cc
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8004f22:	d106      	bne.n	8004f32 <_ZN23HardReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004f24:	f012 f9c6 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to HardScreen
        //Go to HardScreen with no screen transition
        application().gotoHardScreenScreenNoTransition();
 8004f28:	f7ff f916 	bl	8004158 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8004f2c:	2300      	movs	r3, #0
 8004f2e:	f8c4 36cc 	str.w	r3, [r4, #1740]	@ 0x6cc
    }
}
 8004f32:	bd10      	pop	{r4, pc}

08004f34 <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 8004f34:	2200      	movs	r2, #0
 8004f36:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004f3a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8004f3e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8004f42:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8004f46:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004f4a:	8482      	strh	r2, [r0, #36]	@ 0x24
class Widget : public Drawable
 8004f4c:	4a01      	ldr	r2, [pc, #4]	@ (8004f54 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8004f4e:	6002      	str	r2, [r0, #0]
 8004f50:	4770      	bx	lr
 8004f52:	bf00      	nop
 8004f54:	0802d844 	.word	0x0802d844

08004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8004f58:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8004f5a:	2226      	movs	r2, #38	@ 0x26
    Image(const Bitmap& bmp = Bitmap())
 8004f5c:	4604      	mov	r4, r0
 8004f5e:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8004f60:	2100      	movs	r1, #0
 8004f62:	f026 f918 	bl	802b196 <memset>
 8004f66:	4620      	mov	r0, r4
 8004f68:	f7ff ffe4 	bl	8004f34 <_ZN8touchgfx6WidgetC1Ev>
 8004f6c:	4b06      	ldr	r3, [pc, #24]	@ (8004f88 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8004f6e:	6023      	str	r3, [r4, #0]
 8004f70:	882b      	ldrh	r3, [r5, #0]
 8004f72:	84e3      	strh	r3, [r4, #38]	@ 0x26
 8004f74:	23ff      	movs	r3, #255	@ 0xff
    {
        Image::setBitmap(bmp);
 8004f76:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8004f78:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
        Image::setBitmap(bmp);
 8004f7c:	4629      	mov	r1, r5
 8004f7e:	f00f fc97 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8004f82:	4620      	mov	r0, r4
 8004f84:	bd38      	pop	{r3, r4, r5, pc}
 8004f86:	bf00      	nop
 8004f88:	0802e2bc 	.word	0x0802e2bc

08004f8c <_ZN23HardReadyScreenViewBaseC1Ev>:
HardReadyScreenViewBase::HardReadyScreenViewBase() :
 8004f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f90:	4604      	mov	r4, r0
 8004f92:	b097      	sub	sp, #92	@ 0x5c
    frameCountInteraction1Interval(0)
 8004f94:	46a0      	mov	r8, r4
        : presenter(0)
 8004f96:	2600      	movs	r6, #0
 8004f98:	f014 f8c4 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 8004f9c:	4bdf      	ldr	r3, [pc, #892]	@ (800531c <_ZN23HardReadyScreenViewBaseC1Ev+0x390>)
 8004f9e:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8004fa0:	f848 3b40 	str.w	r3, [r8], #64
 8004fa4:	4640      	mov	r0, r8
 8004fa6:	f7fe f8b9 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8004faa:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8004fae:	4618      	mov	r0, r3
 8004fb0:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8004fb4:	9309      	str	r3, [sp, #36]	@ 0x24
 8004fb6:	f104 09c4 	add.w	r9, r4, #196	@ 0xc4
 8004fba:	f7fe f8af 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8004fbe:	4650      	mov	r0, sl
 8004fc0:	f7fe f8ac 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8004fc4:	4648      	mov	r0, r9
 8004fc6:	f7fe f8a9 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8004fca:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8004fce:	4618      	mov	r0, r3
 8004fd0:	930a      	str	r3, [sp, #40]	@ 0x28
 8004fd2:	f00d fe27 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8004fd6:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8004fda:	4618      	mov	r0, r3
 8004fdc:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004fde:	f7fc ff2d 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004fe2:	4bcf      	ldr	r3, [pc, #828]	@ (8005320 <_ZN23HardReadyScreenViewBaseC1Ev+0x394>)
 8004fe4:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8004fe8:	3324      	adds	r3, #36	@ 0x24
 8004fea:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 8004fee:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8004ff2:	4618      	mov	r0, r3
 8004ff4:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 8004ff8:	4dca      	ldr	r5, [pc, #808]	@ (8005324 <_ZN23HardReadyScreenViewBaseC1Ev+0x398>)
 8004ffa:	930e      	str	r3, [sp, #56]	@ 0x38
        touchable = touch;
 8004ffc:	f04f 0701 	mov.w	r7, #1
 8005000:	f7fe f88c 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005004:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8005008:	f504 7bd2 	add.w	fp, r4, #420	@ 0x1a4
 800500c:	4618      	mov	r0, r3
 800500e:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8005012:	f884 7170 	strb.w	r7, [r4, #368]	@ 0x170
 8005016:	930d      	str	r3, [sp, #52]	@ 0x34
 8005018:	f7fe f880 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 800501c:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8005020:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 8005024:	4658      	mov	r0, fp
 8005026:	f7fe f88f 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 800502a:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
 800502e:	4618      	mov	r0, r3
 8005030:	9304      	str	r3, [sp, #16]
 8005032:	f7fe f889 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8005036:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 800503a:	4618      	mov	r0, r3
 800503c:	4dba      	ldr	r5, [pc, #744]	@ (8005328 <_ZN23HardReadyScreenViewBaseC1Ev+0x39c>)
 800503e:	930c      	str	r3, [sp, #48]	@ 0x30
 8005040:	f7fe f86c 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005044:	f504 731a 	add.w	r3, r4, #616	@ 0x268
 8005048:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 800504c:	4618      	mov	r0, r3
        : color(col)
 800504e:	f8c4 6260 	str.w	r6, [r4, #608]	@ 0x260
 8005052:	f8a4 6264 	strh.w	r6, [r4, #612]	@ 0x264
 8005056:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005058:	f7fe f860 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 800505c:	f504 7327 	add.w	r3, r4, #668	@ 0x29c
 8005060:	f8c4 5268 	str.w	r5, [r4, #616]	@ 0x268
 8005064:	4618      	mov	r0, r3
 8005066:	f8c4 6294 	str.w	r6, [r4, #660]	@ 0x294
 800506a:	f8a4 6298 	strh.w	r6, [r4, #664]	@ 0x298
        : TextAreaWithWildcardBase(), wc1(0)
 800506e:	4daf      	ldr	r5, [pc, #700]	@ (800532c <_ZN23HardReadyScreenViewBaseC1Ev+0x3a0>)
        : TextArea()
 8005070:	9302      	str	r3, [sp, #8]
 8005072:	f7fe f869 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8005076:	f504 733a 	add.w	r3, r4, #744	@ 0x2e8
        : TextAreaWithWildcardBase(), wc1(0)
 800507a:	f8c4 529c 	str.w	r5, [r4, #668]	@ 0x29c
        : TextArea()
 800507e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005080:	f8c4 62e4 	str.w	r6, [r4, #740]	@ 0x2e4
        : TextArea()
 8005084:	9303      	str	r3, [sp, #12]
 8005086:	f7fe f85f 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 800508a:	f504 734d 	add.w	r3, r4, #820	@ 0x334
        : TextAreaWithWildcardBase(), wc1(0)
 800508e:	f8c4 52e8 	str.w	r5, [r4, #744]	@ 0x2e8
 8005092:	a914      	add	r1, sp, #80	@ 0x50
 8005094:	f64f 75ff 	movw	r5, #65535	@ 0xffff
 8005098:	4618      	mov	r0, r3
 800509a:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
 800509e:	9305      	str	r3, [sp, #20]
 80050a0:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 80050a4:	f7ff ff58 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80050a8:	f504 7358 	add.w	r3, r4, #864	@ 0x360
 80050ac:	a914      	add	r1, sp, #80	@ 0x50
 80050ae:	4618      	mov	r0, r3
 80050b0:	9306      	str	r3, [sp, #24]
 80050b2:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 80050b6:	f7ff ff4f 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80050ba:	f504 7363 	add.w	r3, r4, #908	@ 0x38c
 80050be:	a914      	add	r1, sp, #80	@ 0x50
 80050c0:	4618      	mov	r0, r3
 80050c2:	9307      	str	r3, [sp, #28]
 80050c4:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 80050c8:	f7ff ff46 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80050cc:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 80050d0:	a914      	add	r1, sp, #80	@ 0x50
 80050d2:	4618      	mov	r0, r3
 80050d4:	9308      	str	r3, [sp, #32]
 80050d6:	f8ad 5050 	strh.w	r5, [sp, #80]	@ 0x50
 80050da:	f7ff ff3d 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80050de:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
    __background.setPosition(0, 0, 320, 240);
 80050e2:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 80050e4:	f8c3 66cc 	str.w	r6, [r3, #1740]	@ 0x6cc
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80050e8:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 80050ec:	f204 400c 	addw	r0, r4, #1036	@ 0x40c
 80050f0:	f010 fbdc 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80050f4:	4632      	mov	r2, r6
 80050f6:	4640      	mov	r0, r8
 80050f8:	9500      	str	r5, [sp, #0]
 80050fa:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80050fe:	4631      	mov	r1, r6
 8005100:	1d27      	adds	r7, r4, #4
 8005102:	f7fd fff7 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005106:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800510a:	4641      	mov	r1, r8
 800510c:	66a3      	str	r3, [r4, #104]	@ 0x68
 800510e:	4638      	mov	r0, r7
 8005110:	f00b f846 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005114:	f04f 38ff 	mov.w	r8, #4294967295
    box3.setPosition(0, 0, 320, 240);
 8005118:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800511c:	4632      	mov	r2, r6
 800511e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005120:	9500      	str	r5, [sp, #0]
 8005122:	4631      	mov	r1, r6
 8005124:	f7fd ffe6 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005128:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800512a:	f8c4 8094 	str.w	r8, [r4, #148]	@ 0x94
 800512e:	4638      	mov	r0, r7
 8005130:	f00b f836 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8005134:	2202      	movs	r2, #2
 8005136:	23ec      	movs	r3, #236	@ 0xec
 8005138:	4611      	mov	r1, r2
 800513a:	4650      	mov	r0, sl
 800513c:	9300      	str	r3, [sp, #0]
 800513e:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 8005142:	f7fd ffd7 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005146:	4b7a      	ldr	r3, [pc, #488]	@ (8005330 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a4>)
 8005148:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800514c:	4651      	mov	r1, sl
 800514e:	4638      	mov	r0, r7
 8005150:	f00b f826 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8005154:	4632      	mov	r2, r6
 8005156:	4648      	mov	r0, r9
 8005158:	9500      	str	r5, [sp, #0]
 800515a:	2303      	movs	r3, #3
 800515c:	21a0      	movs	r1, #160	@ 0xa0
 800515e:	f7fd ffc9 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 8005162:	23dc      	movs	r3, #220	@ 0xdc
 8005164:	4649      	mov	r1, r9
        color = newColor;
 8005166:	f8c4 80ec 	str.w	r8, [r4, #236]	@ 0xec
        alpha = newAlpha;
 800516a:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 800516e:	4638      	mov	r0, r7
 8005170:	f00b f816 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8005174:	230e      	movs	r3, #14
 8005176:	2272      	movs	r2, #114	@ 0x72
 8005178:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800517a:	9300      	str	r3, [sp, #0]
 800517c:	219a      	movs	r1, #154	@ 0x9a
 800517e:	f7fd ffb9 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005182:	23c0      	movs	r3, #192	@ 0xc0
 8005184:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005188:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800518c:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 8005190:	4b68      	ldr	r3, [pc, #416]	@ (8005334 <_ZN23HardReadyScreenViewBaseC1Ev+0x3a8>)
 8005192:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005196:	f649 0361 	movw	r3, #39009	@ 0x9861
 800519a:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 800519e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80051a0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80051a2:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 80051a6:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 80051aa:	4638      	mov	r0, r7
    paddle1.setPosition(7, 110, 5, 20);
 80051ac:	2514      	movs	r5, #20
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80051ae:	f8c4 6130 	str.w	r6, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80051b2:	f8c4 6128 	str.w	r6, [r4, #296]	@ 0x128
 80051b6:	f00a fff3 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80051ba:	2305      	movs	r3, #5
 80051bc:	226e      	movs	r2, #110	@ 0x6e
 80051be:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80051c0:	9500      	str	r5, [sp, #0]
 80051c2:	2107      	movs	r1, #7
 80051c4:	f7fd ff96 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
        color = newColor;
 80051ca:	f8c4 8174 	str.w	r8, [r4, #372]	@ 0x174
 80051ce:	4638      	mov	r0, r7
 80051d0:	f00a ffe6 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 80051d4:	2305      	movs	r3, #5
 80051d6:	226e      	movs	r2, #110	@ 0x6e
 80051d8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80051da:	9500      	str	r5, [sp, #0]
 80051dc:	f44f 719a 	mov.w	r1, #308	@ 0x134
 80051e0:	f7fd ff88 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80051e4:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80051e6:	f8c4 81a0 	str.w	r8, [r4, #416]	@ 0x1a0
 80051ea:	4638      	mov	r0, r7
 80051ec:	f00a ffd8 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(94, 94, 19, 52);
 80051f0:	f04f 0934 	mov.w	r9, #52	@ 0x34
 80051f4:	225e      	movs	r2, #94	@ 0x5e
 80051f6:	ad10      	add	r5, sp, #64	@ 0x40
 80051f8:	4611      	mov	r1, r2
 80051fa:	2313      	movs	r3, #19
 80051fc:	4658      	mov	r0, fp
 80051fe:	f8cd 9000 	str.w	r9, [sp]
 8005202:	f7fd ff77 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005206:	4659      	mov	r1, fp
        color = newColor;
 8005208:	f8c4 81d4 	str.w	r8, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 800520c:	4628      	mov	r0, r5
        linespace = space;
 800520e:	f8a4 61d8 	strh.w	r6, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 8005212:	f00e fe8b 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005216:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800521a:	f504 7af0 	add.w	sl, r4, #480	@ 0x1e0
        rotation = textRotation;
 800521e:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005222:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005226:	4659      	mov	r1, fp
        rotation = textRotation;
 8005228:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 800522c:	4628      	mov	r0, r5
 800522e:	f00e fe7d 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005232:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005236:	4b40      	ldr	r3, [pc, #256]	@ (8005338 <_ZN23HardReadyScreenViewBaseC1Ev+0x3ac>)
 8005238:	9314      	str	r3, [sp, #80]	@ 0x50
 800523a:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 800523e:	230d      	movs	r3, #13
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7S3Y));
 8005240:	4658      	mov	r0, fp
        alpha = newAlpha;
 8005242:	f06f 0a41 	mvn.w	sl, #65	@ 0x41
 8005246:	a914      	add	r1, sp, #80	@ 0x50
 8005248:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800524c:	f00f f916 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005250:	4659      	mov	r1, fp
 8005252:	f884 a1da 	strb.w	sl, [r4, #474]	@ 0x1da
 8005256:	4638      	mov	r0, r7
 8005258:	f00a ffa2 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(204, 93, 19, 52);
 800525c:	2313      	movs	r3, #19
 800525e:	225d      	movs	r2, #93	@ 0x5d
 8005260:	9804      	ldr	r0, [sp, #16]
 8005262:	f8cd 9000 	str.w	r9, [sp]
 8005266:	21cc      	movs	r1, #204	@ 0xcc
 8005268:	f7fd ff44 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 800526c:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 800526e:	f8c4 821c 	str.w	r8, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8005272:	4628      	mov	r0, r5
        linespace = space;
 8005274:	f8a4 6220 	strh.w	r6, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8005278:	f00e fe58 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800527c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005280:	f504 780a 	add.w	r8, r4, #552	@ 0x228
        rotation = textRotation;
 8005284:	f04f 0b03 	mov.w	fp, #3
        boundingArea = calculateBoundingArea();
 8005288:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800528c:	9904      	ldr	r1, [sp, #16]
        rotation = textRotation;
 800528e:	f884 b224 	strb.w	fp, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 8005292:	4628      	mov	r0, r5
 8005294:	f00e fe4a 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005298:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800529c:	4b26      	ldr	r3, [pc, #152]	@ (8005338 <_ZN23HardReadyScreenViewBaseC1Ev+0x3ac>)
 800529e:	9314      	str	r3, [sp, #80]	@ 0x50
 80052a0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80052a4:	230c      	movs	r3, #12
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJ6Y));
 80052a6:	9804      	ldr	r0, [sp, #16]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80052a8:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 800533c <_ZN23HardReadyScreenViewBaseC1Ev+0x3b0>
 80052ac:	f8df 8090 	ldr.w	r8, [pc, #144]	@ 8005340 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b4>
 80052b0:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80052b4:	a914      	add	r1, sp, #80	@ 0x50
 80052b6:	f00f f8e1 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80052ba:	9904      	ldr	r1, [sp, #16]
        alpha = newAlpha;
 80052bc:	f884 a222 	strb.w	sl, [r4, #546]	@ 0x222
 80052c0:	4638      	mov	r0, r7
    goal1.setPosition(0, 61, 2, 120);
 80052c2:	f04f 0a78 	mov.w	sl, #120	@ 0x78
 80052c6:	f00a ff6b 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80052ca:	2302      	movs	r3, #2
 80052cc:	223d      	movs	r2, #61	@ 0x3d
 80052ce:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80052d0:	f8cd a000 	str.w	sl, [sp]
 80052d4:	4631      	mov	r1, r6
 80052d6:	f7fd ff0d 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80052da:	e9c4 9897 	strd	r9, r8, [r4, #604]	@ 0x25c
 80052de:	990c      	ldr	r1, [sp, #48]	@ 0x30
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80052e0:	f8a4 6264 	strh.w	r6, [r4, #612]	@ 0x264
 80052e4:	4638      	mov	r0, r7
 80052e6:	f00a ff5b 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 80052ea:	2302      	movs	r3, #2
 80052ec:	223c      	movs	r2, #60	@ 0x3c
 80052ee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80052f0:	f8cd a000 	str.w	sl, [sp]
 80052f4:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 80052f8:	f7fd fefc 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80052fc:	e9c4 98a4 	strd	r9, r8, [r4, #656]	@ 0x290
 8005300:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        borderSize = size;
 8005302:	f8a4 6298 	strh.w	r6, [r4, #664]	@ 0x298
 8005306:	4638      	mov	r0, r7
 8005308:	f00a ff4a 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(46, 111);
 800530c:	226f      	movs	r2, #111	@ 0x6f
 800530e:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005310:	f8df 9030 	ldr.w	r9, [pc, #48]	@ 8005344 <_ZN23HardReadyScreenViewBaseC1Ev+0x3b8>
 8005314:	212e      	movs	r1, #46	@ 0x2e
 8005316:	f7fd fee0 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 800531a:	e015      	b.n	8005348 <_ZN23HardReadyScreenViewBaseC1Ev+0x3bc>
 800531c:	0802d8ac 	.word	0x0802d8ac
 8005320:	0802de48 	.word	0x0802de48
 8005324:	0802d5a4 	.word	0x0802d5a4
 8005328:	0802e254 	.word	0x0802e254
 800532c:	0802d514 	.word	0x0802d514
 8005330:	ff0c3837 	.word	0xff0c3837
 8005334:	ff990c0c 	.word	0xff990c0c
 8005338:	0802d504 	.word	0x0802d504
 800533c:	ff000b6e 	.word	0xff000b6e
 8005340:	ffad9334 	.word	0xffad9334
 8005344:	20013fb8 	.word	0x20013fb8
        color = newColor;
 8005348:	4b74      	ldr	r3, [pc, #464]	@ (800551c <_ZN23HardReadyScreenViewBaseC1Ev+0x590>)
 800534a:	f8c4 32cc 	str.w	r3, [r4, #716]	@ 0x2cc
        boundingArea = calculateBoundingArea();
 800534e:	f8d4 329c 	ldr.w	r3, [r4, #668]	@ 0x29c
 8005352:	9902      	ldr	r1, [sp, #8]
 8005354:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8005358:	f8a4 62d0 	strh.w	r6, [r4, #720]	@ 0x2d0
        boundingArea = calculateBoundingArea();
 800535c:	4628      	mov	r0, r5
 800535e:	4798      	blx	r3
 8005360:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005364:	f504 7836 	add.w	r8, r4, #728	@ 0x2d8
        rotation = textRotation;
 8005368:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 800536c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005370:	f884 32d4 	strb.w	r3, [r4, #724]	@ 0x2d4
        boundingArea = calculateBoundingArea();
 8005374:	f8d4 329c 	ldr.w	r3, [r4, #668]	@ 0x29c
 8005378:	9902      	ldr	r1, [sp, #8]
 800537a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800537e:	4628      	mov	r0, r5
 8005380:	4798      	blx	r3
 8005382:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005386:	f8d9 3000 	ldr.w	r3, [r9]
 800538a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 800538e:	f504 7879 	add.w	r8, r4, #996	@ 0x3e4
 8005392:	b92b      	cbnz	r3, 80053a0 <_ZN23HardReadyScreenViewBaseC1Ev+0x414>
 8005394:	4b62      	ldr	r3, [pc, #392]	@ (8005520 <_ZN23HardReadyScreenViewBaseC1Ev+0x594>)
 8005396:	4a63      	ldr	r2, [pc, #396]	@ (8005524 <_ZN23HardReadyScreenViewBaseC1Ev+0x598>)
 8005398:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800539a:	4863      	ldr	r0, [pc, #396]	@ (8005528 <_ZN23HardReadyScreenViewBaseC1Ev+0x59c>)
 800539c:	f025 fce2 	bl	802ad64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80053a0:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800553c <_ZN23HardReadyScreenViewBaseC1Ev+0x5b0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80053a4:	f8ba 3000 	ldrh.w	r3, [sl]
 80053a8:	2b08      	cmp	r3, #8
 80053aa:	d803      	bhi.n	80053b4 <_ZN23HardReadyScreenViewBaseC1Ev+0x428>
 80053ac:	4b5f      	ldr	r3, [pc, #380]	@ (800552c <_ZN23HardReadyScreenViewBaseC1Ev+0x5a0>)
 80053ae:	4a5d      	ldr	r2, [pc, #372]	@ (8005524 <_ZN23HardReadyScreenViewBaseC1Ev+0x598>)
 80053b0:	2161      	movs	r1, #97	@ 0x61
 80053b2:	e7f2      	b.n	800539a <_ZN23HardReadyScreenViewBaseC1Ev+0x40e>
        return texts->getText(typedTextId);
 80053b4:	4b5e      	ldr	r3, [pc, #376]	@ (8005530 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a4>)
 80053b6:	2108      	movs	r1, #8
 80053b8:	6818      	ldr	r0, [r3, #0]
 80053ba:	f002 f80f 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80053be:	4a5d      	ldr	r2, [pc, #372]	@ (8005534 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a8>)
 80053c0:	4603      	mov	r3, r0
 80053c2:	210a      	movs	r1, #10
 80053c4:	4640      	mov	r0, r8
 80053c6:	f015 fb8d 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 80053ca:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 80053cc:	f8c4 82e4 	str.w	r8, [r4, #740]	@ 0x2e4
 80053d0:	f00f f834 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        alpha = newAlpha;
 80053d4:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
        : typedTextId(id)
 80053d8:	230b      	movs	r3, #11
 80053da:	4a57      	ldr	r2, [pc, #348]	@ (8005538 <_ZN23HardReadyScreenViewBaseC1Ev+0x5ac>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7Q96));
 80053dc:	9802      	ldr	r0, [sp, #8]
 80053de:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80053e2:	a914      	add	r1, sp, #80	@ 0x50
 80053e4:	9214      	str	r2, [sp, #80]	@ 0x50
 80053e6:	f00f f849 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053ea:	9902      	ldr	r1, [sp, #8]
 80053ec:	f884 82d2 	strb.w	r8, [r4, #722]	@ 0x2d2
 80053f0:	4638      	mov	r0, r7
 80053f2:	f00a fed5 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(245, 111);
 80053f6:	226f      	movs	r2, #111	@ 0x6f
 80053f8:	9803      	ldr	r0, [sp, #12]
 80053fa:	21f5      	movs	r1, #245	@ 0xf5
 80053fc:	f7fd fe6d 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005400:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        color = newColor;
 8005404:	4945      	ldr	r1, [pc, #276]	@ (800551c <_ZN23HardReadyScreenViewBaseC1Ev+0x590>)
        boundingArea = calculateBoundingArea();
 8005406:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 800540a:	f8c4 1318 	str.w	r1, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 800540e:	4628      	mov	r0, r5
 8005410:	9903      	ldr	r1, [sp, #12]
        linespace = space;
 8005412:	f8a4 631c 	strh.w	r6, [r4, #796]	@ 0x31c
        boundingArea = calculateBoundingArea();
 8005416:	4798      	blx	r3
 8005418:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800541c:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        boundingArea = calculateBoundingArea();
 8005420:	f504 7649 	add.w	r6, r4, #804	@ 0x324
 8005424:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005428:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800542c:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 800542e:	f884 b320 	strb.w	fp, [r4, #800]	@ 0x320
        boundingArea = calculateBoundingArea();
 8005432:	4628      	mov	r0, r5
 8005434:	4798      	blx	r3
 8005436:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800543a:	f8d9 3000 	ldr.w	r3, [r9]
 800543e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER3BUFFER).getText());
 8005442:	f504 757e 	add.w	r5, r4, #1016	@ 0x3f8
 8005446:	2b00      	cmp	r3, #0
 8005448:	d0a4      	beq.n	8005394 <_ZN23HardReadyScreenViewBaseC1Ev+0x408>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800544a:	f8ba 3000 	ldrh.w	r3, [sl]
 800544e:	2b08      	cmp	r3, #8
 8005450:	d9ac      	bls.n	80053ac <_ZN23HardReadyScreenViewBaseC1Ev+0x420>
        return texts->getText(typedTextId);
 8005452:	4b37      	ldr	r3, [pc, #220]	@ (8005530 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a4>)
 8005454:	2108      	movs	r1, #8
 8005456:	6818      	ldr	r0, [r3, #0]
 8005458:	f001 ffc0 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 800545c:	4a35      	ldr	r2, [pc, #212]	@ (8005534 <_ZN23HardReadyScreenViewBaseC1Ev+0x5a8>)
 800545e:	4603      	mov	r3, r0
 8005460:	210a      	movs	r1, #10
 8005462:	4628      	mov	r0, r5
 8005464:	f015 fb3e 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 8005468:	9803      	ldr	r0, [sp, #12]
 800546a:	f8c4 5330 	str.w	r5, [r4, #816]	@ 0x330
 800546e:	f00e ffe5 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005472:	250a      	movs	r5, #10
 8005474:	4a30      	ldr	r2, [pc, #192]	@ (8005538 <_ZN23HardReadyScreenViewBaseC1Ev+0x5ac>)
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WFLF));
 8005476:	9803      	ldr	r0, [sp, #12]
 8005478:	9214      	str	r2, [sp, #80]	@ 0x50
 800547a:	a914      	add	r1, sp, #80	@ 0x50
 800547c:	f8ad 5054 	strh.w	r5, [sp, #84]	@ 0x54
 8005480:	f00e fffc 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005484:	9903      	ldr	r1, [sp, #12]
        alpha = newAlpha;
 8005486:	f884 831e 	strb.w	r8, [r4, #798]	@ 0x31e
 800548a:	4638      	mov	r0, r7
 800548c:	f00a fe88 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(313, 10);
 8005490:	462a      	mov	r2, r5
 8005492:	9805      	ldr	r0, [sp, #20]
 8005494:	f240 1139 	movw	r1, #313	@ 0x139
 8005498:	f7fd fe1f 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 800549c:	2604      	movs	r6, #4
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 800549e:	9805      	ldr	r0, [sp, #20]
 80054a0:	f8ad 6050 	strh.w	r6, [sp, #80]	@ 0x50
 80054a4:	a914      	add	r1, sp, #80	@ 0x50
 80054a6:	f00f fa03 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80054aa:	9905      	ldr	r1, [sp, #20]
 80054ac:	4638      	mov	r0, r7
 80054ae:	f00a fe77 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(313, 190);
 80054b2:	22be      	movs	r2, #190	@ 0xbe
 80054b4:	9806      	ldr	r0, [sp, #24]
 80054b6:	f240 1139 	movw	r1, #313	@ 0x139
 80054ba:	f7fd fe0e 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 80054be:	9806      	ldr	r0, [sp, #24]
 80054c0:	f8ad 6050 	strh.w	r6, [sp, #80]	@ 0x50
 80054c4:	a914      	add	r1, sp, #80	@ 0x50
 80054c6:	f00f f9f3 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80054ca:	9906      	ldr	r1, [sp, #24]
 80054cc:	4638      	mov	r0, r7
 80054ce:	f00a fe67 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(-2, 10);
 80054d2:	462a      	mov	r2, r5
 80054d4:	9807      	ldr	r0, [sp, #28]
 80054d6:	f06f 0101 	mvn.w	r1, #1
 80054da:	f7fd fdfe 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 80054de:	9807      	ldr	r0, [sp, #28]
 80054e0:	f8ad b050 	strh.w	fp, [sp, #80]	@ 0x50
 80054e4:	a914      	add	r1, sp, #80	@ 0x50
 80054e6:	f00f f9e3 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80054ea:	9907      	ldr	r1, [sp, #28]
 80054ec:	4638      	mov	r0, r7
 80054ee:	f00a fe57 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(-2, 190);
 80054f2:	22be      	movs	r2, #190	@ 0xbe
 80054f4:	9808      	ldr	r0, [sp, #32]
 80054f6:	f06f 0101 	mvn.w	r1, #1
 80054fa:	f7fd fdee 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 80054fe:	9808      	ldr	r0, [sp, #32]
 8005500:	f8ad b050 	strh.w	fp, [sp, #80]	@ 0x50
 8005504:	a914      	add	r1, sp, #80	@ 0x50
 8005506:	f00f f9d3 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800550a:	4638      	mov	r0, r7
 800550c:	9908      	ldr	r1, [sp, #32]
 800550e:	f00a fe47 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005512:	4620      	mov	r0, r4
 8005514:	b017      	add	sp, #92	@ 0x5c
 8005516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800551a:	bf00      	nop
 800551c:	ffdeab5f 	.word	0xffdeab5f
 8005520:	0802c32e 	.word	0x0802c32e
 8005524:	0802c430 	.word	0x0802c430
 8005528:	0802c3ab 	.word	0x0802c3ab
 800552c:	0802c3f2 	.word	0x0802c3f2
 8005530:	20013fc4 	.word	0x20013fc4
 8005534:	0802c47b 	.word	0x0802c47b
 8005538:	0802d504 	.word	0x0802d504
 800553c:	20013fbc 	.word	0x20013fbc

08005540 <_ZN18HardScreenViewBase11setupScreenEv>:
}

void HardScreenViewBase::setupScreen()
{

}
 8005540:	4770      	bx	lr
	...

08005544 <_ZN18HardScreenViewBaseD1Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8005544:	b510      	push	{r4, lr}
 8005546:	4b03      	ldr	r3, [pc, #12]	@ (8005554 <_ZN18HardScreenViewBaseD1Ev+0x10>)
 8005548:	6003      	str	r3, [r0, #0]
 800554a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800554c:	f010 f9b8 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005550:	4620      	mov	r0, r4
 8005552:	bd10      	pop	{r4, pc}
 8005554:	0802d8e0 	.word	0x0802d8e0

08005558 <_ZN18HardScreenViewBaseD0Ev>:
HardScreenViewBase::~HardScreenViewBase()
 8005558:	b510      	push	{r4, lr}
 800555a:	4b06      	ldr	r3, [pc, #24]	@ (8005574 <_ZN18HardScreenViewBaseD0Ev+0x1c>)
 800555c:	6003      	str	r3, [r0, #0]
 800555e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005560:	f010 f9ae 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005564:	4620      	mov	r0, r4
 8005566:	f241 71d4 	movw	r1, #6100	@ 0x17d4
 800556a:	f024 fbbd 	bl	8029ce8 <_ZdlPvj>
 800556e:	4620      	mov	r0, r4
 8005570:	bd10      	pop	{r4, pc}
 8005572:	bf00      	nop
 8005574:	0802d8e0 	.word	0x0802d8e0

08005578 <_ZN18HardScreenViewBaseC1Ev>:
HardScreenViewBase::HardScreenViewBase()
 8005578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800557c:	4604      	mov	r4, r0
 800557e:	b09b      	sub	sp, #108	@ 0x6c
 8005580:	46a2      	mov	sl, r4
 8005582:	2600      	movs	r6, #0
 8005584:	f013 fdce 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 8005588:	4bb5      	ldr	r3, [pc, #724]	@ (8005860 <_ZN18HardScreenViewBaseC1Ev+0x2e8>)
 800558a:	63e6      	str	r6, [r4, #60]	@ 0x3c
 800558c:	f84a 3b40 	str.w	r3, [sl], #64
 8005590:	4650      	mov	r0, sl
 8005592:	f7fd fdc3 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005596:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 800559a:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 800559e:	4618      	mov	r0, r3
 80055a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80055a2:	f7fd fdbb 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80055a6:	4640      	mov	r0, r8
 80055a8:	f7fd fdb8 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80055ac:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 80055b0:	4618      	mov	r0, r3
 80055b2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80055b4:	f7fd fdb2 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80055b8:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 80055bc:	4618      	mov	r0, r3
 80055be:	4fa9      	ldr	r7, [pc, #676]	@ (8005864 <_ZN18HardScreenViewBaseC1Ev+0x2ec>)
 80055c0:	9310      	str	r3, [sp, #64]	@ 0x40
 80055c2:	f04f 0501 	mov.w	r5, #1
 80055c6:	f7fd fda9 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80055ca:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 80055ce:	4618      	mov	r0, r3
        : TextArea()
 80055d0:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 80055d4:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 80055d8:	f884 5114 	strb.w	r5, [r4, #276]	@ 0x114
 80055dc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80055de:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 80055e2:	f7fd fd9b 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80055e6:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 80055ea:	f884 5140 	strb.w	r5, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 80055ee:	4f9e      	ldr	r7, [pc, #632]	@ (8005868 <_ZN18HardScreenViewBaseC1Ev+0x2f0>)
        : TextArea()
 80055f0:	4658      	mov	r0, fp
 80055f2:	f7fd fda9 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80055f6:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 80055fa:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 80055fe:	4648      	mov	r0, r9
 8005600:	f7fd fda2 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8005604:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 8005608:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 800560c:	4618      	mov	r0, r3
 800560e:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 8005612:	9304      	str	r3, [sp, #16]
 8005614:	f7fd fd98 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8005618:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 800561c:	4618      	mov	r0, r3
 800561e:	9305      	str	r3, [sp, #20]
 8005620:	f7fd fd92 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 8005624:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 8005628:	4618      	mov	r0, r3
 800562a:	4f90      	ldr	r7, [pc, #576]	@ (800586c <_ZN18HardScreenViewBaseC1Ev+0x2f4>)
 800562c:	930e      	str	r3, [sp, #56]	@ 0x38
 800562e:	f7fd fd75 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005632:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 8005636:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 800563a:	4618      	mov	r0, r3
 800563c:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 8005640:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8005644:	930d      	str	r3, [sp, #52]	@ 0x34
 8005646:	f7fd fd69 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 800564a:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 800564e:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 8005652:	4618      	mov	r0, r3
 8005654:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 8005658:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 800565c:	930c      	str	r3, [sp, #48]	@ 0x30
 800565e:	f00d fae1 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005662:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8005666:	4618      	mov	r0, r3
 8005668:	9313      	str	r3, [sp, #76]	@ 0x4c
 800566a:	f7fc fbe7 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800566e:	4b80      	ldr	r3, [pc, #512]	@ (8005870 <_ZN18HardScreenViewBaseC1Ev+0x2f8>)
 8005670:	f8c4 3320 	str.w	r3, [r4, #800]	@ 0x320
 8005674:	f103 0524 	add.w	r5, r3, #36	@ 0x24
 8005678:	f504 734d 	add.w	r3, r4, #820	@ 0x334
 800567c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8005680:	f8c4 5328 	str.w	r5, [r4, #808]	@ 0x328
 8005684:	a918      	add	r1, sp, #96	@ 0x60
 8005686:	4618      	mov	r0, r3
 8005688:	f8c4 632c 	str.w	r6, [r4, #812]	@ 0x32c
 800568c:	9306      	str	r3, [sp, #24]
 800568e:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 8005692:	f7ff fc61 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005696:	f504 7358 	add.w	r3, r4, #864	@ 0x360
 800569a:	a918      	add	r1, sp, #96	@ 0x60
 800569c:	4618      	mov	r0, r3
 800569e:	9307      	str	r3, [sp, #28]
 80056a0:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 80056a4:	f7ff fc58 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056a8:	f504 7363 	add.w	r3, r4, #908	@ 0x38c
 80056ac:	a918      	add	r1, sp, #96	@ 0x60
 80056ae:	4618      	mov	r0, r3
 80056b0:	9308      	str	r3, [sp, #32]
 80056b2:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 80056b6:	f7ff fc4f 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056ba:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 80056be:	a918      	add	r1, sp, #96	@ 0x60
 80056c0:	4618      	mov	r0, r3
 80056c2:	9309      	str	r3, [sp, #36]	@ 0x24
 80056c4:	f8ad 7060 	strh.w	r7, [sp, #96]	@ 0x60
 80056c8:	f7ff fc46 	bl	8004f58 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056cc:	f504 7379 	add.w	r3, r4, #996	@ 0x3e4
 80056d0:	4618      	mov	r0, r3
 80056d2:	9302      	str	r3, [sp, #8]
 80056d4:	f00e f95c 	bl	8013990 <_ZN8touchgfx4LineC1Ev>
 80056d8:	f204 4354 	addw	r3, r4, #1108	@ 0x454
 80056dc:	4618      	mov	r0, r3
 80056de:	9312      	str	r3, [sp, #72]	@ 0x48
 80056e0:	f7fc fbac 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056e4:	f1a5 0324 	sub.w	r3, r5, #36	@ 0x24
 80056e8:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
 80056ec:	f504 638d 	add.w	r3, r4, #1128	@ 0x468
 80056f0:	f8c4 545c 	str.w	r5, [r4, #1116]	@ 0x45c
 80056f4:	4618      	mov	r0, r3
 80056f6:	f8c4 6460 	str.w	r6, [r4, #1120]	@ 0x460
 80056fa:	9303      	str	r3, [sp, #12]
 80056fc:	f00e f948 	bl	8013990 <_ZN8touchgfx4LineC1Ev>
 8005700:	f504 639b 	add.w	r3, r4, #1240	@ 0x4d8
 8005704:	4618      	mov	r0, r3
 8005706:	9311      	str	r3, [sp, #68]	@ 0x44
 8005708:	f7fc fb98 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800570c:	f1a5 0324 	sub.w	r3, r5, #36	@ 0x24
 8005710:	f8c4 34d8 	str.w	r3, [r4, #1240]	@ 0x4d8
 8005714:	f8c4 54e0 	str.w	r5, [r4, #1248]	@ 0x4e0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005718:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 800571c:	f204 5014 	addw	r0, r4, #1300	@ 0x514
 8005720:	f8c4 64e4 	str.w	r6, [r4, #1252]	@ 0x4e4
 8005724:	f010 f8c2 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005728:	23f0      	movs	r3, #240	@ 0xf0
 800572a:	4632      	mov	r2, r6
 800572c:	4650      	mov	r0, sl
 800572e:	9300      	str	r3, [sp, #0]
 8005730:	4631      	mov	r1, r6
 8005732:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005736:	f7fd fcdd 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800573a:	1d27      	adds	r7, r4, #4
 800573c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005740:	4651      	mov	r1, sl
 8005742:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005744:	4638      	mov	r0, r7
 8005746:	f00a fd2b 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 800574a:	23f0      	movs	r3, #240	@ 0xf0
 800574c:	f04f 3aff 	mov.w	sl, #4294967295
 8005750:	4632      	mov	r2, r6
 8005752:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005754:	9300      	str	r3, [sp, #0]
 8005756:	4631      	mov	r1, r6
 8005758:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800575c:	f7fd fcca 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005760:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005762:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 8005766:	4638      	mov	r0, r7
 8005768:	f00a fd1a 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 800576c:	2202      	movs	r2, #2
 800576e:	23ec      	movs	r3, #236	@ 0xec
 8005770:	4611      	mov	r1, r2
 8005772:	4640      	mov	r0, r8
 8005774:	9300      	str	r3, [sp, #0]
 8005776:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 800577a:	f7fd fcbb 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800577e:	4b3d      	ldr	r3, [pc, #244]	@ (8005874 <_ZN18HardScreenViewBaseC1Ev+0x2fc>)
 8005780:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005784:	4641      	mov	r1, r8
 8005786:	4638      	mov	r0, r7
 8005788:	f00a fd0a 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 800578c:	23f0      	movs	r3, #240	@ 0xf0
 800578e:	4632      	mov	r2, r6
 8005790:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005792:	9300      	str	r3, [sp, #0]
 8005794:	21a0      	movs	r1, #160	@ 0xa0
 8005796:	2303      	movs	r3, #3
 8005798:	f7fd fcac 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 800579c:	23dc      	movs	r3, #220	@ 0xdc
    paddle1.setPosition(7, 110, 5, 20);
 800579e:	2514      	movs	r5, #20
 80057a0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80057a2:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80057a6:	4638      	mov	r0, r7
        color = newColor;
 80057a8:	f8c4 a0ec 	str.w	sl, [r4, #236]	@ 0xec
 80057ac:	f00a fcf8 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80057b0:	2305      	movs	r3, #5
 80057b2:	226e      	movs	r2, #110	@ 0x6e
 80057b4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80057b6:	9500      	str	r5, [sp, #0]
 80057b8:	2107      	movs	r1, #7
 80057ba:	f7fd fc9b 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057be:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80057c0:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
 80057c4:	4638      	mov	r0, r7
 80057c6:	f00a fceb 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 110, 5, 20);
 80057ca:	2305      	movs	r3, #5
 80057cc:	226e      	movs	r2, #110	@ 0x6e
 80057ce:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80057d0:	9500      	str	r5, [sp, #0]
 80057d2:	f44f 719a 	mov.w	r1, #308	@ 0x134
 80057d6:	f7fd fc8d 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057da:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80057dc:	f8c4 a144 	str.w	sl, [r4, #324]	@ 0x144
 80057e0:	4638      	mov	r0, r7
 80057e2:	f00a fcdd 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 80057e6:	2216      	movs	r2, #22
 80057e8:	21b8      	movs	r1, #184	@ 0xb8
 80057ea:	4658      	mov	r0, fp
 80057ec:	f7fd fc75 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80057f0:	4b21      	ldr	r3, [pc, #132]	@ (8005878 <_ZN18HardScreenViewBaseC1Ev+0x300>)
 80057f2:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 80057f6:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 80057fa:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 80057fe:	ad14      	add	r5, sp, #80	@ 0x50
 8005800:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005804:	4659      	mov	r1, fp
 8005806:	4628      	mov	r0, r5
 8005808:	4798      	blx	r3
 800580a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800580e:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 8005812:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 8005816:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800581a:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 800581e:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8005822:	4659      	mov	r1, fp
 8005824:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005828:	4628      	mov	r0, r5
 800582a:	4798      	blx	r3
 800582c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005830:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005834:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 8005890 <_ZN18HardScreenViewBaseC1Ev+0x318>
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER3).getText());
 8005838:	f204 43ec 	addw	r3, r4, #1260	@ 0x4ec
 800583c:	930a      	str	r3, [sp, #40]	@ 0x28
 800583e:	f8d8 3000 	ldr.w	r3, [r8]
 8005842:	b92b      	cbnz	r3, 8005850 <_ZN18HardScreenViewBaseC1Ev+0x2d8>
 8005844:	4b0d      	ldr	r3, [pc, #52]	@ (800587c <_ZN18HardScreenViewBaseC1Ev+0x304>)
 8005846:	4a0e      	ldr	r2, [pc, #56]	@ (8005880 <_ZN18HardScreenViewBaseC1Ev+0x308>)
 8005848:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800584a:	480e      	ldr	r0, [pc, #56]	@ (8005884 <_ZN18HardScreenViewBaseC1Ev+0x30c>)
 800584c:	f025 fa8a 	bl	802ad64 <__assert_func>
 8005850:	4b0d      	ldr	r3, [pc, #52]	@ (8005888 <_ZN18HardScreenViewBaseC1Ev+0x310>)
 8005852:	881b      	ldrh	r3, [r3, #0]
 8005854:	2b01      	cmp	r3, #1
 8005856:	d81d      	bhi.n	8005894 <_ZN18HardScreenViewBaseC1Ev+0x31c>
 8005858:	4b0c      	ldr	r3, [pc, #48]	@ (800588c <_ZN18HardScreenViewBaseC1Ev+0x314>)
 800585a:	4a09      	ldr	r2, [pc, #36]	@ (8005880 <_ZN18HardScreenViewBaseC1Ev+0x308>)
 800585c:	2161      	movs	r1, #97	@ 0x61
 800585e:	e7f4      	b.n	800584a <_ZN18HardScreenViewBaseC1Ev+0x2d2>
 8005860:	0802d8e0 	.word	0x0802d8e0
 8005864:	0802d5a4 	.word	0x0802d5a4
 8005868:	0802d514 	.word	0x0802d514
 800586c:	0802e254 	.word	0x0802e254
 8005870:	0802de48 	.word	0x0802de48
 8005874:	ff0c3837 	.word	0xff0c3837
 8005878:	ff595656 	.word	0xff595656
 800587c:	0802c32e 	.word	0x0802c32e
 8005880:	0802c430 	.word	0x0802c430
 8005884:	0802c3ab 	.word	0x0802c3ab
 8005888:	20013fbc 	.word	0x20013fbc
 800588c:	0802c3f2 	.word	0x0802c3f2
 8005890:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 8005894:	4bc1      	ldr	r3, [pc, #772]	@ (8005b9c <_ZN18HardScreenViewBaseC1Ev+0x624>)
 8005896:	2101      	movs	r1, #1
 8005898:	6818      	ldr	r0, [r3, #0]
 800589a:	f001 fd9f 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 800589e:	4ac0      	ldr	r2, [pc, #768]	@ (8005ba0 <_ZN18HardScreenViewBaseC1Ev+0x628>)
 80058a0:	4603      	mov	r3, r0
 80058a2:	210a      	movs	r1, #10
 80058a4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80058a6:	f015 f91d 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80058aa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80058ac:	f8c4 1190 	str.w	r1, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 80058b0:	4658      	mov	r0, fp
 80058b2:	f00e fdc3 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80058b6:	4bbb      	ldr	r3, [pc, #748]	@ (8005ba4 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 80058b8:	9318      	str	r3, [sp, #96]	@ 0x60
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UN9H));
 80058ba:	4658      	mov	r0, fp
 80058bc:	2319      	movs	r3, #25
 80058be:	a918      	add	r1, sp, #96	@ 0x60
 80058c0:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 80058c4:	f00e fdda 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058c8:	4659      	mov	r1, fp
 80058ca:	4638      	mov	r0, r7
 80058cc:	f00a fc68 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 80058d0:	22c3      	movs	r2, #195	@ 0xc3
 80058d2:	2175      	movs	r1, #117	@ 0x75
 80058d4:	4648      	mov	r0, r9
 80058d6:	f7fd fc00 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80058da:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 80058de:	49b2      	ldr	r1, [pc, #712]	@ (8005ba8 <_ZN18HardScreenViewBaseC1Ev+0x630>)
        boundingArea = calculateBoundingArea();
 80058e0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80058e4:	f8c4 11c4 	str.w	r1, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 80058e8:	4628      	mov	r0, r5
 80058ea:	4649      	mov	r1, r9
        linespace = space;
 80058ec:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 80058f0:	4798      	blx	r3
 80058f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80058f6:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 80058fa:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 80058fe:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8005902:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 8005906:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 800590a:	f884 11cc 	strb.w	r1, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 800590e:	4628      	mov	r0, r5
 8005910:	4649      	mov	r1, r9
 8005912:	4798      	blx	r3
 8005914:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005918:	f8d8 3000 	ldr.w	r3, [r8]
 800591c:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER3).getText());
 8005920:	f504 6ba0 	add.w	fp, r4, #1280	@ 0x500
 8005924:	2b00      	cmp	r3, #0
 8005926:	d08d      	beq.n	8005844 <_ZN18HardScreenViewBaseC1Ev+0x2cc>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005928:	49a0      	ldr	r1, [pc, #640]	@ (8005bac <_ZN18HardScreenViewBaseC1Ev+0x634>)
 800592a:	880b      	ldrh	r3, [r1, #0]
 800592c:	2b02      	cmp	r3, #2
 800592e:	d993      	bls.n	8005858 <_ZN18HardScreenViewBaseC1Ev+0x2e0>
        return texts->getText(typedTextId);
 8005930:	4a9a      	ldr	r2, [pc, #616]	@ (8005b9c <_ZN18HardScreenViewBaseC1Ev+0x624>)
 8005932:	2102      	movs	r1, #2
 8005934:	6810      	ldr	r0, [r2, #0]
 8005936:	f001 fd51 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 800593a:	4a99      	ldr	r2, [pc, #612]	@ (8005ba0 <_ZN18HardScreenViewBaseC1Ev+0x628>)
 800593c:	4603      	mov	r3, r0
 800593e:	210a      	movs	r1, #10
 8005940:	4658      	mov	r0, fp
 8005942:	f015 f8cf 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 8005946:	4648      	mov	r0, r9
 8005948:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 800594c:	f00e fd76 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OTAD));
 8005950:	aa18      	add	r2, sp, #96	@ 0x60
        : typedTextId(id)
 8005952:	4b94      	ldr	r3, [pc, #592]	@ (8005ba4 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 8005954:	9318      	str	r3, [sp, #96]	@ 0x60
 8005956:	4611      	mov	r1, r2
 8005958:	2318      	movs	r3, #24
 800595a:	4648      	mov	r0, r9
 800595c:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 8005960:	f00e fd8c 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005964:	4649      	mov	r1, r9
 8005966:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 8005968:	f04f 0934 	mov.w	r9, #52	@ 0x34
 800596c:	f00a fc18 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005970:	2313      	movs	r3, #19
 8005972:	22b4      	movs	r2, #180	@ 0xb4
 8005974:	9804      	ldr	r0, [sp, #16]
 8005976:	f8cd 9000 	str.w	r9, [sp]
 800597a:	218c      	movs	r1, #140	@ 0x8c
 800597c:	f7fd fbba 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8005980:	4628      	mov	r0, r5
 8005982:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8005984:	f8c4 a210 	str.w	sl, [r4, #528]	@ 0x210
        linespace = space;
 8005988:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 800598c:	f00e face 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005990:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005994:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 8005998:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800599c:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 80059a0:	4628      	mov	r0, r5
        rotation = textRotation;
 80059a2:	f884 1218 	strb.w	r1, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 80059a6:	9904      	ldr	r1, [sp, #16]
 80059a8:	f00e fac0 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059b0:	4b7c      	ldr	r3, [pc, #496]	@ (8005ba4 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 80059b2:	9318      	str	r3, [sp, #96]	@ 0x60
 80059b4:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80059b8:	2317      	movs	r3, #23
        alpha = newAlpha;
 80059ba:	f04f 08be 	mov.w	r8, #190	@ 0xbe
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z3TY));
 80059be:	9804      	ldr	r0, [sp, #16]
 80059c0:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 80059c4:	a918      	add	r1, sp, #96	@ 0x60
 80059c6:	f00e fd59 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80059ca:	9904      	ldr	r1, [sp, #16]
 80059cc:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 80059d0:	4638      	mov	r0, r7
 80059d2:	f00a fbe5 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 80059d6:	2313      	movs	r3, #19
 80059d8:	2207      	movs	r2, #7
 80059da:	9805      	ldr	r0, [sp, #20]
 80059dc:	f8cd 9000 	str.w	r9, [sp]
 80059e0:	21a5      	movs	r1, #165	@ 0xa5
 80059e2:	f7fd fb87 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80059e6:	4628      	mov	r0, r5
 80059e8:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 80059ea:	f8c4 a258 	str.w	sl, [r4, #600]	@ 0x258
        linespace = space;
 80059ee:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 80059f2:	f00e fa9b 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80059f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80059fa:	f504 7919 	add.w	r9, r4, #612	@ 0x264
 80059fe:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8005a02:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005a06:	4628      	mov	r0, r5
 8005a08:	9905      	ldr	r1, [sp, #20]
        rotation = textRotation;
 8005a0a:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8005a0e:	f00e fa8d 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a12:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005a16:	4b63      	ldr	r3, [pc, #396]	@ (8005ba4 <_ZN18HardScreenViewBaseC1Ev+0x62c>)
 8005a18:	9318      	str	r3, [sp, #96]	@ 0x60
 8005a1a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8005a1e:	2316      	movs	r3, #22
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FY8E));
 8005a20:	9805      	ldr	r0, [sp, #20]
        borderColor = colorBorder;
 8005a22:	4d63      	ldr	r5, [pc, #396]	@ (8005bb0 <_ZN18HardScreenViewBaseC1Ev+0x638>)
 8005a24:	f8ad 3064 	strh.w	r3, [sp, #100]	@ 0x64
 8005a28:	a918      	add	r1, sp, #96	@ 0x60
 8005a2a:	f00e fd27 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    goal1.setPosition(0, 60, 2, 120);
 8005a2e:	f04f 0978 	mov.w	r9, #120	@ 0x78
 8005a32:	9905      	ldr	r1, [sp, #20]
        alpha = newAlpha;
 8005a34:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8005a38:	4638      	mov	r0, r7
 8005a3a:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 8005bb8 <_ZN18HardScreenViewBaseC1Ev+0x640>
 8005a3e:	f00a fbaf 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005a42:	2302      	movs	r3, #2
 8005a44:	223c      	movs	r2, #60	@ 0x3c
 8005a46:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8005a48:	f8cd 9000 	str.w	r9, [sp]
 8005a4c:	4631      	mov	r1, r6
 8005a4e:	f7fd fb51 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a52:	e9c4 85a6 	strd	r8, r5, [r4, #664]	@ 0x298
 8005a56:	990e      	ldr	r1, [sp, #56]	@ 0x38
        borderSize = size;
 8005a58:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 8005a5c:	4638      	mov	r0, r7
 8005a5e:	f00a fb9f 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(318, 60, 2, 120);
 8005a62:	2302      	movs	r3, #2
 8005a64:	223c      	movs	r2, #60	@ 0x3c
 8005a66:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005a68:	f8cd 9000 	str.w	r9, [sp]
 8005a6c:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 8005a70:	f7fd fb40 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005a74:	e9c4 85b3 	strd	r8, r5, [r4, #716]	@ 0x2cc
 8005a78:	990d      	ldr	r1, [sp, #52]	@ 0x34
        borderSize = size;
 8005a7a:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 8005a7e:	4638      	mov	r0, r7
 8005a80:	f00a fb8e 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 8005a84:	230e      	movs	r3, #14
 8005a86:	2272      	movs	r2, #114	@ 0x72
 8005a88:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8005a8a:	9300      	str	r3, [sp, #0]
 8005a8c:	219a      	movs	r1, #154	@ 0x9a
 8005a8e:	f7fd fb31 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 8005a92:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 8005a94:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005a98:	23c0      	movs	r3, #192	@ 0xc0
 8005a9a:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005a9e:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005aa2:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
 8005aa6:	4b43      	ldr	r3, [pc, #268]	@ (8005bb4 <_ZN18HardScreenViewBaseC1Ev+0x63c>)
 8005aa8:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005aac:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005ab0:	f8a4 3330 	strh.w	r3, [r4, #816]	@ 0x330
 8005ab4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005ab6:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
 8005aba:	990c      	ldr	r1, [sp, #48]	@ 0x30
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005abc:	f8c4 6318 	str.w	r6, [r4, #792]	@ 0x318
 8005ac0:	4638      	mov	r0, r7
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005ac2:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
 8005ac6:	f00a fb6b 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 10);
 8005aca:	220a      	movs	r2, #10
 8005acc:	9806      	ldr	r0, [sp, #24]
 8005ace:	f06f 0102 	mvn.w	r1, #2
 8005ad2:	f7fd fb02 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 8005ad6:	f04f 0503 	mov.w	r5, #3
    image1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8005ada:	9806      	ldr	r0, [sp, #24]
 8005adc:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005ae0:	a918      	add	r1, sp, #96	@ 0x60
 8005ae2:	f00e fee5 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005ae6:	9906      	ldr	r1, [sp, #24]
 8005ae8:	4638      	mov	r0, r7
 8005aea:	f00a fb59 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1_1.setXY(-3, 189);
 8005aee:	22bd      	movs	r2, #189	@ 0xbd
 8005af0:	9807      	ldr	r0, [sp, #28]
 8005af2:	f06f 0102 	mvn.w	r1, #2
 8005af6:	f7fd faf0 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED5_ID));
 8005afa:	9807      	ldr	r0, [sp, #28]
 8005afc:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b00:	a918      	add	r1, sp, #96	@ 0x60
 8005b02:	f00e fed5 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b06:	9907      	ldr	r1, [sp, #28]
 8005b08:	4638      	mov	r0, r7
 8005b0a:	f00a fb49 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(313, 10);
 8005b0e:	220a      	movs	r2, #10
 8005b10:	9808      	ldr	r0, [sp, #32]
 8005b12:	f240 1139 	movw	r1, #313	@ 0x139
 8005b16:	f7fd fae0 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 8005b1a:	2504      	movs	r5, #4
    image2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8005b1c:	9808      	ldr	r0, [sp, #32]
 8005b1e:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b22:	a918      	add	r1, sp, #96	@ 0x60
 8005b24:	f00e fec4 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b28:	9908      	ldr	r1, [sp, #32]
 8005b2a:	4638      	mov	r0, r7
 8005b2c:	f00a fb38 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2_2.setXY(313, 189);
 8005b30:	22bd      	movs	r2, #189	@ 0xbd
 8005b32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b34:	f240 1139 	movw	r1, #313	@ 0x139
 8005b38:	f7fd facf 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_UNTITLED6_ID));
 8005b3c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005b3e:	f8ad 5060 	strh.w	r5, [sp, #96]	@ 0x60
 8005b42:	a918      	add	r1, sp, #96	@ 0x60
 8005b44:	f00e feb4 	bl	80148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b48:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005b4a:	4638      	mov	r0, r7
 8005b4c:	f00a fb28 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(13, 114, 33, 19);
 8005b50:	2313      	movs	r3, #19
 8005b52:	9802      	ldr	r0, [sp, #8]
 8005b54:	9300      	str	r3, [sp, #0]
 8005b56:	2272      	movs	r2, #114	@ 0x72
 8005b58:	2321      	movs	r3, #33	@ 0x21
 8005b5a:	210d      	movs	r1, #13
 8005b5c:	f7fd faca 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b60:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8005b62:	f8c4 340c 	str.w	r3, [r4, #1036]	@ 0x40c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b66:	22a0      	movs	r2, #160	@ 0xa0
 8005b68:	4611      	mov	r1, r2
 8005b6a:	9802      	ldr	r0, [sp, #8]
 8005b6c:	f8c4 a460 	str.w	sl, [r4, #1120]	@ 0x460
 8005b70:	f8a4 a464 	strh.w	sl, [r4, #1124]	@ 0x464
 8005b74:	f00e f822 	bl	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b78:	9802      	ldr	r0, [sp, #8]
 8005b7a:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8005b7e:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8005b82:	f00e f826 	bl	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005b86:	f8d4 3420 	ldr.w	r3, [r4, #1056]	@ 0x420
 8005b8a:	2b20      	cmp	r3, #32
 8005b8c:	d016      	beq.n	8005bbc <_ZN18HardScreenViewBaseC1Ev+0x644>
        lineWidthQ5 = widthQ5;
 8005b8e:	2320      	movs	r3, #32
        updateCachedShape();
 8005b90:	9802      	ldr	r0, [sp, #8]
        lineWidthQ5 = widthQ5;
 8005b92:	f8c4 3420 	str.w	r3, [r4, #1056]	@ 0x420
        updateCachedShape();
 8005b96:	f00d ff1b 	bl	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8005b9a:	e00f      	b.n	8005bbc <_ZN18HardScreenViewBaseC1Ev+0x644>
 8005b9c:	20013fc4 	.word	0x20013fc4
 8005ba0:	0802c47b 	.word	0x0802c47b
 8005ba4:	0802d504 	.word	0x0802d504
 8005ba8:	ff595656 	.word	0xff595656
 8005bac:	20013fbc 	.word	0x20013fbc
 8005bb0:	ffad9334 	.word	0xffad9334
 8005bb4:	ff990c0c 	.word	0xff990c0c
 8005bb8:	ff000b6e 	.word	0xff000b6e
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005bbc:	9802      	ldr	r0, [sp, #8]
 8005bbe:	2100      	movs	r1, #0
 8005bc0:	f00e f812 	bl	8013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8005bc4:	235f      	movs	r3, #95	@ 0x5f
 8005bc6:	9902      	ldr	r1, [sp, #8]
 8005bc8:	f884 340a 	strb.w	r3, [r4, #1034]	@ 0x40a
 8005bcc:	4638      	mov	r0, r7
 8005bce:	f00a fae7 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(269, 110, 33, 19);
 8005bd2:	2313      	movs	r3, #19
 8005bd4:	9803      	ldr	r0, [sp, #12]
 8005bd6:	9300      	str	r3, [sp, #0]
 8005bd8:	226e      	movs	r2, #110	@ 0x6e
 8005bda:	2321      	movs	r3, #33	@ 0x21
 8005bdc:	f240 110d 	movw	r1, #269	@ 0x10d
 8005be0:	f7fd fa88 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005be4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005be8:	22a0      	movs	r2, #160	@ 0xa0
 8005bea:	f8c4 34e4 	str.w	r3, [r4, #1252]	@ 0x4e4
 8005bee:	f8a4 34e8 	strh.w	r3, [r4, #1256]	@ 0x4e8
        canvasPainter = &painter;
 8005bf2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005bf4:	f8c4 3490 	str.w	r3, [r4, #1168]	@ 0x490
 8005bf8:	4611      	mov	r1, r2
 8005bfa:	9803      	ldr	r0, [sp, #12]
 8005bfc:	f00d ffde 	bl	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c00:	9803      	ldr	r0, [sp, #12]
 8005c02:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8005c06:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8005c0a:	f00d ffe2 	bl	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005c0e:	f8d4 34a4 	ldr.w	r3, [r4, #1188]	@ 0x4a4
 8005c12:	2b20      	cmp	r3, #32
 8005c14:	d005      	beq.n	8005c22 <_ZN18HardScreenViewBaseC1Ev+0x6aa>
        lineWidthQ5 = widthQ5;
 8005c16:	2320      	movs	r3, #32
        updateCachedShape();
 8005c18:	9803      	ldr	r0, [sp, #12]
        lineWidthQ5 = widthQ5;
 8005c1a:	f8c4 34a4 	str.w	r3, [r4, #1188]	@ 0x4a4
        updateCachedShape();
 8005c1e:	f00d fed7 	bl	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005c22:	9803      	ldr	r0, [sp, #12]
 8005c24:	2100      	movs	r1, #0
 8005c26:	f00d ffdf 	bl	8013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8005c2a:	235f      	movs	r3, #95	@ 0x5f
 8005c2c:	4638      	mov	r0, r7
 8005c2e:	9903      	ldr	r1, [sp, #12]
 8005c30:	f884 348e 	strb.w	r3, [r4, #1166]	@ 0x48e
 8005c34:	f00a fab4 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005c38:	4620      	mov	r0, r4
 8005c3a:	b01b      	add	sp, #108	@ 0x6c
 8005c3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005c40 <_ZN25MediumReadyScreenViewBase11setupScreenEv>:
}

void MediumReadyScreenViewBase::setupScreen()
{

}
 8005c40:	4770      	bx	lr
	...

08005c44 <_ZN25MediumReadyScreenViewBaseD1Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 8005c44:	b510      	push	{r4, lr}
 8005c46:	4b03      	ldr	r3, [pc, #12]	@ (8005c54 <_ZN25MediumReadyScreenViewBaseD1Ev+0x10>)
 8005c48:	6003      	str	r3, [r0, #0]
 8005c4a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c4c:	f00f fe38 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c50:	4620      	mov	r0, r4
 8005c52:	bd10      	pop	{r4, pc}
 8005c54:	0802d914 	.word	0x0802d914

08005c58 <_ZN25MediumReadyScreenViewBaseD0Ev>:
MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
 8005c58:	b510      	push	{r4, lr}
 8005c5a:	4b06      	ldr	r3, [pc, #24]	@ (8005c74 <_ZN25MediumReadyScreenViewBaseD0Ev+0x1c>)
 8005c5c:	6003      	str	r3, [r0, #0]
 8005c5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c60:	f00f fe2e 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c64:	4620      	mov	r0, r4
 8005c66:	f44f 51b1 	mov.w	r1, #5664	@ 0x1620
 8005c6a:	f024 f83d 	bl	8029ce8 <_ZdlPvj>
 8005c6e:	4620      	mov	r0, r4
 8005c70:	bd10      	pop	{r4, pc}
 8005c72:	bf00      	nop
 8005c74:	0802d914 	.word	0x0802d914

08005c78 <_ZN25MediumReadyScreenViewBase15handleTickEventEv>:

void MediumReadyScreenViewBase::handleTickEvent()
{
 8005c78:	b510      	push	{r4, lr}
    frameCountInteraction1Interval++;
 8005c7a:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
 8005c7e:	f8d4 361c 	ldr.w	r3, [r4, #1564]	@ 0x61c
 8005c82:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8005c84:	2bb4      	cmp	r3, #180	@ 0xb4
    frameCountInteraction1Interval++;
 8005c86:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 8005c8a:	d106      	bne.n	8005c9a <_ZN25MediumReadyScreenViewBase15handleTickEventEv+0x22>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005c8c:	f011 fb12 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to MediumScreen
        //Go to MediumScreen with no screen transition
        application().gotoMediumScreenScreenNoTransition();
 8005c90:	f7fe fa82 	bl	8004198 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>
        frameCountInteraction1Interval = 0;
 8005c94:	2300      	movs	r3, #0
 8005c96:	f8c4 361c 	str.w	r3, [r4, #1564]	@ 0x61c
    }
}
 8005c9a:	bd10      	pop	{r4, pc}

08005c9c <_ZN25MediumReadyScreenViewBaseC1Ev>:
MediumReadyScreenViewBase::MediumReadyScreenViewBase() :
 8005c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ca0:	4604      	mov	r4, r0
 8005ca2:	b093      	sub	sp, #76	@ 0x4c
    frameCountInteraction1Interval(0)
 8005ca4:	46a1      	mov	r9, r4
 8005ca6:	2600      	movs	r6, #0
 8005ca8:	f013 fa3c 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 8005cac:	4bde      	ldr	r3, [pc, #888]	@ (8006028 <_ZN25MediumReadyScreenViewBaseC1Ev+0x38c>)
 8005cae:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8005cb0:	f849 3b40 	str.w	r3, [r9], #64
 8005cb4:	4648      	mov	r0, r9
 8005cb6:	f7fd fa31 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005cba:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8005cbe:	f104 0a98 	add.w	sl, r4, #152	@ 0x98
 8005cc2:	4618      	mov	r0, r3
 8005cc4:	9304      	str	r3, [sp, #16]
 8005cc6:	f7fd fa29 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005cca:	4650      	mov	r0, sl
 8005ccc:	f7fd fa26 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005cd0:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 8005cd4:	4618      	mov	r0, r3
 8005cd6:	9305      	str	r3, [sp, #20]
 8005cd8:	f7fd fa20 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005cdc:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8005ce0:	4618      	mov	r0, r3
 8005ce2:	9306      	str	r3, [sp, #24]
 8005ce4:	f00c ff9e 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005ce8:	f504 739c 	add.w	r3, r4, #312	@ 0x138
 8005cec:	4618      	mov	r0, r3
 8005cee:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005cf0:	f7fc f8a4 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005cf4:	4bcd      	ldr	r3, [pc, #820]	@ (800602c <_ZN25MediumReadyScreenViewBaseC1Ev+0x390>)
 8005cf6:	f8c4 3138 	str.w	r3, [r4, #312]	@ 0x138
 8005cfa:	3324      	adds	r3, #36	@ 0x24
 8005cfc:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
 8005d00:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 8005d04:	4618      	mov	r0, r3
 8005d06:	f8c4 6144 	str.w	r6, [r4, #324]	@ 0x144
 8005d0a:	4dc9      	ldr	r5, [pc, #804]	@ (8006030 <_ZN25MediumReadyScreenViewBaseC1Ev+0x394>)
 8005d0c:	930a      	str	r3, [sp, #40]	@ 0x28
 8005d0e:	f04f 0701 	mov.w	r7, #1
 8005d12:	f7fd fa03 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005d16:	f504 73bc 	add.w	r3, r4, #376	@ 0x178
 8005d1a:	f504 78d2 	add.w	r8, r4, #420	@ 0x1a4
 8005d1e:	4618      	mov	r0, r3
 8005d20:	f8c4 514c 	str.w	r5, [r4, #332]	@ 0x14c
 8005d24:	f884 7170 	strb.w	r7, [r4, #368]	@ 0x170
 8005d28:	f504 7bf6 	add.w	fp, r4, #492	@ 0x1ec
 8005d2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005d2e:	f7fd f9f5 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005d32:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
 8005d36:	f884 719c 	strb.w	r7, [r4, #412]	@ 0x19c
 8005d3a:	4640      	mov	r0, r8
 8005d3c:	f7fd fa04 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8005d40:	4658      	mov	r0, fp
 8005d42:	f7fd fa01 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8005d46:	f504 730d 	add.w	r3, r4, #564	@ 0x234
 8005d4a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005d4c:	4db9      	ldr	r5, [pc, #740]	@ (8006034 <_ZN25MediumReadyScreenViewBaseC1Ev+0x398>)
        : TextArea()
 8005d4e:	9302      	str	r3, [sp, #8]
 8005d50:	f7fd f9fa 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 8005d54:	f504 7320 	add.w	r3, r4, #640	@ 0x280
        : TextAreaWithWildcardBase(), wc1(0)
 8005d58:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 8005d5c:	4618      	mov	r0, r3
 8005d5e:	f8c4 627c 	str.w	r6, [r4, #636]	@ 0x27c
 8005d62:	4fb5      	ldr	r7, [pc, #724]	@ (8006038 <_ZN25MediumReadyScreenViewBaseC1Ev+0x39c>)
 8005d64:	9308      	str	r3, [sp, #32]
 8005d66:	f7fd f9d9 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8005d6a:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 8005d6e:	f8c4 7280 	str.w	r7, [r4, #640]	@ 0x280
 8005d72:	4618      	mov	r0, r3
 8005d74:	f8c4 62ac 	str.w	r6, [r4, #684]	@ 0x2ac
 8005d78:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
 8005d7c:	9307      	str	r3, [sp, #28]
 8005d7e:	f7fd f9cd 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
        : TextArea()
 8005d82:	f504 733a 	add.w	r3, r4, #744	@ 0x2e8
 8005d86:	f8c4 72b4 	str.w	r7, [r4, #692]	@ 0x2b4
 8005d8a:	4618      	mov	r0, r3
 8005d8c:	f8c4 62e0 	str.w	r6, [r4, #736]	@ 0x2e0
 8005d90:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
 8005d94:	9303      	str	r3, [sp, #12]
 8005d96:	f7fd f9d7 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8005d9a:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
        : TextAreaWithWildcardBase(), wc1(0)
 8005d9e:	f8c4 52e8 	str.w	r5, [r4, #744]	@ 0x2e8
 8005da2:	f8c4 6330 	str.w	r6, [r4, #816]	@ 0x330
    __background.setPosition(0, 0, 320, 240);
 8005da6:	25f0      	movs	r5, #240	@ 0xf0
    frameCountInteraction1Interval(0)
 8005da8:	f8c3 661c 	str.w	r6, [r3, #1564]	@ 0x61c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005dac:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8005db0:	f504 7057 	add.w	r0, r4, #860	@ 0x35c
 8005db4:	f00f fd7a 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8005db8:	4632      	mov	r2, r6
 8005dba:	4648      	mov	r0, r9
 8005dbc:	9500      	str	r5, [sp, #0]
 8005dbe:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005dc2:	4631      	mov	r1, r6
 8005dc4:	1d27      	adds	r7, r4, #4
 8005dc6:	f7fd f995 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dca:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005dce:	4649      	mov	r1, r9
 8005dd0:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005dd2:	4638      	mov	r0, r7
 8005dd4:	f00a f9e4 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005dd8:	f04f 39ff 	mov.w	r9, #4294967295
    box3.setPosition(0, 0, 320, 240);
 8005ddc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005de0:	4632      	mov	r2, r6
 8005de2:	9804      	ldr	r0, [sp, #16]
 8005de4:	9500      	str	r5, [sp, #0]
 8005de6:	4631      	mov	r1, r6
 8005de8:	f7fd f984 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005dec:	9904      	ldr	r1, [sp, #16]
 8005dee:	f8c4 9094 	str.w	r9, [r4, #148]	@ 0x94
 8005df2:	4638      	mov	r0, r7
 8005df4:	f00a f9d4 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 318, 236);
 8005df8:	2202      	movs	r2, #2
 8005dfa:	23ec      	movs	r3, #236	@ 0xec
 8005dfc:	4611      	mov	r1, r2
 8005dfe:	4650      	mov	r0, sl
 8005e00:	9300      	str	r3, [sp, #0]
 8005e02:	f44f 739f 	mov.w	r3, #318	@ 0x13e
 8005e06:	f7fd f975 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e0a:	4b8c      	ldr	r3, [pc, #560]	@ (800603c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a0>)
 8005e0c:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 8005e10:	4651      	mov	r1, sl
 8005e12:	4638      	mov	r0, r7
 8005e14:	f00a f9c4 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 8005e18:	4632      	mov	r2, r6
 8005e1a:	9805      	ldr	r0, [sp, #20]
 8005e1c:	9500      	str	r5, [sp, #0]
 8005e1e:	2303      	movs	r3, #3
 8005e20:	21a0      	movs	r1, #160	@ 0xa0
 8005e22:	f7fd f967 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 8005e26:	23dc      	movs	r3, #220	@ 0xdc
 8005e28:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8005e2a:	f8c4 90ec 	str.w	r9, [r4, #236]	@ 0xec
        alpha = newAlpha;
 8005e2e:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 8005e32:	4638      	mov	r0, r7
 8005e34:	f00a f9b4 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(155, 114, 14, 14);
 8005e38:	230e      	movs	r3, #14
 8005e3a:	2272      	movs	r2, #114	@ 0x72
 8005e3c:	9806      	ldr	r0, [sp, #24]
 8005e3e:	9300      	str	r3, [sp, #0]
 8005e40:	219b      	movs	r1, #155	@ 0x9b
 8005e42:	f7fd f957 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8005e46:	23c0      	movs	r3, #192	@ 0xc0
 8005e48:	f8c4 3124 	str.w	r3, [r4, #292]	@ 0x124
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8005e4c:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8005e50:	f8c4 312c 	str.w	r3, [r4, #300]	@ 0x12c
 8005e54:	4b7a      	ldr	r3, [pc, #488]	@ (8006040 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a4>)
 8005e56:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005e5a:	f649 0361 	movw	r3, #39009	@ 0x9861
 8005e5e:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        canvasPainter = &painter;
 8005e62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005e64:	9906      	ldr	r1, [sp, #24]
 8005e66:	f8c4 3118 	str.w	r3, [r4, #280]	@ 0x118
        this->circleCenterY = CWRUtil::toQ5(y);
 8005e6a:	e9c4 5547 	strd	r5, r5, [r4, #284]	@ 0x11c
 8005e6e:	4638      	mov	r0, r7
    paddle1.setPosition(10, 100, 5, 40);
 8005e70:	2528      	movs	r5, #40	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8005e72:	f8c4 6130 	str.w	r6, [r4, #304]	@ 0x130
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8005e76:	f8c4 6128 	str.w	r6, [r4, #296]	@ 0x128
 8005e7a:	f00a f991 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e7e:	2305      	movs	r3, #5
 8005e80:	2264      	movs	r2, #100	@ 0x64
 8005e82:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005e84:	9500      	str	r5, [sp, #0]
 8005e86:	210a      	movs	r1, #10
 8005e88:	f7fd f934 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e8c:	990a      	ldr	r1, [sp, #40]	@ 0x28
        color = newColor;
 8005e8e:	f8c4 9174 	str.w	r9, [r4, #372]	@ 0x174
 8005e92:	4638      	mov	r0, r7
 8005e94:	f00a f984 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(307, 100, 5, 40);
 8005e98:	2305      	movs	r3, #5
 8005e9a:	2264      	movs	r2, #100	@ 0x64
 8005e9c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005e9e:	9500      	str	r5, [sp, #0]
 8005ea0:	f240 1133 	movw	r1, #307	@ 0x133
 8005ea4:	f7fd f926 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ea8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005eaa:	f8c4 91a0 	str.w	r9, [r4, #416]	@ 0x1a0
 8005eae:	4638      	mov	r0, r7
 8005eb0:	f00a f976 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player1.setPosition(116, 95, 19, 52);
 8005eb4:	2334      	movs	r3, #52	@ 0x34
        boundingArea = calculateBoundingArea();
 8005eb6:	ad0c      	add	r5, sp, #48	@ 0x30
 8005eb8:	225f      	movs	r2, #95	@ 0x5f
 8005eba:	4640      	mov	r0, r8
 8005ebc:	9300      	str	r3, [sp, #0]
 8005ebe:	2174      	movs	r1, #116	@ 0x74
 8005ec0:	2313      	movs	r3, #19
 8005ec2:	f7fd f917 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ec6:	4641      	mov	r1, r8
        color = newColor;
 8005ec8:	f8c4 91d4 	str.w	r9, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 8005ecc:	4628      	mov	r0, r5
        linespace = space;
 8005ece:	f8a4 61d8 	strh.w	r6, [r4, #472]	@ 0x1d8
        boundingArea = calculateBoundingArea();
 8005ed2:	f00e f82b 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ed6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005eda:	f504 7af0 	add.w	sl, r4, #480	@ 0x1e0
 8005ede:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        wideTextAction = action;
 8005ee2:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005ee6:	4641      	mov	r1, r8
        wideTextAction = action;
 8005ee8:	f884 21dd 	strb.w	r2, [r4, #477]	@ 0x1dd
        boundingArea = calculateBoundingArea();
 8005eec:	4628      	mov	r0, r5
 8005eee:	f00e f81d 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ef2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8005ef6:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005efa:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005efe:	4641      	mov	r1, r8
        rotation = textRotation;
 8005f00:	f884 31dc 	strb.w	r3, [r4, #476]	@ 0x1dc
        boundingArea = calculateBoundingArea();
 8005f04:	4628      	mov	r0, r5
 8005f06:	f00e f811 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f0a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f0e:	4b4d      	ldr	r3, [pc, #308]	@ (8006044 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 8005f10:	9310      	str	r3, [sp, #64]	@ 0x40
 8005f12:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 8005f16:	2311      	movs	r3, #17
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDK7));
 8005f18:	4640      	mov	r0, r8
 8005f1a:	a910      	add	r1, sp, #64	@ 0x40
        alpha = newAlpha;
 8005f1c:	f04f 0abe 	mov.w	sl, #190	@ 0xbe
 8005f20:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005f24:	f00e faaa 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f28:	4641      	mov	r1, r8
 8005f2a:	4638      	mov	r0, r7
 8005f2c:	f884 a1da 	strb.w	sl, [r4, #474]	@ 0x1da
 8005f30:	f00a f936 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(187, 95, 19, 52);
 8005f34:	2134      	movs	r1, #52	@ 0x34
 8005f36:	2313      	movs	r3, #19
 8005f38:	225f      	movs	r2, #95	@ 0x5f
 8005f3a:	4658      	mov	r0, fp
 8005f3c:	9100      	str	r1, [sp, #0]
 8005f3e:	21bb      	movs	r1, #187	@ 0xbb
 8005f40:	f7fd f8d8 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8005f44:	4659      	mov	r1, fp
        color = newColor;
 8005f46:	f8c4 921c 	str.w	r9, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 8005f4a:	4628      	mov	r0, r5
        linespace = space;
 8005f4c:	f8a4 6220 	strh.w	r6, [r4, #544]	@ 0x220
        boundingArea = calculateBoundingArea();
 8005f50:	f00d ffec 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f58:	f504 780a 	add.w	r8, r4, #552	@ 0x228
 8005f5c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        wideTextAction = action;
 8005f60:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8005f64:	4659      	mov	r1, fp
        wideTextAction = action;
 8005f66:	f884 2225 	strb.w	r2, [r4, #549]	@ 0x225
        boundingArea = calculateBoundingArea();
 8005f6a:	4628      	mov	r0, r5
        wideTextAction = action;
 8005f6c:	4691      	mov	r9, r2
        boundingArea = calculateBoundingArea();
 8005f6e:	f00d ffdd 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f76:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 8005f7a:	4659      	mov	r1, fp
 8005f7c:	4628      	mov	r0, r5
        rotation = textRotation;
 8005f7e:	f884 9224 	strb.w	r9, [r4, #548]	@ 0x224
        boundingArea = calculateBoundingArea();
 8005f82:	f00d ffd3 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f86:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f8a:	4b2e      	ldr	r3, [pc, #184]	@ (8006044 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3a8>)
 8005f8c:	9310      	str	r3, [sp, #64]	@ 0x40
 8005f8e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005f92:	2310      	movs	r3, #16
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CWXV));
 8005f94:	4658      	mov	r0, fp
 8005f96:	a910      	add	r1, sp, #64	@ 0x40
 8005f98:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8005f9c:	f00e fa6e 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fa0:	4659      	mov	r1, fp
 8005fa2:	4638      	mov	r0, r7
        alpha = newAlpha;
 8005fa4:	f884 a222 	strb.w	sl, [r4, #546]	@ 0x222
 8005fa8:	f00a f8fa 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter1.setXY(53, 113);
 8005fac:	2271      	movs	r2, #113	@ 0x71
 8005fae:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005fb0:	f8df b0a8 	ldr.w	fp, [pc, #168]	@ 800605c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c0>
 8005fb4:	2135      	movs	r1, #53	@ 0x35
 8005fb6:	f7fd f890 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005fba:	4b23      	ldr	r3, [pc, #140]	@ (8006048 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3ac>)
 8005fbc:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
        boundingArea = calculateBoundingArea();
 8005fc0:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8005fc4:	9902      	ldr	r1, [sp, #8]
 8005fc6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8005fca:	f8a4 6268 	strh.w	r6, [r4, #616]	@ 0x268
        boundingArea = calculateBoundingArea();
 8005fce:	4628      	mov	r0, r5
 8005fd0:	4798      	blx	r3
 8005fd2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005fd6:	f504 781c 	add.w	r8, r4, #624	@ 0x270
        rotation = textRotation;
 8005fda:	f04f 0301 	mov.w	r3, #1
        boundingArea = calculateBoundingArea();
 8005fde:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005fe2:	f884 326c 	strb.w	r3, [r4, #620]	@ 0x26c
        boundingArea = calculateBoundingArea();
 8005fe6:	f8d4 3234 	ldr.w	r3, [r4, #564]	@ 0x234
 8005fea:	9902      	ldr	r1, [sp, #8]
 8005fec:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005ff0:	4628      	mov	r0, r5
 8005ff2:	4798      	blx	r3
 8005ff4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ff8:	f8db 3000 	ldr.w	r3, [fp]
 8005ffc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 8006000:	f504 784d 	add.w	r8, r4, #820	@ 0x334
 8006004:	b92b      	cbnz	r3, 8006012 <_ZN25MediumReadyScreenViewBaseC1Ev+0x376>
 8006006:	4b11      	ldr	r3, [pc, #68]	@ (800604c <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b0>)
 8006008:	4a11      	ldr	r2, [pc, #68]	@ (8006050 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 800600a:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800600c:	4811      	ldr	r0, [pc, #68]	@ (8006054 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b8>)
 800600e:	f024 fea9 	bl	802ad64 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006012:	f8df a04c 	ldr.w	sl, [pc, #76]	@ 8006060 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006016:	f8ba 3000 	ldrh.w	r3, [sl]
 800601a:	2b07      	cmp	r3, #7
 800601c:	d822      	bhi.n	8006064 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3c8>
 800601e:	4b0e      	ldr	r3, [pc, #56]	@ (8006058 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3bc>)
 8006020:	4a0b      	ldr	r2, [pc, #44]	@ (8006050 <_ZN25MediumReadyScreenViewBaseC1Ev+0x3b4>)
 8006022:	2161      	movs	r1, #97	@ 0x61
 8006024:	e7f2      	b.n	800600c <_ZN25MediumReadyScreenViewBaseC1Ev+0x370>
 8006026:	bf00      	nop
 8006028:	0802d914 	.word	0x0802d914
 800602c:	0802de48 	.word	0x0802de48
 8006030:	0802d5a4 	.word	0x0802d5a4
 8006034:	0802d514 	.word	0x0802d514
 8006038:	0802e254 	.word	0x0802e254
 800603c:	ff0c3837 	.word	0xff0c3837
 8006040:	ff990c0c 	.word	0xff990c0c
 8006044:	0802d504 	.word	0x0802d504
 8006048:	ffdeab5f 	.word	0xffdeab5f
 800604c:	0802c32e 	.word	0x0802c32e
 8006050:	0802c430 	.word	0x0802c430
 8006054:	0802c3ab 	.word	0x0802c3ab
 8006058:	0802c3f2 	.word	0x0802c3f2
 800605c:	20013fb8 	.word	0x20013fb8
 8006060:	20013fbc 	.word	0x20013fbc
        return texts->getText(typedTextId);
 8006064:	f8df 914c 	ldr.w	r9, [pc, #332]	@ 80061b4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x518>
 8006068:	2107      	movs	r1, #7
 800606a:	f8d9 0000 	ldr.w	r0, [r9]
 800606e:	f001 f9b5 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8006072:	4a4b      	ldr	r2, [pc, #300]	@ (80061a0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 8006074:	4603      	mov	r3, r0
 8006076:	210a      	movs	r1, #10
 8006078:	4640      	mov	r0, r8
 800607a:	f014 fd33 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter1.resizeToCurrentText();
 800607e:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8006080:	f8c4 827c 	str.w	r8, [r4, #636]	@ 0x27c
 8006084:	f00e f9da 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006088:	4b46      	ldr	r3, [pc, #280]	@ (80061a4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MH9F));
 800608a:	9802      	ldr	r0, [sp, #8]
 800608c:	9310      	str	r3, [sp, #64]	@ 0x40
 800608e:	a910      	add	r1, sp, #64	@ 0x40
 8006090:	230f      	movs	r3, #15
        alpha = newAlpha;
 8006092:	f04f 08d2 	mov.w	r8, #210	@ 0xd2
 8006096:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 800609a:	f00e f9ef 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800609e:	9902      	ldr	r1, [sp, #8]
 80060a0:	f884 826a 	strb.w	r8, [r4, #618]	@ 0x26a
 80060a4:	4638      	mov	r0, r7
 80060a6:	f00a f87b 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(318, 60, 2, 120);
 80060aa:	2278      	movs	r2, #120	@ 0x78
 80060ac:	2302      	movs	r3, #2
 80060ae:	9808      	ldr	r0, [sp, #32]
 80060b0:	9200      	str	r2, [sp, #0]
 80060b2:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 80060b6:	223c      	movs	r2, #60	@ 0x3c
 80060b8:	f7fd f81c 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80060bc:	4a3a      	ldr	r2, [pc, #232]	@ (80061a8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 80060be:	493b      	ldr	r1, [pc, #236]	@ (80061ac <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 80060c0:	f8a4 62b0 	strh.w	r6, [r4, #688]	@ 0x2b0
        borderColor = colorBorder;
 80060c4:	e9c4 21aa 	strd	r2, r1, [r4, #680]	@ 0x2a8
 80060c8:	4638      	mov	r0, r7
 80060ca:	9908      	ldr	r1, [sp, #32]
 80060cc:	f00a f868 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal2.setPosition(0, 60, 2, 120);
 80060d0:	2078      	movs	r0, #120	@ 0x78
 80060d2:	2302      	movs	r3, #2
 80060d4:	4631      	mov	r1, r6
 80060d6:	9000      	str	r0, [sp, #0]
 80060d8:	223c      	movs	r2, #60	@ 0x3c
 80060da:	9807      	ldr	r0, [sp, #28]
 80060dc:	f7fd f80a 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80060e0:	4a31      	ldr	r2, [pc, #196]	@ (80061a8 <_ZN25MediumReadyScreenViewBaseC1Ev+0x50c>)
 80060e2:	4932      	ldr	r1, [pc, #200]	@ (80061ac <_ZN25MediumReadyScreenViewBaseC1Ev+0x510>)
        borderSize = size;
 80060e4:	f8a4 62e4 	strh.w	r6, [r4, #740]	@ 0x2e4
        borderColor = colorBorder;
 80060e8:	e9c4 21b7 	strd	r2, r1, [r4, #732]	@ 0x2dc
 80060ec:	4638      	mov	r0, r7
 80060ee:	9907      	ldr	r1, [sp, #28]
 80060f0:	f00a f856 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    counter2.setXY(243, 111);
 80060f4:	9803      	ldr	r0, [sp, #12]
 80060f6:	226f      	movs	r2, #111	@ 0x6f
 80060f8:	21f3      	movs	r1, #243	@ 0xf3
 80060fa:	f7fc ffee 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80060fe:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        color = newColor;
 8006102:	4a2b      	ldr	r2, [pc, #172]	@ (80061b0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x514>)
        boundingArea = calculateBoundingArea();
 8006104:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006108:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 800610a:	f8c4 2318 	str.w	r2, [r4, #792]	@ 0x318
        boundingArea = calculateBoundingArea();
 800610e:	4628      	mov	r0, r5
        linespace = space;
 8006110:	f8a4 631c 	strh.w	r6, [r4, #796]	@ 0x31c
        boundingArea = calculateBoundingArea();
 8006114:	4798      	blx	r3
 8006116:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800611a:	f8d4 32e8 	ldr.w	r3, [r4, #744]	@ 0x2e8
        boundingArea = calculateBoundingArea();
 800611e:	f504 7649 	add.w	r6, r4, #804	@ 0x324
 8006122:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8006126:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800612a:	4628      	mov	r0, r5
 800612c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006130:	9903      	ldr	r1, [sp, #12]
        rotation = textRotation;
 8006132:	f884 2320 	strb.w	r2, [r4, #800]	@ 0x320
        boundingArea = calculateBoundingArea();
 8006136:	4798      	blx	r3
 8006138:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800613c:	f8db 3000 	ldr.w	r3, [fp]
 8006140:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
 8006144:	f504 7552 	add.w	r5, r4, #840	@ 0x348
 8006148:	2b00      	cmp	r3, #0
 800614a:	f43f af5c 	beq.w	8006006 <_ZN25MediumReadyScreenViewBaseC1Ev+0x36a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800614e:	f8ba 3000 	ldrh.w	r3, [sl]
 8006152:	2b07      	cmp	r3, #7
 8006154:	f67f af63 	bls.w	800601e <_ZN25MediumReadyScreenViewBaseC1Ev+0x382>
        return texts->getText(typedTextId);
 8006158:	f8d9 0000 	ldr.w	r0, [r9]
 800615c:	2107      	movs	r1, #7
 800615e:	f001 f93d 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8006162:	4a0f      	ldr	r2, [pc, #60]	@ (80061a0 <_ZN25MediumReadyScreenViewBaseC1Ev+0x504>)
 8006164:	4603      	mov	r3, r0
 8006166:	210a      	movs	r1, #10
 8006168:	4628      	mov	r0, r5
 800616a:	f014 fcbb 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    counter2.resizeToCurrentText();
 800616e:	9803      	ldr	r0, [sp, #12]
 8006170:	f8c4 5330 	str.w	r5, [r4, #816]	@ 0x330
 8006174:	f00e f962 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006178:	4b0a      	ldr	r3, [pc, #40]	@ (80061a4 <_ZN25MediumReadyScreenViewBaseC1Ev+0x508>)
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZR5));
 800617a:	9803      	ldr	r0, [sp, #12]
 800617c:	9310      	str	r3, [sp, #64]	@ 0x40
 800617e:	a910      	add	r1, sp, #64	@ 0x40
 8006180:	f04f 030e 	mov.w	r3, #14
 8006184:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8006188:	f00e f978 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800618c:	4638      	mov	r0, r7
 800618e:	9903      	ldr	r1, [sp, #12]
        alpha = newAlpha;
 8006190:	f884 831e 	strb.w	r8, [r4, #798]	@ 0x31e
 8006194:	f00a f804 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006198:	4620      	mov	r0, r4
 800619a:	b013      	add	sp, #76	@ 0x4c
 800619c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061a0:	0802c47b 	.word	0x0802c47b
 80061a4:	0802d504 	.word	0x0802d504
 80061a8:	ff000b6e 	.word	0xff000b6e
 80061ac:	ffad9334 	.word	0xffad9334
 80061b0:	ffdeab5f 	.word	0xffdeab5f
 80061b4:	20013fc4 	.word	0x20013fc4

080061b8 <_ZN20MediumScreenViewBase11setupScreenEv>:
}

void MediumScreenViewBase::setupScreen()
{

}
 80061b8:	4770      	bx	lr
	...

080061bc <_ZN20MediumScreenViewBaseD1Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 80061bc:	b510      	push	{r4, lr}
 80061be:	4b03      	ldr	r3, [pc, #12]	@ (80061cc <_ZN20MediumScreenViewBaseD1Ev+0x10>)
 80061c0:	6003      	str	r3, [r0, #0]
 80061c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061c4:	f00f fb7c 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061c8:	4620      	mov	r0, r4
 80061ca:	bd10      	pop	{r4, pc}
 80061cc:	0802d948 	.word	0x0802d948

080061d0 <_ZN20MediumScreenViewBaseD0Ev>:
MediumScreenViewBase::~MediumScreenViewBase()
 80061d0:	b510      	push	{r4, lr}
 80061d2:	4b06      	ldr	r3, [pc, #24]	@ (80061ec <_ZN20MediumScreenViewBaseD0Ev+0x1c>)
 80061d4:	6003      	str	r3, [r0, #0]
 80061d6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061d8:	f00f fb72 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061dc:	4620      	mov	r0, r4
 80061de:	f241 7124 	movw	r1, #5924	@ 0x1724
 80061e2:	f023 fd81 	bl	8029ce8 <_ZdlPvj>
 80061e6:	4620      	mov	r0, r4
 80061e8:	bd10      	pop	{r4, pc}
 80061ea:	bf00      	nop
 80061ec:	0802d948 	.word	0x0802d948

080061f0 <_ZN20MediumScreenViewBaseC1Ev>:
MediumScreenViewBase::MediumScreenViewBase()
 80061f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061f4:	4604      	mov	r4, r0
 80061f6:	b097      	sub	sp, #92	@ 0x5c
 80061f8:	46a2      	mov	sl, r4
 80061fa:	2600      	movs	r6, #0
 80061fc:	f012 ff92 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 8006200:	4ba0      	ldr	r3, [pc, #640]	@ (8006484 <_ZN20MediumScreenViewBaseC1Ev+0x294>)
 8006202:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8006204:	f84a 3b40 	str.w	r3, [sl], #64
 8006208:	4650      	mov	r0, sl
 800620a:	f7fc ff87 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 800620e:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8006212:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 8006216:	4618      	mov	r0, r3
 8006218:	9306      	str	r3, [sp, #24]
 800621a:	f7fc ff7f 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 800621e:	4640      	mov	r0, r8
 8006220:	f7fc ff7c 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8006224:	f104 03c4 	add.w	r3, r4, #196	@ 0xc4
 8006228:	4618      	mov	r0, r3
 800622a:	9307      	str	r3, [sp, #28]
 800622c:	f7fc ff76 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8006230:	f104 03f0 	add.w	r3, r4, #240	@ 0xf0
 8006234:	4618      	mov	r0, r3
 8006236:	4f94      	ldr	r7, [pc, #592]	@ (8006488 <_ZN20MediumScreenViewBaseC1Ev+0x298>)
 8006238:	930c      	str	r3, [sp, #48]	@ 0x30
 800623a:	f04f 0501 	mov.w	r5, #1
 800623e:	f7fc ff6d 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 8006242:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
 8006246:	4618      	mov	r0, r3
        : TextArea()
 8006248:	f504 7ba4 	add.w	fp, r4, #328	@ 0x148
 800624c:	f8c4 70f0 	str.w	r7, [r4, #240]	@ 0xf0
 8006250:	f884 5114 	strb.w	r5, [r4, #276]	@ 0x114
 8006254:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006256:	f504 79ca 	add.w	r9, r4, #404	@ 0x194
 800625a:	f7fc ff5f 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 800625e:	f8c4 711c 	str.w	r7, [r4, #284]	@ 0x11c
 8006262:	f884 5140 	strb.w	r5, [r4, #320]	@ 0x140
        : TextAreaWithWildcardBase(), wc1(0)
 8006266:	4f89      	ldr	r7, [pc, #548]	@ (800648c <_ZN20MediumScreenViewBaseC1Ev+0x29c>)
        : TextArea()
 8006268:	4658      	mov	r0, fp
 800626a:	f7fc ff6d 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800626e:	f8c4 7148 	str.w	r7, [r4, #328]	@ 0x148
 8006272:	f8c4 6190 	str.w	r6, [r4, #400]	@ 0x190
        : TextArea()
 8006276:	4648      	mov	r0, r9
 8006278:	f7fc ff66 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 800627c:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
        : TextAreaWithWildcardBase(), wc1(0)
 8006280:	f8c4 7194 	str.w	r7, [r4, #404]	@ 0x194
 8006284:	4618      	mov	r0, r3
 8006286:	f8c4 61dc 	str.w	r6, [r4, #476]	@ 0x1dc
 800628a:	9304      	str	r3, [sp, #16]
 800628c:	f7fc ff5c 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
 8006290:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8006294:	4618      	mov	r0, r3
 8006296:	9305      	str	r3, [sp, #20]
 8006298:	f7fc ff56 	bl	8003148 <_ZN8touchgfx8TextAreaC1Ev>
        : Box(), borderColor(0), borderSize(0)
 800629c:	f504 731c 	add.w	r3, r4, #624	@ 0x270
 80062a0:	4618      	mov	r0, r3
 80062a2:	4f7b      	ldr	r7, [pc, #492]	@ (8006490 <_ZN20MediumScreenViewBaseC1Ev+0x2a0>)
 80062a4:	930a      	str	r3, [sp, #40]	@ 0x28
 80062a6:	f7fc ff39 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80062aa:	f504 7329 	add.w	r3, r4, #676	@ 0x2a4
 80062ae:	f8c4 7270 	str.w	r7, [r4, #624]	@ 0x270
 80062b2:	4618      	mov	r0, r3
 80062b4:	f8c4 629c 	str.w	r6, [r4, #668]	@ 0x29c
 80062b8:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
 80062bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80062be:	f7fc ff2d 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80062c2:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 80062c6:	f8c4 72a4 	str.w	r7, [r4, #676]	@ 0x2a4
 80062ca:	4618      	mov	r0, r3
 80062cc:	f8c4 62d0 	str.w	r6, [r4, #720]	@ 0x2d0
 80062d0:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80062d4:	4f6f      	ldr	r7, [pc, #444]	@ (8006494 <_ZN20MediumScreenViewBaseC1Ev+0x2a4>)
 80062d6:	9308      	str	r3, [sp, #32]
 80062d8:	f00c fca4 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 80062dc:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 80062e0:	4618      	mov	r0, r3
 80062e2:	f107 0524 	add.w	r5, r7, #36	@ 0x24
 80062e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80062e8:	f7fb fda8 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80062ec:	f504 734d 	add.w	r3, r4, #820	@ 0x334
 80062f0:	f8c4 7320 	str.w	r7, [r4, #800]	@ 0x320
 80062f4:	f8c4 5328 	str.w	r5, [r4, #808]	@ 0x328
 80062f8:	4618      	mov	r0, r3
 80062fa:	f8c4 632c 	str.w	r6, [r4, #812]	@ 0x32c
 80062fe:	9302      	str	r3, [sp, #8]
 8006300:	f00d fb46 	bl	8013990 <_ZN8touchgfx4LineC1Ev>
 8006304:	f504 7369 	add.w	r3, r4, #932	@ 0x3a4
 8006308:	4618      	mov	r0, r3
 800630a:	930e      	str	r3, [sp, #56]	@ 0x38
 800630c:	f7fb fd96 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006310:	f504 736e 	add.w	r3, r4, #952	@ 0x3b8
 8006314:	f8c4 73a4 	str.w	r7, [r4, #932]	@ 0x3a4
 8006318:	f8c4 53ac 	str.w	r5, [r4, #940]	@ 0x3ac
 800631c:	4618      	mov	r0, r3
 800631e:	f8c4 63b0 	str.w	r6, [r4, #944]	@ 0x3b0
 8006322:	9303      	str	r3, [sp, #12]
 8006324:	f00d fb34 	bl	8013990 <_ZN8touchgfx4LineC1Ev>
 8006328:	f504 6385 	add.w	r3, r4, #1064	@ 0x428
 800632c:	4618      	mov	r0, r3
 800632e:	930d      	str	r3, [sp, #52]	@ 0x34
 8006330:	f7fb fd84 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006334:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
 8006338:	f8c4 5430 	str.w	r5, [r4, #1072]	@ 0x430
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800633c:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8006340:	f204 4064 	addw	r0, r4, #1124	@ 0x464
 8006344:	f8c4 6434 	str.w	r6, [r4, #1076]	@ 0x434
 8006348:	f00f fab0 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800634c:	23f0      	movs	r3, #240	@ 0xf0
 800634e:	4632      	mov	r2, r6
 8006350:	4650      	mov	r0, sl
 8006352:	9300      	str	r3, [sp, #0]
 8006354:	4631      	mov	r1, r6
 8006356:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800635a:	f7fc fecb 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800635e:	1d27      	adds	r7, r4, #4
 8006360:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006364:	4651      	mov	r1, sl
 8006366:	66a3      	str	r3, [r4, #104]	@ 0x68
 8006368:	4638      	mov	r0, r7
 800636a:	f009 ff19 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box3.setPosition(0, 0, 320, 240);
 800636e:	23f0      	movs	r3, #240	@ 0xf0
 8006370:	f04f 3aff 	mov.w	sl, #4294967295
 8006374:	4632      	mov	r2, r6
 8006376:	9806      	ldr	r0, [sp, #24]
 8006378:	9300      	str	r3, [sp, #0]
 800637a:	4631      	mov	r1, r6
 800637c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006380:	f7fc feb8 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006384:	9906      	ldr	r1, [sp, #24]
 8006386:	f8c4 a094 	str.w	sl, [r4, #148]	@ 0x94
 800638a:	4638      	mov	r0, r7
 800638c:	f009 ff08 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(2, 2, 316, 236);
 8006390:	2202      	movs	r2, #2
 8006392:	23ec      	movs	r3, #236	@ 0xec
 8006394:	4611      	mov	r1, r2
 8006396:	4640      	mov	r0, r8
 8006398:	9300      	str	r3, [sp, #0]
 800639a:	f44f 739e 	mov.w	r3, #316	@ 0x13c
 800639e:	f7fc fea9 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063a2:	4b3d      	ldr	r3, [pc, #244]	@ (8006498 <_ZN20MediumScreenViewBaseC1Ev+0x2a8>)
 80063a4:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 80063a8:	4641      	mov	r1, r8
 80063aa:	4638      	mov	r0, r7
 80063ac:	f009 fef8 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(160, 0, 3, 240);
 80063b0:	23f0      	movs	r3, #240	@ 0xf0
 80063b2:	4632      	mov	r2, r6
 80063b4:	9807      	ldr	r0, [sp, #28]
 80063b6:	9300      	str	r3, [sp, #0]
 80063b8:	21a0      	movs	r1, #160	@ 0xa0
 80063ba:	2303      	movs	r3, #3
 80063bc:	f7fc fe9a 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        alpha = newAlpha;
 80063c0:	23dc      	movs	r3, #220	@ 0xdc
    paddle1.setPosition(7, 101, 5, 40);
 80063c2:	2528      	movs	r5, #40	@ 0x28
 80063c4:	9907      	ldr	r1, [sp, #28]
 80063c6:	f884 30ea 	strb.w	r3, [r4, #234]	@ 0xea
 80063ca:	4638      	mov	r0, r7
        color = newColor;
 80063cc:	f8c4 a0ec 	str.w	sl, [r4, #236]	@ 0xec
 80063d0:	f009 fee6 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80063d4:	2305      	movs	r3, #5
 80063d6:	2265      	movs	r2, #101	@ 0x65
 80063d8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80063da:	9500      	str	r5, [sp, #0]
 80063dc:	2107      	movs	r1, #7
 80063de:	f7fc fe89 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063e2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80063e4:	f8c4 a118 	str.w	sl, [r4, #280]	@ 0x118
 80063e8:	4638      	mov	r0, r7
 80063ea:	f009 fed9 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    paddle2.setPosition(308, 101, 5, 40);
 80063ee:	2305      	movs	r3, #5
 80063f0:	2265      	movs	r2, #101	@ 0x65
 80063f2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80063f4:	9500      	str	r5, [sp, #0]
 80063f6:	f44f 719a 	mov.w	r1, #308	@ 0x134
 80063fa:	f7fc fe7b 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063fe:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006400:	f8c4 a144 	str.w	sl, [r4, #324]	@ 0x144
 8006404:	4638      	mov	r0, r7
 8006406:	f009 fecb 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score2.setXY(184, 22);
 800640a:	2216      	movs	r2, #22
 800640c:	21b8      	movs	r1, #184	@ 0xb8
 800640e:	4658      	mov	r0, fp
 8006410:	f7fc fe63 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006414:	4b21      	ldr	r3, [pc, #132]	@ (800649c <_ZN20MediumScreenViewBaseC1Ev+0x2ac>)
 8006416:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
        boundingArea = calculateBoundingArea();
 800641a:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
        linespace = space;
 800641e:	f8a4 617c 	strh.w	r6, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
 8006422:	ad10      	add	r5, sp, #64	@ 0x40
 8006424:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006428:	4659      	mov	r1, fp
 800642a:	4628      	mov	r0, r5
 800642c:	4798      	blx	r3
 800642e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006432:	f504 78c2 	add.w	r8, r4, #388	@ 0x184
        rotation = textRotation;
 8006436:	f04f 0303 	mov.w	r3, #3
        boundingArea = calculateBoundingArea();
 800643a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800643e:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
        boundingArea = calculateBoundingArea();
 8006442:	f8d4 3148 	ldr.w	r3, [r4, #328]	@ 0x148
 8006446:	4659      	mov	r1, fp
 8006448:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800644c:	4628      	mov	r0, r5
 800644e:	4798      	blx	r3
 8006450:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006454:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006458:	f8df 8058 	ldr.w	r8, [pc, #88]	@ 80064b4 <_ZN20MediumScreenViewBaseC1Ev+0x2c4>
    Unicode::snprintf(score2Buffer, SCORE2_SIZE, "%s", touchgfx::TypedText(T_SCORE2BUFFER2).getText());
 800645c:	f204 433c 	addw	r3, r4, #1084	@ 0x43c
 8006460:	9306      	str	r3, [sp, #24]
 8006462:	f8d8 3000 	ldr.w	r3, [r8]
 8006466:	b92b      	cbnz	r3, 8006474 <_ZN20MediumScreenViewBaseC1Ev+0x284>
 8006468:	4b0d      	ldr	r3, [pc, #52]	@ (80064a0 <_ZN20MediumScreenViewBaseC1Ev+0x2b0>)
 800646a:	4a0e      	ldr	r2, [pc, #56]	@ (80064a4 <_ZN20MediumScreenViewBaseC1Ev+0x2b4>)
 800646c:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800646e:	480e      	ldr	r0, [pc, #56]	@ (80064a8 <_ZN20MediumScreenViewBaseC1Ev+0x2b8>)
 8006470:	f024 fc78 	bl	802ad64 <__assert_func>
 8006474:	4b0d      	ldr	r3, [pc, #52]	@ (80064ac <_ZN20MediumScreenViewBaseC1Ev+0x2bc>)
 8006476:	881b      	ldrh	r3, [r3, #0]
 8006478:	2b03      	cmp	r3, #3
 800647a:	d81d      	bhi.n	80064b8 <_ZN20MediumScreenViewBaseC1Ev+0x2c8>
 800647c:	4b0c      	ldr	r3, [pc, #48]	@ (80064b0 <_ZN20MediumScreenViewBaseC1Ev+0x2c0>)
 800647e:	4a09      	ldr	r2, [pc, #36]	@ (80064a4 <_ZN20MediumScreenViewBaseC1Ev+0x2b4>)
 8006480:	2161      	movs	r1, #97	@ 0x61
 8006482:	e7f4      	b.n	800646e <_ZN20MediumScreenViewBaseC1Ev+0x27e>
 8006484:	0802d948 	.word	0x0802d948
 8006488:	0802d5a4 	.word	0x0802d5a4
 800648c:	0802d514 	.word	0x0802d514
 8006490:	0802e254 	.word	0x0802e254
 8006494:	0802de48 	.word	0x0802de48
 8006498:	ff0c3837 	.word	0xff0c3837
 800649c:	ff595656 	.word	0xff595656
 80064a0:	0802c32e 	.word	0x0802c32e
 80064a4:	0802c430 	.word	0x0802c430
 80064a8:	0802c3ab 	.word	0x0802c3ab
 80064ac:	20013fbc 	.word	0x20013fbc
 80064b0:	0802c3f2 	.word	0x0802c3f2
 80064b4:	20013fb8 	.word	0x20013fb8
        return texts->getText(typedTextId);
 80064b8:	4bc1      	ldr	r3, [pc, #772]	@ (80067c0 <_ZN20MediumScreenViewBaseC1Ev+0x5d0>)
 80064ba:	2103      	movs	r1, #3
 80064bc:	6818      	ldr	r0, [r3, #0]
 80064be:	f000 ff8d 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80064c2:	4ac0      	ldr	r2, [pc, #768]	@ (80067c4 <_ZN20MediumScreenViewBaseC1Ev+0x5d4>)
 80064c4:	4603      	mov	r3, r0
 80064c6:	210a      	movs	r1, #10
 80064c8:	9806      	ldr	r0, [sp, #24]
 80064ca:	f014 fb0b 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80064ce:	9906      	ldr	r1, [sp, #24]
 80064d0:	f8c4 1190 	str.w	r1, [r4, #400]	@ 0x190
    score2.resizeToCurrentText();
 80064d4:	4658      	mov	r0, fp
 80064d6:	f00d ffb1 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80064da:	4bbb      	ldr	r3, [pc, #748]	@ (80067c8 <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 80064dc:	9314      	str	r3, [sp, #80]	@ 0x50
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KK9M));
 80064de:	4658      	mov	r0, fp
 80064e0:	231d      	movs	r3, #29
 80064e2:	a914      	add	r1, sp, #80	@ 0x50
 80064e4:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80064e8:	f00d ffc8 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064ec:	4659      	mov	r1, fp
 80064ee:	4638      	mov	r0, r7
 80064f0:	f009 fe56 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    score1.setXY(117, 195);
 80064f4:	22c3      	movs	r2, #195	@ 0xc3
 80064f6:	2175      	movs	r1, #117	@ 0x75
 80064f8:	4648      	mov	r0, r9
 80064fa:	f7fc fdee 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064fe:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        color = newColor;
 8006502:	49b2      	ldr	r1, [pc, #712]	@ (80067cc <_ZN20MediumScreenViewBaseC1Ev+0x5dc>)
        boundingArea = calculateBoundingArea();
 8006504:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8006508:	f8c4 11c4 	str.w	r1, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
 800650c:	4628      	mov	r0, r5
 800650e:	4649      	mov	r1, r9
        linespace = space;
 8006510:	f8a4 61c8 	strh.w	r6, [r4, #456]	@ 0x1c8
        boundingArea = calculateBoundingArea();
 8006514:	4798      	blx	r3
 8006516:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800651a:	f504 7be8 	add.w	fp, r4, #464	@ 0x1d0
        boundingArea = calculateBoundingArea();
 800651e:	f8d4 3194 	ldr.w	r3, [r4, #404]	@ 0x194
        boundingArea = calculateBoundingArea();
 8006522:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8006526:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 800652a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        rotation = textRotation;
 800652e:	f884 11cc 	strb.w	r1, [r4, #460]	@ 0x1cc
        boundingArea = calculateBoundingArea();
 8006532:	4628      	mov	r0, r5
 8006534:	4649      	mov	r1, r9
 8006536:	4798      	blx	r3
 8006538:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800653c:	f8d8 3000 	ldr.w	r3, [r8]
 8006540:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    Unicode::snprintf(score1Buffer, SCORE1_SIZE, "%s", touchgfx::TypedText(T_SCORE1BUFFER2).getText());
 8006544:	f504 6b8a 	add.w	fp, r4, #1104	@ 0x450
 8006548:	2b00      	cmp	r3, #0
 800654a:	d08d      	beq.n	8006468 <_ZN20MediumScreenViewBaseC1Ev+0x278>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800654c:	49a0      	ldr	r1, [pc, #640]	@ (80067d0 <_ZN20MediumScreenViewBaseC1Ev+0x5e0>)
 800654e:	880b      	ldrh	r3, [r1, #0]
 8006550:	2b04      	cmp	r3, #4
 8006552:	d993      	bls.n	800647c <_ZN20MediumScreenViewBaseC1Ev+0x28c>
        return texts->getText(typedTextId);
 8006554:	4a9a      	ldr	r2, [pc, #616]	@ (80067c0 <_ZN20MediumScreenViewBaseC1Ev+0x5d0>)
 8006556:	2104      	movs	r1, #4
 8006558:	6810      	ldr	r0, [r2, #0]
 800655a:	f000 ff3f 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 800655e:	4a99      	ldr	r2, [pc, #612]	@ (80067c4 <_ZN20MediumScreenViewBaseC1Ev+0x5d4>)
 8006560:	4603      	mov	r3, r0
 8006562:	210a      	movs	r1, #10
 8006564:	4658      	mov	r0, fp
 8006566:	f014 fabd 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    score1.resizeToCurrentText();
 800656a:	4648      	mov	r0, r9
 800656c:	f8c4 b1dc 	str.w	fp, [r4, #476]	@ 0x1dc
 8006570:	f00d ff64 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ATHF));
 8006574:	aa14      	add	r2, sp, #80	@ 0x50
        : typedTextId(id)
 8006576:	4b94      	ldr	r3, [pc, #592]	@ (80067c8 <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 8006578:	9314      	str	r3, [sp, #80]	@ 0x50
 800657a:	4611      	mov	r1, r2
 800657c:	231c      	movs	r3, #28
 800657e:	4648      	mov	r0, r9
 8006580:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 8006584:	f00d ff7a 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006588:	4649      	mov	r1, r9
 800658a:	4638      	mov	r0, r7
    player1.setPosition(140, 180, 19, 52);
 800658c:	f04f 0934 	mov.w	r9, #52	@ 0x34
 8006590:	f009 fe06 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006594:	2313      	movs	r3, #19
 8006596:	22b4      	movs	r2, #180	@ 0xb4
 8006598:	9804      	ldr	r0, [sp, #16]
 800659a:	f8cd 9000 	str.w	r9, [sp]
 800659e:	218c      	movs	r1, #140	@ 0x8c
 80065a0:	f7fc fda8 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80065a4:	4628      	mov	r0, r5
 80065a6:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80065a8:	f8c4 a210 	str.w	sl, [r4, #528]	@ 0x210
        linespace = space;
 80065ac:	f8a4 6214 	strh.w	r6, [r4, #532]	@ 0x214
        boundingArea = calculateBoundingArea();
 80065b0:	f00d fcbc 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065b4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065b8:	f504 7807 	add.w	r8, r4, #540	@ 0x21c
 80065bc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80065c0:	f04f 0101 	mov.w	r1, #1
        boundingArea = calculateBoundingArea();
 80065c4:	4628      	mov	r0, r5
        rotation = textRotation;
 80065c6:	f884 1218 	strb.w	r1, [r4, #536]	@ 0x218
        boundingArea = calculateBoundingArea();
 80065ca:	9904      	ldr	r1, [sp, #16]
 80065cc:	f00d fcae 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80065d4:	4b7c      	ldr	r3, [pc, #496]	@ (80067c8 <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 80065d6:	9314      	str	r3, [sp, #80]	@ 0x50
 80065d8:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80065dc:	231b      	movs	r3, #27
        alpha = newAlpha;
 80065de:	f04f 08be 	mov.w	r8, #190	@ 0xbe
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V9P9));
 80065e2:	9804      	ldr	r0, [sp, #16]
 80065e4:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 80065e8:	a914      	add	r1, sp, #80	@ 0x50
 80065ea:	f00d ff47 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065ee:	9904      	ldr	r1, [sp, #16]
 80065f0:	f884 8216 	strb.w	r8, [r4, #534]	@ 0x216
 80065f4:	4638      	mov	r0, r7
 80065f6:	f009 fdd3 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    player2.setPosition(165, 7, 19, 52);
 80065fa:	2313      	movs	r3, #19
 80065fc:	2207      	movs	r2, #7
 80065fe:	9805      	ldr	r0, [sp, #20]
 8006600:	f8cd 9000 	str.w	r9, [sp]
 8006604:	21a5      	movs	r1, #165	@ 0xa5
 8006606:	f7fc fd75 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 800660a:	4628      	mov	r0, r5
 800660c:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 800660e:	f8c4 a258 	str.w	sl, [r4, #600]	@ 0x258
        linespace = space;
 8006612:	f8a4 625c 	strh.w	r6, [r4, #604]	@ 0x25c
        boundingArea = calculateBoundingArea();
 8006616:	f00d fc89 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800661a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800661e:	f504 7919 	add.w	r9, r4, #612	@ 0x264
 8006622:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8006626:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 800662a:	4628      	mov	r0, r5
 800662c:	9905      	ldr	r1, [sp, #20]
        rotation = textRotation;
 800662e:	f884 2260 	strb.w	r2, [r4, #608]	@ 0x260
        boundingArea = calculateBoundingArea();
 8006632:	f00d fc7b 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006636:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800663a:	4b63      	ldr	r3, [pc, #396]	@ (80067c8 <_ZN20MediumScreenViewBaseC1Ev+0x5d8>)
 800663c:	9314      	str	r3, [sp, #80]	@ 0x50
 800663e:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8006642:	231a      	movs	r3, #26
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UJJ8));
 8006644:	9805      	ldr	r0, [sp, #20]
 8006646:	f8ad 3054 	strh.w	r3, [sp, #84]	@ 0x54
 800664a:	a914      	add	r1, sp, #80	@ 0x50
 800664c:	f00d ff16 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006650:	9905      	ldr	r1, [sp, #20]
        alpha = newAlpha;
 8006652:	f884 825e 	strb.w	r8, [r4, #606]	@ 0x25e
 8006656:	4638      	mov	r0, r7
    goal2.setPosition(318, 60, 2, 120);
 8006658:	f04f 0878 	mov.w	r8, #120	@ 0x78
 800665c:	f009 fda0 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006660:	223c      	movs	r2, #60	@ 0x3c
 8006662:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006664:	f8cd 8000 	str.w	r8, [sp]
 8006668:	2302      	movs	r3, #2
 800666a:	f44f 719f 	mov.w	r1, #318	@ 0x13e
 800666e:	f7fc fd41 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006672:	4d58      	ldr	r5, [pc, #352]	@ (80067d4 <_ZN20MediumScreenViewBaseC1Ev+0x5e4>)
 8006674:	4b58      	ldr	r3, [pc, #352]	@ (80067d8 <_ZN20MediumScreenViewBaseC1Ev+0x5e8>)
 8006676:	990a      	ldr	r1, [sp, #40]	@ 0x28
        borderSize = size;
 8006678:	f8a4 62a0 	strh.w	r6, [r4, #672]	@ 0x2a0
        borderColor = colorBorder;
 800667c:	e9c4 53a6 	strd	r5, r3, [r4, #664]	@ 0x298
 8006680:	4638      	mov	r0, r7
 8006682:	f009 fd8d 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    goal1.setPosition(0, 60, 2, 120);
 8006686:	223c      	movs	r2, #60	@ 0x3c
 8006688:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800668a:	f8cd 8000 	str.w	r8, [sp]
 800668e:	2302      	movs	r3, #2
 8006690:	4631      	mov	r1, r6
 8006692:	f7fc fd2f 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006696:	4b51      	ldr	r3, [pc, #324]	@ (80067dc <_ZN20MediumScreenViewBaseC1Ev+0x5ec>)
 8006698:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800669a:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
 800669e:	4638      	mov	r0, r7
 80066a0:	f8c4 52cc 	str.w	r5, [r4, #716]	@ 0x2cc
        borderSize = size;
 80066a4:	f8a4 62d4 	strh.w	r6, [r4, #724]	@ 0x2d4
 80066a8:	f009 fd7a 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ball.setPosition(154, 114, 14, 14);
 80066ac:	230e      	movs	r3, #14
 80066ae:	2272      	movs	r2, #114	@ 0x72
 80066b0:	9808      	ldr	r0, [sp, #32]
 80066b2:	9300      	str	r3, [sp, #0]
 80066b4:	219a      	movs	r1, #154	@ 0x9a
 80066b6:	f7fc fd1d 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->circleCenterX = CWRUtil::toQ5(x);
 80066ba:	23f0      	movs	r3, #240	@ 0xf0
        this->circleCenterY = CWRUtil::toQ5(y);
 80066bc:	e9c4 33c1 	strd	r3, r3, [r4, #772]	@ 0x304
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 80066c0:	23c0      	movs	r3, #192	@ 0xc0
 80066c2:	f8c4 330c 	str.w	r3, [r4, #780]	@ 0x30c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 80066c6:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 80066ca:	f8c4 3314 	str.w	r3, [r4, #788]	@ 0x314
 80066ce:	4b44      	ldr	r3, [pc, #272]	@ (80067e0 <_ZN20MediumScreenViewBaseC1Ev+0x5f0>)
 80066d0:	f8c4 332c 	str.w	r3, [r4, #812]	@ 0x32c
        color565 = LCD16bpp::getNativeColor(painterColor);
 80066d4:	f649 0361 	movw	r3, #39009	@ 0x9861
 80066d8:	f8a4 3330 	strh.w	r3, [r4, #816]	@ 0x330
 80066dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80066de:	9908      	ldr	r1, [sp, #32]
 80066e0:	f8c4 3300 	str.w	r3, [r4, #768]	@ 0x300
 80066e4:	4638      	mov	r0, r7
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 80066e6:	f8c4 6318 	str.w	r6, [r4, #792]	@ 0x318
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 80066ea:	f8c4 6310 	str.w	r6, [r4, #784]	@ 0x310
 80066ee:	f009 fd57 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(13, 114, 33, 19);
 80066f2:	2313      	movs	r3, #19
 80066f4:	9802      	ldr	r0, [sp, #8]
 80066f6:	9300      	str	r3, [sp, #0]
 80066f8:	2272      	movs	r2, #114	@ 0x72
 80066fa:	2321      	movs	r3, #33	@ 0x21
 80066fc:	210d      	movs	r1, #13
 80066fe:	f7fc fcf9 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006702:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006704:	f8c4 335c 	str.w	r3, [r4, #860]	@ 0x35c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006708:	22a0      	movs	r2, #160	@ 0xa0
 800670a:	4611      	mov	r1, r2
 800670c:	9802      	ldr	r0, [sp, #8]
 800670e:	f8c4 a3b0 	str.w	sl, [r4, #944]	@ 0x3b0
 8006712:	f8a4 a3b4 	strh.w	sl, [r4, #948]	@ 0x3b4
 8006716:	f00d fa51 	bl	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800671a:	9802      	ldr	r0, [sp, #8]
 800671c:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8006720:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 8006724:	f00d fa55 	bl	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006728:	f8d4 3370 	ldr.w	r3, [r4, #880]	@ 0x370
 800672c:	2b20      	cmp	r3, #32
 800672e:	d005      	beq.n	800673c <_ZN20MediumScreenViewBaseC1Ev+0x54c>
        lineWidthQ5 = widthQ5;
 8006730:	2320      	movs	r3, #32
        updateCachedShape();
 8006732:	9802      	ldr	r0, [sp, #8]
        lineWidthQ5 = widthQ5;
 8006734:	f8c4 3370 	str.w	r3, [r4, #880]	@ 0x370
        updateCachedShape();
 8006738:	f00d f94a 	bl	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 800673c:	9802      	ldr	r0, [sp, #8]
 800673e:	2100      	movs	r1, #0
 8006740:	f00d fa52 	bl	8013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 8006744:	235f      	movs	r3, #95	@ 0x5f
 8006746:	9902      	ldr	r1, [sp, #8]
 8006748:	f884 335a 	strb.w	r3, [r4, #858]	@ 0x35a
 800674c:	4638      	mov	r0, r7
 800674e:	f009 fd27 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(268, 114, 33, 19);
 8006752:	2313      	movs	r3, #19
 8006754:	9803      	ldr	r0, [sp, #12]
 8006756:	9300      	str	r3, [sp, #0]
 8006758:	2272      	movs	r2, #114	@ 0x72
 800675a:	2321      	movs	r3, #33	@ 0x21
 800675c:	f44f 7186 	mov.w	r1, #268	@ 0x10c
 8006760:	f7fc fcc8 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006764:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006768:	22a0      	movs	r2, #160	@ 0xa0
 800676a:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
 800676e:	f8a4 3438 	strh.w	r3, [r4, #1080]	@ 0x438
        canvasPainter = &painter;
 8006772:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006774:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
 8006778:	4611      	mov	r1, r2
 800677a:	9803      	ldr	r0, [sp, #12]
 800677c:	f00d fa1e 	bl	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006780:	9803      	ldr	r0, [sp, #12]
 8006782:	f44f 62b4 	mov.w	r2, #1440	@ 0x5a0
 8006786:	f44f 613e 	mov.w	r1, #3040	@ 0xbe0
 800678a:	f00d fa22 	bl	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800678e:	f8d4 33f4 	ldr.w	r3, [r4, #1012]	@ 0x3f4
 8006792:	2b20      	cmp	r3, #32
 8006794:	d005      	beq.n	80067a2 <_ZN20MediumScreenViewBaseC1Ev+0x5b2>
        lineWidthQ5 = widthQ5;
 8006796:	2320      	movs	r3, #32
        updateCachedShape();
 8006798:	9803      	ldr	r0, [sp, #12]
        lineWidthQ5 = widthQ5;
 800679a:	f8c4 33f4 	str.w	r3, [r4, #1012]	@ 0x3f4
        updateCachedShape();
 800679e:	f00d f917 	bl	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80067a2:	9803      	ldr	r0, [sp, #12]
 80067a4:	2100      	movs	r1, #0
 80067a6:	f00d fa1f 	bl	8013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
        alpha = newAlpha;
 80067aa:	235f      	movs	r3, #95	@ 0x5f
 80067ac:	4638      	mov	r0, r7
 80067ae:	9903      	ldr	r1, [sp, #12]
 80067b0:	f884 33de 	strb.w	r3, [r4, #990]	@ 0x3de
 80067b4:	f009 fcf4 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80067b8:	4620      	mov	r0, r4
 80067ba:	b017      	add	sp, #92	@ 0x5c
 80067bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067c0:	20013fc4 	.word	0x20013fc4
 80067c4:	0802c47b 	.word	0x0802c47b
 80067c8:	0802d504 	.word	0x0802d504
 80067cc:	ff595656 	.word	0xff595656
 80067d0:	20013fbc 	.word	0x20013fbc
 80067d4:	ff000b6e 	.word	0xff000b6e
 80067d8:	ffad9334 	.word	0xffad9334
 80067dc:	ff3b2f05 	.word	0xff3b2f05
 80067e0:	ff990c0c 	.word	0xff990c0c

080067e4 <_ZN19StartScreenViewBase7action1Ev>:
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
 80067e4:	4770      	bx	lr

080067e6 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067e6:	4770      	bx	lr

080067e8 <_ZN19StartScreenViewBase11setupScreenEv>:
}

void StartScreenViewBase::setupScreen()
{

}
 80067e8:	4770      	bx	lr

080067ea <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067ea:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067ec:	68c2      	ldr	r2, [r0, #12]
 80067ee:	6844      	ldr	r4, [r0, #4]
 80067f0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80067f2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067f4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067f8:	07d2      	lsls	r2, r2, #31
 80067fa:	bf48      	it	mi
 80067fc:	5962      	ldrmi	r2, [r4, r5]
 80067fe:	689b      	ldr	r3, [r3, #8]
    }
 8006800:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006802:	bf48      	it	mi
 8006804:	58d3      	ldrmi	r3, [r2, r3]
 8006806:	4718      	bx	r3

08006808 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8006808:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800680a:	6840      	ldr	r0, [r0, #4]
 800680c:	b130      	cbz	r0, 800681c <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800680e:	689a      	ldr	r2, [r3, #8]
 8006810:	b91a      	cbnz	r2, 800681a <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 8006812:	68d8      	ldr	r0, [r3, #12]
 8006814:	f000 0001 	and.w	r0, r0, #1
 8006818:	4770      	bx	lr
 800681a:	2001      	movs	r0, #1
    }
 800681c:	4770      	bx	lr

0800681e <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800681e:	b510      	push	{r4, lr}
 8006820:	2110      	movs	r1, #16
 8006822:	4604      	mov	r4, r0
 8006824:	f023 fa60 	bl	8029ce8 <_ZdlPvj>
 8006828:	4620      	mov	r0, r4
 800682a:	bd10      	pop	{r4, pc}

0800682c <_ZN19StartScreenViewBaseD1Ev>:
StartScreenViewBase::~StartScreenViewBase()
 800682c:	b510      	push	{r4, lr}
 800682e:	4b03      	ldr	r3, [pc, #12]	@ (800683c <_ZN19StartScreenViewBaseD1Ev+0x10>)
 8006830:	6003      	str	r3, [r0, #0]
 8006832:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006834:	f00f f844 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006838:	4620      	mov	r0, r4
 800683a:	bd10      	pop	{r4, pc}
 800683c:	0802d994 	.word	0x0802d994

08006840 <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
 8006840:	b510      	push	{r4, lr}
 8006842:	4b06      	ldr	r3, [pc, #24]	@ (800685c <_ZN19StartScreenViewBaseD0Ev+0x1c>)
 8006844:	6003      	str	r3, [r0, #0]
 8006846:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006848:	f00f f83a 	bl	80158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800684c:	4620      	mov	r0, r4
 800684e:	f641 017c 	movw	r1, #6268	@ 0x187c
 8006852:	f023 fa49 	bl	8029ce8 <_ZdlPvj>
 8006856:	4620      	mov	r0, r4
 8006858:	bd10      	pop	{r4, pc}
 800685a:	bf00      	nop
 800685c:	0802d994 	.word	0x0802d994

08006860 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006860:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonEasy)
 8006862:	f100 03e0 	add.w	r3, r0, #224	@ 0xe0
 8006866:	4299      	cmp	r1, r3
{
 8006868:	4604      	mov	r4, r0
 800686a:	460d      	mov	r5, r1
    if (&src == &buttonEasy)
 800686c:	d103      	bne.n	8006876 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800686e:	f010 fd21 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonEasy clicked change screen to EasyReadyScreen
        //Go to EasyReadyScreen with screen transition towards East
        application().gotoEasyReadyScreenScreenWipeTransitionEast();
 8006872:	f7fd fcc1 	bl	80041f8 <_ZN23FrontendApplicationBase43gotoEasyReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonMedium)
 8006876:	f204 5364 	addw	r3, r4, #1380	@ 0x564
 800687a:	429d      	cmp	r5, r3
 800687c:	d103      	bne.n	8006886 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800687e:	f010 fd19 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonMedium clicked change screen to MediumReadyScreen
        //Go to MediumReadyScreen with screen transition towards East
        application().gotoMediumReadyScreenScreenWipeTransitionEast();
 8006882:	f7fd fc99 	bl	80041b8 <_ZN23FrontendApplicationBase45gotoMediumReadyScreenScreenWipeTransitionEastEv>
    }
    if (&src == &buttonHard)
 8006886:	3498      	adds	r4, #152	@ 0x98
 8006888:	42a5      	cmp	r5, r4
 800688a:	d105      	bne.n	8006898 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
 800688c:	f010 fd12 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonHard clicked change screen to HardReadyScreen
        //Go to HardReadyScreen with screen transition towards East
        application().gotoHardReadyScreenScreenWipeTransitionEast();
    }
}
 8006890:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoHardReadyScreenScreenWipeTransitionEast();
 8006894:	f7fd bc70 	b.w	8004178 <_ZN23FrontendApplicationBase43gotoHardReadyScreenScreenWipeTransitionEastEv>
}
 8006898:	bd38      	pop	{r3, r4, r5, pc}
	...

0800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    PainterRGB565(colortype color = 0)
 800689c:	b538      	push	{r3, r4, r5, lr}
 800689e:	4604      	mov	r4, r0
 80068a0:	460d      	mov	r5, r1
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80068a2:	f7fb facb 	bl	8001e3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80068a6:	4b03      	ldr	r3, [pc, #12]	@ (80068b4 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x18>)
 80068a8:	6023      	str	r3, [r4, #0]
 80068aa:	3324      	adds	r3, #36	@ 0x24
 80068ac:	60e5      	str	r5, [r4, #12]
 80068ae:	60a3      	str	r3, [r4, #8]
    }
 80068b0:	4620      	mov	r0, r4
 80068b2:	bd38      	pop	{r3, r4, r5, pc}
 80068b4:	0802de48 	.word	0x0802de48

080068b8 <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
 80068b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068bc:	4604      	mov	r4, r0
 80068be:	b0a5      	sub	sp, #148	@ 0x94
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
 80068c0:	46a1      	mov	r9, r4
 80068c2:	2500      	movs	r5, #0
 80068c4:	f012 fc2e 	bl	8019124 <_ZN8touchgfx6ScreenC1Ev>
 80068c8:	4be2      	ldr	r3, [pc, #904]	@ (8006c54 <_ZN19StartScreenViewBaseC1Ev+0x39c>)
 80068ca:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80068cc:	f849 3b40 	str.w	r3, [r9], #64
 80068d0:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 80068d4:	4648      	mov	r0, r9
 80068d6:	f7fc fc21 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80068da:	f104 0898 	add.w	r8, r4, #152	@ 0x98
 80068de:	4650      	mov	r0, sl
 80068e0:	f7fc fc1c 	bl	800311c <_ZN8touchgfx3BoxC1Ev>
 80068e4:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
 80068e8:	4640      	mov	r0, r8
 80068ea:	f00e f923 	bl	8014b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068ee:	4638      	mov	r0, r7
 80068f0:	f00e f920 	bl	8014b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068f4:	f504 7394 	add.w	r3, r4, #296	@ 0x128
 80068f8:	4618      	mov	r0, r3
 80068fa:	9306      	str	r3, [sp, #24]
 80068fc:	f00c f992 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006900:	f504 73b8 	add.w	r3, r4, #368	@ 0x170
 8006904:	4629      	mov	r1, r5
 8006906:	4618      	mov	r0, r3
 8006908:	9311      	str	r3, [sp, #68]	@ 0x44
 800690a:	f7ff ffc7 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800690e:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
 8006912:	4618      	mov	r0, r3
 8006914:	9307      	str	r3, [sp, #28]
 8006916:	f00c f985 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 800691a:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
 800691e:	4629      	mov	r1, r5
 8006920:	4618      	mov	r0, r3
 8006922:	9312      	str	r3, [sp, #72]	@ 0x48
 8006924:	f7ff ffba 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006928:	f504 73f0 	add.w	r3, r4, #480	@ 0x1e0
 800692c:	4618      	mov	r0, r3
 800692e:	9308      	str	r3, [sp, #32]
 8006930:	f00c f978 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006934:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 8006938:	4629      	mov	r1, r5
 800693a:	4618      	mov	r0, r3
 800693c:	9313      	str	r3, [sp, #76]	@ 0x4c
 800693e:	f7ff ffad 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006942:	f504 730f 	add.w	r3, r4, #572	@ 0x23c
 8006946:	4618      	mov	r0, r3
 8006948:	9309      	str	r3, [sp, #36]	@ 0x24
 800694a:	f00c f96b 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 800694e:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 8006952:	4629      	mov	r1, r5
 8006954:	4618      	mov	r0, r3
 8006956:	9314      	str	r3, [sp, #80]	@ 0x50
 8006958:	f7ff ffa0 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 800695c:	f504 7326 	add.w	r3, r4, #664	@ 0x298
 8006960:	4618      	mov	r0, r3
 8006962:	930a      	str	r3, [sp, #40]	@ 0x28
 8006964:	f00c f95e 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006968:	f504 7338 	add.w	r3, r4, #736	@ 0x2e0
 800696c:	4629      	mov	r1, r5
 800696e:	4618      	mov	r0, r3
 8006970:	9315      	str	r3, [sp, #84]	@ 0x54
 8006972:	f7ff ff93 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006976:	f504 733d 	add.w	r3, r4, #756	@ 0x2f4
 800697a:	4618      	mov	r0, r3
 800697c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800697e:	f00c f951 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006982:	f504 734f 	add.w	r3, r4, #828	@ 0x33c
 8006986:	4629      	mov	r1, r5
 8006988:	4618      	mov	r0, r3
 800698a:	9316      	str	r3, [sp, #88]	@ 0x58
 800698c:	f7ff ff86 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006990:	f504 7354 	add.w	r3, r4, #848	@ 0x350
 8006994:	4618      	mov	r0, r3
 8006996:	930c      	str	r3, [sp, #48]	@ 0x30
 8006998:	f00c f944 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 800699c:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 80069a0:	4629      	mov	r1, r5
 80069a2:	4618      	mov	r0, r3
 80069a4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80069a6:	f7ff ff79 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 80069aa:	f504 736b 	add.w	r3, r4, #940	@ 0x3ac
 80069ae:	9305      	str	r3, [sp, #20]
          touchable(false),
 80069b0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80069b4:	f8a4 33d0 	strh.w	r3, [r4, #976]	@ 0x3d0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80069b8:	4ba7      	ldr	r3, [pc, #668]	@ (8006c58 <_ZN19StartScreenViewBaseC1Ev+0x3a0>)
 80069ba:	f8c4 33ac 	str.w	r3, [r4, #940]	@ 0x3ac
 80069be:	4ba7      	ldr	r3, [pc, #668]	@ (8006c5c <_ZN19StartScreenViewBaseC1Ev+0x3a4>)
 80069c0:	f8c4 33d4 	str.w	r3, [r4, #980]	@ 0x3d4
 80069c4:	f04f 31ff 	mov.w	r1, #4294967295
 80069c8:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80069cc:	f04f 30ff 	mov.w	r0, #4294967295
 80069d0:	f8c4 33e0 	str.w	r3, [r4, #992]	@ 0x3e0
              text(0)
 80069d4:	e9c4 05fb 	strd	r0, r5, [r4, #1004]	@ 0x3ec
 80069d8:	f8a4 13d8 	strh.w	r1, [r4, #984]	@ 0x3d8
 80069dc:	f504 707d 	add.w	r0, r4, #1012	@ 0x3f4
        : x(0), y(0), width(0), height(0)
 80069e0:	e9c4 55ec 	strd	r5, r5, [r4, #944]	@ 0x3b0
 80069e4:	e9c4 55ee 	strd	r5, r5, [r4, #952]	@ 0x3b8
          nextSibling(0),
 80069e8:	e9c4 55f0 	strd	r5, r5, [r4, #960]	@ 0x3c0
          cachedAbsX(0),
 80069ec:	e9c4 55f2 	strd	r5, r5, [r4, #968]	@ 0x3c8
        : color(col)
 80069f0:	f8c4 53dc 	str.w	r5, [r4, #988]	@ 0x3dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80069f4:	f8a4 53e4 	strh.w	r5, [r4, #996]	@ 0x3e4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80069f8:	f8c4 53e8 	str.w	r5, [r4, #1000]	@ 0x3e8
 80069fc:	900d      	str	r0, [sp, #52]	@ 0x34
 80069fe:	f00c f911 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006a02:	4629      	mov	r1, r5
 8006a04:	f204 403c 	addw	r0, r4, #1084	@ 0x43c
 8006a08:	9018      	str	r0, [sp, #96]	@ 0x60
 8006a0a:	f7ff ff47 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a0e:	f504 608a 	add.w	r0, r4, #1104	@ 0x450
 8006a12:	900e      	str	r0, [sp, #56]	@ 0x38
 8006a14:	f00c f906 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006a18:	4629      	mov	r1, r5
 8006a1a:	f504 6093 	add.w	r0, r4, #1176	@ 0x498
 8006a1e:	9019      	str	r0, [sp, #100]	@ 0x64
 8006a20:	f7ff ff3c 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a24:	f204 40ac 	addw	r0, r4, #1196	@ 0x4ac
 8006a28:	900f      	str	r0, [sp, #60]	@ 0x3c
 8006a2a:	f00c f8fb 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006a2e:	4629      	mov	r1, r5
 8006a30:	f204 40f4 	addw	r0, r4, #1268	@ 0x4f4
 8006a34:	901a      	str	r0, [sp, #104]	@ 0x68
 8006a36:	f7ff ff31 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a3a:	f504 60a1 	add.w	r0, r4, #1288	@ 0x508
 8006a3e:	9010      	str	r0, [sp, #64]	@ 0x40
 8006a40:	f00c f8f0 	bl	8012c24 <_ZN8touchgfx6CircleC1Ev>
 8006a44:	4629      	mov	r1, r5
 8006a46:	f504 60aa 	add.w	r0, r4, #1360	@ 0x550
 8006a4a:	901b      	str	r0, [sp, #108]	@ 0x6c
 8006a4c:	f7ff ff26 	bl	800689c <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
 8006a50:	f204 5064 	addw	r0, r4, #1380	@ 0x564
 8006a54:	9003      	str	r0, [sp, #12]
 8006a56:	f00e f86d 	bl	8014b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006a5a:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8006a5e:	4a80      	ldr	r2, [pc, #512]	@ (8006c60 <_ZN19StartScreenViewBaseC1Ev+0x3a8>)
 8006a60:	f8c3 286c 	str.w	r2, [r3, #2156]	@ 0x86c
 8006a64:	4a7f      	ldr	r2, [pc, #508]	@ (8006c64 <_ZN19StartScreenViewBaseC1Ev+0x3ac>)
 8006a66:	f8c3 4870 	str.w	r4, [r3, #2160]	@ 0x870
 8006a6a:	f8c3 2874 	str.w	r2, [r3, #2164]	@ 0x874
 8006a6e:	f8c3 5878 	str.w	r5, [r3, #2168]	@ 0x878
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006a72:	f204 50ac 	addw	r0, r4, #1452	@ 0x5ac
    __background.setPosition(0, 0, 320, 240);
 8006a76:	f04f 0bf0 	mov.w	fp, #240	@ 0xf0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006a7a:	f44f 5196 	mov.w	r1, #4800	@ 0x12c0
 8006a7e:	f00e ff15 	bl	80158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8006a82:	462a      	mov	r2, r5
 8006a84:	f8cd b000 	str.w	fp, [sp]
 8006a88:	4629      	mov	r1, r5
 8006a8a:	4648      	mov	r0, r9
 8006a8c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006a90:	1d26      	adds	r6, r4, #4
 8006a92:	f7fc fb2f 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a96:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006a9a:	66a3      	str	r3, [r4, #104]	@ 0x68
 8006a9c:	4649      	mov	r1, r9
 8006a9e:	4630      	mov	r0, r6
 8006aa0:	f009 fb7e 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    background.setPosition(0, 0, 320, 240);
 8006aa4:	462a      	mov	r2, r5
 8006aa6:	f8cd b000 	str.w	fp, [sp]
 8006aaa:	4629      	mov	r1, r5
 8006aac:	4650      	mov	r0, sl
 8006aae:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8006ab2:	f7fc fb1f 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ab6:	4b6c      	ldr	r3, [pc, #432]	@ (8006c68 <_ZN19StartScreenViewBaseC1Ev+0x3b0>)
 8006ab8:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8006abc:	4651      	mov	r1, sl
 8006abe:	4630      	mov	r0, r6
 8006ac0:	f009 fb6e 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonHard.setXY(85, 102);
 8006ac4:	4640      	mov	r0, r8
 8006ac6:	2266      	movs	r2, #102	@ 0x66
 8006ac8:	2155      	movs	r1, #85	@ 0x55
 8006aca:	f7fc fb06 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    buttonHard.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8006ace:	a821      	add	r0, sp, #132	@ 0x84
 8006ad0:	f04f 0b01 	mov.w	fp, #1
 8006ad4:	aa22      	add	r2, sp, #136	@ 0x88
 8006ad6:	4601      	mov	r1, r0
 8006ad8:	f04f 0902 	mov.w	r9, #2
 8006adc:	4640      	mov	r0, r8
 8006ade:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8006ae2:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8006ae6:	f00d fd1c 	bl	8014522 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006aea:	2324      	movs	r3, #36	@ 0x24
 8006aec:	f8a4 30d0 	strh.w	r3, [r4, #208]	@ 0xd0
        updateTextPosition();
 8006af0:	4640      	mov	r0, r8
 8006af2:	f7fd f8ab 	bl	8003c4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8006af6:	f04f 30ff 	mov.w	r0, #4294967295
 8006afa:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
    buttonHard.setAction(buttonCallback);
 8006afe:	f504 50c3 	add.w	r0, r4, #6240	@ 0x1860
        color = col;
 8006b02:	4b5a      	ldr	r3, [pc, #360]	@ (8006c6c <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8006b04:	f8c4 30d4 	str.w	r3, [r4, #212]	@ 0xd4
 8006b08:	300c      	adds	r0, #12
 8006b0a:	9004      	str	r0, [sp, #16]
 8006b0c:	f8c4 00c0 	str.w	r0, [r4, #192]	@ 0xc0
 8006b10:	4641      	mov	r1, r8
 8006b12:	4630      	mov	r0, r6
 8006b14:	f009 fb44 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonEasy.setXY(1, 50);
 8006b18:	4659      	mov	r1, fp
 8006b1a:	4638      	mov	r0, r7
 8006b1c:	2232      	movs	r2, #50	@ 0x32
 8006b1e:	f7fc fadc 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
    buttonEasy.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8006b22:	a821      	add	r0, sp, #132	@ 0x84
 8006b24:	aa22      	add	r2, sp, #136	@ 0x88
 8006b26:	4601      	mov	r1, r0
 8006b28:	4638      	mov	r0, r7
 8006b2a:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8006b2e:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8006b32:	f00d fcf6 	bl	8014522 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b36:	2325      	movs	r3, #37	@ 0x25
 8006b38:	f8a4 3118 	strh.w	r3, [r4, #280]	@ 0x118
        updateTextPosition();
 8006b3c:	4638      	mov	r0, r7
 8006b3e:	f7fd f885 	bl	8003c4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b42:	9904      	ldr	r1, [sp, #16]
        color = col;
 8006b44:	4b49      	ldr	r3, [pc, #292]	@ (8006c6c <_ZN19StartScreenViewBaseC1Ev+0x3b4>)
 8006b46:	f8c4 311c 	str.w	r3, [r4, #284]	@ 0x11c
        colorPressed = col;
 8006b4a:	f04f 30ff 	mov.w	r0, #4294967295
    circle5_1_4.setPosition(207, 197, 29, 29);
 8006b4e:	f04f 0a1d 	mov.w	sl, #29
 8006b52:	f8c4 0120 	str.w	r0, [r4, #288]	@ 0x120
 8006b56:	f8c4 1108 	str.w	r1, [r4, #264]	@ 0x108
 8006b5a:	4630      	mov	r0, r6
 8006b5c:	4639      	mov	r1, r7
 8006b5e:	f009 fb1f 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b62:	9806      	ldr	r0, [sp, #24]
 8006b64:	f8cd a000 	str.w	sl, [sp]
 8006b68:	4653      	mov	r3, sl
 8006b6a:	22c5      	movs	r2, #197	@ 0xc5
 8006b6c:	21cf      	movs	r1, #207	@ 0xcf
 8006b6e:	f7fc fac1 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b72:	4b3f      	ldr	r3, [pc, #252]	@ (8006c70 <_ZN19StartScreenViewBaseC1Ev+0x3b8>)
        canvasPainter = &painter;
 8006b74:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8006b76:	f8c4 317c 	str.w	r3, [r4, #380]	@ 0x17c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006b7a:	f44f 5834 	mov.w	r8, #11520	@ 0x2d00
        this->circleCenterX = CWRUtil::toQ5(x);
 8006b7e:	f44f 77f0 	mov.w	r7, #480	@ 0x1e0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006b82:	f44f 79a0 	mov.w	r9, #320	@ 0x140
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006b86:	f24d 4314 	movw	r3, #54292	@ 0xd414
        this->circleCenterY = CWRUtil::toQ5(y);
 8006b8a:	e9c4 7755 	strd	r7, r7, [r4, #340]	@ 0x154
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006b8e:	f8c4 915c 	str.w	r9, [r4, #348]	@ 0x15c
 8006b92:	f8a4 3180 	strh.w	r3, [r4, #384]	@ 0x180
 8006b96:	f8c4 1150 	str.w	r1, [r4, #336]	@ 0x150
 8006b9a:	4630      	mov	r0, r6
 8006b9c:	9906      	ldr	r1, [sp, #24]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006b9e:	f8c4 5168 	str.w	r5, [r4, #360]	@ 0x168
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006ba2:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006ba6:	f8c4 8164 	str.w	r8, [r4, #356]	@ 0x164
 8006baa:	f009 faf9 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_3.setPosition(91, 197, 29, 29);
 8006bae:	9807      	ldr	r0, [sp, #28]
 8006bb0:	f8cd a000 	str.w	sl, [sp]
 8006bb4:	4653      	mov	r3, sl
 8006bb6:	22c5      	movs	r2, #197	@ 0xc5
 8006bb8:	215b      	movs	r1, #91	@ 0x5b
 8006bba:	f7fc fa9b 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bbe:	4b2d      	ldr	r3, [pc, #180]	@ (8006c74 <_ZN19StartScreenViewBaseC1Ev+0x3bc>)
 8006bc0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8006bc2:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
 8006bc6:	f24a 533a 	movw	r3, #42298	@ 0xa53a
        this->circleCenterY = CWRUtil::toQ5(y);
 8006bca:	e9c4 776c 	strd	r7, r7, [r4, #432]	@ 0x1b0
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006bce:	f8c4 91b8 	str.w	r9, [r4, #440]	@ 0x1b8
 8006bd2:	f8a4 31dc 	strh.w	r3, [r4, #476]	@ 0x1dc
 8006bd6:	f8c4 11ac 	str.w	r1, [r4, #428]	@ 0x1ac
 8006bda:	4630      	mov	r0, r6
 8006bdc:	9907      	ldr	r1, [sp, #28]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006bde:	f8c4 51c4 	str.w	r5, [r4, #452]	@ 0x1c4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006be2:	e9c4 586f 	strd	r5, r8, [r4, #444]	@ 0x1bc
 8006be6:	f009 fadb 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_4.setPosition(149, 197, 29, 29);
 8006bea:	9808      	ldr	r0, [sp, #32]
 8006bec:	f8cd a000 	str.w	sl, [sp]
 8006bf0:	4653      	mov	r3, sl
 8006bf2:	22c5      	movs	r2, #197	@ 0xc5
 8006bf4:	2195      	movs	r1, #149	@ 0x95
 8006bf6:	f7fc fa7d 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bfa:	4b1f      	ldr	r3, [pc, #124]	@ (8006c78 <_ZN19StartScreenViewBaseC1Ev+0x3c0>)
 8006bfc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006bfe:	f8c4 3234 	str.w	r3, [r4, #564]	@ 0x234
 8006c02:	f64d 53b9 	movw	r3, #56761	@ 0xddb9
        this->circleCenterY = CWRUtil::toQ5(y);
 8006c06:	e9c4 7783 	strd	r7, r7, [r4, #524]	@ 0x20c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006c0a:	f8c4 9214 	str.w	r9, [r4, #532]	@ 0x214
 8006c0e:	f8a4 3238 	strh.w	r3, [r4, #568]	@ 0x238
 8006c12:	f8c4 1208 	str.w	r1, [r4, #520]	@ 0x208
 8006c16:	4630      	mov	r0, r6
 8006c18:	9908      	ldr	r1, [sp, #32]
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006c1a:	f8c4 5220 	str.w	r5, [r4, #544]	@ 0x220
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006c1e:	e9c4 5886 	strd	r5, r8, [r4, #536]	@ 0x218
 8006c22:	f009 fabd 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2_1.setPosition(236, 168, 29, 29);
 8006c26:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006c28:	f8cd a000 	str.w	sl, [sp]
 8006c2c:	4653      	mov	r3, sl
 8006c2e:	22a8      	movs	r2, #168	@ 0xa8
 8006c30:	21ec      	movs	r1, #236	@ 0xec
 8006c32:	f7fc fa5f 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c36:	4b11      	ldr	r3, [pc, #68]	@ (8006c7c <_ZN19StartScreenViewBaseC1Ev+0x3c4>)
 8006c38:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8006c3a:	f8c4 3290 	str.w	r3, [r4, #656]	@ 0x290
 8006c3e:	f248 6316 	movw	r3, #34326	@ 0x8616
        this->circleCenterY = CWRUtil::toQ5(y);
 8006c42:	e9c4 779a 	strd	r7, r7, [r4, #616]	@ 0x268
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006c46:	f8c4 9270 	str.w	r9, [r4, #624]	@ 0x270
 8006c4a:	f8a4 3294 	strh.w	r3, [r4, #660]	@ 0x294
 8006c4e:	f8c4 1264 	str.w	r1, [r4, #612]	@ 0x264
 8006c52:	e015      	b.n	8006c80 <_ZN19StartScreenViewBaseC1Ev+0x3c8>
 8006c54:	0802d994 	.word	0x0802d994
 8006c58:	0802e15c 	.word	0x0802e15c
 8006c5c:	0802d504 	.word	0x0802d504
 8006c60:	0802d97c 	.word	0x0802d97c
 8006c64:	08006861 	.word	0x08006861
 8006c68:	ffaddced 	.word	0xffaddced
 8006c6c:	ff395080 	.word	0xff395080
 8006c70:	ffd483a5 	.word	0xffd483a5
 8006c74:	ffa1a4d1 	.word	0xffa1a4d1
 8006c78:	ffdeb4ca 	.word	0xffdeb4ca
 8006c7c:	ff86c2b7 	.word	0xff86c2b7
 8006c80:	4630      	mov	r0, r6
 8006c82:	9909      	ldr	r1, [sp, #36]	@ 0x24
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006c84:	f8c4 527c 	str.w	r5, [r4, #636]	@ 0x27c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006c88:	e9c4 589d 	strd	r5, r8, [r4, #628]	@ 0x274
 8006c8c:	f009 fa88 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_2.setPosition(117, 168, 29, 29);
 8006c90:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006c92:	f8cd a000 	str.w	sl, [sp]
 8006c96:	4653      	mov	r3, sl
 8006c98:	22a8      	movs	r2, #168	@ 0xa8
 8006c9a:	2175      	movs	r1, #117	@ 0x75
 8006c9c:	f7fc fa2a 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ca0:	4b98      	ldr	r3, [pc, #608]	@ (8006f04 <_ZN19StartScreenViewBaseC1Ev+0x64c>)
 8006ca2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8006ca4:	f8c4 32ec 	str.w	r3, [r4, #748]	@ 0x2ec
 8006ca8:	f64e 6373 	movw	r3, #61043	@ 0xee73
        this->circleCenterY = CWRUtil::toQ5(y);
 8006cac:	e9c4 77b1 	strd	r7, r7, [r4, #708]	@ 0x2c4
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006cb0:	f8c4 92cc 	str.w	r9, [r4, #716]	@ 0x2cc
 8006cb4:	f8a4 32f0 	strh.w	r3, [r4, #752]	@ 0x2f0
 8006cb8:	f8c4 12c0 	str.w	r1, [r4, #704]	@ 0x2c0
 8006cbc:	4630      	mov	r0, r6
 8006cbe:	990a      	ldr	r1, [sp, #40]	@ 0x28
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006cc0:	f8c4 52d8 	str.w	r5, [r4, #728]	@ 0x2d8
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006cc4:	e9c4 58b4 	strd	r5, r8, [r4, #720]	@ 0x2d0
 8006cc8:	f009 fa6a 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1_1.setPosition(178, 168, 29, 29);
 8006ccc:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8006cce:	f8cd a000 	str.w	sl, [sp]
 8006cd2:	4653      	mov	r3, sl
 8006cd4:	22a8      	movs	r2, #168	@ 0xa8
 8006cd6:	21b2      	movs	r1, #178	@ 0xb2
 8006cd8:	f7fc fa0c 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cdc:	4b8a      	ldr	r3, [pc, #552]	@ (8006f08 <_ZN19StartScreenViewBaseC1Ev+0x650>)
 8006cde:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8006ce0:	f8c4 3348 	str.w	r3, [r4, #840]	@ 0x348
 8006ce4:	f649 6332 	movw	r3, #40498	@ 0x9e32
        this->circleCenterY = CWRUtil::toQ5(y);
 8006ce8:	e9c4 77c8 	strd	r7, r7, [r4, #800]	@ 0x320
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006cec:	f8c4 9328 	str.w	r9, [r4, #808]	@ 0x328
 8006cf0:	f8a4 334c 	strh.w	r3, [r4, #844]	@ 0x34c
 8006cf4:	f8c4 131c 	str.w	r1, [r4, #796]	@ 0x31c
 8006cf8:	4630      	mov	r0, r6
 8006cfa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006cfc:	f8c4 5334 	str.w	r5, [r4, #820]	@ 0x334
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006d00:	e9c4 58cb 	strd	r5, r8, [r4, #812]	@ 0x32c
 8006d04:	f009 fa4c 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle5_1.setPosition(62, 168, 29, 29);
 8006d08:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8006d0a:	f8cd a000 	str.w	sl, [sp]
 8006d0e:	4653      	mov	r3, sl
 8006d10:	22a8      	movs	r2, #168	@ 0xa8
 8006d12:	213e      	movs	r1, #62	@ 0x3e
 8006d14:	f7fc f9ee 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d18:	4b7c      	ldr	r3, [pc, #496]	@ (8006f0c <_ZN19StartScreenViewBaseC1Ev+0x654>)
 8006d1a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006d1c:	f8c4 33a4 	str.w	r3, [r4, #932]	@ 0x3a4
 8006d20:	f64e 4392 	movw	r3, #60562	@ 0xec92
        this->circleCenterY = CWRUtil::toQ5(y);
 8006d24:	e9c4 77df 	strd	r7, r7, [r4, #892]	@ 0x37c
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006d28:	f8c4 9384 	str.w	r9, [r4, #900]	@ 0x384
 8006d2c:	f8a4 33a8 	strh.w	r3, [r4, #936]	@ 0x3a8
 8006d30:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
 8006d34:	4630      	mov	r0, r6
 8006d36:	990c      	ldr	r1, [sp, #48]	@ 0x30
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006d38:	f8c4 5390 	str.w	r5, [r4, #912]	@ 0x390
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006d3c:	e9c4 58e2 	strd	r5, r8, [r4, #904]	@ 0x388
 8006d40:	f009 fa2e 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    titleText.setPosition(89, 10, 159, 49);
 8006d44:	2331      	movs	r3, #49	@ 0x31
 8006d46:	9805      	ldr	r0, [sp, #20]
 8006d48:	9300      	str	r3, [sp, #0]
 8006d4a:	220a      	movs	r2, #10
 8006d4c:	239f      	movs	r3, #159	@ 0x9f
 8006d4e:	2159      	movs	r1, #89	@ 0x59
 8006d50:	f7fc f9d0 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8006d54:	af1c      	add	r7, sp, #112	@ 0x70
        color = newColor;
 8006d56:	4b6e      	ldr	r3, [pc, #440]	@ (8006f10 <_ZN19StartScreenViewBaseC1Ev+0x658>)
        boundingArea = calculateBoundingArea();
 8006d58:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006d5a:	f8c4 33dc 	str.w	r3, [r4, #988]	@ 0x3dc
        boundingArea = calculateBoundingArea();
 8006d5e:	4638      	mov	r0, r7
        linespace = space;
 8006d60:	f8a4 b3e0 	strh.w	fp, [r4, #992]	@ 0x3e0
        boundingArea = calculateBoundingArea();
 8006d64:	f00d f8e2 	bl	8013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d68:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006d6c:	f504 737a 	add.w	r3, r4, #1000	@ 0x3e8
 8006d70:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d74:	4a67      	ldr	r2, [pc, #412]	@ (8006f14 <_ZN19StartScreenViewBaseC1Ev+0x65c>)
 8006d76:	9222      	str	r2, [sp, #136]	@ 0x88
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 8006d78:	aa22      	add	r2, sp, #136	@ 0x88
 8006d7a:	2327      	movs	r3, #39	@ 0x27
 8006d7c:	4611      	mov	r1, r2
 8006d7e:	9805      	ldr	r0, [sp, #20]
 8006d80:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
    circle1.setPosition(-26, -30, 80, 80);
 8006d84:	f04f 0a50 	mov.w	sl, #80	@ 0x50
    titleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YPFP));
 8006d88:	f00d fb78 	bl	801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d8c:	9905      	ldr	r1, [sp, #20]
 8006d8e:	4630      	mov	r0, r6
 8006d90:	f009 fa06 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(-26, -30, 80, 80);
 8006d94:	4653      	mov	r3, sl
 8006d96:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006d98:	f8cd a000 	str.w	sl, [sp]
 8006d9c:	f06f 021d 	mvn.w	r2, #29
 8006da0:	f06f 0119 	mvn.w	r1, #25
 8006da4:	f7fc f9a6 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006da8:	f04f 32ff 	mov.w	r2, #4294967295
        this->circleCenterX = CWRUtil::toQ5(x);
 8006dac:	f44f 67a0 	mov.w	r7, #1280	@ 0x500
 8006db0:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
 8006db4:	f04f 31ff 	mov.w	r1, #4294967295
 8006db8:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8006dba:	f8a4 144c 	strh.w	r1, [r4, #1100]	@ 0x44c
 8006dbe:	f8c4 241c 	str.w	r2, [r4, #1052]	@ 0x41c
 8006dc2:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8006dc4:	f8c4 7420 	str.w	r7, [r4, #1056]	@ 0x420
 8006dc8:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 8006dca:	f8c4 7424 	str.w	r7, [r4, #1060]	@ 0x424
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006dce:	f8c4 7428 	str.w	r7, [r4, #1064]	@ 0x428
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006dd2:	f8c4 5434 	str.w	r5, [r4, #1076]	@ 0x434
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006dd6:	f8c4 542c 	str.w	r5, [r4, #1068]	@ 0x42c
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006dda:	f8c4 8430 	str.w	r8, [r4, #1072]	@ 0x430
 8006dde:	f009 f9df 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle2.setPosition(270, -30, 80, 80);
 8006de2:	4653      	mov	r3, sl
 8006de4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8006de6:	f8cd a000 	str.w	sl, [sp]
 8006dea:	f06f 021d 	mvn.w	r2, #29
 8006dee:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8006df2:	f7fc f97f 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006df6:	f648 695d 	movw	r9, #36445	@ 0x8e5d
 8006dfa:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8006dfc:	4a46      	ldr	r2, [pc, #280]	@ (8006f18 <_ZN19StartScreenViewBaseC1Ev+0x660>)
 8006dfe:	f8c4 24a4 	str.w	r2, [r4, #1188]	@ 0x4a4
 8006e02:	f8a4 94a8 	strh.w	r9, [r4, #1192]	@ 0x4a8
 8006e06:	f8c4 1478 	str.w	r1, [r4, #1144]	@ 0x478
 8006e0a:	4630      	mov	r0, r6
 8006e0c:	990e      	ldr	r1, [sp, #56]	@ 0x38
        this->circleCenterX = CWRUtil::toQ5(x);
 8006e0e:	f8c4 747c 	str.w	r7, [r4, #1148]	@ 0x47c
        this->circleCenterY = CWRUtil::toQ5(y);
 8006e12:	f8c4 7480 	str.w	r7, [r4, #1152]	@ 0x480
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006e16:	f8c4 7484 	str.w	r7, [r4, #1156]	@ 0x484
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006e1a:	f8c4 5490 	str.w	r5, [r4, #1168]	@ 0x490
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006e1e:	f8c4 5488 	str.w	r5, [r4, #1160]	@ 0x488
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006e22:	f8c4 848c 	str.w	r8, [r4, #1164]	@ 0x48c
 8006e26:	f009 f9bb 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle3.setPosition(-26, 189, 80, 80);
 8006e2a:	4653      	mov	r3, sl
 8006e2c:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8006e2e:	f8cd a000 	str.w	sl, [sp]
 8006e32:	22bd      	movs	r2, #189	@ 0xbd
 8006e34:	f06f 0119 	mvn.w	r1, #25
 8006e38:	f7fc f95c 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e3c:	4a36      	ldr	r2, [pc, #216]	@ (8006f18 <_ZN19StartScreenViewBaseC1Ev+0x660>)
 8006e3e:	f8c4 2500 	str.w	r2, [r4, #1280]	@ 0x500
 8006e42:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8006e44:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006e46:	f8a4 9504 	strh.w	r9, [r4, #1284]	@ 0x504
 8006e4a:	f8c4 24d4 	str.w	r2, [r4, #1236]	@ 0x4d4
 8006e4e:	4630      	mov	r0, r6
        this->circleCenterX = CWRUtil::toQ5(x);
 8006e50:	f8c4 74d8 	str.w	r7, [r4, #1240]	@ 0x4d8
        this->circleCenterY = CWRUtil::toQ5(y);
 8006e54:	f8c4 74dc 	str.w	r7, [r4, #1244]	@ 0x4dc
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006e58:	f8c4 74e0 	str.w	r7, [r4, #1248]	@ 0x4e0
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006e5c:	f8c4 54ec 	str.w	r5, [r4, #1260]	@ 0x4ec
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006e60:	f8c4 54e4 	str.w	r5, [r4, #1252]	@ 0x4e4
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006e64:	f8c4 84e8 	str.w	r8, [r4, #1256]	@ 0x4e8
 8006e68:	f009 f99a 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle4.setPosition(270, 189, 80, 80);
 8006e6c:	4653      	mov	r3, sl
 8006e6e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8006e70:	f8cd a000 	str.w	sl, [sp]
 8006e74:	22bd      	movs	r2, #189	@ 0xbd
 8006e76:	f44f 7187 	mov.w	r1, #270	@ 0x10e
 8006e7a:	f7fc f93b 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e7e:	f04f 32ff 	mov.w	r2, #4294967295
 8006e82:	f8c4 255c 	str.w	r2, [r4, #1372]	@ 0x55c
 8006e86:	f04f 31ff 	mov.w	r1, #4294967295
 8006e8a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8006e8c:	f8a4 1560 	strh.w	r1, [r4, #1376]	@ 0x560
 8006e90:	f8c4 2530 	str.w	r2, [r4, #1328]	@ 0x530
 8006e94:	9910      	ldr	r1, [sp, #64]	@ 0x40
        this->circleCenterX = CWRUtil::toQ5(x);
 8006e96:	f8c4 7534 	str.w	r7, [r4, #1332]	@ 0x534
 8006e9a:	4630      	mov	r0, r6
        this->circleCenterY = CWRUtil::toQ5(y);
 8006e9c:	f8c4 7538 	str.w	r7, [r4, #1336]	@ 0x538
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8006ea0:	f8c4 753c 	str.w	r7, [r4, #1340]	@ 0x53c
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8006ea4:	f8c4 5548 	str.w	r5, [r4, #1352]	@ 0x548
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8006ea8:	f8c4 5540 	str.w	r5, [r4, #1344]	@ 0x540
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8006eac:	f8c4 8544 	str.w	r8, [r4, #1348]	@ 0x544
 8006eb0:	f009 f976 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonMedium.setXY(170, 50);
 8006eb4:	9803      	ldr	r0, [sp, #12]
 8006eb6:	2232      	movs	r2, #50	@ 0x32
 8006eb8:	21aa      	movs	r1, #170	@ 0xaa
 8006eba:	f7fc f90e 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 8006ebe:	f04f 0902 	mov.w	r9, #2
    buttonMedium.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
 8006ec2:	aa22      	add	r2, sp, #136	@ 0x88
 8006ec4:	a921      	add	r1, sp, #132	@ 0x84
 8006ec6:	9803      	ldr	r0, [sp, #12]
 8006ec8:	f8ad b084 	strh.w	fp, [sp, #132]	@ 0x84
 8006ecc:	f8ad 9088 	strh.w	r9, [sp, #136]	@ 0x88
 8006ed0:	f00d fb27 	bl	8014522 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006ed4:	2326      	movs	r3, #38	@ 0x26
        updateTextPosition();
 8006ed6:	9803      	ldr	r0, [sp, #12]
 8006ed8:	f8a4 359c 	strh.w	r3, [r4, #1436]	@ 0x59c
 8006edc:	f7fc feb6 	bl	8003c4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8006ee0:	4b0e      	ldr	r3, [pc, #56]	@ (8006f1c <_ZN19StartScreenViewBaseC1Ev+0x664>)
 8006ee2:	f8c4 35a0 	str.w	r3, [r4, #1440]	@ 0x5a0
        colorPressed = col;
 8006ee6:	f04f 33ff 	mov.w	r3, #4294967295
 8006eea:	f8c4 35a4 	str.w	r3, [r4, #1444]	@ 0x5a4
 8006eee:	9b04      	ldr	r3, [sp, #16]
 8006ef0:	9903      	ldr	r1, [sp, #12]
 8006ef2:	f8c4 358c 	str.w	r3, [r4, #1420]	@ 0x58c
 8006ef6:	4630      	mov	r0, r6
 8006ef8:	f009 f952 	bl	80101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006efc:	4620      	mov	r0, r4
 8006efe:	b025      	add	sp, #148	@ 0x94
 8006f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f04:	ffebcf9b 	.word	0xffebcf9b
 8006f08:	ff99c793 	.word	0xff99c793
 8006f0c:	ffeb9191 	.word	0xffeb9191
 8006f10:	ff325d8f 	.word	0xff325d8f
 8006f14:	0802d504 	.word	0x0802d504
 8006f18:	ff88caeb 	.word	0xff88caeb
 8006f1c:	ff395080 	.word	0xff395080

08006f20 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_15_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_15_4bpp()
{
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006f20:	4770      	bx	lr
	...

08006f24 <_Z23getFont_comicbd_15_4bppv>:
{
 8006f24:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006f26:	4d17      	ldr	r5, [pc, #92]	@ (8006f84 <_Z23getFont_comicbd_15_4bppv+0x60>)
 8006f28:	682c      	ldr	r4, [r5, #0]
 8006f2a:	f014 0401 	ands.w	r4, r4, #1
{
 8006f2e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_15_4bpp(glyphs_comicbd_15_4bpp, 9, 19, 15, 0, 0, 4, 1, 0, 1, unicodes_comicbd_15_4bpp, kerning_comicbd_15_4bpp, 63, 0, 0, 0);
 8006f30:	f3bf 8f5b 	dmb	ish
 8006f34:	d122      	bne.n	8006f7c <_Z23getFont_comicbd_15_4bppv+0x58>
 8006f36:	4628      	mov	r0, r5
 8006f38:	f022 fed8 	bl	8029cec <__cxa_guard_acquire>
 8006f3c:	b1f0      	cbz	r0, 8006f7c <_Z23getFont_comicbd_15_4bppv+0x58>
 8006f3e:	233f      	movs	r3, #63	@ 0x3f
 8006f40:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f42:	4b11      	ldr	r3, [pc, #68]	@ (8006f88 <_Z23getFont_comicbd_15_4bppv+0x64>)
 8006f44:	9308      	str	r3, [sp, #32]
 8006f46:	4b11      	ldr	r3, [pc, #68]	@ (8006f8c <_Z23getFont_comicbd_15_4bppv+0x68>)
 8006f48:	9307      	str	r3, [sp, #28]
 8006f4a:	2301      	movs	r3, #1
 8006f4c:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006f50:	9304      	str	r3, [sp, #16]
 8006f52:	2304      	movs	r3, #4
 8006f54:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006f58:	230f      	movs	r3, #15
 8006f5a:	490d      	ldr	r1, [pc, #52]	@ (8006f90 <_Z23getFont_comicbd_15_4bppv+0x6c>)
 8006f5c:	9300      	str	r3, [sp, #0]
 8006f5e:	2209      	movs	r2, #9
 8006f60:	2313      	movs	r3, #19
 8006f62:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006f66:	480b      	ldr	r0, [pc, #44]	@ (8006f94 <_Z23getFont_comicbd_15_4bppv+0x70>)
 8006f68:	940a      	str	r4, [sp, #40]	@ 0x28
 8006f6a:	9401      	str	r4, [sp, #4]
 8006f6c:	f7fd ff84 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006f70:	4809      	ldr	r0, [pc, #36]	@ (8006f98 <_Z23getFont_comicbd_15_4bppv+0x74>)
 8006f72:	f023 ff15 	bl	802ada0 <atexit>
 8006f76:	4628      	mov	r0, r5
 8006f78:	f022 fec4 	bl	8029d04 <__cxa_guard_release>
    return comicbd_15_4bpp;
}
 8006f7c:	4805      	ldr	r0, [pc, #20]	@ (8006f94 <_Z23getFont_comicbd_15_4bppv+0x70>)
 8006f7e:	b00f      	add	sp, #60	@ 0x3c
 8006f80:	bd30      	pop	{r4, r5, pc}
 8006f82:	bf00      	nop
 8006f84:	20003078 	.word	0x20003078
 8006f88:	080319cc 	.word	0x080319cc
 8006f8c:	080319e8 	.word	0x080319e8
 8006f90:	080314b8 	.word	0x080314b8
 8006f94:	2000307c 	.word	0x2000307c
 8006f98:	08006f21 	.word	0x08006f21

08006f9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_18_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_18_4bpp()
{
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 8006f9c:	4770      	bx	lr
	...

08006fa0 <_Z23getFont_comicbd_18_4bppv>:
{
 8006fa0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 8006fa2:	4d17      	ldr	r5, [pc, #92]	@ (8007000 <_Z23getFont_comicbd_18_4bppv+0x60>)
 8006fa4:	682c      	ldr	r4, [r5, #0]
 8006fa6:	f014 0401 	ands.w	r4, r4, #1
{
 8006faa:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_18_4bpp(glyphs_comicbd_18_4bpp, 31, 23, 18, 0, 0, 4, 1, 0, 1, unicodes_comicbd_18_4bpp, kerning_comicbd_18_4bpp, 63, 0, 0, 0);
 8006fac:	f3bf 8f5b 	dmb	ish
 8006fb0:	d122      	bne.n	8006ff8 <_Z23getFont_comicbd_18_4bppv+0x58>
 8006fb2:	4628      	mov	r0, r5
 8006fb4:	f022 fe9a 	bl	8029cec <__cxa_guard_acquire>
 8006fb8:	b1f0      	cbz	r0, 8006ff8 <_Z23getFont_comicbd_18_4bppv+0x58>
 8006fba:	233f      	movs	r3, #63	@ 0x3f
 8006fbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8006fbe:	4b11      	ldr	r3, [pc, #68]	@ (8007004 <_Z23getFont_comicbd_18_4bppv+0x64>)
 8006fc0:	9308      	str	r3, [sp, #32]
 8006fc2:	4b11      	ldr	r3, [pc, #68]	@ (8007008 <_Z23getFont_comicbd_18_4bppv+0x68>)
 8006fc4:	9307      	str	r3, [sp, #28]
 8006fc6:	2301      	movs	r3, #1
 8006fc8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006fcc:	9304      	str	r3, [sp, #16]
 8006fce:	2304      	movs	r3, #4
 8006fd0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006fd4:	2312      	movs	r3, #18
 8006fd6:	490d      	ldr	r1, [pc, #52]	@ (800700c <_Z23getFont_comicbd_18_4bppv+0x6c>)
 8006fd8:	9300      	str	r3, [sp, #0]
 8006fda:	221f      	movs	r2, #31
 8006fdc:	2317      	movs	r3, #23
 8006fde:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006fe2:	480b      	ldr	r0, [pc, #44]	@ (8007010 <_Z23getFont_comicbd_18_4bppv+0x70>)
 8006fe4:	940a      	str	r4, [sp, #40]	@ 0x28
 8006fe6:	9401      	str	r4, [sp, #4]
 8006fe8:	f7fd ff46 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006fec:	4809      	ldr	r0, [pc, #36]	@ (8007014 <_Z23getFont_comicbd_18_4bppv+0x74>)
 8006fee:	f023 fed7 	bl	802ada0 <atexit>
 8006ff2:	4628      	mov	r0, r5
 8006ff4:	f022 fe86 	bl	8029d04 <__cxa_guard_release>
    return comicbd_18_4bpp;
}
 8006ff8:	4805      	ldr	r0, [pc, #20]	@ (8007010 <_Z23getFont_comicbd_18_4bppv+0x70>)
 8006ffa:	b00f      	add	sp, #60	@ 0x3c
 8006ffc:	bd30      	pop	{r4, r5, pc}
 8006ffe:	bf00      	nop
 8007000:	200030a8 	.word	0x200030a8
 8007004:	080319d0 	.word	0x080319d0
 8007008:	080319ec 	.word	0x080319ec
 800700c:	08031538 	.word	0x08031538
 8007010:	200030ac 	.word	0x200030ac
 8007014:	08006f9d 	.word	0x08006f9d

08007018 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_20_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_20_4bpp()
{
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8007018:	4770      	bx	lr
	...

0800701c <_Z23getFont_comicbd_20_4bppv>:
{
 800701c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 800701e:	4d16      	ldr	r5, [pc, #88]	@ (8007078 <_Z23getFont_comicbd_20_4bppv+0x5c>)
 8007020:	682c      	ldr	r4, [r5, #0]
 8007022:	f014 0401 	ands.w	r4, r4, #1
{
 8007026:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_20_4bpp(glyphs_comicbd_20_4bpp, 1, 21, 20, 0, 0, 4, 1, 0, 0, unicodes_comicbd_20_4bpp, kerning_comicbd_20_4bpp, 63, 0, 0, 0);
 8007028:	f3bf 8f5b 	dmb	ish
 800702c:	d121      	bne.n	8007072 <_Z23getFont_comicbd_20_4bppv+0x56>
 800702e:	4628      	mov	r0, r5
 8007030:	f022 fe5c 	bl	8029cec <__cxa_guard_acquire>
 8007034:	b1e8      	cbz	r0, 8007072 <_Z23getFont_comicbd_20_4bppv+0x56>
 8007036:	233f      	movs	r3, #63	@ 0x3f
 8007038:	9309      	str	r3, [sp, #36]	@ 0x24
 800703a:	4b10      	ldr	r3, [pc, #64]	@ (800707c <_Z23getFont_comicbd_20_4bppv+0x60>)
 800703c:	9308      	str	r3, [sp, #32]
 800703e:	4b10      	ldr	r3, [pc, #64]	@ (8007080 <_Z23getFont_comicbd_20_4bppv+0x64>)
 8007040:	4910      	ldr	r1, [pc, #64]	@ (8007084 <_Z23getFont_comicbd_20_4bppv+0x68>)
 8007042:	4811      	ldr	r0, [pc, #68]	@ (8007088 <_Z23getFont_comicbd_20_4bppv+0x6c>)
 8007044:	940a      	str	r4, [sp, #40]	@ 0x28
 8007046:	2201      	movs	r2, #1
 8007048:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800704c:	2304      	movs	r3, #4
 800704e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007052:	2314      	movs	r3, #20
 8007054:	9300      	str	r3, [sp, #0]
 8007056:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800705a:	2315      	movs	r3, #21
 800705c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007060:	9405      	str	r4, [sp, #20]
 8007062:	f7fd ff09 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007066:	4809      	ldr	r0, [pc, #36]	@ (800708c <_Z23getFont_comicbd_20_4bppv+0x70>)
 8007068:	f023 fe9a 	bl	802ada0 <atexit>
 800706c:	4628      	mov	r0, r5
 800706e:	f022 fe49 	bl	8029d04 <__cxa_guard_release>
    return comicbd_20_4bpp;
}
 8007072:	4805      	ldr	r0, [pc, #20]	@ (8007088 <_Z23getFont_comicbd_20_4bppv+0x6c>)
 8007074:	b00f      	add	sp, #60	@ 0x3c
 8007076:	bd30      	pop	{r4, r5, pc}
 8007078:	200030d8 	.word	0x200030d8
 800707c:	080319d4 	.word	0x080319d4
 8007080:	080319f0 	.word	0x080319f0
 8007084:	080316ec 	.word	0x080316ec
 8007088:	200030dc 	.word	0x200030dc
 800708c:	08007019 	.word	0x08007019

08007090 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicbd_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicbd_28_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_28_4bpp()
{
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 8007090:	4770      	bx	lr
	...

08007094 <_Z23getFont_comicbd_28_4bppv>:
{
 8007094:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 8007096:	4d17      	ldr	r5, [pc, #92]	@ (80070f4 <_Z23getFont_comicbd_28_4bppv+0x60>)
 8007098:	682c      	ldr	r4, [r5, #0]
 800709a:	f014 0401 	ands.w	r4, r4, #1
{
 800709e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicbd_28_4bpp(glyphs_comicbd_28_4bpp, 11, 29, 28, 0, 0, 4, 1, 0, 1, unicodes_comicbd_28_4bpp, kerning_comicbd_28_4bpp, 63, 0, 0, 0);
 80070a0:	f3bf 8f5b 	dmb	ish
 80070a4:	d122      	bne.n	80070ec <_Z23getFont_comicbd_28_4bppv+0x58>
 80070a6:	4628      	mov	r0, r5
 80070a8:	f022 fe20 	bl	8029cec <__cxa_guard_acquire>
 80070ac:	b1f0      	cbz	r0, 80070ec <_Z23getFont_comicbd_28_4bppv+0x58>
 80070ae:	233f      	movs	r3, #63	@ 0x3f
 80070b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80070b2:	4b11      	ldr	r3, [pc, #68]	@ (80070f8 <_Z23getFont_comicbd_28_4bppv+0x64>)
 80070b4:	9308      	str	r3, [sp, #32]
 80070b6:	4b11      	ldr	r3, [pc, #68]	@ (80070fc <_Z23getFont_comicbd_28_4bppv+0x68>)
 80070b8:	9307      	str	r3, [sp, #28]
 80070ba:	2301      	movs	r3, #1
 80070bc:	e9cd 4305 	strd	r4, r3, [sp, #20]
 80070c0:	9304      	str	r3, [sp, #16]
 80070c2:	2304      	movs	r3, #4
 80070c4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80070c8:	231c      	movs	r3, #28
 80070ca:	490d      	ldr	r1, [pc, #52]	@ (8007100 <_Z23getFont_comicbd_28_4bppv+0x6c>)
 80070cc:	9300      	str	r3, [sp, #0]
 80070ce:	220b      	movs	r2, #11
 80070d0:	231d      	movs	r3, #29
 80070d2:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80070d6:	480b      	ldr	r0, [pc, #44]	@ (8007104 <_Z23getFont_comicbd_28_4bppv+0x70>)
 80070d8:	940a      	str	r4, [sp, #40]	@ 0x28
 80070da:	9401      	str	r4, [sp, #4]
 80070dc:	f7fd fecc 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80070e0:	4809      	ldr	r0, [pc, #36]	@ (8007108 <_Z23getFont_comicbd_28_4bppv+0x74>)
 80070e2:	f023 fe5d 	bl	802ada0 <atexit>
 80070e6:	4628      	mov	r0, r5
 80070e8:	f022 fe0c 	bl	8029d04 <__cxa_guard_release>
    return comicbd_28_4bpp;
}
 80070ec:	4805      	ldr	r0, [pc, #20]	@ (8007104 <_Z23getFont_comicbd_28_4bppv+0x70>)
 80070ee:	b00f      	add	sp, #60	@ 0x3c
 80070f0:	bd30      	pop	{r4, r5, pc}
 80070f2:	bf00      	nop
 80070f4:	20003108 	.word	0x20003108
 80070f8:	080319d8 	.word	0x080319d8
 80070fc:	080319f4 	.word	0x080319f4
 8007100:	080316fc 	.word	0x080316fc
 8007104:	2000310c 	.word	0x2000310c
 8007108:	08007091 	.word	0x08007091

0800710c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_comicz_29_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_comicz_29_4bpp();

touchgfx::GeneratedFont& getFont_comicz_29_4bpp()
{
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 800710c:	4770      	bx	lr
	...

08007110 <_Z22getFont_comicz_29_4bppv>:
{
 8007110:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 8007112:	4d17      	ldr	r5, [pc, #92]	@ (8007170 <_Z22getFont_comicz_29_4bppv+0x60>)
 8007114:	682c      	ldr	r4, [r5, #0]
 8007116:	f014 0401 	ands.w	r4, r4, #1
{
 800711a:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont comicz_29_4bpp(glyphs_comicz_29_4bpp, 28, 37, 29, 0, 0, 4, 1, 1, 3, unicodes_comicz_29_4bpp, kerning_comicz_29_4bpp, 63, 0, 0, 0);
 800711c:	f3bf 8f5b 	dmb	ish
 8007120:	d123      	bne.n	800716a <_Z22getFont_comicz_29_4bppv+0x5a>
 8007122:	4628      	mov	r0, r5
 8007124:	f022 fde2 	bl	8029cec <__cxa_guard_acquire>
 8007128:	b1f8      	cbz	r0, 800716a <_Z22getFont_comicz_29_4bppv+0x5a>
 800712a:	233f      	movs	r3, #63	@ 0x3f
 800712c:	9309      	str	r3, [sp, #36]	@ 0x24
 800712e:	4b11      	ldr	r3, [pc, #68]	@ (8007174 <_Z22getFont_comicz_29_4bppv+0x64>)
 8007130:	9308      	str	r3, [sp, #32]
 8007132:	4b11      	ldr	r3, [pc, #68]	@ (8007178 <_Z22getFont_comicz_29_4bppv+0x68>)
 8007134:	9307      	str	r3, [sp, #28]
 8007136:	2203      	movs	r2, #3
 8007138:	2301      	movs	r3, #1
 800713a:	e9cd 3205 	strd	r3, r2, [sp, #20]
 800713e:	9304      	str	r3, [sp, #16]
 8007140:	2304      	movs	r3, #4
 8007142:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007146:	231d      	movs	r3, #29
 8007148:	490c      	ldr	r1, [pc, #48]	@ (800717c <_Z22getFont_comicz_29_4bppv+0x6c>)
 800714a:	9300      	str	r3, [sp, #0]
 800714c:	221c      	movs	r2, #28
 800714e:	2325      	movs	r3, #37	@ 0x25
 8007150:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007154:	480a      	ldr	r0, [pc, #40]	@ (8007180 <_Z22getFont_comicz_29_4bppv+0x70>)
 8007156:	940a      	str	r4, [sp, #40]	@ 0x28
 8007158:	9401      	str	r4, [sp, #4]
 800715a:	f7fd fe8d 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800715e:	4809      	ldr	r0, [pc, #36]	@ (8007184 <_Z22getFont_comicz_29_4bppv+0x74>)
 8007160:	f023 fe1e 	bl	802ada0 <atexit>
 8007164:	4628      	mov	r0, r5
 8007166:	f022 fdcd 	bl	8029d04 <__cxa_guard_release>
    return comicz_29_4bpp;
}
 800716a:	4805      	ldr	r0, [pc, #20]	@ (8007180 <_Z22getFont_comicz_29_4bppv+0x70>)
 800716c:	b00f      	add	sp, #60	@ 0x3c
 800716e:	bd30      	pop	{r4, r5, pc}
 8007170:	20003138 	.word	0x20003138
 8007174:	080319dc 	.word	0x080319dc
 8007178:	080319f8 	.word	0x080319f8
 800717c:	08031798 	.word	0x08031798
 8007180:	2000313c 	.word	0x2000313c
 8007184:	0800710d 	.word	0x0800710d

08007188 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_17_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_17_4bpp();

touchgfx::GeneratedFont& getFont_verdana_17_4bpp()
{
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 8007188:	4770      	bx	lr
	...

0800718c <_Z23getFont_verdana_17_4bppv>:
{
 800718c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 800718e:	4d16      	ldr	r5, [pc, #88]	@ (80071e8 <_Z23getFont_verdana_17_4bppv+0x5c>)
 8007190:	682c      	ldr	r4, [r5, #0]
 8007192:	f014 0401 	ands.w	r4, r4, #1
{
 8007196:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_17_4bpp(glyphs_verdana_17_4bpp, 11, 17, 17, 0, 0, 4, 1, 0, 0, unicodes_verdana_17_4bpp, kerning_verdana_17_4bpp, 63, 0, 0, 0);
 8007198:	f3bf 8f5b 	dmb	ish
 800719c:	d121      	bne.n	80071e2 <_Z23getFont_verdana_17_4bppv+0x56>
 800719e:	4628      	mov	r0, r5
 80071a0:	f022 fda4 	bl	8029cec <__cxa_guard_acquire>
 80071a4:	b1e8      	cbz	r0, 80071e2 <_Z23getFont_verdana_17_4bppv+0x56>
 80071a6:	233f      	movs	r3, #63	@ 0x3f
 80071a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80071aa:	4b10      	ldr	r3, [pc, #64]	@ (80071ec <_Z23getFont_verdana_17_4bppv+0x60>)
 80071ac:	9308      	str	r3, [sp, #32]
 80071ae:	4b10      	ldr	r3, [pc, #64]	@ (80071f0 <_Z23getFont_verdana_17_4bppv+0x64>)
 80071b0:	4910      	ldr	r1, [pc, #64]	@ (80071f4 <_Z23getFont_verdana_17_4bppv+0x68>)
 80071b2:	4811      	ldr	r0, [pc, #68]	@ (80071f8 <_Z23getFont_verdana_17_4bppv+0x6c>)
 80071b4:	940a      	str	r4, [sp, #40]	@ 0x28
 80071b6:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80071ba:	2201      	movs	r2, #1
 80071bc:	2304      	movs	r3, #4
 80071be:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80071c2:	2311      	movs	r3, #17
 80071c4:	9300      	str	r3, [sp, #0]
 80071c6:	220b      	movs	r2, #11
 80071c8:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80071cc:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80071d0:	9405      	str	r4, [sp, #20]
 80071d2:	f7fd fe51 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80071d6:	4809      	ldr	r0, [pc, #36]	@ (80071fc <_Z23getFont_verdana_17_4bppv+0x70>)
 80071d8:	f023 fde2 	bl	802ada0 <atexit>
 80071dc:	4628      	mov	r0, r5
 80071de:	f022 fd91 	bl	8029d04 <__cxa_guard_release>
    return verdana_17_4bpp;
}
 80071e2:	4805      	ldr	r0, [pc, #20]	@ (80071f8 <_Z23getFont_verdana_17_4bppv+0x6c>)
 80071e4:	b00f      	add	sp, #60	@ 0x3c
 80071e6:	bd30      	pop	{r4, r5, pc}
 80071e8:	20003168 	.word	0x20003168
 80071ec:	080319e0 	.word	0x080319e0
 80071f0:	080319fc 	.word	0x080319fc
 80071f4:	08031920 	.word	0x08031920
 80071f8:	2000316c 	.word	0x2000316c
 80071fc:	08007189 	.word	0x08007189

08007200 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007200:	4770      	bx	lr
	...

08007204 <_Z23getFont_verdana_20_4bppv>:
{
 8007204:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007206:	4d16      	ldr	r5, [pc, #88]	@ (8007260 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8007208:	682c      	ldr	r4, [r5, #0]
 800720a:	f014 0401 	ands.w	r4, r4, #1
{
 800720e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007210:	f3bf 8f5b 	dmb	ish
 8007214:	d120      	bne.n	8007258 <_Z23getFont_verdana_20_4bppv+0x54>
 8007216:	4628      	mov	r0, r5
 8007218:	f022 fd68 	bl	8029cec <__cxa_guard_acquire>
 800721c:	b1e0      	cbz	r0, 8007258 <_Z23getFont_verdana_20_4bppv+0x54>
 800721e:	233f      	movs	r3, #63	@ 0x3f
 8007220:	9309      	str	r3, [sp, #36]	@ 0x24
 8007222:	4b10      	ldr	r3, [pc, #64]	@ (8007264 <_Z23getFont_verdana_20_4bppv+0x60>)
 8007224:	9308      	str	r3, [sp, #32]
 8007226:	4b10      	ldr	r3, [pc, #64]	@ (8007268 <_Z23getFont_verdana_20_4bppv+0x64>)
 8007228:	4910      	ldr	r1, [pc, #64]	@ (800726c <_Z23getFont_verdana_20_4bppv+0x68>)
 800722a:	4811      	ldr	r0, [pc, #68]	@ (8007270 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800722c:	940a      	str	r4, [sp, #40]	@ 0x28
 800722e:	2201      	movs	r2, #1
 8007230:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007234:	2304      	movs	r3, #4
 8007236:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800723a:	2314      	movs	r3, #20
 800723c:	9300      	str	r3, [sp, #0]
 800723e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007242:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007246:	9405      	str	r4, [sp, #20]
 8007248:	f7fd fe16 	bl	8004e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800724c:	4809      	ldr	r0, [pc, #36]	@ (8007274 <_Z23getFont_verdana_20_4bppv+0x70>)
 800724e:	f023 fda7 	bl	802ada0 <atexit>
 8007252:	4628      	mov	r0, r5
 8007254:	f022 fd56 	bl	8029d04 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8007258:	4805      	ldr	r0, [pc, #20]	@ (8007270 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800725a:	b00f      	add	sp, #60	@ 0x3c
 800725c:	bd30      	pop	{r4, r5, pc}
 800725e:	bf00      	nop
 8007260:	20003198 	.word	0x20003198
 8007264:	080319e4 	.word	0x080319e4
 8007268:	08031a00 	.word	0x08031a00
 800726c:	080319bc 	.word	0x080319bc
 8007270:	2000319c 	.word	0x2000319c
 8007274:	08007201 	.word	0x08007201

08007278 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8007278:	2000      	movs	r0, #0
 800727a:	4770      	bx	lr

0800727c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800727c:	2000      	movs	r0, #0
 800727e:	4770      	bx	lr

08007280 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007280:	b40e      	push	{r1, r2, r3}
 8007282:	b503      	push	{r0, r1, lr}
 8007284:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007286:	2100      	movs	r1, #0
{
 8007288:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800728c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800728e:	f010 ff85 	bl	801819c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007292:	b002      	add	sp, #8
 8007294:	f85d eb04 	ldr.w	lr, [sp], #4
 8007298:	b003      	add	sp, #12
 800729a:	4770      	bx	lr

0800729c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800729c:	b40c      	push	{r2, r3}
 800729e:	b507      	push	{r0, r1, r2, lr}
 80072a0:	ab04      	add	r3, sp, #16
 80072a2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80072a6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80072a8:	f010 ff78 	bl	801819c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80072ac:	b003      	add	sp, #12
 80072ae:	f85d eb04 	ldr.w	lr, [sp], #4
 80072b2:	b002      	add	sp, #8
 80072b4:	4770      	bx	lr
	...

080072b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80072b8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 80072ba:	b510      	push	{r4, lr}
 80072bc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80072be:	b373      	cbz	r3, 800731e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80072c0:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 80072c2:	b92b      	cbnz	r3, 80072d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80072c4:	4b18      	ldr	r3, [pc, #96]	@ (8007328 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80072c6:	4a19      	ldr	r2, [pc, #100]	@ (800732c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80072c8:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80072ca:	4819      	ldr	r0, [pc, #100]	@ (8007330 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80072cc:	f023 fd4a 	bl	802ad64 <__assert_func>
            return buffer[pos];
 80072d0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80072d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80072d6:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 80072d8:	b30b      	cbz	r3, 800731e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80072da:	f012 fe5a 	bl	8019f92 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80072de:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80072e0:	2b01      	cmp	r3, #1
 80072e2:	d803      	bhi.n	80072ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80072e4:	4b13      	ldr	r3, [pc, #76]	@ (8007334 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80072e6:	4a14      	ldr	r2, [pc, #80]	@ (8007338 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80072e8:	21cb      	movs	r1, #203	@ 0xcb
 80072ea:	e7ee      	b.n	80072ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80072ec:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80072ee:	1c53      	adds	r3, r2, #1
 80072f0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80072f2:	2b09      	cmp	r3, #9
 80072f4:	4619      	mov	r1, r3
 80072f6:	bf88      	it	hi
 80072f8:	f1a3 010a 	subhi.w	r1, r3, #10
 80072fc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007300:	f640 103f 	movw	r0, #2367	@ 0x93f
 8007304:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8007306:	4281      	cmp	r1, r0
 8007308:	d109      	bne.n	800731e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800730a:	2b0a      	cmp	r3, #10
 800730c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007310:	bf28      	it	cs
 8007312:	2300      	movcs	r3, #0
 8007314:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007318:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 800731a:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 800731c:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800731e:	4620      	mov	r0, r4
}
 8007320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007324:	f012 bd38 	b.w	8019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007328:	0802cea1 	.word	0x0802cea1
 800732c:	0802ceaa 	.word	0x0802ceaa
 8007330:	0802cf55 	.word	0x0802cf55
 8007334:	0802cf9f 	.word	0x0802cf9f
 8007338:	0802cfad 	.word	0x0802cfad

0800733c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800733c:	f012 bcf3 	b.w	8019d26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007340 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007340:	b510      	push	{r4, lr}
 8007342:	b086      	sub	sp, #24
 8007344:	ac02      	add	r4, sp, #8
 8007346:	e884 0006 	stmia.w	r4, {r1, r2}
 800734a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800734c:	ab0a      	add	r3, sp, #40	@ 0x28
 800734e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007350:	9301      	str	r3, [sp, #4]
 8007352:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007354:	9300      	str	r3, [sp, #0]
 8007356:	4621      	mov	r1, r4
 8007358:	9b08      	ldr	r3, [sp, #32]
 800735a:	f00f fb49 	bl	80169f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800735e:	b006      	add	sp, #24
 8007360:	bd10      	pop	{r4, pc}
	...

08007364 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007364:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007366:	bb18      	cbnz	r0, 80073b0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007368:	4b12      	ldr	r3, [pc, #72]	@ (80073b4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800736a:	4813      	ldr	r0, [pc, #76]	@ (80073b8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800736c:	681c      	ldr	r4, [r3, #0]
 800736e:	4913      	ldr	r1, [pc, #76]	@ (80073bc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007370:	b1b4      	cbz	r4, 80073a0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007372:	6822      	ldr	r2, [r4, #0]
 8007374:	4422      	add	r2, r4
 8007376:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007378:	6862      	ldr	r2, [r4, #4]
 800737a:	4422      	add	r2, r4
 800737c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800737e:	68a2      	ldr	r2, [r4, #8]
 8007380:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007382:	4b0f      	ldr	r3, [pc, #60]	@ (80073c0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007384:	2200      	movs	r2, #0
 8007386:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007388:	f000 f838 	bl	80073fc <_ZN17TypedTextDatabase8getFontsEv>
 800738c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800738e:	f000 f833 	bl	80073f8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007392:	4b0c      	ldr	r3, [pc, #48]	@ (80073c4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007394:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007396:	4b0c      	ldr	r3, [pc, #48]	@ (80073c8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007398:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800739a:	4b0c      	ldr	r3, [pc, #48]	@ (80073cc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800739c:	8018      	strh	r0, [r3, #0]
    }
}
 800739e:	e007      	b.n	80073b0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80073a0:	4b0b      	ldr	r3, [pc, #44]	@ (80073d0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80073a2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80073a4:	4b0b      	ldr	r3, [pc, #44]	@ (80073d4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80073a6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80073a8:	4b0b      	ldr	r3, [pc, #44]	@ (80073d8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80073aa:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80073ac:	2c00      	cmp	r4, #0
 80073ae:	d1e8      	bne.n	8007382 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80073b0:	bd38      	pop	{r3, r4, r5, pc}
 80073b2:	bf00      	nop
 80073b4:	200031d4 	.word	0x200031d4
 80073b8:	200031cc 	.word	0x200031cc
 80073bc:	200031c8 	.word	0x200031c8
 80073c0:	200031d0 	.word	0x200031d0
 80073c4:	20013fb8 	.word	0x20013fb8
 80073c8:	20013fc0 	.word	0x20013fc0
 80073cc:	20013fbc 	.word	0x20013fbc
 80073d0:	08031aa8 	.word	0x08031aa8
 80073d4:	08031a04 	.word	0x08031a04
 80073d8:	08031b3c 	.word	0x08031b3c

080073dc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80073dc:	4b04      	ldr	r3, [pc, #16]	@ (80073f0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80073e4:	4b03      	ldr	r3, [pc, #12]	@ (80073f4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80073e6:	681b      	ldr	r3, [r3, #0]
}
 80073e8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80073ec:	4770      	bx	lr
 80073ee:	bf00      	nop
 80073f0:	200031c8 	.word	0x200031c8
 80073f4:	200031cc 	.word	0x200031cc

080073f8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80073f8:	2029      	movs	r0, #41	@ 0x29
 80073fa:	4770      	bx	lr

080073fc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80073fc:	4800      	ldr	r0, [pc, #0]	@ (8007400 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80073fe:	4770      	bx	lr
 8007400:	200031d8 	.word	0x200031d8

08007404 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_comicbd_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007404:	b510      	push	{r4, lr}
    &(getFont_verdana_17_4bpp()),
 8007406:	f7ff fec1 	bl	800718c <_Z23getFont_verdana_17_4bppv>
};
 800740a:	4c0a      	ldr	r4, [pc, #40]	@ (8007434 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 800740c:	6020      	str	r0, [r4, #0]
    &(getFont_comicz_29_4bpp()),
 800740e:	f7ff fe7f 	bl	8007110 <_Z22getFont_comicz_29_4bppv>
};
 8007412:	6060      	str	r0, [r4, #4]
    &(getFont_comicbd_18_4bpp()),
 8007414:	f7ff fdc4 	bl	8006fa0 <_Z23getFont_comicbd_18_4bppv>
};
 8007418:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_20_4bpp()),
 800741a:	f7ff fdff 	bl	800701c <_Z23getFont_comicbd_20_4bppv>
};
 800741e:	60e0      	str	r0, [r4, #12]
    &(getFont_comicbd_28_4bpp()),
 8007420:	f7ff fe38 	bl	8007094 <_Z23getFont_comicbd_28_4bppv>
};
 8007424:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_20_4bpp()),
 8007426:	f7ff feed 	bl	8007204 <_Z23getFont_verdana_20_4bppv>
};
 800742a:	6160      	str	r0, [r4, #20]
    &(getFont_comicbd_15_4bpp())
 800742c:	f7ff fd7a 	bl	8006f24 <_Z23getFont_comicbd_15_4bppv>
};
 8007430:	61a0      	str	r0, [r4, #24]
} // namespace TypedTextDatabase
 8007432:	bd10      	pop	{r4, pc}
 8007434:	200031d8 	.word	0x200031d8

08007438 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8007438:	b510      	push	{r4, lr}
    pointArray = 0;
 800743a:	2400      	movs	r4, #0
 800743c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 800743e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8007440:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8007442:	601c      	str	r4, [r3, #0]
}
 8007444:	bd10      	pop	{r4, pc}

08007446 <_ZN24EasyReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~EasyReadyScreenPresenter() {}
 8007446:	4770      	bx	lr

08007448 <_ZThn4_N24EasyReadyScreenPresenterD1Ev>:
 8007448:	3804      	subs	r0, #4
 800744a:	4770      	bx	lr

0800744c <_ZN24EasyReadyScreenPresenter10deactivateEv>:
}

void EasyReadyScreenPresenter::activate()
{

}
 800744c:	4770      	bx	lr

0800744e <_ZN24EasyReadyScreenPresenterD0Ev>:
 800744e:	b510      	push	{r4, lr}
 8007450:	2110      	movs	r1, #16
 8007452:	4604      	mov	r4, r0
 8007454:	f022 fc48 	bl	8029ce8 <_ZdlPvj>
 8007458:	4620      	mov	r0, r4
 800745a:	bd10      	pop	{r4, pc}

0800745c <_ZThn4_N24EasyReadyScreenPresenterD0Ev>:
 800745c:	f1a0 0004 	sub.w	r0, r0, #4
 8007460:	e7f5      	b.n	800744e <_ZN24EasyReadyScreenPresenterD0Ev>
	...

08007464 <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView>:
    ModelListener() : model(0) {}
 8007464:	2200      	movs	r2, #0
 8007466:	6082      	str	r2, [r0, #8]
    : view(v)
 8007468:	4a02      	ldr	r2, [pc, #8]	@ (8007474 <_ZN24EasyReadyScreenPresenterC1ER19EasyReadyScreenView+0x10>)
 800746a:	6002      	str	r2, [r0, #0]
 800746c:	3218      	adds	r2, #24
 800746e:	6042      	str	r2, [r0, #4]
 8007470:	60c1      	str	r1, [r0, #12]
}
 8007472:	4770      	bx	lr
 8007474:	0802d9cc 	.word	0x0802d9cc

08007478 <_ZN19EasyReadyScreenView14tearDownScreenEv>:
}

void EasyReadyScreenView::tearDownScreen()
{
    EasyReadyScreenViewBase::tearDownScreen();
}
 8007478:	4770      	bx	lr
	...

0800747c <_ZN19EasyReadyScreenViewD1Ev>:

class EasyReadyScreenView : public EasyReadyScreenViewBase
{
public:
    EasyReadyScreenView();
    virtual ~EasyReadyScreenView() {}
 800747c:	b510      	push	{r4, lr}
 800747e:	4b03      	ldr	r3, [pc, #12]	@ (800748c <_ZN19EasyReadyScreenViewD1Ev+0x10>)
 8007480:	6003      	str	r3, [r0, #0]
 8007482:	4604      	mov	r4, r0
 8007484:	f7fb fdb4 	bl	8002ff0 <_ZN23EasyReadyScreenViewBaseD1Ev>
 8007488:	4620      	mov	r0, r4
 800748a:	bd10      	pop	{r4, pc}
 800748c:	0802d9f4 	.word	0x0802d9f4

08007490 <_ZN19EasyReadyScreenViewD0Ev>:
 8007490:	b510      	push	{r4, lr}
 8007492:	4604      	mov	r4, r0
 8007494:	f7ff fff2 	bl	800747c <_ZN19EasyReadyScreenViewD1Ev>
 8007498:	4620      	mov	r0, r4
 800749a:	f241 51bc 	movw	r1, #5564	@ 0x15bc
 800749e:	f022 fc23 	bl	8029ce8 <_ZdlPvj>
 80074a2:	4620      	mov	r0, r4
 80074a4:	bd10      	pop	{r4, pc}

080074a6 <_ZN19EasyReadyScreenView15handleTickEventEv>:
void EasyReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 80074a6:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 80074aa:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 80074ac:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
 80074b0:	2900      	cmp	r1, #0
 80074b2:	dd07      	ble.n	80074c4 <_ZN19EasyReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 80074b4:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 80074b6:	3901      	subs	r1, #1

	    }else{
	    	application().gotoEasyScreenScreenNoTransition();
	    }

}
 80074b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 80074bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 80074be:	f8c2 15b8 	str.w	r1, [r2, #1464]	@ 0x5b8
	        updateCounter(tickCounter);
 80074c2:	4718      	bx	r3
 80074c4:	f00f fef6 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
}
 80074c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoEasyScreenScreenNoTransition();
 80074cc:	f7fc be84 	b.w	80041d8 <_ZN23FrontendApplicationBase32gotoEasyScreenScreenNoTransitionEv>

080074d0 <_ZN19EasyReadyScreenViewC1Ev>:
EasyReadyScreenView::EasyReadyScreenView()
 80074d0:	b510      	push	{r4, lr}
 80074d2:	4604      	mov	r4, r0
 80074d4:	f7fb fe5a 	bl	800318c <_ZN23EasyReadyScreenViewBaseC1Ev>
 80074d8:	4b04      	ldr	r3, [pc, #16]	@ (80074ec <_ZN19EasyReadyScreenViewC1Ev+0x1c>)
 80074da:	6023      	str	r3, [r4, #0]
 80074dc:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80074e0:	22b4      	movs	r2, #180	@ 0xb4
 80074e2:	f8c3 25b8 	str.w	r2, [r3, #1464]	@ 0x5b8
}
 80074e6:	4620      	mov	r0, r4
 80074e8:	bd10      	pop	{r4, pc}
 80074ea:	bf00      	nop
 80074ec:	0802d9f4 	.word	0x0802d9f4

080074f0 <_ZN19EasyReadyScreenView11setupScreenEv>:
{
 80074f0:	b510      	push	{r4, lr}
 80074f2:	4604      	mov	r4, r0
    EasyReadyScreenViewBase::setupScreen();
 80074f4:	f7fb fd5c 	bl	8002fb0 <_ZN23EasyReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 80074f8:	6823      	ldr	r3, [r4, #0]
 80074fa:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 80074fe:	4620      	mov	r0, r4
 8007500:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007502:	f8d2 15b8 	ldr.w	r1, [r2, #1464]	@ 0x5b8
}
 8007506:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 800750a:	4718      	bx	r3

0800750c <_ZN19EasyReadyScreenView13updateCounterEi>:
void EasyReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 800750c:	2978      	cmp	r1, #120	@ 0x78
{
 800750e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007510:	4605      	mov	r5, r0
	    if (value > 120)
 8007512:	dc23      	bgt.n	800755c <_ZN19EasyReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8007514:	293c      	cmp	r1, #60	@ 0x3c
 8007516:	dc23      	bgt.n	8007560 <_ZN19EasyReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8007518:	2900      	cmp	r1, #0
 800751a:	bfd4      	ite	le
 800751c:	2400      	movle	r4, #0
 800751e:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8007520:	f505 7733 	add.w	r7, r5, #716	@ 0x2cc
 8007524:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007526:	f505 7638 	add.w	r6, r5, #736	@ 0x2e0
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 800752a:	4a0e      	ldr	r2, [pc, #56]	@ (8007564 <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 800752c:	210a      	movs	r1, #10
 800752e:	4638      	mov	r0, r7
 8007530:	f013 fad8 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8007534:	4623      	mov	r3, r4
 8007536:	4a0b      	ldr	r2, [pc, #44]	@ (8007564 <_ZN19EasyReadyScreenView13updateCounterEi+0x58>)
 8007538:	210a      	movs	r1, #10
 800753a:	4630      	mov	r0, r6
 800753c:	f013 fad2 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8007540:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 8007544:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 8007548:	f8c5 62c8 	str.w	r6, [r5, #712]	@ 0x2c8
 800754c:	f010 ff50 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8007550:	f505 7020 	add.w	r0, r5, #640	@ 0x280
}
 8007554:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8007558:	f010 bf4a 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 800755c:	2403      	movs	r4, #3
 800755e:	e7df      	b.n	8007520 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8007560:	2402      	movs	r4, #2
 8007562:	e7dd      	b.n	8007520 <_ZN19EasyReadyScreenView13updateCounterEi+0x14>
 8007564:	0802d07f 	.word	0x0802d07f

08007568 <_ZN19EasyScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~EasyScreenPresenter() {}
 8007568:	4770      	bx	lr

0800756a <_ZThn4_N19EasyScreenPresenterD1Ev>:
 800756a:	3804      	subs	r0, #4
 800756c:	4770      	bx	lr

0800756e <_ZN19EasyScreenPresenter10deactivateEv>:
}

void EasyScreenPresenter::deactivate()
{

}
 800756e:	4770      	bx	lr

08007570 <_ZN19EasyScreenPresenterD0Ev>:
 8007570:	b510      	push	{r4, lr}
 8007572:	2110      	movs	r1, #16
 8007574:	4604      	mov	r4, r0
 8007576:	f022 fbb7 	bl	8029ce8 <_ZdlPvj>
 800757a:	4620      	mov	r0, r4
 800757c:	bd10      	pop	{r4, pc}

0800757e <_ZThn4_N19EasyScreenPresenterD0Ev>:
 800757e:	f1a0 0004 	sub.w	r0, r0, #4
 8007582:	e7f5      	b.n	8007570 <_ZN19EasyScreenPresenterD0Ev>

08007584 <_ZN19EasyScreenPresenter8activateEv>:
	model->resetGame();
 8007584:	6880      	ldr	r0, [r0, #8]
 8007586:	f003 bb8b 	b.w	800aca0 <_ZN5Model9resetGameEv>
	...

0800758c <_ZN19EasyScreenPresenterC1ER14EasyScreenView>:
 800758c:	2200      	movs	r2, #0
 800758e:	6082      	str	r2, [r0, #8]
    : view(v)
 8007590:	4a02      	ldr	r2, [pc, #8]	@ (800759c <_ZN19EasyScreenPresenterC1ER14EasyScreenView+0x10>)
 8007592:	6002      	str	r2, [r0, #0]
 8007594:	3218      	adds	r2, #24
 8007596:	6042      	str	r2, [r0, #4]
 8007598:	60c1      	str	r1, [r0, #12]
}
 800759a:	4770      	bx	lr
 800759c:	0802da2c 	.word	0x0802da2c

080075a0 <_ZN19EasyScreenPresenter13goToEndScreenEi>:
void  EasyScreenPresenter::handleTickEvent()
{

}
void EasyScreenPresenter::goToEndScreen(int winner)
{
 80075a0:	b508      	push	{r3, lr}
    // Gửi thông tin người chiến thắng đến Model
    model->setWinner(winner);
 80075a2:	6880      	ldr	r0, [r0, #8]
 80075a4:	f003 fb68 	bl	800ac78 <_ZN5Model9setWinnerEi>
    // Yêu cầu chuyển đến EndScreen
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 80075a8:	f00f fe84 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
}
 80075ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 80075b0:	f7fc be32 	b.w	8004218 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

080075b4 <_ZN14EasyScreenView14tearDownScreenEv>:

// Phương thức dọn dẹp khi thoát màn hình
void EasyScreenView::tearDownScreen()
{
    EasyScreenViewBase::tearDownScreen();
}
 80075b4:	4770      	bx	lr
	...

080075b8 <_ZN14EasyScreenViewD1Ev>:

class EasyScreenView : public EasyScreenViewBase
{
public:
    EasyScreenView();
    virtual ~EasyScreenView() {}
 80075b8:	b510      	push	{r4, lr}
 80075ba:	4b03      	ldr	r3, [pc, #12]	@ (80075c8 <_ZN14EasyScreenViewD1Ev+0x10>)
 80075bc:	6003      	str	r3, [r0, #0]
 80075be:	4604      	mov	r4, r0
 80075c0:	f7fc f830 	bl	8003624 <_ZN18EasyScreenViewBaseD1Ev>
 80075c4:	4620      	mov	r0, r4
 80075c6:	bd10      	pop	{r4, pc}
 80075c8:	0802da54 	.word	0x0802da54

080075cc <_ZN14EasyScreenViewD0Ev>:
 80075cc:	b510      	push	{r4, lr}
 80075ce:	4604      	mov	r4, r0
 80075d0:	f7ff fff2 	bl	80075b8 <_ZN14EasyScreenViewD1Ev>
 80075d4:	4620      	mov	r0, r4
 80075d6:	f241 61fc 	movw	r1, #5884	@ 0x16fc
 80075da:	f022 fb85 	bl	8029ce8 <_ZdlPvj>
 80075de:	4620      	mov	r0, r4
 80075e0:	bd10      	pop	{r4, pc}
	...

080075e4 <_ZN14EasyScreenViewC1Ev>:
EasyScreenView::EasyScreenView() : ballX(160), ballY(80), ballVelX(1.4f), ballVelY(1.4f),
 80075e4:	b510      	push	{r4, lr}
 80075e6:	4604      	mov	r4, r0
                                   lineAngle1(0.0f), lineAngle2(0.0f)
 80075e8:	f7fc f836 	bl	8003658 <_ZN18EasyScreenViewBaseC1Ev>
 80075ec:	4b19      	ldr	r3, [pc, #100]	@ (8007654 <_ZN14EasyScreenViewC1Ev+0x70>)
 80075ee:	6023      	str	r3, [r4, #0]
EasyScreenView::EasyScreenView() : ballX(160), ballY(80), ballVelX(1.4f), ballVelY(1.4f),
 80075f0:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80075f4:	f203 62bc 	addw	r2, r3, #1724	@ 0x6bc
 80075f8:	4917      	ldr	r1, [pc, #92]	@ (8007658 <_ZN14EasyScreenViewC1Ev+0x74>)
 80075fa:	6011      	str	r1, [r2, #0]
 80075fc:	f504 52b6 	add.w	r2, r4, #5824	@ 0x16c0
 8007600:	4916      	ldr	r1, [pc, #88]	@ (800765c <_ZN14EasyScreenViewC1Ev+0x78>)
 8007602:	6011      	str	r1, [r2, #0]
 8007604:	f203 61c4 	addw	r1, r3, #1732	@ 0x6c4
 8007608:	4a15      	ldr	r2, [pc, #84]	@ (8007660 <_ZN14EasyScreenViewC1Ev+0x7c>)
 800760a:	600a      	str	r2, [r1, #0]
 800760c:	f503 61d9 	add.w	r1, r3, #1736	@ 0x6c8
}
 8007610:	4620      	mov	r0, r4
EasyScreenView::EasyScreenView() : ballX(160), ballY(80), ballVelX(1.4f), ballVelY(1.4f),
 8007612:	600a      	str	r2, [r1, #0]
                                   waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8007614:	2200      	movs	r2, #0
                                   desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),
 8007616:	f203 61ec 	addw	r1, r3, #1772	@ 0x6ec
                                   waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 800761a:	f883 26cc 	strb.w	r2, [r3, #1740]	@ 0x6cc
 800761e:	f8c3 26d0 	str.w	r2, [r3, #1744]	@ 0x6d0
 8007622:	f8c3 26d4 	str.w	r2, [r3, #1748]	@ 0x6d4
                                   score1(0), score2(0), gameOver(false),
 8007626:	f8c3 26d8 	str.w	r2, [r3, #1752]	@ 0x6d8
 800762a:	f8c3 26dc 	str.w	r2, [r3, #1756]	@ 0x6dc
 800762e:	f883 26e0 	strb.w	r2, [r3, #1760]	@ 0x6e0
                                   buzzerBeepCounter(0), buzzerBeepState(false),
 8007632:	f8c3 26e4 	str.w	r2, [r3, #1764]	@ 0x6e4
 8007636:	f883 26e8 	strb.w	r2, [r3, #1768]	@ 0x6e8
                                   desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),
 800763a:	2200      	movs	r2, #0
 800763c:	600a      	str	r2, [r1, #0]
 800763e:	f503 61de 	add.w	r1, r3, #1776	@ 0x6f0
 8007642:	600a      	str	r2, [r1, #0]
                                   lineAngle1(0.0f), lineAngle2(0.0f)
 8007644:	f203 61f4 	addw	r1, r3, #1780	@ 0x6f4
 8007648:	f503 63df 	add.w	r3, r3, #1784	@ 0x6f8
 800764c:	600a      	str	r2, [r1, #0]
 800764e:	601a      	str	r2, [r3, #0]
}
 8007650:	bd10      	pop	{r4, pc}
 8007652:	bf00      	nop
 8007654:	0802da54 	.word	0x0802da54
 8007658:	43200000 	.word	0x43200000
 800765c:	42a00000 	.word	0x42a00000
 8007660:	3fb33333 	.word	0x3fb33333

08007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007664:	0152      	lsls	r2, r2, #5
 8007666:	0149      	lsls	r1, r1, #5
 8007668:	f00c baa8 	b.w	8013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

0800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>:
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800766c:	eef0 7a60 	vmov.f32	s15, s1
 8007670:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8007674:	ee17 2a90 	vmov	r2, s15
 8007678:	eef0 7a40 	vmov.f32	s15, s0
 800767c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8007680:	ee17 1a90 	vmov	r1, s15
 8007684:	f00c baa5 	b.w	8013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08007688 <_ZN14EasyScreenView11setupScreenEv>:
{
 8007688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800768c:	4605      	mov	r5, r0
    score1 = 0;
 800768e:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
    ballX = 160;
 8007692:	f204 67bc 	addw	r7, r4, #1724	@ 0x6bc
    EasyScreenViewBase::setupScreen();
 8007696:	f7fb ffc3 	bl	8003620 <_ZN18EasyScreenViewBase11setupScreenEv>
    ballY = 120;
 800769a:	f505 58b6 	add.w	r8, r5, #5824	@ 0x16c0
    score1 = 0;
 800769e:	2300      	movs	r3, #0
    ballX = 160;
 80076a0:	4a34      	ldr	r2, [pc, #208]	@ (8007774 <_ZN14EasyScreenView11setupScreenEv+0xec>)
    score1 = 0;
 80076a2:	f8c4 36d8 	str.w	r3, [r4, #1752]	@ 0x6d8
    score2 = 0;
 80076a6:	f8c4 36dc 	str.w	r3, [r4, #1756]	@ 0x6dc
    gameOver = false;
 80076aa:	f884 36e0 	strb.w	r3, [r4, #1760]	@ 0x6e0
    ballVelX = 1.4f;
 80076ae:	f204 61c4 	addw	r1, r4, #1732	@ 0x6c4
    ballX = 160;
 80076b2:	603a      	str	r2, [r7, #0]
    ballY = 120;
 80076b4:	4a30      	ldr	r2, [pc, #192]	@ (8007778 <_ZN14EasyScreenView11setupScreenEv+0xf0>)
 80076b6:	f8c8 2000 	str.w	r2, [r8]
    ballVelX = 1.4f;
 80076ba:	4a30      	ldr	r2, [pc, #192]	@ (800777c <_ZN14EasyScreenView11setupScreenEv+0xf4>)
 80076bc:	600a      	str	r2, [r1, #0]
    ballVelY = 1.4f;
 80076be:	f504 61d9 	add.w	r1, r4, #1736	@ 0x6c8
    line1.invalidate();
 80076c2:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
    ballVelY = 1.4f;
 80076c6:	600a      	str	r2, [r1, #0]
    desiredBallVelY1 = 0.0f;
 80076c8:	f204 61ec 	addw	r1, r4, #1772	@ 0x6ec
 80076cc:	2200      	movs	r2, #0
    waitingForServe = false;
 80076ce:	f884 36cc 	strb.w	r3, [r4, #1740]	@ 0x6cc
    serveDelayTicks = 0;
 80076d2:	f8c4 36d0 	str.w	r3, [r4, #1744]	@ 0x6d0
    servingPlayer = 0;
 80076d6:	f8c4 36d4 	str.w	r3, [r4, #1748]	@ 0x6d4
    buzzerBeepCounter = 0;
 80076da:	f8c4 36e4 	str.w	r3, [r4, #1764]	@ 0x6e4
    buzzerBeepState = false;
 80076de:	f884 36e8 	strb.w	r3, [r4, #1768]	@ 0x6e8
    desiredBallVelY1 = 0.0f;
 80076e2:	600a      	str	r2, [r1, #0]
    desiredBallVelY2 = 0.0f;
 80076e4:	f504 61de 	add.w	r1, r4, #1776	@ 0x6f0
    ball.invalidate();
 80076e8:	f505 761c 	add.w	r6, r5, #624	@ 0x270
    desiredBallVelY2 = 0.0f;
 80076ec:	600a      	str	r2, [r1, #0]
    lineAngle1 = 0.0f;
 80076ee:	f204 61f4 	addw	r1, r4, #1780	@ 0x6f4
 80076f2:	600a      	str	r2, [r1, #0]
    lineAngle2 = 0.0f;
 80076f4:	f504 61df 	add.w	r1, r4, #1784	@ 0x6f8
 80076f8:	600a      	str	r2, [r1, #0]
        visible = vis;
 80076fa:	f885 32f1 	strb.w	r3, [r5, #753]	@ 0x2f1
 80076fe:	f885 3375 	strb.w	r3, [r5, #885]	@ 0x375
    line1.invalidate();
 8007702:	f00b ff81 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    line1_1.invalidate();
 8007706:	f505 7054 	add.w	r0, r5, #848	@ 0x350
 800770a:	f00b ff7d 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    ball.invalidate();
 800770e:	4630      	mov	r0, r6
 8007710:	f00b ff7a 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    ball.moveTo(ballX, ballY);
 8007714:	ed98 7a00 	vldr	s14, [r8]
 8007718:	edd7 7a00 	vldr	s15, [r7]
 800771c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007720:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007724:	ee17 3a10 	vmov	r3, s14
 8007728:	b21a      	sxth	r2, r3
 800772a:	ee17 3a90 	vmov	r3, s15
 800772e:	4630      	mov	r0, r6
 8007730:	b219      	sxth	r1, r3
 8007732:	f7fa faa8 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
    ball.invalidate();
 8007736:	4630      	mov	r0, r6
        Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 8007738:	4e11      	ldr	r6, [pc, #68]	@ (8007780 <_ZN14EasyScreenView11setupScreenEv+0xf8>)
    ball.invalidate();
 800773a:	f00b ff65 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 800773e:	f8d4 36d8 	ldr.w	r3, [r4, #1752]	@ 0x6d8
 8007742:	4632      	mov	r2, r6
 8007744:	210a      	movs	r1, #10
 8007746:	f505 707a 	add.w	r0, r5, #1000	@ 0x3e8
 800774a:	f013 f9cb 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        EasyScreenViewBase::score1.invalidate();
 800774e:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8007752:	f010 fe4d 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
        Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007756:	f8d4 36dc 	ldr.w	r3, [r4, #1756]	@ 0x6dc
 800775a:	4632      	mov	r2, r6
 800775c:	f505 7075 	add.w	r0, r5, #980	@ 0x3d4
 8007760:	210a      	movs	r1, #10
 8007762:	f013 f9bf 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        EasyScreenViewBase::score2.invalidate();
 8007766:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 800776a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        EasyScreenViewBase::score2.invalidate();
 800776e:	f010 be3f 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007772:	bf00      	nop
 8007774:	43200000 	.word	0x43200000
 8007778:	42f00000 	.word	0x42f00000
 800777c:	3fb33333 	.word	0x3fb33333
 8007780:	0802d07f 	.word	0x0802d07f
 8007784:	00000000 	.word	0x00000000

08007788 <_ZN14EasyScreenView15handleTickEventEv>:

// Phương thức xử lý sự kiện tick (gọi định kỳ, thường 60 FPS)
void EasyScreenView::handleTickEvent()
{
 8007788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    if (gameOver) {
 800778c:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 8007790:	ed2d 8b04 	vpush	{d8-d9}
    if (gameOver) {
 8007794:	f895 36e0 	ldrb.w	r3, [r5, #1760]	@ 0x6e0
{
 8007798:	b085      	sub	sp, #20
 800779a:	4604      	mov	r4, r0
    if (gameOver) {
 800779c:	b18b      	cbz	r3, 80077c2 <_ZN14EasyScreenView15handleTickEventEv+0x3a>
 800779e:	2300      	movs	r3, #0
 80077a0:	f880 32f1 	strb.w	r3, [r0, #753]	@ 0x2f1
 80077a4:	f880 3375 	strb.w	r3, [r0, #885]	@ 0x375
        line1.setVisible(false);
        line1_1.setVisible(false);
        line1.invalidate();
 80077a8:	f500 7033 	add.w	r0, r0, #716	@ 0x2cc
 80077ac:	f00b ff2c 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        line1_1.invalidate();
 80077b0:	f504 7054 	add.w	r0, r4, #848	@ 0x350
                       line1_1.invalidate();
        }
        ball.moveTo(ballX, ballY);
        ball.invalidate();
    }
}
 80077b4:	b005      	add	sp, #20
 80077b6:	ecbd 8b04 	vpop	{d8-d9}
 80077ba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        line1_1.invalidate();
 80077be:	f00b bf23 	b.w	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    if (buzzerBeepCounter > 0) {
 80077c2:	f8d5 36e4 	ldr.w	r3, [r5, #1764]	@ 0x6e4
 80077c6:	2b00      	cmp	r3, #0
 80077c8:	dd1b      	ble.n	8007802 <_ZN14EasyScreenView15handleTickEventEv+0x7a>
        if (buzzerBeepCounter % 6 == 0) {
 80077ca:	2206      	movs	r2, #6
 80077cc:	fb93 f1f2 	sdiv	r1, r3, r2
 80077d0:	fb02 3311 	mls	r3, r2, r1, r3
 80077d4:	b953      	cbnz	r3, 80077ec <_ZN14EasyScreenView15handleTickEventEv+0x64>
            buzzerBeepState = !buzzerBeepState;
 80077d6:	f895 26e8 	ldrb.w	r2, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80077da:	4813      	ldr	r0, [pc, #76]	@ (8007828 <_ZN14EasyScreenView15handleTickEventEv+0xa0>)
            buzzerBeepState = !buzzerBeepState;
 80077dc:	f082 0201 	eor.w	r2, r2, #1
 80077e0:	f885 26e8 	strb.w	r2, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 80077e4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80077e8:	f004 fa04 	bl	800bbf4 <HAL_GPIO_WritePin>
        buzzerBeepCounter--;
 80077ec:	f8d5 26e4 	ldr.w	r2, [r5, #1764]	@ 0x6e4
 80077f0:	3a01      	subs	r2, #1
 80077f2:	f8c5 26e4 	str.w	r2, [r5, #1764]	@ 0x6e4
        if (buzzerBeepCounter == 0) {
 80077f6:	b922      	cbnz	r2, 8007802 <_ZN14EasyScreenView15handleTickEventEv+0x7a>
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET);
 80077f8:	480b      	ldr	r0, [pc, #44]	@ (8007828 <_ZN14EasyScreenView15handleTickEventEv+0xa0>)
 80077fa:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80077fe:	f004 f9f9 	bl	800bbf4 <HAL_GPIO_WritePin>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8007802:	4f0a      	ldr	r7, [pc, #40]	@ (800782c <_ZN14EasyScreenView15handleTickEventEv+0xa4>)
 8007804:	e02b      	b.n	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
        switch (command) {
 8007806:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800780a:	2b09      	cmp	r3, #9
 800780c:	d827      	bhi.n	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 800780e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007812:	000f      	.short	0x000f
 8007814:	020f01ec 	.word	0x020f01ec
 8007818:	01f402ab 	.word	0x01f402ab
 800781c:	02d90207 	.word	0x02d90207
 8007820:	03900370 	.word	0x03900370
 8007824:	03e1      	.short	0x03e1
 8007826:	bf00      	nop
 8007828:	40020c00 	.word	0x40020c00
 800782c:	20002dc0 	.word	0x20002dc0
        return rect.y;
 8007830:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                int16_t newY = paddle1.getY() + 2;
 8007834:	1c9e      	adds	r6, r3, #2
                if (newY > 198) newY = 198;
 8007836:	b236      	sxth	r6, r6
 8007838:	2ec6      	cmp	r6, #198	@ 0xc6
 800783a:	bfa8      	it	ge
 800783c:	26c6      	movge	r6, #198	@ 0xc6
                if (newY != paddle1.getY()) {
 800783e:	429e      	cmp	r6, r3
 8007840:	d00d      	beq.n	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    paddle1.invalidate();
 8007842:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 8007846:	4640      	mov	r0, r8
 8007848:	f010 fdd2 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
                    paddle1.moveTo(paddle1.getX(), newY);
 800784c:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8007850:	4632      	mov	r2, r6
                    paddle2.moveTo(paddle2.getX(), newY);
 8007852:	4640      	mov	r0, r8
 8007854:	f7fa fa17 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
                    paddle2.invalidate();
 8007858:	4640      	mov	r0, r8
 800785a:	f010 fdc9 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 800785e:	2300      	movs	r3, #0
 8007860:	6838      	ldr	r0, [r7, #0]
 8007862:	461a      	mov	r2, r3
 8007864:	f10d 010f 	add.w	r1, sp, #15
 8007868:	f006 fd31 	bl	800e2ce <osMessageQueueGet>
 800786c:	2800      	cmp	r0, #0
 800786e:	d0ca      	beq.n	8007806 <_ZN14EasyScreenView15handleTickEventEv+0x7e>
    if (!waitingForServe) {
 8007870:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007874:	f504 56b6 	add.w	r6, r4, #5824	@ 0x16c0
 8007878:	f504 771c 	add.w	r7, r4, #624	@ 0x270
 800787c:	2b00      	cmp	r3, #0
 800787e:	f040 84f4 	bne.w	800826a <_ZN14EasyScreenView15handleTickEventEv+0xae2>
        ball.invalidate();
 8007882:	4638      	mov	r0, r7
 8007884:	f00b fec0 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        ballX += ballVelX;
 8007888:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
 800788c:	ed93 6a00 	vldr	s12, [r3]
 8007890:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007894:	edd3 6a00 	vldr	s13, [r3]
 8007898:	ee76 6a26 	vadd.f32	s13, s12, s13
        ballY += ballVelY;
 800789c:	f505 62d9 	add.w	r2, r5, #1736	@ 0x6c8
        ballX += ballVelX;
 80078a0:	edc3 6a00 	vstr	s13, [r3]
        ballY += ballVelY;
 80078a4:	edd2 7a00 	vldr	s15, [r2]
 80078a8:	ed96 7a00 	vldr	s14, [r6]
 80078ac:	ee37 7a87 	vadd.f32	s14, s15, s14
        if (ballY < 0) {
 80078b0:	f04f 0a00 	mov.w	sl, #0
 80078b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80078b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        ballY += ballVelY;
 80078bc:	ed86 7a00 	vstr	s14, [r6]
        if (ballY < 0) {
 80078c0:	f140 83dd 	bpl.w	800807e <_ZN14EasyScreenView15handleTickEventEv+0x8f6>
            ballY = 0;
 80078c4:	f8c6 a000 	str.w	sl, [r6]
            ballVelY = -ballVelY;
 80078c8:	eef1 7a67 	vneg.f32	s15, s15
 80078cc:	edc2 7a00 	vstr	s15, [r2]
        return rect.x;
 80078d0:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
        if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80078d4:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 80078d8:	4413      	add	r3, r2
 80078da:	ee07 3a90 	vmov	s15, r3
 80078de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY + ball.getHeight() >= paddle1.getY() &&
 80078e2:	eef4 6ae7 	vcmpe.f32	s13, s15
 80078e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078ea:	d833      	bhi.n	8007954 <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballX >= paddle1.getX() &&
 80078ec:	ee07 2a10 	vmov	s14, r2
 80078f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
        if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 80078f4:	eef4 6ac7 	vcmpe.f32	s13, s14
 80078f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078fc:	db2a      	blt.n	8007954 <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballY + ball.getHeight() >= paddle1.getY() &&
 80078fe:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
        return rect.y;
 8007902:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8007906:	edd6 6a00 	vldr	s13, [r6]
 800790a:	ee07 3a10 	vmov	s14, r3
 800790e:	ee05 2a90 	vmov	s11, r2
 8007912:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007916:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800791a:	ee37 7a26 	vadd.f32	s14, s14, s13
            ballX >= paddle1.getX() &&
 800791e:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8007922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007926:	db15      	blt.n	8007954 <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballY <= paddle1.getY() + paddle1.getHeight()) {
 8007928:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 800792c:	4413      	add	r3, r2
 800792e:	ee07 3a10 	vmov	s14, r3
 8007932:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            ballY + ball.getHeight() >= paddle1.getY() &&
 8007936:	eef4 6ac7 	vcmpe.f32	s13, s14
 800793a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800793e:	d809      	bhi.n	8007954 <_ZN14EasyScreenView15handleTickEventEv+0x1cc>
            ballX = paddle1.getX() + paddle1.getWidth();
 8007940:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007944:	edc3 7a00 	vstr	s15, [r3]
            ballVelX = -ballVelX;
 8007948:	eeb1 6a46 	vneg.f32	s12, s12
 800794c:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
 8007950:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8007954:	f9b4 0278 	ldrsh.w	r0, [r4, #632]	@ 0x278
        return rect.x;
 8007958:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
        if (ballX + ball.getWidth() >= paddle2.getX() &&
 800795c:	ee07 0a90 	vmov	s15, r0
 8007960:	f205 61bc 	addw	r1, r5, #1724	@ 0x6bc
 8007964:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007968:	edd1 6a00 	vldr	s13, [r1]
 800796c:	ee07 3a90 	vmov	s15, r3
 8007970:	ee77 6a26 	vadd.f32	s13, s14, s13
 8007974:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY + ball.getHeight() >= paddle2.getY() &&
 8007978:	eef4 6ae7 	vcmpe.f32	s13, s15
 800797c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007980:	db3b      	blt.n	80079fa <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8007982:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 8007986:	441a      	add	r2, r3
 8007988:	ee07 2a90 	vmov	s15, r2
 800798c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        if (ballX + ball.getWidth() >= paddle2.getX() &&
 8007990:	eef4 6ae7 	vcmpe.f32	s13, s15
 8007994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007998:	d82f      	bhi.n	80079fa <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballY + ball.getHeight() >= paddle2.getY() &&
 800799a:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
        return rect.y;
 800799e:	f9b4 c122 	ldrsh.w	ip, [r4, #290]	@ 0x122
 80079a2:	edd6 6a00 	vldr	s13, [r6]
 80079a6:	ee07 2a90 	vmov	s15, r2
 80079aa:	ee06 ca10 	vmov	s12, ip
 80079ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079b2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 80079b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
            ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 80079ba:	eef4 7ac6 	vcmpe.f32	s15, s12
 80079be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079c2:	db1a      	blt.n	80079fa <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballY <= paddle2.getY() + paddle2.getHeight()) {
 80079c4:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 80079c8:	4462      	add	r2, ip
 80079ca:	ee07 2a90 	vmov	s15, r2
 80079ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY + ball.getHeight() >= paddle2.getY() &&
 80079d2:	eef4 6ae7 	vcmpe.f32	s13, s15
 80079d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079da:	d80e      	bhi.n	80079fa <_ZN14EasyScreenView15handleTickEventEv+0x272>
            ballX = paddle2.getX() - ball.getWidth();
 80079dc:	1a1b      	subs	r3, r3, r0
 80079de:	ee07 3a90 	vmov	s15, r3
 80079e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballVelX = -ballVelX;
 80079e6:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
            ballX = paddle2.getX() - ball.getWidth();
 80079ea:	edc1 7a00 	vstr	s15, [r1]
            ballVelX = -ballVelX;
 80079ee:	edd3 7a00 	vldr	s15, [r3]
 80079f2:	eef1 7a67 	vneg.f32	s15, s15
 80079f6:	edc3 7a00 	vstr	s15, [r3]
        if (ballX < 0) {
 80079fa:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 80079fe:	edd3 7a00 	vldr	s15, [r3]
 8007a02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a0a:	f140 8365 	bpl.w	80080d8 <_ZN14EasyScreenView15handleTickEventEv+0x950>
            score2++;
 8007a0e:	f8d5 36dc 	ldr.w	r3, [r5, #1756]	@ 0x6dc
            Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007a12:	4ae7      	ldr	r2, [pc, #924]	@ (8007db0 <_ZN14EasyScreenView15handleTickEventEv+0x628>)
            score2++;
 8007a14:	3301      	adds	r3, #1
 8007a16:	f8c5 36dc 	str.w	r3, [r5, #1756]	@ 0x6dc
            Unicode::snprintf(EasyScreenViewBase::score2Buffer, EasyScreenViewBase::SCORE2_SIZE, "%d", score2);
 8007a1a:	210a      	movs	r1, #10
 8007a1c:	f504 7075 	add.w	r0, r4, #980	@ 0x3d4
 8007a20:	f013 f860 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            EasyScreenViewBase::score2.invalidate();
 8007a24:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8007a28:	f010 fce2 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
            buzzerBeepState = true;
 8007a2c:	f04f 0801 	mov.w	r8, #1
            buzzerBeepCounter = 18;
 8007a30:	2312      	movs	r3, #18
 8007a32:	f8c5 36e4 	str.w	r3, [r5, #1764]	@ 0x6e4
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007a36:	48df      	ldr	r0, [pc, #892]	@ (8007db4 <_ZN14EasyScreenView15handleTickEventEv+0x62c>)
            buzzerBeepState = true;
 8007a38:	f885 86e8 	strb.w	r8, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8007a3c:	4642      	mov	r2, r8
 8007a3e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8007a42:	f004 f8d7 	bl	800bbf4 <HAL_GPIO_WritePin>
            if (score2 >= 11) {
 8007a46:	f8d5 36dc 	ldr.w	r3, [r5, #1756]	@ 0x6dc
 8007a4a:	2b0a      	cmp	r3, #10
 8007a4c:	dd05      	ble.n	8007a5a <_ZN14EasyScreenView15handleTickEventEv+0x2d2>
                presenter->goToEndScreen(2);
 8007a4e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                gameOver = true;
 8007a50:	f885 86e0 	strb.w	r8, [r5, #1760]	@ 0x6e0
                presenter->goToEndScreen(2);
 8007a54:	2102      	movs	r1, #2
 8007a56:	f7ff fda3 	bl	80075a0 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8007a5a:	2300      	movs	r3, #0
 8007a5c:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
            ball.invalidate();
 8007a60:	4638      	mov	r0, r7
 8007a62:	f00b fdd1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            serveDelayTicks = 60;
 8007a66:	233c      	movs	r3, #60	@ 0x3c
 8007a68:	f8c5 36d0 	str.w	r3, [r5, #1744]	@ 0x6d0
            servingPlayer = 2;
 8007a6c:	2302      	movs	r3, #2
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007a6e:	f9b4 2278 	ldrsh.w	r2, [r4, #632]	@ 0x278
            servingPlayer = 2;
 8007a72:	f8c5 36d4 	str.w	r3, [r5, #1748]	@ 0x6d4
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007a76:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8007a7a:	1a9b      	subs	r3, r3, r2
 8007a7c:	3b0a      	subs	r3, #10
 8007a7e:	ee07 3a90 	vmov	s15, r3
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007a82:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8007a86:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8007a8a:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8007a8e:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8007a92:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007a96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007a9a:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8007a9e:	eba3 0362 	sub.w	r3, r3, r2, asr #1
            waitingForServe = true;
 8007aa2:	f04f 0901 	mov.w	r9, #1
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007aa6:	f205 68bc 	addw	r8, r5, #1724	@ 0x6bc
            waitingForServe = true;
 8007aaa:	f885 96cc 	strb.w	r9, [r5, #1740]	@ 0x6cc
            ballX = paddle2.getX() - ball.getWidth() - 10;
 8007aae:	edc8 7a00 	vstr	s15, [r8]
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007ab2:	ee07 3a90 	vmov	s15, r3
            lineAngle2 = 0.0f;
 8007ab6:	f505 6bdf 	add.w	fp, r5, #1784	@ 0x6f8
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007aba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            desiredBallVelY2 = 0.0f;
 8007abe:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8007ac2:	edc6 7a00 	vstr	s15, [r6]
            desiredBallVelY2 = 0.0f;
 8007ac6:	f8c3 a000 	str.w	sl, [r3]
            lineAngle2 = 0.0f;
 8007aca:	f8cb a000 	str.w	sl, [fp]
            line1_1.invalidate();
 8007ace:	f504 7a54 	add.w	sl, r4, #848	@ 0x350
 8007ad2:	4650      	mov	r0, sl
 8007ad4:	f00b fd98 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007ad8:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8007adc:	edd8 7a00 	vldr	s15, [r8]
 8007ae0:	ee07 3a10 	vmov	s14, r3
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007ae4:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007ae8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007aec:	ee06 3a90 	vmov	s13, r3
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007af0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8007af4:	eee7 7a06 	vfma.f32	s15, s14, s12
                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007af8:	2321      	movs	r3, #33	@ 0x21
 8007afa:	4650      	mov	r0, sl
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007afc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007b00:	ed96 7a00 	vldr	s14, [r6]
                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007b04:	9300      	str	r3, [sp, #0]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007b06:	eea6 7a86 	vfma.f32	s14, s13, s12
                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007b0a:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8007b0e:	ee37 7a48 	vsub.f32	s14, s14, s16
 8007b12:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8007b16:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007b1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b1e:	ee17 2a10 	vmov	r2, s14
 8007b22:	ee17 1a90 	vmov	r1, s15
 8007b26:	b212      	sxth	r2, r2
 8007b28:	b209      	sxth	r1, r1
 8007b2a:	f7fb fae3 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                        line1_1.setStart(16, 16);
 8007b2e:	2210      	movs	r2, #16
 8007b30:	4611      	mov	r1, r2
 8007b32:	4650      	mov	r0, sl
 8007b34:	f7ff fd96 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                        line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8007b38:	f8db 0000 	ldr.w	r0, [fp]
 8007b3c:	f7f8 fd0c 	bl	8000558 <__aeabi_f2d>
 8007b40:	a399      	add	r3, pc, #612	@ (adr r3, 8007da8 <_ZN14EasyScreenView15handleTickEventEv+0x620>)
 8007b42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b46:	f7f8 fd5f 	bl	8000608 <__aeabi_dmul>
 8007b4a:	4b9b      	ldr	r3, [pc, #620]	@ (8007db8 <_ZN14EasyScreenView15handleTickEventEv+0x630>)
 8007b4c:	2200      	movs	r2, #0
 8007b4e:	f7f8 fe85 	bl	800085c <__aeabi_ddiv>
 8007b52:	f7f9 f809 	bl	8000b68 <__aeabi_d2f>
 8007b56:	ee08 0a90 	vmov	s17, r0
 8007b5a:	eeb0 0a68 	vmov.f32	s0, s17
 8007b5e:	f022 f937 	bl	8029dd0 <cosf>
 8007b62:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8007b66:	eef0 9a48 	vmov.f32	s19, s16
 8007b6a:	eee0 9a09 	vfma.f32	s19, s0, s18
 8007b6e:	eeb0 0a68 	vmov.f32	s0, s17
 8007b72:	f022 f971 	bl	8029e58 <sinf>
 8007b76:	eef0 0a48 	vmov.f32	s1, s16
 8007b7a:	eee0 0a09 	vfma.f32	s1, s0, s18
 8007b7e:	4650      	mov	r0, sl
 8007b80:	eeb0 0a69 	vmov.f32	s0, s19
 8007b84:	f7ff fd72 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8007b88:	f884 9375 	strb.w	r9, [r4, #885]	@ 0x375
                        line1.invalidate();
 8007b8c:	4650      	mov	r0, sl
 8007b8e:	f00b fd3b 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        ball.moveTo(ballX, ballY);
 8007b92:	ed96 7a00 	vldr	s14, [r6]
 8007b96:	edd8 7a00 	vldr	s15, [r8]
 8007b9a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007b9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ba2:	ee17 3a10 	vmov	r3, s14
 8007ba6:	b21a      	sxth	r2, r3
 8007ba8:	ee17 3a90 	vmov	r3, s15
 8007bac:	4638      	mov	r0, r7
 8007bae:	b219      	sxth	r1, r3
 8007bb0:	f7fa f869 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
        ball.moveTo(ballX, ballY);
 8007bb4:	ed96 7a00 	vldr	s14, [r6]
 8007bb8:	f205 65bc 	addw	r5, r5, #1724	@ 0x6bc
 8007bbc:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007bc0:	edd5 7a00 	vldr	s15, [r5]
 8007bc4:	ee17 3a10 	vmov	r3, s14
 8007bc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bcc:	b21a      	sxth	r2, r3
 8007bce:	ee17 3a90 	vmov	r3, s15
 8007bd2:	4638      	mov	r0, r7
 8007bd4:	b219      	sxth	r1, r3
 8007bd6:	f7fa f856 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
        ball.invalidate();
 8007bda:	4638      	mov	r0, r7
 8007bdc:	f00b fd14 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
}
 8007be0:	b005      	add	sp, #20
 8007be2:	ecbd 8b04 	vpop	{d8-d9}
 8007be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return rect.y;
 8007bea:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
                int16_t newY = paddle1.getY() - 2;
 8007bee:	1e9e      	subs	r6, r3, #2
                if (newY < 2) newY = 2;
 8007bf0:	b236      	sxth	r6, r6
 8007bf2:	2e02      	cmp	r6, #2
 8007bf4:	bfb8      	it	lt
 8007bf6:	2602      	movlt	r6, #2
 8007bf8:	e621      	b.n	800783e <_ZN14EasyScreenView15handleTickEventEv+0xb6>
 8007bfa:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
                int16_t newY = paddle2.getY() + 2;
 8007bfe:	1c9e      	adds	r6, r3, #2
                if (newY > 198) newY = 198;
 8007c00:	b236      	sxth	r6, r6
 8007c02:	2ec6      	cmp	r6, #198	@ 0xc6
 8007c04:	bfa8      	it	ge
 8007c06:	26c6      	movge	r6, #198	@ 0xc6
                if (newY != paddle2.getY()) {
 8007c08:	429e      	cmp	r6, r3
 8007c0a:	f43f ae28 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    paddle2.invalidate();
 8007c0e:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8007c12:	4640      	mov	r0, r8
 8007c14:	f010 fbec 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
                    paddle2.moveTo(paddle2.getX(), newY);
 8007c18:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8007c1c:	4632      	mov	r2, r6
 8007c1e:	e618      	b.n	8007852 <_ZN14EasyScreenView15handleTickEventEv+0xca>
 8007c20:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
                int16_t newY = paddle2.getY() - 2;
 8007c24:	1e9e      	subs	r6, r3, #2
                if (newY < 2) newY = 2;
 8007c26:	b236      	sxth	r6, r6
 8007c28:	2e02      	cmp	r6, #2
 8007c2a:	bfb8      	it	lt
 8007c2c:	2602      	movlt	r6, #2
                if (newY != paddle2.getY()) {
 8007c2e:	e7eb      	b.n	8007c08 <_ZN14EasyScreenView15handleTickEventEv+0x480>
                if (waitingForServe && servingPlayer == 1) {
 8007c30:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007c34:	2b00      	cmp	r3, #0
 8007c36:	f43f ae12 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007c3a:	f8d5 86d4 	ldr.w	r8, [r5, #1748]	@ 0x6d4
 8007c3e:	f1b8 0f01 	cmp.w	r8, #1
 8007c42:	f47f ae0c 	bne.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY1 -= 0.2f;
 8007c46:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
 8007c4a:	ed93 0a00 	vldr	s0, [r3]
 8007c4e:	eddf 7a5b 	vldr	s15, [pc, #364]	@ 8007dbc <_ZN14EasyScreenView15handleTickEventEv+0x634>
 8007c52:	ee30 0a67 	vsub.f32	s0, s0, s15
                    if (desiredBallVelY1 < -2.0f) desiredBallVelY1 = -2.0f;
 8007c56:	eef8 7a00 	vmov.f32	s15, #128	@ 0xc0000000 -2.0
 8007c5a:	eeb4 0a67 	vcmp.f32	s0, s15
 8007c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c62:	bf48      	it	mi
 8007c64:	eeb0 0a67 	vmovmi.f32	s0, s15
 8007c68:	ed83 0a00 	vstr	s0, [r3]
                    lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8007c6c:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
                    lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8007c70:	f022 f88d 	bl	8029d8e <atan2f>
 8007c74:	eddf 7a52 	vldr	s15, [pc, #328]	@ 8007dc0 <_ZN14EasyScreenView15handleTickEventEv+0x638>
 8007c78:	ee60 7a27 	vmul.f32	s15, s0, s15
 8007c7c:	f205 69f4 	addw	r9, r5, #1780	@ 0x6f4
 8007c80:	ee17 0a90 	vmov	r0, s15
 8007c84:	f7f8 fc68 	bl	8000558 <__aeabi_f2d>
 8007c88:	a347      	add	r3, pc, #284	@ (adr r3, 8007da8 <_ZN14EasyScreenView15handleTickEventEv+0x620>)
 8007c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c8e:	f7f8 fde5 	bl	800085c <__aeabi_ddiv>
 8007c92:	f7f8 ff69 	bl	8000b68 <__aeabi_d2f>
                    line1.invalidate();
 8007c96:	f504 7633 	add.w	r6, r4, #716	@ 0x2cc
                    lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8007c9a:	f8c9 0000 	str.w	r0, [r9]
                    line1.invalidate();
 8007c9e:	4630      	mov	r0, r6
 8007ca0:	f00b fcb2 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007ca4:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8007ca8:	ee07 3a10 	vmov	s14, r3
 8007cac:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007cb0:	edd3 7a00 	vldr	s15, [r3]
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007cb4:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007cb8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007cbc:	ee06 3a90 	vmov	s13, r3
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007cc0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007cc4:	f504 53b6 	add.w	r3, r4, #5824	@ 0x16c0
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007cc8:	eee7 7a06 	vfma.f32	s15, s14, s12
                                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007ccc:	4630      	mov	r0, r6
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007cce:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007cd2:	ed93 7a00 	vldr	s14, [r3]
 8007cd6:	eea6 7a86 	vfma.f32	s14, s13, s12
                                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007cda:	2321      	movs	r3, #33	@ 0x21
 8007cdc:	9300      	str	r3, [sp, #0]
 8007cde:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8007ce2:	ee37 7a48 	vsub.f32	s14, s14, s16
 8007ce6:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8007cea:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007cee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cf2:	ee17 2a10 	vmov	r2, s14
 8007cf6:	ee17 1a90 	vmov	r1, s15
 8007cfa:	b212      	sxth	r2, r2
 8007cfc:	b209      	sxth	r1, r1
 8007cfe:	f7fb f9f9 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                                        line1.setStart(16, 16);
 8007d02:	2210      	movs	r2, #16
 8007d04:	4611      	mov	r1, r2
 8007d06:	4630      	mov	r0, r6
 8007d08:	f7ff fcac 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                                        line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 8007d0c:	f8d9 0000 	ldr.w	r0, [r9]
 8007d10:	f7f8 fc22 	bl	8000558 <__aeabi_f2d>
 8007d14:	a324      	add	r3, pc, #144	@ (adr r3, 8007da8 <_ZN14EasyScreenView15handleTickEventEv+0x620>)
 8007d16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d1a:	f7f8 fc75 	bl	8000608 <__aeabi_dmul>
 8007d1e:	4b26      	ldr	r3, [pc, #152]	@ (8007db8 <_ZN14EasyScreenView15handleTickEventEv+0x630>)
 8007d20:	2200      	movs	r2, #0
 8007d22:	f7f8 fd9b 	bl	800085c <__aeabi_ddiv>
 8007d26:	f7f8 ff1f 	bl	8000b68 <__aeabi_d2f>
 8007d2a:	ee08 0a90 	vmov	s17, r0
 8007d2e:	eeb0 0a68 	vmov.f32	s0, s17
 8007d32:	f022 f84d 	bl	8029dd0 <cosf>
 8007d36:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8007d3a:	eef0 9a48 	vmov.f32	s19, s16
 8007d3e:	eee0 9a09 	vfma.f32	s19, s0, s18
 8007d42:	eeb0 0a68 	vmov.f32	s0, s17
 8007d46:	f022 f887 	bl	8029e58 <sinf>
 8007d4a:	eef0 0a48 	vmov.f32	s1, s16
 8007d4e:	eee0 0a09 	vfma.f32	s1, s0, s18
 8007d52:	4630      	mov	r0, r6
 8007d54:	eeb0 0a69 	vmov.f32	s0, s19
 8007d58:	f7ff fc88 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
        visible = vis;
 8007d5c:	f884 82f1 	strb.w	r8, [r4, #753]	@ 0x2f1
                                        line1_1.invalidate();
 8007d60:	4630      	mov	r0, r6
                    line1_1.invalidate();
 8007d62:	f00b fc51 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8007d66:	e57a      	b.n	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                if (waitingForServe && servingPlayer == 1) {
 8007d68:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007d6c:	2b00      	cmp	r3, #0
 8007d6e:	f43f ad76 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007d72:	f8d5 86d4 	ldr.w	r8, [r5, #1748]	@ 0x6d4
 8007d76:	f1b8 0f01 	cmp.w	r8, #1
 8007d7a:	f47f ad70 	bne.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY1 += 0.2f;
 8007d7e:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
 8007d82:	ed93 0a00 	vldr	s0, [r3]
 8007d86:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8007dbc <_ZN14EasyScreenView15handleTickEventEv+0x634>
 8007d8a:	ee30 0a27 	vadd.f32	s0, s0, s15
                    if (desiredBallVelY1 > 2.0f) desiredBallVelY1 = 2.0f;
 8007d8e:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
 8007d92:	eeb4 0a60 	vcmp.f32	s0, s1
 8007d96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d9a:	bfc8      	it	gt
 8007d9c:	eeb0 0a60 	vmovgt.f32	s0, s1
 8007da0:	ed83 0a00 	vstr	s0, [r3]
 8007da4:	e764      	b.n	8007c70 <_ZN14EasyScreenView15handleTickEventEv+0x4e8>
 8007da6:	bf00      	nop
 8007da8:	54442d18 	.word	0x54442d18
 8007dac:	400921fb 	.word	0x400921fb
 8007db0:	0802d07f 	.word	0x0802d07f
 8007db4:	40020c00 	.word	0x40020c00
 8007db8:	40668000 	.word	0x40668000
 8007dbc:	3e4ccccd 	.word	0x3e4ccccd
 8007dc0:	43340000 	.word	0x43340000
                if (waitingForServe && servingPlayer == 2) {
 8007dc4:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007dc8:	2b00      	cmp	r3, #0
 8007dca:	f43f ad48 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007dce:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007dd2:	2b02      	cmp	r3, #2
 8007dd4:	f47f ad43 	bne.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY2 -= 0.2f;
 8007dd8:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
 8007ddc:	ed93 0a00 	vldr	s0, [r3]
 8007de0:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8007dbc <_ZN14EasyScreenView15handleTickEventEv+0x634>
 8007de4:	ee30 0a67 	vsub.f32	s0, s0, s15
                    if (desiredBallVelY2 < -2.0f) desiredBallVelY2 = -2.0f;
 8007de8:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 8007dec:	eeb4 0a60 	vcmp.f32	s0, s1
 8007df0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007df4:	bf48      	it	mi
 8007df6:	eeb0 0a60 	vmovmi.f32	s0, s1
 8007dfa:	ed83 0a00 	vstr	s0, [r3]
                    lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8007dfe:	f021 ffc6 	bl	8029d8e <atan2f>
 8007e02:	ed5f 7a11 	vldr	s15, [pc, #-68]	@ 8007dc0 <_ZN14EasyScreenView15handleTickEventEv+0x638>
 8007e06:	ee60 7a27 	vmul.f32	s15, s0, s15
 8007e0a:	f505 68df 	add.w	r8, r5, #1784	@ 0x6f8
 8007e0e:	ee17 0a90 	vmov	r0, s15
 8007e12:	f7f8 fba1 	bl	8000558 <__aeabi_f2d>
 8007e16:	a3aa      	add	r3, pc, #680	@ (adr r3, 80080c0 <_ZN14EasyScreenView15handleTickEventEv+0x938>)
 8007e18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e1c:	f7f8 fd1e 	bl	800085c <__aeabi_ddiv>
 8007e20:	f7f8 fea2 	bl	8000b68 <__aeabi_d2f>
                    line1_1.invalidate();
 8007e24:	f504 7654 	add.w	r6, r4, #848	@ 0x350
                    lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8007e28:	f8c8 0000 	str.w	r0, [r8]
                    line1_1.invalidate();
 8007e2c:	4630      	mov	r0, r6
 8007e2e:	f00b fbeb 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007e32:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 8007e36:	ee07 3a10 	vmov	s14, r3
 8007e3a:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 8007e3e:	edd3 7a00 	vldr	s15, [r3]
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007e42:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007e46:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007e4a:	ee06 3a90 	vmov	s13, r3
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007e4e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007e52:	f504 53b6 	add.w	r3, r4, #5824	@ 0x16c0
                                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8007e56:	eee7 7a06 	vfma.f32	s15, s14, s12
                                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007e5a:	4630      	mov	r0, r6
                                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8007e5c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8007e60:	ed93 7a00 	vldr	s14, [r3]
 8007e64:	eea6 7a86 	vfma.f32	s14, s13, s12
                                        line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8007e68:	2321      	movs	r3, #33	@ 0x21
 8007e6a:	9300      	str	r3, [sp, #0]
 8007e6c:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8007e70:	ee37 7a48 	vsub.f32	s14, s14, s16
 8007e74:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8007e78:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8007e7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e80:	ee17 2a10 	vmov	r2, s14
 8007e84:	ee17 1a90 	vmov	r1, s15
 8007e88:	b212      	sxth	r2, r2
 8007e8a:	b209      	sxth	r1, r1
 8007e8c:	f7fb f932 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                                        line1_1.setStart(16, 16);
 8007e90:	2210      	movs	r2, #16
 8007e92:	4611      	mov	r1, r2
 8007e94:	4630      	mov	r0, r6
 8007e96:	f7ff fbe5 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                                        line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8007e9a:	f8d8 0000 	ldr.w	r0, [r8]
 8007e9e:	f7f8 fb5b 	bl	8000558 <__aeabi_f2d>
 8007ea2:	a387      	add	r3, pc, #540	@ (adr r3, 80080c0 <_ZN14EasyScreenView15handleTickEventEv+0x938>)
 8007ea4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ea8:	f7f8 fbae 	bl	8000608 <__aeabi_dmul>
 8007eac:	4b86      	ldr	r3, [pc, #536]	@ (80080c8 <_ZN14EasyScreenView15handleTickEventEv+0x940>)
 8007eae:	2200      	movs	r2, #0
 8007eb0:	f7f8 fcd4 	bl	800085c <__aeabi_ddiv>
 8007eb4:	f7f8 fe58 	bl	8000b68 <__aeabi_d2f>
 8007eb8:	ee08 0a90 	vmov	s17, r0
 8007ebc:	eeb0 0a68 	vmov.f32	s0, s17
 8007ec0:	f021 ff86 	bl	8029dd0 <cosf>
 8007ec4:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8007ec8:	eef0 9a48 	vmov.f32	s19, s16
 8007ecc:	eee0 9a09 	vfma.f32	s19, s0, s18
 8007ed0:	eeb0 0a68 	vmov.f32	s0, s17
 8007ed4:	f021 ffc0 	bl	8029e58 <sinf>
 8007ed8:	eef0 0a48 	vmov.f32	s1, s16
 8007edc:	eee0 0a09 	vfma.f32	s1, s0, s18
 8007ee0:	4630      	mov	r0, r6
 8007ee2:	eeb0 0a69 	vmov.f32	s0, s19
 8007ee6:	f7ff fbc1 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8007eea:	2301      	movs	r3, #1
 8007eec:	f884 3375 	strb.w	r3, [r4, #885]	@ 0x375
 8007ef0:	e736      	b.n	8007d60 <_ZN14EasyScreenView15handleTickEventEv+0x5d8>
                if (waitingForServe && servingPlayer == 2) {
 8007ef2:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007ef6:	2b00      	cmp	r3, #0
 8007ef8:	f43f acb1 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007efc:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007f00:	2b02      	cmp	r3, #2
 8007f02:	f47f acac 	bne.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    desiredBallVelY2 += 0.2f;
 8007f06:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
 8007f0a:	ed93 0a00 	vldr	s0, [r3]
 8007f0e:	eddf 7a6f 	vldr	s15, [pc, #444]	@ 80080cc <_ZN14EasyScreenView15handleTickEventEv+0x944>
 8007f12:	ee30 0a27 	vadd.f32	s0, s0, s15
                    if (desiredBallVelY2 > 2.0f) desiredBallVelY2 = 2.0f;
 8007f16:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8007f1a:	eeb4 0a67 	vcmp.f32	s0, s15
 8007f1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f22:	bfc8      	it	gt
 8007f24:	eeb0 0a67 	vmovgt.f32	s0, s15
 8007f28:	ed83 0a00 	vstr	s0, [r3]
                    lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8007f2c:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 8007f30:	e765      	b.n	8007dfe <_ZN14EasyScreenView15handleTickEventEv+0x676>
                if (waitingForServe && servingPlayer == 1) {
 8007f32:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007f36:	2b00      	cmp	r3, #0
 8007f38:	f43f ac91 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007f3c:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007f40:	2b01      	cmp	r3, #1
 8007f42:	f47f ac8c 	bne.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    waitingForServe = false;
 8007f46:	2300      	movs	r3, #0
 8007f48:	f885 36cc 	strb.w	r3, [r5, #1740]	@ 0x6cc
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 8007f4c:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
 8007f50:	ed93 8a00 	vldr	s16, [r3]
 8007f54:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8007f58:	eee8 7a48 	vfms.f32	s15, s16, s16
 8007f5c:	ee17 0a90 	vmov	r0, s15
 8007f60:	f7f8 fafa 	bl	8000558 <__aeabi_f2d>
 8007f64:	ec41 0b10 	vmov	d0, r0, r1
 8007f68:	f021 fee5 	bl	8029d36 <sqrt>
 8007f6c:	ec51 0b10 	vmov	r0, r1, d0
 8007f70:	f7f8 fdfa 	bl	8000b68 <__aeabi_d2f>
 8007f74:	ee07 0a90 	vmov	s15, r0
                    if (ballVelX < 0.5f) {
 8007f78:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 8007f7c:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
                    if (ballVelX < 0.5f) {
 8007f80:	eef4 7ac7 	vcmpe.f32	s15, s14
                    ballVelY = desiredBallVelY1;
 8007f84:	f505 62d9 	add.w	r2, r5, #1736	@ 0x6c8
                    if (ballVelX < 0.5f) {
 8007f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 8007f8c:	6018      	str	r0, [r3, #0]
                    ballVelY = desiredBallVelY1;
 8007f8e:	ed82 8a00 	vstr	s16, [r2]
                    if (ballVelX < 0.5f) {
 8007f92:	d50e      	bpl.n	8007fb2 <_ZN14EasyScreenView15handleTickEventEv+0x82a>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8007f94:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8007f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = 0.5f;
 8007f9c:	ed83 7a00 	vstr	s14, [r3]
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8007fa0:	db14      	blt.n	8007fcc <_ZN14EasyScreenView15handleTickEventEv+0x844>
 8007fa2:	a143      	add	r1, pc, #268	@ (adr r1, 80080b0 <_ZN14EasyScreenView15handleTickEventEv+0x928>)
 8007fa4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007fa8:	f7f8 fdde 	bl	8000b68 <__aeabi_d2f>
 8007fac:	f505 66d9 	add.w	r6, r5, #1736	@ 0x6c8
 8007fb0:	6030      	str	r0, [r6, #0]
 8007fb2:	2301      	movs	r3, #1
 8007fb4:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                    ball.invalidate();
 8007fb8:	f504 701c 	add.w	r0, r4, #624	@ 0x270
 8007fbc:	f00b fb24 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8007fc0:	2300      	movs	r3, #0
 8007fc2:	f884 32f1 	strb.w	r3, [r4, #753]	@ 0x2f1
                    line1.invalidate();
 8007fc6:	f504 7033 	add.w	r0, r4, #716	@ 0x2cc
 8007fca:	e6ca      	b.n	8007d62 <_ZN14EasyScreenView15handleTickEventEv+0x5da>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8007fcc:	a13a      	add	r1, pc, #232	@ (adr r1, 80080b8 <_ZN14EasyScreenView15handleTickEventEv+0x930>)
 8007fce:	e9d1 0100 	ldrd	r0, r1, [r1]
 8007fd2:	e7e9      	b.n	8007fa8 <_ZN14EasyScreenView15handleTickEventEv+0x820>
                if (waitingForServe && servingPlayer == 2) {
 8007fd4:	f895 36cc 	ldrb.w	r3, [r5, #1740]	@ 0x6cc
 8007fd8:	2b00      	cmp	r3, #0
 8007fda:	f43f ac40 	beq.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
 8007fde:	f8d5 36d4 	ldr.w	r3, [r5, #1748]	@ 0x6d4
 8007fe2:	2b02      	cmp	r3, #2
 8007fe4:	f47f ac3b 	bne.w	800785e <_ZN14EasyScreenView15handleTickEventEv+0xd6>
                    waitingForServe = false;
 8007fe8:	2300      	movs	r3, #0
 8007fea:	f885 36cc 	strb.w	r3, [r5, #1740]	@ 0x6cc
                    ballVelX = -sqrt(speed * speed - desiredBallVelY2 * desiredBallVelY2);
 8007fee:	f505 63de 	add.w	r3, r5, #1776	@ 0x6f0
 8007ff2:	ed93 8a00 	vldr	s16, [r3]
 8007ff6:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 8007ffa:	eee8 7a48 	vfms.f32	s15, s16, s16
 8007ffe:	ee17 0a90 	vmov	r0, s15
 8008002:	f7f8 faa9 	bl	8000558 <__aeabi_f2d>
 8008006:	ec41 0b10 	vmov	d0, r0, r1
 800800a:	f021 fe94 	bl	8029d36 <sqrt>
 800800e:	ec51 0b10 	vmov	r0, r1, d0
 8008012:	f7f8 fda9 	bl	8000b68 <__aeabi_d2f>
 8008016:	ee07 0a90 	vmov	s15, r0
 800801a:	f205 63c4 	addw	r3, r5, #1732	@ 0x6c4
 800801e:	eeb1 7a67 	vneg.f32	s14, s15
 8008022:	ed83 7a00 	vstr	s14, [r3]
                    if (ballVelX > -0.5f) {
 8008026:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800802a:	eef4 7ac7 	vcmpe.f32	s15, s14
                    ballVelY = desiredBallVelY2;
 800802e:	f505 62d9 	add.w	r2, r5, #1736	@ 0x6c8
                    if (ballVelX > -0.5f) {
 8008032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelY = desiredBallVelY2;
 8008036:	ed82 8a00 	vstr	s16, [r2]
                    if (ballVelX > -0.5f) {
 800803a:	d50f      	bpl.n	800805c <_ZN14EasyScreenView15handleTickEventEv+0x8d4>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800803c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
                        ballVelX = -0.5f;
 8008040:	f04f 423f 	mov.w	r2, #3204448256	@ 0xbf000000
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8008044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = -0.5f;
 8008048:	601a      	str	r2, [r3, #0]
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800804a:	db14      	blt.n	8008076 <_ZN14EasyScreenView15handleTickEventEv+0x8ee>
 800804c:	a118      	add	r1, pc, #96	@ (adr r1, 80080b0 <_ZN14EasyScreenView15handleTickEventEv+0x928>)
 800804e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008052:	f7f8 fd89 	bl	8000b68 <__aeabi_d2f>
 8008056:	f505 66d9 	add.w	r6, r5, #1736	@ 0x6c8
 800805a:	6030      	str	r0, [r6, #0]
 800805c:	2301      	movs	r3, #1
 800805e:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                    ball.invalidate();
 8008062:	f504 701c 	add.w	r0, r4, #624	@ 0x270
 8008066:	f00b facf 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 800806a:	2300      	movs	r3, #0
 800806c:	f884 3375 	strb.w	r3, [r4, #885]	@ 0x375
                    line1_1.invalidate();
 8008070:	f504 7054 	add.w	r0, r4, #848	@ 0x350
 8008074:	e675      	b.n	8007d62 <_ZN14EasyScreenView15handleTickEventEv+0x5da>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8008076:	a110      	add	r1, pc, #64	@ (adr r1, 80080b8 <_ZN14EasyScreenView15handleTickEventEv+0x930>)
 8008078:	e9d1 0100 	ldrd	r0, r1, [r1]
 800807c:	e7e9      	b.n	8008052 <_ZN14EasyScreenView15handleTickEventEv+0x8ca>
        return rect.height;
 800807e:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
        } else if (ballY + ball.getHeight() > 240) {
 8008082:	ee05 3a90 	vmov	s11, r3
 8008086:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800808a:	ee35 7a87 	vadd.f32	s14, s11, s14
 800808e:	eddf 5a10 	vldr	s11, [pc, #64]	@ 80080d0 <_ZN14EasyScreenView15handleTickEventEv+0x948>
 8008092:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8008096:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800809a:	f77f ac19 	ble.w	80078d0 <_ZN14EasyScreenView15handleTickEventEv+0x148>
            ballY = 240 - ball.getHeight();
 800809e:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 80080a2:	ee07 3a10 	vmov	s14, r3
 80080a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80080aa:	ed86 7a00 	vstr	s14, [r6]
 80080ae:	e40b      	b.n	80078c8 <_ZN14EasyScreenView15handleTickEventEv+0x140>
 80080b0:	b14f4eda 	.word	0xb14f4eda
 80080b4:	3ffefbde 	.word	0x3ffefbde
 80080b8:	b14f4eda 	.word	0xb14f4eda
 80080bc:	bffefbde 	.word	0xbffefbde
 80080c0:	54442d18 	.word	0x54442d18
 80080c4:	400921fb 	.word	0x400921fb
 80080c8:	40668000 	.word	0x40668000
 80080cc:	3e4ccccd 	.word	0x3e4ccccd
 80080d0:	43700000 	.word	0x43700000
 80080d4:	43a00000 	.word	0x43a00000
        } else if (ballX + ball.getWidth() > 320) {
 80080d8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80080dc:	ed5f 7a03 	vldr	s15, [pc, #-12]	@ 80080d4 <_ZN14EasyScreenView15handleTickEventEv+0x94c>
 80080e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80080e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80080e8:	f77f ad64 	ble.w	8007bb4 <_ZN14EasyScreenView15handleTickEventEv+0x42c>
            score1++;
 80080ec:	f8d5 36d8 	ldr.w	r3, [r5, #1752]	@ 0x6d8
            Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 80080f0:	4ae5      	ldr	r2, [pc, #916]	@ (8008488 <_ZN14EasyScreenView15handleTickEventEv+0xd00>)
            score1++;
 80080f2:	3301      	adds	r3, #1
 80080f4:	f8c5 36d8 	str.w	r3, [r5, #1752]	@ 0x6d8
            Unicode::snprintf(EasyScreenViewBase::score1Buffer, EasyScreenViewBase::SCORE1_SIZE, "%d", score1);
 80080f8:	210a      	movs	r1, #10
 80080fa:	f504 707a 	add.w	r0, r4, #1000	@ 0x3e8
 80080fe:	f012 fcf1 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
            EasyScreenViewBase::score1.invalidate();
 8008102:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 8008106:	f010 f973 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
            buzzerBeepState = true;
 800810a:	f04f 0801 	mov.w	r8, #1
            buzzerBeepCounter = 18;
 800810e:	2312      	movs	r3, #18
 8008110:	f8c5 36e4 	str.w	r3, [r5, #1764]	@ 0x6e4
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008114:	48dd      	ldr	r0, [pc, #884]	@ (800848c <_ZN14EasyScreenView15handleTickEventEv+0xd04>)
            buzzerBeepState = true;
 8008116:	f885 86e8 	strb.w	r8, [r5, #1768]	@ 0x6e8
            HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800811a:	4642      	mov	r2, r8
 800811c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008120:	f003 fd68 	bl	800bbf4 <HAL_GPIO_WritePin>
            if (score1 >= 11) {
 8008124:	f8d5 36d8 	ldr.w	r3, [r5, #1752]	@ 0x6d8
 8008128:	2b0a      	cmp	r3, #10
 800812a:	dd05      	ble.n	8008138 <_ZN14EasyScreenView15handleTickEventEv+0x9b0>
                presenter->goToEndScreen(1);
 800812c:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                gameOver = true;
 800812e:	f885 86e0 	strb.w	r8, [r5, #1760]	@ 0x6e0
                presenter->goToEndScreen(1);
 8008132:	4641      	mov	r1, r8
 8008134:	f7ff fa34 	bl	80075a0 <_ZN19EasyScreenPresenter13goToEndScreenEi>
        visible = vis;
 8008138:	2300      	movs	r3, #0
 800813a:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
            ball.invalidate();
 800813e:	4638      	mov	r0, r7
 8008140:	f00b fa62 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            serveDelayTicks = 60;
 8008144:	233c      	movs	r3, #60	@ 0x3c
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 8008146:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
            serveDelayTicks = 60;
 800814a:	f8c5 36d0 	str.w	r3, [r5, #1744]	@ 0x6d0
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 800814e:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8008152:	4413      	add	r3, r2
 8008154:	330a      	adds	r3, #10
 8008156:	ee07 3a90 	vmov	s15, r3
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 800815a:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 800815e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008162:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8008166:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800816a:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 800816e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8008172:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8008176:	eba3 0362 	sub.w	r3, r3, r2, asr #1
            waitingForServe = true;
 800817a:	f04f 0901 	mov.w	r9, #1
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 800817e:	f205 68bc 	addw	r8, r5, #1724	@ 0x6bc
            waitingForServe = true;
 8008182:	f885 96cc 	strb.w	r9, [r5, #1740]	@ 0x6cc
            servingPlayer = 1;
 8008186:	f8c5 96d4 	str.w	r9, [r5, #1748]	@ 0x6d4
            ballX = paddle1.getX() + paddle1.getWidth() + 10;
 800818a:	edc8 7a00 	vstr	s15, [r8]
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 800818e:	ee07 3a90 	vmov	s15, r3
            lineAngle1 = 0.0f;
 8008192:	f205 6bf4 	addw	fp, r5, #1780	@ 0x6f4
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8008196:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            desiredBallVelY1 = 0.0f;
 800819a:	f205 63ec 	addw	r3, r5, #1772	@ 0x6ec
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 800819e:	edc6 7a00 	vstr	s15, [r6]
            desiredBallVelY1 = 0.0f;
 80081a2:	f8c3 a000 	str.w	sl, [r3]
            lineAngle1 = 0.0f;
 80081a6:	f8cb a000 	str.w	sl, [fp]
            line1.invalidate();
 80081aa:	f504 7a33 	add.w	sl, r4, #716	@ 0x2cc
 80081ae:	4650      	mov	r0, sl
 80081b0:	f00b fa2a 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80081b4:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 80081b8:	edd8 7a00 	vldr	s15, [r8]
 80081bc:	ee07 3a10 	vmov	s14, r3
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80081c0:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80081c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80081c8:	ee06 3a90 	vmov	s13, r3
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80081cc:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80081d0:	eee7 7a06 	vfma.f32	s15, s14, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80081d4:	2321      	movs	r3, #33	@ 0x21
 80081d6:	4650      	mov	r0, sl
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80081d8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80081dc:	ed96 7a00 	vldr	s14, [r6]
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80081e0:	9300      	str	r3, [sp, #0]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80081e2:	eea6 7a86 	vfma.f32	s14, s13, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80081e6:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 80081ea:	ee37 7a48 	vsub.f32	s14, s14, s16
 80081ee:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80081f2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80081f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081fa:	ee17 2a10 	vmov	r2, s14
 80081fe:	ee17 1a90 	vmov	r1, s15
 8008202:	b212      	sxth	r2, r2
 8008204:	b209      	sxth	r1, r1
 8008206:	f7fa ff75 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                        line1.setStart(16, 16);
 800820a:	2210      	movs	r2, #16
 800820c:	4611      	mov	r1, r2
 800820e:	4650      	mov	r0, sl
 8008210:	f7ff fa28 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                        line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 8008214:	f8db 0000 	ldr.w	r0, [fp]
 8008218:	f7f8 f99e 	bl	8000558 <__aeabi_f2d>
 800821c:	a398      	add	r3, pc, #608	@ (adr r3, 8008480 <_ZN14EasyScreenView15handleTickEventEv+0xcf8>)
 800821e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008222:	f7f8 f9f1 	bl	8000608 <__aeabi_dmul>
 8008226:	4b9a      	ldr	r3, [pc, #616]	@ (8008490 <_ZN14EasyScreenView15handleTickEventEv+0xd08>)
 8008228:	2200      	movs	r2, #0
 800822a:	f7f8 fb17 	bl	800085c <__aeabi_ddiv>
 800822e:	f7f8 fc9b 	bl	8000b68 <__aeabi_d2f>
 8008232:	ee08 0a90 	vmov	s17, r0
 8008236:	eeb0 0a68 	vmov.f32	s0, s17
 800823a:	f021 fdc9 	bl	8029dd0 <cosf>
 800823e:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8008242:	eef0 9a48 	vmov.f32	s19, s16
 8008246:	eee0 9a09 	vfma.f32	s19, s0, s18
 800824a:	eeb0 0a68 	vmov.f32	s0, s17
 800824e:	f021 fe03 	bl	8029e58 <sinf>
 8008252:	eef0 0a48 	vmov.f32	s1, s16
 8008256:	eee0 0a09 	vfma.f32	s1, s0, s18
 800825a:	4650      	mov	r0, sl
 800825c:	eeb0 0a69 	vmov.f32	s0, s19
 8008260:	f7ff fa04 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8008264:	f884 92f1 	strb.w	r9, [r4, #753]	@ 0x2f1
 8008268:	e490      	b.n	8007b8c <_ZN14EasyScreenView15handleTickEventEv+0x404>
        if (serveDelayTicks > 0) {
 800826a:	f8d5 36d0 	ldr.w	r3, [r5, #1744]	@ 0x6d0
 800826e:	2b00      	cmp	r3, #0
 8008270:	dd09      	ble.n	8008286 <_ZN14EasyScreenView15handleTickEventEv+0xafe>
            serveDelayTicks--;
 8008272:	3b01      	subs	r3, #1
 8008274:	f8c5 36d0 	str.w	r3, [r5, #1744]	@ 0x6d0
            if (serveDelayTicks == 0) {
 8008278:	b92b      	cbnz	r3, 8008286 <_ZN14EasyScreenView15handleTickEventEv+0xafe>
 800827a:	2301      	movs	r3, #1
 800827c:	f884 3295 	strb.w	r3, [r4, #661]	@ 0x295
                ball.invalidate();
 8008280:	4638      	mov	r0, r7
 8008282:	f00b f9c1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
        if (servingPlayer == 1) {
 8008286:	f8d5 86d4 	ldr.w	r8, [r5, #1748]	@ 0x6d4
 800828a:	f1b8 0f01 	cmp.w	r8, #1
 800828e:	d179      	bne.n	8008384 <_ZN14EasyScreenView15handleTickEventEv+0xbfc>
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 8008290:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008294:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008298:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 800829c:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80082a0:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 80082a4:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80082a8:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 80082ac:	ee07 3a90 	vmov	s15, r3
 80082b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            line1.invalidate();
 80082b4:	f504 7933 	add.w	r9, r4, #716	@ 0x2cc
            ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80082b8:	edc6 7a00 	vstr	s15, [r6]
            line1.invalidate();
 80082bc:	4648      	mov	r0, r9
 80082be:	f00b f9a3 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80082c2:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 80082c6:	ee07 3a10 	vmov	s14, r3
 80082ca:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 80082ce:	edd3 7a00 	vldr	s15, [r3]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80082d2:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80082d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80082da:	ee06 3a90 	vmov	s13, r3
                        float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80082de:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80082e2:	eee7 7a06 	vfma.f32	s15, s14, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80082e6:	2321      	movs	r3, #33	@ 0x21
 80082e8:	4648      	mov	r0, r9
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80082ea:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80082ee:	ed96 7a00 	vldr	s14, [r6]
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80082f2:	9300      	str	r3, [sp, #0]
                        float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80082f4:	eea6 7a86 	vfma.f32	s14, s13, s12
                        line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80082f8:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 80082fc:	ee37 7a48 	vsub.f32	s14, s14, s16
 8008300:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8008304:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008308:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800830c:	ee17 2a10 	vmov	r2, s14
 8008310:	ee17 1a90 	vmov	r1, s15
 8008314:	b212      	sxth	r2, r2
 8008316:	b209      	sxth	r1, r1
 8008318:	f7fa feec 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                        line1.setStart(16, 16);
 800831c:	2210      	movs	r2, #16
 800831e:	4611      	mov	r1, r2
 8008320:	4648      	mov	r0, r9
 8008322:	f7ff f99f 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                        line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 8008326:	f205 63f4 	addw	r3, r5, #1780	@ 0x6f4
 800832a:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800832e:	6818      	ldr	r0, [r3, #0]
 8008330:	f7f8 f912 	bl	8000558 <__aeabi_f2d>
 8008334:	a352      	add	r3, pc, #328	@ (adr r3, 8008480 <_ZN14EasyScreenView15handleTickEventEv+0xcf8>)
 8008336:	e9d3 2300 	ldrd	r2, r3, [r3]
 800833a:	f7f8 f965 	bl	8000608 <__aeabi_dmul>
 800833e:	4b54      	ldr	r3, [pc, #336]	@ (8008490 <_ZN14EasyScreenView15handleTickEventEv+0xd08>)
 8008340:	2200      	movs	r2, #0
 8008342:	f7f8 fa8b 	bl	800085c <__aeabi_ddiv>
 8008346:	f7f8 fc0f 	bl	8000b68 <__aeabi_d2f>
 800834a:	ee08 0a90 	vmov	s17, r0
 800834e:	eeb0 0a68 	vmov.f32	s0, s17
 8008352:	f021 fd3d 	bl	8029dd0 <cosf>
 8008356:	eef0 9a48 	vmov.f32	s19, s16
 800835a:	eee0 9a09 	vfma.f32	s19, s0, s18
 800835e:	eeb0 0a68 	vmov.f32	s0, s17
 8008362:	f021 fd79 	bl	8029e58 <sinf>
 8008366:	eef0 0a48 	vmov.f32	s1, s16
 800836a:	eee0 0a09 	vfma.f32	s1, s0, s18
 800836e:	4648      	mov	r0, r9
 8008370:	eeb0 0a69 	vmov.f32	s0, s19
 8008374:	f7ff f97a 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8008378:	f884 82f1 	strb.w	r8, [r4, #753]	@ 0x2f1
                        line1.invalidate();
 800837c:	4648      	mov	r0, r9
                       line1_1.invalidate();
 800837e:	f00b f943 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8008382:	e417      	b.n	8007bb4 <_ZN14EasyScreenView15handleTickEventEv+0x42c>
        } else if (servingPlayer == 2) {
 8008384:	f1b8 0f02 	cmp.w	r8, #2
 8008388:	f47f ac14 	bne.w	8007bb4 <_ZN14EasyScreenView15handleTickEventEv+0x42c>
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800838c:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8008390:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8008394:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8008398:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800839c:	f9b4 227a 	ldrsh.w	r2, [r4, #634]	@ 0x27a
 80083a0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80083a4:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 80083a8:	ee07 3a90 	vmov	s15, r3
 80083ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
            line1_1.invalidate();
 80083b0:	f504 7854 	add.w	r8, r4, #848	@ 0x350
            ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 80083b4:	edc6 7a00 	vstr	s15, [r6]
            line1_1.invalidate();
 80083b8:	4640      	mov	r0, r8
 80083ba:	f00b f925 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                       float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80083be:	f9b4 3278 	ldrsh.w	r3, [r4, #632]	@ 0x278
 80083c2:	ee07 3a10 	vmov	s14, r3
 80083c6:	f205 63bc 	addw	r3, r5, #1724	@ 0x6bc
 80083ca:	edd3 7a00 	vldr	s15, [r3]
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80083ce:	f9b4 327a 	ldrsh.w	r3, [r4, #634]	@ 0x27a
                       float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80083d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80083d6:	ee06 3a90 	vmov	s13, r3
                       float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80083da:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80083de:	eee7 7a06 	vfma.f32	s15, s14, s12
                       line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80083e2:	2321      	movs	r3, #33	@ 0x21
 80083e4:	4640      	mov	r0, r8
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80083e6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80083ea:	ed96 7a00 	vldr	s14, [r6]
                       line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80083ee:	9300      	str	r3, [sp, #0]
                       float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80083f0:	eea6 7a86 	vfma.f32	s14, s13, s12
                       line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80083f4:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 80083f8:	ee37 7a48 	vsub.f32	s14, s14, s16
 80083fc:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8008400:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008404:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008408:	ee17 2a10 	vmov	r2, s14
 800840c:	ee17 1a90 	vmov	r1, s15
 8008410:	b212      	sxth	r2, r2
 8008412:	b209      	sxth	r1, r1
 8008414:	f7fa fe6e 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                       line1_1.setStart(16, 16);
 8008418:	2210      	movs	r2, #16
 800841a:	4611      	mov	r1, r2
 800841c:	4640      	mov	r0, r8
 800841e:	f7ff f921 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                       line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8008422:	f505 63df 	add.w	r3, r5, #1784	@ 0x6f8
 8008426:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800842a:	6818      	ldr	r0, [r3, #0]
 800842c:	f7f8 f894 	bl	8000558 <__aeabi_f2d>
 8008430:	a313      	add	r3, pc, #76	@ (adr r3, 8008480 <_ZN14EasyScreenView15handleTickEventEv+0xcf8>)
 8008432:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008436:	f7f8 f8e7 	bl	8000608 <__aeabi_dmul>
 800843a:	4b15      	ldr	r3, [pc, #84]	@ (8008490 <_ZN14EasyScreenView15handleTickEventEv+0xd08>)
 800843c:	2200      	movs	r2, #0
 800843e:	f7f8 fa0d 	bl	800085c <__aeabi_ddiv>
 8008442:	f7f8 fb91 	bl	8000b68 <__aeabi_d2f>
 8008446:	ee08 0a90 	vmov	s17, r0
 800844a:	eeb0 0a68 	vmov.f32	s0, s17
 800844e:	f021 fcbf 	bl	8029dd0 <cosf>
 8008452:	eef0 9a48 	vmov.f32	s19, s16
 8008456:	eee0 9a09 	vfma.f32	s19, s0, s18
 800845a:	eeb0 0a68 	vmov.f32	s0, s17
 800845e:	f021 fcfb 	bl	8029e58 <sinf>
 8008462:	eef0 0a48 	vmov.f32	s1, s16
 8008466:	eee0 0a09 	vfma.f32	s1, s0, s18
 800846a:	4640      	mov	r0, r8
 800846c:	eeb0 0a69 	vmov.f32	s0, s19
 8008470:	f7ff f8fc 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8008474:	2301      	movs	r3, #1
 8008476:	f884 3375 	strb.w	r3, [r4, #885]	@ 0x375
                       line1_1.invalidate();
 800847a:	4640      	mov	r0, r8
 800847c:	e77f      	b.n	800837e <_ZN14EasyScreenView15handleTickEventEv+0xbf6>
 800847e:	bf00      	nop
 8008480:	54442d18 	.word	0x54442d18
 8008484:	400921fb 	.word	0x400921fb
 8008488:	0802d07f 	.word	0x0802d07f
 800848c:	40020c00 	.word	0x40020c00
 8008490:	40668000 	.word	0x40668000

08008494 <_ZN18EndScreenPresenterD1Ev>:
    virtual void deactivate();
    int getWinner(int playerId);
    void handlePlayAgain();


    virtual ~EndScreenPresenter() {}
 8008494:	4770      	bx	lr

08008496 <_ZThn4_N18EndScreenPresenterD1Ev>:
 8008496:	3804      	subs	r0, #4
 8008498:	4770      	bx	lr

0800849a <_ZN18EndScreenPresenter8activateEv>:

}

void EndScreenPresenter::activate()
{
	view.updateWinner();
 800849a:	68c0      	ldr	r0, [r0, #12]
 800849c:	6803      	ldr	r3, [r0, #0]
 800849e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80084a0:	4718      	bx	r3

080084a2 <_ZN18EndScreenPresenter10deactivateEv>:
}

void EndScreenPresenter::deactivate()
{

}
 80084a2:	4770      	bx	lr

080084a4 <_ZN18EndScreenPresenterD0Ev>:
 80084a4:	b510      	push	{r4, lr}
 80084a6:	2110      	movs	r1, #16
 80084a8:	4604      	mov	r4, r0
 80084aa:	f021 fc1d 	bl	8029ce8 <_ZdlPvj>
 80084ae:	4620      	mov	r0, r4
 80084b0:	bd10      	pop	{r4, pc}

080084b2 <_ZThn4_N18EndScreenPresenterD0Ev>:
 80084b2:	f1a0 0004 	sub.w	r0, r0, #4
 80084b6:	e7f5      	b.n	80084a4 <_ZN18EndScreenPresenterD0Ev>

080084b8 <_ZN18EndScreenPresenterC1ER13EndScreenView>:
 80084b8:	2200      	movs	r2, #0
 80084ba:	6082      	str	r2, [r0, #8]
    : view(v)
 80084bc:	4a02      	ldr	r2, [pc, #8]	@ (80084c8 <_ZN18EndScreenPresenterC1ER13EndScreenView+0x10>)
 80084be:	6002      	str	r2, [r0, #0]
 80084c0:	3218      	adds	r2, #24
 80084c2:	6042      	str	r2, [r0, #4]
 80084c4:	60c1      	str	r1, [r0, #12]
}
 80084c6:	4770      	bx	lr
 80084c8:	0802da88 	.word	0x0802da88

080084cc <_ZN18EndScreenPresenter9getWinnerEi>:
int EndScreenPresenter::getWinner(int playerId)
{
    return model->getWinner(playerId);
 80084cc:	6880      	ldr	r0, [r0, #8]
 80084ce:	f002 bbd9 	b.w	800ac84 <_ZN5Model9getWinnerEi>

080084d2 <_ZN13EndScreenView14tearDownScreenEv>:


void EndScreenView::tearDownScreen()
{
    EndScreenViewBase::tearDownScreen();
}
 80084d2:	4770      	bx	lr

080084d4 <_ZN13EndScreenViewD1Ev>:

class EndScreenView : public EndScreenViewBase
{
public:
    EndScreenView();
    virtual ~EndScreenView() {}
 80084d4:	b510      	push	{r4, lr}
 80084d6:	4b03      	ldr	r3, [pc, #12]	@ (80084e4 <_ZN13EndScreenViewD1Ev+0x10>)
 80084d8:	6003      	str	r3, [r0, #0]
 80084da:	4604      	mov	r4, r0
 80084dc:	f7fb fb7f 	bl	8003bde <_ZN17EndScreenViewBaseD1Ev>
 80084e0:	4620      	mov	r0, r4
 80084e2:	bd10      	pop	{r4, pc}
 80084e4:	0802dab0 	.word	0x0802dab0

080084e8 <_ZN13EndScreenViewD0Ev>:
 80084e8:	b510      	push	{r4, lr}
 80084ea:	4604      	mov	r4, r0
 80084ec:	f7ff fff2 	bl	80084d4 <_ZN13EndScreenViewD1Ev>
 80084f0:	4620      	mov	r0, r4
 80084f2:	f44f 71cc 	mov.w	r1, #408	@ 0x198
 80084f6:	f021 fbf7 	bl	8029ce8 <_ZdlPvj>
 80084fa:	4620      	mov	r0, r4
 80084fc:	bd10      	pop	{r4, pc}
	...

08008500 <_ZN13EndScreenViewC1Ev>:
EndScreenView::EndScreenView()
 8008500:	b510      	push	{r4, lr}
 8008502:	4604      	mov	r4, r0
 8008504:	f7fb fbe4 	bl	8003cd0 <_ZN17EndScreenViewBaseC1Ev>
 8008508:	4b01      	ldr	r3, [pc, #4]	@ (8008510 <_ZN13EndScreenViewC1Ev+0x10>)
 800850a:	6023      	str	r3, [r4, #0]
}
 800850c:	4620      	mov	r0, r4
 800850e:	bd10      	pop	{r4, pc}
 8008510:	0802dab0 	.word	0x0802dab0

08008514 <_ZN13EndScreenView11setupScreenEv>:
    EndScreenViewBase::setupScreen();
 8008514:	f7fb bb64 	b.w	8003be0 <_ZN17EndScreenViewBase11setupScreenEv>

08008518 <_ZN13EndScreenView12updateWinnerEv>:

void EndScreenView::updateWinner()
{
 8008518:	b538      	push	{r3, r4, r5, lr}
    // Gán số vào playerwinBuffer
    int valueToDisplay = 0;
    if (presenter->getWinner(1)) {
 800851a:	2101      	movs	r1, #1
{
 800851c:	4604      	mov	r4, r0
    if (presenter->getWinner(1)) {
 800851e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
 8008520:	f7ff ffd4 	bl	80084cc <_ZN18EndScreenPresenter9getWinnerEi>
 8008524:	bb00      	cbnz	r0, 8008568 <_ZN13EndScreenView12updateWinnerEv+0x50>
        valueToDisplay = 1;
    } else if (presenter->getWinner(2)) {
 8008526:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8008528:	2102      	movs	r1, #2
 800852a:	f7ff ffcf 	bl	80084cc <_ZN18EndScreenPresenter9getWinnerEi>
 800852e:	1e03      	subs	r3, r0, #0
 8008530:	bf18      	it	ne
 8008532:	2301      	movne	r3, #1
 8008534:	005b      	lsls	r3, r3, #1
        valueToDisplay = 2;
    }
    Unicode::snprintf(playerwinBuffer, PLAYERWIN_SIZE, "%d", valueToDisplay);
 8008536:	f504 75ba 	add.w	r5, r4, #372	@ 0x174
 800853a:	4a0c      	ldr	r2, [pc, #48]	@ (800856c <_ZN13EndScreenView12updateWinnerEv+0x54>)
 800853c:	210a      	movs	r1, #10
 800853e:	4628      	mov	r0, r5
 8008540:	f012 fad0 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 8008544:	2300      	movs	r3, #0
 8008546:	f8c4 5128 	str.w	r5, [r4, #296]	@ 0x128
    playerwin.setWildcard(playerwinBuffer); // Liên kết lại buffer
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 800854a:	f104 05e0 	add.w	r5, r4, #224	@ 0xe0
    playerwinBuffer[PLAYERWIN_SIZE - 1] = 0; // Đảm bảo null terminator
 800854e:	f8a4 3186 	strh.w	r3, [r4, #390]	@ 0x186
    playerwin.resizeToCurrentText(); // Điều chỉnh kích thước
 8008552:	4628      	mov	r0, r5
 8008554:	f00b ff72 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8008558:	2301      	movs	r3, #1
 800855a:	f884 3105 	strb.w	r3, [r4, #261]	@ 0x105
    playerwin.setVisible(true); // Đảm bảo hiển thị
    playerwin.invalidate(); // Yêu cầu vẽ lại
 800855e:	4628      	mov	r0, r5
}
 8008560:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    playerwin.invalidate(); // Yêu cầu vẽ lại
 8008564:	f00f bf44 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
        valueToDisplay = 1;
 8008568:	2301      	movs	r3, #1
 800856a:	e7e4      	b.n	8008536 <_ZN13EndScreenView12updateWinnerEv+0x1e>
 800856c:	0802d07f 	.word	0x0802d07f

08008570 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008570:	4770      	bx	lr

08008572 <_ZN19FrontendApplicationD0Ev>:
 8008572:	b510      	push	{r4, lr}
 8008574:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008578:	4604      	mov	r4, r0
 800857a:	f021 fbb5 	bl	8029ce8 <_ZdlPvj>
 800857e:	4620      	mov	r0, r4
 8008580:	bd10      	pop	{r4, pc}

08008582 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008582:	b510      	push	{r4, lr}
 8008584:	4604      	mov	r4, r0
    {
        model.tick();
 8008586:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 800858a:	f002 fb6f 	bl	800ac6c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800858e:	4620      	mov	r0, r4
    }
 8008590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008594:	f00e bf38 	b.w	8017408 <_ZN8touchgfx11Application15handleTickEventEv>

08008598 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008598:	b510      	push	{r4, lr}
 800859a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800859c:	f7fb fd88 	bl	80040b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80085a0:	4b01      	ldr	r3, [pc, #4]	@ (80085a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80085a2:	6023      	str	r3, [r4, #0]
{

}
 80085a4:	4620      	mov	r0, r4
 80085a6:	bd10      	pop	{r4, pc}
 80085a8:	0802dae8 	.word	0x0802dae8

080085ac <_ZN24HardReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HardReadyScreenPresenter() {}
 80085ac:	4770      	bx	lr

080085ae <_ZThn4_N24HardReadyScreenPresenterD1Ev>:
 80085ae:	3804      	subs	r0, #4
 80085b0:	4770      	bx	lr

080085b2 <_ZN24HardReadyScreenPresenter10deactivateEv>:
}

void HardReadyScreenPresenter::activate()
{

}
 80085b2:	4770      	bx	lr

080085b4 <_ZN24HardReadyScreenPresenterD0Ev>:
 80085b4:	b510      	push	{r4, lr}
 80085b6:	2110      	movs	r1, #16
 80085b8:	4604      	mov	r4, r0
 80085ba:	f021 fb95 	bl	8029ce8 <_ZdlPvj>
 80085be:	4620      	mov	r0, r4
 80085c0:	bd10      	pop	{r4, pc}

080085c2 <_ZThn4_N24HardReadyScreenPresenterD0Ev>:
 80085c2:	f1a0 0004 	sub.w	r0, r0, #4
 80085c6:	e7f5      	b.n	80085b4 <_ZN24HardReadyScreenPresenterD0Ev>

080085c8 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView>:
 80085c8:	2200      	movs	r2, #0
 80085ca:	6082      	str	r2, [r0, #8]
    : view(v)
 80085cc:	4a02      	ldr	r2, [pc, #8]	@ (80085d8 <_ZN24HardReadyScreenPresenterC1ER19HardReadyScreenView+0x10>)
 80085ce:	6002      	str	r2, [r0, #0]
 80085d0:	3218      	adds	r2, #24
 80085d2:	6042      	str	r2, [r0, #4]
 80085d4:	60c1      	str	r1, [r0, #12]
}
 80085d6:	4770      	bx	lr
 80085d8:	0802db3c 	.word	0x0802db3c

080085dc <_ZN19HardReadyScreenView14tearDownScreenEv>:
}

void HardReadyScreenView::tearDownScreen()
{
    HardReadyScreenViewBase::tearDownScreen();
}
 80085dc:	4770      	bx	lr
	...

080085e0 <_ZN19HardReadyScreenViewD1Ev>:

class HardReadyScreenView : public HardReadyScreenViewBase
{
public:
    HardReadyScreenView();
    virtual ~HardReadyScreenView() {}
 80085e0:	b510      	push	{r4, lr}
 80085e2:	4b03      	ldr	r3, [pc, #12]	@ (80085f0 <_ZN19HardReadyScreenViewD1Ev+0x10>)
 80085e4:	6003      	str	r3, [r0, #0]
 80085e6:	4604      	mov	r4, r0
 80085e8:	f7fc fc78 	bl	8004edc <_ZN23HardReadyScreenViewBaseD1Ev>
 80085ec:	4620      	mov	r0, r4
 80085ee:	bd10      	pop	{r4, pc}
 80085f0:	0802db64 	.word	0x0802db64

080085f4 <_ZN19HardReadyScreenViewD0Ev>:
 80085f4:	b510      	push	{r4, lr}
 80085f6:	4604      	mov	r4, r0
 80085f8:	f7ff fff2 	bl	80085e0 <_ZN19HardReadyScreenViewD1Ev>
 80085fc:	4620      	mov	r0, r4
 80085fe:	f241 61d4 	movw	r1, #5844	@ 0x16d4
 8008602:	f021 fb71 	bl	8029ce8 <_ZdlPvj>
 8008606:	4620      	mov	r0, r4
 8008608:	bd10      	pop	{r4, pc}

0800860a <_ZN19HardReadyScreenView15handleTickEventEv>:
void HardReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 800860a:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 800860e:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8008610:	f8d2 16d0 	ldr.w	r1, [r2, #1744]	@ 0x6d0
 8008614:	2900      	cmp	r1, #0
 8008616:	dd07      	ble.n	8008628 <_ZN19HardReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8008618:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 800861a:	3901      	subs	r1, #1

	    }else{
	    	application().gotoHardScreenScreenNoTransition();
	    }

}
 800861c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 8008620:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 8008622:	f8c2 16d0 	str.w	r1, [r2, #1744]	@ 0x6d0
	        updateCounter(tickCounter);
 8008626:	4718      	bx	r3
 8008628:	f00e fe44 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
}
 800862c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoHardScreenScreenNoTransition();
 8008630:	f7fb bd92 	b.w	8004158 <_ZN23FrontendApplicationBase32gotoHardScreenScreenNoTransitionEv>

08008634 <_ZN19HardReadyScreenViewC1Ev>:
HardReadyScreenView::HardReadyScreenView()
 8008634:	b510      	push	{r4, lr}
 8008636:	4604      	mov	r4, r0
 8008638:	f7fc fca8 	bl	8004f8c <_ZN23HardReadyScreenViewBaseC1Ev>
 800863c:	4b04      	ldr	r3, [pc, #16]	@ (8008650 <_ZN19HardReadyScreenViewC1Ev+0x1c>)
 800863e:	6023      	str	r3, [r4, #0]
 8008640:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8008644:	22b4      	movs	r2, #180	@ 0xb4
 8008646:	f8c3 26d0 	str.w	r2, [r3, #1744]	@ 0x6d0
}
 800864a:	4620      	mov	r0, r4
 800864c:	bd10      	pop	{r4, pc}
 800864e:	bf00      	nop
 8008650:	0802db64 	.word	0x0802db64

08008654 <_ZN19HardReadyScreenView11setupScreenEv>:
{
 8008654:	b510      	push	{r4, lr}
 8008656:	4604      	mov	r4, r0
    HardReadyScreenViewBase::setupScreen();
 8008658:	f7fc fc3e 	bl	8004ed8 <_ZN23HardReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 800865c:	6823      	ldr	r3, [r4, #0]
 800865e:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8008662:	4620      	mov	r0, r4
 8008664:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008666:	f8d2 16d0 	ldr.w	r1, [r2, #1744]	@ 0x6d0
}
 800866a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 800866e:	4718      	bx	r3

08008670 <_ZN19HardReadyScreenView13updateCounterEi>:
void HardReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8008670:	2978      	cmp	r1, #120	@ 0x78
{
 8008672:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008674:	4605      	mov	r5, r0
	    if (value > 120)
 8008676:	dc23      	bgt.n	80086c0 <_ZN19HardReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8008678:	293c      	cmp	r1, #60	@ 0x3c
 800867a:	dc23      	bgt.n	80086c4 <_ZN19HardReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 800867c:	2900      	cmp	r1, #0
 800867e:	bfd4      	ite	le
 8008680:	2400      	movle	r4, #0
 8008682:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8008684:	f505 7779 	add.w	r7, r5, #996	@ 0x3e4
 8008688:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 800868a:	f505 767e 	add.w	r6, r5, #1016	@ 0x3f8
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 800868e:	4a0e      	ldr	r2, [pc, #56]	@ (80086c8 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 8008690:	210a      	movs	r1, #10
 8008692:	4638      	mov	r0, r7
 8008694:	f012 fa26 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8008698:	4623      	mov	r3, r4
 800869a:	4a0b      	ldr	r2, [pc, #44]	@ (80086c8 <_ZN19HardReadyScreenView13updateCounterEi+0x58>)
 800869c:	210a      	movs	r1, #10
 800869e:	4630      	mov	r0, r6
 80086a0:	f012 fa20 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 80086a4:	f505 7027 	add.w	r0, r5, #668	@ 0x29c
 80086a8:	f8c5 72e4 	str.w	r7, [r5, #740]	@ 0x2e4
 80086ac:	f8c5 6330 	str.w	r6, [r5, #816]	@ 0x330
 80086b0:	f00f fe9e 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 80086b4:	f505 703a 	add.w	r0, r5, #744	@ 0x2e8
}
 80086b8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 80086bc:	f00f be98 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 80086c0:	2403      	movs	r4, #3
 80086c2:	e7df      	b.n	8008684 <_ZN19HardReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 80086c4:	2402      	movs	r4, #2
 80086c6:	e7dd      	b.n	8008684 <_ZN19HardReadyScreenView13updateCounterEi+0x14>
 80086c8:	0802d07f 	.word	0x0802d07f

080086cc <_ZN19HardScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~HardScreenPresenter() {}
 80086cc:	4770      	bx	lr

080086ce <_ZThn4_N19HardScreenPresenterD1Ev>:
 80086ce:	3804      	subs	r0, #4
 80086d0:	4770      	bx	lr

080086d2 <_ZN19HardScreenPresenter10deactivateEv>:
}

void HardScreenPresenter::activate()
{

}
 80086d2:	4770      	bx	lr

080086d4 <_ZN19HardScreenPresenterD0Ev>:
 80086d4:	b510      	push	{r4, lr}
 80086d6:	2110      	movs	r1, #16
 80086d8:	4604      	mov	r4, r0
 80086da:	f021 fb05 	bl	8029ce8 <_ZdlPvj>
 80086de:	4620      	mov	r0, r4
 80086e0:	bd10      	pop	{r4, pc}

080086e2 <_ZThn4_N19HardScreenPresenterD0Ev>:
 80086e2:	f1a0 0004 	sub.w	r0, r0, #4
 80086e6:	e7f5      	b.n	80086d4 <_ZN19HardScreenPresenterD0Ev>

080086e8 <_ZN19HardScreenPresenterC1ER14HardScreenView>:
 80086e8:	2200      	movs	r2, #0
 80086ea:	6082      	str	r2, [r0, #8]
    : view(v)
 80086ec:	4a02      	ldr	r2, [pc, #8]	@ (80086f8 <_ZN19HardScreenPresenterC1ER14HardScreenView+0x10>)
 80086ee:	6002      	str	r2, [r0, #0]
 80086f0:	3218      	adds	r2, #24
 80086f2:	6042      	str	r2, [r0, #4]
 80086f4:	60c1      	str	r1, [r0, #12]
}
 80086f6:	4770      	bx	lr
 80086f8:	0802db9c 	.word	0x0802db9c

080086fc <_ZN19HardScreenPresenter13goToEndScreenEi>:
void HardScreenPresenter::handleTickEvent()
{

}
void HardScreenPresenter::goToEndScreen(int winner)
{
 80086fc:	b508      	push	{r3, lr}
    model->setWinner(winner);
 80086fe:	6880      	ldr	r0, [r0, #8]
 8008700:	f002 faba 	bl	800ac78 <_ZN5Model9setWinnerEi>
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8008704:	f00e fdd6 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008708:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 800870c:	f7fb bd84 	b.w	8004218 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08008710 <_ZN14HardScreenView14tearDownScreenEv>:
}

void HardScreenView::tearDownScreen()
{
    HardScreenViewBase::tearDownScreen();
}
 8008710:	4770      	bx	lr
	...

08008714 <_ZN14HardScreenViewD1Ev>:

class HardScreenView : public HardScreenViewBase
{
public:
    HardScreenView();
    virtual ~HardScreenView() {}
 8008714:	b510      	push	{r4, lr}
 8008716:	4b03      	ldr	r3, [pc, #12]	@ (8008724 <_ZN14HardScreenViewD1Ev+0x10>)
 8008718:	6003      	str	r3, [r0, #0]
 800871a:	4604      	mov	r4, r0
 800871c:	f7fc ff12 	bl	8005544 <_ZN18HardScreenViewBaseD1Ev>
 8008720:	4620      	mov	r0, r4
 8008722:	bd10      	pop	{r4, pc}
 8008724:	0802dbc4 	.word	0x0802dbc4

08008728 <_ZN14HardScreenViewD0Ev>:
 8008728:	b510      	push	{r4, lr}
 800872a:	4604      	mov	r4, r0
 800872c:	f7ff fff2 	bl	8008714 <_ZN14HardScreenViewD1Ev>
 8008730:	4620      	mov	r0, r4
 8008732:	f641 0114 	movw	r1, #6164	@ 0x1814
 8008736:	f021 fad7 	bl	8029ce8 <_ZdlPvj>
 800873a:	4620      	mov	r0, r4
 800873c:	bd10      	pop	{r4, pc}
	...

08008740 <_ZN14HardScreenViewC1Ev>:
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.6f), ballVelY(1.6f),
 8008740:	b510      	push	{r4, lr}
 8008742:	4604      	mov	r4, r0
								  desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),lineAngle1(0.0f), lineAngle2(0.0f)
 8008744:	f7fc ff18 	bl	8005578 <_ZN18HardScreenViewBaseC1Ev>
 8008748:	4b19      	ldr	r3, [pc, #100]	@ (80087b0 <_ZN14HardScreenViewC1Ev+0x70>)
 800874a:	6023      	str	r3, [r4, #0]
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.6f), ballVelY(1.6f),
 800874c:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8008750:	f203 72d4 	addw	r2, r3, #2004	@ 0x7d4
 8008754:	4917      	ldr	r1, [pc, #92]	@ (80087b4 <_ZN14HardScreenViewC1Ev+0x74>)
 8008756:	6011      	str	r1, [r2, #0]
 8008758:	f503 62fb 	add.w	r2, r3, #2008	@ 0x7d8
 800875c:	4916      	ldr	r1, [pc, #88]	@ (80087b8 <_ZN14HardScreenViewC1Ev+0x78>)
 800875e:	6011      	str	r1, [r2, #0]
 8008760:	f203 71dc 	addw	r1, r3, #2012	@ 0x7dc
 8008764:	4a15      	ldr	r2, [pc, #84]	@ (80087bc <_ZN14HardScreenViewC1Ev+0x7c>)
 8008766:	600a      	str	r2, [r1, #0]
 8008768:	f504 51bf 	add.w	r1, r4, #6112	@ 0x17e0
}
 800876c:	4620      	mov	r0, r4
HardScreenView::HardScreenView():ballX(160), ballY(120), ballVelX(1.6f), ballVelY(1.6f),
 800876e:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8008770:	2200      	movs	r2, #0
								  desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),lineAngle1(0.0f), lineAngle2(0.0f)
 8008772:	f603 0104 	addw	r1, r3, #2052	@ 0x804
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8008776:	f883 27e4 	strb.w	r2, [r3, #2020]	@ 0x7e4
 800877a:	f8c3 27e8 	str.w	r2, [r3, #2024]	@ 0x7e8
 800877e:	f8c3 27ec 	str.w	r2, [r3, #2028]	@ 0x7ec
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false),
 8008782:	f8c3 27f0 	str.w	r2, [r3, #2032]	@ 0x7f0
 8008786:	f8c3 27f4 	str.w	r2, [r3, #2036]	@ 0x7f4
 800878a:	f883 27f8 	strb.w	r2, [r3, #2040]	@ 0x7f8
 800878e:	f8c3 27fc 	str.w	r2, [r3, #2044]	@ 0x7fc
 8008792:	f883 2800 	strb.w	r2, [r3, #2048]	@ 0x800
								  desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),lineAngle1(0.0f), lineAngle2(0.0f)
 8008796:	2200      	movs	r2, #0
 8008798:	600a      	str	r2, [r1, #0]
 800879a:	f603 0108 	addw	r1, r3, #2056	@ 0x808
 800879e:	600a      	str	r2, [r1, #0]
 80087a0:	f603 010c 	addw	r1, r3, #2060	@ 0x80c
 80087a4:	f503 6301 	add.w	r3, r3, #2064	@ 0x810
 80087a8:	600a      	str	r2, [r1, #0]
 80087aa:	601a      	str	r2, [r3, #0]
}
 80087ac:	bd10      	pop	{r4, pc}
 80087ae:	bf00      	nop
 80087b0:	0802dbc4 	.word	0x0802dbc4
 80087b4:	43200000 	.word	0x43200000
 80087b8:	42f00000 	.word	0x42f00000
 80087bc:	3fcccccd 	.word	0x3fcccccd

080087c0 <_ZN14HardScreenView11setupScreenEv>:
{
 80087c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80087c4:	4605      	mov	r5, r0
    score1 = 0;
 80087c6:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 80087ca:	f204 77d4 	addw	r7, r4, #2004	@ 0x7d4
    HardScreenViewBase::setupScreen();
 80087ce:	f7fc feb7 	bl	8005540 <_ZN18HardScreenViewBase11setupScreenEv>
	ballY = 120;
 80087d2:	f504 68fb 	add.w	r8, r4, #2008	@ 0x7d8
    score1 = 0;
 80087d6:	2300      	movs	r3, #0
	ballX = 160;
 80087d8:	4a34      	ldr	r2, [pc, #208]	@ (80088ac <_ZN14HardScreenView11setupScreenEv+0xec>)
    score1 = 0;
 80087da:	f8c4 37f0 	str.w	r3, [r4, #2032]	@ 0x7f0
	score2 = 0;
 80087de:	f8c4 37f4 	str.w	r3, [r4, #2036]	@ 0x7f4
	gameOver = false;
 80087e2:	f884 37f8 	strb.w	r3, [r4, #2040]	@ 0x7f8
	ballVelX = 1.6f;
 80087e6:	f204 71dc 	addw	r1, r4, #2012	@ 0x7dc
	ballX = 160;
 80087ea:	603a      	str	r2, [r7, #0]
	ballY = 120;
 80087ec:	4a30      	ldr	r2, [pc, #192]	@ (80088b0 <_ZN14HardScreenView11setupScreenEv+0xf0>)
 80087ee:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.6f;
 80087f2:	4a30      	ldr	r2, [pc, #192]	@ (80088b4 <_ZN14HardScreenView11setupScreenEv+0xf4>)
 80087f4:	600a      	str	r2, [r1, #0]
	ballVelY = 1.6f;
 80087f6:	f505 51bf 	add.w	r1, r5, #6112	@ 0x17e0
	line1.invalidate();
 80087fa:	f505 7079 	add.w	r0, r5, #996	@ 0x3e4
	ballVelY = 1.6f;
 80087fe:	600a      	str	r2, [r1, #0]
    desiredBallVelY1 = 0.0f;
 8008800:	f604 0104 	addw	r1, r4, #2052	@ 0x804
 8008804:	2200      	movs	r2, #0
	waitingForServe = false;
 8008806:	f884 37e4 	strb.w	r3, [r4, #2020]	@ 0x7e4
	serveDelayTicks = 0;
 800880a:	f8c4 37e8 	str.w	r3, [r4, #2024]	@ 0x7e8
	servingPlayer = 0;
 800880e:	f8c4 37ec 	str.w	r3, [r4, #2028]	@ 0x7ec
    buzzerBeepCounter = 0;
 8008812:	f8c4 37fc 	str.w	r3, [r4, #2044]	@ 0x7fc
    buzzerBeepState = false;
 8008816:	f884 3800 	strb.w	r3, [r4, #2048]	@ 0x800
    desiredBallVelY1 = 0.0f;
 800881a:	600a      	str	r2, [r1, #0]
	desiredBallVelY2 = 0.0f;
 800881c:	f604 0108 	addw	r1, r4, #2056	@ 0x808
	ball.invalidate();
 8008820:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
	desiredBallVelY2 = 0.0f;
 8008824:	600a      	str	r2, [r1, #0]
	lineAngle1 = 0.0f;
 8008826:	f604 010c 	addw	r1, r4, #2060	@ 0x80c
 800882a:	600a      	str	r2, [r1, #0]
	lineAngle2 = 0.0f;
 800882c:	f504 6101 	add.w	r1, r4, #2064	@ 0x810
 8008830:	600a      	str	r2, [r1, #0]
 8008832:	f885 3409 	strb.w	r3, [r5, #1033]	@ 0x409
 8008836:	f885 348d 	strb.w	r3, [r5, #1165]	@ 0x48d
	line1.invalidate();
 800883a:	f00a fee5 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	line1_1.invalidate();
 800883e:	f505 608d 	add.w	r0, r5, #1128	@ 0x468
 8008842:	f00a fee1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.invalidate();
 8008846:	4630      	mov	r0, r6
 8008848:	f00a fede 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 800884c:	ed98 7a00 	vldr	s14, [r8]
 8008850:	edd7 7a00 	vldr	s15, [r7]
 8008854:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008858:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800885c:	ee17 3a10 	vmov	r3, s14
 8008860:	b21a      	sxth	r2, r3
 8008862:	ee17 3a90 	vmov	r3, s15
 8008866:	4630      	mov	r0, r6
 8008868:	b219      	sxth	r1, r3
 800886a:	f7f9 fa0c 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 800886e:	4630      	mov	r0, r6
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008870:	4e11      	ldr	r6, [pc, #68]	@ (80088b8 <_ZN14HardScreenView11setupScreenEv+0xf8>)
	ball.invalidate();
 8008872:	f00a fec9 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 8008876:	f8d4 37f0 	ldr.w	r3, [r4, #2032]	@ 0x7f0
 800887a:	4632      	mov	r2, r6
 800887c:	210a      	movs	r1, #10
 800887e:	f505 60a0 	add.w	r0, r5, #1280	@ 0x500
 8008882:	f012 f92f 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score1.invalidate();
 8008886:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 800888a:	f00f fdb1 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 800888e:	f8d4 37f4 	ldr.w	r3, [r4, #2036]	@ 0x7f4
 8008892:	4632      	mov	r2, r6
 8008894:	f205 40ec 	addw	r0, r5, #1260	@ 0x4ec
 8008898:	210a      	movs	r1, #10
 800889a:	f012 f923 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	HardScreenViewBase::score2.invalidate();
 800889e:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 80088a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	HardScreenViewBase::score2.invalidate();
 80088a6:	f00f bda3 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80088aa:	bf00      	nop
 80088ac:	43200000 	.word	0x43200000
 80088b0:	42f00000 	.word	0x42f00000
 80088b4:	3fcccccd 	.word	0x3fcccccd
 80088b8:	0802d07f 	.word	0x0802d07f
 80088bc:	00000000 	.word	0x00000000

080088c0 <_ZN14HardScreenView15handleTickEventEv>:

void HardScreenView::handleTickEvent()
{
 80088c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

    if (gameOver) {
 80088c4:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
{
 80088c8:	ed2d 8b04 	vpush	{d8-d9}
    if (gameOver) {
 80088cc:	f895 37f8 	ldrb.w	r3, [r5, #2040]	@ 0x7f8
{
 80088d0:	b085      	sub	sp, #20
 80088d2:	4604      	mov	r4, r0
    if (gameOver) {
 80088d4:	b18b      	cbz	r3, 80088fa <_ZN14HardScreenView15handleTickEventEv+0x3a>
 80088d6:	2300      	movs	r3, #0
 80088d8:	f880 3409 	strb.w	r3, [r0, #1033]	@ 0x409
 80088dc:	f880 348d 	strb.w	r3, [r0, #1165]	@ 0x48d
    	line1.setVisible(false);
		line1_1.setVisible(false);
		line1.invalidate();
 80088e0:	f500 7079 	add.w	r0, r0, #996	@ 0x3e4
 80088e4:	f00a fe90 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
		line1_1.invalidate();
 80088e8:	f504 608d 	add.w	r0, r4, #1128	@ 0x468
                           line1_1.invalidate();
            }
            ball.moveTo(ballX, ballY);
            ball.invalidate();
        }
}
 80088ec:	b005      	add	sp, #20
 80088ee:	ecbd 8b04 	vpop	{d8-d9}
 80088f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		line1_1.invalidate();
 80088f6:	f00a be87 	b.w	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	if (buzzerBeepCounter > 0) {
 80088fa:	f8d5 37fc 	ldr.w	r3, [r5, #2044]	@ 0x7fc
 80088fe:	2b00      	cmp	r3, #0
 8008900:	dd1b      	ble.n	800893a <_ZN14HardScreenView15handleTickEventEv+0x7a>
		if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 8008902:	2206      	movs	r2, #6
 8008904:	fb93 f1f2 	sdiv	r1, r3, r2
 8008908:	fb02 3311 	mls	r3, r2, r1, r3
 800890c:	b953      	cbnz	r3, 8008924 <_ZN14HardScreenView15handleTickEventEv+0x64>
			buzzerBeepState = !buzzerBeepState;
 800890e:	f895 2800 	ldrb.w	r2, [r5, #2048]	@ 0x800
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8008912:	4813      	ldr	r0, [pc, #76]	@ (8008960 <_ZN14HardScreenView15handleTickEventEv+0xa0>)
			buzzerBeepState = !buzzerBeepState;
 8008914:	f082 0201 	eor.w	r2, r2, #1
 8008918:	f885 2800 	strb.w	r2, [r5, #2048]	@ 0x800
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 800891c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008920:	f003 f968 	bl	800bbf4 <HAL_GPIO_WritePin>
		buzzerBeepCounter--;
 8008924:	f8d5 27fc 	ldr.w	r2, [r5, #2044]	@ 0x7fc
 8008928:	3a01      	subs	r2, #1
 800892a:	f8c5 27fc 	str.w	r2, [r5, #2044]	@ 0x7fc
		if (buzzerBeepCounter == 0) {
 800892e:	b922      	cbnz	r2, 800893a <_ZN14HardScreenView15handleTickEventEv+0x7a>
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 8008930:	480b      	ldr	r0, [pc, #44]	@ (8008960 <_ZN14HardScreenView15handleTickEventEv+0xa0>)
 8008932:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008936:	f003 f95d 	bl	800bbf4 <HAL_GPIO_WritePin>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 800893a:	4f0a      	ldr	r7, [pc, #40]	@ (8008964 <_ZN14HardScreenView15handleTickEventEv+0xa4>)
 800893c:	e02b      	b.n	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
        switch (command) {
 800893e:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8008942:	2b09      	cmp	r3, #9
 8008944:	d827      	bhi.n	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 8008946:	e8df f013 	tbh	[pc, r3, lsl #1]
 800894a:	000f      	.short	0x000f
 800894c:	02670243 	.word	0x02670243
 8008950:	024c0303 	.word	0x024c0303
 8008954:	0322025f 	.word	0x0322025f
 8008958:	03eb03b9 	.word	0x03eb03b9
 800895c:	043a      	.short	0x043a
 800895e:	bf00      	nop
 8008960:	40020c00 	.word	0x40020c00
 8008964:	20002dc0 	.word	0x20002dc0
        return rect.y;
 8008968:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY=paddle1.getY()+2;
 800896c:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 800896e:	b236      	sxth	r6, r6
 8008970:	2ec6      	cmp	r6, #198	@ 0xc6
 8008972:	bfa8      	it	ge
 8008974:	26c6      	movge	r6, #198	@ 0xc6
                    if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008976:	429e      	cmp	r6, r3
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008978:	d00d      	beq.n	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
						paddle1.invalidate();
 800897a:	f104 08f0 	add.w	r8, r4, #240	@ 0xf0
 800897e:	4640      	mov	r0, r8
 8008980:	f00f fd36 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8008984:	f9b4 10f4 	ldrsh.w	r1, [r4, #244]	@ 0xf4
 8008988:	4632      	mov	r2, r6
						paddle2.moveTo(paddle2.getX(), newY);
 800898a:	4640      	mov	r0, r8
 800898c:	f7f9 f97b 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8008990:	4640      	mov	r0, r8
 8008992:	f00f fd2d 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8008996:	2300      	movs	r3, #0
 8008998:	6838      	ldr	r0, [r7, #0]
 800899a:	461a      	mov	r2, r3
 800899c:	f10d 010f 	add.w	r1, sp, #15
 80089a0:	f005 fc95 	bl	800e2ce <osMessageQueueGet>
 80089a4:	2800      	cmp	r0, #0
 80089a6:	d0ca      	beq.n	800893e <_ZN14HardScreenView15handleTickEventEv+0x7e>
        if (!waitingForServe) {
 80089a8:	f895 97e4 	ldrb.w	r9, [r5, #2020]	@ 0x7e4
 80089ac:	f504 7736 	add.w	r7, r4, #728	@ 0x2d8
 80089b0:	f1b9 0f00 	cmp.w	r9, #0
 80089b4:	f040 87e6 	bne.w	8009984 <_ZN14HardScreenView15handleTickEventEv+0x10c4>
            ball.invalidate();
 80089b8:	4638      	mov	r0, r7
 80089ba:	f00a fe25 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 80089be:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 80089c2:	ed93 6a00 	vldr	s12, [r3]
 80089c6:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 80089ca:	edd3 6a00 	vldr	s13, [r3]
 80089ce:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 80089d2:	f505 62fb 	add.w	r2, r5, #2008	@ 0x7d8
            ballX += ballVelX;
 80089d6:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 80089da:	f504 51bf 	add.w	r1, r4, #6112	@ 0x17e0
 80089de:	edd1 7a00 	vldr	s15, [r1]
 80089e2:	ed92 7a00 	vldr	s14, [r2]
 80089e6:	ee37 7a87 	vadd.f32	s14, s15, s14
            if (ballY < 0) {
 80089ea:	f04f 0800 	mov.w	r8, #0
 80089ee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80089f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 80089f6:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 80089fa:	f140 8433 	bpl.w	8009264 <_ZN14HardScreenView15handleTickEventEv+0x9a4>
                ballY = 0;
 80089fe:	f8c2 8000 	str.w	r8, [r2]
                ballVelY = -ballVelY;
 8008a02:	eef1 7a67 	vneg.f32	s15, s15
 8008a06:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 8008a0a:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8008a0e:	f9b4 30f8 	ldrsh.w	r3, [r4, #248]	@ 0xf8
 8008a12:	4413      	add	r3, r2
 8008a14:	ee07 3a90 	vmov	s15, r3
 8008a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                ballY + ball.getHeight() >= paddle1.getY() &&
 8008a1c:	eef4 6ae7 	vcmpe.f32	s13, s15
 8008a20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a24:	d835      	bhi.n	8008a92 <_ZN14HardScreenView15handleTickEventEv+0x1d2>
                ballX >= paddle1.getX() &&
 8008a26:	ee07 2a10 	vmov	s14, r2
 8008a2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 8008a2e:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008a32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a36:	db2c      	blt.n	8008a92 <_ZN14HardScreenView15handleTickEventEv+0x1d2>
                ballY + ball.getHeight() >= paddle1.getY() &&
 8008a38:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008a3c:	edd3 6a00 	vldr	s13, [r3]
 8008a40:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008a44:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
 8008a48:	ee07 3a10 	vmov	s14, r3
 8008a4c:	ee05 2a90 	vmov	s11, r2
 8008a50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008a54:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008a58:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX >= paddle1.getX() &&
 8008a5c:	eeb4 7ae5 	vcmpe.f32	s14, s11
 8008a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a64:	db15      	blt.n	8008a92 <_ZN14HardScreenView15handleTickEventEv+0x1d2>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 8008a66:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8008a6a:	4413      	add	r3, r2
 8008a6c:	ee07 3a10 	vmov	s14, r3
 8008a70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle1.getY() &&
 8008a74:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a7c:	d809      	bhi.n	8008a92 <_ZN14HardScreenView15handleTickEventEv+0x1d2>
                ballX = paddle1.getX() + paddle1.getWidth();
 8008a7e:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8008a82:	edc3 7a00 	vstr	s15, [r3]
                ballVelX = -ballVelX;
 8008a86:	eeb1 6a46 	vneg.f32	s12, s12
 8008a8a:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008a8e:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 8008a92:	f9b4 02e0 	ldrsh.w	r0, [r4, #736]	@ 0x2e0
        return rect.x;
 8008a96:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008a9a:	ee07 0a90 	vmov	s15, r0
 8008a9e:	f205 71d4 	addw	r1, r5, #2004	@ 0x7d4
 8008aa2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008aa6:	edd1 6a00 	vldr	s13, [r1]
 8008aaa:	ee07 3a10 	vmov	s14, r3
 8008aae:	ee77 6aa6 	vadd.f32	s13, s15, s13
 8008ab2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 8008ab6:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008aba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008abe:	db3d      	blt.n	8008b3c <_ZN14HardScreenView15handleTickEventEv+0x27c>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8008ac0:	f9b4 2124 	ldrsh.w	r2, [r4, #292]	@ 0x124
 8008ac4:	441a      	add	r2, r3
 8008ac6:	ee07 2a10 	vmov	s14, r2
 8008aca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 8008ace:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008ad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ad6:	d831      	bhi.n	8008b3c <_ZN14HardScreenView15handleTickEventEv+0x27c>
                ballY + ball.getHeight() >= paddle2.getY() &&
 8008ad8:	f505 62fb 	add.w	r2, r5, #2008	@ 0x7d8
 8008adc:	edd2 6a00 	vldr	s13, [r2]
 8008ae0:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
        return rect.y;
 8008ae4:	f9b4 6122 	ldrsh.w	r6, [r4, #290]	@ 0x122
 8008ae8:	ee07 2a10 	vmov	s14, r2
 8008aec:	ee06 6a10 	vmov	s12, r6
 8008af0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008af4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8008af8:	ee37 7a26 	vadd.f32	s14, s14, s13
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 8008afc:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8008b00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b04:	db1a      	blt.n	8008b3c <_ZN14HardScreenView15handleTickEventEv+0x27c>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 8008b06:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8008b0a:	4432      	add	r2, r6
 8008b0c:	ee07 2a10 	vmov	s14, r2
 8008b10:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 8008b14:	eef4 6ac7 	vcmpe.f32	s13, s14
 8008b18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b1c:	d80e      	bhi.n	8008b3c <_ZN14HardScreenView15handleTickEventEv+0x27c>
                ballX = paddle2.getX() - ball.getWidth();
 8008b1e:	1a1b      	subs	r3, r3, r0
 8008b20:	ee07 3a10 	vmov	s14, r3
 8008b24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 8008b28:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
                ballX = paddle2.getX() - ball.getWidth();
 8008b2c:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 8008b30:	ed93 7a00 	vldr	s14, [r3]
 8008b34:	eeb1 7a47 	vneg.f32	s14, s14
 8008b38:	ed83 7a00 	vstr	s14, [r3]
        return rect.x;
 8008b3c:	f9b4 2338 	ldrsh.w	r2, [r4, #824]	@ 0x338
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8008b40:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8008b44:	ed93 7a00 	vldr	s14, [r3]
 8008b48:	ee06 2a90 	vmov	s13, r2
 8008b4c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b50:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1.getY() &&
 8008b54:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b5c:	f2c0 839c 	blt.w	8009298 <_ZN14HardScreenView15handleTickEventEv+0x9d8>
                       ballX <= image1.getX() + image1.getWidth() &&
 8008b60:	f9b4 333c 	ldrsh.w	r3, [r4, #828]	@ 0x33c
 8008b64:	4413      	add	r3, r2
 8008b66:	ee06 3a90 	vmov	s13, r3
 8008b6a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1.getX() &&
 8008b6e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8008b72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b76:	f200 838f 	bhi.w	8009298 <_ZN14HardScreenView15handleTickEventEv+0x9d8>
                       ballY + ball.getHeight() >= image1.getY() &&
 8008b7a:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008b7e:	ed93 6a00 	vldr	s12, [r3]
 8008b82:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008b86:	f9b4 233a 	ldrsh.w	r2, [r4, #826]	@ 0x33a
 8008b8a:	ee06 3a90 	vmov	s13, r3
 8008b8e:	ee05 2a90 	vmov	s11, r2
 8008b92:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008b96:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008b9a:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1.getX() + image1.getWidth() &&
 8008b9e:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008ba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ba6:	f2c0 8377 	blt.w	8009298 <_ZN14HardScreenView15handleTickEventEv+0x9d8>
                       ballY <= image1.getY() + image1.getHeight()) {
 8008baa:	f9b4 333e 	ldrsh.w	r3, [r4, #830]	@ 0x33e
 8008bae:	4413      	add	r3, r2
 8008bb0:	ee06 3a90 	vmov	s13, r3
 8008bb4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1.getY() &&
 8008bb8:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8008bbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bc0:	f200 836a 	bhi.w	8009298 <_ZN14HardScreenView15handleTickEventEv+0x9d8>
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 8008bc4:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008bc8:	edd3 6a00 	vldr	s13, [r3]
 8008bcc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8008bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bd4:	f340 8362 	ble.w	800929c <_ZN14HardScreenView15handleTickEventEv+0x9dc>
 8008bd8:	2602      	movs	r6, #2
                       imageCollision = true;
 8008bda:	f04f 0901 	mov.w	r9, #1
        return rect.x;
 8008bde:	f9b4 2364 	ldrsh.w	r2, [r4, #868]	@ 0x364
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 8008be2:	ee06 2a90 	vmov	s13, r2
 8008be6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8008bea:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bf2:	db3c      	blt.n	8008c6e <_ZN14HardScreenView15handleTickEventEv+0x3ae>
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 8008bf4:	f9b4 3368 	ldrsh.w	r3, [r4, #872]	@ 0x368
 8008bf8:	4413      	add	r3, r2
 8008bfa:	ee06 3a90 	vmov	s13, r3
 8008bfe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image1_1.getX() &&
 8008c02:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8008c06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c0a:	d830      	bhi.n	8008c6e <_ZN14HardScreenView15handleTickEventEv+0x3ae>
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8008c0c:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008c10:	ed93 6a00 	vldr	s12, [r3]
 8008c14:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008c18:	f9b4 2366 	ldrsh.w	r2, [r4, #870]	@ 0x366
 8008c1c:	ee06 3a90 	vmov	s13, r3
 8008c20:	ee05 2a90 	vmov	s11, r2
 8008c24:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008c28:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008c2c:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image1_1.getX() + image1_1.getWidth() &&
 8008c30:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c38:	db19      	blt.n	8008c6e <_ZN14HardScreenView15handleTickEventEv+0x3ae>
                       ballY <= image1_1.getY() + image1_1.getHeight()) {
 8008c3a:	f9b4 336a 	ldrsh.w	r3, [r4, #874]	@ 0x36a
 8008c3e:	4413      	add	r3, r2
 8008c40:	ee06 3a90 	vmov	s13, r3
 8008c44:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image1_1.getY() &&
 8008c48:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8008c4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c50:	d80d      	bhi.n	8008c6e <_ZN14HardScreenView15handleTickEventEv+0x3ae>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008c52:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008c56:	edd3 6a00 	vldr	s13, [r3]
 8008c5a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8008c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c62:	bfd3      	iteet	le
 8008c64:	2601      	movle	r6, #1
 8008c66:	2602      	movgt	r6, #2
                       imageCollision = true;
 8008c68:	f04f 0901 	movgt.w	r9, #1
 8008c6c:	46b1      	movle	r9, r6
        return rect.x;
 8008c6e:	f9b4 2390 	ldrsh.w	r2, [r4, #912]	@ 0x390
                   if (ballX + ball.getWidth() >= image2.getX() &&
 8008c72:	ee06 2a90 	vmov	s13, r2
 8008c76:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image2.getY() &&
 8008c7a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008c7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c82:	db3c      	blt.n	8008cfe <_ZN14HardScreenView15handleTickEventEv+0x43e>
                       ballX <= image2.getX() + image2.getWidth() &&
 8008c84:	f9b4 3394 	ldrsh.w	r3, [r4, #916]	@ 0x394
 8008c88:	4413      	add	r3, r2
 8008c8a:	ee06 3a90 	vmov	s13, r3
 8008c8e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                   if (ballX + ball.getWidth() >= image2.getX() &&
 8008c92:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8008c96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c9a:	d830      	bhi.n	8008cfe <_ZN14HardScreenView15handleTickEventEv+0x43e>
                       ballY + ball.getHeight() >= image2.getY() &&
 8008c9c:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008ca0:	ed93 6a00 	vldr	s12, [r3]
 8008ca4:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008ca8:	f9b4 2392 	ldrsh.w	r2, [r4, #914]	@ 0x392
 8008cac:	ee06 3a90 	vmov	s13, r3
 8008cb0:	ee05 2a90 	vmov	s11, r2
 8008cb4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008cb8:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8008cbc:	ee76 6a86 	vadd.f32	s13, s13, s12
                       ballX <= image2.getX() + image2.getWidth() &&
 8008cc0:	eef4 6ae5 	vcmpe.f32	s13, s11
 8008cc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cc8:	db19      	blt.n	8008cfe <_ZN14HardScreenView15handleTickEventEv+0x43e>
                       ballY <= image2.getY() + image2.getHeight()) {
 8008cca:	f9b4 3396 	ldrsh.w	r3, [r4, #918]	@ 0x396
 8008cce:	4413      	add	r3, r2
 8008cd0:	ee06 3a90 	vmov	s13, r3
 8008cd4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image2.getY() &&
 8008cd8:	eeb4 6ae6 	vcmpe.f32	s12, s13
 8008cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ce0:	d80d      	bhi.n	8008cfe <_ZN14HardScreenView15handleTickEventEv+0x43e>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008ce2:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 8008ce6:	edd3 6a00 	vldr	s13, [r3]
 8008cea:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8008cee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cf2:	bfd3      	iteet	le
 8008cf4:	2601      	movle	r6, #1
 8008cf6:	2602      	movgt	r6, #2
                       imageCollision = true;
 8008cf8:	f04f 0901 	movgt.w	r9, #1
 8008cfc:	46b1      	movle	r9, r6
        return rect.x;
 8008cfe:	f9b4 23bc 	ldrsh.w	r2, [r4, #956]	@ 0x3bc
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 8008d02:	ee06 2a90 	vmov	s13, r2
 8008d06:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8008d0a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8008d0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d12:	db2f      	blt.n	8008d74 <_ZN14HardScreenView15handleTickEventEv+0x4b4>
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 8008d14:	f9b4 33c0 	ldrsh.w	r3, [r4, #960]	@ 0x3c0
 8008d18:	4413      	add	r3, r2
 8008d1a:	ee07 3a90 	vmov	s15, r3
 8008d1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                   if (ballX + ball.getWidth() >= image2_2.getX() &&
 8008d22:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8008d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d2a:	d823      	bhi.n	8008d74 <_ZN14HardScreenView15handleTickEventEv+0x4b4>
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8008d2c:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 8008d30:	edd3 6a00 	vldr	s13, [r3]
 8008d34:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
        return rect.y;
 8008d38:	f9b4 23be 	ldrsh.w	r2, [r4, #958]	@ 0x3be
 8008d3c:	ee07 3a90 	vmov	s15, r3
 8008d40:	ee06 2a10 	vmov	s12, r2
 8008d44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d48:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8008d4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
                       ballX <= image2_2.getX() + image2_2.getWidth() &&
 8008d50:	eef4 7ac6 	vcmpe.f32	s15, s12
 8008d54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d58:	db0c      	blt.n	8008d74 <_ZN14HardScreenView15handleTickEventEv+0x4b4>
                       ballY <= image2_2.getY() + image2_2.getHeight()) {
 8008d5a:	f9b4 33c2 	ldrsh.w	r3, [r4, #962]	@ 0x3c2
 8008d5e:	4413      	add	r3, r2
 8008d60:	ee07 3a90 	vmov	s15, r3
 8008d64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                       ballY + ball.getHeight() >= image2_2.getY() &&
 8008d68:	eef4 6ae7 	vcmpe.f32	s13, s15
 8008d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d70:	f240 8298 	bls.w	80092a4 <_ZN14HardScreenView15handleTickEventEv+0x9e4>
                   if (imageCollision) {
 8008d74:	f1b9 0f00 	cmp.w	r9, #0
 8008d78:	f000 840e 	beq.w	8009598 <_ZN14HardScreenView15handleTickEventEv+0xcd8>
                       if (newServingPlayer == 2) {
 8008d7c:	2e02      	cmp	r6, #2
 8008d7e:	f040 829c 	bne.w	80092ba <_ZN14HardScreenView15handleTickEventEv+0x9fa>
                           score2++;
 8008d82:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8008d86:	4ae0      	ldr	r2, [pc, #896]	@ (8009108 <_ZN14HardScreenView15handleTickEventEv+0x848>)
                           score2++;
 8008d88:	3301      	adds	r3, #1
 8008d8a:	f8c5 37f4 	str.w	r3, [r5, #2036]	@ 0x7f4
                           Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 8008d8e:	210a      	movs	r1, #10
 8008d90:	f204 40ec 	addw	r0, r4, #1260	@ 0x4ec
 8008d94:	f011 fea6 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score2.invalidate();
 8008d98:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 8008d9c:	f00f fb28 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						   buzzerBeepState = true;
 8008da0:	2601      	movs	r6, #1
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 8008da2:	2312      	movs	r3, #18
 8008da4:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008da8:	48d8      	ldr	r0, [pc, #864]	@ (800910c <_ZN14HardScreenView15handleTickEventEv+0x84c>)
						   buzzerBeepState = true;
 8008daa:	f885 6800 	strb.w	r6, [r5, #2048]	@ 0x800
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 8008dae:	4632      	mov	r2, r6
 8008db0:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8008db4:	f002 ff1e 	bl	800bbf4 <HAL_GPIO_WritePin>
                           if (score2 >= 11) {
 8008db8:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
 8008dbc:	2b0a      	cmp	r3, #10
 8008dbe:	dd05      	ble.n	8008dcc <_ZN14HardScreenView15handleTickEventEv+0x50c>
                               presenter->goToEndScreen(2);
 8008dc0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                               gameOver = true;
 8008dc2:	f885 67f8 	strb.w	r6, [r5, #2040]	@ 0x7f8
                               presenter->goToEndScreen(2);
 8008dc6:	2102      	movs	r1, #2
 8008dc8:	f7ff fc98 	bl	80086fc <_ZN19HardScreenPresenter13goToEndScreenEi>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 8008dcc:	2602      	movs	r6, #2
 8008dce:	e29a      	b.n	8009306 <_ZN14HardScreenView15handleTickEventEv+0xa46>
 8008dd0:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 8008dd4:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8008dd6:	b236      	sxth	r6, r6
 8008dd8:	2e02      	cmp	r6, #2
 8008dda:	bfb8      	it	lt
 8008ddc:	2602      	movlt	r6, #2
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008dde:	42b3      	cmp	r3, r6
 8008de0:	e5ca      	b.n	8008978 <_ZN14HardScreenView15handleTickEventEv+0xb8>
 8008de2:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 8008de6:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8008de8:	b236      	sxth	r6, r6
 8008dea:	2ec6      	cmp	r6, #198	@ 0xc6
 8008dec:	bfa8      	it	ge
 8008dee:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008df0:	429e      	cmp	r6, r3
 8008df2:	f43f add0 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
						paddle2.invalidate();
 8008df6:	f504 788e 	add.w	r8, r4, #284	@ 0x11c
 8008dfa:	4640      	mov	r0, r8
 8008dfc:	f00f faf8 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 8008e00:	f9b4 1120 	ldrsh.w	r1, [r4, #288]	@ 0x120
 8008e04:	4632      	mov	r2, r6
 8008e06:	e5c0      	b.n	800898a <_ZN14HardScreenView15handleTickEventEv+0xca>
 8008e08:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 8008e0c:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 8008e0e:	b236      	sxth	r6, r6
 8008e10:	2e02      	cmp	r6, #2
 8008e12:	bfb8      	it	lt
 8008e14:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 8008e16:	e7eb      	b.n	8008df0 <_ZN14HardScreenView15handleTickEventEv+0x530>
				if (waitingForServe && servingPlayer == 1) {
 8008e18:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 8008e1c:	2b00      	cmp	r3, #0
 8008e1e:	f43f adba 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 8008e22:	f8d5 87ec 	ldr.w	r8, [r5, #2028]	@ 0x7ec
 8008e26:	f1b8 0f01 	cmp.w	r8, #1
 8008e2a:	f47f adb4 	bne.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
					desiredBallVelY1 -= 0.2f;
 8008e2e:	f605 0304 	addw	r3, r5, #2052	@ 0x804
 8008e32:	ed93 0a00 	vldr	s0, [r3]
 8008e36:	eddf 7ab6 	vldr	s15, [pc, #728]	@ 8009110 <_ZN14HardScreenView15handleTickEventEv+0x850>
 8008e3a:	ee30 0a67 	vsub.f32	s0, s0, s15
					if (desiredBallVelY1 < -2.0f) desiredBallVelY1 = -2.0f;
 8008e3e:	eef8 7a00 	vmov.f32	s15, #128	@ 0xc0000000 -2.0
 8008e42:	eeb4 0a67 	vcmp.f32	s0, s15
 8008e46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e4a:	bf48      	it	mi
 8008e4c:	eeb0 0a67 	vmovmi.f32	s0, s15
 8008e50:	ed83 0a00 	vstr	s0, [r3]
					lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8008e54:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
					lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8008e58:	f020 ff99 	bl	8029d8e <atan2f>
 8008e5c:	eddf 7aad 	vldr	s15, [pc, #692]	@ 8009114 <_ZN14HardScreenView15handleTickEventEv+0x854>
 8008e60:	ee60 7a27 	vmul.f32	s15, s0, s15
 8008e64:	f605 090c 	addw	r9, r5, #2060	@ 0x80c
 8008e68:	ee17 0a90 	vmov	r0, s15
 8008e6c:	f7f7 fb74 	bl	8000558 <__aeabi_f2d>
 8008e70:	a3a3      	add	r3, pc, #652	@ (adr r3, 8009100 <_ZN14HardScreenView15handleTickEventEv+0x840>)
 8008e72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e76:	f7f7 fcf1 	bl	800085c <__aeabi_ddiv>
 8008e7a:	f7f7 fe75 	bl	8000b68 <__aeabi_d2f>
					line1.invalidate();
 8008e7e:	f504 7679 	add.w	r6, r4, #996	@ 0x3e4
					lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 8008e82:	f8c9 0000 	str.w	r0, [r9]
					line1.invalidate();
 8008e86:	4630      	mov	r0, r6
 8008e88:	f00a fbbe 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008e8c:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 8008e90:	ee07 3a10 	vmov	s14, r3
 8008e94:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8008e98:	edd3 7a00 	vldr	s15, [r3]
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008e9c:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008ea0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008ea4:	ee06 3a90 	vmov	s13, r3
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008ea8:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008eac:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008eb0:	eee7 7a06 	vfma.f32	s15, s14, s12
										line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8008eb4:	4630      	mov	r0, r6
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8008eb6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8008eba:	ed93 7a00 	vldr	s14, [r3]
 8008ebe:	eea6 7a86 	vfma.f32	s14, s13, s12
										line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8008ec2:	2321      	movs	r3, #33	@ 0x21
 8008ec4:	9300      	str	r3, [sp, #0]
 8008ec6:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8008eca:	ee37 7a48 	vsub.f32	s14, s14, s16
 8008ece:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8008ed2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8008ed6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008eda:	ee17 2a10 	vmov	r2, s14
 8008ede:	ee17 1a90 	vmov	r1, s15
 8008ee2:	b212      	sxth	r2, r2
 8008ee4:	b209      	sxth	r1, r1
 8008ee6:	f7fa f905 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
										line1.setStart(16, 16);
 8008eea:	2210      	movs	r2, #16
 8008eec:	4611      	mov	r1, r2
 8008eee:	4630      	mov	r0, r6
 8008ef0:	f7fe fbb8 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
										line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 8008ef4:	f8d9 0000 	ldr.w	r0, [r9]
 8008ef8:	f7f7 fb2e 	bl	8000558 <__aeabi_f2d>
 8008efc:	a380      	add	r3, pc, #512	@ (adr r3, 8009100 <_ZN14HardScreenView15handleTickEventEv+0x840>)
 8008efe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f02:	f7f7 fb81 	bl	8000608 <__aeabi_dmul>
 8008f06:	4b84      	ldr	r3, [pc, #528]	@ (8009118 <_ZN14HardScreenView15handleTickEventEv+0x858>)
 8008f08:	2200      	movs	r2, #0
 8008f0a:	f7f7 fca7 	bl	800085c <__aeabi_ddiv>
 8008f0e:	f7f7 fe2b 	bl	8000b68 <__aeabi_d2f>
 8008f12:	ee08 0a90 	vmov	s17, r0
 8008f16:	eeb0 0a68 	vmov.f32	s0, s17
 8008f1a:	f020 ff59 	bl	8029dd0 <cosf>
 8008f1e:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8008f22:	eef0 9a48 	vmov.f32	s19, s16
 8008f26:	eee0 9a09 	vfma.f32	s19, s0, s18
 8008f2a:	eeb0 0a68 	vmov.f32	s0, s17
 8008f2e:	f020 ff93 	bl	8029e58 <sinf>
 8008f32:	eef0 0a48 	vmov.f32	s1, s16
 8008f36:	eee0 0a09 	vfma.f32	s1, s0, s18
 8008f3a:	4630      	mov	r0, r6
 8008f3c:	eeb0 0a69 	vmov.f32	s0, s19
 8008f40:	f7fe fb94 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
        visible = vis;
 8008f44:	f884 8409 	strb.w	r8, [r4, #1033]	@ 0x409
										line1_1.invalidate();
 8008f48:	4630      	mov	r0, r6
                    line1_1.invalidate();
 8008f4a:	f00a fb5d 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8008f4e:	e522      	b.n	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
				if (waitingForServe && servingPlayer == 1) {
 8008f50:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 8008f54:	2b00      	cmp	r3, #0
 8008f56:	f43f ad1e 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 8008f5a:	f8d5 87ec 	ldr.w	r8, [r5, #2028]	@ 0x7ec
 8008f5e:	f1b8 0f01 	cmp.w	r8, #1
 8008f62:	f47f ad18 	bne.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
					desiredBallVelY1 += 0.2f;
 8008f66:	f605 0304 	addw	r3, r5, #2052	@ 0x804
 8008f6a:	ed93 0a00 	vldr	s0, [r3]
 8008f6e:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8009110 <_ZN14HardScreenView15handleTickEventEv+0x850>
 8008f72:	ee30 0a27 	vadd.f32	s0, s0, s15
					if (desiredBallVelY1 > 2.0f) desiredBallVelY1 = 2.0f;
 8008f76:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
 8008f7a:	eeb4 0a60 	vcmp.f32	s0, s1
 8008f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f82:	bfc8      	it	gt
 8008f84:	eeb0 0a60 	vmovgt.f32	s0, s1
 8008f88:	ed83 0a00 	vstr	s0, [r3]
 8008f8c:	e764      	b.n	8008e58 <_ZN14HardScreenView15handleTickEventEv+0x598>
				if (waitingForServe && servingPlayer == 2) {
 8008f8e:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 8008f92:	2b00      	cmp	r3, #0
 8008f94:	f43f acff 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 8008f98:	f8d5 37ec 	ldr.w	r3, [r5, #2028]	@ 0x7ec
 8008f9c:	2b02      	cmp	r3, #2
 8008f9e:	f47f acfa 	bne.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
					desiredBallVelY2 -= 0.2f;
 8008fa2:	f605 0308 	addw	r3, r5, #2056	@ 0x808
 8008fa6:	ed93 0a00 	vldr	s0, [r3]
 8008faa:	eddf 7a59 	vldr	s15, [pc, #356]	@ 8009110 <_ZN14HardScreenView15handleTickEventEv+0x850>
 8008fae:	ee30 0a67 	vsub.f32	s0, s0, s15
					if (desiredBallVelY2 < -2.0f) desiredBallVelY2 = -2.0f;
 8008fb2:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 8008fb6:	eeb4 0a60 	vcmp.f32	s0, s1
 8008fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fbe:	bf48      	it	mi
 8008fc0:	eeb0 0a60 	vmovmi.f32	s0, s1
 8008fc4:	ed83 0a00 	vstr	s0, [r3]
					lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8008fc8:	f020 fee1 	bl	8029d8e <atan2f>
 8008fcc:	eddf 7a51 	vldr	s15, [pc, #324]	@ 8009114 <_ZN14HardScreenView15handleTickEventEv+0x854>
 8008fd0:	ee60 7a27 	vmul.f32	s15, s0, s15
 8008fd4:	f505 6801 	add.w	r8, r5, #2064	@ 0x810
 8008fd8:	ee17 0a90 	vmov	r0, s15
 8008fdc:	f7f7 fabc 	bl	8000558 <__aeabi_f2d>
 8008fe0:	a347      	add	r3, pc, #284	@ (adr r3, 8009100 <_ZN14HardScreenView15handleTickEventEv+0x840>)
 8008fe2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008fe6:	f7f7 fc39 	bl	800085c <__aeabi_ddiv>
 8008fea:	f7f7 fdbd 	bl	8000b68 <__aeabi_d2f>
					line1_1.invalidate();
 8008fee:	f504 668d 	add.w	r6, r4, #1128	@ 0x468
					lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 8008ff2:	f8c8 0000 	str.w	r0, [r8]
					line1_1.invalidate();
 8008ff6:	4630      	mov	r0, r6
 8008ff8:	f00a fb06 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8008ffc:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 8009000:	ee07 3a10 	vmov	s14, r3
 8009004:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8009008:	edd3 7a00 	vldr	s15, [r3]
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800900c:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009010:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009014:	ee06 3a90 	vmov	s13, r3
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009018:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800901c:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009020:	eee7 7a06 	vfma.f32	s15, s14, s12
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009024:	4630      	mov	r0, r6
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009026:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800902a:	ed93 7a00 	vldr	s14, [r3]
 800902e:	eea6 7a86 	vfma.f32	s14, s13, s12
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009032:	2321      	movs	r3, #33	@ 0x21
 8009034:	9300      	str	r3, [sp, #0]
 8009036:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800903a:	ee37 7a48 	vsub.f32	s14, s14, s16
 800903e:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8009042:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009046:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800904a:	ee17 2a10 	vmov	r2, s14
 800904e:	ee17 1a90 	vmov	r1, s15
 8009052:	b212      	sxth	r2, r2
 8009054:	b209      	sxth	r1, r1
 8009056:	f7fa f84d 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
										line1_1.setStart(16, 16);
 800905a:	2210      	movs	r2, #16
 800905c:	4611      	mov	r1, r2
 800905e:	4630      	mov	r0, r6
 8009060:	f7fe fb00 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
										line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8009064:	f8d8 0000 	ldr.w	r0, [r8]
 8009068:	f7f7 fa76 	bl	8000558 <__aeabi_f2d>
 800906c:	a324      	add	r3, pc, #144	@ (adr r3, 8009100 <_ZN14HardScreenView15handleTickEventEv+0x840>)
 800906e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009072:	f7f7 fac9 	bl	8000608 <__aeabi_dmul>
 8009076:	4b28      	ldr	r3, [pc, #160]	@ (8009118 <_ZN14HardScreenView15handleTickEventEv+0x858>)
 8009078:	2200      	movs	r2, #0
 800907a:	f7f7 fbef 	bl	800085c <__aeabi_ddiv>
 800907e:	f7f7 fd73 	bl	8000b68 <__aeabi_d2f>
 8009082:	ee08 0a90 	vmov	s17, r0
 8009086:	eeb0 0a68 	vmov.f32	s0, s17
 800908a:	f020 fea1 	bl	8029dd0 <cosf>
 800908e:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8009092:	eef0 9a48 	vmov.f32	s19, s16
 8009096:	eee0 9a09 	vfma.f32	s19, s0, s18
 800909a:	eeb0 0a68 	vmov.f32	s0, s17
 800909e:	f020 fedb 	bl	8029e58 <sinf>
 80090a2:	eef0 0a48 	vmov.f32	s1, s16
 80090a6:	eee0 0a09 	vfma.f32	s1, s0, s18
 80090aa:	4630      	mov	r0, r6
 80090ac:	eeb0 0a69 	vmov.f32	s0, s19
 80090b0:	f7fe fadc 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 80090b4:	2301      	movs	r3, #1
 80090b6:	f884 348d 	strb.w	r3, [r4, #1165]	@ 0x48d
 80090ba:	e745      	b.n	8008f48 <_ZN14HardScreenView15handleTickEventEv+0x688>
				if (waitingForServe && servingPlayer == 2) {
 80090bc:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 80090c0:	2b00      	cmp	r3, #0
 80090c2:	f43f ac68 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 80090c6:	f8d5 37ec 	ldr.w	r3, [r5, #2028]	@ 0x7ec
 80090ca:	2b02      	cmp	r3, #2
 80090cc:	f47f ac63 	bne.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
					desiredBallVelY2 += 0.2f;
 80090d0:	f605 0308 	addw	r3, r5, #2056	@ 0x808
 80090d4:	ed93 0a00 	vldr	s0, [r3]
 80090d8:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8009110 <_ZN14HardScreenView15handleTickEventEv+0x850>
 80090dc:	ee30 0a27 	vadd.f32	s0, s0, s15
					if (desiredBallVelY2 > 2.0f) desiredBallVelY2 = 2.0f;
 80090e0:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80090e4:	eeb4 0a67 	vcmp.f32	s0, s15
 80090e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090ec:	bfc8      	it	gt
 80090ee:	eeb0 0a67 	vmovgt.f32	s0, s15
 80090f2:	ed83 0a00 	vstr	s0, [r3]
					lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 80090f6:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 80090fa:	e765      	b.n	8008fc8 <_ZN14HardScreenView15handleTickEventEv+0x708>
 80090fc:	f3af 8000 	nop.w
 8009100:	54442d18 	.word	0x54442d18
 8009104:	400921fb 	.word	0x400921fb
 8009108:	0802d07f 	.word	0x0802d07f
 800910c:	40020c00 	.word	0x40020c00
 8009110:	3e4ccccd 	.word	0x3e4ccccd
 8009114:	43340000 	.word	0x43340000
 8009118:	40668000 	.word	0x40668000
 800911c:	40a947ae 	.word	0x40a947ae
                if (waitingForServe && servingPlayer == 1) {
 8009120:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 8009124:	2b00      	cmp	r3, #0
 8009126:	f43f ac36 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 800912a:	f8d5 37ec 	ldr.w	r3, [r5, #2028]	@ 0x7ec
 800912e:	2b01      	cmp	r3, #1
 8009130:	f47f ac31 	bne.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
                    waitingForServe = false;
 8009134:	2300      	movs	r3, #0
 8009136:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800913a:	f605 0304 	addw	r3, r5, #2052	@ 0x804
 800913e:	ed93 8a00 	vldr	s16, [r3]
 8009142:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 800911c <_ZN14HardScreenView15handleTickEventEv+0x85c>
 8009146:	eee8 7a48 	vfms.f32	s15, s16, s16
                    ballVelY = desiredBallVelY1;
 800914a:	f504 56bf 	add.w	r6, r4, #6112	@ 0x17e0
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800914e:	ee17 0a90 	vmov	r0, s15
 8009152:	f7f7 fa01 	bl	8000558 <__aeabi_f2d>
 8009156:	ec41 0b10 	vmov	d0, r0, r1
 800915a:	f020 fdec 	bl	8029d36 <sqrt>
 800915e:	ec51 0b10 	vmov	r0, r1, d0
 8009162:	f7f7 fd01 	bl	8000b68 <__aeabi_d2f>
 8009166:	ee07 0a90 	vmov	s15, r0
                    if (ballVelX < 0.5f) {
 800916a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800916e:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
                    if (ballVelX < 0.5f) {
 8009172:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800917a:	6018      	str	r0, [r3, #0]
                    ballVelY = desiredBallVelY1;
 800917c:	ed86 8a00 	vstr	s16, [r6]
                    if (ballVelX < 0.5f) {
 8009180:	d50c      	bpl.n	800919c <_ZN14HardScreenView15handleTickEventEv+0x8dc>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8009182:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8009186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = 0.5f;
 800918a:	ed83 7a00 	vstr	s14, [r3]
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800918e:	db12      	blt.n	80091b6 <_ZN14HardScreenView15handleTickEventEv+0x8f6>
 8009190:	a1f3      	add	r1, pc, #972	@ (adr r1, 8009560 <_ZN14HardScreenView15handleTickEventEv+0xca0>)
 8009192:	e9d1 0100 	ldrd	r0, r1, [r1]
 8009196:	f7f7 fce7 	bl	8000b68 <__aeabi_d2f>
 800919a:	6030      	str	r0, [r6, #0]
 800919c:	2301      	movs	r3, #1
 800919e:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                    ball.invalidate();
 80091a2:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 80091a6:	f00a fa2f 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 80091aa:	2300      	movs	r3, #0
 80091ac:	f884 3409 	strb.w	r3, [r4, #1033]	@ 0x409
                    line1.invalidate();
 80091b0:	f504 7079 	add.w	r0, r4, #996	@ 0x3e4
 80091b4:	e6c9      	b.n	8008f4a <_ZN14HardScreenView15handleTickEventEv+0x68a>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 80091b6:	a1ec      	add	r1, pc, #944	@ (adr r1, 8009568 <_ZN14HardScreenView15handleTickEventEv+0xca8>)
 80091b8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80091bc:	e7eb      	b.n	8009196 <_ZN14HardScreenView15handleTickEventEv+0x8d6>
                if (waitingForServe && servingPlayer == 2) {
 80091be:	f895 37e4 	ldrb.w	r3, [r5, #2020]	@ 0x7e4
 80091c2:	2b00      	cmp	r3, #0
 80091c4:	f43f abe7 	beq.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
 80091c8:	f8d5 37ec 	ldr.w	r3, [r5, #2028]	@ 0x7ec
 80091cc:	2b02      	cmp	r3, #2
 80091ce:	f47f abe2 	bne.w	8008996 <_ZN14HardScreenView15handleTickEventEv+0xd6>
                    waitingForServe = false;
 80091d2:	2300      	movs	r3, #0
 80091d4:	f885 37e4 	strb.w	r3, [r5, #2020]	@ 0x7e4
                    ballVelX = -sqrt(speed * speed - desiredBallVelY2 * desiredBallVelY2);
 80091d8:	f605 0308 	addw	r3, r5, #2056	@ 0x808
 80091dc:	ed93 8a00 	vldr	s16, [r3]
 80091e0:	eddf 7ae5 	vldr	s15, [pc, #916]	@ 8009578 <_ZN14HardScreenView15handleTickEventEv+0xcb8>
 80091e4:	eee8 7a48 	vfms.f32	s15, s16, s16
                    ballVelY = desiredBallVelY2;
 80091e8:	f504 56bf 	add.w	r6, r4, #6112	@ 0x17e0
                    ballVelX = -sqrt(speed * speed - desiredBallVelY2 * desiredBallVelY2);
 80091ec:	ee17 0a90 	vmov	r0, s15
 80091f0:	f7f7 f9b2 	bl	8000558 <__aeabi_f2d>
 80091f4:	ec41 0b10 	vmov	d0, r0, r1
 80091f8:	f020 fd9d 	bl	8029d36 <sqrt>
 80091fc:	ec51 0b10 	vmov	r0, r1, d0
 8009200:	f7f7 fcb2 	bl	8000b68 <__aeabi_d2f>
 8009204:	ee07 0a90 	vmov	s15, r0
 8009208:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 800920c:	eeb1 7a67 	vneg.f32	s14, s15
 8009210:	ed83 7a00 	vstr	s14, [r3]
                    if (ballVelX > -0.5f) {
 8009214:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8009218:	eef4 7ac7 	vcmpe.f32	s15, s14
 800921c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelY = desiredBallVelY2;
 8009220:	ed86 8a00 	vstr	s16, [r6]
                    if (ballVelX > -0.5f) {
 8009224:	d50d      	bpl.n	8009242 <_ZN14HardScreenView15handleTickEventEv+0x982>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8009226:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
                        ballVelX = -0.5f;
 800922a:	f04f 423f 	mov.w	r2, #3204448256	@ 0xbf000000
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800922e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = -0.5f;
 8009232:	601a      	str	r2, [r3, #0]
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 8009234:	db12      	blt.n	800925c <_ZN14HardScreenView15handleTickEventEv+0x99c>
 8009236:	a1ca      	add	r1, pc, #808	@ (adr r1, 8009560 <_ZN14HardScreenView15handleTickEventEv+0xca0>)
 8009238:	e9d1 0100 	ldrd	r0, r1, [r1]
 800923c:	f7f7 fc94 	bl	8000b68 <__aeabi_d2f>
 8009240:	6030      	str	r0, [r6, #0]
 8009242:	2301      	movs	r3, #1
 8009244:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                    ball.invalidate();
 8009248:	f504 7036 	add.w	r0, r4, #728	@ 0x2d8
 800924c:	f00a f9dc 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 8009250:	2300      	movs	r3, #0
 8009252:	f884 348d 	strb.w	r3, [r4, #1165]	@ 0x48d
                    line1_1.invalidate();
 8009256:	f504 608d 	add.w	r0, r4, #1128	@ 0x468
 800925a:	e676      	b.n	8008f4a <_ZN14HardScreenView15handleTickEventEv+0x68a>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800925c:	a1c2      	add	r1, pc, #776	@ (adr r1, 8009568 <_ZN14HardScreenView15handleTickEventEv+0xca8>)
 800925e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8009262:	e7eb      	b.n	800923c <_ZN14HardScreenView15handleTickEventEv+0x97c>
        return rect.height;
 8009264:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
            } else if (ballY + ball.getHeight() > 240) {
 8009268:	ee05 3a90 	vmov	s11, r3
 800926c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8009270:	ee35 7a87 	vadd.f32	s14, s11, s14
 8009274:	eddf 5ac1 	vldr	s11, [pc, #772]	@ 800957c <_ZN14HardScreenView15handleTickEventEv+0xcbc>
 8009278:	eeb4 7ae5 	vcmpe.f32	s14, s11
 800927c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009280:	f77f abc3 	ble.w	8008a0a <_ZN14HardScreenView15handleTickEventEv+0x14a>
                ballY = 240 - ball.getHeight();
 8009284:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8009288:	ee07 3a10 	vmov	s14, r3
 800928c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009290:	ed82 7a00 	vstr	s14, [r2]
 8009294:	f7ff bbb5 	b.w	8008a02 <_ZN14HardScreenView15handleTickEventEv+0x142>
                   int newServingPlayer = 0;
 8009298:	2600      	movs	r6, #0
 800929a:	e4a0      	b.n	8008bde <_ZN14HardScreenView15handleTickEventEv+0x31e>
                       newServingPlayer = ballVelX > 0 ? 2 : 1; // Nếu bóng đi sang phải, người chơi 1 phát; ngược lại, người chơi 2
 800929c:	f04f 0901 	mov.w	r9, #1
                       imageCollision = true;
 80092a0:	464e      	mov	r6, r9
 80092a2:	e49c      	b.n	8008bde <_ZN14HardScreenView15handleTickEventEv+0x31e>
                       newServingPlayer = ballVelX > 0 ? 2 : 1;
 80092a4:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 80092a8:	edd3 7a00 	vldr	s15, [r3]
 80092ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092b4:	f73f ad65 	bgt.w	8008d82 <_ZN14HardScreenView15handleTickEventEv+0x4c2>
 80092b8:	2601      	movs	r6, #1
                           score1++;
 80092ba:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 80092be:	4ab0      	ldr	r2, [pc, #704]	@ (8009580 <_ZN14HardScreenView15handleTickEventEv+0xcc0>)
                           score1++;
 80092c0:	3301      	adds	r3, #1
 80092c2:	f8c5 37f0 	str.w	r3, [r5, #2032]	@ 0x7f0
                           Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 80092c6:	210a      	movs	r1, #10
 80092c8:	f504 60a0 	add.w	r0, r4, #1280	@ 0x500
 80092cc:	f011 fc0a 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                           HardScreenViewBase::score1.invalidate();
 80092d0:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 80092d4:	f00f f88c 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						   buzzerBeepState = true;
 80092d8:	f04f 0901 	mov.w	r9, #1
                           buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 80092dc:	2312      	movs	r3, #18
 80092de:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80092e2:	48a8      	ldr	r0, [pc, #672]	@ (8009584 <_ZN14HardScreenView15handleTickEventEv+0xcc4>)
						   buzzerBeepState = true;
 80092e4:	f885 9800 	strb.w	r9, [r5, #2048]	@ 0x800
						   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80092e8:	464a      	mov	r2, r9
 80092ea:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80092ee:	f002 fc81 	bl	800bbf4 <HAL_GPIO_WritePin>
                           if (score1 >= 11) {
 80092f2:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
 80092f6:	2b0a      	cmp	r3, #10
 80092f8:	dd05      	ble.n	8009306 <_ZN14HardScreenView15handleTickEventEv+0xa46>
                               presenter->goToEndScreen(1);
 80092fa:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                               gameOver = true;
 80092fc:	f885 97f8 	strb.w	r9, [r5, #2040]	@ 0x7f8
                               presenter->goToEndScreen(1);
 8009300:	4649      	mov	r1, r9
 8009302:	f7ff f9fb 	bl	80086fc <_ZN19HardScreenPresenter13goToEndScreenEi>
        visible = vis;
 8009306:	2300      	movs	r3, #0
 8009308:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                       waitingForServe = true;
 800930c:	f04f 0901 	mov.w	r9, #1
                       ball.invalidate();
 8009310:	4638      	mov	r0, r7
 8009312:	f00a f979 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                       serveDelayTicks = 60; // 1 giây với 60 FPS
 8009316:	233c      	movs	r3, #60	@ 0x3c
                       if (newServingPlayer == 1) {
 8009318:	454e      	cmp	r6, r9
                       serveDelayTicks = 60; // 1 giây với 60 FPS
 800931a:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                       waitingForServe = true;
 800931e:	f885 97e4 	strb.w	r9, [r5, #2020]	@ 0x7e4
                       servingPlayer = newServingPlayer;
 8009322:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
 8009326:	f8c5 67ec 	str.w	r6, [r5, #2028]	@ 0x7ec
                       if (newServingPlayer == 1) {
 800932a:	eeb6 9a00 	vmov.f32	s18, #96	@ 0x3f000000  0.5
 800932e:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8009332:	eef3 8a0e 	vmov.f32	s17, #62	@ 0x41f00000  30.0
 8009336:	f205 7bd4 	addw	fp, r5, #2004	@ 0x7d4
 800933a:	f505 6afb 	add.w	sl, r5, #2008	@ 0x7d8
 800933e:	f040 808d 	bne.w	800945c <_ZN14HardScreenView15handleTickEventEv+0xb9c>
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8009342:	f9b4 10f8 	ldrsh.w	r1, [r4, #248]	@ 0xf8
 8009346:	f9b4 20f4 	ldrsh.w	r2, [r4, #244]	@ 0xf4
 800934a:	440a      	add	r2, r1
 800934c:	320a      	adds	r2, #10
 800934e:	ee07 2a90 	vmov	s15, r2
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009352:	f9b4 20fa 	ldrsh.w	r2, [r4, #250]	@ 0xfa
 8009356:	eb02 71d2 	add.w	r1, r2, r2, lsr #31
 800935a:	f9b4 20f6 	ldrsh.w	r2, [r4, #246]	@ 0xf6
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800935e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009362:	eb02 0261 	add.w	r2, r2, r1, asr #1
 8009366:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800936a:	eba2 0263 	sub.w	r2, r2, r3, asr #1
                           ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800936e:	edcb 7a00 	vstr	s15, [fp]
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009372:	ee07 2a90 	vmov	s15, r2
                           desiredBallVelY1 = 0.0f;
 8009376:	f605 0304 	addw	r3, r5, #2052	@ 0x804
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800937a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
							lineAngle1 = 0.0f;
 800937e:	f605 090c 	addw	r9, r5, #2060	@ 0x80c
                           ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009382:	edca 7a00 	vstr	s15, [sl]
                           desiredBallVelY1 = 0.0f;
 8009386:	f8c3 8000 	str.w	r8, [r3]
							lineAngle1 = 0.0f;
 800938a:	f8c9 8000 	str.w	r8, [r9]
							line1.invalidate();
 800938e:	f504 7879 	add.w	r8, r4, #996	@ 0x3e4
 8009392:	4640      	mov	r0, r8
 8009394:	f00a f938 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
									   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009398:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 800939c:	eddb 7a00 	vldr	s15, [fp]
 80093a0:	ee07 3a10 	vmov	s14, r3
									   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80093a4:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
									   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80093a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
									   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80093ac:	ee06 3a90 	vmov	s13, r3
									   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80093b0:	eee7 7a09 	vfma.f32	s15, s14, s18
									   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80093b4:	2321      	movs	r3, #33	@ 0x21
 80093b6:	4640      	mov	r0, r8
									   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80093b8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80093bc:	ed9a 7a00 	vldr	s14, [sl]
									   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80093c0:	9300      	str	r3, [sp, #0]
									   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80093c2:	eea6 7a89 	vfma.f32	s14, s13, s18
									   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80093c6:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80093ca:	ee37 7a48 	vsub.f32	s14, s14, s16
 80093ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093d2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80093d6:	ee17 1a90 	vmov	r1, s15
 80093da:	ee17 2a10 	vmov	r2, s14
 80093de:	b209      	sxth	r1, r1
 80093e0:	b212      	sxth	r2, r2
 80093e2:	f7f9 fe87 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
									   line1.setStart(16, 16);
 80093e6:	2210      	movs	r2, #16
 80093e8:	4611      	mov	r1, r2
 80093ea:	4640      	mov	r0, r8
 80093ec:	f7fe f93a 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
									   line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 80093f0:	f8d9 0000 	ldr.w	r0, [r9]
 80093f4:	f7f7 f8b0 	bl	8000558 <__aeabi_f2d>
 80093f8:	a35d      	add	r3, pc, #372	@ (adr r3, 8009570 <_ZN14HardScreenView15handleTickEventEv+0xcb0>)
 80093fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80093fe:	f7f7 f903 	bl	8000608 <__aeabi_dmul>
 8009402:	4b61      	ldr	r3, [pc, #388]	@ (8009588 <_ZN14HardScreenView15handleTickEventEv+0xcc8>)
 8009404:	2200      	movs	r2, #0
 8009406:	f7f7 fa29 	bl	800085c <__aeabi_ddiv>
 800940a:	f7f7 fbad 	bl	8000b68 <__aeabi_d2f>
 800940e:	ee09 0a10 	vmov	s18, r0
 8009412:	eeb0 0a49 	vmov.f32	s0, s18
 8009416:	f020 fcdb 	bl	8029dd0 <cosf>
 800941a:	eef0 9a48 	vmov.f32	s19, s16
 800941e:	eee0 9a28 	vfma.f32	s19, s0, s17
 8009422:	eeb0 0a49 	vmov.f32	s0, s18
 8009426:	f020 fd17 	bl	8029e58 <sinf>
 800942a:	eef0 0a48 	vmov.f32	s1, s16
 800942e:	eee0 0a28 	vfma.f32	s1, s0, s17
 8009432:	4640      	mov	r0, r8
 8009434:	eeb0 0a69 	vmov.f32	s0, s19
 8009438:	f7fe f918 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 800943c:	f884 6409 	strb.w	r6, [r4, #1033]	@ 0x409
										line1_1.invalidate();
 8009440:	4640      	mov	r0, r8
                           line1_1.invalidate();
 8009442:	f00a f8e1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ball.moveTo(ballX, ballY);
 8009446:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
 800944a:	ed93 7a00 	vldr	s14, [r3]
 800944e:	f205 75d4 	addw	r5, r5, #2004	@ 0x7d4
 8009452:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009456:	edd5 7a00 	vldr	s15, [r5]
 800945a:	e180      	b.n	800975e <_ZN14HardScreenView15handleTickEventEv+0xe9e>
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800945c:	f9b4 12e0 	ldrsh.w	r1, [r4, #736]	@ 0x2e0
 8009460:	f9b4 2120 	ldrsh.w	r2, [r4, #288]	@ 0x120
 8009464:	1a52      	subs	r2, r2, r1
 8009466:	3a0a      	subs	r2, #10
 8009468:	ee07 2a90 	vmov	s15, r2
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800946c:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	@ 0x126
 8009470:	eb02 71d2 	add.w	r1, r2, r2, lsr #31
 8009474:	f9b4 2122 	ldrsh.w	r2, [r4, #290]	@ 0x122
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800947c:	eb02 0261 	add.w	r2, r2, r1, asr #1
 8009480:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8009484:	eba2 0263 	sub.w	r2, r2, r3, asr #1
                           ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009488:	edcb 7a00 	vstr	s15, [fp]
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800948c:	ee07 2a90 	vmov	s15, r2
                           desiredBallVelY2 = 0.0f;
 8009490:	f605 0308 	addw	r3, r5, #2056	@ 0x808
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009494:	eef8 7ae7 	vcvt.f32.s32	s15, s15
							lineAngle2 = 0.0f;
 8009498:	f505 6601 	add.w	r6, r5, #2064	@ 0x810
                           ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800949c:	edca 7a00 	vstr	s15, [sl]
                           desiredBallVelY2 = 0.0f;
 80094a0:	f8c3 8000 	str.w	r8, [r3]
							lineAngle2 = 0.0f;
 80094a4:	f8c6 8000 	str.w	r8, [r6]
							line1_1.invalidate();
 80094a8:	f504 688d 	add.w	r8, r4, #1128	@ 0x468
 80094ac:	4640      	mov	r0, r8
 80094ae:	f00a f8ab 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80094b2:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 80094b6:	eddb 7a00 	vldr	s15, [fp]
 80094ba:	ee07 3a10 	vmov	s14, r3
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80094be:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80094c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80094c6:	ee06 3a90 	vmov	s13, r3
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80094ca:	eee7 7a09 	vfma.f32	s15, s14, s18
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80094ce:	2321      	movs	r3, #33	@ 0x21
 80094d0:	4640      	mov	r0, r8
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80094d2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80094d6:	ed9a 7a00 	vldr	s14, [sl]
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80094da:	9300      	str	r3, [sp, #0]
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80094dc:	eea6 7a89 	vfma.f32	s14, s13, s18
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80094e0:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80094e4:	ee37 7a48 	vsub.f32	s14, s14, s16
 80094e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094ec:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80094f0:	ee17 1a90 	vmov	r1, s15
 80094f4:	ee17 2a10 	vmov	r2, s14
 80094f8:	b209      	sxth	r1, r1
 80094fa:	b212      	sxth	r2, r2
 80094fc:	f7f9 fdfa 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
										line1_1.setStart(16, 16);
 8009500:	2210      	movs	r2, #16
 8009502:	4611      	mov	r1, r2
 8009504:	4640      	mov	r0, r8
 8009506:	f7fe f8ad 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
										line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 800950a:	6830      	ldr	r0, [r6, #0]
 800950c:	f7f7 f824 	bl	8000558 <__aeabi_f2d>
 8009510:	a317      	add	r3, pc, #92	@ (adr r3, 8009570 <_ZN14HardScreenView15handleTickEventEv+0xcb0>)
 8009512:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009516:	f7f7 f877 	bl	8000608 <__aeabi_dmul>
 800951a:	4b1b      	ldr	r3, [pc, #108]	@ (8009588 <_ZN14HardScreenView15handleTickEventEv+0xcc8>)
 800951c:	2200      	movs	r2, #0
 800951e:	f7f7 f99d 	bl	800085c <__aeabi_ddiv>
 8009522:	f7f7 fb21 	bl	8000b68 <__aeabi_d2f>
 8009526:	ee09 0a10 	vmov	s18, r0
 800952a:	eeb0 0a49 	vmov.f32	s0, s18
 800952e:	f020 fc4f 	bl	8029dd0 <cosf>
 8009532:	eef0 9a48 	vmov.f32	s19, s16
 8009536:	eee0 9a28 	vfma.f32	s19, s0, s17
 800953a:	eeb0 0a49 	vmov.f32	s0, s18
 800953e:	f020 fc8b 	bl	8029e58 <sinf>
 8009542:	eef0 0a48 	vmov.f32	s1, s16
 8009546:	eee0 0a28 	vfma.f32	s1, s0, s17
 800954a:	4640      	mov	r0, r8
 800954c:	eeb0 0a69 	vmov.f32	s0, s19
 8009550:	f7fe f88c 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8009554:	f884 948d 	strb.w	r9, [r4, #1165]	@ 0x48d
 8009558:	e772      	b.n	8009440 <_ZN14HardScreenView15handleTickEventEv+0xb80>
 800955a:	bf00      	nop
 800955c:	f3af 8000 	nop.w
 8009560:	a2e76d83 	.word	0xa2e76d83
 8009564:	4001f5bf 	.word	0x4001f5bf
 8009568:	a2e76d83 	.word	0xa2e76d83
 800956c:	c001f5bf 	.word	0xc001f5bf
 8009570:	54442d18 	.word	0x54442d18
 8009574:	400921fb 	.word	0x400921fb
 8009578:	40a947ae 	.word	0x40a947ae
 800957c:	43700000 	.word	0x43700000
 8009580:	0802d07f 	.word	0x0802d07f
 8009584:	40020c00 	.word	0x40020c00
 8009588:	40668000 	.word	0x40668000
 800958c:	439f8000 	.word	0x439f8000
 8009590:	42700000 	.word	0x42700000
 8009594:	43350000 	.word	0x43350000
                if (ballX >319) {
 8009598:	ed5f 6a04 	vldr	s13, [pc, #-16]	@ 800958c <_ZN14HardScreenView15handleTickEventEv+0xccc>
 800959c:	eeb4 7ae6 	vcmpe.f32	s14, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 80095a0:	f505 63fb 	add.w	r3, r5, #2008	@ 0x7d8
                if (ballX >319) {
 80095a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                ballY + ball.getHeight() >= paddle1.getY() &&
 80095a8:	edd3 7a00 	vldr	s15, [r3]
                if (ballX >319) {
 80095ac:	f340 80df 	ble.w	800976e <_ZN14HardScreenView15handleTickEventEv+0xeae>
                    if (ballY > 60 && ballY < 181) {
 80095b0:	ed1f 7a09 	vldr	s14, [pc, #-36]	@ 8009590 <_ZN14HardScreenView15handleTickEventEv+0xcd0>
 80095b4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80095b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095bc:	f340 81af 	ble.w	800991e <_ZN14HardScreenView15handleTickEventEv+0x105e>
 80095c0:	ed1f 7a0c 	vldr	s14, [pc, #-48]	@ 8009594 <_ZN14HardScreenView15handleTickEventEv+0xcd4>
 80095c4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80095c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095cc:	f140 81a7 	bpl.w	800991e <_ZN14HardScreenView15handleTickEventEv+0x105e>
                        score1++;
 80095d0:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 80095d4:	4ae6      	ldr	r2, [pc, #920]	@ (8009970 <_ZN14HardScreenView15handleTickEventEv+0x10b0>)
                        score1++;
 80095d6:	3301      	adds	r3, #1
 80095d8:	f8c5 37f0 	str.w	r3, [r5, #2032]	@ 0x7f0
                        Unicode::snprintf(HardScreenViewBase::score1Buffer, HardScreenViewBase::SCORE1_SIZE, "%d", score1);
 80095dc:	210a      	movs	r1, #10
 80095de:	f504 60a0 	add.w	r0, r4, #1280	@ 0x500
 80095e2:	f011 fa7f 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score1.invalidate();
 80095e6:	f504 70ca 	add.w	r0, r4, #404	@ 0x194
 80095ea:	f00e ff01 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 80095ee:	2601      	movs	r6, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 80095f0:	2312      	movs	r3, #18
 80095f2:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80095f6:	48df      	ldr	r0, [pc, #892]	@ (8009974 <_ZN14HardScreenView15handleTickEventEv+0x10b4>)
						buzzerBeepState = true;
 80095f8:	f885 6800 	strb.w	r6, [r5, #2048]	@ 0x800
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80095fc:	4632      	mov	r2, r6
 80095fe:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8009602:	f002 faf7 	bl	800bbf4 <HAL_GPIO_WritePin>
                        if (score1 >= 11) {
 8009606:	f8d5 37f0 	ldr.w	r3, [r5, #2032]	@ 0x7f0
 800960a:	2b0a      	cmp	r3, #10
 800960c:	dd05      	ble.n	800961a <_ZN14HardScreenView15handleTickEventEv+0xd5a>
                            presenter->goToEndScreen(1);
 800960e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 8009610:	f885 67f8 	strb.w	r6, [r5, #2040]	@ 0x7f8
                            presenter->goToEndScreen(1);
 8009614:	4631      	mov	r1, r6
 8009616:	f7ff f871 	bl	80086fc <_ZN19HardScreenPresenter13goToEndScreenEi>
 800961a:	2300      	movs	r3, #0
 800961c:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        ball.invalidate();
 8009620:	4638      	mov	r0, r7
 8009622:	f009 fff1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 8009626:	233c      	movs	r3, #60	@ 0x3c
 8009628:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800962c:	f9b4 20f8 	ldrsh.w	r2, [r4, #248]	@ 0xf8
 8009630:	f9b4 30f4 	ldrsh.w	r3, [r4, #244]	@ 0xf4
 8009634:	4413      	add	r3, r2
 8009636:	330a      	adds	r3, #10
 8009638:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800963c:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 8009640:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009644:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 8009648:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800964c:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8009650:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009654:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8009658:	eba3 0362 	sub.w	r3, r3, r2, asr #1
                        waitingForServe = true;
 800965c:	f04f 0a01 	mov.w	sl, #1
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 8009660:	f205 76d4 	addw	r6, r5, #2004	@ 0x7d4
                        waitingForServe = true;
 8009664:	f885 a7e4 	strb.w	sl, [r5, #2020]	@ 0x7e4
                        servingPlayer = 1; // Người chơi 1 phát bóng
 8009668:	f8c5 a7ec 	str.w	sl, [r5, #2028]	@ 0x7ec
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800966c:	edc6 7a00 	vstr	s15, [r6]
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009670:	ee07 3a90 	vmov	s15, r3
 8009674:	f505 69fb 	add.w	r9, r5, #2008	@ 0x7d8
                        desiredBallVelY1 = 0.0f;
 8009678:	f605 0304 	addw	r3, r5, #2052	@ 0x804
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800967c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
						lineAngle1 = 0.0f;
 8009680:	f605 050c 	addw	r5, r5, #2060	@ 0x80c
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009684:	edc9 7a00 	vstr	s15, [r9]
                        desiredBallVelY1 = 0.0f;
 8009688:	f8c3 8000 	str.w	r8, [r3]
						lineAngle1 = 0.0f;
 800968c:	f8c5 8000 	str.w	r8, [r5]
						line1.invalidate();
 8009690:	f504 7879 	add.w	r8, r4, #996	@ 0x3e4
 8009694:	4640      	mov	r0, r8
 8009696:	f009 ffb7 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
								   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800969a:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 800969e:	edd6 7a00 	vldr	s15, [r6]
 80096a2:	ee07 3a10 	vmov	s14, r3
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80096a6:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
								   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80096aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80096ae:	ee06 3a90 	vmov	s13, r3
								   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80096b2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80096b6:	eee7 7a06 	vfma.f32	s15, s14, s12
								   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80096ba:	2321      	movs	r3, #33	@ 0x21
 80096bc:	4640      	mov	r0, r8
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80096be:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80096c2:	ed99 7a00 	vldr	s14, [r9]
								   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80096c6:	9300      	str	r3, [sp, #0]
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80096c8:	eea6 7a86 	vfma.f32	s14, s13, s12
								   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 80096cc:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 80096d0:	ee37 7a48 	vsub.f32	s14, s14, s16
 80096d4:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80096d8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80096dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096e0:	ee17 2a10 	vmov	r2, s14
 80096e4:	ee17 1a90 	vmov	r1, s15
 80096e8:	b212      	sxth	r2, r2
 80096ea:	b209      	sxth	r1, r1
 80096ec:	f7f9 fd02 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
								   line1.setStart(16, 16);
 80096f0:	2210      	movs	r2, #16
 80096f2:	4611      	mov	r1, r2
 80096f4:	4640      	mov	r0, r8
 80096f6:	f7fd ffb5 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
								   line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 80096fa:	6828      	ldr	r0, [r5, #0]
 80096fc:	f7f6 ff2c 	bl	8000558 <__aeabi_f2d>
 8009700:	a399      	add	r3, pc, #612	@ (adr r3, 8009968 <_ZN14HardScreenView15handleTickEventEv+0x10a8>)
 8009702:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009706:	f7f6 ff7f 	bl	8000608 <__aeabi_dmul>
 800970a:	4b9b      	ldr	r3, [pc, #620]	@ (8009978 <_ZN14HardScreenView15handleTickEventEv+0x10b8>)
 800970c:	2200      	movs	r2, #0
 800970e:	f7f7 f8a5 	bl	800085c <__aeabi_ddiv>
 8009712:	f7f7 fa29 	bl	8000b68 <__aeabi_d2f>
 8009716:	ee08 0a90 	vmov	s17, r0
 800971a:	eeb0 0a68 	vmov.f32	s0, s17
 800971e:	f020 fb57 	bl	8029dd0 <cosf>
 8009722:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8009726:	eef0 9a48 	vmov.f32	s19, s16
 800972a:	eee0 9a09 	vfma.f32	s19, s0, s18
 800972e:	eeb0 0a68 	vmov.f32	s0, s17
 8009732:	f020 fb91 	bl	8029e58 <sinf>
 8009736:	eef0 0a48 	vmov.f32	s1, s16
 800973a:	eee0 0a09 	vfma.f32	s1, s0, s18
 800973e:	4640      	mov	r0, r8
 8009740:	eeb0 0a69 	vmov.f32	s0, s19
 8009744:	f7fd ff92 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8009748:	f884 a409 	strb.w	sl, [r4, #1033]	@ 0x409
									line1_1.invalidate();
 800974c:	4640      	mov	r0, r8
 800974e:	f009 ff5b 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        ball.moveTo(ballX, ballY);
 8009752:	ed99 7a00 	vldr	s14, [r9]
 8009756:	edd6 7a00 	vldr	s15, [r6]
 800975a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            ball.moveTo(ballX, ballY);
 800975e:	ee17 3a10 	vmov	r3, s14
 8009762:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009766:	b21a      	sxth	r2, r3
 8009768:	ee17 3a90 	vmov	r3, s15
 800976c:	e0f0      	b.n	8009950 <_ZN14HardScreenView15handleTickEventEv+0x1090>
                if (ballX <1) {
 800976e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009772:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8009776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800977a:	f140 80dc 	bpl.w	8009936 <_ZN14HardScreenView15handleTickEventEv+0x1076>
                    if (ballY > 60 && ballY < 181) {
 800977e:	ed9f 7a7f 	vldr	s14, [pc, #508]	@ 800997c <_ZN14HardScreenView15handleTickEventEv+0x10bc>
 8009782:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800978a:	f340 80c8 	ble.w	800991e <_ZN14HardScreenView15handleTickEventEv+0x105e>
 800978e:	ed9f 7a7c 	vldr	s14, [pc, #496]	@ 8009980 <_ZN14HardScreenView15handleTickEventEv+0x10c0>
 8009792:	eef4 7ac7 	vcmpe.f32	s15, s14
 8009796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800979a:	f140 80c0 	bpl.w	800991e <_ZN14HardScreenView15handleTickEventEv+0x105e>
                        score2++;
 800979e:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 80097a2:	4a73      	ldr	r2, [pc, #460]	@ (8009970 <_ZN14HardScreenView15handleTickEventEv+0x10b0>)
                        score2++;
 80097a4:	3301      	adds	r3, #1
 80097a6:	f8c5 37f4 	str.w	r3, [r5, #2036]	@ 0x7f4
                        Unicode::snprintf(HardScreenViewBase::score2Buffer, HardScreenViewBase::SCORE2_SIZE, "%d", score2);
 80097aa:	210a      	movs	r1, #10
 80097ac:	f204 40ec 	addw	r0, r4, #1260	@ 0x4ec
 80097b0:	f011 f998 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        HardScreenViewBase::score2.invalidate();
 80097b4:	f504 70a4 	add.w	r0, r4, #328	@ 0x148
 80097b8:	f00e fe1a 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 80097bc:	2601      	movs	r6, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 80097be:	2312      	movs	r3, #18
 80097c0:	f8c5 37fc 	str.w	r3, [r5, #2044]	@ 0x7fc
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80097c4:	486b      	ldr	r0, [pc, #428]	@ (8009974 <_ZN14HardScreenView15handleTickEventEv+0x10b4>)
						buzzerBeepState = true;
 80097c6:	f885 6800 	strb.w	r6, [r5, #2048]	@ 0x800
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 80097ca:	4632      	mov	r2, r6
 80097cc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80097d0:	f002 fa10 	bl	800bbf4 <HAL_GPIO_WritePin>
                        if (score2 >= 11) {
 80097d4:	f8d5 37f4 	ldr.w	r3, [r5, #2036]	@ 0x7f4
 80097d8:	2b0a      	cmp	r3, #10
 80097da:	dd05      	ble.n	80097e8 <_ZN14HardScreenView15handleTickEventEv+0xf28>
                            presenter->goToEndScreen(2);
 80097dc:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
                            gameOver = true;
 80097de:	f885 67f8 	strb.w	r6, [r5, #2040]	@ 0x7f8
                            presenter->goToEndScreen(2);
 80097e2:	2102      	movs	r1, #2
 80097e4:	f7fe ff8a 	bl	80086fc <_ZN19HardScreenPresenter13goToEndScreenEi>
 80097e8:	2300      	movs	r3, #0
 80097ea:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                        ball.invalidate();
 80097ee:	4638      	mov	r0, r7
 80097f0:	f009 ff0a 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 80097f4:	233c      	movs	r3, #60	@ 0x3c
 80097f6:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                        servingPlayer = 2; // Người chơi 2 phát bóng
 80097fa:	2302      	movs	r3, #2
 80097fc:	f8c5 37ec 	str.w	r3, [r5, #2028]	@ 0x7ec
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009800:	f9b4 22e0 	ldrsh.w	r2, [r4, #736]	@ 0x2e0
 8009804:	f9b4 3120 	ldrsh.w	r3, [r4, #288]	@ 0x120
 8009808:	1a9b      	subs	r3, r3, r2
 800980a:	3b0a      	subs	r3, #10
 800980c:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009810:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8009814:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009818:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 800981c:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8009820:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009824:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009828:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800982c:	eba3 0362 	sub.w	r3, r3, r2, asr #1
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 8009830:	f205 76d4 	addw	r6, r5, #2004	@ 0x7d4
                        waitingForServe = true;
 8009834:	f04f 0a01 	mov.w	sl, #1
 8009838:	f885 a7e4 	strb.w	sl, [r5, #2020]	@ 0x7e4
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800983c:	edc6 7a00 	vstr	s15, [r6]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009840:	ee07 3a90 	vmov	s15, r3
 8009844:	f505 69fb 	add.w	r9, r5, #2008	@ 0x7d8
                        desiredBallVelY2 = 0.0f;
 8009848:	f605 0308 	addw	r3, r5, #2056	@ 0x808
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800984c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
						lineAngle2 = 0.0f;
 8009850:	f505 6501 	add.w	r5, r5, #2064	@ 0x810
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 8009854:	edc9 7a00 	vstr	s15, [r9]
                        desiredBallVelY2 = 0.0f;
 8009858:	f8c3 8000 	str.w	r8, [r3]
						lineAngle2 = 0.0f;
 800985c:	f8c5 8000 	str.w	r8, [r5]
						line1_1.invalidate();
 8009860:	f504 688d 	add.w	r8, r4, #1128	@ 0x468
 8009864:	4640      	mov	r0, r8
 8009866:	f009 fecf 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
									float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800986a:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 800986e:	edd6 7a00 	vldr	s15, [r6]
 8009872:	ee07 3a10 	vmov	s14, r3
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009876:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
									float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800987a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800987e:	ee06 3a90 	vmov	s13, r3
									float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009882:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8009886:	eee7 7a06 	vfma.f32	s15, s14, s12
									line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800988a:	2321      	movs	r3, #33	@ 0x21
 800988c:	4640      	mov	r0, r8
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800988e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8009892:	ed99 7a00 	vldr	s14, [r9]
									line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009896:	9300      	str	r3, [sp, #0]
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009898:	eea6 7a86 	vfma.f32	s14, s13, s12
									line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800989c:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 80098a0:	ee37 7a48 	vsub.f32	s14, s14, s16
 80098a4:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80098a8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80098ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098b0:	ee17 2a10 	vmov	r2, s14
 80098b4:	ee17 1a90 	vmov	r1, s15
 80098b8:	b212      	sxth	r2, r2
 80098ba:	b209      	sxth	r1, r1
 80098bc:	f7f9 fc1a 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
									line1_1.setStart(16, 16);
 80098c0:	2210      	movs	r2, #16
 80098c2:	4611      	mov	r1, r2
 80098c4:	4640      	mov	r0, r8
 80098c6:	f7fd fecd 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
									line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 80098ca:	6828      	ldr	r0, [r5, #0]
 80098cc:	f7f6 fe44 	bl	8000558 <__aeabi_f2d>
 80098d0:	a325      	add	r3, pc, #148	@ (adr r3, 8009968 <_ZN14HardScreenView15handleTickEventEv+0x10a8>)
 80098d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098d6:	f7f6 fe97 	bl	8000608 <__aeabi_dmul>
 80098da:	4b27      	ldr	r3, [pc, #156]	@ (8009978 <_ZN14HardScreenView15handleTickEventEv+0x10b8>)
 80098dc:	2200      	movs	r2, #0
 80098de:	f7f6 ffbd 	bl	800085c <__aeabi_ddiv>
 80098e2:	f7f7 f941 	bl	8000b68 <__aeabi_d2f>
 80098e6:	ee08 0a90 	vmov	s17, r0
 80098ea:	eeb0 0a68 	vmov.f32	s0, s17
 80098ee:	f020 fa6f 	bl	8029dd0 <cosf>
 80098f2:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 80098f6:	eef0 9a48 	vmov.f32	s19, s16
 80098fa:	eee0 9a09 	vfma.f32	s19, s0, s18
 80098fe:	eeb0 0a68 	vmov.f32	s0, s17
 8009902:	f020 faa9 	bl	8029e58 <sinf>
 8009906:	eef0 0a48 	vmov.f32	s1, s16
 800990a:	eee0 0a09 	vfma.f32	s1, s0, s18
 800990e:	4640      	mov	r0, r8
 8009910:	eeb0 0a69 	vmov.f32	s0, s19
 8009914:	f7fd feaa 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8009918:	f884 a48d 	strb.w	sl, [r4, #1165]	@ 0x48d
 800991c:	e716      	b.n	800974c <_ZN14HardScreenView15handleTickEventEv+0xe8c>
                        ballX = 1;
 800991e:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8009922:	edc3 6a00 	vstr	s13, [r3]
                        ballVelX = -ballVelX;
 8009926:	f205 73dc 	addw	r3, r5, #2012	@ 0x7dc
 800992a:	ed93 7a00 	vldr	s14, [r3]
 800992e:	eeb1 7a47 	vneg.f32	s14, s14
 8009932:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 8009936:	f205 75d4 	addw	r5, r5, #2004	@ 0x7d4
 800993a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800993e:	ed95 7a00 	vldr	s14, [r5]
 8009942:	ee17 3a90 	vmov	r3, s15
 8009946:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800994a:	b21a      	sxth	r2, r3
 800994c:	ee17 3a10 	vmov	r3, s14
            ball.moveTo(ballX, ballY);
 8009950:	b219      	sxth	r1, r3
 8009952:	4638      	mov	r0, r7
 8009954:	f7f8 f997 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 8009958:	4638      	mov	r0, r7
 800995a:	f009 fe55 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
}
 800995e:	b005      	add	sp, #20
 8009960:	ecbd 8b04 	vpop	{d8-d9}
 8009964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009968:	54442d18 	.word	0x54442d18
 800996c:	400921fb 	.word	0x400921fb
 8009970:	0802d07f 	.word	0x0802d07f
 8009974:	40020c00 	.word	0x40020c00
 8009978:	40668000 	.word	0x40668000
 800997c:	42700000 	.word	0x42700000
 8009980:	43350000 	.word	0x43350000
            if (serveDelayTicks > 0) {
 8009984:	f8d5 37e8 	ldr.w	r3, [r5, #2024]	@ 0x7e8
 8009988:	2b00      	cmp	r3, #0
 800998a:	dd09      	ble.n	80099a0 <_ZN14HardScreenView15handleTickEventEv+0x10e0>
                serveDelayTicks--;
 800998c:	3b01      	subs	r3, #1
 800998e:	f8c5 37e8 	str.w	r3, [r5, #2024]	@ 0x7e8
                if (serveDelayTicks == 0) {
 8009992:	b92b      	cbnz	r3, 80099a0 <_ZN14HardScreenView15handleTickEventEv+0x10e0>
 8009994:	2301      	movs	r3, #1
 8009996:	f884 32fd 	strb.w	r3, [r4, #765]	@ 0x2fd
                    ball.invalidate();
 800999a:	4638      	mov	r0, r7
 800999c:	f009 fe34 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 80099a0:	f8d5 87ec 	ldr.w	r8, [r5, #2028]	@ 0x7ec
 80099a4:	f1b8 0f01 	cmp.w	r8, #1
 80099a8:	d179      	bne.n	8009a9e <_ZN14HardScreenView15handleTickEventEv+0x11de>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80099aa:	f9b4 30fa 	ldrsh.w	r3, [r4, #250]	@ 0xfa
 80099ae:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 80099b2:	f9b4 30f6 	ldrsh.w	r3, [r4, #246]	@ 0xf6
 80099b6:	eb03 0362 	add.w	r3, r3, r2, asr #1
 80099ba:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 80099be:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 80099c2:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 80099c6:	ee07 3a90 	vmov	s15, r3
 80099ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                line1.invalidate();
 80099ce:	f504 7679 	add.w	r6, r4, #996	@ 0x3e4
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 80099d2:	f505 69fb 	add.w	r9, r5, #2008	@ 0x7d8
 80099d6:	edc9 7a00 	vstr	s15, [r9]
                line1.invalidate();
 80099da:	4630      	mov	r0, r6
 80099dc:	f009 fe14 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                            float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80099e0:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 80099e4:	ee07 3a10 	vmov	s14, r3
 80099e8:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 80099ec:	edd3 7a00 	vldr	s15, [r3]
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80099f0:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
                            float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80099f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 80099f8:	ee06 3a90 	vmov	s13, r3
                            float ballCenterX = ballX + ball.getWidth() / 2.0f;
 80099fc:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8009a00:	eee7 7a06 	vfma.f32	s15, s14, s12
                            line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009a04:	2321      	movs	r3, #33	@ 0x21
 8009a06:	4630      	mov	r0, r6
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009a08:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8009a0c:	ed99 7a00 	vldr	s14, [r9]
                            line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009a10:	9300      	str	r3, [sp, #0]
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009a12:	eea6 7a86 	vfma.f32	s14, s13, s12
                            line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009a16:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8009a1a:	ee37 7a48 	vsub.f32	s14, s14, s16
 8009a1e:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8009a22:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009a26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a2a:	ee17 2a10 	vmov	r2, s14
 8009a2e:	ee17 1a90 	vmov	r1, s15
 8009a32:	b212      	sxth	r2, r2
 8009a34:	b209      	sxth	r1, r1
 8009a36:	f7f9 fb5d 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                            line1.setStart(16, 16);
 8009a3a:	2210      	movs	r2, #16
 8009a3c:	4611      	mov	r1, r2
 8009a3e:	4630      	mov	r0, r6
 8009a40:	f7fd fe10 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                            line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 8009a44:	f605 030c 	addw	r3, r5, #2060	@ 0x80c
 8009a48:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8009a4c:	6818      	ldr	r0, [r3, #0]
 8009a4e:	f7f6 fd83 	bl	8000558 <__aeabi_f2d>
 8009a52:	a353      	add	r3, pc, #332	@ (adr r3, 8009ba0 <_ZN14HardScreenView15handleTickEventEv+0x12e0>)
 8009a54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a58:	f7f6 fdd6 	bl	8000608 <__aeabi_dmul>
 8009a5c:	4b52      	ldr	r3, [pc, #328]	@ (8009ba8 <_ZN14HardScreenView15handleTickEventEv+0x12e8>)
 8009a5e:	2200      	movs	r2, #0
 8009a60:	f7f6 fefc 	bl	800085c <__aeabi_ddiv>
 8009a64:	f7f7 f880 	bl	8000b68 <__aeabi_d2f>
 8009a68:	ee08 0a90 	vmov	s17, r0
 8009a6c:	eeb0 0a68 	vmov.f32	s0, s17
 8009a70:	f020 f9ae 	bl	8029dd0 <cosf>
 8009a74:	eef0 9a48 	vmov.f32	s19, s16
 8009a78:	eee0 9a09 	vfma.f32	s19, s0, s18
 8009a7c:	eeb0 0a68 	vmov.f32	s0, s17
 8009a80:	f020 f9ea 	bl	8029e58 <sinf>
 8009a84:	eef0 0a48 	vmov.f32	s1, s16
 8009a88:	eee0 0a09 	vfma.f32	s1, s0, s18
 8009a8c:	4630      	mov	r0, r6
 8009a8e:	eeb0 0a69 	vmov.f32	s0, s19
 8009a92:	f7fd fdeb 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8009a96:	f884 8409 	strb.w	r8, [r4, #1033]	@ 0x409
                           line1_1.invalidate();
 8009a9a:	4630      	mov	r0, r6
 8009a9c:	e4d1      	b.n	8009442 <_ZN14HardScreenView15handleTickEventEv+0xb82>
            } else if (servingPlayer == 2) {
 8009a9e:	f1b8 0f02 	cmp.w	r8, #2
 8009aa2:	f47f acd0 	bne.w	8009446 <_ZN14HardScreenView15handleTickEventEv+0xb86>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8009aa6:	f9b4 3126 	ldrsh.w	r3, [r4, #294]	@ 0x126
 8009aaa:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 8009aae:	f9b4 3122 	ldrsh.w	r3, [r4, #290]	@ 0x122
 8009ab2:	eb03 0362 	add.w	r3, r3, r2, asr #1
 8009ab6:	f9b4 22e2 	ldrsh.w	r2, [r4, #738]	@ 0x2e2
 8009aba:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8009abe:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 8009ac2:	ee07 3a90 	vmov	s15, r3
 8009ac6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                line1_1.invalidate();
 8009aca:	f504 668d 	add.w	r6, r4, #1128	@ 0x468
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 8009ace:	f505 68fb 	add.w	r8, r5, #2008	@ 0x7d8
 8009ad2:	edc8 7a00 	vstr	s15, [r8]
                line1_1.invalidate();
 8009ad6:	4630      	mov	r0, r6
 8009ad8:	f009 fd96 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                           float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009adc:	f9b4 32e0 	ldrsh.w	r3, [r4, #736]	@ 0x2e0
 8009ae0:	ee07 3a10 	vmov	s14, r3
 8009ae4:	f205 73d4 	addw	r3, r5, #2004	@ 0x7d4
 8009ae8:	edd3 7a00 	vldr	s15, [r3]
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009aec:	f9b4 32e2 	ldrsh.w	r3, [r4, #738]	@ 0x2e2
                           float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009af0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009af4:	ee06 3a90 	vmov	s13, r3
                           float ballCenterX = ballX + ball.getWidth() / 2.0f;
 8009af8:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8009afc:	eee7 7a06 	vfma.f32	s15, s14, s12
                           line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009b00:	2321      	movs	r3, #33	@ 0x21
 8009b02:	4630      	mov	r0, r6
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009b04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8009b08:	ed98 7a00 	vldr	s14, [r8]
                           line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009b0c:	9300      	str	r3, [sp, #0]
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 8009b0e:	eea6 7a86 	vfma.f32	s14, s13, s12
                           line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 8009b12:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 8009b16:	ee37 7a48 	vsub.f32	s14, s14, s16
 8009b1a:	ee77 7ac8 	vsub.f32	s15, s15, s16
 8009b1e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009b22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b26:	ee17 2a10 	vmov	r2, s14
 8009b2a:	ee17 1a90 	vmov	r1, s15
 8009b2e:	b212      	sxth	r2, r2
 8009b30:	b209      	sxth	r1, r1
 8009b32:	f7f9 fadf 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                           line1_1.setStart(16, 16);
 8009b36:	2210      	movs	r2, #16
 8009b38:	4611      	mov	r1, r2
 8009b3a:	4630      	mov	r0, r6
 8009b3c:	f7fd fd92 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                           line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 8009b40:	f505 6301 	add.w	r3, r5, #2064	@ 0x810
 8009b44:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 8009b48:	6818      	ldr	r0, [r3, #0]
 8009b4a:	f7f6 fd05 	bl	8000558 <__aeabi_f2d>
 8009b4e:	a314      	add	r3, pc, #80	@ (adr r3, 8009ba0 <_ZN14HardScreenView15handleTickEventEv+0x12e0>)
 8009b50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b54:	f7f6 fd58 	bl	8000608 <__aeabi_dmul>
 8009b58:	4b13      	ldr	r3, [pc, #76]	@ (8009ba8 <_ZN14HardScreenView15handleTickEventEv+0x12e8>)
 8009b5a:	2200      	movs	r2, #0
 8009b5c:	f7f6 fe7e 	bl	800085c <__aeabi_ddiv>
 8009b60:	f7f7 f802 	bl	8000b68 <__aeabi_d2f>
 8009b64:	ee08 0a90 	vmov	s17, r0
 8009b68:	eeb0 0a68 	vmov.f32	s0, s17
 8009b6c:	f020 f930 	bl	8029dd0 <cosf>
 8009b70:	eef0 9a48 	vmov.f32	s19, s16
 8009b74:	eee0 9a09 	vfma.f32	s19, s0, s18
 8009b78:	eeb0 0a68 	vmov.f32	s0, s17
 8009b7c:	f020 f96c 	bl	8029e58 <sinf>
 8009b80:	eef0 0a48 	vmov.f32	s1, s16
 8009b84:	eee0 0a09 	vfma.f32	s1, s0, s18
 8009b88:	4630      	mov	r0, r6
 8009b8a:	eeb0 0a69 	vmov.f32	s0, s19
 8009b8e:	f7fd fd6d 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 8009b92:	2301      	movs	r3, #1
 8009b94:	f884 348d 	strb.w	r3, [r4, #1165]	@ 0x48d
 8009b98:	e77f      	b.n	8009a9a <_ZN14HardScreenView15handleTickEventEv+0x11da>
 8009b9a:	bf00      	nop
 8009b9c:	f3af 8000 	nop.w
 8009ba0:	54442d18 	.word	0x54442d18
 8009ba4:	400921fb 	.word	0x400921fb
 8009ba8:	40668000 	.word	0x40668000

08009bac <_ZN26MediumReadyScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MediumReadyScreenPresenter() {}
 8009bac:	4770      	bx	lr

08009bae <_ZThn4_N26MediumReadyScreenPresenterD1Ev>:
 8009bae:	3804      	subs	r0, #4
 8009bb0:	4770      	bx	lr

08009bb2 <_ZN26MediumReadyScreenPresenter10deactivateEv>:
}

void MediumReadyScreenPresenter::activate()
{

}
 8009bb2:	4770      	bx	lr

08009bb4 <_ZN26MediumReadyScreenPresenterD0Ev>:
 8009bb4:	b510      	push	{r4, lr}
 8009bb6:	2110      	movs	r1, #16
 8009bb8:	4604      	mov	r4, r0
 8009bba:	f020 f895 	bl	8029ce8 <_ZdlPvj>
 8009bbe:	4620      	mov	r0, r4
 8009bc0:	bd10      	pop	{r4, pc}

08009bc2 <_ZThn4_N26MediumReadyScreenPresenterD0Ev>:
 8009bc2:	f1a0 0004 	sub.w	r0, r0, #4
 8009bc6:	e7f5      	b.n	8009bb4 <_ZN26MediumReadyScreenPresenterD0Ev>

08009bc8 <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView>:
 8009bc8:	2200      	movs	r2, #0
 8009bca:	6082      	str	r2, [r0, #8]
    : view(v)
 8009bcc:	4a02      	ldr	r2, [pc, #8]	@ (8009bd8 <_ZN26MediumReadyScreenPresenterC1ER21MediumReadyScreenView+0x10>)
 8009bce:	6002      	str	r2, [r0, #0]
 8009bd0:	3218      	adds	r2, #24
 8009bd2:	6042      	str	r2, [r0, #4]
 8009bd4:	60c1      	str	r1, [r0, #12]
}
 8009bd6:	4770      	bx	lr
 8009bd8:	0802dbf8 	.word	0x0802dbf8

08009bdc <_ZN21MediumReadyScreenView14tearDownScreenEv>:
}

void MediumReadyScreenView::tearDownScreen()
{
    MediumReadyScreenViewBase::tearDownScreen();
}
 8009bdc:	4770      	bx	lr
	...

08009be0 <_ZN21MediumReadyScreenViewD1Ev>:

class MediumReadyScreenView : public MediumReadyScreenViewBase
{
public:
    MediumReadyScreenView();
    virtual ~MediumReadyScreenView() {}
 8009be0:	b510      	push	{r4, lr}
 8009be2:	4b03      	ldr	r3, [pc, #12]	@ (8009bf0 <_ZN21MediumReadyScreenViewD1Ev+0x10>)
 8009be4:	6003      	str	r3, [r0, #0]
 8009be6:	4604      	mov	r4, r0
 8009be8:	f7fc f82c 	bl	8005c44 <_ZN25MediumReadyScreenViewBaseD1Ev>
 8009bec:	4620      	mov	r0, r4
 8009bee:	bd10      	pop	{r4, pc}
 8009bf0:	0802dc20 	.word	0x0802dc20

08009bf4 <_ZN21MediumReadyScreenViewD0Ev>:
 8009bf4:	b510      	push	{r4, lr}
 8009bf6:	4604      	mov	r4, r0
 8009bf8:	f7ff fff2 	bl	8009be0 <_ZN21MediumReadyScreenViewD1Ev>
 8009bfc:	4620      	mov	r0, r4
 8009bfe:	f241 6124 	movw	r1, #5668	@ 0x1624
 8009c02:	f020 f871 	bl	8029ce8 <_ZdlPvj>
 8009c06:	4620      	mov	r0, r4
 8009c08:	bd10      	pop	{r4, pc}

08009c0a <_ZN21MediumReadyScreenView15handleTickEventEv>:
void MediumReadyScreenView::handleTickEvent()
{

	    if (tickCounter > 0)
 8009c0a:	f500 5280 	add.w	r2, r0, #4096	@ 0x1000
{
 8009c0e:	b510      	push	{r4, lr}
	    if (tickCounter > 0)
 8009c10:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
 8009c14:	2900      	cmp	r1, #0
 8009c16:	dd07      	ble.n	8009c28 <_ZN21MediumReadyScreenView15handleTickEventEv+0x1e>
	    {
	        tickCounter--;
	        updateCounter(tickCounter);
 8009c18:	6803      	ldr	r3, [r0, #0]
	        tickCounter--;
 8009c1a:	3901      	subs	r1, #1

	    }else{
	    	application().gotoMediumScreenScreenNoTransition();
	    }

}
 8009c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	        updateCounter(tickCounter);
 8009c20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
	        tickCounter--;
 8009c22:	f8c2 1620 	str.w	r1, [r2, #1568]	@ 0x620
	        updateCounter(tickCounter);
 8009c26:	4718      	bx	r3
 8009c28:	f00d fb44 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
}
 8009c2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	    	application().gotoMediumScreenScreenNoTransition();
 8009c30:	f7fa bab2 	b.w	8004198 <_ZN23FrontendApplicationBase34gotoMediumScreenScreenNoTransitionEv>

08009c34 <_ZN21MediumReadyScreenViewC1Ev>:
MediumReadyScreenView::MediumReadyScreenView()
 8009c34:	b510      	push	{r4, lr}
 8009c36:	4604      	mov	r4, r0
 8009c38:	f7fc f830 	bl	8005c9c <_ZN25MediumReadyScreenViewBaseC1Ev>
 8009c3c:	4b04      	ldr	r3, [pc, #16]	@ (8009c50 <_ZN21MediumReadyScreenViewC1Ev+0x1c>)
 8009c3e:	6023      	str	r3, [r4, #0]
 8009c40:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8009c44:	22b4      	movs	r2, #180	@ 0xb4
 8009c46:	f8c3 2620 	str.w	r2, [r3, #1568]	@ 0x620
}
 8009c4a:	4620      	mov	r0, r4
 8009c4c:	bd10      	pop	{r4, pc}
 8009c4e:	bf00      	nop
 8009c50:	0802dc20 	.word	0x0802dc20

08009c54 <_ZN21MediumReadyScreenView11setupScreenEv>:
{
 8009c54:	b510      	push	{r4, lr}
 8009c56:	4604      	mov	r4, r0
    MediumReadyScreenViewBase::setupScreen();
 8009c58:	f7fb fff2 	bl	8005c40 <_ZN25MediumReadyScreenViewBase11setupScreenEv>
    updateCounter(tickCounter);
 8009c5c:	6823      	ldr	r3, [r4, #0]
 8009c5e:	f504 5280 	add.w	r2, r4, #4096	@ 0x1000
 8009c62:	4620      	mov	r0, r4
 8009c64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009c66:	f8d2 1620 	ldr.w	r1, [r2, #1568]	@ 0x620
}
 8009c6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateCounter(tickCounter);
 8009c6e:	4718      	bx	r3

08009c70 <_ZN21MediumReadyScreenView13updateCounterEi>:
void MediumReadyScreenView::updateCounter(int value)
{
	 	int countdownDisplay = 3;
	    if (value > 120)
 8009c70:	2978      	cmp	r1, #120	@ 0x78
{
 8009c72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009c74:	4605      	mov	r5, r0
	    if (value > 120)
 8009c76:	dc23      	bgt.n	8009cc0 <_ZN21MediumReadyScreenView13updateCounterEi+0x50>
	        countdownDisplay = 3;
	    else if (value > 60)
 8009c78:	293c      	cmp	r1, #60	@ 0x3c
 8009c7a:	dc23      	bgt.n	8009cc4 <_ZN21MediumReadyScreenView13updateCounterEi+0x54>
	        countdownDisplay = 2;
	    else if (value > 0)
 8009c7c:	2900      	cmp	r1, #0
 8009c7e:	bfd4      	ite	le
 8009c80:	2400      	movle	r4, #0
 8009c82:	2401      	movgt	r4, #1
	        countdownDisplay = 1;
	    else
	        countdownDisplay = 0;

	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8009c84:	f505 774d 	add.w	r7, r5, #820	@ 0x334
 8009c88:	4623      	mov	r3, r4
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8009c8a:	f505 7652 	add.w	r6, r5, #840	@ 0x348
	    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%d", countdownDisplay);
 8009c8e:	4a0e      	ldr	r2, [pc, #56]	@ (8009cc8 <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8009c90:	210a      	movs	r1, #10
 8009c92:	4638      	mov	r0, r7
 8009c94:	f010 ff26 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%d", countdownDisplay);
 8009c98:	4623      	mov	r3, r4
 8009c9a:	4a0b      	ldr	r2, [pc, #44]	@ (8009cc8 <_ZN21MediumReadyScreenView13updateCounterEi+0x58>)
 8009c9c:	210a      	movs	r1, #10
 8009c9e:	4630      	mov	r0, r6
 8009ca0:	f010 ff20 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	    counter1.setWildcard(counter1Buffer);
	    counter2.setWildcard(counter2Buffer);
	    counter1.invalidate();  // Vẽ lại TextArea
 8009ca4:	f505 700d 	add.w	r0, r5, #564	@ 0x234
 8009ca8:	f8c5 727c 	str.w	r7, [r5, #636]	@ 0x27c
 8009cac:	f8c5 6330 	str.w	r6, [r5, #816]	@ 0x330
 8009cb0:	f00e fb9e 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	    counter2.invalidate();  // Vẽ lại TextArea
 8009cb4:	f505 703a 	add.w	r0, r5, #744	@ 0x2e8
}
 8009cb8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
	    counter2.invalidate();  // Vẽ lại TextArea
 8009cbc:	f00e bb98 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	        countdownDisplay = 3;
 8009cc0:	2403      	movs	r4, #3
 8009cc2:	e7df      	b.n	8009c84 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
	        countdownDisplay = 2;
 8009cc4:	2402      	movs	r4, #2
 8009cc6:	e7dd      	b.n	8009c84 <_ZN21MediumReadyScreenView13updateCounterEi+0x14>
 8009cc8:	0802d07f 	.word	0x0802d07f

08009ccc <_ZN21MediumScreenPresenterD1Ev>:
     */
    virtual void deactivate();
    void handleTickEvent();
    void goToEndScreen(int winner);
    void resetGame();
    virtual ~MediumScreenPresenter() {}
 8009ccc:	4770      	bx	lr

08009cce <_ZThn4_N21MediumScreenPresenterD1Ev>:
 8009cce:	3804      	subs	r0, #4
 8009cd0:	4770      	bx	lr

08009cd2 <_ZN21MediumScreenPresenter10deactivateEv>:
}

void MediumScreenPresenter::deactivate()
{

}
 8009cd2:	4770      	bx	lr

08009cd4 <_ZN21MediumScreenPresenterD0Ev>:
 8009cd4:	b510      	push	{r4, lr}
 8009cd6:	2110      	movs	r1, #16
 8009cd8:	4604      	mov	r4, r0
 8009cda:	f020 f805 	bl	8029ce8 <_ZdlPvj>
 8009cde:	4620      	mov	r0, r4
 8009ce0:	bd10      	pop	{r4, pc}

08009ce2 <_ZThn4_N21MediumScreenPresenterD0Ev>:
 8009ce2:	f1a0 0004 	sub.w	r0, r0, #4
 8009ce6:	e7f5      	b.n	8009cd4 <_ZN21MediumScreenPresenterD0Ev>

08009ce8 <_ZN21MediumScreenPresenter8activateEv>:
	model->resetGame();
 8009ce8:	6880      	ldr	r0, [r0, #8]
 8009cea:	f000 bfd9 	b.w	800aca0 <_ZN5Model9resetGameEv>
	...

08009cf0 <_ZN21MediumScreenPresenterC1ER16MediumScreenView>:
 8009cf0:	2200      	movs	r2, #0
 8009cf2:	6082      	str	r2, [r0, #8]
    : view(v)
 8009cf4:	4a02      	ldr	r2, [pc, #8]	@ (8009d00 <_ZN21MediumScreenPresenterC1ER16MediumScreenView+0x10>)
 8009cf6:	6002      	str	r2, [r0, #0]
 8009cf8:	3218      	adds	r2, #24
 8009cfa:	6042      	str	r2, [r0, #4]
 8009cfc:	60c1      	str	r1, [r0, #12]
}
 8009cfe:	4770      	bx	lr
 8009d00:	0802dc58 	.word	0x0802dc58

08009d04 <_ZN21MediumScreenPresenter13goToEndScreenEi>:
void MediumScreenPresenter::handleTickEvent()
{

}
void MediumScreenPresenter::goToEndScreen(int winner){
 8009d04:	b508      	push	{r3, lr}
	model->setWinner(winner);
 8009d06:	6880      	ldr	r0, [r0, #8]
 8009d08:	f000 ffb6 	bl	800ac78 <_ZN5Model9setWinnerEi>
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8009d0c:	f00d fad2 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
}
 8009d10:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	static_cast<FrontendApplication*>(touchgfx::Application::getInstance())->gotoEndScreenScreenNoTransition();
 8009d14:	f7fa ba80 	b.w	8004218 <_ZN23FrontendApplicationBase31gotoEndScreenScreenNoTransitionEv>

08009d18 <_ZN16MediumScreenView14tearDownScreenEv>:
}

void MediumScreenView::tearDownScreen()
{
    MediumScreenViewBase::tearDownScreen();
}
 8009d18:	4770      	bx	lr
	...

08009d1c <_ZN16MediumScreenViewD1Ev>:

class MediumScreenView : public MediumScreenViewBase
{
public:
    MediumScreenView();
    virtual ~MediumScreenView() {}
 8009d1c:	b510      	push	{r4, lr}
 8009d1e:	4b03      	ldr	r3, [pc, #12]	@ (8009d2c <_ZN16MediumScreenViewD1Ev+0x10>)
 8009d20:	6003      	str	r3, [r0, #0]
 8009d22:	4604      	mov	r4, r0
 8009d24:	f7fc fa4a 	bl	80061bc <_ZN20MediumScreenViewBaseD1Ev>
 8009d28:	4620      	mov	r0, r4
 8009d2a:	bd10      	pop	{r4, pc}
 8009d2c:	0802dc80 	.word	0x0802dc80

08009d30 <_ZN16MediumScreenViewD0Ev>:
 8009d30:	b510      	push	{r4, lr}
 8009d32:	4604      	mov	r4, r0
 8009d34:	f7ff fff2 	bl	8009d1c <_ZN16MediumScreenViewD1Ev>
 8009d38:	4620      	mov	r0, r4
 8009d3a:	f241 7164 	movw	r1, #5988	@ 0x1764
 8009d3e:	f01f ffd3 	bl	8029ce8 <_ZdlPvj>
 8009d42:	4620      	mov	r0, r4
 8009d44:	bd10      	pop	{r4, pc}
	...

08009d48 <_ZN16MediumScreenViewC1Ev>:
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 8009d48:	b510      	push	{r4, lr}
 8009d4a:	4604      	mov	r4, r0
								  desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),lineAngle1(0.0f), lineAngle2(0.0f)
 8009d4c:	f7fc fa50 	bl	80061f0 <_ZN20MediumScreenViewBaseC1Ev>
 8009d50:	4b19      	ldr	r3, [pc, #100]	@ (8009db8 <_ZN16MediumScreenViewC1Ev+0x70>)
 8009d52:	6023      	str	r3, [r4, #0]
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 8009d54:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8009d58:	f203 7224 	addw	r2, r3, #1828	@ 0x724
 8009d5c:	4917      	ldr	r1, [pc, #92]	@ (8009dbc <_ZN16MediumScreenViewC1Ev+0x74>)
 8009d5e:	6011      	str	r1, [r2, #0]
 8009d60:	f503 62e5 	add.w	r2, r3, #1832	@ 0x728
 8009d64:	4916      	ldr	r1, [pc, #88]	@ (8009dc0 <_ZN16MediumScreenViewC1Ev+0x78>)
 8009d66:	6011      	str	r1, [r2, #0]
 8009d68:	f203 712c 	addw	r1, r3, #1836	@ 0x72c
 8009d6c:	4a15      	ldr	r2, [pc, #84]	@ (8009dc4 <_ZN16MediumScreenViewC1Ev+0x7c>)
 8009d6e:	600a      	str	r2, [r1, #0]
 8009d70:	f503 61e6 	add.w	r1, r3, #1840	@ 0x730
}
 8009d74:	4620      	mov	r0, r4
MediumScreenView::MediumScreenView():ballX(160), ballY(120), ballVelX(1.4f), ballVelY(1.4f),
 8009d76:	600a      	str	r2, [r1, #0]
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8009d78:	2200      	movs	r2, #0
								  desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),lineAngle1(0.0f), lineAngle2(0.0f)
 8009d7a:	f203 7154 	addw	r1, r3, #1876	@ 0x754
								  waitingForServe(false), serveDelayTicks(0), servingPlayer(0),
 8009d7e:	f883 2734 	strb.w	r2, [r3, #1844]	@ 0x734
 8009d82:	f8c3 2738 	str.w	r2, [r3, #1848]	@ 0x738
 8009d86:	f8c3 273c 	str.w	r2, [r3, #1852]	@ 0x73c
								  score1(0), score2(0),gameOver(false),buzzerBeepCounter(0), buzzerBeepState(false),
 8009d8a:	f8c3 2740 	str.w	r2, [r3, #1856]	@ 0x740
 8009d8e:	f8c3 2744 	str.w	r2, [r3, #1860]	@ 0x744
 8009d92:	f883 2748 	strb.w	r2, [r3, #1864]	@ 0x748
 8009d96:	f8c3 274c 	str.w	r2, [r3, #1868]	@ 0x74c
 8009d9a:	f883 2750 	strb.w	r2, [r3, #1872]	@ 0x750
								  desiredBallVelY1(0.0f), desiredBallVelY2(0.0f),lineAngle1(0.0f), lineAngle2(0.0f)
 8009d9e:	2200      	movs	r2, #0
 8009da0:	600a      	str	r2, [r1, #0]
 8009da2:	f503 61eb 	add.w	r1, r3, #1880	@ 0x758
 8009da6:	f203 735c 	addw	r3, r3, #1884	@ 0x75c
 8009daa:	600a      	str	r2, [r1, #0]
 8009dac:	601a      	str	r2, [r3, #0]
 8009dae:	f504 53bb 	add.w	r3, r4, #5984	@ 0x1760
 8009db2:	601a      	str	r2, [r3, #0]
}
 8009db4:	bd10      	pop	{r4, pc}
 8009db6:	bf00      	nop
 8009db8:	0802dc80 	.word	0x0802dc80
 8009dbc:	43200000 	.word	0x43200000
 8009dc0:	42f00000 	.word	0x42f00000
 8009dc4:	3fb33333 	.word	0x3fb33333

08009dc8 <_ZN16MediumScreenView11setupScreenEv>:
{
 8009dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009dcc:	4605      	mov	r5, r0
    score1 = 0;
 8009dce:	f505 5480 	add.w	r4, r5, #4096	@ 0x1000
	ballX = 160;
 8009dd2:	f204 7724 	addw	r7, r4, #1828	@ 0x724
    MediumScreenViewBase::setupScreen();
 8009dd6:	f7fc f9ef 	bl	80061b8 <_ZN20MediumScreenViewBase11setupScreenEv>
	ballY = 120;
 8009dda:	f504 68e5 	add.w	r8, r4, #1832	@ 0x728
    score1 = 0;
 8009dde:	2300      	movs	r3, #0
	ballX = 160;
 8009de0:	4a34      	ldr	r2, [pc, #208]	@ (8009eb4 <_ZN16MediumScreenView11setupScreenEv+0xec>)
    score1 = 0;
 8009de2:	f8c4 3740 	str.w	r3, [r4, #1856]	@ 0x740
	score2 = 0;
 8009de6:	f8c4 3744 	str.w	r3, [r4, #1860]	@ 0x744
	gameOver = false;
 8009dea:	f884 3748 	strb.w	r3, [r4, #1864]	@ 0x748
	ballVelX = 1.4f;
 8009dee:	f204 712c 	addw	r1, r4, #1836	@ 0x72c
	ballX = 160;
 8009df2:	603a      	str	r2, [r7, #0]
	ballY = 120;
 8009df4:	4a30      	ldr	r2, [pc, #192]	@ (8009eb8 <_ZN16MediumScreenView11setupScreenEv+0xf0>)
 8009df6:	f8c8 2000 	str.w	r2, [r8]
	ballVelX = 1.4f;
 8009dfa:	4a30      	ldr	r2, [pc, #192]	@ (8009ebc <_ZN16MediumScreenView11setupScreenEv+0xf4>)
 8009dfc:	600a      	str	r2, [r1, #0]
	ballVelY = 1.4f;
 8009dfe:	f504 61e6 	add.w	r1, r4, #1840	@ 0x730
    line1.invalidate();
 8009e02:	f505 704d 	add.w	r0, r5, #820	@ 0x334
	ballVelY = 1.4f;
 8009e06:	600a      	str	r2, [r1, #0]
    desiredBallVelY1 = 0.0f;
 8009e08:	f204 7154 	addw	r1, r4, #1876	@ 0x754
 8009e0c:	2200      	movs	r2, #0
	waitingForServe = false;
 8009e0e:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
	serveDelayTicks = 0;
 8009e12:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
	servingPlayer = 0;
 8009e16:	f8c4 373c 	str.w	r3, [r4, #1852]	@ 0x73c
    buzzerBeepCounter = 0;
 8009e1a:	f8c4 374c 	str.w	r3, [r4, #1868]	@ 0x74c
    buzzerBeepState = false;
 8009e1e:	f884 3750 	strb.w	r3, [r4, #1872]	@ 0x750
    desiredBallVelY1 = 0.0f;
 8009e22:	600a      	str	r2, [r1, #0]
    desiredBallVelY2 = 0.0f;
 8009e24:	f504 61eb 	add.w	r1, r4, #1880	@ 0x758
	ball.invalidate();
 8009e28:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
    desiredBallVelY2 = 0.0f;
 8009e2c:	600a      	str	r2, [r1, #0]
    lineAngle1 = 0.0f;
 8009e2e:	f204 715c 	addw	r1, r4, #1884	@ 0x75c
 8009e32:	600a      	str	r2, [r1, #0]
    lineAngle2 = 0.0f;
 8009e34:	f505 51bb 	add.w	r1, r5, #5984	@ 0x1760
 8009e38:	600a      	str	r2, [r1, #0]
 8009e3a:	f885 3359 	strb.w	r3, [r5, #857]	@ 0x359
 8009e3e:	f885 33dd 	strb.w	r3, [r5, #989]	@ 0x3dd
    line1.invalidate();
 8009e42:	f009 fbe1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
    line1_1.invalidate();
 8009e46:	f505 706e 	add.w	r0, r5, #952	@ 0x3b8
 8009e4a:	f009 fbdd 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.invalidate();
 8009e4e:	4630      	mov	r0, r6
 8009e50:	f009 fbda 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	ball.moveTo(ballX, ballY);
 8009e54:	ed98 7a00 	vldr	s14, [r8]
 8009e58:	edd7 7a00 	vldr	s15, [r7]
 8009e5c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8009e60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e64:	ee17 3a10 	vmov	r3, s14
 8009e68:	b21a      	sxth	r2, r3
 8009e6a:	ee17 3a90 	vmov	r3, s15
 8009e6e:	4630      	mov	r0, r6
 8009e70:	b219      	sxth	r1, r3
 8009e72:	f7f7 ff08 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
	ball.invalidate();
 8009e76:	4630      	mov	r0, r6
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8009e78:	4e11      	ldr	r6, [pc, #68]	@ (8009ec0 <_ZN16MediumScreenView11setupScreenEv+0xf8>)
	ball.invalidate();
 8009e7a:	f009 fbc5 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 8009e7e:	f8d4 3740 	ldr.w	r3, [r4, #1856]	@ 0x740
 8009e82:	4632      	mov	r2, r6
 8009e84:	210a      	movs	r1, #10
 8009e86:	f505 608a 	add.w	r0, r5, #1104	@ 0x450
 8009e8a:	f010 fe2b 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score1.invalidate();
 8009e8e:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 8009e92:	f00e faad 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
	Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 8009e96:	f8d4 3744 	ldr.w	r3, [r4, #1860]	@ 0x744
 8009e9a:	4632      	mov	r2, r6
 8009e9c:	f205 403c 	addw	r0, r5, #1084	@ 0x43c
 8009ea0:	210a      	movs	r1, #10
 8009ea2:	f010 fe1f 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	MediumScreenViewBase::score2.invalidate();
 8009ea6:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
}
 8009eaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	MediumScreenViewBase::score2.invalidate();
 8009eae:	f00e ba9f 	b.w	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009eb2:	bf00      	nop
 8009eb4:	43200000 	.word	0x43200000
 8009eb8:	42f00000 	.word	0x42f00000
 8009ebc:	3fb33333 	.word	0x3fb33333
 8009ec0:	0802d07f 	.word	0x0802d07f
 8009ec4:	00000000 	.word	0x00000000

08009ec8 <_ZN16MediumScreenView15handleTickEventEv>:

void MediumScreenView::handleTickEvent()
{
 8009ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

    if (gameOver) {
 8009ecc:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
{
 8009ed0:	ed2d 8b04 	vpush	{d8-d9}
    if (gameOver) {
 8009ed4:	f894 3748 	ldrb.w	r3, [r4, #1864]	@ 0x748
{
 8009ed8:	b085      	sub	sp, #20
 8009eda:	4605      	mov	r5, r0
    if (gameOver) {
 8009edc:	b18b      	cbz	r3, 8009f02 <_ZN16MediumScreenView15handleTickEventEv+0x3a>
 8009ede:	2300      	movs	r3, #0
 8009ee0:	f880 3359 	strb.w	r3, [r0, #857]	@ 0x359
 8009ee4:	f880 33dd 	strb.w	r3, [r0, #989]	@ 0x3dd
    	line1.setVisible(false);
		line1_1.setVisible(false);
		line1.invalidate();
 8009ee8:	f500 704d 	add.w	r0, r0, #820	@ 0x334
 8009eec:	f009 fb8c 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
		line1_1.invalidate();
 8009ef0:	f505 706e 	add.w	r0, r5, #952	@ 0x3b8
                           line1_1.invalidate();
            }
            ball.moveTo(ballX, ballY);
            ball.invalidate();
        }
}
 8009ef4:	b005      	add	sp, #20
 8009ef6:	ecbd 8b04 	vpop	{d8-d9}
 8009efa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		line1_1.invalidate();
 8009efe:	f009 bb83 	b.w	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	if (buzzerBeepCounter > 0) {
 8009f02:	f8d4 374c 	ldr.w	r3, [r4, #1868]	@ 0x74c
 8009f06:	2b00      	cmp	r3, #0
 8009f08:	dd1b      	ble.n	8009f42 <_ZN16MediumScreenView15handleTickEventEv+0x7a>
		if (buzzerBeepCounter % 6 == 0) { // Bíp mỗi 100ms (6 ticks tại 60 FPS)
 8009f0a:	2206      	movs	r2, #6
 8009f0c:	fb93 f1f2 	sdiv	r1, r3, r2
 8009f10:	fb02 3311 	mls	r3, r2, r1, r3
 8009f14:	b953      	cbnz	r3, 8009f2c <_ZN16MediumScreenView15handleTickEventEv+0x64>
			buzzerBeepState = !buzzerBeepState;
 8009f16:	f894 2750 	ldrb.w	r2, [r4, #1872]	@ 0x750
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8009f1a:	4813      	ldr	r0, [pc, #76]	@ (8009f68 <_ZN16MediumScreenView15handleTickEventEv+0xa0>)
			buzzerBeepState = !buzzerBeepState;
 8009f1c:	f082 0201 	eor.w	r2, r2, #1
 8009f20:	f884 2750 	strb.w	r2, [r4, #1872]	@ 0x750
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, buzzerBeepState ? GPIO_PIN_SET : GPIO_PIN_RESET);
 8009f24:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8009f28:	f001 fe64 	bl	800bbf4 <HAL_GPIO_WritePin>
		buzzerBeepCounter--;
 8009f2c:	f8d4 274c 	ldr.w	r2, [r4, #1868]	@ 0x74c
 8009f30:	3a01      	subs	r2, #1
 8009f32:	f8c4 274c 	str.w	r2, [r4, #1868]	@ 0x74c
		if (buzzerBeepCounter == 0) {
 8009f36:	b922      	cbnz	r2, 8009f42 <_ZN16MediumScreenView15handleTickEventEv+0x7a>
			HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET); // Tắt buzzer sau khi bíp xong
 8009f38:	480b      	ldr	r0, [pc, #44]	@ (8009f68 <_ZN16MediumScreenView15handleTickEventEv+0xa0>)
 8009f3a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8009f3e:	f001 fe59 	bl	800bbf4 <HAL_GPIO_WritePin>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8009f42:	4f0a      	ldr	r7, [pc, #40]	@ (8009f6c <_ZN16MediumScreenView15handleTickEventEv+0xa4>)
 8009f44:	e031      	b.n	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
        switch (command) {
 8009f46:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8009f4a:	2b09      	cmp	r3, #9
 8009f4c:	d82d      	bhi.n	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 8009f4e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8009f52:	0015      	.short	0x0015
 8009f54:	020801e5 	.word	0x020801e5
 8009f58:	01ed02a4 	.word	0x01ed02a4
 8009f5c:	02d10200 	.word	0x02d10200
 8009f60:	03880368 	.word	0x03880368
 8009f64:	03d9      	.short	0x03d9
 8009f66:	bf00      	nop
 8009f68:	40020c00 	.word	0x40020c00
 8009f6c:	20002dc0 	.word	0x20002dc0
 8009f70:	439f8000 	.word	0x439f8000
 8009f74:	42700000 	.word	0x42700000
 8009f78:	43350000 	.word	0x43350000
        return rect.y;
 8009f7c:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
					int16_t newY=paddle1.getY()+2;
 8009f80:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 8009f82:	b236      	sxth	r6, r6
 8009f84:	2ec6      	cmp	r6, #198	@ 0xc6
 8009f86:	bfa8      	it	ge
 8009f88:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle1.getY()) { // Chỉ cập nhật nếu có thay đổi
 8009f8a:	429e      	cmp	r6, r3
 8009f8c:	d00d      	beq.n	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
						paddle1.invalidate();
 8009f8e:	f105 08f0 	add.w	r8, r5, #240	@ 0xf0
 8009f92:	4640      	mov	r0, r8
 8009f94:	f00e fa2c 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle1.moveTo(paddle1.getX(), newY);
 8009f98:	f9b5 10f4 	ldrsh.w	r1, [r5, #244]	@ 0xf4
 8009f9c:	4632      	mov	r2, r6
						paddle2.moveTo(paddle2.getX(), newY);
 8009f9e:	4640      	mov	r0, r8
 8009fa0:	f7f7 fe71 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
						paddle2.invalidate();
 8009fa4:	4640      	mov	r0, r8
 8009fa6:	f00e fa23 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    while (osMessageQueueGet(joystickQueueHandle, &command, NULL, 0) == osOK) {
 8009faa:	2300      	movs	r3, #0
 8009fac:	6838      	ldr	r0, [r7, #0]
 8009fae:	461a      	mov	r2, r3
 8009fb0:	f10d 010f 	add.w	r1, sp, #15
 8009fb4:	f004 f98b 	bl	800e2ce <osMessageQueueGet>
 8009fb8:	2800      	cmp	r0, #0
 8009fba:	d0c4      	beq.n	8009f46 <_ZN16MediumScreenView15handleTickEventEv+0x7e>
        if (!waitingForServe) {
 8009fbc:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 8009fc0:	f505 7636 	add.w	r6, r5, #728	@ 0x2d8
 8009fc4:	2b00      	cmp	r3, #0
 8009fc6:	f040 8520 	bne.w	800aa0a <_ZN16MediumScreenView15handleTickEventEv+0xb42>
            ball.invalidate();
 8009fca:	4630      	mov	r0, r6
 8009fcc:	f009 fb1c 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ballX += ballVelX;
 8009fd0:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 8009fd4:	ed93 6a00 	vldr	s12, [r3]
 8009fd8:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 8009fdc:	edd3 6a00 	vldr	s13, [r3]
 8009fe0:	ee76 6a26 	vadd.f32	s13, s12, s13
            ballY += ballVelY;
 8009fe4:	f504 62e5 	add.w	r2, r4, #1832	@ 0x728
            ballX += ballVelX;
 8009fe8:	edc3 6a00 	vstr	s13, [r3]
            ballY += ballVelY;
 8009fec:	f504 61e6 	add.w	r1, r4, #1840	@ 0x730
 8009ff0:	edd1 7a00 	vldr	s15, [r1]
 8009ff4:	ed92 7a00 	vldr	s14, [r2]
 8009ff8:	ee37 7a87 	vadd.f32	s14, s15, s14
            if (ballY < 0) {
 8009ffc:	f04f 0a00 	mov.w	sl, #0
 800a000:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800a004:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            ballY += ballVelY;
 800a008:	ed82 7a00 	vstr	s14, [r2]
            if (ballY < 0) {
 800a00c:	f140 83cf 	bpl.w	800a7ae <_ZN16MediumScreenView15handleTickEventEv+0x8e6>
                ballY = 0;
 800a010:	f8c2 a000 	str.w	sl, [r2]
                ballVelY = -ballVelY;
 800a014:	eef1 7a67 	vneg.f32	s15, s15
 800a018:	edc1 7a00 	vstr	s15, [r1]
        return rect.x;
 800a01c:	f9b5 20f4 	ldrsh.w	r2, [r5, #244]	@ 0xf4
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 800a020:	f9b5 30f8 	ldrsh.w	r3, [r5, #248]	@ 0xf8
 800a024:	4413      	add	r3, r2
 800a026:	ee07 3a90 	vmov	s15, r3
 800a02a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
                ballY + ball.getHeight() >= paddle1.getY() &&
 800a02e:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 800a032:	eef4 6ac7 	vcmpe.f32	s13, s14
 800a036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a03a:	edd3 7a00 	vldr	s15, [r3]
 800a03e:	d831      	bhi.n	800a0a4 <_ZN16MediumScreenView15handleTickEventEv+0x1dc>
                ballX >= paddle1.getX() &&
 800a040:	ee05 2a90 	vmov	s11, r2
 800a044:	eef8 5ae5 	vcvt.f32.s32	s11, s11
            if (ballX <= paddle1.getX() + paddle1.getWidth() &&
 800a048:	eef4 6ae5 	vcmpe.f32	s13, s11
 800a04c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a050:	db28      	blt.n	800a0a4 <_ZN16MediumScreenView15handleTickEventEv+0x1dc>
                ballY + ball.getHeight() >= paddle1.getY() &&
 800a052:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
        return rect.y;
 800a056:	f9b5 20f6 	ldrsh.w	r2, [r5, #246]	@ 0xf6
 800a05a:	ee06 3a90 	vmov	s13, r3
 800a05e:	ee05 2a90 	vmov	s11, r2
 800a062:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800a066:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800a06a:	ee76 6aa7 	vadd.f32	s13, s13, s15
                ballX >= paddle1.getX() &&
 800a06e:	eef4 6ae5 	vcmpe.f32	s13, s11
 800a072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a076:	db15      	blt.n	800a0a4 <_ZN16MediumScreenView15handleTickEventEv+0x1dc>
                ballY <= paddle1.getY() + paddle1.getHeight()) {
 800a078:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 800a07c:	4413      	add	r3, r2
 800a07e:	ee06 3a90 	vmov	s13, r3
 800a082:	eef8 6ae6 	vcvt.f32.s32	s13, s13
                ballY + ball.getHeight() >= paddle1.getY() &&
 800a086:	eef4 7ae6 	vcmpe.f32	s15, s13
 800a08a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a08e:	d809      	bhi.n	800a0a4 <_ZN16MediumScreenView15handleTickEventEv+0x1dc>
                ballX = paddle1.getX() + paddle1.getWidth();
 800a090:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800a094:	ed83 7a00 	vstr	s14, [r3]
                ballVelX = -ballVelX;
 800a098:	eeb1 6a46 	vneg.f32	s12, s12
 800a09c:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 800a0a0:	ed83 6a00 	vstr	s12, [r3]
        return rect.width;
 800a0a4:	f9b5 02e0 	ldrsh.w	r0, [r5, #736]	@ 0x2e0
        return rect.x;
 800a0a8:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 800a0ac:	ee07 0a10 	vmov	s14, r0
 800a0b0:	f204 7124 	addw	r1, r4, #1828	@ 0x724
 800a0b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800a0b8:	ed91 7a00 	vldr	s14, [r1]
 800a0bc:	ee76 6a87 	vadd.f32	s13, s13, s14
 800a0c0:	ee07 3a10 	vmov	s14, r3
 800a0c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 800a0c8:	eef4 6ac7 	vcmpe.f32	s13, s14
 800a0cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a0d0:	db39      	blt.n	800a146 <_ZN16MediumScreenView15handleTickEventEv+0x27e>
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 800a0d2:	f9b5 2124 	ldrsh.w	r2, [r5, #292]	@ 0x124
 800a0d6:	441a      	add	r2, r3
 800a0d8:	ee07 2a10 	vmov	s14, r2
 800a0dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
            if (ballX + ball.getWidth() >= paddle2.getX() &&
 800a0e0:	eef4 6ac7 	vcmpe.f32	s13, s14
 800a0e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a0e8:	d82d      	bhi.n	800a146 <_ZN16MediumScreenView15handleTickEventEv+0x27e>
                ballY + ball.getHeight() >= paddle2.getY() &&
 800a0ea:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
        return rect.y;
 800a0ee:	f9b5 7122 	ldrsh.w	r7, [r5, #290]	@ 0x122
 800a0f2:	ee07 2a10 	vmov	s14, r2
 800a0f6:	ee06 7a90 	vmov	s13, r7
 800a0fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a0fe:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800a102:	ee37 7a27 	vadd.f32	s14, s14, s15
                ballX + ball.getWidth() <= paddle2.getX() + paddle2.getWidth() &&
 800a106:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800a10a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a10e:	db1a      	blt.n	800a146 <_ZN16MediumScreenView15handleTickEventEv+0x27e>
                ballY <= paddle2.getY() + paddle2.getHeight()) {
 800a110:	f9b5 2126 	ldrsh.w	r2, [r5, #294]	@ 0x126
 800a114:	443a      	add	r2, r7
 800a116:	ee07 2a10 	vmov	s14, r2
 800a11a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballY + ball.getHeight() >= paddle2.getY() &&
 800a11e:	eef4 7ac7 	vcmpe.f32	s15, s14
 800a122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a126:	d80e      	bhi.n	800a146 <_ZN16MediumScreenView15handleTickEventEv+0x27e>
                ballX = paddle2.getX() - ball.getWidth();
 800a128:	1a1b      	subs	r3, r3, r0
 800a12a:	ee07 3a10 	vmov	s14, r3
 800a12e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                ballVelX = -ballVelX;
 800a132:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
                ballX = paddle2.getX() - ball.getWidth();
 800a136:	ed81 7a00 	vstr	s14, [r1]
                ballVelX = -ballVelX;
 800a13a:	ed93 7a00 	vldr	s14, [r3]
 800a13e:	eeb1 7a47 	vneg.f32	s14, s14
 800a142:	ed83 7a00 	vstr	s14, [r3]
			if (ballX >319) {
 800a146:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800a14a:	edd3 6a00 	vldr	s13, [r3]
 800a14e:	ed1f 7a78 	vldr	s14, [pc, #-480]	@ 8009f70 <_ZN16MediumScreenView15handleTickEventEv+0xa8>
 800a152:	eef4 6ac7 	vcmpe.f32	s13, s14
 800a156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a15a:	f340 8357 	ble.w	800a80c <_ZN16MediumScreenView15handleTickEventEv+0x944>
				if (ballY > 60 && ballY < 181) {
 800a15e:	ed5f 6a7b 	vldr	s13, [pc, #-492]	@ 8009f74 <_ZN16MediumScreenView15handleTickEventEv+0xac>
 800a162:	eef4 7ae6 	vcmpe.f32	s15, s13
 800a166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a16a:	f340 8429 	ble.w	800a9c0 <_ZN16MediumScreenView15handleTickEventEv+0xaf8>
 800a16e:	ed5f 6a7e 	vldr	s13, [pc, #-504]	@ 8009f78 <_ZN16MediumScreenView15handleTickEventEv+0xb0>
 800a172:	eef4 7ae6 	vcmpe.f32	s15, s13
 800a176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a17a:	f140 8421 	bpl.w	800a9c0 <_ZN16MediumScreenView15handleTickEventEv+0xaf8>
                        score1++;
 800a17e:	f8d4 3740 	ldr.w	r3, [r4, #1856]	@ 0x740
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 800a182:	4ad7      	ldr	r2, [pc, #860]	@ (800a4e0 <_ZN16MediumScreenView15handleTickEventEv+0x618>)
                        score1++;
 800a184:	3301      	adds	r3, #1
 800a186:	f8c4 3740 	str.w	r3, [r4, #1856]	@ 0x740
                        Unicode::snprintf(MediumScreenViewBase::score1Buffer, MediumScreenViewBase::SCORE1_SIZE, "%d", score1);
 800a18a:	210a      	movs	r1, #10
 800a18c:	f505 608a 	add.w	r0, r5, #1104	@ 0x450
 800a190:	f010 fca8 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score1.invalidate();
 800a194:	f505 70ca 	add.w	r0, r5, #404	@ 0x194
 800a198:	f00e f92a 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 800a19c:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 800a19e:	2312      	movs	r3, #18
 800a1a0:	f8c4 374c 	str.w	r3, [r4, #1868]	@ 0x74c
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800a1a4:	48cf      	ldr	r0, [pc, #828]	@ (800a4e4 <_ZN16MediumScreenView15handleTickEventEv+0x61c>)
						buzzerBeepState = true;
 800a1a6:	f884 7750 	strb.w	r7, [r4, #1872]	@ 0x750
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800a1aa:	463a      	mov	r2, r7
 800a1ac:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800a1b0:	f001 fd20 	bl	800bbf4 <HAL_GPIO_WritePin>
                        if (score1 >= 11) {
 800a1b4:	f8d4 3740 	ldr.w	r3, [r4, #1856]	@ 0x740
 800a1b8:	2b0a      	cmp	r3, #10
 800a1ba:	dd05      	ble.n	800a1c8 <_ZN16MediumScreenView15handleTickEventEv+0x300>
                            presenter->goToEndScreen(1);
 800a1bc:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                            gameOver = true;
 800a1be:	f884 7748 	strb.w	r7, [r4, #1864]	@ 0x748
                            presenter->goToEndScreen(1);
 800a1c2:	4639      	mov	r1, r7
 800a1c4:	f7ff fd9e 	bl	8009d04 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 800a1c8:	2300      	movs	r3, #0
 800a1ca:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                        ball.invalidate();
 800a1ce:	4630      	mov	r0, r6
 800a1d0:	f009 fa1a 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 800a1d4:	233c      	movs	r3, #60	@ 0x3c
 800a1d6:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800a1da:	f9b5 20f8 	ldrsh.w	r2, [r5, #248]	@ 0xf8
 800a1de:	f9b5 30f4 	ldrsh.w	r3, [r5, #244]	@ 0xf4
 800a1e2:	4413      	add	r3, r2
 800a1e4:	330a      	adds	r3, #10
 800a1e6:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a1ea:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 800a1ee:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800a1f2:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
 800a1f6:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800a1fa:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800a1fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a202:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800a206:	eba3 0362 	sub.w	r3, r3, r2, asr #1
                        waitingForServe = true;
 800a20a:	f04f 0901 	mov.w	r9, #1
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800a20e:	f204 7724 	addw	r7, r4, #1828	@ 0x724
                        waitingForServe = true;
 800a212:	f884 9734 	strb.w	r9, [r4, #1844]	@ 0x734
                        servingPlayer = 1; // Người chơi 1 phát bóng
 800a216:	f8c4 973c 	str.w	r9, [r4, #1852]	@ 0x73c
                        ballX = paddle1.getX() + paddle1.getWidth() + 10; // Gần paddle1
 800a21a:	edc7 7a00 	vstr	s15, [r7]
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a21e:	ee07 3a90 	vmov	s15, r3
 800a222:	f504 68e5 	add.w	r8, r4, #1832	@ 0x728
                        desiredBallVelY1 = 0.0f;
 800a226:	f204 7354 	addw	r3, r4, #1876	@ 0x754
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a22a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
					    lineAngle1 = 0.0f;
 800a22e:	f204 745c 	addw	r4, r4, #1884	@ 0x75c
                        ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a232:	edc8 7a00 	vstr	s15, [r8]
                        desiredBallVelY1 = 0.0f;
 800a236:	f8c3 a000 	str.w	sl, [r3]
					    lineAngle1 = 0.0f;
 800a23a:	f8c4 a000 	str.w	sl, [r4]
					    line1.invalidate();
 800a23e:	f505 7a4d 	add.w	sl, r5, #820	@ 0x334
 800a242:	4650      	mov	r0, sl
 800a244:	f009 f9e0 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
								   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a248:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800a24c:	edd7 7a00 	vldr	s15, [r7]
 800a250:	ee07 3a10 	vmov	s14, r3
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a254:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
								   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a258:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a25c:	ee06 3a90 	vmov	s13, r3
								   float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a260:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800a264:	eee7 7a06 	vfma.f32	s15, s14, s12
								   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a268:	2321      	movs	r3, #33	@ 0x21
 800a26a:	4650      	mov	r0, sl
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a26c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800a270:	ed98 7a00 	vldr	s14, [r8]
								   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a274:	9300      	str	r3, [sp, #0]
								   float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a276:	eea6 7a86 	vfma.f32	s14, s13, s12
								   line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a27a:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800a27e:	ee37 7a48 	vsub.f32	s14, s14, s16
 800a282:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800a286:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800a28a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a28e:	ee17 2a10 	vmov	r2, s14
 800a292:	ee17 1a90 	vmov	r1, s15
 800a296:	b212      	sxth	r2, r2
 800a298:	b209      	sxth	r1, r1
 800a29a:	f7f8 ff2b 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
								   line1.setStart(16, 16);
 800a29e:	2210      	movs	r2, #16
 800a2a0:	4611      	mov	r1, r2
 800a2a2:	4650      	mov	r0, sl
 800a2a4:	f7fd f9de 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
								   line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 800a2a8:	6820      	ldr	r0, [r4, #0]
 800a2aa:	f7f6 f955 	bl	8000558 <__aeabi_f2d>
 800a2ae:	a38a      	add	r3, pc, #552	@ (adr r3, 800a4d8 <_ZN16MediumScreenView15handleTickEventEv+0x610>)
 800a2b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a2b4:	f7f6 f9a8 	bl	8000608 <__aeabi_dmul>
 800a2b8:	4b8b      	ldr	r3, [pc, #556]	@ (800a4e8 <_ZN16MediumScreenView15handleTickEventEv+0x620>)
 800a2ba:	2200      	movs	r2, #0
 800a2bc:	f7f6 face 	bl	800085c <__aeabi_ddiv>
 800a2c0:	f7f6 fc52 	bl	8000b68 <__aeabi_d2f>
 800a2c4:	ee08 0a90 	vmov	s17, r0
 800a2c8:	eeb0 0a68 	vmov.f32	s0, s17
 800a2cc:	f01f fd80 	bl	8029dd0 <cosf>
 800a2d0:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800a2d4:	eef0 9a48 	vmov.f32	s19, s16
 800a2d8:	eee0 9a09 	vfma.f32	s19, s0, s18
 800a2dc:	eeb0 0a68 	vmov.f32	s0, s17
 800a2e0:	f01f fdba 	bl	8029e58 <sinf>
 800a2e4:	eef0 0a48 	vmov.f32	s1, s16
 800a2e8:	eee0 0a09 	vfma.f32	s1, s0, s18
 800a2ec:	4650      	mov	r0, sl
 800a2ee:	eeb0 0a69 	vmov.f32	s0, s19
 800a2f2:	f7fd f9bb 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 800a2f6:	f885 9359 	strb.w	r9, [r5, #857]	@ 0x359
								   line1.invalidate();
 800a2fa:	4650      	mov	r0, sl
									line1_1.invalidate();
 800a2fc:	f009 f984 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
									ball.moveTo(ballX, ballY);
 800a300:	ed98 7a00 	vldr	s14, [r8]
 800a304:	edd7 7a00 	vldr	s15, [r7]
 800a308:	eebd 7ac7 	vcvt.s32.f32	s14, s14
            ball.moveTo(ballX, ballY);
 800a30c:	ee17 3a10 	vmov	r3, s14
 800a310:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a314:	b21a      	sxth	r2, r3
 800a316:	ee17 3a90 	vmov	r3, s15
 800a31a:	e36a      	b.n	800a9f2 <_ZN16MediumScreenView15handleTickEventEv+0xb2a>
        return rect.y;
 800a31c:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
					int16_t newY = paddle1.getY() - 2;
 800a320:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 800a322:	b236      	sxth	r6, r6
 800a324:	2e02      	cmp	r6, #2
 800a326:	bfb8      	it	lt
 800a328:	2602      	movlt	r6, #2
 800a32a:	e62e      	b.n	8009f8a <_ZN16MediumScreenView15handleTickEventEv+0xc2>
 800a32c:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
					int16_t newY=paddle2.getY()+2;
 800a330:	1c9e      	adds	r6, r3, #2
					if (newY >198) {
 800a332:	b236      	sxth	r6, r6
 800a334:	2ec6      	cmp	r6, #198	@ 0xc6
 800a336:	bfa8      	it	ge
 800a338:	26c6      	movge	r6, #198	@ 0xc6
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 800a33a:	429e      	cmp	r6, r3
 800a33c:	f43f ae35 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
						paddle2.invalidate();
 800a340:	f505 788e 	add.w	r8, r5, #284	@ 0x11c
 800a344:	4640      	mov	r0, r8
 800a346:	f00e f853 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						paddle2.moveTo(paddle2.getX(), newY);
 800a34a:	f9b5 1120 	ldrsh.w	r1, [r5, #288]	@ 0x120
 800a34e:	4632      	mov	r2, r6
 800a350:	e625      	b.n	8009f9e <_ZN16MediumScreenView15handleTickEventEv+0xd6>
 800a352:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
					int16_t newY = paddle2.getY() - 2;
 800a356:	1e9e      	subs	r6, r3, #2
					if (newY < 2) {
 800a358:	b236      	sxth	r6, r6
 800a35a:	2e02      	cmp	r6, #2
 800a35c:	bfb8      	it	lt
 800a35e:	2602      	movlt	r6, #2
					if (newY != paddle2.getY()) { // Chỉ cập nhật nếu có thay đổi
 800a360:	e7eb      	b.n	800a33a <_ZN16MediumScreenView15handleTickEventEv+0x472>
				if (waitingForServe && servingPlayer == 1) {
 800a362:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800a366:	2b00      	cmp	r3, #0
 800a368:	f43f ae1f 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 800a36c:	f8d4 873c 	ldr.w	r8, [r4, #1852]	@ 0x73c
 800a370:	f1b8 0f01 	cmp.w	r8, #1
 800a374:	f47f ae19 	bne.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
					desiredBallVelY1 -= 0.2f;
 800a378:	f204 7354 	addw	r3, r4, #1876	@ 0x754
 800a37c:	ed93 0a00 	vldr	s0, [r3]
 800a380:	eddf 7a5a 	vldr	s15, [pc, #360]	@ 800a4ec <_ZN16MediumScreenView15handleTickEventEv+0x624>
 800a384:	ee30 0a67 	vsub.f32	s0, s0, s15
					if (desiredBallVelY1 < -2.0f) desiredBallVelY1 = -2.0f;
 800a388:	eef8 7a00 	vmov.f32	s15, #128	@ 0xc0000000 -2.0
 800a38c:	eeb4 0a67 	vcmp.f32	s0, s15
 800a390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a394:	bf48      	it	mi
 800a396:	eeb0 0a67 	vmovmi.f32	s0, s15
 800a39a:	ed83 0a00 	vstr	s0, [r3]
					lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 800a39e:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
					lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 800a3a2:	f01f fcf4 	bl	8029d8e <atan2f>
 800a3a6:	eddf 7a52 	vldr	s15, [pc, #328]	@ 800a4f0 <_ZN16MediumScreenView15handleTickEventEv+0x628>
 800a3aa:	ee60 7a27 	vmul.f32	s15, s0, s15
 800a3ae:	f204 795c 	addw	r9, r4, #1884	@ 0x75c
 800a3b2:	ee17 0a90 	vmov	r0, s15
 800a3b6:	f7f6 f8cf 	bl	8000558 <__aeabi_f2d>
 800a3ba:	a347      	add	r3, pc, #284	@ (adr r3, 800a4d8 <_ZN16MediumScreenView15handleTickEventEv+0x610>)
 800a3bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a3c0:	f7f6 fa4c 	bl	800085c <__aeabi_ddiv>
 800a3c4:	f7f6 fbd0 	bl	8000b68 <__aeabi_d2f>
					line1.invalidate();
 800a3c8:	f505 764d 	add.w	r6, r5, #820	@ 0x334
					lineAngle1 = atan2f(desiredBallVelY1, 2.0f) * 180.0f / M_PI;
 800a3cc:	f8c9 0000 	str.w	r0, [r9]
					line1.invalidate();
 800a3d0:	4630      	mov	r0, r6
 800a3d2:	f009 f919 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a3d6:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800a3da:	ee07 3a10 	vmov	s14, r3
 800a3de:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800a3e2:	edd3 7a00 	vldr	s15, [r3]
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a3e6:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a3ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a3ee:	ee06 3a90 	vmov	s13, r3
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a3f2:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a3f6:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a3fa:	eee7 7a06 	vfma.f32	s15, s14, s12
										line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a3fe:	4630      	mov	r0, r6
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a400:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800a404:	ed93 7a00 	vldr	s14, [r3]
 800a408:	eea6 7a86 	vfma.f32	s14, s13, s12
										line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a40c:	2321      	movs	r3, #33	@ 0x21
 800a40e:	9300      	str	r3, [sp, #0]
 800a410:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800a414:	ee37 7a48 	vsub.f32	s14, s14, s16
 800a418:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800a41c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800a420:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a424:	ee17 2a10 	vmov	r2, s14
 800a428:	ee17 1a90 	vmov	r1, s15
 800a42c:	b212      	sxth	r2, r2
 800a42e:	b209      	sxth	r1, r1
 800a430:	f7f8 fe60 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
										line1.setStart(16, 16);
 800a434:	2210      	movs	r2, #16
 800a436:	4611      	mov	r1, r2
 800a438:	4630      	mov	r0, r6
 800a43a:	f7fd f913 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
										line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 800a43e:	f8d9 0000 	ldr.w	r0, [r9]
 800a442:	f7f6 f889 	bl	8000558 <__aeabi_f2d>
 800a446:	a324      	add	r3, pc, #144	@ (adr r3, 800a4d8 <_ZN16MediumScreenView15handleTickEventEv+0x610>)
 800a448:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a44c:	f7f6 f8dc 	bl	8000608 <__aeabi_dmul>
 800a450:	4b25      	ldr	r3, [pc, #148]	@ (800a4e8 <_ZN16MediumScreenView15handleTickEventEv+0x620>)
 800a452:	2200      	movs	r2, #0
 800a454:	f7f6 fa02 	bl	800085c <__aeabi_ddiv>
 800a458:	f7f6 fb86 	bl	8000b68 <__aeabi_d2f>
 800a45c:	ee08 0a90 	vmov	s17, r0
 800a460:	eeb0 0a68 	vmov.f32	s0, s17
 800a464:	f01f fcb4 	bl	8029dd0 <cosf>
 800a468:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800a46c:	eef0 9a48 	vmov.f32	s19, s16
 800a470:	eee0 9a09 	vfma.f32	s19, s0, s18
 800a474:	eeb0 0a68 	vmov.f32	s0, s17
 800a478:	f01f fcee 	bl	8029e58 <sinf>
 800a47c:	eef0 0a48 	vmov.f32	s1, s16
 800a480:	eee0 0a09 	vfma.f32	s1, s0, s18
 800a484:	4630      	mov	r0, r6
 800a486:	eeb0 0a69 	vmov.f32	s0, s19
 800a48a:	f7fd f8ef 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
        visible = vis;
 800a48e:	f885 8359 	strb.w	r8, [r5, #857]	@ 0x359
										line1_1.invalidate();
 800a492:	4630      	mov	r0, r6
                    line1_1.invalidate();
 800a494:	f009 f8b8 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 800a498:	e587      	b.n	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
				if (waitingForServe && servingPlayer == 1) {
 800a49a:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800a49e:	2b00      	cmp	r3, #0
 800a4a0:	f43f ad83 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 800a4a4:	f8d4 873c 	ldr.w	r8, [r4, #1852]	@ 0x73c
 800a4a8:	f1b8 0f01 	cmp.w	r8, #1
 800a4ac:	f47f ad7d 	bne.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
					desiredBallVelY1 += 0.2f;
 800a4b0:	f204 7354 	addw	r3, r4, #1876	@ 0x754
 800a4b4:	ed93 0a00 	vldr	s0, [r3]
 800a4b8:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 800a4ec <_ZN16MediumScreenView15handleTickEventEv+0x624>
 800a4bc:	ee30 0a27 	vadd.f32	s0, s0, s15
					if (desiredBallVelY1 > 2.0f) desiredBallVelY1 = 2.0f;
 800a4c0:	eef0 0a00 	vmov.f32	s1, #0	@ 0x40000000  2.0
 800a4c4:	eeb4 0a60 	vcmp.f32	s0, s1
 800a4c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a4cc:	bfc8      	it	gt
 800a4ce:	eeb0 0a60 	vmovgt.f32	s0, s1
 800a4d2:	ed83 0a00 	vstr	s0, [r3]
 800a4d6:	e764      	b.n	800a3a2 <_ZN16MediumScreenView15handleTickEventEv+0x4da>
 800a4d8:	54442d18 	.word	0x54442d18
 800a4dc:	400921fb 	.word	0x400921fb
 800a4e0:	0802d07f 	.word	0x0802d07f
 800a4e4:	40020c00 	.word	0x40020c00
 800a4e8:	40668000 	.word	0x40668000
 800a4ec:	3e4ccccd 	.word	0x3e4ccccd
 800a4f0:	43340000 	.word	0x43340000
				if (waitingForServe && servingPlayer == 2) {
 800a4f4:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800a4f8:	2b00      	cmp	r3, #0
 800a4fa:	f43f ad56 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 800a4fe:	f8d4 373c 	ldr.w	r3, [r4, #1852]	@ 0x73c
 800a502:	2b02      	cmp	r3, #2
 800a504:	f47f ad51 	bne.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
					desiredBallVelY2 -= 0.2f;
 800a508:	f504 63eb 	add.w	r3, r4, #1880	@ 0x758
 800a50c:	ed93 0a00 	vldr	s0, [r3]
 800a510:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 800a4ec <_ZN16MediumScreenView15handleTickEventEv+0x624>
 800a514:	ee30 0a67 	vsub.f32	s0, s0, s15
					if (desiredBallVelY2 < -2.0f) desiredBallVelY2 = -2.0f;
 800a518:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 800a51c:	eeb4 0a60 	vcmp.f32	s0, s1
 800a520:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a524:	bf48      	it	mi
 800a526:	eeb0 0a60 	vmovmi.f32	s0, s1
 800a52a:	ed83 0a00 	vstr	s0, [r3]
					lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 800a52e:	f01f fc2e 	bl	8029d8e <atan2f>
 800a532:	ed5f 7a11 	vldr	s15, [pc, #-68]	@ 800a4f0 <_ZN16MediumScreenView15handleTickEventEv+0x628>
 800a536:	ee60 7a27 	vmul.f32	s15, s0, s15
 800a53a:	f505 58bb 	add.w	r8, r5, #5984	@ 0x1760
 800a53e:	ee17 0a90 	vmov	r0, s15
 800a542:	f7f6 f809 	bl	8000558 <__aeabi_f2d>
 800a546:	a3aa      	add	r3, pc, #680	@ (adr r3, 800a7f0 <_ZN16MediumScreenView15handleTickEventEv+0x928>)
 800a548:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a54c:	f7f6 f986 	bl	800085c <__aeabi_ddiv>
 800a550:	f7f6 fb0a 	bl	8000b68 <__aeabi_d2f>
					line1_1.invalidate();
 800a554:	f505 766e 	add.w	r6, r5, #952	@ 0x3b8
					lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 800a558:	f8c8 0000 	str.w	r0, [r8]
					line1_1.invalidate();
 800a55c:	4630      	mov	r0, r6
 800a55e:	f009 f853 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a562:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800a566:	ee07 3a10 	vmov	s14, r3
 800a56a:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800a56e:	edd3 7a00 	vldr	s15, [r3]
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a572:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a576:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a57a:	ee06 3a90 	vmov	s13, r3
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a57e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a582:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
										float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a586:	eee7 7a06 	vfma.f32	s15, s14, s12
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a58a:	4630      	mov	r0, r6
										float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a58c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800a590:	ed93 7a00 	vldr	s14, [r3]
 800a594:	eea6 7a86 	vfma.f32	s14, s13, s12
										line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a598:	2321      	movs	r3, #33	@ 0x21
 800a59a:	9300      	str	r3, [sp, #0]
 800a59c:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800a5a0:	ee37 7a48 	vsub.f32	s14, s14, s16
 800a5a4:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800a5a8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800a5ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a5b0:	ee17 2a10 	vmov	r2, s14
 800a5b4:	ee17 1a90 	vmov	r1, s15
 800a5b8:	b212      	sxth	r2, r2
 800a5ba:	b209      	sxth	r1, r1
 800a5bc:	f7f8 fd9a 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
										line1_1.setStart(16, 16);
 800a5c0:	2210      	movs	r2, #16
 800a5c2:	4611      	mov	r1, r2
 800a5c4:	4630      	mov	r0, r6
 800a5c6:	f7fd f84d 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
										line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 800a5ca:	f8d8 0000 	ldr.w	r0, [r8]
 800a5ce:	f7f5 ffc3 	bl	8000558 <__aeabi_f2d>
 800a5d2:	a387      	add	r3, pc, #540	@ (adr r3, 800a7f0 <_ZN16MediumScreenView15handleTickEventEv+0x928>)
 800a5d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5d8:	f7f6 f816 	bl	8000608 <__aeabi_dmul>
 800a5dc:	4b86      	ldr	r3, [pc, #536]	@ (800a7f8 <_ZN16MediumScreenView15handleTickEventEv+0x930>)
 800a5de:	2200      	movs	r2, #0
 800a5e0:	f7f6 f93c 	bl	800085c <__aeabi_ddiv>
 800a5e4:	f7f6 fac0 	bl	8000b68 <__aeabi_d2f>
 800a5e8:	ee08 0a90 	vmov	s17, r0
 800a5ec:	eeb0 0a68 	vmov.f32	s0, s17
 800a5f0:	f01f fbee 	bl	8029dd0 <cosf>
 800a5f4:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800a5f8:	eef0 9a48 	vmov.f32	s19, s16
 800a5fc:	eee0 9a09 	vfma.f32	s19, s0, s18
 800a600:	eeb0 0a68 	vmov.f32	s0, s17
 800a604:	f01f fc28 	bl	8029e58 <sinf>
 800a608:	eef0 0a48 	vmov.f32	s1, s16
 800a60c:	eee0 0a09 	vfma.f32	s1, s0, s18
 800a610:	4630      	mov	r0, r6
 800a612:	eeb0 0a69 	vmov.f32	s0, s19
 800a616:	f7fd f829 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 800a61a:	2301      	movs	r3, #1
 800a61c:	f885 33dd 	strb.w	r3, [r5, #989]	@ 0x3dd
 800a620:	e737      	b.n	800a492 <_ZN16MediumScreenView15handleTickEventEv+0x5ca>
				if (waitingForServe && servingPlayer == 2) {
 800a622:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800a626:	2b00      	cmp	r3, #0
 800a628:	f43f acbf 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 800a62c:	f8d4 373c 	ldr.w	r3, [r4, #1852]	@ 0x73c
 800a630:	2b02      	cmp	r3, #2
 800a632:	f47f acba 	bne.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
					desiredBallVelY2 += 0.2f;
 800a636:	f504 63eb 	add.w	r3, r4, #1880	@ 0x758
 800a63a:	ed93 0a00 	vldr	s0, [r3]
 800a63e:	eddf 7a6f 	vldr	s15, [pc, #444]	@ 800a7fc <_ZN16MediumScreenView15handleTickEventEv+0x934>
 800a642:	ee30 0a27 	vadd.f32	s0, s0, s15
					if (desiredBallVelY2 > 2.0f) desiredBallVelY2 = 2.0f;
 800a646:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 800a64a:	eeb4 0a67 	vcmp.f32	s0, s15
 800a64e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a652:	bfc8      	it	gt
 800a654:	eeb0 0a67 	vmovgt.f32	s0, s15
 800a658:	ed83 0a00 	vstr	s0, [r3]
					lineAngle2 = atan2f(desiredBallVelY2, -2.0f) * 180.0f / M_PI;
 800a65c:	eef8 0a00 	vmov.f32	s1, #128	@ 0xc0000000 -2.0
 800a660:	e765      	b.n	800a52e <_ZN16MediumScreenView15handleTickEventEv+0x666>
                if (waitingForServe && servingPlayer == 1) {
 800a662:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800a666:	2b00      	cmp	r3, #0
 800a668:	f43f ac9f 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 800a66c:	f8d4 373c 	ldr.w	r3, [r4, #1852]	@ 0x73c
 800a670:	2b01      	cmp	r3, #1
 800a672:	f47f ac9a 	bne.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
                    waitingForServe = false;
 800a676:	2300      	movs	r3, #0
 800a678:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800a67c:	f204 7354 	addw	r3, r4, #1876	@ 0x754
 800a680:	ed93 8a00 	vldr	s16, [r3]
 800a684:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 800a688:	eee8 7a48 	vfms.f32	s15, s16, s16
 800a68c:	ee17 0a90 	vmov	r0, s15
 800a690:	f7f5 ff62 	bl	8000558 <__aeabi_f2d>
 800a694:	ec41 0b10 	vmov	d0, r0, r1
 800a698:	f01f fb4d 	bl	8029d36 <sqrt>
 800a69c:	ec51 0b10 	vmov	r0, r1, d0
 800a6a0:	f7f6 fa62 	bl	8000b68 <__aeabi_d2f>
 800a6a4:	ee07 0a90 	vmov	s15, r0
                    if (ballVelX < 0.5f) {
 800a6a8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800a6ac:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
                    if (ballVelX < 0.5f) {
 800a6b0:	eef4 7ac7 	vcmpe.f32	s15, s14
                    ballVelY = desiredBallVelY1;
 800a6b4:	f504 62e6 	add.w	r2, r4, #1840	@ 0x730
                    if (ballVelX < 0.5f) {
 800a6b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelX = sqrt(speed * speed - desiredBallVelY1 * desiredBallVelY1);
 800a6bc:	6018      	str	r0, [r3, #0]
                    ballVelY = desiredBallVelY1;
 800a6be:	ed82 8a00 	vstr	s16, [r2]
                    if (ballVelX < 0.5f) {
 800a6c2:	d50e      	bpl.n	800a6e2 <_ZN16MediumScreenView15handleTickEventEv+0x81a>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a6c4:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800a6c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = 0.5f;
 800a6cc:	ed83 7a00 	vstr	s14, [r3]
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a6d0:	db14      	blt.n	800a6fc <_ZN16MediumScreenView15handleTickEventEv+0x834>
 800a6d2:	a143      	add	r1, pc, #268	@ (adr r1, 800a7e0 <_ZN16MediumScreenView15handleTickEventEv+0x918>)
 800a6d4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a6d8:	f7f6 fa46 	bl	8000b68 <__aeabi_d2f>
 800a6dc:	f504 66e6 	add.w	r6, r4, #1840	@ 0x730
 800a6e0:	6030      	str	r0, [r6, #0]
 800a6e2:	2301      	movs	r3, #1
 800a6e4:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                    ball.invalidate();
 800a6e8:	f505 7036 	add.w	r0, r5, #728	@ 0x2d8
 800a6ec:	f008 ff8c 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 800a6f0:	2300      	movs	r3, #0
 800a6f2:	f885 3359 	strb.w	r3, [r5, #857]	@ 0x359
                    line1.invalidate();
 800a6f6:	f505 704d 	add.w	r0, r5, #820	@ 0x334
 800a6fa:	e6cb      	b.n	800a494 <_ZN16MediumScreenView15handleTickEventEv+0x5cc>
                        ballVelY = (desiredBallVelY1 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a6fc:	a13a      	add	r1, pc, #232	@ (adr r1, 800a7e8 <_ZN16MediumScreenView15handleTickEventEv+0x920>)
 800a6fe:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a702:	e7e9      	b.n	800a6d8 <_ZN16MediumScreenView15handleTickEventEv+0x810>
                if (waitingForServe && servingPlayer == 2) {
 800a704:	f894 3734 	ldrb.w	r3, [r4, #1844]	@ 0x734
 800a708:	2b00      	cmp	r3, #0
 800a70a:	f43f ac4e 	beq.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
 800a70e:	f8d4 373c 	ldr.w	r3, [r4, #1852]	@ 0x73c
 800a712:	2b02      	cmp	r3, #2
 800a714:	f47f ac49 	bne.w	8009faa <_ZN16MediumScreenView15handleTickEventEv+0xe2>
                    waitingForServe = false;
 800a718:	2300      	movs	r3, #0
 800a71a:	f884 3734 	strb.w	r3, [r4, #1844]	@ 0x734
                    ballVelX = -sqrt(speed * speed - desiredBallVelY2 * desiredBallVelY2);
 800a71e:	f504 63eb 	add.w	r3, r4, #1880	@ 0x758
 800a722:	ed93 8a00 	vldr	s16, [r3]
 800a726:	eef1 7a00 	vmov.f32	s15, #16	@ 0x40800000  4.0
 800a72a:	eee8 7a48 	vfms.f32	s15, s16, s16
 800a72e:	ee17 0a90 	vmov	r0, s15
 800a732:	f7f5 ff11 	bl	8000558 <__aeabi_f2d>
 800a736:	ec41 0b10 	vmov	d0, r0, r1
 800a73a:	f01f fafc 	bl	8029d36 <sqrt>
 800a73e:	ec51 0b10 	vmov	r0, r1, d0
 800a742:	f7f6 fa11 	bl	8000b68 <__aeabi_d2f>
 800a746:	ee07 0a90 	vmov	s15, r0
 800a74a:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 800a74e:	eeb1 7a67 	vneg.f32	s14, s15
 800a752:	ed83 7a00 	vstr	s14, [r3]
                    if (ballVelX > -0.5f) {
 800a756:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800a75a:	eef4 7ac7 	vcmpe.f32	s15, s14
                    ballVelY = desiredBallVelY2;
 800a75e:	f504 62e6 	add.w	r2, r4, #1840	@ 0x730
                    if (ballVelX > -0.5f) {
 800a762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                    ballVelY = desiredBallVelY2;
 800a766:	ed82 8a00 	vstr	s16, [r2]
                    if (ballVelX > -0.5f) {
 800a76a:	d50f      	bpl.n	800a78c <_ZN16MediumScreenView15handleTickEventEv+0x8c4>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a76c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
                        ballVelX = -0.5f;
 800a770:	f04f 423f 	mov.w	r2, #3204448256	@ 0xbf000000
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
                        ballVelX = -0.5f;
 800a778:	601a      	str	r2, [r3, #0]
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a77a:	db14      	blt.n	800a7a6 <_ZN16MediumScreenView15handleTickEventEv+0x8de>
 800a77c:	a118      	add	r1, pc, #96	@ (adr r1, 800a7e0 <_ZN16MediumScreenView15handleTickEventEv+0x918>)
 800a77e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a782:	f7f6 f9f1 	bl	8000b68 <__aeabi_d2f>
 800a786:	f504 66e6 	add.w	r6, r4, #1840	@ 0x730
 800a78a:	6030      	str	r0, [r6, #0]
 800a78c:	2301      	movs	r3, #1
 800a78e:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                    ball.invalidate();
 800a792:	f505 7036 	add.w	r0, r5, #728	@ 0x2d8
 800a796:	f008 ff37 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
 800a79a:	2300      	movs	r3, #0
 800a79c:	f885 33dd 	strb.w	r3, [r5, #989]	@ 0x3dd
                    line1_1.invalidate();
 800a7a0:	f505 706e 	add.w	r0, r5, #952	@ 0x3b8
 800a7a4:	e676      	b.n	800a494 <_ZN16MediumScreenView15handleTickEventEv+0x5cc>
                        ballVelY = (desiredBallVelY2 >= 0) ? sqrt(speed * speed - ballVelX * ballVelX)
 800a7a6:	a110      	add	r1, pc, #64	@ (adr r1, 800a7e8 <_ZN16MediumScreenView15handleTickEventEv+0x920>)
 800a7a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 800a7ac:	e7e9      	b.n	800a782 <_ZN16MediumScreenView15handleTickEventEv+0x8ba>
        return rect.height;
 800a7ae:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
            } else if (ballY + ball.getHeight() > 240) {
 800a7b2:	ee05 3a90 	vmov	s11, r3
 800a7b6:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800a7ba:	ee35 7a87 	vadd.f32	s14, s11, s14
 800a7be:	eddf 5a10 	vldr	s11, [pc, #64]	@ 800a800 <_ZN16MediumScreenView15handleTickEventEv+0x938>
 800a7c2:	eeb4 7ae5 	vcmpe.f32	s14, s11
 800a7c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a7ca:	f77f ac27 	ble.w	800a01c <_ZN16MediumScreenView15handleTickEventEv+0x154>
                ballY = 240 - ball.getHeight();
 800a7ce:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 800a7d2:	ee07 3a10 	vmov	s14, r3
 800a7d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a7da:	ed82 7a00 	vstr	s14, [r2]
 800a7de:	e419      	b.n	800a014 <_ZN16MediumScreenView15handleTickEventEv+0x14c>
 800a7e0:	b14f4eda 	.word	0xb14f4eda
 800a7e4:	3ffefbde 	.word	0x3ffefbde
 800a7e8:	b14f4eda 	.word	0xb14f4eda
 800a7ec:	bffefbde 	.word	0xbffefbde
 800a7f0:	54442d18 	.word	0x54442d18
 800a7f4:	400921fb 	.word	0x400921fb
 800a7f8:	40668000 	.word	0x40668000
 800a7fc:	3e4ccccd 	.word	0x3e4ccccd
 800a800:	43700000 	.word	0x43700000
 800a804:	42700000 	.word	0x42700000
 800a808:	43350000 	.word	0x43350000
                if (ballX <1) {
 800a80c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a810:	eef4 6ac7 	vcmpe.f32	s13, s14
 800a814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a818:	f140 80de 	bpl.w	800a9d8 <_ZN16MediumScreenView15handleTickEventEv+0xb10>
                    if (ballY > 60 && ballY < 181) {
 800a81c:	ed5f 6a07 	vldr	s13, [pc, #-28]	@ 800a804 <_ZN16MediumScreenView15handleTickEventEv+0x93c>
 800a820:	eef4 7ae6 	vcmpe.f32	s15, s13
 800a824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a828:	f340 80ca 	ble.w	800a9c0 <_ZN16MediumScreenView15handleTickEventEv+0xaf8>
 800a82c:	ed5f 6a0a 	vldr	s13, [pc, #-40]	@ 800a808 <_ZN16MediumScreenView15handleTickEventEv+0x940>
 800a830:	eef4 7ae6 	vcmpe.f32	s15, s13
 800a834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a838:	f140 80c2 	bpl.w	800a9c0 <_ZN16MediumScreenView15handleTickEventEv+0xaf8>
                        score2++;
 800a83c:	f8d4 3744 	ldr.w	r3, [r4, #1860]	@ 0x744
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 800a840:	4ac1      	ldr	r2, [pc, #772]	@ (800ab48 <_ZN16MediumScreenView15handleTickEventEv+0xc80>)
                        score2++;
 800a842:	3301      	adds	r3, #1
 800a844:	f8c4 3744 	str.w	r3, [r4, #1860]	@ 0x744
                        Unicode::snprintf(MediumScreenViewBase::score2Buffer, MediumScreenViewBase::SCORE2_SIZE, "%d", score2);
 800a848:	210a      	movs	r1, #10
 800a84a:	f205 403c 	addw	r0, r5, #1084	@ 0x43c
 800a84e:	f010 f949 	bl	801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
                        MediumScreenViewBase::score2.invalidate();
 800a852:	f505 70a4 	add.w	r0, r5, #328	@ 0x148
 800a856:	f00d fdcb 	bl	80183f0 <_ZNK8touchgfx8Drawable10invalidateEv>
						buzzerBeepState = true;
 800a85a:	2701      	movs	r7, #1
                        buzzerBeepCounter = 18; // 3 tiếng bíp (18 ticks = 3 * 6 ticks tại 60 FPS)
 800a85c:	2312      	movs	r3, #18
 800a85e:	f8c4 374c 	str.w	r3, [r4, #1868]	@ 0x74c
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800a862:	48ba      	ldr	r0, [pc, #744]	@ (800ab4c <_ZN16MediumScreenView15handleTickEventEv+0xc84>)
						buzzerBeepState = true;
 800a864:	f884 7750 	strb.w	r7, [r4, #1872]	@ 0x750
						HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
 800a868:	463a      	mov	r2, r7
 800a86a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800a86e:	f001 f9c1 	bl	800bbf4 <HAL_GPIO_WritePin>
                        if (score2 >= 11) {
 800a872:	f8d4 3744 	ldr.w	r3, [r4, #1860]	@ 0x744
 800a876:	2b0a      	cmp	r3, #10
 800a878:	dd05      	ble.n	800a886 <_ZN16MediumScreenView15handleTickEventEv+0x9be>
                            presenter->goToEndScreen(2);
 800a87a:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
                            gameOver = true;
 800a87c:	f884 7748 	strb.w	r7, [r4, #1864]	@ 0x748
                            presenter->goToEndScreen(2);
 800a880:	2102      	movs	r1, #2
 800a882:	f7ff fa3f 	bl	8009d04 <_ZN21MediumScreenPresenter13goToEndScreenEi>
        visible = vis;
 800a886:	2300      	movs	r3, #0
 800a888:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                        ball.invalidate();
 800a88c:	4630      	mov	r0, r6
 800a88e:	f008 febb 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                        serveDelayTicks = 60; // 1 giây với 60 FPS
 800a892:	233c      	movs	r3, #60	@ 0x3c
 800a894:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
                        servingPlayer = 2; // Người chơi 2 phát bóng
 800a898:	2302      	movs	r3, #2
 800a89a:	f8c4 373c 	str.w	r3, [r4, #1852]	@ 0x73c
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800a89e:	f9b5 22e0 	ldrsh.w	r2, [r5, #736]	@ 0x2e0
 800a8a2:	f9b5 3120 	ldrsh.w	r3, [r5, #288]	@ 0x120
 800a8a6:	1a9b      	subs	r3, r3, r2
 800a8a8:	3b0a      	subs	r3, #10
 800a8aa:	ee07 3a90 	vmov	s15, r3
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a8ae:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 800a8b2:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800a8b6:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 800a8ba:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800a8be:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800a8c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a8c6:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800a8ca:	eba3 0362 	sub.w	r3, r3, r2, asr #1
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800a8ce:	f204 7724 	addw	r7, r4, #1828	@ 0x724
                        waitingForServe = true;
 800a8d2:	f04f 0901 	mov.w	r9, #1
 800a8d6:	f884 9734 	strb.w	r9, [r4, #1844]	@ 0x734
                        ballX = paddle2.getX() - ball.getWidth() - 10; // Gần paddle2
 800a8da:	edc7 7a00 	vstr	s15, [r7]
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a8de:	ee07 3a90 	vmov	s15, r3
 800a8e2:	f504 68e5 	add.w	r8, r4, #1832	@ 0x728
 800a8e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                        desiredBallVelY2 = 0.0f;
 800a8ea:	f504 64eb 	add.w	r4, r4, #1880	@ 0x758
						lineAngle2 = 0.0f;
 800a8ee:	f505 5bbb 	add.w	fp, r5, #5984	@ 0x1760
                        ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2; // Căn giữa paddle
 800a8f2:	edc8 7a00 	vstr	s15, [r8]
                        desiredBallVelY2 = 0.0f;
 800a8f6:	f8c4 a000 	str.w	sl, [r4]
						line1_1.invalidate();
 800a8fa:	f505 746e 	add.w	r4, r5, #952	@ 0x3b8
 800a8fe:	4620      	mov	r0, r4
						lineAngle2 = 0.0f;
 800a900:	f8cb a000 	str.w	sl, [fp]
						line1_1.invalidate();
 800a904:	f008 fe80 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
									float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a908:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800a90c:	edd7 7a00 	vldr	s15, [r7]
 800a910:	ee07 3a10 	vmov	s14, r3
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a914:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
									float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a918:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a91c:	ee06 3a90 	vmov	s13, r3
									float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800a920:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800a924:	eee7 7a06 	vfma.f32	s15, s14, s12
									line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a928:	2321      	movs	r3, #33	@ 0x21
 800a92a:	4620      	mov	r0, r4
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a92c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800a930:	ed98 7a00 	vldr	s14, [r8]
									line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a934:	9300      	str	r3, [sp, #0]
									float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800a936:	eea6 7a86 	vfma.f32	s14, s13, s12
									line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800a93a:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800a93e:	ee37 7a48 	vsub.f32	s14, s14, s16
 800a942:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800a946:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800a94a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a94e:	ee17 2a10 	vmov	r2, s14
 800a952:	ee17 1a90 	vmov	r1, s15
 800a956:	b212      	sxth	r2, r2
 800a958:	b209      	sxth	r1, r1
 800a95a:	f7f8 fbcb 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
									line1_1.setStart(16, 16);
 800a95e:	2210      	movs	r2, #16
 800a960:	4611      	mov	r1, r2
 800a962:	4620      	mov	r0, r4
 800a964:	f7fc fe7e 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
									line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 800a968:	f8db 0000 	ldr.w	r0, [fp]
 800a96c:	f7f5 fdf4 	bl	8000558 <__aeabi_f2d>
 800a970:	a373      	add	r3, pc, #460	@ (adr r3, 800ab40 <_ZN16MediumScreenView15handleTickEventEv+0xc78>)
 800a972:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a976:	f7f5 fe47 	bl	8000608 <__aeabi_dmul>
 800a97a:	4b75      	ldr	r3, [pc, #468]	@ (800ab50 <_ZN16MediumScreenView15handleTickEventEv+0xc88>)
 800a97c:	2200      	movs	r2, #0
 800a97e:	f7f5 ff6d 	bl	800085c <__aeabi_ddiv>
 800a982:	f7f6 f8f1 	bl	8000b68 <__aeabi_d2f>
 800a986:	ee08 0a90 	vmov	s17, r0
 800a98a:	eeb0 0a68 	vmov.f32	s0, s17
 800a98e:	f01f fa1f 	bl	8029dd0 <cosf>
 800a992:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800a996:	eef0 9a48 	vmov.f32	s19, s16
 800a99a:	eee0 9a09 	vfma.f32	s19, s0, s18
 800a99e:	eeb0 0a68 	vmov.f32	s0, s17
 800a9a2:	f01f fa59 	bl	8029e58 <sinf>
 800a9a6:	eef0 0a48 	vmov.f32	s1, s16
 800a9aa:	eee0 0a09 	vfma.f32	s1, s0, s18
 800a9ae:	4620      	mov	r0, r4
 800a9b0:	eeb0 0a69 	vmov.f32	s0, s19
 800a9b4:	f7fc fe5a 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 800a9b8:	f885 93dd 	strb.w	r9, [r5, #989]	@ 0x3dd
									line1_1.invalidate();
 800a9bc:	4620      	mov	r0, r4
 800a9be:	e49d      	b.n	800a2fc <_ZN16MediumScreenView15handleTickEventEv+0x434>
                        ballX = 1;
 800a9c0:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800a9c4:	ed83 7a00 	vstr	s14, [r3]
                        ballVelX = -ballVelX;
 800a9c8:	f204 732c 	addw	r3, r4, #1836	@ 0x72c
 800a9cc:	ed93 7a00 	vldr	s14, [r3]
 800a9d0:	eeb1 7a47 	vneg.f32	s14, s14
 800a9d4:	ed83 7a00 	vstr	s14, [r3]
            ball.moveTo(ballX, ballY);
 800a9d8:	f204 7424 	addw	r4, r4, #1828	@ 0x724
 800a9dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a9e0:	ed94 7a00 	vldr	s14, [r4]
 800a9e4:	ee17 3a90 	vmov	r3, s15
 800a9e8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800a9ec:	b21a      	sxth	r2, r3
 800a9ee:	ee17 3a10 	vmov	r3, s14
            ball.moveTo(ballX, ballY);
 800a9f2:	b219      	sxth	r1, r3
 800a9f4:	4630      	mov	r0, r6
 800a9f6:	f7f7 f946 	bl	8001c86 <_ZN8touchgfx8Drawable6moveToEss>
            ball.invalidate();
 800a9fa:	4630      	mov	r0, r6
 800a9fc:	f008 fe04 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
}
 800aa00:	b005      	add	sp, #20
 800aa02:	ecbd 8b04 	vpop	{d8-d9}
 800aa06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (serveDelayTicks > 0) {
 800aa0a:	f8d4 3738 	ldr.w	r3, [r4, #1848]	@ 0x738
 800aa0e:	2b00      	cmp	r3, #0
 800aa10:	dd09      	ble.n	800aa26 <_ZN16MediumScreenView15handleTickEventEv+0xb5e>
                serveDelayTicks--;
 800aa12:	3b01      	subs	r3, #1
 800aa14:	f8c4 3738 	str.w	r3, [r4, #1848]	@ 0x738
                if (serveDelayTicks == 0) {
 800aa18:	b92b      	cbnz	r3, 800aa26 <_ZN16MediumScreenView15handleTickEventEv+0xb5e>
 800aa1a:	2301      	movs	r3, #1
 800aa1c:	f885 32fd 	strb.w	r3, [r5, #765]	@ 0x2fd
                    ball.invalidate();
 800aa20:	4630      	mov	r0, r6
 800aa22:	f008 fdf1 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            if (servingPlayer == 1) {
 800aa26:	f8d4 873c 	ldr.w	r8, [r4, #1852]	@ 0x73c
 800aa2a:	f1b8 0f01 	cmp.w	r8, #1
 800aa2e:	f040 8091 	bne.w	800ab54 <_ZN16MediumScreenView15handleTickEventEv+0xc8c>
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 800aa32:	f9b5 30fa 	ldrsh.w	r3, [r5, #250]	@ 0xfa
 800aa36:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800aa3a:	f9b5 30f6 	ldrsh.w	r3, [r5, #246]	@ 0xf6
 800aa3e:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800aa42:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
 800aa46:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800aa4a:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 800aa4e:	ee07 3a90 	vmov	s15, r3
 800aa52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                line1.invalidate();
 800aa56:	f505 774d 	add.w	r7, r5, #820	@ 0x334
                ballY = paddle1.getY() + paddle1.getHeight()/2 - ball.getHeight()/2;
 800aa5a:	f504 69e5 	add.w	r9, r4, #1832	@ 0x728
 800aa5e:	edc9 7a00 	vstr	s15, [r9]
                line1.invalidate();
 800aa62:	4638      	mov	r0, r7
 800aa64:	f008 fdd0 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                            float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800aa68:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800aa6c:	ee07 3a10 	vmov	s14, r3
 800aa70:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800aa74:	edd3 7a00 	vldr	s15, [r3]
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800aa78:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
                            float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800aa7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800aa80:	ee06 3a90 	vmov	s13, r3
                            float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800aa84:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800aa88:	eee7 7a06 	vfma.f32	s15, s14, s12
                            line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800aa8c:	2321      	movs	r3, #33	@ 0x21
 800aa8e:	4638      	mov	r0, r7
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800aa90:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800aa94:	ed99 7a00 	vldr	s14, [r9]
                            line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800aa98:	9300      	str	r3, [sp, #0]
                            float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800aa9a:	eea6 7a86 	vfma.f32	s14, s13, s12
                            line1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800aa9e:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800aaa2:	ee37 7a48 	vsub.f32	s14, s14, s16
 800aaa6:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800aaaa:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800aaae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aab2:	ee17 2a10 	vmov	r2, s14
 800aab6:	ee17 1a90 	vmov	r1, s15
 800aaba:	b212      	sxth	r2, r2
 800aabc:	b209      	sxth	r1, r1
 800aabe:	f7f8 fb19 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                            line1.setStart(16, 16);
 800aac2:	2210      	movs	r2, #16
 800aac4:	4611      	mov	r1, r2
 800aac6:	4638      	mov	r0, r7
 800aac8:	f7fc fdcc 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                            line1.setEnd(16 + 30 * cosf(lineAngle1 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle1 * M_PI / 180.0f));
 800aacc:	f204 735c 	addw	r3, r4, #1884	@ 0x75c
 800aad0:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800aad4:	6818      	ldr	r0, [r3, #0]
 800aad6:	f7f5 fd3f 	bl	8000558 <__aeabi_f2d>
 800aada:	a319      	add	r3, pc, #100	@ (adr r3, 800ab40 <_ZN16MediumScreenView15handleTickEventEv+0xc78>)
 800aadc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aae0:	f7f5 fd92 	bl	8000608 <__aeabi_dmul>
 800aae4:	4b1a      	ldr	r3, [pc, #104]	@ (800ab50 <_ZN16MediumScreenView15handleTickEventEv+0xc88>)
 800aae6:	2200      	movs	r2, #0
 800aae8:	f7f5 feb8 	bl	800085c <__aeabi_ddiv>
 800aaec:	f7f6 f83c 	bl	8000b68 <__aeabi_d2f>
 800aaf0:	ee08 0a90 	vmov	s17, r0
 800aaf4:	eeb0 0a68 	vmov.f32	s0, s17
 800aaf8:	f01f f96a 	bl	8029dd0 <cosf>
 800aafc:	eef0 9a48 	vmov.f32	s19, s16
 800ab00:	eee0 9a09 	vfma.f32	s19, s0, s18
 800ab04:	eeb0 0a68 	vmov.f32	s0, s17
 800ab08:	f01f f9a6 	bl	8029e58 <sinf>
 800ab0c:	eef0 0a48 	vmov.f32	s1, s16
 800ab10:	eee0 0a09 	vfma.f32	s1, s0, s18
 800ab14:	4638      	mov	r0, r7
 800ab16:	eeb0 0a69 	vmov.f32	s0, s19
 800ab1a:	f7fc fda7 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 800ab1e:	f885 8359 	strb.w	r8, [r5, #857]	@ 0x359
                           line1_1.invalidate();
 800ab22:	4638      	mov	r0, r7
 800ab24:	f008 fd70 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
            ball.moveTo(ballX, ballY);
 800ab28:	f504 63e5 	add.w	r3, r4, #1832	@ 0x728
 800ab2c:	ed93 7a00 	vldr	s14, [r3]
 800ab30:	f204 7424 	addw	r4, r4, #1828	@ 0x724
 800ab34:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800ab38:	edd4 7a00 	vldr	s15, [r4]
 800ab3c:	f7ff bbe6 	b.w	800a30c <_ZN16MediumScreenView15handleTickEventEv+0x444>
 800ab40:	54442d18 	.word	0x54442d18
 800ab44:	400921fb 	.word	0x400921fb
 800ab48:	0802d07f 	.word	0x0802d07f
 800ab4c:	40020c00 	.word	0x40020c00
 800ab50:	40668000 	.word	0x40668000
            } else if (servingPlayer == 2) {
 800ab54:	f1b8 0f02 	cmp.w	r8, #2
 800ab58:	d1e6      	bne.n	800ab28 <_ZN16MediumScreenView15handleTickEventEv+0xc60>
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800ab5a:	f9b5 3126 	ldrsh.w	r3, [r5, #294]	@ 0x126
 800ab5e:	eb03 72d3 	add.w	r2, r3, r3, lsr #31
 800ab62:	f9b5 3122 	ldrsh.w	r3, [r5, #290]	@ 0x122
 800ab66:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800ab6a:	f9b5 22e2 	ldrsh.w	r2, [r5, #738]	@ 0x2e2
 800ab6e:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 800ab72:	eba3 0362 	sub.w	r3, r3, r2, asr #1
 800ab76:	ee07 3a90 	vmov	s15, r3
 800ab7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
                line1_1.invalidate();
 800ab7e:	f505 776e 	add.w	r7, r5, #952	@ 0x3b8
                ballY = paddle2.getY() + paddle2.getHeight()/2 - ball.getHeight()/2;
 800ab82:	f504 68e5 	add.w	r8, r4, #1832	@ 0x728
 800ab86:	edc8 7a00 	vstr	s15, [r8]
                line1_1.invalidate();
 800ab8a:	4638      	mov	r0, r7
 800ab8c:	f008 fd3c 	bl	8013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
                           float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800ab90:	f9b5 32e0 	ldrsh.w	r3, [r5, #736]	@ 0x2e0
 800ab94:	ee07 3a10 	vmov	s14, r3
 800ab98:	f204 7324 	addw	r3, r4, #1828	@ 0x724
 800ab9c:	edd3 7a00 	vldr	s15, [r3]
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800aba0:	f9b5 32e2 	ldrsh.w	r3, [r5, #738]	@ 0x2e2
                           float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800aba4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800aba8:	ee06 3a90 	vmov	s13, r3
                           float ballCenterX = ballX + ball.getWidth() / 2.0f;
 800abac:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 800abb0:	eee7 7a06 	vfma.f32	s15, s14, s12
                           line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800abb4:	2321      	movs	r3, #33	@ 0x21
 800abb6:	4638      	mov	r0, r7
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800abb8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800abbc:	ed98 7a00 	vldr	s14, [r8]
                           line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800abc0:	9300      	str	r3, [sp, #0]
                           float ballCenterY = ballY + ball.getHeight() / 2.0f;
 800abc2:	eea6 7a86 	vfma.f32	s14, s13, s12
                           line1_1.setPosition(ballCenterX - 16, ballCenterY - 16, 33, 33);
 800abc6:	eeb3 8a00 	vmov.f32	s16, #48	@ 0x41800000  16.0
 800abca:	ee37 7a48 	vsub.f32	s14, s14, s16
 800abce:	ee77 7ac8 	vsub.f32	s15, s15, s16
 800abd2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800abd6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800abda:	ee17 2a10 	vmov	r2, s14
 800abde:	ee17 1a90 	vmov	r1, s15
 800abe2:	b212      	sxth	r2, r2
 800abe4:	b209      	sxth	r1, r1
 800abe6:	f7f8 fa85 	bl	80030f4 <_ZN8touchgfx8Drawable11setPositionEssss>
                           line1_1.setStart(16, 16);
 800abea:	2210      	movs	r2, #16
 800abec:	4611      	mov	r1, r2
 800abee:	4638      	mov	r0, r7
 800abf0:	f7fc fd38 	bl	8007664 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
                           line1_1.setEnd(16 + 30 * cosf(lineAngle2 * M_PI / 180.0f), 16 + 30 * sinf(lineAngle2 * M_PI / 180.0f));
 800abf4:	f505 53bb 	add.w	r3, r5, #5984	@ 0x1760
 800abf8:	eeb3 9a0e 	vmov.f32	s18, #62	@ 0x41f00000  30.0
 800abfc:	6818      	ldr	r0, [r3, #0]
 800abfe:	f7f5 fcab 	bl	8000558 <__aeabi_f2d>
 800ac02:	a314      	add	r3, pc, #80	@ (adr r3, 800ac54 <_ZN16MediumScreenView15handleTickEventEv+0xd8c>)
 800ac04:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac08:	f7f5 fcfe 	bl	8000608 <__aeabi_dmul>
 800ac0c:	4b10      	ldr	r3, [pc, #64]	@ (800ac50 <_ZN16MediumScreenView15handleTickEventEv+0xd88>)
 800ac0e:	2200      	movs	r2, #0
 800ac10:	f7f5 fe24 	bl	800085c <__aeabi_ddiv>
 800ac14:	f7f5 ffa8 	bl	8000b68 <__aeabi_d2f>
 800ac18:	ee08 0a90 	vmov	s17, r0
 800ac1c:	eeb0 0a68 	vmov.f32	s0, s17
 800ac20:	f01f f8d6 	bl	8029dd0 <cosf>
 800ac24:	eef0 9a48 	vmov.f32	s19, s16
 800ac28:	eee0 9a09 	vfma.f32	s19, s0, s18
 800ac2c:	eeb0 0a68 	vmov.f32	s0, s17
 800ac30:	f01f f912 	bl	8029e58 <sinf>
 800ac34:	eef0 0a48 	vmov.f32	s1, s16
 800ac38:	eee0 0a09 	vfma.f32	s1, s0, s18
 800ac3c:	4638      	mov	r0, r7
 800ac3e:	eeb0 0a69 	vmov.f32	s0, s19
 800ac42:	f7fc fd13 	bl	800766c <_ZN8touchgfx4Line6setEndIfEEvT_S2_>
 800ac46:	2301      	movs	r3, #1
 800ac48:	f885 33dd 	strb.w	r3, [r5, #989]	@ 0x3dd
 800ac4c:	e769      	b.n	800ab22 <_ZN16MediumScreenView15handleTickEventEv+0xc5a>
 800ac4e:	bf00      	nop
 800ac50:	40668000 	.word	0x40668000
 800ac54:	54442d18 	.word	0x54442d18
 800ac58:	400921fb 	.word	0x400921fb

0800ac5c <_ZN5ModelC1Ev>:

#include <cstring>
#include <cstdio>

ModelListener* Model::staticListener = nullptr;
Model::Model() : modelListener(0), winner(0), player1Score(0), player2Score(0), gameOver(false)
 800ac5c:	2200      	movs	r2, #0
 800ac5e:	e9c0 2200 	strd	r2, r2, [r0]
 800ac62:	e9c0 2202 	strd	r2, r2, [r0, #8]
 800ac66:	7402      	strb	r2, [r0, #16]
{
}
 800ac68:	4770      	bx	lr
	...

0800ac6c <_ZN5Model4tickEv>:

void Model::tick()
{
    // Tick xử lý định kỳ nếu cần
    staticListener = modelListener; // gán mỗi lần để sync
 800ac6c:	4b01      	ldr	r3, [pc, #4]	@ (800ac74 <_ZN5Model4tickEv+0x8>)
 800ac6e:	6802      	ldr	r2, [r0, #0]
 800ac70:	601a      	str	r2, [r3, #0]
}
 800ac72:	4770      	bx	lr
 800ac74:	200031f4 	.word	0x200031f4

0800ac78 <_ZN5Model9setWinnerEi>:
//void Model::paddle2Action() {
//    if (staticListener) staticListener->paddle2Action();
//}
void Model::setWinner(int winnerId)
{
    winner = winnerId;
 800ac78:	6041      	str	r1, [r0, #4]
    printf("Model::setWinner: %d\n", winner);
 800ac7a:	4801      	ldr	r0, [pc, #4]	@ (800ac80 <_ZN5Model9setWinnerEi+0x8>)
 800ac7c:	f020 ba36 	b.w	802b0ec <iprintf>
 800ac80:	0802d082 	.word	0x0802d082

0800ac84 <_ZN5Model9getWinnerEi>:
}

int Model::getWinner(int playerId)
{
 800ac84:	b510      	push	{r4, lr}
    int result = (winner == playerId) ? 1 : 0;
 800ac86:	6844      	ldr	r4, [r0, #4]
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 800ac88:	4804      	ldr	r0, [pc, #16]	@ (800ac9c <_ZN5Model9getWinnerEi+0x18>)
    int result = (winner == playerId) ? 1 : 0;
 800ac8a:	1a63      	subs	r3, r4, r1
 800ac8c:	425c      	negs	r4, r3
 800ac8e:	415c      	adcs	r4, r3
    printf("Model::getWinner: playerId=%d, result=%d\n", playerId, result);
 800ac90:	4622      	mov	r2, r4
 800ac92:	f020 fa2b 	bl	802b0ec <iprintf>
    return result;
}
 800ac96:	4620      	mov	r0, r4
 800ac98:	bd10      	pop	{r4, pc}
 800ac9a:	bf00      	nop
 800ac9c:	0802d098 	.word	0x0802d098

0800aca0 <_ZN5Model9resetGameEv>:

void Model::resetGame()
{

    player1Score = 0;
 800aca0:	2300      	movs	r3, #0
    player2Score = 0;
 800aca2:	e9c0 3302 	strd	r3, r3, [r0, #8]
    gameOver = false;
 800aca6:	7403      	strb	r3, [r0, #16]
    winner = 0; // Đặt lại winner về 0
 800aca8:	6043      	str	r3, [r0, #4]
}
 800acaa:	4770      	bx	lr

0800acac <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
 800acac:	4770      	bx	lr

0800acae <_ZThn4_N20StartScreenPresenterD1Ev>:
 800acae:	3804      	subs	r0, #4
 800acb0:	4770      	bx	lr

0800acb2 <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
 800acb2:	4770      	bx	lr

0800acb4 <_ZN20StartScreenPresenterD0Ev>:
 800acb4:	b510      	push	{r4, lr}
 800acb6:	2110      	movs	r1, #16
 800acb8:	4604      	mov	r4, r0
 800acba:	f01f f815 	bl	8029ce8 <_ZdlPvj>
 800acbe:	4620      	mov	r0, r4
 800acc0:	bd10      	pop	{r4, pc}

0800acc2 <_ZThn4_N20StartScreenPresenterD0Ev>:
 800acc2:	f1a0 0004 	sub.w	r0, r0, #4
 800acc6:	e7f5      	b.n	800acb4 <_ZN20StartScreenPresenterD0Ev>

0800acc8 <_ZN20StartScreenPresenterC1ER15StartScreenView>:
 800acc8:	2200      	movs	r2, #0
 800acca:	6082      	str	r2, [r0, #8]
    : view(v)
 800accc:	4a02      	ldr	r2, [pc, #8]	@ (800acd8 <_ZN20StartScreenPresenterC1ER15StartScreenView+0x10>)
 800acce:	6002      	str	r2, [r0, #0]
 800acd0:	3218      	adds	r2, #24
 800acd2:	6042      	str	r2, [r0, #4]
 800acd4:	60c1      	str	r1, [r0, #12]
}
 800acd6:	4770      	bx	lr
 800acd8:	0802dcb4 	.word	0x0802dcb4

0800acdc <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
 800acdc:	4770      	bx	lr
	...

0800ace0 <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
 800ace0:	b510      	push	{r4, lr}
 800ace2:	4b03      	ldr	r3, [pc, #12]	@ (800acf0 <_ZN15StartScreenViewD1Ev+0x10>)
 800ace4:	6003      	str	r3, [r0, #0]
 800ace6:	4604      	mov	r4, r0
 800ace8:	f7fb fda0 	bl	800682c <_ZN19StartScreenViewBaseD1Ev>
 800acec:	4620      	mov	r0, r4
 800acee:	bd10      	pop	{r4, pc}
 800acf0:	0802dcdc 	.word	0x0802dcdc

0800acf4 <_ZN15StartScreenViewD0Ev>:
 800acf4:	b510      	push	{r4, lr}
 800acf6:	4604      	mov	r4, r0
 800acf8:	f7ff fff2 	bl	800ace0 <_ZN15StartScreenViewD1Ev>
 800acfc:	4620      	mov	r0, r4
 800acfe:	f641 017c 	movw	r1, #6268	@ 0x187c
 800ad02:	f01e fff1 	bl	8029ce8 <_ZdlPvj>
 800ad06:	4620      	mov	r0, r4
 800ad08:	bd10      	pop	{r4, pc}
	...

0800ad0c <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
 800ad0c:	b510      	push	{r4, lr}
 800ad0e:	4604      	mov	r4, r0
 800ad10:	f7fb fdd2 	bl	80068b8 <_ZN19StartScreenViewBaseC1Ev>
 800ad14:	4b01      	ldr	r3, [pc, #4]	@ (800ad1c <_ZN15StartScreenViewC1Ev+0x10>)
 800ad16:	6023      	str	r3, [r4, #0]
}
 800ad18:	4620      	mov	r0, r4
 800ad1a:	bd10      	pop	{r4, pc}
 800ad1c:	0802dcdc 	.word	0x0802dcdc

0800ad20 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
 800ad20:	f7fb bd62 	b.w	80067e8 <_ZN19StartScreenViewBase11setupScreenEv>

0800ad24 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800ad24:	20f0      	movs	r0, #240	@ 0xf0
 800ad26:	4770      	bx	lr

0800ad28 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800ad28:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 800ad2c:	4770      	bx	lr

0800ad2e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800ad2e:	2029      	movs	r0, #41	@ 0x29
 800ad30:	f7f7 bd50 	b.w	80027d4 <LCD_IO_WriteReg>

0800ad34 <ili9341_DisplayOff>:
 800ad34:	2028      	movs	r0, #40	@ 0x28
 800ad36:	f7f7 bd4d 	b.w	80027d4 <LCD_IO_WriteReg>

0800ad3a <ili9341_Init>:
{
 800ad3a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800ad3c:	f7f7 fd1e 	bl	800277c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800ad40:	20ca      	movs	r0, #202	@ 0xca
 800ad42:	f7f7 fd47 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ad46:	20c3      	movs	r0, #195	@ 0xc3
 800ad48:	f7f7 fd28 	bl	800279c <LCD_IO_WriteData>
 800ad4c:	2008      	movs	r0, #8
 800ad4e:	f7f7 fd25 	bl	800279c <LCD_IO_WriteData>
 800ad52:	2050      	movs	r0, #80	@ 0x50
 800ad54:	f7f7 fd22 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ad58:	20cf      	movs	r0, #207	@ 0xcf
 800ad5a:	f7f7 fd3b 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ad5e:	2000      	movs	r0, #0
 800ad60:	f7f7 fd1c 	bl	800279c <LCD_IO_WriteData>
 800ad64:	20c1      	movs	r0, #193	@ 0xc1
 800ad66:	f7f7 fd19 	bl	800279c <LCD_IO_WriteData>
 800ad6a:	2030      	movs	r0, #48	@ 0x30
 800ad6c:	f7f7 fd16 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ad70:	20ed      	movs	r0, #237	@ 0xed
 800ad72:	f7f7 fd2f 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ad76:	2064      	movs	r0, #100	@ 0x64
 800ad78:	f7f7 fd10 	bl	800279c <LCD_IO_WriteData>
 800ad7c:	2003      	movs	r0, #3
 800ad7e:	f7f7 fd0d 	bl	800279c <LCD_IO_WriteData>
 800ad82:	2012      	movs	r0, #18
 800ad84:	f7f7 fd0a 	bl	800279c <LCD_IO_WriteData>
 800ad88:	2081      	movs	r0, #129	@ 0x81
 800ad8a:	f7f7 fd07 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ad8e:	20e8      	movs	r0, #232	@ 0xe8
 800ad90:	f7f7 fd20 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ad94:	2085      	movs	r0, #133	@ 0x85
 800ad96:	f7f7 fd01 	bl	800279c <LCD_IO_WriteData>
 800ad9a:	2000      	movs	r0, #0
 800ad9c:	f7f7 fcfe 	bl	800279c <LCD_IO_WriteData>
 800ada0:	2078      	movs	r0, #120	@ 0x78
 800ada2:	f7f7 fcfb 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ada6:	20cb      	movs	r0, #203	@ 0xcb
 800ada8:	f7f7 fd14 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800adac:	2039      	movs	r0, #57	@ 0x39
 800adae:	f7f7 fcf5 	bl	800279c <LCD_IO_WriteData>
 800adb2:	202c      	movs	r0, #44	@ 0x2c
 800adb4:	f7f7 fcf2 	bl	800279c <LCD_IO_WriteData>
 800adb8:	2000      	movs	r0, #0
 800adba:	f7f7 fcef 	bl	800279c <LCD_IO_WriteData>
 800adbe:	2034      	movs	r0, #52	@ 0x34
 800adc0:	f7f7 fcec 	bl	800279c <LCD_IO_WriteData>
 800adc4:	2002      	movs	r0, #2
 800adc6:	f7f7 fce9 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800adca:	20f7      	movs	r0, #247	@ 0xf7
 800adcc:	f7f7 fd02 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800add0:	2020      	movs	r0, #32
 800add2:	f7f7 fce3 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800add6:	20ea      	movs	r0, #234	@ 0xea
 800add8:	f7f7 fcfc 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800addc:	2000      	movs	r0, #0
 800adde:	f7f7 fcdd 	bl	800279c <LCD_IO_WriteData>
 800ade2:	2000      	movs	r0, #0
 800ade4:	f7f7 fcda 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ade8:	20b1      	movs	r0, #177	@ 0xb1
 800adea:	f7f7 fcf3 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800adee:	2000      	movs	r0, #0
 800adf0:	f7f7 fcd4 	bl	800279c <LCD_IO_WriteData>
 800adf4:	201b      	movs	r0, #27
 800adf6:	f7f7 fcd1 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800adfa:	20b6      	movs	r0, #182	@ 0xb6
 800adfc:	f7f7 fcea 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae00:	200a      	movs	r0, #10
 800ae02:	f7f7 fccb 	bl	800279c <LCD_IO_WriteData>
 800ae06:	20a2      	movs	r0, #162	@ 0xa2
 800ae08:	f7f7 fcc8 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae0c:	20c0      	movs	r0, #192	@ 0xc0
 800ae0e:	f7f7 fce1 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae12:	2010      	movs	r0, #16
 800ae14:	f7f7 fcc2 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae18:	20c1      	movs	r0, #193	@ 0xc1
 800ae1a:	f7f7 fcdb 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae1e:	2010      	movs	r0, #16
 800ae20:	f7f7 fcbc 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae24:	20c5      	movs	r0, #197	@ 0xc5
 800ae26:	f7f7 fcd5 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae2a:	2045      	movs	r0, #69	@ 0x45
 800ae2c:	f7f7 fcb6 	bl	800279c <LCD_IO_WriteData>
 800ae30:	2015      	movs	r0, #21
 800ae32:	f7f7 fcb3 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae36:	20c7      	movs	r0, #199	@ 0xc7
 800ae38:	f7f7 fccc 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae3c:	2090      	movs	r0, #144	@ 0x90
 800ae3e:	f7f7 fcad 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae42:	2036      	movs	r0, #54	@ 0x36
 800ae44:	f7f7 fcc6 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae48:	20c8      	movs	r0, #200	@ 0xc8
 800ae4a:	f7f7 fca7 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae4e:	20f2      	movs	r0, #242	@ 0xf2
 800ae50:	f7f7 fcc0 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae54:	2000      	movs	r0, #0
 800ae56:	f7f7 fca1 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae5a:	20b0      	movs	r0, #176	@ 0xb0
 800ae5c:	f7f7 fcba 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae60:	20c2      	movs	r0, #194	@ 0xc2
 800ae62:	f7f7 fc9b 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae66:	20b6      	movs	r0, #182	@ 0xb6
 800ae68:	f7f7 fcb4 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae6c:	200a      	movs	r0, #10
 800ae6e:	f7f7 fc95 	bl	800279c <LCD_IO_WriteData>
 800ae72:	20a7      	movs	r0, #167	@ 0xa7
 800ae74:	f7f7 fc92 	bl	800279c <LCD_IO_WriteData>
 800ae78:	2027      	movs	r0, #39	@ 0x27
 800ae7a:	f7f7 fc8f 	bl	800279c <LCD_IO_WriteData>
 800ae7e:	2004      	movs	r0, #4
 800ae80:	f7f7 fc8c 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800ae84:	202a      	movs	r0, #42	@ 0x2a
 800ae86:	f7f7 fca5 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800ae8a:	2000      	movs	r0, #0
 800ae8c:	f7f7 fc86 	bl	800279c <LCD_IO_WriteData>
 800ae90:	2000      	movs	r0, #0
 800ae92:	f7f7 fc83 	bl	800279c <LCD_IO_WriteData>
 800ae96:	2000      	movs	r0, #0
 800ae98:	f7f7 fc80 	bl	800279c <LCD_IO_WriteData>
 800ae9c:	20ef      	movs	r0, #239	@ 0xef
 800ae9e:	f7f7 fc7d 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800aea2:	202b      	movs	r0, #43	@ 0x2b
 800aea4:	f7f7 fc96 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800aea8:	2000      	movs	r0, #0
 800aeaa:	f7f7 fc77 	bl	800279c <LCD_IO_WriteData>
 800aeae:	2000      	movs	r0, #0
 800aeb0:	f7f7 fc74 	bl	800279c <LCD_IO_WriteData>
 800aeb4:	2001      	movs	r0, #1
 800aeb6:	f7f7 fc71 	bl	800279c <LCD_IO_WriteData>
 800aeba:	203f      	movs	r0, #63	@ 0x3f
 800aebc:	f7f7 fc6e 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800aec0:	20f6      	movs	r0, #246	@ 0xf6
 800aec2:	f7f7 fc87 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800aec6:	2001      	movs	r0, #1
 800aec8:	f7f7 fc68 	bl	800279c <LCD_IO_WriteData>
 800aecc:	2000      	movs	r0, #0
 800aece:	f7f7 fc65 	bl	800279c <LCD_IO_WriteData>
 800aed2:	2006      	movs	r0, #6
 800aed4:	f7f7 fc62 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800aed8:	202c      	movs	r0, #44	@ 0x2c
 800aeda:	f7f7 fc7b 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800aede:	20c8      	movs	r0, #200	@ 0xc8
 800aee0:	f7f7 fcc6 	bl	8002870 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800aee4:	2026      	movs	r0, #38	@ 0x26
 800aee6:	f7f7 fc75 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800aeea:	2001      	movs	r0, #1
 800aeec:	f7f7 fc56 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800aef0:	20e0      	movs	r0, #224	@ 0xe0
 800aef2:	f7f7 fc6f 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800aef6:	200f      	movs	r0, #15
 800aef8:	f7f7 fc50 	bl	800279c <LCD_IO_WriteData>
 800aefc:	2029      	movs	r0, #41	@ 0x29
 800aefe:	f7f7 fc4d 	bl	800279c <LCD_IO_WriteData>
 800af02:	2024      	movs	r0, #36	@ 0x24
 800af04:	f7f7 fc4a 	bl	800279c <LCD_IO_WriteData>
 800af08:	200c      	movs	r0, #12
 800af0a:	f7f7 fc47 	bl	800279c <LCD_IO_WriteData>
 800af0e:	200e      	movs	r0, #14
 800af10:	f7f7 fc44 	bl	800279c <LCD_IO_WriteData>
 800af14:	2009      	movs	r0, #9
 800af16:	f7f7 fc41 	bl	800279c <LCD_IO_WriteData>
 800af1a:	204e      	movs	r0, #78	@ 0x4e
 800af1c:	f7f7 fc3e 	bl	800279c <LCD_IO_WriteData>
 800af20:	2078      	movs	r0, #120	@ 0x78
 800af22:	f7f7 fc3b 	bl	800279c <LCD_IO_WriteData>
 800af26:	203c      	movs	r0, #60	@ 0x3c
 800af28:	f7f7 fc38 	bl	800279c <LCD_IO_WriteData>
 800af2c:	2009      	movs	r0, #9
 800af2e:	f7f7 fc35 	bl	800279c <LCD_IO_WriteData>
 800af32:	2013      	movs	r0, #19
 800af34:	f7f7 fc32 	bl	800279c <LCD_IO_WriteData>
 800af38:	2005      	movs	r0, #5
 800af3a:	f7f7 fc2f 	bl	800279c <LCD_IO_WriteData>
 800af3e:	2017      	movs	r0, #23
 800af40:	f7f7 fc2c 	bl	800279c <LCD_IO_WriteData>
 800af44:	2011      	movs	r0, #17
 800af46:	f7f7 fc29 	bl	800279c <LCD_IO_WriteData>
 800af4a:	2000      	movs	r0, #0
 800af4c:	f7f7 fc26 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af50:	20e1      	movs	r0, #225	@ 0xe1
 800af52:	f7f7 fc3f 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af56:	2000      	movs	r0, #0
 800af58:	f7f7 fc20 	bl	800279c <LCD_IO_WriteData>
 800af5c:	2016      	movs	r0, #22
 800af5e:	f7f7 fc1d 	bl	800279c <LCD_IO_WriteData>
 800af62:	201b      	movs	r0, #27
 800af64:	f7f7 fc1a 	bl	800279c <LCD_IO_WriteData>
 800af68:	2004      	movs	r0, #4
 800af6a:	f7f7 fc17 	bl	800279c <LCD_IO_WriteData>
 800af6e:	2011      	movs	r0, #17
 800af70:	f7f7 fc14 	bl	800279c <LCD_IO_WriteData>
 800af74:	2007      	movs	r0, #7
 800af76:	f7f7 fc11 	bl	800279c <LCD_IO_WriteData>
 800af7a:	2031      	movs	r0, #49	@ 0x31
 800af7c:	f7f7 fc0e 	bl	800279c <LCD_IO_WriteData>
 800af80:	2033      	movs	r0, #51	@ 0x33
 800af82:	f7f7 fc0b 	bl	800279c <LCD_IO_WriteData>
 800af86:	2042      	movs	r0, #66	@ 0x42
 800af88:	f7f7 fc08 	bl	800279c <LCD_IO_WriteData>
 800af8c:	2005      	movs	r0, #5
 800af8e:	f7f7 fc05 	bl	800279c <LCD_IO_WriteData>
 800af92:	200c      	movs	r0, #12
 800af94:	f7f7 fc02 	bl	800279c <LCD_IO_WriteData>
 800af98:	200a      	movs	r0, #10
 800af9a:	f7f7 fbff 	bl	800279c <LCD_IO_WriteData>
 800af9e:	2028      	movs	r0, #40	@ 0x28
 800afa0:	f7f7 fbfc 	bl	800279c <LCD_IO_WriteData>
 800afa4:	202f      	movs	r0, #47	@ 0x2f
 800afa6:	f7f7 fbf9 	bl	800279c <LCD_IO_WriteData>
 800afaa:	200f      	movs	r0, #15
 800afac:	f7f7 fbf6 	bl	800279c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afb0:	2011      	movs	r0, #17
 800afb2:	f7f7 fc0f 	bl	80027d4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800afb6:	20c8      	movs	r0, #200	@ 0xc8
 800afb8:	f7f7 fc5a 	bl	8002870 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800afbc:	2029      	movs	r0, #41	@ 0x29
 800afbe:	f7f7 fc09 	bl	80027d4 <LCD_IO_WriteReg>
}
 800afc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800afc6:	202c      	movs	r0, #44	@ 0x2c
 800afc8:	f7f7 bc04 	b.w	80027d4 <LCD_IO_WriteReg>

0800afcc <ili9341_ReadID>:
{
 800afcc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800afce:	f7f7 fbd5 	bl	800277c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800afd2:	2103      	movs	r1, #3
 800afd4:	20d3      	movs	r0, #211	@ 0xd3
 800afd6:	f7f7 fc19 	bl	800280c <LCD_IO_ReadData>
}
 800afda:	b280      	uxth	r0, r0
 800afdc:	bd08      	pop	{r3, pc}

0800afde <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800afde:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800afe0:	b2c4      	uxtb	r4, r0
 800afe2:	2202      	movs	r2, #2
 800afe4:	2103      	movs	r1, #3
 800afe6:	4620      	mov	r0, r4
 800afe8:	f7f7 fb7e 	bl	80026e8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800afec:	200a      	movs	r0, #10
 800afee:	f7f7 fbc3 	bl	8002778 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800aff2:	4620      	mov	r0, r4
 800aff4:	2200      	movs	r2, #0
 800aff6:	2103      	movs	r1, #3
 800aff8:	f7f7 fb76 	bl	80026e8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800affc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b000:	2002      	movs	r0, #2
 800b002:	f7f7 bbb9 	b.w	8002778 <IOE_Delay>

0800b006 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800b006:	b538      	push	{r3, r4, r5, lr}
 800b008:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b00a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800b00c:	f7f7 fb6a 	bl	80026e4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b010:	2100      	movs	r1, #0
 800b012:	4620      	mov	r0, r4
 800b014:	f7f7 fb80 	bl	8002718 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b018:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b01a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b01c:	4620      	mov	r0, r4
 800b01e:	f7f7 fb7b 	bl	8002718 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b022:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800b026:	b280      	uxth	r0, r0
 800b028:	bd38      	pop	{r3, r4, r5, pc}

0800b02a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b02a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b02c:	b2c4      	uxtb	r4, r0
 800b02e:	2140      	movs	r1, #64	@ 0x40
 800b030:	4620      	mov	r0, r4
 800b032:	f7f7 fb71 	bl	8002718 <IOE_Read>
  
  if(state > 0)
 800b036:	0603      	lsls	r3, r0, #24
 800b038:	d507      	bpl.n	800b04a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b03a:	214c      	movs	r1, #76	@ 0x4c
 800b03c:	4620      	mov	r0, r4
 800b03e:	f7f7 fb6b 	bl	8002718 <IOE_Read>
 800b042:	3800      	subs	r0, #0
 800b044:	bf18      	it	ne
 800b046:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800b048:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b04a:	2201      	movs	r2, #1
 800b04c:	214b      	movs	r1, #75	@ 0x4b
 800b04e:	4620      	mov	r0, r4
 800b050:	f7f7 fb4a 	bl	80026e8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b054:	4620      	mov	r0, r4
 800b056:	2200      	movs	r2, #0
 800b058:	214b      	movs	r1, #75	@ 0x4b
 800b05a:	f7f7 fb45 	bl	80026e8 <IOE_Write>
  uint8_t ret = 0;
 800b05e:	2000      	movs	r0, #0
 800b060:	e7f2      	b.n	800b048 <stmpe811_TS_DetectTouch+0x1e>

0800b062 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800b062:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b064:	2304      	movs	r3, #4
 800b066:	b2c4      	uxtb	r4, r0
{
 800b068:	460e      	mov	r6, r1
 800b06a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b06c:	21d7      	movs	r1, #215	@ 0xd7
 800b06e:	eb0d 0203 	add.w	r2, sp, r3
 800b072:	4620      	mov	r0, r4
 800b074:	f7f7 fb6a 	bl	800274c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b078:	9b01      	ldr	r3, [sp, #4]
 800b07a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b07c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b07e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b082:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b084:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b086:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b088:	2201      	movs	r2, #1
 800b08a:	214b      	movs	r1, #75	@ 0x4b
 800b08c:	f7f7 fb2c 	bl	80026e8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b090:	2200      	movs	r2, #0
 800b092:	214b      	movs	r1, #75	@ 0x4b
 800b094:	4620      	mov	r0, r4
 800b096:	f7f7 fb27 	bl	80026e8 <IOE_Write>
}
 800b09a:	b002      	add	sp, #8
 800b09c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b0a0 <stmpe811_Init>:
{
 800b0a0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b0a2:	4a0a      	ldr	r2, [pc, #40]	@ (800b0cc <stmpe811_Init+0x2c>)
 800b0a4:	7813      	ldrb	r3, [r2, #0]
 800b0a6:	4298      	cmp	r0, r3
{
 800b0a8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800b0aa:	d00d      	beq.n	800b0c8 <stmpe811_Init+0x28>
 800b0ac:	7851      	ldrb	r1, [r2, #1]
 800b0ae:	4288      	cmp	r0, r1
 800b0b0:	d00a      	beq.n	800b0c8 <stmpe811_Init+0x28>
 800b0b2:	b10b      	cbz	r3, 800b0b8 <stmpe811_Init+0x18>
 800b0b4:	b941      	cbnz	r1, 800b0c8 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800b0b6:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800b0b8:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b0ba:	f7f7 fb13 	bl	80026e4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800b0be:	4620      	mov	r0, r4
}
 800b0c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800b0c4:	f7ff bf8b 	b.w	800afde <stmpe811_Reset>
}
 800b0c8:	bd10      	pop	{r4, pc}
 800b0ca:	bf00      	nop
 800b0cc:	200031f8 	.word	0x200031f8

0800b0d0 <stmpe811_EnableGlobalIT>:
{
 800b0d0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b0d2:	b2c4      	uxtb	r4, r0
 800b0d4:	2109      	movs	r1, #9
 800b0d6:	4620      	mov	r0, r4
 800b0d8:	f7f7 fb1e 	bl	8002718 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b0dc:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b0e0:	b2d2      	uxtb	r2, r2
 800b0e2:	4620      	mov	r0, r4
 800b0e4:	2109      	movs	r1, #9
}
 800b0e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b0ea:	f7f7 bafd 	b.w	80026e8 <IOE_Write>

0800b0ee <stmpe811_DisableGlobalIT>:
{
 800b0ee:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b0f0:	b2c4      	uxtb	r4, r0
 800b0f2:	2109      	movs	r1, #9
 800b0f4:	4620      	mov	r0, r4
 800b0f6:	f7f7 fb0f 	bl	8002718 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b0fa:	2109      	movs	r1, #9
 800b0fc:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 800b100:	4620      	mov	r0, r4
}
 800b102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b106:	f7f7 baef 	b.w	80026e8 <IOE_Write>

0800b10a <stmpe811_EnableITSource>:
{
 800b10a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b10c:	b2c4      	uxtb	r4, r0
{
 800b10e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b110:	4620      	mov	r0, r4
 800b112:	210a      	movs	r1, #10
 800b114:	f7f7 fb00 	bl	8002718 <IOE_Read>
  tmp |= Source; 
 800b118:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b11c:	b2d2      	uxtb	r2, r2
 800b11e:	4620      	mov	r0, r4
 800b120:	210a      	movs	r1, #10
}
 800b122:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b126:	f7f7 badf 	b.w	80026e8 <IOE_Write>

0800b12a <stmpe811_TS_EnableIT>:
{
 800b12a:	b510      	push	{r4, lr}
 800b12c:	4604      	mov	r4, r0
  IOE_ITConfig();
 800b12e:	f7f7 fada 	bl	80026e6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b132:	4620      	mov	r0, r4
 800b134:	211f      	movs	r1, #31
 800b136:	f7ff ffe8 	bl	800b10a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800b13a:	4620      	mov	r0, r4
}
 800b13c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 800b140:	f7ff bfc6 	b.w	800b0d0 <stmpe811_EnableGlobalIT>

0800b144 <stmpe811_DisableITSource>:
{
 800b144:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b146:	b2c4      	uxtb	r4, r0
{
 800b148:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b14a:	4620      	mov	r0, r4
 800b14c:	210a      	movs	r1, #10
 800b14e:	f7f7 fae3 	bl	8002718 <IOE_Read>
  tmp &= ~Source; 
 800b152:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b156:	b2d2      	uxtb	r2, r2
 800b158:	4620      	mov	r0, r4
 800b15a:	210a      	movs	r1, #10
}
 800b15c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b160:	f7f7 bac2 	b.w	80026e8 <IOE_Write>

0800b164 <stmpe811_TS_DisableIT>:
{
 800b164:	b510      	push	{r4, lr}
 800b166:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800b168:	f7ff ffc1 	bl	800b0ee <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b16c:	4620      	mov	r0, r4
 800b16e:	211f      	movs	r1, #31
}
 800b170:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800b174:	f7ff bfe6 	b.w	800b144 <stmpe811_DisableITSource>

0800b178 <stmpe811_ReadGITStatus>:
{
 800b178:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b17a:	b2c0      	uxtb	r0, r0
{
 800b17c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b17e:	210b      	movs	r1, #11
 800b180:	f7f7 faca 	bl	8002718 <IOE_Read>
}
 800b184:	4020      	ands	r0, r4
 800b186:	bd10      	pop	{r4, pc}

0800b188 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800b188:	211f      	movs	r1, #31
 800b18a:	f7ff bff5 	b.w	800b178 <stmpe811_ReadGITStatus>

0800b18e <stmpe811_ClearGlobalIT>:
{
 800b18e:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b190:	b2c0      	uxtb	r0, r0
 800b192:	210b      	movs	r1, #11
 800b194:	f7f7 baa8 	b.w	80026e8 <IOE_Write>

0800b198 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800b198:	211f      	movs	r1, #31
 800b19a:	f7ff bff8 	b.w	800b18e <stmpe811_ClearGlobalIT>

0800b19e <stmpe811_IO_EnableAF>:
{
 800b19e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b1a0:	b2c4      	uxtb	r4, r0
{
 800b1a2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b1a4:	4620      	mov	r0, r4
 800b1a6:	2117      	movs	r1, #23
 800b1a8:	f7f7 fab6 	bl	8002718 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800b1ac:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b1b0:	b2d2      	uxtb	r2, r2
 800b1b2:	4620      	mov	r0, r4
 800b1b4:	2117      	movs	r1, #23
}
 800b1b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b1ba:	f7f7 ba95 	b.w	80026e8 <IOE_Write>

0800b1be <stmpe811_TS_Start>:
{
 800b1be:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b1c0:	b2c4      	uxtb	r4, r0
{
 800b1c2:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b1c4:	2104      	movs	r1, #4
 800b1c6:	4620      	mov	r0, r4
 800b1c8:	f7f7 faa6 	bl	8002718 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b1cc:	2104      	movs	r1, #4
 800b1ce:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b1d2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b1d4:	4620      	mov	r0, r4
 800b1d6:	f7f7 fa87 	bl	80026e8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800b1da:	4630      	mov	r0, r6
 800b1dc:	21f0      	movs	r1, #240	@ 0xf0
 800b1de:	f7ff ffde 	bl	800b19e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b1e2:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 800b1e6:	4620      	mov	r0, r4
 800b1e8:	2104      	movs	r1, #4
 800b1ea:	f7f7 fa7d 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b1ee:	2249      	movs	r2, #73	@ 0x49
 800b1f0:	2120      	movs	r1, #32
 800b1f2:	4620      	mov	r0, r4
 800b1f4:	f7f7 fa78 	bl	80026e8 <IOE_Write>
  IOE_Delay(2); 
 800b1f8:	2002      	movs	r0, #2
 800b1fa:	f7f7 fabd 	bl	8002778 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b1fe:	4620      	mov	r0, r4
 800b200:	2201      	movs	r2, #1
 800b202:	2121      	movs	r1, #33	@ 0x21
 800b204:	f7f7 fa70 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b208:	4620      	mov	r0, r4
 800b20a:	229a      	movs	r2, #154	@ 0x9a
 800b20c:	2141      	movs	r1, #65	@ 0x41
 800b20e:	f7f7 fa6b 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b212:	4620      	mov	r0, r4
 800b214:	2201      	movs	r2, #1
 800b216:	214a      	movs	r1, #74	@ 0x4a
 800b218:	f7f7 fa66 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b21c:	4620      	mov	r0, r4
 800b21e:	2201      	movs	r2, #1
 800b220:	214b      	movs	r1, #75	@ 0x4b
 800b222:	f7f7 fa61 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b226:	4620      	mov	r0, r4
 800b228:	2200      	movs	r2, #0
 800b22a:	214b      	movs	r1, #75	@ 0x4b
 800b22c:	f7f7 fa5c 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b230:	4620      	mov	r0, r4
 800b232:	2201      	movs	r2, #1
 800b234:	2156      	movs	r1, #86	@ 0x56
 800b236:	f7f7 fa57 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b23a:	4620      	mov	r0, r4
 800b23c:	2201      	movs	r2, #1
 800b23e:	2158      	movs	r1, #88	@ 0x58
 800b240:	f7f7 fa52 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b244:	4620      	mov	r0, r4
 800b246:	2201      	movs	r2, #1
 800b248:	2140      	movs	r1, #64	@ 0x40
 800b24a:	f7f7 fa4d 	bl	80026e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b24e:	4620      	mov	r0, r4
 800b250:	22ff      	movs	r2, #255	@ 0xff
 800b252:	210b      	movs	r1, #11
 800b254:	f7f7 fa48 	bl	80026e8 <IOE_Write>
}
 800b258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800b25c:	2002      	movs	r0, #2
 800b25e:	f7f7 ba8b 	b.w	8002778 <IOE_Delay>
	...

0800b264 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b264:	4b05      	ldr	r3, [pc, #20]	@ (800b27c <SystemInit+0x18>)
 800b266:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800b26a:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800b26e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b272:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800b276:	609a      	str	r2, [r3, #8]
#endif
}
 800b278:	4770      	bx	lr
 800b27a:	bf00      	nop
 800b27c:	e000ed00 	.word	0xe000ed00

0800b280 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b280:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b282:	4b0b      	ldr	r3, [pc, #44]	@ (800b2b0 <HAL_Init+0x30>)
 800b284:	681a      	ldr	r2, [r3, #0]
 800b286:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800b28a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b28c:	681a      	ldr	r2, [r3, #0]
 800b28e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800b292:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b294:	681a      	ldr	r2, [r3, #0]
 800b296:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800b29a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b29c:	2003      	movs	r0, #3
 800b29e:	f000 fa63 	bl	800b768 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b2a2:	2000      	movs	r0, #0
 800b2a4:	f7f7 fd26 	bl	8002cf4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b2a8:	f7f7 faf0 	bl	800288c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b2ac:	2000      	movs	r0, #0
 800b2ae:	bd08      	pop	{r3, pc}
 800b2b0:	40023c00 	.word	0x40023c00

0800b2b4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b2b4:	4a03      	ldr	r2, [pc, #12]	@ (800b2c4 <HAL_IncTick+0x10>)
 800b2b6:	4b04      	ldr	r3, [pc, #16]	@ (800b2c8 <HAL_IncTick+0x14>)
 800b2b8:	6811      	ldr	r1, [r2, #0]
 800b2ba:	781b      	ldrb	r3, [r3, #0]
 800b2bc:	440b      	add	r3, r1
 800b2be:	6013      	str	r3, [r2, #0]
}
 800b2c0:	4770      	bx	lr
 800b2c2:	bf00      	nop
 800b2c4:	200031fc 	.word	0x200031fc
 800b2c8:	20000078 	.word	0x20000078

0800b2cc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b2cc:	4b01      	ldr	r3, [pc, #4]	@ (800b2d4 <HAL_GetTick+0x8>)
 800b2ce:	6818      	ldr	r0, [r3, #0]
}
 800b2d0:	4770      	bx	lr
 800b2d2:	bf00      	nop
 800b2d4:	200031fc 	.word	0x200031fc

0800b2d8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b2d8:	b538      	push	{r3, r4, r5, lr}
 800b2da:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b2dc:	f7ff fff6 	bl	800b2cc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b2e0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800b2e2:	bf1c      	itt	ne
 800b2e4:	4b05      	ldrne	r3, [pc, #20]	@ (800b2fc <HAL_Delay+0x24>)
 800b2e6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800b2e8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800b2ea:	bf18      	it	ne
 800b2ec:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b2ee:	f7ff ffed 	bl	800b2cc <HAL_GetTick>
 800b2f2:	1b43      	subs	r3, r0, r5
 800b2f4:	42a3      	cmp	r3, r4
 800b2f6:	d3fa      	bcc.n	800b2ee <HAL_Delay+0x16>
  {
  }
}
 800b2f8:	bd38      	pop	{r3, r4, r5, pc}
 800b2fa:	bf00      	nop
 800b2fc:	20000078 	.word	0x20000078

0800b300 <HAL_ADC_MspInit>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_MspInit could be implemented in the user file
   */
}
 800b300:	4770      	bx	lr
	...

0800b304 <HAL_ADC_Init>:
{
 800b304:	b538      	push	{r3, r4, r5, lr}
  if (hadc == NULL)
 800b306:	4604      	mov	r4, r0
 800b308:	2800      	cmp	r0, #0
 800b30a:	f000 809b 	beq.w	800b444 <HAL_ADC_Init+0x140>
  if (hadc->State == HAL_ADC_STATE_RESET)
 800b30e:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800b310:	b925      	cbnz	r5, 800b31c <HAL_ADC_Init+0x18>
    HAL_ADC_MspInit(hadc);
 800b312:	f7ff fff5 	bl	800b300 <HAL_ADC_MspInit>
    ADC_CLEAR_ERRORCODE(hadc);
 800b316:	6465      	str	r5, [r4, #68]	@ 0x44
    hadc->Lock = HAL_UNLOCKED;
 800b318:	f884 503c 	strb.w	r5, [r4, #60]	@ 0x3c
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800b31c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b31e:	06db      	lsls	r3, r3, #27
 800b320:	f100 808e 	bmi.w	800b440 <HAL_ADC_Init+0x13c>
    ADC_STATE_CLR_SET(hadc->State,
 800b324:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b326:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800b32a:	f023 0302 	bic.w	r3, r3, #2
 800b32e:	f043 0302 	orr.w	r3, r3, #2
 800b332:	6423      	str	r3, [r4, #64]	@ 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 800b334:	4b44      	ldr	r3, [pc, #272]	@ (800b448 <HAL_ADC_Init+0x144>)
 800b336:	685a      	ldr	r2, [r3, #4]
 800b338:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800b33c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800b33e:	685a      	ldr	r2, [r3, #4]
 800b340:	6861      	ldr	r1, [r4, #4]
 800b342:	430a      	orrs	r2, r1
 800b344:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800b346:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800b348:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800b34a:	685a      	ldr	r2, [r3, #4]
 800b34c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b350:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800b352:	685a      	ldr	r2, [r3, #4]
 800b354:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800b358:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800b35a:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800b35c:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800b35e:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800b362:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800b364:	685a      	ldr	r2, [r3, #4]
 800b366:	430a      	orrs	r2, r1
 800b368:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800b36a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800b36c:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800b36e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b372:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 800b374:	689a      	ldr	r2, [r3, #8]
 800b376:	430a      	orrs	r2, r1
 800b378:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800b37a:	4934      	ldr	r1, [pc, #208]	@ (800b44c <HAL_ADC_Init+0x148>)
 800b37c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800b37e:	428a      	cmp	r2, r1
 800b380:	d052      	beq.n	800b428 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800b382:	6899      	ldr	r1, [r3, #8]
 800b384:	f021 6170 	bic.w	r1, r1, #251658240	@ 0xf000000
 800b388:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800b38a:	6899      	ldr	r1, [r3, #8]
 800b38c:	430a      	orrs	r2, r1
 800b38e:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800b390:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800b392:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800b394:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b398:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800b39a:	689a      	ldr	r2, [r3, #8]
 800b39c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800b39e:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800b3a0:	689a      	ldr	r2, [r3, #8]
 800b3a2:	f022 0202 	bic.w	r2, r2, #2
 800b3a6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800b3a8:	689a      	ldr	r2, [r3, #8]
 800b3aa:	7e21      	ldrb	r1, [r4, #24]
 800b3ac:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800b3b0:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 800b3b2:	f894 2020 	ldrb.w	r2, [r4, #32]
 800b3b6:	2a00      	cmp	r2, #0
 800b3b8:	d03e      	beq.n	800b438 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800b3ba:	685a      	ldr	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800b3bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800b3be:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800b3c2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 800b3c4:	685a      	ldr	r2, [r3, #4]
 800b3c6:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800b3ca:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 800b3cc:	685a      	ldr	r2, [r3, #4]
 800b3ce:	3901      	subs	r1, #1
 800b3d0:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800b3d4:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800b3d6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800b3d8:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800b3da:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800b3de:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800b3e0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b3e2:	3901      	subs	r1, #1
 800b3e4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 800b3e8:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800b3ea:	689a      	ldr	r2, [r3, #8]
 800b3ec:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800b3f0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800b3f2:	689a      	ldr	r2, [r3, #8]
 800b3f4:	f894 1030 	ldrb.w	r1, [r4, #48]	@ 0x30
 800b3f8:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800b3fc:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800b3fe:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800b400:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800b402:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b406:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800b408:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800b40a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800b40c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800b410:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800b412:	6460      	str	r0, [r4, #68]	@ 0x44
    ADC_STATE_CLR_SET(hadc->State,
 800b414:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b416:	f023 0303 	bic.w	r3, r3, #3
 800b41a:	f043 0301 	orr.w	r3, r3, #1
 800b41e:	6423      	str	r3, [r4, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 800b420:	2300      	movs	r3, #0
 800b422:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
}
 800b426:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800b428:	689a      	ldr	r2, [r3, #8]
 800b42a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b42e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800b430:	689a      	ldr	r2, [r3, #8]
 800b432:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b436:	e7b2      	b.n	800b39e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800b438:	685a      	ldr	r2, [r3, #4]
 800b43a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b43e:	e7c9      	b.n	800b3d4 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800b440:	2001      	movs	r0, #1
 800b442:	e7ed      	b.n	800b420 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 800b444:	2001      	movs	r0, #1
 800b446:	e7ee      	b.n	800b426 <HAL_ADC_Init+0x122>
 800b448:	40012300 	.word	0x40012300
 800b44c:	0f000001 	.word	0x0f000001

0800b450 <HAL_ADC_Start>:
{
 800b450:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 800b452:	2300      	movs	r3, #0
 800b454:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800b456:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800b45a:	2b01      	cmp	r3, #1
 800b45c:	d069      	beq.n	800b532 <HAL_ADC_Start+0xe2>
 800b45e:	2301      	movs	r3, #1
 800b460:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800b464:	6803      	ldr	r3, [r0, #0]
 800b466:	689a      	ldr	r2, [r3, #8]
 800b468:	07d2      	lsls	r2, r2, #31
 800b46a:	d50b      	bpl.n	800b484 <HAL_ADC_Start+0x34>
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 800b46c:	689a      	ldr	r2, [r3, #8]
 800b46e:	07d1      	lsls	r1, r2, #31
 800b470:	d41a      	bmi.n	800b4a8 <HAL_ADC_Start+0x58>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800b472:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800b474:	f043 0310 	orr.w	r3, r3, #16
 800b478:	6403      	str	r3, [r0, #64]	@ 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800b47a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 800b47c:	f043 0301 	orr.w	r3, r3, #1
 800b480:	6443      	str	r3, [r0, #68]	@ 0x44
 800b482:	e04c      	b.n	800b51e <HAL_ADC_Start+0xce>
    __HAL_ADC_ENABLE(hadc);
 800b484:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800b486:	492c      	ldr	r1, [pc, #176]	@ (800b538 <HAL_ADC_Start+0xe8>)
    __HAL_ADC_ENABLE(hadc);
 800b488:	f042 0201 	orr.w	r2, r2, #1
 800b48c:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 800b48e:	4a2b      	ldr	r2, [pc, #172]	@ (800b53c <HAL_ADC_Start+0xec>)
 800b490:	6812      	ldr	r2, [r2, #0]
 800b492:	fbb2 f2f1 	udiv	r2, r2, r1
 800b496:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 800b49a:	9201      	str	r2, [sp, #4]
    while (counter != 0U)
 800b49c:	9a01      	ldr	r2, [sp, #4]
 800b49e:	2a00      	cmp	r2, #0
 800b4a0:	d0e4      	beq.n	800b46c <HAL_ADC_Start+0x1c>
      counter--;
 800b4a2:	9a01      	ldr	r2, [sp, #4]
 800b4a4:	3a01      	subs	r2, #1
 800b4a6:	e7f8      	b.n	800b49a <HAL_ADC_Start+0x4a>
    ADC_STATE_CLR_SET(hadc->State,
 800b4a8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800b4aa:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800b4ae:	f022 0201 	bic.w	r2, r2, #1
 800b4b2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800b4b6:	6402      	str	r2, [r0, #64]	@ 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 800b4b8:	685a      	ldr	r2, [r3, #4]
 800b4ba:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 800b4bc:	bf41      	itttt	mi
 800b4be:	6c02      	ldrmi	r2, [r0, #64]	@ 0x40
 800b4c0:	f422 5240 	bicmi.w	r2, r2, #12288	@ 0x3000
 800b4c4:	f442 5280 	orrmi.w	r2, r2, #4096	@ 0x1000
 800b4c8:	6402      	strmi	r2, [r0, #64]	@ 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800b4ca:	6c02      	ldr	r2, [r0, #64]	@ 0x40
 800b4cc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 800b4d0:	bf1c      	itt	ne
 800b4d2:	6c42      	ldrne	r2, [r0, #68]	@ 0x44
 800b4d4:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 800b4d8:	6442      	str	r2, [r0, #68]	@ 0x44
    __HAL_UNLOCK(hadc);
 800b4da:	2200      	movs	r2, #0
 800b4dc:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800b4e0:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 800b4e4:	601a      	str	r2, [r3, #0]
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800b4e6:	4a16      	ldr	r2, [pc, #88]	@ (800b540 <HAL_ADC_Start+0xf0>)
 800b4e8:	6851      	ldr	r1, [r2, #4]
 800b4ea:	f011 0f1f 	tst.w	r1, #31
 800b4ee:	4915      	ldr	r1, [pc, #84]	@ (800b544 <HAL_ADC_Start+0xf4>)
 800b4f0:	d11c      	bne.n	800b52c <HAL_ADC_Start+0xdc>
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 800b4f2:	428b      	cmp	r3, r1
 800b4f4:	d007      	beq.n	800b506 <HAL_ADC_Start+0xb6>
 800b4f6:	f501 7180 	add.w	r1, r1, #256	@ 0x100
 800b4fa:	428b      	cmp	r3, r1
 800b4fc:	d10c      	bne.n	800b518 <HAL_ADC_Start+0xc8>
 800b4fe:	6852      	ldr	r2, [r2, #4]
 800b500:	f012 0f1f 	tst.w	r2, #31
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800b504:	d10b      	bne.n	800b51e <HAL_ADC_Start+0xce>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800b506:	689a      	ldr	r2, [r3, #8]
 800b508:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 800b50c:	d107      	bne.n	800b51e <HAL_ADC_Start+0xce>
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800b50e:	689a      	ldr	r2, [r3, #8]
 800b510:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800b514:	609a      	str	r2, [r3, #8]
 800b516:	e002      	b.n	800b51e <HAL_ADC_Start+0xce>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800b518:	490b      	ldr	r1, [pc, #44]	@ (800b548 <HAL_ADC_Start+0xf8>)
 800b51a:	428b      	cmp	r3, r1
 800b51c:	d002      	beq.n	800b524 <HAL_ADC_Start+0xd4>
  return HAL_OK;
 800b51e:	2000      	movs	r0, #0
}
 800b520:	b002      	add	sp, #8
 800b522:	4770      	bx	lr
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800b524:	6852      	ldr	r2, [r2, #4]
 800b526:	f012 0f10 	tst.w	r2, #16
 800b52a:	e7eb      	b.n	800b504 <HAL_ADC_Start+0xb4>
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800b52c:	428b      	cmp	r3, r1
 800b52e:	d1f6      	bne.n	800b51e <HAL_ADC_Start+0xce>
 800b530:	e7e9      	b.n	800b506 <HAL_ADC_Start+0xb6>
  __HAL_LOCK(hadc);
 800b532:	2002      	movs	r0, #2
 800b534:	e7f4      	b.n	800b520 <HAL_ADC_Start+0xd0>
 800b536:	bf00      	nop
 800b538:	000f4240 	.word	0x000f4240
 800b53c:	20000074 	.word	0x20000074
 800b540:	40012300 	.word	0x40012300
 800b544:	40012000 	.word	0x40012000
 800b548:	40012200 	.word	0x40012200

0800b54c <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
 800b54c:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800b550:	2b01      	cmp	r3, #1
 800b552:	d014      	beq.n	800b57e <HAL_ADC_Stop+0x32>
  __HAL_ADC_DISABLE(hadc);
 800b554:	6803      	ldr	r3, [r0, #0]
 800b556:	689a      	ldr	r2, [r3, #8]
 800b558:	f022 0201 	bic.w	r2, r2, #1
 800b55c:	609a      	str	r2, [r3, #8]
  if (HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 800b55e:	689b      	ldr	r3, [r3, #8]
 800b560:	07db      	lsls	r3, r3, #31
 800b562:	d407      	bmi.n	800b574 <HAL_ADC_Stop+0x28>
    ADC_STATE_CLR_SET(hadc->State,
 800b564:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800b566:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800b56a:	f023 0301 	bic.w	r3, r3, #1
 800b56e:	f043 0301 	orr.w	r3, r3, #1
 800b572:	6403      	str	r3, [r0, #64]	@ 0x40
  __HAL_UNLOCK(hadc);
 800b574:	2300      	movs	r3, #0
 800b576:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  return HAL_OK;
 800b57a:	4618      	mov	r0, r3
 800b57c:	4770      	bx	lr
  __HAL_LOCK(hadc);
 800b57e:	2002      	movs	r0, #2
}
 800b580:	4770      	bx	lr

0800b582 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800b582:	6803      	ldr	r3, [r0, #0]
 800b584:	689a      	ldr	r2, [r3, #8]
 800b586:	0552      	lsls	r2, r2, #21
{
 800b588:	b570      	push	{r4, r5, r6, lr}
 800b58a:	4604      	mov	r4, r0
 800b58c:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800b58e:	d50b      	bpl.n	800b5a8 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
 800b590:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800b592:	05de      	lsls	r6, r3, #23
 800b594:	d508      	bpl.n	800b5a8 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800b596:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800b598:	f043 0320 	orr.w	r3, r3, #32
 800b59c:	6403      	str	r3, [r0, #64]	@ 0x40
    __HAL_UNLOCK(hadc);
 800b59e:	2300      	movs	r3, #0
 800b5a0:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
    return HAL_ERROR;
 800b5a4:	2001      	movs	r0, #1
}
 800b5a6:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 800b5a8:	f7ff fe90 	bl	800b2cc <HAL_GetTick>
 800b5ac:	4606      	mov	r6, r0
  while (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800b5ae:	6823      	ldr	r3, [r4, #0]
 800b5b0:	681a      	ldr	r2, [r3, #0]
 800b5b2:	0791      	lsls	r1, r2, #30
 800b5b4:	d50c      	bpl.n	800b5d0 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800b5b6:	f06f 0212 	mvn.w	r2, #18
 800b5ba:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800b5bc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800b5be:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800b5c2:	6422      	str	r2, [r4, #64]	@ 0x40
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800b5c4:	689a      	ldr	r2, [r3, #8]
 800b5c6:	f012 5f40 	tst.w	r2, #805306368	@ 0x30000000
 800b5ca:	d017      	beq.n	800b5fc <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 800b5cc:	2000      	movs	r0, #0
 800b5ce:	e7ea      	b.n	800b5a6 <HAL_ADC_PollForConversion+0x24>
    if (Timeout != HAL_MAX_DELAY)
 800b5d0:	1c68      	adds	r0, r5, #1
 800b5d2:	d0ed      	beq.n	800b5b0 <HAL_ADC_PollForConversion+0x2e>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b5d4:	b965      	cbnz	r5, 800b5f0 <HAL_ADC_PollForConversion+0x6e>
        if (!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 800b5d6:	6823      	ldr	r3, [r4, #0]
 800b5d8:	681b      	ldr	r3, [r3, #0]
 800b5da:	f013 0302 	ands.w	r3, r3, #2
 800b5de:	d1e6      	bne.n	800b5ae <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800b5e0:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hadc);
 800b5e2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800b5e6:	f042 0204 	orr.w	r2, r2, #4
 800b5ea:	6422      	str	r2, [r4, #64]	@ 0x40
          return HAL_TIMEOUT;
 800b5ec:	2003      	movs	r0, #3
 800b5ee:	e7da      	b.n	800b5a6 <HAL_ADC_PollForConversion+0x24>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800b5f0:	f7ff fe6c 	bl	800b2cc <HAL_GetTick>
 800b5f4:	1b80      	subs	r0, r0, r6
 800b5f6:	42a8      	cmp	r0, r5
 800b5f8:	d8ed      	bhi.n	800b5d6 <HAL_ADC_PollForConversion+0x54>
 800b5fa:	e7d8      	b.n	800b5ae <HAL_ADC_PollForConversion+0x2c>
  if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800b5fc:	7e22      	ldrb	r2, [r4, #24]
 800b5fe:	2a00      	cmp	r2, #0
 800b600:	d1e4      	bne.n	800b5cc <HAL_ADC_PollForConversion+0x4a>
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800b602:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800b604:	f412 0f70 	tst.w	r2, #15728640	@ 0xf00000
 800b608:	d002      	beq.n	800b610 <HAL_ADC_PollForConversion+0x8e>
       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 800b60a:	689b      	ldr	r3, [r3, #8]
      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800b60c:	055a      	lsls	r2, r3, #21
 800b60e:	d4dd      	bmi.n	800b5cc <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 800b610:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b612:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800b616:	6423      	str	r3, [r4, #64]	@ 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 800b618:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b61a:	04db      	lsls	r3, r3, #19
 800b61c:	d4d6      	bmi.n	800b5cc <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800b61e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800b620:	f043 0301 	orr.w	r3, r3, #1
 800b624:	6423      	str	r3, [r4, #64]	@ 0x40
 800b626:	e7d1      	b.n	800b5cc <HAL_ADC_PollForConversion+0x4a>

0800b628 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800b628:	6803      	ldr	r3, [r0, #0]
 800b62a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
}
 800b62c:	4770      	bx	lr
	...

0800b630 <HAL_ADC_ConfigChannel>:
{
 800b630:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800b632:	2300      	movs	r3, #0
 800b634:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800b636:	f890 303c 	ldrb.w	r3, [r0, #60]	@ 0x3c
 800b63a:	2b01      	cmp	r3, #1
{
 800b63c:	4605      	mov	r5, r0
  __HAL_LOCK(hadc);
 800b63e:	f000 8086 	beq.w	800b74e <HAL_ADC_ConfigChannel+0x11e>
 800b642:	2301      	movs	r3, #1
 800b644:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 800b648:	6808      	ldr	r0, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800b64a:	682b      	ldr	r3, [r5, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800b64c:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800b64e:	2809      	cmp	r0, #9
 800b650:	b284      	uxth	r4, r0
 800b652:	d933      	bls.n	800b6bc <HAL_ADC_ConfigChannel+0x8c>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800b654:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800b658:	68df      	ldr	r7, [r3, #12]
 800b65a:	3a1e      	subs	r2, #30
 800b65c:	f04f 0c07 	mov.w	ip, #7
 800b660:	fa0c fc02 	lsl.w	ip, ip, r2
 800b664:	ea27 070c 	bic.w	r7, r7, ip
 800b668:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800b66a:	68df      	ldr	r7, [r3, #12]
 800b66c:	fa06 f202 	lsl.w	r2, r6, r2
 800b670:	433a      	orrs	r2, r7
 800b672:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800b674:	6849      	ldr	r1, [r1, #4]
 800b676:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800b678:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 800b67c:	d82d      	bhi.n	800b6da <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800b67e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b680:	3a05      	subs	r2, #5
 800b682:	261f      	movs	r6, #31
 800b684:	4096      	lsls	r6, r2
 800b686:	ea21 0106 	bic.w	r1, r1, r6
 800b68a:	6359      	str	r1, [r3, #52]	@ 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800b68c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b68e:	fa04 f202 	lsl.w	r2, r4, r2
 800b692:	430a      	orrs	r2, r1
 800b694:	635a      	str	r2, [r3, #52]	@ 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800b696:	4a2f      	ldr	r2, [pc, #188]	@ (800b754 <HAL_ADC_ConfigChannel+0x124>)
 800b698:	4293      	cmp	r3, r2
 800b69a:	d10a      	bne.n	800b6b2 <HAL_ADC_ConfigChannel+0x82>
 800b69c:	2812      	cmp	r0, #18
 800b69e:	d137      	bne.n	800b710 <HAL_ADC_ConfigChannel+0xe0>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800b6a0:	4b2d      	ldr	r3, [pc, #180]	@ (800b758 <HAL_ADC_ConfigChannel+0x128>)
 800b6a2:	685a      	ldr	r2, [r3, #4]
 800b6a4:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 800b6a8:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800b6aa:	685a      	ldr	r2, [r3, #4]
 800b6ac:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 800b6b0:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800b6b2:	2000      	movs	r0, #0
 800b6b4:	f885 003c 	strb.w	r0, [r5, #60]	@ 0x3c
}
 800b6b8:	b003      	add	sp, #12
 800b6ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800b6bc:	691a      	ldr	r2, [r3, #16]
 800b6be:	eb00 0c40 	add.w	ip, r0, r0, lsl #1
 800b6c2:	2707      	movs	r7, #7
 800b6c4:	fa07 f70c 	lsl.w	r7, r7, ip
 800b6c8:	ea22 0207 	bic.w	r2, r2, r7
 800b6cc:	611a      	str	r2, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800b6ce:	691a      	ldr	r2, [r3, #16]
 800b6d0:	fa06 f60c 	lsl.w	r6, r6, ip
 800b6d4:	4316      	orrs	r6, r2
 800b6d6:	611e      	str	r6, [r3, #16]
 800b6d8:	e7cc      	b.n	800b674 <HAL_ADC_ConfigChannel+0x44>
  else if (sConfig->Rank < 13U)
 800b6da:	290c      	cmp	r1, #12
 800b6dc:	f04f 011f 	mov.w	r1, #31
 800b6e0:	d80b      	bhi.n	800b6fa <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800b6e2:	6b1e      	ldr	r6, [r3, #48]	@ 0x30
 800b6e4:	3a23      	subs	r2, #35	@ 0x23
 800b6e6:	4091      	lsls	r1, r2
 800b6e8:	ea26 0101 	bic.w	r1, r6, r1
 800b6ec:	6319      	str	r1, [r3, #48]	@ 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800b6ee:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b6f0:	fa04 f202 	lsl.w	r2, r4, r2
 800b6f4:	430a      	orrs	r2, r1
 800b6f6:	631a      	str	r2, [r3, #48]	@ 0x30
 800b6f8:	e7cd      	b.n	800b696 <HAL_ADC_ConfigChannel+0x66>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800b6fa:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
 800b6fc:	3a41      	subs	r2, #65	@ 0x41
 800b6fe:	4091      	lsls	r1, r2
 800b700:	ea26 0101 	bic.w	r1, r6, r1
 800b704:	62d9      	str	r1, [r3, #44]	@ 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800b706:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b708:	4094      	lsls	r4, r2
 800b70a:	430c      	orrs	r4, r1
 800b70c:	62dc      	str	r4, [r3, #44]	@ 0x2c
 800b70e:	e7c2      	b.n	800b696 <HAL_ADC_ConfigChannel+0x66>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800b710:	4b12      	ldr	r3, [pc, #72]	@ (800b75c <HAL_ADC_ConfigChannel+0x12c>)
 800b712:	4298      	cmp	r0, r3
 800b714:	d001      	beq.n	800b71a <HAL_ADC_ConfigChannel+0xea>
 800b716:	2811      	cmp	r0, #17
 800b718:	d1cb      	bne.n	800b6b2 <HAL_ADC_ConfigChannel+0x82>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800b71a:	4b0f      	ldr	r3, [pc, #60]	@ (800b758 <HAL_ADC_ConfigChannel+0x128>)
 800b71c:	685a      	ldr	r2, [r3, #4]
 800b71e:	f422 0280 	bic.w	r2, r2, #4194304	@ 0x400000
 800b722:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800b724:	685a      	ldr	r2, [r3, #4]
 800b726:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 800b72a:	605a      	str	r2, [r3, #4]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800b72c:	4b0b      	ldr	r3, [pc, #44]	@ (800b75c <HAL_ADC_ConfigChannel+0x12c>)
 800b72e:	4298      	cmp	r0, r3
 800b730:	d1bf      	bne.n	800b6b2 <HAL_ADC_ConfigChannel+0x82>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800b732:	4b0b      	ldr	r3, [pc, #44]	@ (800b760 <HAL_ADC_ConfigChannel+0x130>)
 800b734:	4a0b      	ldr	r2, [pc, #44]	@ (800b764 <HAL_ADC_ConfigChannel+0x134>)
 800b736:	681b      	ldr	r3, [r3, #0]
 800b738:	fbb3 f3f2 	udiv	r3, r3, r2
 800b73c:	220a      	movs	r2, #10
 800b73e:	4353      	muls	r3, r2
        counter--;
 800b740:	9301      	str	r3, [sp, #4]
      while (counter != 0U)
 800b742:	9b01      	ldr	r3, [sp, #4]
 800b744:	2b00      	cmp	r3, #0
 800b746:	d0b4      	beq.n	800b6b2 <HAL_ADC_ConfigChannel+0x82>
        counter--;
 800b748:	9b01      	ldr	r3, [sp, #4]
 800b74a:	3b01      	subs	r3, #1
 800b74c:	e7f8      	b.n	800b740 <HAL_ADC_ConfigChannel+0x110>
  __HAL_LOCK(hadc);
 800b74e:	2002      	movs	r0, #2
 800b750:	e7b2      	b.n	800b6b8 <HAL_ADC_ConfigChannel+0x88>
 800b752:	bf00      	nop
 800b754:	40012000 	.word	0x40012000
 800b758:	40012300 	.word	0x40012300
 800b75c:	10000012 	.word	0x10000012
 800b760:	20000074 	.word	0x20000074
 800b764:	000f4240 	.word	0x000f4240

0800b768 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b768:	4907      	ldr	r1, [pc, #28]	@ (800b788 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b76a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b76c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b770:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b772:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b774:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b778:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b77a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b77c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800b780:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 800b784:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b786:	4770      	bx	lr
 800b788:	e000ed00 	.word	0xe000ed00

0800b78c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b78c:	4b16      	ldr	r3, [pc, #88]	@ (800b7e8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b78e:	b530      	push	{r4, r5, lr}
 800b790:	68dc      	ldr	r4, [r3, #12]
 800b792:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b796:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b79a:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b79c:	2b04      	cmp	r3, #4
 800b79e:	bf28      	it	cs
 800b7a0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b7a2:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7a4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b7a8:	bf8c      	ite	hi
 800b7aa:	3c03      	subhi	r4, #3
 800b7ac:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7ae:	fa05 f303 	lsl.w	r3, r5, r3
 800b7b2:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b7b6:	40a5      	lsls	r5, r4
 800b7b8:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7bc:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 800b7be:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7c0:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7c4:	bfac      	ite	ge
 800b7c6:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7ca:	4a08      	ldrlt	r2, [pc, #32]	@ (800b7ec <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7cc:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7d0:	bfb8      	it	lt
 800b7d2:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7d6:	b2db      	uxtb	r3, r3
 800b7d8:	bfaa      	itet	ge
 800b7da:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7de:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7e0:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b7e4:	bd30      	pop	{r4, r5, pc}
 800b7e6:	bf00      	nop
 800b7e8:	e000ed00 	.word	0xe000ed00
 800b7ec:	e000ed14 	.word	0xe000ed14

0800b7f0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b7f0:	2800      	cmp	r0, #0
 800b7f2:	db07      	blt.n	800b804 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b7f4:	4a04      	ldr	r2, [pc, #16]	@ (800b808 <HAL_NVIC_EnableIRQ+0x18>)
 800b7f6:	0941      	lsrs	r1, r0, #5
 800b7f8:	2301      	movs	r3, #1
 800b7fa:	f000 001f 	and.w	r0, r0, #31
 800b7fe:	4083      	lsls	r3, r0
 800b800:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b804:	4770      	bx	lr
 800b806:	bf00      	nop
 800b808:	e000e100 	.word	0xe000e100

0800b80c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800b80c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b80e:	4604      	mov	r4, r0
 800b810:	b150      	cbz	r0, 800b828 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b812:	7943      	ldrb	r3, [r0, #5]
 800b814:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b818:	b913      	cbnz	r3, 800b820 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800b81a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800b81c:	f7f7 f856 	bl	80028cc <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b820:	2301      	movs	r3, #1
 800b822:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b824:	2000      	movs	r0, #0
}
 800b826:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b828:	2001      	movs	r0, #1
 800b82a:	e7fc      	b.n	800b826 <HAL_CRC_Init+0x1a>

0800b82c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800b82c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800b82e:	4604      	mov	r4, r0
 800b830:	b320      	cbz	r0, 800b87c <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800b832:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800b836:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800b83a:	b91b      	cbnz	r3, 800b844 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800b83c:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800b840:	f7f7 f85c 	bl	80028fc <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800b844:	2302      	movs	r3, #2
 800b846:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800b84a:	6823      	ldr	r3, [r4, #0]
 800b84c:	6861      	ldr	r1, [r4, #4]
 800b84e:	681a      	ldr	r2, [r3, #0]
 800b850:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800b854:	430a      	orrs	r2, r1
 800b856:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800b858:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800b85a:	68a1      	ldr	r1, [r4, #8]
 800b85c:	f022 0207 	bic.w	r2, r2, #7
 800b860:	430a      	orrs	r2, r1
 800b862:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800b864:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800b866:	68e1      	ldr	r1, [r4, #12]
 800b868:	f36f 020d 	bfc	r2, #0, #14
 800b86c:	430a      	orrs	r2, r1
 800b86e:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800b870:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800b872:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800b874:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800b876:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 800b87a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b87c:	2001      	movs	r0, #1
 800b87e:	e7fc      	b.n	800b87a <HAL_DMA2D_Init+0x4e>

0800b880 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800b880:	4770      	bx	lr

0800b882 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800b882:	4770      	bx	lr

0800b884 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800b884:	6803      	ldr	r3, [r0, #0]
{
 800b886:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800b888:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800b88a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800b88c:	07f2      	lsls	r2, r6, #31
{
 800b88e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800b890:	d514      	bpl.n	800b8bc <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800b892:	05e9      	lsls	r1, r5, #23
 800b894:	d512      	bpl.n	800b8bc <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800b896:	681a      	ldr	r2, [r3, #0]
 800b898:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b89c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800b89e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800b8a0:	f042 0201 	orr.w	r2, r2, #1
 800b8a4:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800b8a6:	2201      	movs	r2, #1
 800b8a8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800b8aa:	2304      	movs	r3, #4
 800b8ac:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800b8b0:	2300      	movs	r3, #0
 800b8b2:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800b8b6:	6943      	ldr	r3, [r0, #20]
 800b8b8:	b103      	cbz	r3, 800b8bc <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800b8ba:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800b8bc:	06b2      	lsls	r2, r6, #26
 800b8be:	d516      	bpl.n	800b8ee <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800b8c0:	04ab      	lsls	r3, r5, #18
 800b8c2:	d514      	bpl.n	800b8ee <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800b8c4:	6823      	ldr	r3, [r4, #0]
 800b8c6:	681a      	ldr	r2, [r3, #0]
 800b8c8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800b8cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800b8ce:	2220      	movs	r2, #32
 800b8d0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800b8d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b8d4:	f043 0302 	orr.w	r3, r3, #2
 800b8d8:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800b8da:	2304      	movs	r3, #4
 800b8dc:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800b8e0:	2300      	movs	r3, #0
 800b8e2:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800b8e6:	6963      	ldr	r3, [r4, #20]
 800b8e8:	b10b      	cbz	r3, 800b8ee <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800b8ea:	4620      	mov	r0, r4
 800b8ec:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800b8ee:	0730      	lsls	r0, r6, #28
 800b8f0:	d516      	bpl.n	800b920 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800b8f2:	0529      	lsls	r1, r5, #20
 800b8f4:	d514      	bpl.n	800b920 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800b8f6:	6823      	ldr	r3, [r4, #0]
 800b8f8:	681a      	ldr	r2, [r3, #0]
 800b8fa:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b8fe:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800b900:	2208      	movs	r2, #8
 800b902:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800b904:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b906:	f043 0304 	orr.w	r3, r3, #4
 800b90a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800b90c:	2304      	movs	r3, #4
 800b90e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800b912:	2300      	movs	r3, #0
 800b914:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800b918:	6963      	ldr	r3, [r4, #20]
 800b91a:	b10b      	cbz	r3, 800b920 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800b91c:	4620      	mov	r0, r4
 800b91e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800b920:	0772      	lsls	r2, r6, #29
 800b922:	d50b      	bpl.n	800b93c <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800b924:	056b      	lsls	r3, r5, #21
 800b926:	d509      	bpl.n	800b93c <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800b928:	6823      	ldr	r3, [r4, #0]
 800b92a:	681a      	ldr	r2, [r3, #0]
 800b92c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b930:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800b932:	2204      	movs	r2, #4
 800b934:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800b936:	4620      	mov	r0, r4
 800b938:	f7ff ffa2 	bl	800b880 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800b93c:	07b0      	lsls	r0, r6, #30
 800b93e:	d514      	bpl.n	800b96a <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800b940:	05a9      	lsls	r1, r5, #22
 800b942:	d512      	bpl.n	800b96a <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800b944:	6823      	ldr	r3, [r4, #0]
 800b946:	681a      	ldr	r2, [r3, #0]
 800b948:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800b94c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800b94e:	2202      	movs	r2, #2
 800b950:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800b952:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b954:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800b956:	2301      	movs	r3, #1
 800b958:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800b95c:	2300      	movs	r3, #0
 800b95e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800b962:	6923      	ldr	r3, [r4, #16]
 800b964:	b10b      	cbz	r3, 800b96a <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800b966:	4620      	mov	r0, r4
 800b968:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800b96a:	06f2      	lsls	r2, r6, #27
 800b96c:	d513      	bpl.n	800b996 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800b96e:	04eb      	lsls	r3, r5, #19
 800b970:	d511      	bpl.n	800b996 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800b972:	6823      	ldr	r3, [r4, #0]
 800b974:	681a      	ldr	r2, [r3, #0]
 800b976:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800b97a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800b97c:	2210      	movs	r2, #16
 800b97e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800b980:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800b982:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800b984:	2301      	movs	r3, #1
 800b986:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800b98a:	2300      	movs	r3, #0
 800b98c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800b990:	4620      	mov	r0, r4
 800b992:	f7ff ff76 	bl	800b882 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800b996:	bd70      	pop	{r4, r5, r6, pc}

0800b998 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800b998:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800b99a:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 800b99e:	2a01      	cmp	r2, #1
{
 800b9a0:	4603      	mov	r3, r0
 800b9a2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800b9a6:	d02b      	beq.n	800ba00 <HAL_DMA2D_ConfigLayer+0x68>
 800b9a8:	2201      	movs	r2, #1
 800b9aa:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800b9ae:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800b9b2:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 800b9b6:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 800b9ba:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 800b9bc:	4f17      	ldr	r7, [pc, #92]	@ (800ba1c <HAL_DMA2D_ConfigLayer+0x84>)
 800b9be:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800b9c2:	3c09      	subs	r4, #9
 800b9c4:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800b9c6:	bf9c      	itt	ls
 800b9c8:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 800b9cc:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800b9ce:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800b9d2:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800b9d4:	bf88      	it	hi
 800b9d6:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800b9da:	b991      	cbnz	r1, 800ba02 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800b9dc:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800b9de:	4039      	ands	r1, r7
 800b9e0:	4301      	orrs	r1, r0
 800b9e2:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800b9e4:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800b9e6:	6999      	ldr	r1, [r3, #24]
 800b9e8:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800b9ea:	d803      	bhi.n	800b9f4 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800b9ec:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800b9ee:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 800b9f2:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800b9f4:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800b9f6:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800b9f8:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800b9fc:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 800ba00:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800ba02:	69d1      	ldr	r1, [r2, #28]
 800ba04:	4039      	ands	r1, r7
 800ba06:	4301      	orrs	r1, r0
 800ba08:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800ba0a:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800ba0c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800ba0e:	6989      	ldr	r1, [r1, #24]
 800ba10:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800ba12:	bf9c      	itt	ls
 800ba14:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 800ba18:	6215      	strls	r5, [r2, #32]
 800ba1a:	e7eb      	b.n	800b9f4 <HAL_DMA2D_ConfigLayer+0x5c>
 800ba1c:	00fcfff0 	.word	0x00fcfff0

0800ba20 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ba20:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ba24:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 800bbe4 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800ba28:	4a6c      	ldr	r2, [pc, #432]	@ (800bbdc <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ba2a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ba2c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800ba2e:	2401      	movs	r4, #1
 800ba30:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ba32:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800ba36:	43ac      	bics	r4, r5
 800ba38:	f040 80b7 	bne.w	800bbaa <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ba3c:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ba3e:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ba40:	f005 0403 	and.w	r4, r5, #3
 800ba44:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ba48:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ba4c:	1e67      	subs	r7, r4, #1
 800ba4e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ba50:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ba54:	d834      	bhi.n	800bac0 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800ba56:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ba58:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800ba5c:	68cf      	ldr	r7, [r1, #12]
 800ba5e:	fa07 f708 	lsl.w	r7, r7, r8
 800ba62:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800ba66:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800ba68:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ba6a:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800ba6e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800ba72:	409f      	lsls	r7, r3
 800ba74:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800ba78:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800ba7a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ba7c:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800ba80:	688f      	ldr	r7, [r1, #8]
 800ba82:	fa07 f708 	lsl.w	r7, r7, r8
 800ba86:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800ba8a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800ba8c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800ba8e:	d119      	bne.n	800bac4 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800ba90:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800ba94:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ba98:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800ba9c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800baa0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800baa4:	f04f 0e0f 	mov.w	lr, #15
 800baa8:	fa0e fe0b 	lsl.w	lr, lr, fp
 800baac:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bab0:	690f      	ldr	r7, [r1, #16]
 800bab2:	fa07 f70b 	lsl.w	r7, r7, fp
 800bab6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800baba:	f8ca 7020 	str.w	r7, [sl, #32]
 800babe:	e001      	b.n	800bac4 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bac0:	2c03      	cmp	r4, #3
 800bac2:	d1da      	bne.n	800ba7a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800bac4:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bac6:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800baca:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bace:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bad0:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 800bad4:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bad6:	d068      	beq.n	800bbaa <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bad8:	2400      	movs	r4, #0
 800bada:	9401      	str	r4, [sp, #4]
 800badc:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800bae0:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 800bae4:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800bae8:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800baec:	f023 0703 	bic.w	r7, r3, #3
 800baf0:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 800baf4:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800baf8:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800bafc:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bafe:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bb02:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb04:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb08:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800bb0c:	240f      	movs	r4, #15
 800bb0e:	fa04 f40c 	lsl.w	r4, r4, ip
 800bb12:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb16:	4c32      	ldr	r4, [pc, #200]	@ (800bbe0 <HAL_GPIO_Init+0x1c0>)
 800bb18:	42a0      	cmp	r0, r4
 800bb1a:	d04d      	beq.n	800bbb8 <HAL_GPIO_Init+0x198>
 800bb1c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb20:	42a0      	cmp	r0, r4
 800bb22:	d04b      	beq.n	800bbbc <HAL_GPIO_Init+0x19c>
 800bb24:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb28:	42a0      	cmp	r0, r4
 800bb2a:	d049      	beq.n	800bbc0 <HAL_GPIO_Init+0x1a0>
 800bb2c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb30:	42a0      	cmp	r0, r4
 800bb32:	d047      	beq.n	800bbc4 <HAL_GPIO_Init+0x1a4>
 800bb34:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb38:	42a0      	cmp	r0, r4
 800bb3a:	d045      	beq.n	800bbc8 <HAL_GPIO_Init+0x1a8>
 800bb3c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb40:	42a0      	cmp	r0, r4
 800bb42:	d043      	beq.n	800bbcc <HAL_GPIO_Init+0x1ac>
 800bb44:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb48:	42a0      	cmp	r0, r4
 800bb4a:	d041      	beq.n	800bbd0 <HAL_GPIO_Init+0x1b0>
 800bb4c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb50:	42a0      	cmp	r0, r4
 800bb52:	d03f      	beq.n	800bbd4 <HAL_GPIO_Init+0x1b4>
 800bb54:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb58:	42a0      	cmp	r0, r4
 800bb5a:	d03d      	beq.n	800bbd8 <HAL_GPIO_Init+0x1b8>
 800bb5c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800bb60:	42a0      	cmp	r0, r4
 800bb62:	bf14      	ite	ne
 800bb64:	240a      	movne	r4, #10
 800bb66:	2409      	moveq	r4, #9
 800bb68:	fa04 f40c 	lsl.w	r4, r4, ip
 800bb6c:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bb70:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800bb72:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800bb74:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bb76:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bb7a:	bf0c      	ite	eq
 800bb7c:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800bb7e:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 800bb80:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800bb82:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bb84:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bb88:	bf0c      	ite	eq
 800bb8a:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800bb8c:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 800bb8e:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800bb90:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bb92:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bb96:	bf0c      	ite	eq
 800bb98:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800bb9a:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 800bb9c:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bb9e:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bba0:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800bba2:	bf54      	ite	pl
 800bba4:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800bba6:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 800bba8:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bbaa:	3301      	adds	r3, #1
 800bbac:	2b10      	cmp	r3, #16
 800bbae:	f47f af3d 	bne.w	800ba2c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800bbb2:	b003      	add	sp, #12
 800bbb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bbb8:	2400      	movs	r4, #0
 800bbba:	e7d5      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbbc:	2401      	movs	r4, #1
 800bbbe:	e7d3      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbc0:	2402      	movs	r4, #2
 800bbc2:	e7d1      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbc4:	2403      	movs	r4, #3
 800bbc6:	e7cf      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbc8:	2404      	movs	r4, #4
 800bbca:	e7cd      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbcc:	2405      	movs	r4, #5
 800bbce:	e7cb      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbd0:	2406      	movs	r4, #6
 800bbd2:	e7c9      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbd4:	2407      	movs	r4, #7
 800bbd6:	e7c7      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbd8:	2408      	movs	r4, #8
 800bbda:	e7c5      	b.n	800bb68 <HAL_GPIO_Init+0x148>
 800bbdc:	40013c00 	.word	0x40013c00
 800bbe0:	40020000 	.word	0x40020000
 800bbe4:	40023800 	.word	0x40023800

0800bbe8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bbe8:	6903      	ldr	r3, [r0, #16]
 800bbea:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bbec:	bf14      	ite	ne
 800bbee:	2001      	movne	r0, #1
 800bbf0:	2000      	moveq	r0, #0
 800bbf2:	4770      	bx	lr

0800bbf4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bbf4:	b10a      	cbz	r2, 800bbfa <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bbf6:	6181      	str	r1, [r0, #24]
  }
}
 800bbf8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bbfa:	0409      	lsls	r1, r1, #16
 800bbfc:	e7fb      	b.n	800bbf6 <HAL_GPIO_WritePin+0x2>

0800bbfe <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bbfe:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bc00:	ea01 0203 	and.w	r2, r1, r3
 800bc04:	ea21 0103 	bic.w	r1, r1, r3
 800bc08:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bc0c:	6181      	str	r1, [r0, #24]
}
 800bc0e:	4770      	bx	lr

0800bc10 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bc10:	6801      	ldr	r1, [r0, #0]
 800bc12:	694b      	ldr	r3, [r1, #20]
 800bc14:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 800bc18:	f04f 0200 	mov.w	r2, #0
 800bc1c:	d010      	beq.n	800bc40 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bc1e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800bc22:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800bc24:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bc26:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bc28:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bc2c:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bc30:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800bc32:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bc36:	f043 0304 	orr.w	r3, r3, #4
 800bc3a:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800bc3c:	2001      	movs	r0, #1
 800bc3e:	4770      	bx	lr
  }
  return HAL_OK;
 800bc40:	4618      	mov	r0, r3
}
 800bc42:	4770      	bx	lr

0800bc44 <I2C_WaitOnFlagUntilTimeout>:
{
 800bc44:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800bc48:	4606      	mov	r6, r0
 800bc4a:	460f      	mov	r7, r1
 800bc4c:	4691      	mov	r9, r2
 800bc4e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bc50:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800bc54:	6833      	ldr	r3, [r6, #0]
 800bc56:	f1ba 0f01 	cmp.w	sl, #1
 800bc5a:	bf0c      	ite	eq
 800bc5c:	695c      	ldreq	r4, [r3, #20]
 800bc5e:	699c      	ldrne	r4, [r3, #24]
 800bc60:	ea27 0404 	bic.w	r4, r7, r4
 800bc64:	b2a4      	uxth	r4, r4
 800bc66:	fab4 f484 	clz	r4, r4
 800bc6a:	0964      	lsrs	r4, r4, #5
 800bc6c:	45a1      	cmp	r9, r4
 800bc6e:	d001      	beq.n	800bc74 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800bc70:	2000      	movs	r0, #0
 800bc72:	e025      	b.n	800bcc0 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 800bc74:	1c6a      	adds	r2, r5, #1
 800bc76:	d0ee      	beq.n	800bc56 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bc78:	f7ff fb28 	bl	800b2cc <HAL_GetTick>
 800bc7c:	9b08      	ldr	r3, [sp, #32]
 800bc7e:	1ac0      	subs	r0, r0, r3
 800bc80:	42a8      	cmp	r0, r5
 800bc82:	d801      	bhi.n	800bc88 <I2C_WaitOnFlagUntilTimeout+0x44>
 800bc84:	2d00      	cmp	r5, #0
 800bc86:	d1e5      	bne.n	800bc54 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800bc88:	6833      	ldr	r3, [r6, #0]
 800bc8a:	f1ba 0f01 	cmp.w	sl, #1
 800bc8e:	bf0c      	ite	eq
 800bc90:	695b      	ldreq	r3, [r3, #20]
 800bc92:	699b      	ldrne	r3, [r3, #24]
 800bc94:	ea27 0303 	bic.w	r3, r7, r3
 800bc98:	b29b      	uxth	r3, r3
 800bc9a:	fab3 f383 	clz	r3, r3
 800bc9e:	095b      	lsrs	r3, r3, #5
 800bca0:	4599      	cmp	r9, r3
 800bca2:	d1d7      	bne.n	800bc54 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800bca4:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800bca6:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800bca8:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800bcaa:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bcae:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bcb2:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800bcb4:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bcb8:	f042 0220 	orr.w	r2, r2, #32
 800bcbc:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800bcbe:	2001      	movs	r0, #1
}
 800bcc0:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800bcc4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800bcc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bcc8:	4604      	mov	r4, r0
 800bcca:	460f      	mov	r7, r1
 800bccc:	4616      	mov	r6, r2
 800bcce:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bcd0:	6825      	ldr	r5, [r4, #0]
 800bcd2:	6968      	ldr	r0, [r5, #20]
 800bcd4:	ea27 0000 	bic.w	r0, r7, r0
 800bcd8:	b280      	uxth	r0, r0
 800bcda:	b1c0      	cbz	r0, 800bd0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bcdc:	696b      	ldr	r3, [r5, #20]
 800bcde:	055a      	lsls	r2, r3, #21
 800bce0:	d517      	bpl.n	800bd12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bce2:	682b      	ldr	r3, [r5, #0]
 800bce4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800bce8:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bcea:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800bcee:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800bcf0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bcf2:	2300      	movs	r3, #0
 800bcf4:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bcf6:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bcfa:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bcfe:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800bd00:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bd04:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800bd06:	2300      	movs	r3, #0
 800bd08:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800bd0c:	2001      	movs	r0, #1
}
 800bd0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800bd12:	1c73      	adds	r3, r6, #1
 800bd14:	d0dd      	beq.n	800bcd2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bd16:	f7ff fad9 	bl	800b2cc <HAL_GetTick>
 800bd1a:	eba0 0008 	sub.w	r0, r0, r8
 800bd1e:	42b0      	cmp	r0, r6
 800bd20:	d801      	bhi.n	800bd26 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 800bd22:	2e00      	cmp	r6, #0
 800bd24:	d1d4      	bne.n	800bcd0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800bd26:	6823      	ldr	r3, [r4, #0]
 800bd28:	695a      	ldr	r2, [r3, #20]
 800bd2a:	ea27 0202 	bic.w	r2, r7, r2
 800bd2e:	b292      	uxth	r2, r2
 800bd30:	2a00      	cmp	r2, #0
 800bd32:	d0cd      	beq.n	800bcd0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800bd34:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800bd36:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800bd38:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800bd3a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bd3e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bd42:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800bd44:	4313      	orrs	r3, r2
 800bd46:	e7dd      	b.n	800bd04 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800bd48 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800bd48:	b570      	push	{r4, r5, r6, lr}
 800bd4a:	4604      	mov	r4, r0
 800bd4c:	460d      	mov	r5, r1
 800bd4e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bd50:	6823      	ldr	r3, [r4, #0]
 800bd52:	695b      	ldr	r3, [r3, #20]
 800bd54:	061b      	lsls	r3, r3, #24
 800bd56:	d501      	bpl.n	800bd5c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800bd58:	2000      	movs	r0, #0
 800bd5a:	e01e      	b.n	800bd9a <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800bd5c:	4620      	mov	r0, r4
 800bd5e:	f7ff ff57 	bl	800bc10 <I2C_IsAcknowledgeFailed>
 800bd62:	b9c8      	cbnz	r0, 800bd98 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800bd64:	1c6a      	adds	r2, r5, #1
 800bd66:	d0f3      	beq.n	800bd50 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bd68:	f7ff fab0 	bl	800b2cc <HAL_GetTick>
 800bd6c:	1b80      	subs	r0, r0, r6
 800bd6e:	42a8      	cmp	r0, r5
 800bd70:	d801      	bhi.n	800bd76 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800bd72:	2d00      	cmp	r5, #0
 800bd74:	d1ec      	bne.n	800bd50 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800bd76:	6823      	ldr	r3, [r4, #0]
 800bd78:	695b      	ldr	r3, [r3, #20]
 800bd7a:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 800bd7e:	d1e7      	bne.n	800bd50 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800bd80:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800bd82:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800bd84:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bd88:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bd8c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800bd8e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bd92:	f042 0220 	orr.w	r2, r2, #32
 800bd96:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800bd98:	2001      	movs	r0, #1
}
 800bd9a:	bd70      	pop	{r4, r5, r6, pc}

0800bd9c <I2C_RequestMemoryWrite>:
{
 800bd9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bda0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bda2:	6802      	ldr	r2, [r0, #0]
{
 800bda4:	b085      	sub	sp, #20
 800bda6:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800bdaa:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdac:	6813      	ldr	r3, [r2, #0]
 800bdae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800bdb2:	6013      	str	r3, [r2, #0]
{
 800bdb4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bdb6:	463b      	mov	r3, r7
 800bdb8:	f8cd 8000 	str.w	r8, [sp]
 800bdbc:	2200      	movs	r2, #0
 800bdbe:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800bdc2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bdc4:	f7ff ff3e 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800bdc8:	6823      	ldr	r3, [r4, #0]
 800bdca:	b138      	cbz	r0, 800bddc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bdcc:	681b      	ldr	r3, [r3, #0]
 800bdce:	05db      	lsls	r3, r3, #23
 800bdd0:	d502      	bpl.n	800bdd8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bdd2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800bdd6:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800bdd8:	2603      	movs	r6, #3
 800bdda:	e020      	b.n	800be1e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bddc:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800bde0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800bde2:	491a      	ldr	r1, [pc, #104]	@ (800be4c <I2C_RequestMemoryWrite+0xb0>)
 800bde4:	4643      	mov	r3, r8
 800bde6:	463a      	mov	r2, r7
 800bde8:	4620      	mov	r0, r4
 800bdea:	f7ff ff6b 	bl	800bcc4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800bdee:	b9a8      	cbnz	r0, 800be1c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bdf0:	6823      	ldr	r3, [r4, #0]
 800bdf2:	9003      	str	r0, [sp, #12]
 800bdf4:	695a      	ldr	r2, [r3, #20]
 800bdf6:	9203      	str	r2, [sp, #12]
 800bdf8:	699b      	ldr	r3, [r3, #24]
 800bdfa:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bdfc:	4642      	mov	r2, r8
 800bdfe:	4639      	mov	r1, r7
 800be00:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800be02:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800be04:	f7ff ffa0 	bl	800bd48 <I2C_WaitOnTXEFlagUntilTimeout>
 800be08:	4606      	mov	r6, r0
 800be0a:	b160      	cbz	r0, 800be26 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be0c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800be0e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800be10:	bf01      	itttt	eq
 800be12:	6822      	ldreq	r2, [r4, #0]
 800be14:	6813      	ldreq	r3, [r2, #0]
 800be16:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800be1a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800be1c:	2601      	movs	r6, #1
}
 800be1e:	4630      	mov	r0, r6
 800be20:	b005      	add	sp, #20
 800be22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800be26:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800be2a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800be2c:	d102      	bne.n	800be34 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800be2e:	b2ed      	uxtb	r5, r5
 800be30:	611d      	str	r5, [r3, #16]
 800be32:	e7f4      	b.n	800be1e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800be34:	0a2a      	lsrs	r2, r5, #8
 800be36:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800be38:	4639      	mov	r1, r7
 800be3a:	4642      	mov	r2, r8
 800be3c:	4620      	mov	r0, r4
 800be3e:	f7ff ff83 	bl	800bd48 <I2C_WaitOnTXEFlagUntilTimeout>
 800be42:	2800      	cmp	r0, #0
 800be44:	d1e2      	bne.n	800be0c <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800be46:	6823      	ldr	r3, [r4, #0]
 800be48:	e7f1      	b.n	800be2e <I2C_RequestMemoryWrite+0x92>
 800be4a:	bf00      	nop
 800be4c:	00010002 	.word	0x00010002

0800be50 <I2C_RequestMemoryRead>:
{
 800be50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800be54:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800be56:	6803      	ldr	r3, [r0, #0]
{
 800be58:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800be5a:	681a      	ldr	r2, [r3, #0]
 800be5c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800be60:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800be62:	681a      	ldr	r2, [r3, #0]
{
 800be64:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800be68:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800be6c:	601a      	str	r2, [r3, #0]
{
 800be6e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800be70:	463b      	mov	r3, r7
 800be72:	f8cd 8000 	str.w	r8, [sp]
 800be76:	2200      	movs	r2, #0
 800be78:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800be7c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800be7e:	f7ff fee1 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800be82:	6823      	ldr	r3, [r4, #0]
 800be84:	b138      	cbz	r0, 800be96 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be86:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be88:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800be8a:	bf44      	itt	mi
 800be8c:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 800be90:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800be92:	2003      	movs	r0, #3
 800be94:	e021      	b.n	800beda <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800be96:	fa5f f986 	uxtb.w	r9, r6
 800be9a:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800be9e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800bea0:	492b      	ldr	r1, [pc, #172]	@ (800bf50 <I2C_RequestMemoryRead+0x100>)
 800bea2:	4643      	mov	r3, r8
 800bea4:	463a      	mov	r2, r7
 800bea6:	4620      	mov	r0, r4
 800bea8:	f7ff ff0c 	bl	800bcc4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800beac:	b9a0      	cbnz	r0, 800bed8 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800beae:	6823      	ldr	r3, [r4, #0]
 800beb0:	9003      	str	r0, [sp, #12]
 800beb2:	695a      	ldr	r2, [r3, #20]
 800beb4:	9203      	str	r2, [sp, #12]
 800beb6:	699b      	ldr	r3, [r3, #24]
 800beb8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800beba:	4642      	mov	r2, r8
 800bebc:	4639      	mov	r1, r7
 800bebe:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bec0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bec2:	f7ff ff41 	bl	800bd48 <I2C_WaitOnTXEFlagUntilTimeout>
 800bec6:	b158      	cbz	r0, 800bee0 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bec8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800beca:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800becc:	bf01      	itttt	eq
 800bece:	6822      	ldreq	r2, [r4, #0]
 800bed0:	6813      	ldreq	r3, [r2, #0]
 800bed2:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800bed6:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800bed8:	2001      	movs	r0, #1
}
 800beda:	b004      	add	sp, #16
 800bedc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bee0:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bee4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bee6:	d11a      	bne.n	800bf1e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bee8:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800beea:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800beec:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800beee:	4639      	mov	r1, r7
 800bef0:	4620      	mov	r0, r4
 800bef2:	f7ff ff29 	bl	800bd48 <I2C_WaitOnTXEFlagUntilTimeout>
 800bef6:	4602      	mov	r2, r0
 800bef8:	2800      	cmp	r0, #0
 800befa:	d1e5      	bne.n	800bec8 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800befc:	6821      	ldr	r1, [r4, #0]
 800befe:	680b      	ldr	r3, [r1, #0]
 800bf00:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800bf04:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800bf06:	4620      	mov	r0, r4
 800bf08:	f8cd 8000 	str.w	r8, [sp]
 800bf0c:	463b      	mov	r3, r7
 800bf0e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800bf12:	f7ff fe97 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800bf16:	6822      	ldr	r2, [r4, #0]
 800bf18:	b160      	cbz	r0, 800bf34 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bf1a:	6813      	ldr	r3, [r2, #0]
 800bf1c:	e7b4      	b.n	800be88 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800bf1e:	0a2a      	lsrs	r2, r5, #8
 800bf20:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800bf22:	4639      	mov	r1, r7
 800bf24:	4642      	mov	r2, r8
 800bf26:	4620      	mov	r0, r4
 800bf28:	f7ff ff0e 	bl	800bd48 <I2C_WaitOnTXEFlagUntilTimeout>
 800bf2c:	2800      	cmp	r0, #0
 800bf2e:	d1cb      	bne.n	800bec8 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bf30:	6823      	ldr	r3, [r4, #0]
 800bf32:	e7d9      	b.n	800bee8 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800bf34:	f049 0301 	orr.w	r3, r9, #1
 800bf38:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800bf3a:	4905      	ldr	r1, [pc, #20]	@ (800bf50 <I2C_RequestMemoryRead+0x100>)
 800bf3c:	4643      	mov	r3, r8
 800bf3e:	463a      	mov	r2, r7
 800bf40:	4620      	mov	r0, r4
 800bf42:	f7ff febf 	bl	800bcc4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800bf46:	3800      	subs	r0, #0
 800bf48:	bf18      	it	ne
 800bf4a:	2001      	movne	r0, #1
 800bf4c:	e7c5      	b.n	800beda <I2C_RequestMemoryRead+0x8a>
 800bf4e:	bf00      	nop
 800bf50:	00010002 	.word	0x00010002

0800bf54 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800bf54:	b570      	push	{r4, r5, r6, lr}
 800bf56:	4604      	mov	r4, r0
 800bf58:	460d      	mov	r5, r1
 800bf5a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800bf5c:	6823      	ldr	r3, [r4, #0]
 800bf5e:	695b      	ldr	r3, [r3, #20]
 800bf60:	075b      	lsls	r3, r3, #29
 800bf62:	d501      	bpl.n	800bf68 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800bf64:	2000      	movs	r0, #0
 800bf66:	e01e      	b.n	800bfa6 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800bf68:	4620      	mov	r0, r4
 800bf6a:	f7ff fe51 	bl	800bc10 <I2C_IsAcknowledgeFailed>
 800bf6e:	b9c8      	cbnz	r0, 800bfa4 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800bf70:	1c6a      	adds	r2, r5, #1
 800bf72:	d0f3      	beq.n	800bf5c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf74:	f7ff f9aa 	bl	800b2cc <HAL_GetTick>
 800bf78:	1b80      	subs	r0, r0, r6
 800bf7a:	42a8      	cmp	r0, r5
 800bf7c:	d801      	bhi.n	800bf82 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800bf7e:	2d00      	cmp	r5, #0
 800bf80:	d1ec      	bne.n	800bf5c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800bf82:	6823      	ldr	r3, [r4, #0]
 800bf84:	695b      	ldr	r3, [r3, #20]
 800bf86:	f013 0304 	ands.w	r3, r3, #4
 800bf8a:	d1e7      	bne.n	800bf5c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800bf8c:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800bf8e:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800bf90:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf94:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf98:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800bf9a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf9e:	f042 0220 	orr.w	r2, r2, #32
 800bfa2:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800bfa4:	2001      	movs	r0, #1
}
 800bfa6:	bd70      	pop	{r4, r5, r6, pc}

0800bfa8 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800bfa8:	b570      	push	{r4, r5, r6, lr}
 800bfaa:	4604      	mov	r4, r0
 800bfac:	460d      	mov	r5, r1
 800bfae:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800bfb0:	6821      	ldr	r1, [r4, #0]
 800bfb2:	694b      	ldr	r3, [r1, #20]
 800bfb4:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800bfb8:	d001      	beq.n	800bfbe <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800bfba:	2000      	movs	r0, #0
 800bfbc:	e011      	b.n	800bfe2 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800bfbe:	694a      	ldr	r2, [r1, #20]
 800bfc0:	06d2      	lsls	r2, r2, #27
 800bfc2:	d50f      	bpl.n	800bfe4 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800bfc4:	f06f 0210 	mvn.w	r2, #16
 800bfc8:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800bfca:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bfcc:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bfce:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bfd2:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800bfd6:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bfd8:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800bfda:	2300      	movs	r3, #0
 800bfdc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800bfe0:	2001      	movs	r0, #1
}
 800bfe2:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bfe4:	f7ff f972 	bl	800b2cc <HAL_GetTick>
 800bfe8:	1b80      	subs	r0, r0, r6
 800bfea:	42a8      	cmp	r0, r5
 800bfec:	d801      	bhi.n	800bff2 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 800bfee:	2d00      	cmp	r5, #0
 800bff0:	d1de      	bne.n	800bfb0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800bff2:	6823      	ldr	r3, [r4, #0]
 800bff4:	695b      	ldr	r3, [r3, #20]
 800bff6:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800bffa:	d1d9      	bne.n	800bfb0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 800bffc:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bffe:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c000:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c004:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c008:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c00a:	4313      	orrs	r3, r2
 800c00c:	e7e4      	b.n	800bfd8 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

0800c010 <HAL_I2C_Init>:
{
 800c010:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800c012:	4604      	mov	r4, r0
 800c014:	b908      	cbnz	r0, 800c01a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800c016:	2001      	movs	r0, #1
}
 800c018:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c01a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800c01e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c022:	b91b      	cbnz	r3, 800c02c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800c024:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 800c028:	f7f6 fc8a 	bl	8002940 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c02c:	2324      	movs	r3, #36	@ 0x24
 800c02e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c032:	6823      	ldr	r3, [r4, #0]
 800c034:	681a      	ldr	r2, [r3, #0]
 800c036:	f022 0201 	bic.w	r2, r2, #1
 800c03a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c03c:	681a      	ldr	r2, [r3, #0]
 800c03e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c042:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c044:	681a      	ldr	r2, [r3, #0]
 800c046:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800c04a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c04c:	f000 fea8 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c050:	4b3f      	ldr	r3, [pc, #252]	@ (800c150 <HAL_I2C_Init+0x140>)
 800c052:	6865      	ldr	r5, [r4, #4]
 800c054:	429d      	cmp	r5, r3
 800c056:	bf94      	ite	ls
 800c058:	4b3e      	ldrls	r3, [pc, #248]	@ (800c154 <HAL_I2C_Init+0x144>)
 800c05a:	4b3f      	ldrhi	r3, [pc, #252]	@ (800c158 <HAL_I2C_Init+0x148>)
 800c05c:	4298      	cmp	r0, r3
 800c05e:	bf8c      	ite	hi
 800c060:	2300      	movhi	r3, #0
 800c062:	2301      	movls	r3, #1
 800c064:	2b00      	cmp	r3, #0
 800c066:	d1d6      	bne.n	800c016 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c068:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c06a:	4e39      	ldr	r6, [pc, #228]	@ (800c150 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c06c:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c06e:	4b3b      	ldr	r3, [pc, #236]	@ (800c15c <HAL_I2C_Init+0x14c>)
 800c070:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c074:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800c078:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c07a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c07c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c07e:	bf88      	it	hi
 800c080:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 800c084:	6a11      	ldr	r1, [r2, #32]
 800c086:	bf88      	it	hi
 800c088:	4373      	mulhi	r3, r6
 800c08a:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800c08e:	bf84      	itt	hi
 800c090:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 800c094:	fbb3 f3f6 	udivhi	r3, r3, r6
 800c098:	3301      	adds	r3, #1
 800c09a:	430b      	orrs	r3, r1
 800c09c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c09e:	69d1      	ldr	r1, [r2, #28]
 800c0a0:	1e43      	subs	r3, r0, #1
 800c0a2:	482b      	ldr	r0, [pc, #172]	@ (800c150 <HAL_I2C_Init+0x140>)
 800c0a4:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800c0a8:	4285      	cmp	r5, r0
 800c0aa:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800c0ae:	d832      	bhi.n	800c116 <HAL_I2C_Init+0x106>
 800c0b0:	006d      	lsls	r5, r5, #1
 800c0b2:	f640 70fc 	movw	r0, #4092	@ 0xffc
 800c0b6:	fbb3 f3f5 	udiv	r3, r3, r5
 800c0ba:	3301      	adds	r3, #1
 800c0bc:	4203      	tst	r3, r0
 800c0be:	d042      	beq.n	800c146 <HAL_I2C_Init+0x136>
 800c0c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c0c4:	4319      	orrs	r1, r3
 800c0c6:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c0c8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c0cc:	6811      	ldr	r1, [r2, #0]
 800c0ce:	4303      	orrs	r3, r0
 800c0d0:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 800c0d4:	430b      	orrs	r3, r1
 800c0d6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c0d8:	6891      	ldr	r1, [r2, #8]
 800c0da:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c0de:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 800c0e2:	4303      	orrs	r3, r0
 800c0e4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800c0e8:	430b      	orrs	r3, r1
 800c0ea:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c0ec:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c0f0:	68d1      	ldr	r1, [r2, #12]
 800c0f2:	4303      	orrs	r3, r0
 800c0f4:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800c0f8:	430b      	orrs	r3, r1
 800c0fa:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c0fc:	6813      	ldr	r3, [r2, #0]
 800c0fe:	f043 0301 	orr.w	r3, r3, #1
 800c102:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c104:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800c106:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c108:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c10a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c10e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c110:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800c114:	e780      	b.n	800c018 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c116:	68a0      	ldr	r0, [r4, #8]
 800c118:	b950      	cbnz	r0, 800c130 <HAL_I2C_Init+0x120>
 800c11a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c11e:	fbb3 f3f5 	udiv	r3, r3, r5
 800c122:	3301      	adds	r3, #1
 800c124:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c128:	b17b      	cbz	r3, 800c14a <HAL_I2C_Init+0x13a>
 800c12a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c12e:	e7c9      	b.n	800c0c4 <HAL_I2C_Init+0xb4>
 800c130:	2019      	movs	r0, #25
 800c132:	4368      	muls	r0, r5
 800c134:	fbb3 f3f0 	udiv	r3, r3, r0
 800c138:	3301      	adds	r3, #1
 800c13a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c13e:	b123      	cbz	r3, 800c14a <HAL_I2C_Init+0x13a>
 800c140:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800c144:	e7be      	b.n	800c0c4 <HAL_I2C_Init+0xb4>
 800c146:	2304      	movs	r3, #4
 800c148:	e7bc      	b.n	800c0c4 <HAL_I2C_Init+0xb4>
 800c14a:	2301      	movs	r3, #1
 800c14c:	e7ba      	b.n	800c0c4 <HAL_I2C_Init+0xb4>
 800c14e:	bf00      	nop
 800c150:	000186a0 	.word	0x000186a0
 800c154:	001e847f 	.word	0x001e847f
 800c158:	003d08ff 	.word	0x003d08ff
 800c15c:	000f4240 	.word	0x000f4240

0800c160 <HAL_I2C_Mem_Write>:
{
 800c160:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c164:	4604      	mov	r4, r0
 800c166:	4699      	mov	r9, r3
 800c168:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800c16a:	460f      	mov	r7, r1
 800c16c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c16e:	f7ff f8ad 	bl	800b2cc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c172:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800c176:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800c178:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c17a:	d003      	beq.n	800c184 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 800c17c:	2002      	movs	r0, #2
}
 800c17e:	b003      	add	sp, #12
 800c180:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800c184:	9000      	str	r0, [sp, #0]
 800c186:	493c      	ldr	r1, [pc, #240]	@ (800c278 <HAL_I2C_Mem_Write+0x118>)
 800c188:	2319      	movs	r3, #25
 800c18a:	2201      	movs	r2, #1
 800c18c:	4620      	mov	r0, r4
 800c18e:	f7ff fd59 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800c192:	2800      	cmp	r0, #0
 800c194:	d1f2      	bne.n	800c17c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800c196:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800c19a:	2b01      	cmp	r3, #1
 800c19c:	d0ee      	beq.n	800c17c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c19e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800c1a0:	2301      	movs	r3, #1
 800c1a2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c1a6:	6803      	ldr	r3, [r0, #0]
 800c1a8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800c1aa:	bf5e      	ittt	pl
 800c1ac:	6803      	ldrpl	r3, [r0, #0]
 800c1ae:	f043 0301 	orrpl.w	r3, r3, #1
 800c1b2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c1b4:	6803      	ldr	r3, [r0, #0]
 800c1b6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800c1ba:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c1bc:	2321      	movs	r3, #33	@ 0x21
 800c1be:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c1c2:	2340      	movs	r3, #64	@ 0x40
 800c1c4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c1c8:	2300      	movs	r3, #0
 800c1ca:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800c1cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c1ce:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800c1d0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800c1d4:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c1d6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800c1d8:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c1da:	4b28      	ldr	r3, [pc, #160]	@ (800c27c <HAL_I2C_Mem_Write+0x11c>)
 800c1dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c1de:	4642      	mov	r2, r8
 800c1e0:	e9cd 6500 	strd	r6, r5, [sp]
 800c1e4:	464b      	mov	r3, r9
 800c1e6:	4639      	mov	r1, r7
 800c1e8:	4620      	mov	r0, r4
 800c1ea:	f7ff fdd7 	bl	800bd9c <I2C_RequestMemoryWrite>
 800c1ee:	2800      	cmp	r0, #0
 800c1f0:	d02a      	beq.n	800c248 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800c1f2:	2001      	movs	r0, #1
 800c1f4:	e7c3      	b.n	800c17e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c1f6:	f7ff fda7 	bl	800bd48 <I2C_WaitOnTXEFlagUntilTimeout>
 800c1fa:	b140      	cbz	r0, 800c20e <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c1fc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c1fe:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c200:	bf01      	itttt	eq
 800c202:	6822      	ldreq	r2, [r4, #0]
 800c204:	6813      	ldreq	r3, [r2, #0]
 800c206:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800c20a:	6013      	streq	r3, [r2, #0]
 800c20c:	e7f1      	b.n	800c1f2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c20e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c210:	6827      	ldr	r7, [r4, #0]
 800c212:	461a      	mov	r2, r3
 800c214:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c218:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800c21a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800c21c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800c21e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 800c220:	3a01      	subs	r2, #1
 800c222:	b292      	uxth	r2, r2
 800c224:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c226:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800c228:	1e48      	subs	r0, r1, #1
 800c22a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c22c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800c22e:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c230:	d50a      	bpl.n	800c248 <HAL_I2C_Mem_Write+0xe8>
 800c232:	b148      	cbz	r0, 800c248 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c234:	785a      	ldrb	r2, [r3, #1]
 800c236:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800c238:	3302      	adds	r3, #2
 800c23a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800c23c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800c23e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800c240:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800c242:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800c244:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800c246:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800c248:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c24a:	462a      	mov	r2, r5
 800c24c:	4631      	mov	r1, r6
 800c24e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800c250:	2b00      	cmp	r3, #0
 800c252:	d1d0      	bne.n	800c1f6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c254:	f7ff fe7e 	bl	800bf54 <I2C_WaitOnBTFFlagUntilTimeout>
 800c258:	2800      	cmp	r0, #0
 800c25a:	d1cf      	bne.n	800c1fc <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c25c:	6822      	ldr	r2, [r4, #0]
 800c25e:	6813      	ldr	r3, [r2, #0]
 800c260:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800c264:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c266:	2320      	movs	r3, #32
 800c268:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800c26c:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c270:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 800c274:	e783      	b.n	800c17e <HAL_I2C_Mem_Write+0x1e>
 800c276:	bf00      	nop
 800c278:	00100002 	.word	0x00100002
 800c27c:	ffff0000 	.word	0xffff0000

0800c280 <HAL_I2C_Mem_Read>:
{
 800c280:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c284:	4604      	mov	r4, r0
 800c286:	b087      	sub	sp, #28
 800c288:	4699      	mov	r9, r3
 800c28a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800c28c:	460d      	mov	r5, r1
 800c28e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c290:	f7ff f81c 	bl	800b2cc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c294:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800c298:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800c29a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c29c:	d004      	beq.n	800c2a8 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800c29e:	2502      	movs	r5, #2
}
 800c2a0:	4628      	mov	r0, r5
 800c2a2:	b007      	add	sp, #28
 800c2a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800c2a8:	9000      	str	r0, [sp, #0]
 800c2aa:	497a      	ldr	r1, [pc, #488]	@ (800c494 <HAL_I2C_Mem_Read+0x214>)
 800c2ac:	2319      	movs	r3, #25
 800c2ae:	2201      	movs	r2, #1
 800c2b0:	4620      	mov	r0, r4
 800c2b2:	f7ff fcc7 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800c2b6:	2800      	cmp	r0, #0
 800c2b8:	d1f1      	bne.n	800c29e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800c2ba:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800c2be:	2b01      	cmp	r3, #1
 800c2c0:	d0ed      	beq.n	800c29e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c2c2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800c2c4:	2301      	movs	r3, #1
 800c2c6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c2ca:	6803      	ldr	r3, [r0, #0]
 800c2cc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800c2ce:	bf5e      	ittt	pl
 800c2d0:	6803      	ldrpl	r3, [r0, #0]
 800c2d2:	f043 0301 	orrpl.w	r3, r3, #1
 800c2d6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c2d8:	6803      	ldr	r3, [r0, #0]
 800c2da:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800c2de:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c2e0:	2322      	movs	r3, #34	@ 0x22
 800c2e2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c2e6:	2340      	movs	r3, #64	@ 0x40
 800c2e8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c2ec:	2300      	movs	r3, #0
 800c2ee:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800c2f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c2f2:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800c2f4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800c2f8:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c2fa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800c2fc:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c2fe:	4b66      	ldr	r3, [pc, #408]	@ (800c498 <HAL_I2C_Mem_Read+0x218>)
 800c300:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c302:	4629      	mov	r1, r5
 800c304:	e9cd 7600 	strd	r7, r6, [sp]
 800c308:	464b      	mov	r3, r9
 800c30a:	4642      	mov	r2, r8
 800c30c:	4620      	mov	r0, r4
 800c30e:	f7ff fd9f 	bl	800be50 <I2C_RequestMemoryRead>
 800c312:	4605      	mov	r5, r0
 800c314:	b108      	cbz	r0, 800c31a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800c316:	2501      	movs	r5, #1
 800c318:	e7c2      	b.n	800c2a0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800c31a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c31c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800c31e:	b9b2      	cbnz	r2, 800c34e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c320:	9002      	str	r0, [sp, #8]
 800c322:	695a      	ldr	r2, [r3, #20]
 800c324:	9202      	str	r2, [sp, #8]
 800c326:	699a      	ldr	r2, [r3, #24]
 800c328:	9202      	str	r2, [sp, #8]
 800c32a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c32c:	681a      	ldr	r2, [r3, #0]
 800c32e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800c332:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c334:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800c49c <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 800c338:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800c33a:	2b00      	cmp	r3, #0
 800c33c:	d12c      	bne.n	800c398 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800c33e:	2220      	movs	r2, #32
 800c340:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800c344:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c348:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800c34c:	e7a8      	b.n	800c2a0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800c34e:	2a01      	cmp	r2, #1
 800c350:	d10a      	bne.n	800c368 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c352:	681a      	ldr	r2, [r3, #0]
 800c354:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800c358:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c35a:	9003      	str	r0, [sp, #12]
 800c35c:	695a      	ldr	r2, [r3, #20]
 800c35e:	9203      	str	r2, [sp, #12]
 800c360:	699a      	ldr	r2, [r3, #24]
 800c362:	9203      	str	r2, [sp, #12]
 800c364:	9a03      	ldr	r2, [sp, #12]
 800c366:	e7e1      	b.n	800c32c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800c368:	2a02      	cmp	r2, #2
 800c36a:	d10e      	bne.n	800c38a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c36c:	681a      	ldr	r2, [r3, #0]
 800c36e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800c372:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c374:	681a      	ldr	r2, [r3, #0]
 800c376:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800c37a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c37c:	9004      	str	r0, [sp, #16]
 800c37e:	695a      	ldr	r2, [r3, #20]
 800c380:	9204      	str	r2, [sp, #16]
 800c382:	699b      	ldr	r3, [r3, #24]
 800c384:	9304      	str	r3, [sp, #16]
 800c386:	9b04      	ldr	r3, [sp, #16]
 800c388:	e7d4      	b.n	800c334 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c38a:	9005      	str	r0, [sp, #20]
 800c38c:	695a      	ldr	r2, [r3, #20]
 800c38e:	9205      	str	r2, [sp, #20]
 800c390:	699b      	ldr	r3, [r3, #24]
 800c392:	9305      	str	r3, [sp, #20]
 800c394:	9b05      	ldr	r3, [sp, #20]
 800c396:	e7cd      	b.n	800c334 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800c398:	2b03      	cmp	r3, #3
 800c39a:	d856      	bhi.n	800c44a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800c39c:	2b01      	cmp	r3, #1
 800c39e:	d115      	bne.n	800c3cc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c3a0:	4632      	mov	r2, r6
 800c3a2:	4639      	mov	r1, r7
 800c3a4:	4620      	mov	r0, r4
 800c3a6:	f7ff fdff 	bl	800bfa8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800c3aa:	2800      	cmp	r0, #0
 800c3ac:	d1b3      	bne.n	800c316 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c3ae:	6823      	ldr	r3, [r4, #0]
 800c3b0:	691a      	ldr	r2, [r3, #16]
 800c3b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c3b4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c3b6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c3b8:	3301      	adds	r3, #1
 800c3ba:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800c3bc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800c3be:	3b01      	subs	r3, #1
 800c3c0:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800c3c2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800c3c4:	3b01      	subs	r3, #1
 800c3c6:	b29b      	uxth	r3, r3
 800c3c8:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800c3ca:	e7b5      	b.n	800c338 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800c3cc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c3ce:	9600      	str	r6, [sp, #0]
 800c3d0:	463b      	mov	r3, r7
 800c3d2:	f04f 0200 	mov.w	r2, #0
 800c3d6:	4641      	mov	r1, r8
 800c3d8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800c3da:	d119      	bne.n	800c410 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c3dc:	f7ff fc32 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800c3e0:	2800      	cmp	r0, #0
 800c3e2:	d198      	bne.n	800c316 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c3e4:	6823      	ldr	r3, [r4, #0]
 800c3e6:	681a      	ldr	r2, [r3, #0]
 800c3e8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800c3ec:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c3ee:	691a      	ldr	r2, [r3, #16]
 800c3f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c3f2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c3f4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800c3f6:	1c53      	adds	r3, r2, #1
 800c3f8:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800c3fa:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800c3fc:	3b01      	subs	r3, #1
 800c3fe:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800c400:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800c402:	3b01      	subs	r3, #1
 800c404:	b29b      	uxth	r3, r3
 800c406:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c408:	6823      	ldr	r3, [r4, #0]
 800c40a:	691b      	ldr	r3, [r3, #16]
 800c40c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c40e:	e7d2      	b.n	800c3b6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c410:	f7ff fc18 	bl	800bc44 <I2C_WaitOnFlagUntilTimeout>
 800c414:	4602      	mov	r2, r0
 800c416:	2800      	cmp	r0, #0
 800c418:	f47f af7d 	bne.w	800c316 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c41c:	6823      	ldr	r3, [r4, #0]
 800c41e:	6819      	ldr	r1, [r3, #0]
 800c420:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800c424:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c426:	6919      	ldr	r1, [r3, #16]
 800c428:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c42a:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 800c42c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c42e:	3301      	adds	r3, #1
 800c430:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800c432:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800c434:	3b01      	subs	r3, #1
 800c436:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800c438:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800c43a:	3b01      	subs	r3, #1
 800c43c:	b29b      	uxth	r3, r3
 800c43e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800c440:	4641      	mov	r1, r8
 800c442:	9600      	str	r6, [sp, #0]
 800c444:	463b      	mov	r3, r7
 800c446:	4620      	mov	r0, r4
 800c448:	e7c8      	b.n	800c3dc <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800c44a:	4632      	mov	r2, r6
 800c44c:	4639      	mov	r1, r7
 800c44e:	4620      	mov	r0, r4
 800c450:	f7ff fdaa 	bl	800bfa8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800c454:	2800      	cmp	r0, #0
 800c456:	f47f af5e 	bne.w	800c316 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c45a:	6823      	ldr	r3, [r4, #0]
 800c45c:	691a      	ldr	r2, [r3, #16]
 800c45e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c460:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800c462:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800c464:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800c466:	3a01      	subs	r2, #1
 800c468:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c46a:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 800c46c:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c46e:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 800c470:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800c472:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c474:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800c476:	3b01      	subs	r3, #1
 800c478:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c47a:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 800c47c:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c47e:	f57f af5b 	bpl.w	800c338 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 800c482:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c484:	bf02      	ittt	eq
 800c486:	6813      	ldreq	r3, [r2, #0]
 800c488:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 800c48c:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c48e:	6913      	ldr	r3, [r2, #16]
 800c490:	704b      	strb	r3, [r1, #1]
 800c492:	e790      	b.n	800c3b6 <HAL_I2C_Mem_Read+0x136>
 800c494:	00100002 	.word	0x00100002
 800c498:	ffff0000 	.word	0xffff0000
 800c49c:	00010004 	.word	0x00010004

0800c4a0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800c4a0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800c4a2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800c4a6:	2b20      	cmp	r3, #32
 800c4a8:	b2dc      	uxtb	r4, r3
 800c4aa:	d116      	bne.n	800c4da <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800c4ac:	2324      	movs	r3, #36	@ 0x24
 800c4ae:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800c4b2:	6803      	ldr	r3, [r0, #0]
 800c4b4:	681a      	ldr	r2, [r3, #0]
 800c4b6:	f022 0201 	bic.w	r2, r2, #1
 800c4ba:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800c4bc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c4be:	f022 0210 	bic.w	r2, r2, #16
 800c4c2:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800c4c4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c4c6:	4311      	orrs	r1, r2
 800c4c8:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800c4ca:	681a      	ldr	r2, [r3, #0]
 800c4cc:	f042 0201 	orr.w	r2, r2, #1
 800c4d0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800c4d2:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800c4d6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800c4d8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800c4da:	2002      	movs	r0, #2
 800c4dc:	e7fc      	b.n	800c4d8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800c4de <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800c4de:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800c4e0:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800c4e4:	2b20      	cmp	r3, #32
 800c4e6:	b2dc      	uxtb	r4, r3
 800c4e8:	d116      	bne.n	800c518 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800c4ea:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800c4ec:	2324      	movs	r3, #36	@ 0x24
 800c4ee:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800c4f2:	6813      	ldr	r3, [r2, #0]
 800c4f4:	f023 0301 	bic.w	r3, r3, #1
 800c4f8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800c4fa:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800c4fc:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 800c500:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800c502:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800c504:	b29b      	uxth	r3, r3
 800c506:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800c508:	6813      	ldr	r3, [r2, #0]
 800c50a:	f043 0301 	orr.w	r3, r3, #1
 800c50e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800c510:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800c514:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800c516:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800c518:	2002      	movs	r0, #2
 800c51a:	e7fc      	b.n	800c516 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800c51c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c51c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c51e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c522:	01d2      	lsls	r2, r2, #7
 800c524:	3284      	adds	r2, #132	@ 0x84
 800c526:	1883      	adds	r3, r0, r2
{
 800c528:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c52c:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c52e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c530:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800c532:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800c536:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800c53a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c53c:	68c5      	ldr	r5, [r0, #12]
 800c53e:	f10c 0701 	add.w	r7, ip, #1
 800c542:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800c546:	f3c6 460b 	ubfx	r6, r6, #16, #12
 800c54a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800c54c:	443d      	add	r5, r7
 800c54e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800c552:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800c554:	68c6      	ldr	r6, [r0, #12]
 800c556:	68cd      	ldr	r5, [r1, #12]
 800c558:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800c55c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800c55e:	689d      	ldr	r5, [r3, #8]
 800c560:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800c564:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800c566:	68c7      	ldr	r7, [r0, #12]
 800c568:	688d      	ldr	r5, [r1, #8]
 800c56a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800c56e:	3501      	adds	r5, #1
 800c570:	443d      	add	r5, r7
 800c572:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800c576:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c578:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c57a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800c57c:	f025 0507 	bic.w	r5, r5, #7
 800c580:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c582:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800c586:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800c588:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c58c:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800c58e:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800c592:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800c596:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800c59a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800c59e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800c5a2:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800c5a6:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800c5a8:	695d      	ldr	r5, [r3, #20]
 800c5aa:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800c5ae:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800c5b0:	694d      	ldr	r5, [r1, #20]
 800c5b2:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800c5b4:	69dd      	ldr	r5, [r3, #28]
 800c5b6:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 800c5ba:	f025 0507 	bic.w	r5, r5, #7
 800c5be:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800c5c0:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800c5c4:	433d      	orrs	r5, r7
 800c5c6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c5c8:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c5ca:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800c5cc:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c5d0:	2e07      	cmp	r6, #7
 800c5d2:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800c5d4:	bf9c      	itt	ls
 800c5d6:	4d0e      	ldrls	r5, [pc, #56]	@ (800c610 <LTDC_SetConfig+0xf4>)
 800c5d8:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800c5da:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800c5dc:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 800c5e0:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800c5e2:	bf88      	it	hi
 800c5e4:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c5e6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c5e8:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c5ea:	eba4 040c 	sub.w	r4, r4, ip
 800c5ee:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c5f0:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800c5f2:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800c5f4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800c5f8:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800c5fa:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800c5fc:	f36f 040a 	bfc	r4, #0, #11
 800c600:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800c602:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800c604:	5883      	ldr	r3, [r0, r2]
 800c606:	f043 0301 	orr.w	r3, r3, #1
 800c60a:	5083      	str	r3, [r0, r2]
}
 800c60c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c610:	0802dd24 	.word	0x0802dd24

0800c614 <HAL_LTDC_Init>:
{
 800c614:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800c616:	4604      	mov	r4, r0
 800c618:	2800      	cmp	r0, #0
 800c61a:	d063      	beq.n	800c6e4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800c61c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800c620:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c624:	b91b      	cbnz	r3, 800c62e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800c626:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800c62a:	f7f6 f9e5 	bl	80029f8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c62e:	2302      	movs	r3, #2
 800c630:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800c634:	6823      	ldr	r3, [r4, #0]
 800c636:	699a      	ldr	r2, [r3, #24]
 800c638:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800c63c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c63e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800c642:	4302      	orrs	r2, r0
 800c644:	68e0      	ldr	r0, [r4, #12]
 800c646:	6999      	ldr	r1, [r3, #24]
 800c648:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800c64a:	6920      	ldr	r0, [r4, #16]
 800c64c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800c64e:	430a      	orrs	r2, r1
 800c650:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800c652:	689a      	ldr	r2, [r3, #8]
 800c654:	4924      	ldr	r1, [pc, #144]	@ (800c6e8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800c656:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800c658:	400a      	ands	r2, r1
 800c65a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800c65c:	689a      	ldr	r2, [r3, #8]
 800c65e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c662:	69a0      	ldr	r0, [r4, #24]
 800c664:	4302      	orrs	r2, r0
 800c666:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800c668:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800c66a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800c66c:	400a      	ands	r2, r1
 800c66e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800c670:	68da      	ldr	r2, [r3, #12]
 800c672:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c676:	6a20      	ldr	r0, [r4, #32]
 800c678:	4302      	orrs	r2, r0
 800c67a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800c67c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800c67e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800c680:	400a      	ands	r2, r1
 800c682:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800c684:	691a      	ldr	r2, [r3, #16]
 800c686:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800c68a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800c68c:	4302      	orrs	r2, r0
 800c68e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800c690:	695a      	ldr	r2, [r3, #20]
 800c692:	400a      	ands	r2, r1
 800c694:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800c696:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800c698:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800c69a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800c69e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800c6a0:	430a      	orrs	r2, r1
 800c6a2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800c6a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800c6a6:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800c6aa:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800c6ae:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 800c6b2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800c6b4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800c6b6:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800c6ba:	432a      	orrs	r2, r5
 800c6bc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800c6c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800c6c4:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800c6c6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c6c8:	f042 0206 	orr.w	r2, r2, #6
 800c6cc:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800c6ce:	699a      	ldr	r2, [r3, #24]
 800c6d0:	f042 0201 	orr.w	r2, r2, #1
 800c6d4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800c6d6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800c6d8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800c6da:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800c6de:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800c6e2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c6e4:	2001      	movs	r0, #1
 800c6e6:	e7fc      	b.n	800c6e2 <HAL_LTDC_Init+0xce>
 800c6e8:	f000f800 	.word	0xf000f800

0800c6ec <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800c6ec:	4770      	bx	lr

0800c6ee <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800c6ee:	4770      	bx	lr

0800c6f0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800c6f0:	6803      	ldr	r3, [r0, #0]
{
 800c6f2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800c6f4:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800c6f6:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800c6f8:	0772      	lsls	r2, r6, #29
{
 800c6fa:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800c6fc:	d514      	bpl.n	800c728 <HAL_LTDC_IRQHandler+0x38>
 800c6fe:	0769      	lsls	r1, r5, #29
 800c700:	d512      	bpl.n	800c728 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800c702:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c704:	f022 0204 	bic.w	r2, r2, #4
 800c708:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800c70a:	2204      	movs	r2, #4
 800c70c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800c70e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800c712:	f043 0301 	orr.w	r3, r3, #1
 800c716:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800c71a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c71c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800c720:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c724:	f7ff ffe2 	bl	800c6ec <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800c728:	07b2      	lsls	r2, r6, #30
 800c72a:	d516      	bpl.n	800c75a <HAL_LTDC_IRQHandler+0x6a>
 800c72c:	07ab      	lsls	r3, r5, #30
 800c72e:	d514      	bpl.n	800c75a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800c730:	6823      	ldr	r3, [r4, #0]
 800c732:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c734:	f022 0202 	bic.w	r2, r2, #2
 800c738:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800c73a:	2202      	movs	r2, #2
 800c73c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800c73e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800c742:	4313      	orrs	r3, r2
 800c744:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800c748:	2304      	movs	r3, #4
 800c74a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800c74e:	2300      	movs	r3, #0
 800c750:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800c754:	4620      	mov	r0, r4
 800c756:	f7ff ffc9 	bl	800c6ec <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800c75a:	07f0      	lsls	r0, r6, #31
 800c75c:	d510      	bpl.n	800c780 <HAL_LTDC_IRQHandler+0x90>
 800c75e:	07e9      	lsls	r1, r5, #31
 800c760:	d50e      	bpl.n	800c780 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c762:	6823      	ldr	r3, [r4, #0]
 800c764:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c766:	f022 0201 	bic.w	r2, r2, #1
 800c76a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800c76c:	2201      	movs	r2, #1
 800c76e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800c770:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800c772:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800c776:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800c77a:	4620      	mov	r0, r4
 800c77c:	f7f5 fbea 	bl	8001f54 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800c780:	0732      	lsls	r2, r6, #28
 800c782:	d511      	bpl.n	800c7a8 <HAL_LTDC_IRQHandler+0xb8>
 800c784:	072b      	lsls	r3, r5, #28
 800c786:	d50f      	bpl.n	800c7a8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800c788:	6823      	ldr	r3, [r4, #0]
 800c78a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c78c:	f022 0208 	bic.w	r2, r2, #8
 800c790:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800c792:	2208      	movs	r2, #8
 800c794:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800c796:	2301      	movs	r3, #1
 800c798:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800c79c:	2300      	movs	r3, #0
 800c79e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800c7a2:	4620      	mov	r0, r4
 800c7a4:	f7ff ffa3 	bl	800c6ee <HAL_LTDC_ReloadEventCallback>
}
 800c7a8:	bd70      	pop	{r4, r5, r6, pc}

0800c7aa <HAL_LTDC_ConfigLayer>:
{
 800c7aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800c7ae:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800c7b2:	2b01      	cmp	r3, #1
{
 800c7b4:	4606      	mov	r6, r0
 800c7b6:	460f      	mov	r7, r1
 800c7b8:	4694      	mov	ip, r2
 800c7ba:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800c7be:	d01f      	beq.n	800c800 <HAL_LTDC_ConfigLayer+0x56>
 800c7c0:	f04f 0801 	mov.w	r8, #1
 800c7c4:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c7c8:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800c7cc:	2434      	movs	r4, #52	@ 0x34
 800c7ce:	460d      	mov	r5, r1
 800c7d0:	fb04 6402 	mla	r4, r4, r2, r6
 800c7d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c7d6:	3438      	adds	r4, #56	@ 0x38
 800c7d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c7da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c7dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c7de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c7e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c7e2:	682b      	ldr	r3, [r5, #0]
 800c7e4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800c7e6:	4630      	mov	r0, r6
 800c7e8:	4662      	mov	r2, ip
 800c7ea:	4639      	mov	r1, r7
 800c7ec:	f7ff fe96 	bl	800c51c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c7f0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800c7f2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800c7f4:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800c7f8:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800c7fc:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800c800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c804 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800c804:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800c808:	2a01      	cmp	r2, #1
{
 800c80a:	4603      	mov	r3, r0
 800c80c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800c810:	d012      	beq.n	800c838 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c812:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800c814:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800c818:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800c81a:	f020 0001 	bic.w	r0, r0, #1
 800c81e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800c820:	4806      	ldr	r0, [pc, #24]	@ (800c83c <HAL_LTDC_ProgramLineEvent+0x38>)
 800c822:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800c824:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800c826:	f041 0101 	orr.w	r1, r1, #1
 800c82a:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800c82c:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800c82e:	2201      	movs	r2, #1
 800c830:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800c834:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800c838:	4770      	bx	lr
 800c83a:	bf00      	nop
 800c83c:	40016800 	.word	0x40016800

0800c840 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800c840:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800c842:	2300      	movs	r3, #0
 800c844:	9301      	str	r3, [sp, #4]
 800c846:	4b18      	ldr	r3, [pc, #96]	@ (800c8a8 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800c848:	4d18      	ldr	r5, [pc, #96]	@ (800c8ac <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800c84a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800c84c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800c850:	641a      	str	r2, [r3, #64]	@ 0x40
 800c852:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c854:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800c858:	9301      	str	r3, [sp, #4]
 800c85a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800c85c:	4b14      	ldr	r3, [pc, #80]	@ (800c8b0 <HAL_PWREx_EnableOverDrive+0x70>)
 800c85e:	2201      	movs	r2, #1
 800c860:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 800c862:	f7fe fd33 	bl	800b2cc <HAL_GetTick>
 800c866:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800c868:	686b      	ldr	r3, [r5, #4]
 800c86a:	03da      	lsls	r2, r3, #15
 800c86c:	d50b      	bpl.n	800c886 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800c86e:	4b10      	ldr	r3, [pc, #64]	@ (800c8b0 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800c870:	4d0e      	ldr	r5, [pc, #56]	@ (800c8ac <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800c872:	2201      	movs	r2, #1
 800c874:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 800c876:	f7fe fd29 	bl	800b2cc <HAL_GetTick>
 800c87a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800c87c:	686b      	ldr	r3, [r5, #4]
 800c87e:	039b      	lsls	r3, r3, #14
 800c880:	d50a      	bpl.n	800c898 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800c882:	2000      	movs	r0, #0
 800c884:	e006      	b.n	800c894 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800c886:	f7fe fd21 	bl	800b2cc <HAL_GetTick>
 800c88a:	1b00      	subs	r0, r0, r4
 800c88c:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800c890:	d9ea      	bls.n	800c868 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800c892:	2003      	movs	r0, #3
}
 800c894:	b003      	add	sp, #12
 800c896:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800c898:	f7fe fd18 	bl	800b2cc <HAL_GetTick>
 800c89c:	1b00      	subs	r0, r0, r4
 800c89e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800c8a2:	d9eb      	bls.n	800c87c <HAL_PWREx_EnableOverDrive+0x3c>
 800c8a4:	e7f5      	b.n	800c892 <HAL_PWREx_EnableOverDrive+0x52>
 800c8a6:	bf00      	nop
 800c8a8:	40023800 	.word	0x40023800
 800c8ac:	40007000 	.word	0x40007000
 800c8b0:	420e0000 	.word	0x420e0000

0800c8b4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800c8b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800c8b8:	4604      	mov	r4, r0
 800c8ba:	b340      	cbz	r0, 800c90e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c8bc:	6803      	ldr	r3, [r0, #0]
 800c8be:	07de      	lsls	r6, r3, #31
 800c8c0:	d410      	bmi.n	800c8e4 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c8c2:	6823      	ldr	r3, [r4, #0]
 800c8c4:	079d      	lsls	r5, r3, #30
 800c8c6:	d45b      	bmi.n	800c980 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c8c8:	6823      	ldr	r3, [r4, #0]
 800c8ca:	0719      	lsls	r1, r3, #28
 800c8cc:	f100 809d 	bmi.w	800ca0a <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c8d0:	6823      	ldr	r3, [r4, #0]
 800c8d2:	075a      	lsls	r2, r3, #29
 800c8d4:	f100 80bd 	bmi.w	800ca52 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c8d8:	69a3      	ldr	r3, [r4, #24]
 800c8da:	2b00      	cmp	r3, #0
 800c8dc:	f040 8124 	bne.w	800cb28 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c8e0:	2000      	movs	r0, #0
 800c8e2:	e02c      	b.n	800c93e <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800c8e4:	4b8d      	ldr	r3, [pc, #564]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800c8e6:	689a      	ldr	r2, [r3, #8]
 800c8e8:	f002 020c 	and.w	r2, r2, #12
 800c8ec:	2a04      	cmp	r2, #4
 800c8ee:	d007      	beq.n	800c900 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c8f0:	689a      	ldr	r2, [r3, #8]
 800c8f2:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800c8f6:	2a08      	cmp	r2, #8
 800c8f8:	d10b      	bne.n	800c912 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c8fa:	685b      	ldr	r3, [r3, #4]
 800c8fc:	0259      	lsls	r1, r3, #9
 800c8fe:	d508      	bpl.n	800c912 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c900:	4b86      	ldr	r3, [pc, #536]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800c902:	681b      	ldr	r3, [r3, #0]
 800c904:	039a      	lsls	r2, r3, #14
 800c906:	d5dc      	bpl.n	800c8c2 <HAL_RCC_OscConfig+0xe>
 800c908:	6863      	ldr	r3, [r4, #4]
 800c90a:	2b00      	cmp	r3, #0
 800c90c:	d1d9      	bne.n	800c8c2 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800c90e:	2001      	movs	r0, #1
 800c910:	e015      	b.n	800c93e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c912:	6863      	ldr	r3, [r4, #4]
 800c914:	4d81      	ldr	r5, [pc, #516]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800c916:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800c91a:	d113      	bne.n	800c944 <HAL_RCC_OscConfig+0x90>
 800c91c:	682b      	ldr	r3, [r5, #0]
 800c91e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800c922:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800c924:	f7fe fcd2 	bl	800b2cc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c928:	4e7c      	ldr	r6, [pc, #496]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800c92a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c92c:	6833      	ldr	r3, [r6, #0]
 800c92e:	039b      	lsls	r3, r3, #14
 800c930:	d4c7      	bmi.n	800c8c2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800c932:	f7fe fccb 	bl	800b2cc <HAL_GetTick>
 800c936:	1b40      	subs	r0, r0, r5
 800c938:	2864      	cmp	r0, #100	@ 0x64
 800c93a:	d9f7      	bls.n	800c92c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800c93c:	2003      	movs	r0, #3
}
 800c93e:	b002      	add	sp, #8
 800c940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c944:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800c948:	d104      	bne.n	800c954 <HAL_RCC_OscConfig+0xa0>
 800c94a:	682b      	ldr	r3, [r5, #0]
 800c94c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800c950:	602b      	str	r3, [r5, #0]
 800c952:	e7e3      	b.n	800c91c <HAL_RCC_OscConfig+0x68>
 800c954:	682a      	ldr	r2, [r5, #0]
 800c956:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800c95a:	602a      	str	r2, [r5, #0]
 800c95c:	682a      	ldr	r2, [r5, #0]
 800c95e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800c962:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c964:	2b00      	cmp	r3, #0
 800c966:	d1dd      	bne.n	800c924 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 800c968:	f7fe fcb0 	bl	800b2cc <HAL_GetTick>
 800c96c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c96e:	682b      	ldr	r3, [r5, #0]
 800c970:	039f      	lsls	r7, r3, #14
 800c972:	d5a6      	bpl.n	800c8c2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800c974:	f7fe fcaa 	bl	800b2cc <HAL_GetTick>
 800c978:	1b80      	subs	r0, r0, r6
 800c97a:	2864      	cmp	r0, #100	@ 0x64
 800c97c:	d9f7      	bls.n	800c96e <HAL_RCC_OscConfig+0xba>
 800c97e:	e7dd      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800c980:	4b66      	ldr	r3, [pc, #408]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800c982:	689a      	ldr	r2, [r3, #8]
 800c984:	f012 0f0c 	tst.w	r2, #12
 800c988:	d007      	beq.n	800c99a <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c98a:	689a      	ldr	r2, [r3, #8]
 800c98c:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800c990:	2a08      	cmp	r2, #8
 800c992:	d111      	bne.n	800c9b8 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c994:	685b      	ldr	r3, [r3, #4]
 800c996:	025d      	lsls	r5, r3, #9
 800c998:	d40e      	bmi.n	800c9b8 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c99a:	4a60      	ldr	r2, [pc, #384]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800c99c:	6813      	ldr	r3, [r2, #0]
 800c99e:	0799      	lsls	r1, r3, #30
 800c9a0:	d502      	bpl.n	800c9a8 <HAL_RCC_OscConfig+0xf4>
 800c9a2:	68e3      	ldr	r3, [r4, #12]
 800c9a4:	2b01      	cmp	r3, #1
 800c9a6:	d1b2      	bne.n	800c90e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c9a8:	6813      	ldr	r3, [r2, #0]
 800c9aa:	6921      	ldr	r1, [r4, #16]
 800c9ac:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800c9b0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c9b4:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c9b6:	e787      	b.n	800c8c8 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800c9b8:	68e2      	ldr	r2, [r4, #12]
 800c9ba:	4b59      	ldr	r3, [pc, #356]	@ (800cb20 <HAL_RCC_OscConfig+0x26c>)
 800c9bc:	b1b2      	cbz	r2, 800c9ec <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800c9be:	2201      	movs	r2, #1
 800c9c0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c9c2:	f7fe fc83 	bl	800b2cc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c9c6:	4d55      	ldr	r5, [pc, #340]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800c9c8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c9ca:	682b      	ldr	r3, [r5, #0]
 800c9cc:	079b      	lsls	r3, r3, #30
 800c9ce:	d507      	bpl.n	800c9e0 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c9d0:	682b      	ldr	r3, [r5, #0]
 800c9d2:	6922      	ldr	r2, [r4, #16]
 800c9d4:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800c9d8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c9dc:	602b      	str	r3, [r5, #0]
 800c9de:	e773      	b.n	800c8c8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800c9e0:	f7fe fc74 	bl	800b2cc <HAL_GetTick>
 800c9e4:	1b80      	subs	r0, r0, r6
 800c9e6:	2802      	cmp	r0, #2
 800c9e8:	d9ef      	bls.n	800c9ca <HAL_RCC_OscConfig+0x116>
 800c9ea:	e7a7      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800c9ec:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c9ee:	f7fe fc6d 	bl	800b2cc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c9f2:	4e4a      	ldr	r6, [pc, #296]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800c9f4:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c9f6:	6833      	ldr	r3, [r6, #0]
 800c9f8:	079f      	lsls	r7, r3, #30
 800c9fa:	f57f af65 	bpl.w	800c8c8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800c9fe:	f7fe fc65 	bl	800b2cc <HAL_GetTick>
 800ca02:	1b40      	subs	r0, r0, r5
 800ca04:	2802      	cmp	r0, #2
 800ca06:	d9f6      	bls.n	800c9f6 <HAL_RCC_OscConfig+0x142>
 800ca08:	e798      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800ca0a:	6962      	ldr	r2, [r4, #20]
 800ca0c:	4b44      	ldr	r3, [pc, #272]	@ (800cb20 <HAL_RCC_OscConfig+0x26c>)
 800ca0e:	b182      	cbz	r2, 800ca32 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800ca10:	2201      	movs	r2, #1
 800ca12:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800ca16:	f7fe fc59 	bl	800b2cc <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800ca1a:	4e40      	ldr	r6, [pc, #256]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800ca1c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800ca1e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800ca20:	079b      	lsls	r3, r3, #30
 800ca22:	f53f af55 	bmi.w	800c8d0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800ca26:	f7fe fc51 	bl	800b2cc <HAL_GetTick>
 800ca2a:	1b40      	subs	r0, r0, r5
 800ca2c:	2802      	cmp	r0, #2
 800ca2e:	d9f6      	bls.n	800ca1e <HAL_RCC_OscConfig+0x16a>
 800ca30:	e784      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800ca32:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800ca36:	f7fe fc49 	bl	800b2cc <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ca3a:	4e38      	ldr	r6, [pc, #224]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800ca3c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ca3e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800ca40:	079f      	lsls	r7, r3, #30
 800ca42:	f57f af45 	bpl.w	800c8d0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800ca46:	f7fe fc41 	bl	800b2cc <HAL_GetTick>
 800ca4a:	1b40      	subs	r0, r0, r5
 800ca4c:	2802      	cmp	r0, #2
 800ca4e:	d9f6      	bls.n	800ca3e <HAL_RCC_OscConfig+0x18a>
 800ca50:	e774      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800ca52:	4b32      	ldr	r3, [pc, #200]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800ca54:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800ca56:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800ca5a:	d128      	bne.n	800caae <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800ca5c:	9201      	str	r2, [sp, #4]
 800ca5e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800ca60:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800ca64:	641a      	str	r2, [r3, #64]	@ 0x40
 800ca66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ca68:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800ca6c:	9301      	str	r3, [sp, #4]
 800ca6e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800ca70:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ca72:	4d2c      	ldr	r5, [pc, #176]	@ (800cb24 <HAL_RCC_OscConfig+0x270>)
 800ca74:	682b      	ldr	r3, [r5, #0]
 800ca76:	05d8      	lsls	r0, r3, #23
 800ca78:	d51b      	bpl.n	800cab2 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ca7a:	68a3      	ldr	r3, [r4, #8]
 800ca7c:	4d27      	ldr	r5, [pc, #156]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800ca7e:	2b01      	cmp	r3, #1
 800ca80:	d127      	bne.n	800cad2 <HAL_RCC_OscConfig+0x21e>
 800ca82:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800ca84:	f043 0301 	orr.w	r3, r3, #1
 800ca88:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800ca8a:	f7fe fc1f 	bl	800b2cc <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ca8e:	4e23      	ldr	r6, [pc, #140]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800ca90:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800ca92:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ca96:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800ca98:	079a      	lsls	r2, r3, #30
 800ca9a:	d539      	bpl.n	800cb10 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 800ca9c:	2f00      	cmp	r7, #0
 800ca9e:	f43f af1b 	beq.w	800c8d8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800caa2:	4a1e      	ldr	r2, [pc, #120]	@ (800cb1c <HAL_RCC_OscConfig+0x268>)
 800caa4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800caa6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800caaa:	6413      	str	r3, [r2, #64]	@ 0x40
 800caac:	e714      	b.n	800c8d8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800caae:	2700      	movs	r7, #0
 800cab0:	e7df      	b.n	800ca72 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800cab2:	682b      	ldr	r3, [r5, #0]
 800cab4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800cab8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800caba:	f7fe fc07 	bl	800b2cc <HAL_GetTick>
 800cabe:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800cac0:	682b      	ldr	r3, [r5, #0]
 800cac2:	05d9      	lsls	r1, r3, #23
 800cac4:	d4d9      	bmi.n	800ca7a <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800cac6:	f7fe fc01 	bl	800b2cc <HAL_GetTick>
 800caca:	1b80      	subs	r0, r0, r6
 800cacc:	2802      	cmp	r0, #2
 800cace:	d9f7      	bls.n	800cac0 <HAL_RCC_OscConfig+0x20c>
 800cad0:	e734      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800cad2:	2b05      	cmp	r3, #5
 800cad4:	d104      	bne.n	800cae0 <HAL_RCC_OscConfig+0x22c>
 800cad6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800cad8:	f043 0304 	orr.w	r3, r3, #4
 800cadc:	672b      	str	r3, [r5, #112]	@ 0x70
 800cade:	e7d0      	b.n	800ca82 <HAL_RCC_OscConfig+0x1ce>
 800cae0:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800cae2:	f022 0201 	bic.w	r2, r2, #1
 800cae6:	672a      	str	r2, [r5, #112]	@ 0x70
 800cae8:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800caea:	f022 0204 	bic.w	r2, r2, #4
 800caee:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800caf0:	2b00      	cmp	r3, #0
 800caf2:	d1ca      	bne.n	800ca8a <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800caf4:	f7fe fbea 	bl	800b2cc <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800caf8:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800cafc:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800cafe:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800cb00:	079b      	lsls	r3, r3, #30
 800cb02:	d5cb      	bpl.n	800ca9c <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800cb04:	f7fe fbe2 	bl	800b2cc <HAL_GetTick>
 800cb08:	1b80      	subs	r0, r0, r6
 800cb0a:	4540      	cmp	r0, r8
 800cb0c:	d9f7      	bls.n	800cafe <HAL_RCC_OscConfig+0x24a>
 800cb0e:	e715      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800cb10:	f7fe fbdc 	bl	800b2cc <HAL_GetTick>
 800cb14:	1b40      	subs	r0, r0, r5
 800cb16:	4540      	cmp	r0, r8
 800cb18:	d9bd      	bls.n	800ca96 <HAL_RCC_OscConfig+0x1e2>
 800cb1a:	e70f      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
 800cb1c:	40023800 	.word	0x40023800
 800cb20:	42470000 	.word	0x42470000
 800cb24:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800cb28:	4d37      	ldr	r5, [pc, #220]	@ (800cc08 <HAL_RCC_OscConfig+0x354>)
 800cb2a:	68aa      	ldr	r2, [r5, #8]
 800cb2c:	f002 020c 	and.w	r2, r2, #12
 800cb30:	2a08      	cmp	r2, #8
 800cb32:	d03e      	beq.n	800cbb2 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800cb34:	2b02      	cmp	r3, #2
 800cb36:	4b35      	ldr	r3, [pc, #212]	@ (800cc0c <HAL_RCC_OscConfig+0x358>)
 800cb38:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800cb3c:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800cb3e:	d12b      	bne.n	800cb98 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800cb40:	f7fe fbc4 	bl	800b2cc <HAL_GetTick>
 800cb44:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cb46:	682b      	ldr	r3, [r5, #0]
 800cb48:	0199      	lsls	r1, r3, #6
 800cb4a:	d41f      	bmi.n	800cb8c <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800cb4c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800cb50:	4313      	orrs	r3, r2
 800cb52:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800cb54:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800cb58:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800cb5a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cb5e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800cb60:	0852      	lsrs	r2, r2, #1
 800cb62:	3a01      	subs	r2, #1
 800cb64:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cb68:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800cb6a:	4b28      	ldr	r3, [pc, #160]	@ (800cc0c <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cb6c:	4d26      	ldr	r5, [pc, #152]	@ (800cc08 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800cb6e:	2201      	movs	r2, #1
 800cb70:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800cb72:	f7fe fbab 	bl	800b2cc <HAL_GetTick>
 800cb76:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cb78:	682b      	ldr	r3, [r5, #0]
 800cb7a:	019a      	lsls	r2, r3, #6
 800cb7c:	f53f aeb0 	bmi.w	800c8e0 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800cb80:	f7fe fba4 	bl	800b2cc <HAL_GetTick>
 800cb84:	1b00      	subs	r0, r0, r4
 800cb86:	2802      	cmp	r0, #2
 800cb88:	d9f6      	bls.n	800cb78 <HAL_RCC_OscConfig+0x2c4>
 800cb8a:	e6d7      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800cb8c:	f7fe fb9e 	bl	800b2cc <HAL_GetTick>
 800cb90:	1b80      	subs	r0, r0, r6
 800cb92:	2802      	cmp	r0, #2
 800cb94:	d9d7      	bls.n	800cb46 <HAL_RCC_OscConfig+0x292>
 800cb96:	e6d1      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800cb98:	f7fe fb98 	bl	800b2cc <HAL_GetTick>
 800cb9c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cb9e:	682b      	ldr	r3, [r5, #0]
 800cba0:	019b      	lsls	r3, r3, #6
 800cba2:	f57f ae9d 	bpl.w	800c8e0 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800cba6:	f7fe fb91 	bl	800b2cc <HAL_GetTick>
 800cbaa:	1b00      	subs	r0, r0, r4
 800cbac:	2802      	cmp	r0, #2
 800cbae:	d9f6      	bls.n	800cb9e <HAL_RCC_OscConfig+0x2ea>
 800cbb0:	e6c4      	b.n	800c93c <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800cbb2:	2b01      	cmp	r3, #1
 800cbb4:	f43f aeab 	beq.w	800c90e <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 800cbb8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800cbba:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cbbc:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800cbc0:	4291      	cmp	r1, r2
 800cbc2:	f47f aea4 	bne.w	800c90e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cbc6:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800cbc8:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cbcc:	428a      	cmp	r2, r1
 800cbce:	f47f ae9e 	bne.w	800c90e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800cbd2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800cbd4:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800cbd8:	401a      	ands	r2, r3
 800cbda:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800cbde:	f47f ae96 	bne.w	800c90e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800cbe2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800cbe4:	0852      	lsrs	r2, r2, #1
 800cbe6:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800cbea:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800cbec:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800cbf0:	f47f ae8d 	bne.w	800c90e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800cbf4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800cbf6:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800cbfa:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800cbfe:	bf14      	ite	ne
 800cc00:	2001      	movne	r0, #1
 800cc02:	2000      	moveq	r0, #0
 800cc04:	e69b      	b.n	800c93e <HAL_RCC_OscConfig+0x8a>
 800cc06:	bf00      	nop
 800cc08:	40023800 	.word	0x40023800
 800cc0c:	42470000 	.word	0x42470000

0800cc10 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800cc10:	4913      	ldr	r1, [pc, #76]	@ (800cc60 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800cc12:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800cc14:	688b      	ldr	r3, [r1, #8]
 800cc16:	f003 030c 	and.w	r3, r3, #12
 800cc1a:	2b04      	cmp	r3, #4
 800cc1c:	d01c      	beq.n	800cc58 <HAL_RCC_GetSysClockFreq+0x48>
 800cc1e:	2b08      	cmp	r3, #8
 800cc20:	d11c      	bne.n	800cc5c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800cc22:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800cc24:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cc26:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800cc28:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cc2c:	bf14      	ite	ne
 800cc2e:	480d      	ldrne	r0, [pc, #52]	@ (800cc64 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cc30:	480d      	ldreq	r0, [pc, #52]	@ (800cc68 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cc32:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800cc36:	bf18      	it	ne
 800cc38:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800cc3a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800cc3e:	fba1 0100 	umull	r0, r1, r1, r0
 800cc42:	f7f4 f831 	bl	8000ca8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800cc46:	4b06      	ldr	r3, [pc, #24]	@ (800cc60 <HAL_RCC_GetSysClockFreq+0x50>)
 800cc48:	685b      	ldr	r3, [r3, #4]
 800cc4a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800cc4e:	3301      	adds	r3, #1
 800cc50:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800cc52:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800cc56:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800cc58:	4802      	ldr	r0, [pc, #8]	@ (800cc64 <HAL_RCC_GetSysClockFreq+0x54>)
 800cc5a:	e7fc      	b.n	800cc56 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800cc5c:	4802      	ldr	r0, [pc, #8]	@ (800cc68 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800cc5e:	e7fa      	b.n	800cc56 <HAL_RCC_GetSysClockFreq+0x46>
 800cc60:	40023800 	.word	0x40023800
 800cc64:	007a1200 	.word	0x007a1200
 800cc68:	00f42400 	.word	0x00f42400

0800cc6c <HAL_RCC_ClockConfig>:
{
 800cc6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc70:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800cc72:	4604      	mov	r4, r0
 800cc74:	b910      	cbnz	r0, 800cc7c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800cc76:	2001      	movs	r0, #1
}
 800cc78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800cc7c:	4b43      	ldr	r3, [pc, #268]	@ (800cd8c <HAL_RCC_ClockConfig+0x120>)
 800cc7e:	681a      	ldr	r2, [r3, #0]
 800cc80:	f002 020f 	and.w	r2, r2, #15
 800cc84:	428a      	cmp	r2, r1
 800cc86:	d328      	bcc.n	800ccda <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800cc88:	6821      	ldr	r1, [r4, #0]
 800cc8a:	078f      	lsls	r7, r1, #30
 800cc8c:	d42d      	bmi.n	800ccea <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800cc8e:	07c8      	lsls	r0, r1, #31
 800cc90:	d440      	bmi.n	800cd14 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800cc92:	4b3e      	ldr	r3, [pc, #248]	@ (800cd8c <HAL_RCC_ClockConfig+0x120>)
 800cc94:	681a      	ldr	r2, [r3, #0]
 800cc96:	f002 020f 	and.w	r2, r2, #15
 800cc9a:	42aa      	cmp	r2, r5
 800cc9c:	d865      	bhi.n	800cd6a <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800cc9e:	6822      	ldr	r2, [r4, #0]
 800cca0:	0751      	lsls	r1, r2, #29
 800cca2:	d46b      	bmi.n	800cd7c <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800cca4:	0713      	lsls	r3, r2, #28
 800cca6:	d507      	bpl.n	800ccb8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800cca8:	4a39      	ldr	r2, [pc, #228]	@ (800cd90 <HAL_RCC_ClockConfig+0x124>)
 800ccaa:	6921      	ldr	r1, [r4, #16]
 800ccac:	6893      	ldr	r3, [r2, #8]
 800ccae:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800ccb2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800ccb6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800ccb8:	f7ff ffaa 	bl	800cc10 <HAL_RCC_GetSysClockFreq>
 800ccbc:	4b34      	ldr	r3, [pc, #208]	@ (800cd90 <HAL_RCC_ClockConfig+0x124>)
 800ccbe:	4a35      	ldr	r2, [pc, #212]	@ (800cd94 <HAL_RCC_ClockConfig+0x128>)
 800ccc0:	689b      	ldr	r3, [r3, #8]
 800ccc2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800ccc6:	5cd3      	ldrb	r3, [r2, r3]
 800ccc8:	40d8      	lsrs	r0, r3
 800ccca:	4b33      	ldr	r3, [pc, #204]	@ (800cd98 <HAL_RCC_ClockConfig+0x12c>)
 800cccc:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800ccce:	4b33      	ldr	r3, [pc, #204]	@ (800cd9c <HAL_RCC_ClockConfig+0x130>)
 800ccd0:	6818      	ldr	r0, [r3, #0]
 800ccd2:	f7f6 f80f 	bl	8002cf4 <HAL_InitTick>
  return HAL_OK;
 800ccd6:	2000      	movs	r0, #0
 800ccd8:	e7ce      	b.n	800cc78 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ccda:	b2ca      	uxtb	r2, r1
 800ccdc:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800ccde:	681b      	ldr	r3, [r3, #0]
 800cce0:	f003 030f 	and.w	r3, r3, #15
 800cce4:	428b      	cmp	r3, r1
 800cce6:	d1c6      	bne.n	800cc76 <HAL_RCC_ClockConfig+0xa>
 800cce8:	e7ce      	b.n	800cc88 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ccea:	4b29      	ldr	r3, [pc, #164]	@ (800cd90 <HAL_RCC_ClockConfig+0x124>)
 800ccec:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800ccf0:	bf1e      	ittt	ne
 800ccf2:	689a      	ldrne	r2, [r3, #8]
 800ccf4:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800ccf8:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800ccfa:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800ccfc:	bf42      	ittt	mi
 800ccfe:	689a      	ldrmi	r2, [r3, #8]
 800cd00:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800cd04:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800cd06:	689a      	ldr	r2, [r3, #8]
 800cd08:	68a0      	ldr	r0, [r4, #8]
 800cd0a:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800cd0e:	4302      	orrs	r2, r0
 800cd10:	609a      	str	r2, [r3, #8]
 800cd12:	e7bc      	b.n	800cc8e <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800cd14:	6862      	ldr	r2, [r4, #4]
 800cd16:	4b1e      	ldr	r3, [pc, #120]	@ (800cd90 <HAL_RCC_ClockConfig+0x124>)
 800cd18:	2a01      	cmp	r2, #1
 800cd1a:	d11c      	bne.n	800cd56 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800cd1c:	681b      	ldr	r3, [r3, #0]
 800cd1e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800cd22:	d0a8      	beq.n	800cc76 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800cd24:	4e1a      	ldr	r6, [pc, #104]	@ (800cd90 <HAL_RCC_ClockConfig+0x124>)
 800cd26:	68b3      	ldr	r3, [r6, #8]
 800cd28:	f023 0303 	bic.w	r3, r3, #3
 800cd2c:	4313      	orrs	r3, r2
 800cd2e:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800cd30:	f7fe facc 	bl	800b2cc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800cd34:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800cd38:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800cd3a:	68b3      	ldr	r3, [r6, #8]
 800cd3c:	6862      	ldr	r2, [r4, #4]
 800cd3e:	f003 030c 	and.w	r3, r3, #12
 800cd42:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800cd46:	d0a4      	beq.n	800cc92 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800cd48:	f7fe fac0 	bl	800b2cc <HAL_GetTick>
 800cd4c:	1bc0      	subs	r0, r0, r7
 800cd4e:	4540      	cmp	r0, r8
 800cd50:	d9f3      	bls.n	800cd3a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800cd52:	2003      	movs	r0, #3
 800cd54:	e790      	b.n	800cc78 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800cd56:	1e91      	subs	r1, r2, #2
 800cd58:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cd5a:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800cd5c:	d802      	bhi.n	800cd64 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cd5e:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800cd62:	e7de      	b.n	800cd22 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800cd64:	f013 0f02 	tst.w	r3, #2
 800cd68:	e7db      	b.n	800cd22 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800cd6a:	b2ea      	uxtb	r2, r5
 800cd6c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800cd6e:	681b      	ldr	r3, [r3, #0]
 800cd70:	f003 030f 	and.w	r3, r3, #15
 800cd74:	42ab      	cmp	r3, r5
 800cd76:	f47f af7e 	bne.w	800cc76 <HAL_RCC_ClockConfig+0xa>
 800cd7a:	e790      	b.n	800cc9e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800cd7c:	4904      	ldr	r1, [pc, #16]	@ (800cd90 <HAL_RCC_ClockConfig+0x124>)
 800cd7e:	68e0      	ldr	r0, [r4, #12]
 800cd80:	688b      	ldr	r3, [r1, #8]
 800cd82:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800cd86:	4303      	orrs	r3, r0
 800cd88:	608b      	str	r3, [r1, #8]
 800cd8a:	e78b      	b.n	800cca4 <HAL_RCC_ClockConfig+0x38>
 800cd8c:	40023c00 	.word	0x40023c00
 800cd90:	40023800 	.word	0x40023800
 800cd94:	0802dd14 	.word	0x0802dd14
 800cd98:	20000074 	.word	0x20000074
 800cd9c:	2000007c 	.word	0x2000007c

0800cda0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800cda0:	4b04      	ldr	r3, [pc, #16]	@ (800cdb4 <HAL_RCC_GetPCLK1Freq+0x14>)
 800cda2:	4a05      	ldr	r2, [pc, #20]	@ (800cdb8 <HAL_RCC_GetPCLK1Freq+0x18>)
 800cda4:	689b      	ldr	r3, [r3, #8]
 800cda6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800cdaa:	5cd3      	ldrb	r3, [r2, r3]
 800cdac:	4a03      	ldr	r2, [pc, #12]	@ (800cdbc <HAL_RCC_GetPCLK1Freq+0x1c>)
 800cdae:	6810      	ldr	r0, [r2, #0]
}
 800cdb0:	40d8      	lsrs	r0, r3
 800cdb2:	4770      	bx	lr
 800cdb4:	40023800 	.word	0x40023800
 800cdb8:	0802dd0c 	.word	0x0802dd0c
 800cdbc:	20000074 	.word	0x20000074

0800cdc0 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 800cdc0:	4b04      	ldr	r3, [pc, #16]	@ (800cdd4 <HAL_RCC_GetPCLK2Freq+0x14>)
 800cdc2:	4a05      	ldr	r2, [pc, #20]	@ (800cdd8 <HAL_RCC_GetPCLK2Freq+0x18>)
 800cdc4:	689b      	ldr	r3, [r3, #8]
 800cdc6:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800cdca:	5cd3      	ldrb	r3, [r2, r3]
 800cdcc:	4a03      	ldr	r2, [pc, #12]	@ (800cddc <HAL_RCC_GetPCLK2Freq+0x1c>)
 800cdce:	6810      	ldr	r0, [r2, #0]
}
 800cdd0:	40d8      	lsrs	r0, r3
 800cdd2:	4770      	bx	lr
 800cdd4:	40023800 	.word	0x40023800
 800cdd8:	0802dd0c 	.word	0x0802dd0c
 800cddc:	20000074 	.word	0x20000074

0800cde0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800cde0:	230f      	movs	r3, #15
 800cde2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800cde4:	4b0b      	ldr	r3, [pc, #44]	@ (800ce14 <HAL_RCC_GetClockConfig+0x34>)
 800cde6:	689a      	ldr	r2, [r3, #8]
 800cde8:	f002 0203 	and.w	r2, r2, #3
 800cdec:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800cdee:	689a      	ldr	r2, [r3, #8]
 800cdf0:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800cdf4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800cdf6:	689a      	ldr	r2, [r3, #8]
 800cdf8:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800cdfc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800cdfe:	689b      	ldr	r3, [r3, #8]
 800ce00:	08db      	lsrs	r3, r3, #3
 800ce02:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800ce06:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800ce08:	4b03      	ldr	r3, [pc, #12]	@ (800ce18 <HAL_RCC_GetClockConfig+0x38>)
 800ce0a:	681b      	ldr	r3, [r3, #0]
 800ce0c:	f003 030f 	and.w	r3, r3, #15
 800ce10:	600b      	str	r3, [r1, #0]
}
 800ce12:	4770      	bx	lr
 800ce14:	40023800 	.word	0x40023800
 800ce18:	40023c00 	.word	0x40023c00

0800ce1c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800ce1c:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800ce1e:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800ce22:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ce24:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800ce26:	f040 8088 	bne.w	800cf3a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800ce2a:	6823      	ldr	r3, [r4, #0]
 800ce2c:	f013 0f0c 	tst.w	r3, #12
 800ce30:	d045      	beq.n	800cebe <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800ce32:	4b8c      	ldr	r3, [pc, #560]	@ (800d064 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800ce34:	4d8c      	ldr	r5, [pc, #560]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800ce36:	2200      	movs	r2, #0
 800ce38:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800ce3a:	f7fe fa47 	bl	800b2cc <HAL_GetTick>
 800ce3e:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800ce40:	682b      	ldr	r3, [r5, #0]
 800ce42:	0099      	lsls	r1, r3, #2
 800ce44:	f100 80cb 	bmi.w	800cfde <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800ce48:	6821      	ldr	r1, [r4, #0]
 800ce4a:	074a      	lsls	r2, r1, #29
 800ce4c:	d515      	bpl.n	800ce7a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800ce4e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800ce52:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800ce56:	061b      	lsls	r3, r3, #24
 800ce58:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800ce5c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ce60:	4313      	orrs	r3, r2
 800ce62:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800ce66:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800ce6a:	6a22      	ldr	r2, [r4, #32]
 800ce6c:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800ce70:	3a01      	subs	r2, #1
 800ce72:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800ce76:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800ce7a:	070b      	lsls	r3, r1, #28
 800ce7c:	d514      	bpl.n	800cea8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800ce7e:	4a7a      	ldr	r2, [pc, #488]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800ce80:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800ce82:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800ce86:	6920      	ldr	r0, [r4, #16]
 800ce88:	071b      	lsls	r3, r3, #28
 800ce8a:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800ce8e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ce92:	430b      	orrs	r3, r1
 800ce94:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800ce98:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800ce9c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800ce9e:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800cea2:	430b      	orrs	r3, r1
 800cea4:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800cea8:	4b6e      	ldr	r3, [pc, #440]	@ (800d064 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800ceaa:	4e6f      	ldr	r6, [pc, #444]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 800ceac:	2201      	movs	r2, #1
 800ceae:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800ceb0:	f7fe fa0c 	bl	800b2cc <HAL_GetTick>
 800ceb4:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800ceb6:	6833      	ldr	r3, [r6, #0]
 800ceb8:	009f      	lsls	r7, r3, #2
 800ceba:	f140 8097 	bpl.w	800cfec <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800cebe:	6823      	ldr	r3, [r4, #0]
 800cec0:	0698      	lsls	r0, r3, #26
 800cec2:	d534      	bpl.n	800cf2e <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800cec4:	2300      	movs	r3, #0
 800cec6:	9301      	str	r3, [sp, #4]
 800cec8:	4b67      	ldr	r3, [pc, #412]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800ceca:	4d68      	ldr	r5, [pc, #416]	@ (800d06c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800cecc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800cece:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800ced2:	641a      	str	r2, [r3, #64]	@ 0x40
 800ced4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ced6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800ceda:	9301      	str	r3, [sp, #4]
 800cedc:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800cede:	682b      	ldr	r3, [r5, #0]
 800cee0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800cee4:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800cee6:	f7fe f9f1 	bl	800b2cc <HAL_GetTick>
 800ceea:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800ceec:	682b      	ldr	r3, [r5, #0]
 800ceee:	05d8      	lsls	r0, r3, #23
 800cef0:	f140 8083 	bpl.w	800cffa <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800cef4:	4d5c      	ldr	r5, [pc, #368]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800cef6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800cef8:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800cefa:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800cefe:	f040 8083 	bne.w	800d008 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800cf02:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800cf04:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800cf08:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 800cf0c:	4a56      	ldr	r2, [pc, #344]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800cf0e:	f040 809e 	bne.w	800d04e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800cf12:	6891      	ldr	r1, [r2, #8]
 800cf14:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800cf18:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800cf1c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800cf20:	4301      	orrs	r1, r0
 800cf22:	6091      	str	r1, [r2, #8]
 800cf24:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800cf26:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800cf2a:	430b      	orrs	r3, r1
 800cf2c:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800cf2e:	6823      	ldr	r3, [r4, #0]
 800cf30:	06db      	lsls	r3, r3, #27
 800cf32:	f100 8090 	bmi.w	800d056 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800cf36:	2000      	movs	r0, #0
 800cf38:	e04f      	b.n	800cfda <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800cf3a:	4b4a      	ldr	r3, [pc, #296]	@ (800d064 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800cf3c:	4e4a      	ldr	r6, [pc, #296]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800cf3e:	2200      	movs	r2, #0
 800cf40:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800cf42:	f7fe f9c3 	bl	800b2cc <HAL_GetTick>
 800cf46:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800cf48:	6833      	ldr	r3, [r6, #0]
 800cf4a:	011f      	lsls	r7, r3, #4
 800cf4c:	d43f      	bmi.n	800cfce <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800cf4e:	6821      	ldr	r1, [r4, #0]
 800cf50:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800cf52:	bf41      	itttt	mi
 800cf54:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800cf58:	071b      	lslmi	r3, r3, #28
 800cf5a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800cf5e:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800cf62:	078a      	lsls	r2, r1, #30
 800cf64:	d515      	bpl.n	800cf92 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800cf66:	4a40      	ldr	r2, [pc, #256]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800cf68:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800cf6a:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800cf6e:	6865      	ldr	r5, [r4, #4]
 800cf70:	061b      	lsls	r3, r3, #24
 800cf72:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800cf76:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800cf7a:	4303      	orrs	r3, r0
 800cf7c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800cf80:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 800cf84:	69e3      	ldr	r3, [r4, #28]
 800cf86:	f020 001f 	bic.w	r0, r0, #31
 800cf8a:	3b01      	subs	r3, #1
 800cf8c:	4303      	orrs	r3, r0
 800cf8e:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800cf92:	064b      	lsls	r3, r1, #25
 800cf94:	d50a      	bpl.n	800cfac <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800cf96:	68e3      	ldr	r3, [r4, #12]
 800cf98:	6862      	ldr	r2, [r4, #4]
 800cf9a:	061b      	lsls	r3, r3, #24
 800cf9c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800cfa0:	68a2      	ldr	r2, [r4, #8]
 800cfa2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800cfa6:	4a30      	ldr	r2, [pc, #192]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800cfa8:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800cfac:	4b2d      	ldr	r3, [pc, #180]	@ (800d064 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800cfae:	4e2e      	ldr	r6, [pc, #184]	@ (800d068 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 800cfb0:	2201      	movs	r2, #1
 800cfb2:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800cfb4:	f7fe f98a 	bl	800b2cc <HAL_GetTick>
 800cfb8:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800cfba:	6833      	ldr	r3, [r6, #0]
 800cfbc:	011f      	lsls	r7, r3, #4
 800cfbe:	f53f af34 	bmi.w	800ce2a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800cfc2:	f7fe f983 	bl	800b2cc <HAL_GetTick>
 800cfc6:	1b40      	subs	r0, r0, r5
 800cfc8:	2802      	cmp	r0, #2
 800cfca:	d9f6      	bls.n	800cfba <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800cfcc:	e004      	b.n	800cfd8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800cfce:	f7fe f97d 	bl	800b2cc <HAL_GetTick>
 800cfd2:	1b40      	subs	r0, r0, r5
 800cfd4:	2802      	cmp	r0, #2
 800cfd6:	d9b7      	bls.n	800cf48 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800cfd8:	2003      	movs	r0, #3
}
 800cfda:	b003      	add	sp, #12
 800cfdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800cfde:	f7fe f975 	bl	800b2cc <HAL_GetTick>
 800cfe2:	1b80      	subs	r0, r0, r6
 800cfe4:	2802      	cmp	r0, #2
 800cfe6:	f67f af2b 	bls.w	800ce40 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800cfea:	e7f5      	b.n	800cfd8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800cfec:	f7fe f96e 	bl	800b2cc <HAL_GetTick>
 800cff0:	1b40      	subs	r0, r0, r5
 800cff2:	2802      	cmp	r0, #2
 800cff4:	f67f af5f 	bls.w	800ceb6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800cff8:	e7ee      	b.n	800cfd8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800cffa:	f7fe f967 	bl	800b2cc <HAL_GetTick>
 800cffe:	1b80      	subs	r0, r0, r6
 800d000:	2802      	cmp	r0, #2
 800d002:	f67f af73 	bls.w	800ceec <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800d006:	e7e7      	b.n	800cfd8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d008:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800d00c:	4293      	cmp	r3, r2
 800d00e:	f43f af78 	beq.w	800cf02 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d012:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800d014:	4a13      	ldr	r2, [pc, #76]	@ (800d064 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800d016:	2101      	movs	r1, #1
 800d018:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d01c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800d020:	2100      	movs	r1, #0
 800d022:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800d026:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800d028:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d02a:	07d9      	lsls	r1, r3, #31
 800d02c:	f57f af69 	bpl.w	800cf02 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800d030:	f7fe f94c 	bl	800b2cc <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d034:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800d038:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d03a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d03c:	079a      	lsls	r2, r3, #30
 800d03e:	f53f af60 	bmi.w	800cf02 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d042:	f7fe f943 	bl	800b2cc <HAL_GetTick>
 800d046:	1b80      	subs	r0, r0, r6
 800d048:	42b8      	cmp	r0, r7
 800d04a:	d9f6      	bls.n	800d03a <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800d04c:	e7c4      	b.n	800cfd8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d04e:	6891      	ldr	r1, [r2, #8]
 800d050:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800d054:	e765      	b.n	800cf22 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800d056:	4b06      	ldr	r3, [pc, #24]	@ (800d070 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800d058:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800d05c:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800d060:	e769      	b.n	800cf36 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800d062:	bf00      	nop
 800d064:	42470000 	.word	0x42470000
 800d068:	40023800 	.word	0x40023800
 800d06c:	40007000 	.word	0x40007000
 800d070:	42471000 	.word	0x42471000

0800d074 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800d074:	b538      	push	{r3, r4, r5, lr}
 800d076:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800d078:	4604      	mov	r4, r0
 800d07a:	b1c8      	cbz	r0, 800d0b0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800d07c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800d080:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800d084:	b91b      	cbnz	r3, 800d08e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800d086:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800d08a:	f7f5 fdc7 	bl	8002c1c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d08e:	2302      	movs	r3, #2
 800d090:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800d094:	1d21      	adds	r1, r4, #4
 800d096:	6820      	ldr	r0, [r4, #0]
 800d098:	f000 feed 	bl	800de76 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800d09c:	6862      	ldr	r2, [r4, #4]
 800d09e:	6820      	ldr	r0, [r4, #0]
 800d0a0:	4629      	mov	r1, r5
 800d0a2:	f000 ff1e 	bl	800dee2 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800d0a6:	2301      	movs	r3, #1
 800d0a8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800d0ac:	2000      	movs	r0, #0
}
 800d0ae:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d0b0:	2001      	movs	r0, #1
 800d0b2:	e7fc      	b.n	800d0ae <HAL_SDRAM_Init+0x3a>

0800d0b4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800d0b4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d0b6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800d0ba:	2b02      	cmp	r3, #2
{
 800d0bc:	4605      	mov	r5, r0
 800d0be:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d0c0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800d0c2:	d012      	beq.n	800d0ea <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800d0c4:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800d0c8:	2c01      	cmp	r4, #1
 800d0ca:	d10f      	bne.n	800d0ec <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d0cc:	2302      	movs	r3, #2
 800d0ce:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800d0d2:	6828      	ldr	r0, [r5, #0]
 800d0d4:	f000 ff3b 	bl	800df4e <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800d0d8:	6833      	ldr	r3, [r6, #0]
 800d0da:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800d0dc:	bf06      	itte	eq
 800d0de:	2305      	moveq	r3, #5
 800d0e0:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800d0e4:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800d0e8:	2000      	movs	r0, #0
}
 800d0ea:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800d0ec:	2001      	movs	r0, #1
 800d0ee:	e7fc      	b.n	800d0ea <HAL_SDRAM_SendCommand+0x36>

0800d0f0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800d0f0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800d0f2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800d0f6:	2b02      	cmp	r3, #2
{
 800d0f8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800d0fa:	b2d8      	uxtb	r0, r3
 800d0fc:	d00d      	beq.n	800d11a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800d0fe:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800d102:	2b01      	cmp	r3, #1
 800d104:	b2dd      	uxtb	r5, r3
 800d106:	d109      	bne.n	800d11c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d108:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800d10a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d10c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800d110:	f000 ff41 	bl	800df96 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800d114:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800d118:	2000      	movs	r0, #0
}
 800d11a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d11c:	2001      	movs	r0, #1
 800d11e:	e7fc      	b.n	800d11a <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800d120 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800d120:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800d124:	461f      	mov	r7, r3
 800d126:	4689      	mov	r9, r1
 800d128:	4690      	mov	r8, r2
 800d12a:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800d12c:	f7fe f8ce 	bl	800b2cc <HAL_GetTick>
 800d130:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800d132:	443d      	add	r5, r7
 800d134:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800d136:	f7fe f8c9 	bl	800b2cc <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800d13a:	4b26      	ldr	r3, [pc, #152]	@ (800d1d4 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800d13c:	681e      	ldr	r6, [r3, #0]
 800d13e:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800d142:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 800d144:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800d146:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800d148:	6822      	ldr	r2, [r4, #0]
 800d14a:	6893      	ldr	r3, [r2, #8]
 800d14c:	ea39 0303 	bics.w	r3, r9, r3
 800d150:	bf0c      	ite	eq
 800d152:	2301      	moveq	r3, #1
 800d154:	2300      	movne	r3, #0
 800d156:	4543      	cmp	r3, r8
 800d158:	d101      	bne.n	800d15e <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800d15a:	2000      	movs	r0, #0
 800d15c:	e02e      	b.n	800d1bc <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800d15e:	1c7b      	adds	r3, r7, #1
 800d160:	d0f3      	beq.n	800d14a <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800d162:	f7fe f8b3 	bl	800b2cc <HAL_GetTick>
 800d166:	eba0 000a 	sub.w	r0, r0, sl
 800d16a:	42a8      	cmp	r0, r5
 800d16c:	d329      	bcc.n	800d1c2 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800d16e:	6823      	ldr	r3, [r4, #0]
 800d170:	685a      	ldr	r2, [r3, #4]
 800d172:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800d176:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d178:	6862      	ldr	r2, [r4, #4]
 800d17a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800d17e:	d10a      	bne.n	800d196 <SPI_WaitFlagStateUntilTimeout+0x76>
 800d180:	68a2      	ldr	r2, [r4, #8]
 800d182:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800d186:	d002      	beq.n	800d18e <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800d188:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800d18c:	d103      	bne.n	800d196 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800d18e:	681a      	ldr	r2, [r3, #0]
 800d190:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800d194:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800d196:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d198:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800d19c:	d107      	bne.n	800d1ae <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800d19e:	681a      	ldr	r2, [r3, #0]
 800d1a0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800d1a4:	601a      	str	r2, [r3, #0]
 800d1a6:	681a      	ldr	r2, [r3, #0]
 800d1a8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800d1ac:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800d1ae:	2301      	movs	r3, #1
 800d1b0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800d1b4:	2300      	movs	r3, #0
 800d1b6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800d1ba:	2003      	movs	r0, #3
}
 800d1bc:	b002      	add	sp, #8
 800d1be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800d1c2:	9a01      	ldr	r2, [sp, #4]
      count--;
 800d1c4:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 800d1c6:	2a00      	cmp	r2, #0
      count--;
 800d1c8:	f103 33ff 	add.w	r3, r3, #4294967295
 800d1cc:	9301      	str	r3, [sp, #4]
 800d1ce:	bf08      	it	eq
 800d1d0:	4615      	moveq	r5, r2
 800d1d2:	e7b9      	b.n	800d148 <SPI_WaitFlagStateUntilTimeout+0x28>
 800d1d4:	20000074 	.word	0x20000074

0800d1d8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800d1d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1da:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800d1dc:	460b      	mov	r3, r1
 800d1de:	9200      	str	r2, [sp, #0]
{
 800d1e0:	460e      	mov	r6, r1
 800d1e2:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800d1e4:	2102      	movs	r1, #2
 800d1e6:	2201      	movs	r2, #1
{
 800d1e8:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800d1ea:	f7ff ff99 	bl	800d120 <SPI_WaitFlagStateUntilTimeout>
 800d1ee:	4605      	mov	r5, r0
 800d1f0:	b128      	cbz	r0, 800d1fe <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d1f2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800d1f4:	f043 0320 	orr.w	r3, r3, #32
 800d1f8:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800d1fa:	2503      	movs	r5, #3
 800d1fc:	e015      	b.n	800d22a <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d1fe:	4b12      	ldr	r3, [pc, #72]	@ (800d248 <SPI_EndRxTxTransaction+0x70>)
 800d200:	6818      	ldr	r0, [r3, #0]
 800d202:	4b12      	ldr	r3, [pc, #72]	@ (800d24c <SPI_EndRxTxTransaction+0x74>)
 800d204:	fbb0 f0f3 	udiv	r0, r0, r3
 800d208:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800d20c:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d20e:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800d210:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d212:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800d216:	d10b      	bne.n	800d230 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d218:	9700      	str	r7, [sp, #0]
 800d21a:	4633      	mov	r3, r6
 800d21c:	462a      	mov	r2, r5
 800d21e:	2180      	movs	r1, #128	@ 0x80
 800d220:	4620      	mov	r0, r4
 800d222:	f7ff ff7d 	bl	800d120 <SPI_WaitFlagStateUntilTimeout>
 800d226:	2800      	cmp	r0, #0
 800d228:	d1e3      	bne.n	800d1f2 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800d22a:	4628      	mov	r0, r5
 800d22c:	b005      	add	sp, #20
 800d22e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 800d230:	9b03      	ldr	r3, [sp, #12]
 800d232:	2b00      	cmp	r3, #0
 800d234:	d0f9      	beq.n	800d22a <SPI_EndRxTxTransaction+0x52>
      count--;
 800d236:	9b03      	ldr	r3, [sp, #12]
 800d238:	3b01      	subs	r3, #1
 800d23a:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800d23c:	6823      	ldr	r3, [r4, #0]
 800d23e:	689b      	ldr	r3, [r3, #8]
 800d240:	061b      	lsls	r3, r3, #24
 800d242:	d4f5      	bmi.n	800d230 <SPI_EndRxTxTransaction+0x58>
 800d244:	e7f1      	b.n	800d22a <SPI_EndRxTxTransaction+0x52>
 800d246:	bf00      	nop
 800d248:	20000074 	.word	0x20000074
 800d24c:	016e3600 	.word	0x016e3600

0800d250 <SPI_EndRxTransaction>:
{
 800d250:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d252:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d254:	6841      	ldr	r1, [r0, #4]
 800d256:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800d25a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d25c:	d008      	beq.n	800d270 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800d25e:	9200      	str	r2, [sp, #0]
 800d260:	2101      	movs	r1, #1
 800d262:	2200      	movs	r2, #0
 800d264:	f7ff ff5c 	bl	800d120 <SPI_WaitFlagStateUntilTimeout>
 800d268:	b9d0      	cbnz	r0, 800d2a0 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800d26a:	2000      	movs	r0, #0
}
 800d26c:	b003      	add	sp, #12
 800d26e:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d270:	6881      	ldr	r1, [r0, #8]
 800d272:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800d276:	d002      	beq.n	800d27e <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800d278:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800d27c:	d107      	bne.n	800d28e <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800d27e:	6825      	ldr	r5, [r4, #0]
 800d280:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800d282:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800d286:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800d28a:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800d28c:	d004      	beq.n	800d298 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800d28e:	9200      	str	r2, [sp, #0]
 800d290:	2180      	movs	r1, #128	@ 0x80
 800d292:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800d294:	4620      	mov	r0, r4
 800d296:	e7e5      	b.n	800d264 <SPI_EndRxTransaction+0x14>
 800d298:	9200      	str	r2, [sp, #0]
 800d29a:	2101      	movs	r1, #1
 800d29c:	2200      	movs	r2, #0
 800d29e:	e7f9      	b.n	800d294 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d2a0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800d2a2:	f043 0320 	orr.w	r3, r3, #32
 800d2a6:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800d2a8:	2003      	movs	r0, #3
 800d2aa:	e7df      	b.n	800d26c <SPI_EndRxTransaction+0x1c>

0800d2ac <HAL_SPI_Init>:
{
 800d2ac:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800d2ae:	4604      	mov	r4, r0
 800d2b0:	2800      	cmp	r0, #0
 800d2b2:	d055      	beq.n	800d360 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800d2b4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d2b6:	2b00      	cmp	r3, #0
 800d2b8:	d14e      	bne.n	800d358 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800d2ba:	6842      	ldr	r2, [r0, #4]
 800d2bc:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800d2c0:	d000      	beq.n	800d2c4 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800d2c2:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800d2c4:	2300      	movs	r3, #0
 800d2c6:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800d2c8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800d2cc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800d2d0:	b923      	cbnz	r3, 800d2dc <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800d2d2:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800d2d6:	4620      	mov	r0, r4
 800d2d8:	f7f5 fc6a 	bl	8002bb0 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800d2dc:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d2de:	68a0      	ldr	r0, [r4, #8]
 800d2e0:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800d2e2:	2302      	movs	r3, #2
 800d2e4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800d2e8:	680b      	ldr	r3, [r1, #0]
 800d2ea:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800d2ee:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800d2f0:	6863      	ldr	r3, [r4, #4]
 800d2f2:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800d2f6:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800d2fa:	4303      	orrs	r3, r0
 800d2fc:	68e0      	ldr	r0, [r4, #12]
 800d2fe:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800d302:	4303      	orrs	r3, r0
 800d304:	6920      	ldr	r0, [r4, #16]
 800d306:	f000 0002 	and.w	r0, r0, #2
 800d30a:	4303      	orrs	r3, r0
 800d30c:	6960      	ldr	r0, [r4, #20]
 800d30e:	f000 0001 	and.w	r0, r0, #1
 800d312:	4303      	orrs	r3, r0
 800d314:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800d318:	4303      	orrs	r3, r0
 800d31a:	69e0      	ldr	r0, [r4, #28]
 800d31c:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800d320:	4303      	orrs	r3, r0
 800d322:	6a20      	ldr	r0, [r4, #32]
 800d324:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800d328:	4303      	orrs	r3, r0
 800d32a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d32c:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800d330:	4303      	orrs	r3, r0
 800d332:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800d334:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d336:	0c12      	lsrs	r2, r2, #16
 800d338:	f003 0310 	and.w	r3, r3, #16
 800d33c:	f002 0204 	and.w	r2, r2, #4
 800d340:	431a      	orrs	r2, r3
 800d342:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800d344:	69cb      	ldr	r3, [r1, #28]
 800d346:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800d34a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800d34c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800d34e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800d350:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800d352:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800d356:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800d358:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800d35a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d35e:	e7b1      	b.n	800d2c4 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800d360:	2001      	movs	r0, #1
 800d362:	e7f8      	b.n	800d356 <HAL_SPI_Init+0xaa>

0800d364 <HAL_SPI_Transmit>:
{
 800d364:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d368:	4604      	mov	r4, r0
 800d36a:	461f      	mov	r7, r3
 800d36c:	460d      	mov	r5, r1
 800d36e:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 800d370:	f7fd ffac 	bl	800b2cc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d374:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800d378:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800d37a:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d37c:	b2d8      	uxtb	r0, r3
 800d37e:	f040 809f 	bne.w	800d4c0 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800d382:	2d00      	cmp	r5, #0
 800d384:	d074      	beq.n	800d470 <HAL_SPI_Transmit+0x10c>
 800d386:	f1b8 0f00 	cmp.w	r8, #0
 800d38a:	d071      	beq.n	800d470 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 800d38c:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800d390:	2b01      	cmp	r3, #1
 800d392:	f000 8095 	beq.w	800d4c0 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800d396:	2303      	movs	r3, #3
 800d398:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d39c:	2300      	movs	r3, #0
 800d39e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800d3a0:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 800d3a4:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800d3a8:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800d3aa:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800d3ac:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d3ae:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800d3b0:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 800d3b2:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d3b6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800d3ba:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800d3bc:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d3c0:	d107      	bne.n	800d3d2 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800d3c2:	6833      	ldr	r3, [r6, #0]
 800d3c4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800d3c8:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 800d3ca:	6833      	ldr	r3, [r6, #0]
 800d3cc:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800d3d0:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d3d2:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800d3d4:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d3d6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800d3d8:	bf5e      	ittt	pl
 800d3da:	6833      	ldrpl	r3, [r6, #0]
 800d3dc:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800d3e0:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800d3e2:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d3e6:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800d3e8:	d145      	bne.n	800d476 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d3ea:	b113      	cbz	r3, 800d3f2 <HAL_SPI_Transmit+0x8e>
 800d3ec:	f1b8 0f01 	cmp.w	r8, #1
 800d3f0:	d107      	bne.n	800d402 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800d3f2:	f835 3b02 	ldrh.w	r3, [r5], #2
 800d3f6:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d3f8:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800d3fa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d3fc:	3b01      	subs	r3, #1
 800d3fe:	b29b      	uxth	r3, r3
 800d400:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800d402:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d404:	b29b      	uxth	r3, r3
 800d406:	b9d3      	cbnz	r3, 800d43e <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d408:	464a      	mov	r2, r9
 800d40a:	4639      	mov	r1, r7
 800d40c:	4620      	mov	r0, r4
 800d40e:	f7ff fee3 	bl	800d1d8 <SPI_EndRxTxTransaction>
 800d412:	2800      	cmp	r0, #0
 800d414:	d151      	bne.n	800d4ba <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800d416:	68a3      	ldr	r3, [r4, #8]
 800d418:	b933      	cbnz	r3, 800d428 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800d41a:	9301      	str	r3, [sp, #4]
 800d41c:	6823      	ldr	r3, [r4, #0]
 800d41e:	68da      	ldr	r2, [r3, #12]
 800d420:	9201      	str	r2, [sp, #4]
 800d422:	689b      	ldr	r3, [r3, #8]
 800d424:	9301      	str	r3, [sp, #4]
 800d426:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800d428:	2301      	movs	r3, #1
 800d42a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d42e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800d430:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d432:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800d434:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d438:	bf18      	it	ne
 800d43a:	2001      	movne	r0, #1
 800d43c:	e018      	b.n	800d470 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d43e:	6822      	ldr	r2, [r4, #0]
 800d440:	6893      	ldr	r3, [r2, #8]
 800d442:	0798      	lsls	r0, r3, #30
 800d444:	d505      	bpl.n	800d452 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800d446:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d448:	f833 1b02 	ldrh.w	r1, [r3], #2
 800d44c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d44e:	6323      	str	r3, [r4, #48]	@ 0x30
 800d450:	e7d3      	b.n	800d3fa <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d452:	f7fd ff3b 	bl	800b2cc <HAL_GetTick>
 800d456:	eba0 0009 	sub.w	r0, r0, r9
 800d45a:	42b8      	cmp	r0, r7
 800d45c:	d3d1      	bcc.n	800d402 <HAL_SPI_Transmit+0x9e>
 800d45e:	1c79      	adds	r1, r7, #1
 800d460:	d0cf      	beq.n	800d402 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800d462:	2301      	movs	r3, #1
 800d464:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800d468:	2300      	movs	r3, #0
 800d46a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800d46e:	2003      	movs	r0, #3
}
 800d470:	b003      	add	sp, #12
 800d472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d476:	b113      	cbz	r3, 800d47e <HAL_SPI_Transmit+0x11a>
 800d478:	f1b8 0f01 	cmp.w	r8, #1
 800d47c:	d108      	bne.n	800d490 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800d47e:	782b      	ldrb	r3, [r5, #0]
 800d480:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800d482:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d484:	3301      	adds	r3, #1
 800d486:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800d488:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d48a:	3b01      	subs	r3, #1
 800d48c:	b29b      	uxth	r3, r3
 800d48e:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800d490:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d492:	b29b      	uxth	r3, r3
 800d494:	2b00      	cmp	r3, #0
 800d496:	d0b7      	beq.n	800d408 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800d498:	6823      	ldr	r3, [r4, #0]
 800d49a:	689a      	ldr	r2, [r3, #8]
 800d49c:	0792      	lsls	r2, r2, #30
 800d49e:	d503      	bpl.n	800d4a8 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800d4a0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d4a2:	7812      	ldrb	r2, [r2, #0]
 800d4a4:	731a      	strb	r2, [r3, #12]
 800d4a6:	e7ec      	b.n	800d482 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d4a8:	f7fd ff10 	bl	800b2cc <HAL_GetTick>
 800d4ac:	eba0 0009 	sub.w	r0, r0, r9
 800d4b0:	42b8      	cmp	r0, r7
 800d4b2:	d3ed      	bcc.n	800d490 <HAL_SPI_Transmit+0x12c>
 800d4b4:	1c7b      	adds	r3, r7, #1
 800d4b6:	d0eb      	beq.n	800d490 <HAL_SPI_Transmit+0x12c>
 800d4b8:	e7d3      	b.n	800d462 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d4ba:	2320      	movs	r3, #32
 800d4bc:	6563      	str	r3, [r4, #84]	@ 0x54
 800d4be:	e7aa      	b.n	800d416 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800d4c0:	2002      	movs	r0, #2
 800d4c2:	e7d5      	b.n	800d470 <HAL_SPI_Transmit+0x10c>

0800d4c4 <HAL_SPI_TransmitReceive>:
{
 800d4c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d4c8:	4604      	mov	r4, r0
 800d4ca:	460d      	mov	r5, r1
 800d4cc:	4691      	mov	r9, r2
 800d4ce:	461e      	mov	r6, r3
 800d4d0:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 800d4d4:	f7fd fefa 	bl	800b2cc <HAL_GetTick>
  tmp_state           = hspi->State;
 800d4d8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800d4dc:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800d4de:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800d4e0:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800d4e2:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800d4e4:	d00a      	beq.n	800d4fc <HAL_SPI_TransmitReceive+0x38>
 800d4e6:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800d4ea:	f040 80e5 	bne.w	800d6b8 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800d4ee:	68a3      	ldr	r3, [r4, #8]
 800d4f0:	2b00      	cmp	r3, #0
 800d4f2:	f040 80e1 	bne.w	800d6b8 <HAL_SPI_TransmitReceive+0x1f4>
 800d4f6:	2904      	cmp	r1, #4
 800d4f8:	f040 80de 	bne.w	800d6b8 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800d4fc:	2d00      	cmp	r5, #0
 800d4fe:	d04b      	beq.n	800d598 <HAL_SPI_TransmitReceive+0xd4>
 800d500:	f1b9 0f00 	cmp.w	r9, #0
 800d504:	d048      	beq.n	800d598 <HAL_SPI_TransmitReceive+0xd4>
 800d506:	2e00      	cmp	r6, #0
 800d508:	d046      	beq.n	800d598 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800d50a:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800d50e:	2b01      	cmp	r3, #1
 800d510:	f000 80d2 	beq.w	800d6b8 <HAL_SPI_TransmitReceive+0x1f4>
 800d514:	2301      	movs	r3, #1
 800d516:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800d51a:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800d51e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800d522:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800d524:	bf1c      	itt	ne
 800d526:	2305      	movne	r3, #5
 800d528:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d52c:	2300      	movs	r3, #0
 800d52e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 800d530:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d534:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800d536:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800d538:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d53a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800d53c:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d53e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800d540:	bf58      	it	pl
 800d542:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800d544:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800d546:	bf58      	it	pl
 800d548:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 800d54c:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800d54e:	bf58      	it	pl
 800d550:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800d552:	68e1      	ldr	r1, [r4, #12]
 800d554:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800d558:	d155      	bne.n	800d606 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d55a:	b10a      	cbz	r2, 800d560 <HAL_SPI_TransmitReceive+0x9c>
 800d55c:	2e01      	cmp	r6, #1
 800d55e:	d107      	bne.n	800d570 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800d560:	f835 2b02 	ldrh.w	r2, [r5], #2
 800d564:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800d566:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800d568:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800d56a:	3b01      	subs	r3, #1
 800d56c:	b29b      	uxth	r3, r3
 800d56e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800d570:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d572:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d574:	b29b      	uxth	r3, r3
 800d576:	b98b      	cbnz	r3, 800d59c <HAL_SPI_TransmitReceive+0xd8>
 800d578:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d57a:	b29b      	uxth	r3, r3
 800d57c:	b973      	cbnz	r3, 800d59c <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d57e:	463a      	mov	r2, r7
 800d580:	4641      	mov	r1, r8
 800d582:	4620      	mov	r0, r4
 800d584:	f7ff fe28 	bl	800d1d8 <SPI_EndRxTxTransaction>
 800d588:	2800      	cmp	r0, #0
 800d58a:	f000 8081 	beq.w	800d690 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d58e:	2320      	movs	r3, #32
 800d590:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800d592:	2300      	movs	r3, #0
 800d594:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 800d598:	2001      	movs	r0, #1
 800d59a:	e031      	b.n	800d600 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d59c:	6821      	ldr	r1, [r4, #0]
 800d59e:	688b      	ldr	r3, [r1, #8]
 800d5a0:	079a      	lsls	r2, r3, #30
 800d5a2:	d50d      	bpl.n	800d5c0 <HAL_SPI_TransmitReceive+0xfc>
 800d5a4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d5a6:	b29b      	uxth	r3, r3
 800d5a8:	b153      	cbz	r3, 800d5c0 <HAL_SPI_TransmitReceive+0xfc>
 800d5aa:	b145      	cbz	r5, 800d5be <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800d5ac:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d5ae:	f833 2b02 	ldrh.w	r2, [r3], #2
 800d5b2:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800d5b4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800d5b6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d5b8:	3b01      	subs	r3, #1
 800d5ba:	b29b      	uxth	r3, r3
 800d5bc:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800d5be:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d5c0:	688a      	ldr	r2, [r1, #8]
 800d5c2:	f012 0201 	ands.w	r2, r2, #1
 800d5c6:	d00c      	beq.n	800d5e2 <HAL_SPI_TransmitReceive+0x11e>
 800d5c8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d5ca:	b29b      	uxth	r3, r3
 800d5cc:	b14b      	cbz	r3, 800d5e2 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d5ce:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800d5d0:	68c9      	ldr	r1, [r1, #12]
 800d5d2:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d5d6:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800d5d8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d5da:	3b01      	subs	r3, #1
 800d5dc:	b29b      	uxth	r3, r3
 800d5de:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800d5e0:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800d5e2:	f7fd fe73 	bl	800b2cc <HAL_GetTick>
 800d5e6:	1bc0      	subs	r0, r0, r7
 800d5e8:	4540      	cmp	r0, r8
 800d5ea:	d3c2      	bcc.n	800d572 <HAL_SPI_TransmitReceive+0xae>
 800d5ec:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d5f0:	d0bf      	beq.n	800d572 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800d5f2:	2301      	movs	r3, #1
 800d5f4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800d5f8:	2300      	movs	r3, #0
 800d5fa:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800d5fe:	2003      	movs	r0, #3
}
 800d600:	b003      	add	sp, #12
 800d602:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800d606:	b10a      	cbz	r2, 800d60c <HAL_SPI_TransmitReceive+0x148>
 800d608:	2e01      	cmp	r6, #1
 800d60a:	d108      	bne.n	800d61e <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800d60c:	782a      	ldrb	r2, [r5, #0]
 800d60e:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800d610:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d612:	3301      	adds	r3, #1
 800d614:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800d616:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d618:	3b01      	subs	r3, #1
 800d61a:	b29b      	uxth	r3, r3
 800d61c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800d61e:	2501      	movs	r5, #1
 800d620:	e02d      	b.n	800d67e <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800d622:	6822      	ldr	r2, [r4, #0]
 800d624:	6893      	ldr	r3, [r2, #8]
 800d626:	079b      	lsls	r3, r3, #30
 800d628:	d50e      	bpl.n	800d648 <HAL_SPI_TransmitReceive+0x184>
 800d62a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d62c:	b29b      	uxth	r3, r3
 800d62e:	b15b      	cbz	r3, 800d648 <HAL_SPI_TransmitReceive+0x184>
 800d630:	b14d      	cbz	r5, 800d646 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800d632:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d634:	781b      	ldrb	r3, [r3, #0]
 800d636:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800d638:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d63a:	3301      	adds	r3, #1
 800d63c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800d63e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d640:	3b01      	subs	r3, #1
 800d642:	b29b      	uxth	r3, r3
 800d644:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800d646:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800d648:	6822      	ldr	r2, [r4, #0]
 800d64a:	6891      	ldr	r1, [r2, #8]
 800d64c:	f011 0101 	ands.w	r1, r1, #1
 800d650:	d00d      	beq.n	800d66e <HAL_SPI_TransmitReceive+0x1aa>
 800d652:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d654:	b29b      	uxth	r3, r3
 800d656:	b153      	cbz	r3, 800d66e <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800d658:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800d65a:	68d2      	ldr	r2, [r2, #12]
 800d65c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800d65e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800d660:	3301      	adds	r3, #1
 800d662:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800d664:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d666:	3b01      	subs	r3, #1
 800d668:	b29b      	uxth	r3, r3
 800d66a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800d66c:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800d66e:	f7fd fe2d 	bl	800b2cc <HAL_GetTick>
 800d672:	1bc0      	subs	r0, r0, r7
 800d674:	4540      	cmp	r0, r8
 800d676:	d302      	bcc.n	800d67e <HAL_SPI_TransmitReceive+0x1ba>
 800d678:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d67c:	d1b9      	bne.n	800d5f2 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800d67e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800d680:	b29b      	uxth	r3, r3
 800d682:	2b00      	cmp	r3, #0
 800d684:	d1cd      	bne.n	800d622 <HAL_SPI_TransmitReceive+0x15e>
 800d686:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d688:	b29b      	uxth	r3, r3
 800d68a:	2b00      	cmp	r3, #0
 800d68c:	d1c9      	bne.n	800d622 <HAL_SPI_TransmitReceive+0x15e>
 800d68e:	e776      	b.n	800d57e <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800d690:	68a3      	ldr	r3, [r4, #8]
 800d692:	b933      	cbnz	r3, 800d6a2 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800d694:	9301      	str	r3, [sp, #4]
 800d696:	6823      	ldr	r3, [r4, #0]
 800d698:	68da      	ldr	r2, [r3, #12]
 800d69a:	9201      	str	r2, [sp, #4]
 800d69c:	689b      	ldr	r3, [r3, #8]
 800d69e:	9301      	str	r3, [sp, #4]
 800d6a0:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800d6a2:	2301      	movs	r3, #1
 800d6a4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d6a8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800d6aa:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d6ac:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800d6ae:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d6b2:	bf18      	it	ne
 800d6b4:	2001      	movne	r0, #1
 800d6b6:	e7a3      	b.n	800d600 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 800d6b8:	2002      	movs	r0, #2
 800d6ba:	e7a1      	b.n	800d600 <HAL_SPI_TransmitReceive+0x13c>

0800d6bc <HAL_SPI_Receive>:
{
 800d6bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d6c0:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800d6c2:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800d6c6:	2b01      	cmp	r3, #1
{
 800d6c8:	4604      	mov	r4, r0
 800d6ca:	4689      	mov	r9, r1
 800d6cc:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800d6ce:	b2dd      	uxtb	r5, r3
 800d6d0:	d004      	beq.n	800d6dc <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800d6d2:	2502      	movs	r5, #2
}
 800d6d4:	4628      	mov	r0, r5
 800d6d6:	b003      	add	sp, #12
 800d6d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d6dc:	6843      	ldr	r3, [r0, #4]
 800d6de:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800d6e2:	d10b      	bne.n	800d6fc <HAL_SPI_Receive+0x40>
 800d6e4:	6883      	ldr	r3, [r0, #8]
 800d6e6:	b94b      	cbnz	r3, 800d6fc <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d6e8:	2304      	movs	r3, #4
 800d6ea:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d6ee:	4613      	mov	r3, r2
 800d6f0:	9600      	str	r6, [sp, #0]
 800d6f2:	460a      	mov	r2, r1
 800d6f4:	f7ff fee6 	bl	800d4c4 <HAL_SPI_TransmitReceive>
 800d6f8:	4605      	mov	r5, r0
 800d6fa:	e7eb      	b.n	800d6d4 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 800d6fc:	f7fd fde6 	bl	800b2cc <HAL_GetTick>
 800d700:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800d702:	f1b9 0f00 	cmp.w	r9, #0
 800d706:	d0e5      	beq.n	800d6d4 <HAL_SPI_Receive+0x18>
 800d708:	2f00      	cmp	r7, #0
 800d70a:	d0e3      	beq.n	800d6d4 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 800d70c:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800d710:	2b01      	cmp	r3, #1
 800d712:	d0de      	beq.n	800d6d2 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d714:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d716:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 800d71a:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d71c:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 800d71e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d722:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d726:	f04f 0304 	mov.w	r3, #4
 800d72a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 800d72e:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d732:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800d734:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800d736:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800d738:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d73a:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 800d73c:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800d73e:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d740:	d107      	bne.n	800d752 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800d742:	681a      	ldr	r2, [r3, #0]
 800d744:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800d748:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800d74a:	681a      	ldr	r2, [r3, #0]
 800d74c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800d750:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d752:	681a      	ldr	r2, [r3, #0]
 800d754:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800d756:	bf5e      	ittt	pl
 800d758:	681a      	ldrpl	r2, [r3, #0]
 800d75a:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 800d75e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d760:	68e3      	ldr	r3, [r4, #12]
 800d762:	b1f3      	cbz	r3, 800d7a2 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 800d764:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d766:	b29b      	uxth	r3, r3
 800d768:	b1fb      	cbz	r3, 800d7aa <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d76a:	6823      	ldr	r3, [r4, #0]
 800d76c:	689a      	ldr	r2, [r3, #8]
 800d76e:	07d2      	lsls	r2, r2, #31
 800d770:	d53c      	bpl.n	800d7ec <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d772:	68da      	ldr	r2, [r3, #12]
 800d774:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800d776:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d77a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800d77c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d77e:	3b01      	subs	r3, #1
 800d780:	b29b      	uxth	r3, r3
 800d782:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800d784:	e7ee      	b.n	800d764 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d786:	6823      	ldr	r3, [r4, #0]
 800d788:	689a      	ldr	r2, [r3, #8]
 800d78a:	07d0      	lsls	r0, r2, #31
 800d78c:	d51e      	bpl.n	800d7cc <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d78e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800d790:	7b1b      	ldrb	r3, [r3, #12]
 800d792:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d794:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800d796:	3301      	adds	r3, #1
 800d798:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800d79a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d79c:	3b01      	subs	r3, #1
 800d79e:	b29b      	uxth	r3, r3
 800d7a0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800d7a2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800d7a4:	b29b      	uxth	r3, r3
 800d7a6:	2b00      	cmp	r3, #0
 800d7a8:	d1ed      	bne.n	800d786 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d7aa:	4642      	mov	r2, r8
 800d7ac:	4631      	mov	r1, r6
 800d7ae:	4620      	mov	r0, r4
 800d7b0:	f7ff fd4e 	bl	800d250 <SPI_EndRxTransaction>
 800d7b4:	bb18      	cbnz	r0, 800d7fe <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 800d7b6:	2301      	movs	r3, #1
 800d7b8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d7bc:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800d7be:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d7c0:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800d7c2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d7c6:	bf18      	it	ne
 800d7c8:	2501      	movne	r5, #1
 800d7ca:	e783      	b.n	800d6d4 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d7cc:	f7fd fd7e 	bl	800b2cc <HAL_GetTick>
 800d7d0:	eba0 0008 	sub.w	r0, r0, r8
 800d7d4:	42b0      	cmp	r0, r6
 800d7d6:	d3e4      	bcc.n	800d7a2 <HAL_SPI_Receive+0xe6>
 800d7d8:	1c71      	adds	r1, r6, #1
 800d7da:	d0e2      	beq.n	800d7a2 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 800d7dc:	2301      	movs	r3, #1
 800d7de:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800d7e2:	2300      	movs	r3, #0
 800d7e4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800d7e8:	2503      	movs	r5, #3
 800d7ea:	e773      	b.n	800d6d4 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d7ec:	f7fd fd6e 	bl	800b2cc <HAL_GetTick>
 800d7f0:	eba0 0008 	sub.w	r0, r0, r8
 800d7f4:	42b0      	cmp	r0, r6
 800d7f6:	d3b5      	bcc.n	800d764 <HAL_SPI_Receive+0xa8>
 800d7f8:	1c73      	adds	r3, r6, #1
 800d7fa:	d0b3      	beq.n	800d764 <HAL_SPI_Receive+0xa8>
 800d7fc:	e7ee      	b.n	800d7dc <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d7fe:	2320      	movs	r3, #32
 800d800:	6563      	str	r3, [r4, #84]	@ 0x54
 800d802:	e7d8      	b.n	800d7b6 <HAL_SPI_Receive+0xfa>

0800d804 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800d804:	4770      	bx	lr
	...

0800d808 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800d808:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800d80c:	2b01      	cmp	r3, #1
 800d80e:	d130      	bne.n	800d872 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800d810:	2302      	movs	r3, #2
 800d812:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d816:	6803      	ldr	r3, [r0, #0]
 800d818:	68da      	ldr	r2, [r3, #12]
 800d81a:	f042 0201 	orr.w	r2, r2, #1
 800d81e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d820:	4a15      	ldr	r2, [pc, #84]	@ (800d878 <HAL_TIM_Base_Start_IT+0x70>)
 800d822:	4293      	cmp	r3, r2
 800d824:	d01a      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d826:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800d82a:	d017      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d82c:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800d830:	4293      	cmp	r3, r2
 800d832:	d013      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d834:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800d838:	4293      	cmp	r3, r2
 800d83a:	d00f      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d83c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800d840:	4293      	cmp	r3, r2
 800d842:	d00b      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d844:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800d848:	4293      	cmp	r3, r2
 800d84a:	d007      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d84c:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800d850:	4293      	cmp	r3, r2
 800d852:	d003      	beq.n	800d85c <HAL_TIM_Base_Start_IT+0x54>
 800d854:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800d858:	4293      	cmp	r3, r2
 800d85a:	d104      	bne.n	800d866 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d85c:	689a      	ldr	r2, [r3, #8]
 800d85e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d862:	2a06      	cmp	r2, #6
 800d864:	d003      	beq.n	800d86e <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800d866:	681a      	ldr	r2, [r3, #0]
 800d868:	f042 0201 	orr.w	r2, r2, #1
 800d86c:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 800d86e:	2000      	movs	r0, #0
 800d870:	4770      	bx	lr
    return HAL_ERROR;
 800d872:	2001      	movs	r0, #1
}
 800d874:	4770      	bx	lr
 800d876:	bf00      	nop
 800d878:	40010000 	.word	0x40010000

0800d87c <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800d87c:	4770      	bx	lr

0800d87e <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800d87e:	4770      	bx	lr

0800d880 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800d880:	4770      	bx	lr

0800d882 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800d882:	4770      	bx	lr

0800d884 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800d884:	6803      	ldr	r3, [r0, #0]
{
 800d886:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800d888:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800d88a:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800d88c:	07b1      	lsls	r1, r6, #30
{
 800d88e:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800d890:	d50d      	bpl.n	800d8ae <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800d892:	07aa      	lsls	r2, r5, #30
 800d894:	d50b      	bpl.n	800d8ae <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800d896:	f06f 0202 	mvn.w	r2, #2
 800d89a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d89c:	2201      	movs	r2, #1
 800d89e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d8a0:	699b      	ldr	r3, [r3, #24]
 800d8a2:	079b      	lsls	r3, r3, #30
 800d8a4:	d069      	beq.n	800d97a <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800d8a6:	f7ff ffea 	bl	800d87e <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8aa:	2300      	movs	r3, #0
 800d8ac:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800d8ae:	0771      	lsls	r1, r6, #29
 800d8b0:	d510      	bpl.n	800d8d4 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800d8b2:	076a      	lsls	r2, r5, #29
 800d8b4:	d50e      	bpl.n	800d8d4 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800d8b6:	6823      	ldr	r3, [r4, #0]
 800d8b8:	f06f 0204 	mvn.w	r2, #4
 800d8bc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d8be:	2202      	movs	r2, #2
 800d8c0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d8c2:	699b      	ldr	r3, [r3, #24]
 800d8c4:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d8c8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d8ca:	d05c      	beq.n	800d986 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 800d8cc:	f7ff ffd7 	bl	800d87e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8d0:	2300      	movs	r3, #0
 800d8d2:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800d8d4:	0733      	lsls	r3, r6, #28
 800d8d6:	d50f      	bpl.n	800d8f8 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800d8d8:	0728      	lsls	r0, r5, #28
 800d8da:	d50d      	bpl.n	800d8f8 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800d8dc:	6823      	ldr	r3, [r4, #0]
 800d8de:	f06f 0208 	mvn.w	r2, #8
 800d8e2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d8e4:	2204      	movs	r2, #4
 800d8e6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d8e8:	69db      	ldr	r3, [r3, #28]
 800d8ea:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d8ec:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d8ee:	d050      	beq.n	800d992 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 800d8f0:	f7ff ffc5 	bl	800d87e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8f4:	2300      	movs	r3, #0
 800d8f6:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800d8f8:	06f2      	lsls	r2, r6, #27
 800d8fa:	d510      	bpl.n	800d91e <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800d8fc:	06eb      	lsls	r3, r5, #27
 800d8fe:	d50e      	bpl.n	800d91e <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800d900:	6823      	ldr	r3, [r4, #0]
 800d902:	f06f 0210 	mvn.w	r2, #16
 800d906:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d908:	2208      	movs	r2, #8
 800d90a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d90c:	69db      	ldr	r3, [r3, #28]
 800d90e:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d912:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d914:	d043      	beq.n	800d99e <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800d916:	f7ff ffb2 	bl	800d87e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d91a:	2300      	movs	r3, #0
 800d91c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800d91e:	07f0      	lsls	r0, r6, #31
 800d920:	d508      	bpl.n	800d934 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800d922:	07e9      	lsls	r1, r5, #31
 800d924:	d506      	bpl.n	800d934 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800d926:	6823      	ldr	r3, [r4, #0]
 800d928:	f06f 0201 	mvn.w	r2, #1
 800d92c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d92e:	4620      	mov	r0, r4
 800d930:	f7f4 ffa0 	bl	8002874 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800d934:	0632      	lsls	r2, r6, #24
 800d936:	d508      	bpl.n	800d94a <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800d938:	062b      	lsls	r3, r5, #24
 800d93a:	d506      	bpl.n	800d94a <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800d93c:	6823      	ldr	r3, [r4, #0]
 800d93e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800d942:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d944:	4620      	mov	r0, r4
 800d946:	f000 f8b6 	bl	800dab6 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800d94a:	0670      	lsls	r0, r6, #25
 800d94c:	d508      	bpl.n	800d960 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800d94e:	0669      	lsls	r1, r5, #25
 800d950:	d506      	bpl.n	800d960 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800d952:	6823      	ldr	r3, [r4, #0]
 800d954:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800d958:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d95a:	4620      	mov	r0, r4
 800d95c:	f7ff ff91 	bl	800d882 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800d960:	06b2      	lsls	r2, r6, #26
 800d962:	d522      	bpl.n	800d9aa <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800d964:	06ab      	lsls	r3, r5, #26
 800d966:	d520      	bpl.n	800d9aa <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800d968:	6823      	ldr	r3, [r4, #0]
 800d96a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d96e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800d970:	611a      	str	r2, [r3, #16]
}
 800d972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d976:	f000 b89d 	b.w	800dab4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d97a:	f7ff ff7f 	bl	800d87c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d97e:	4620      	mov	r0, r4
 800d980:	f7ff ff7e 	bl	800d880 <HAL_TIM_PWM_PulseFinishedCallback>
 800d984:	e791      	b.n	800d8aa <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d986:	f7ff ff79 	bl	800d87c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d98a:	4620      	mov	r0, r4
 800d98c:	f7ff ff78 	bl	800d880 <HAL_TIM_PWM_PulseFinishedCallback>
 800d990:	e79e      	b.n	800d8d0 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d992:	f7ff ff73 	bl	800d87c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d996:	4620      	mov	r0, r4
 800d998:	f7ff ff72 	bl	800d880 <HAL_TIM_PWM_PulseFinishedCallback>
 800d99c:	e7aa      	b.n	800d8f4 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d99e:	f7ff ff6d 	bl	800d87c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d9a2:	4620      	mov	r0, r4
 800d9a4:	f7ff ff6c 	bl	800d880 <HAL_TIM_PWM_PulseFinishedCallback>
 800d9a8:	e7b7      	b.n	800d91a <HAL_TIM_IRQHandler+0x96>
}
 800d9aa:	bd70      	pop	{r4, r5, r6, pc}

0800d9ac <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d9ac:	4a29      	ldr	r2, [pc, #164]	@ (800da54 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 800d9ae:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d9b0:	4290      	cmp	r0, r2
 800d9b2:	d012      	beq.n	800d9da <TIM_Base_SetConfig+0x2e>
 800d9b4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800d9b8:	d00f      	beq.n	800d9da <TIM_Base_SetConfig+0x2e>
 800d9ba:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800d9be:	4290      	cmp	r0, r2
 800d9c0:	d00b      	beq.n	800d9da <TIM_Base_SetConfig+0x2e>
 800d9c2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800d9c6:	4290      	cmp	r0, r2
 800d9c8:	d007      	beq.n	800d9da <TIM_Base_SetConfig+0x2e>
 800d9ca:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800d9ce:	4290      	cmp	r0, r2
 800d9d0:	d003      	beq.n	800d9da <TIM_Base_SetConfig+0x2e>
 800d9d2:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800d9d6:	4290      	cmp	r0, r2
 800d9d8:	d108      	bne.n	800d9ec <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800d9da:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d9dc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800d9e0:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d9e2:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d9e4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d9e8:	4313      	orrs	r3, r2
 800d9ea:	e016      	b.n	800da1a <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d9ec:	4a1a      	ldr	r2, [pc, #104]	@ (800da58 <TIM_Base_SetConfig+0xac>)
 800d9ee:	4290      	cmp	r0, r2
 800d9f0:	d0f7      	beq.n	800d9e2 <TIM_Base_SetConfig+0x36>
 800d9f2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800d9f6:	4290      	cmp	r0, r2
 800d9f8:	d0f3      	beq.n	800d9e2 <TIM_Base_SetConfig+0x36>
 800d9fa:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800d9fe:	4290      	cmp	r0, r2
 800da00:	d0ef      	beq.n	800d9e2 <TIM_Base_SetConfig+0x36>
 800da02:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800da06:	4290      	cmp	r0, r2
 800da08:	d0eb      	beq.n	800d9e2 <TIM_Base_SetConfig+0x36>
 800da0a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800da0e:	4290      	cmp	r0, r2
 800da10:	d0e7      	beq.n	800d9e2 <TIM_Base_SetConfig+0x36>
 800da12:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800da16:	4290      	cmp	r0, r2
 800da18:	d0e3      	beq.n	800d9e2 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800da1a:	694a      	ldr	r2, [r1, #20]
 800da1c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800da20:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800da22:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800da24:	688b      	ldr	r3, [r1, #8]
 800da26:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800da28:	680b      	ldr	r3, [r1, #0]
 800da2a:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800da2c:	4b09      	ldr	r3, [pc, #36]	@ (800da54 <TIM_Base_SetConfig+0xa8>)
 800da2e:	4298      	cmp	r0, r3
 800da30:	d003      	beq.n	800da3a <TIM_Base_SetConfig+0x8e>
 800da32:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800da36:	4298      	cmp	r0, r3
 800da38:	d101      	bne.n	800da3e <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800da3a:	690b      	ldr	r3, [r1, #16]
 800da3c:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800da3e:	2301      	movs	r3, #1
 800da40:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800da42:	6903      	ldr	r3, [r0, #16]
 800da44:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800da46:	bf42      	ittt	mi
 800da48:	6903      	ldrmi	r3, [r0, #16]
 800da4a:	f023 0301 	bicmi.w	r3, r3, #1
 800da4e:	6103      	strmi	r3, [r0, #16]
  }
}
 800da50:	4770      	bx	lr
 800da52:	bf00      	nop
 800da54:	40010000 	.word	0x40010000
 800da58:	40014000 	.word	0x40014000

0800da5c <HAL_TIM_Base_Init>:
{
 800da5c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800da5e:	4604      	mov	r4, r0
 800da60:	b330      	cbz	r0, 800dab0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800da62:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800da66:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800da6a:	b91b      	cbnz	r3, 800da74 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800da6c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800da70:	f7ff fec8 	bl	800d804 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800da74:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800da76:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800da78:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800da7c:	1d21      	adds	r1, r4, #4
 800da7e:	f7ff ff95 	bl	800d9ac <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800da82:	2301      	movs	r3, #1
 800da84:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 800da88:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800da8a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800da8e:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800da92:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800da96:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800da9a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800da9e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800daa2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800daa6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800daaa:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800daae:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800dab0:	2001      	movs	r0, #1
 800dab2:	e7fc      	b.n	800daae <HAL_TIM_Base_Init+0x52>

0800dab4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800dab4:	4770      	bx	lr

0800dab6 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800dab6:	4770      	bx	lr

0800dab8 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800dab8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800dabc:	6803      	ldr	r3, [r0, #0]
 800dabe:	68c1      	ldr	r1, [r0, #12]
 800dac0:	691a      	ldr	r2, [r3, #16]
{
 800dac2:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800dac4:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
 800dac8:	430a      	orrs	r2, r1
 800daca:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800dacc:	6925      	ldr	r5, [r4, #16]
 800dace:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800dad0:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800dad2:	69c0      	ldr	r0, [r0, #28]
 800dad4:	432a      	orrs	r2, r5
 800dad6:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 800dad8:	f421 4116 	bic.w	r1, r1, #38400	@ 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800dadc:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800dade:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800dae2:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 800dae4:	430a      	orrs	r2, r1
 800dae6:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800dae8:	695a      	ldr	r2, [r3, #20]
 800daea:	69a1      	ldr	r1, [r4, #24]
 800daec:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800daf0:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800daf2:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800daf6:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800daf8:	4a83      	ldr	r2, [pc, #524]	@ (800dd08 <UART_SetConfig+0x250>)
 800dafa:	f040 8085 	bne.w	800dc08 <UART_SetConfig+0x150>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
#if defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800dafe:	4293      	cmp	r3, r2
 800db00:	d003      	beq.n	800db0a <UART_SetConfig+0x52>
 800db02:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800db06:	4293      	cmp	r3, r2
 800db08:	d149      	bne.n	800db9e <UART_SetConfig+0xe6>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800db0a:	f7ff f959 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800db0e:	6863      	ldr	r3, [r4, #4]
 800db10:	f04f 0919 	mov.w	r9, #25
 800db14:	005b      	lsls	r3, r3, #1
 800db16:	fb09 f700 	mul.w	r7, r9, r0
 800db1a:	fbb7 f7f3 	udiv	r7, r7, r3
 800db1e:	f7ff f94f 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800db22:	6863      	ldr	r3, [r4, #4]
 800db24:	fb09 f500 	mul.w	r5, r9, r0
 800db28:	005b      	lsls	r3, r3, #1
 800db2a:	fbb5 f5f3 	udiv	r5, r5, r3
 800db2e:	f7ff f947 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800db32:	6863      	ldr	r3, [r4, #4]
 800db34:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800db38:	005b      	lsls	r3, r3, #1
 800db3a:	fb09 f000 	mul.w	r0, r9, r0
 800db3e:	fbb0 f0f3 	udiv	r0, r0, r3
 800db42:	fbb0 f0f8 	udiv	r0, r0, r8
 800db46:	fb08 5610 	mls	r6, r8, r0, r5
 800db4a:	f7ff f939 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800db4e:	fbb7 f7f8 	udiv	r7, r7, r8
 800db52:	6863      	ldr	r3, [r4, #4]
 800db54:	00f6      	lsls	r6, r6, #3
 800db56:	3632      	adds	r6, #50	@ 0x32
 800db58:	fbb6 f6f8 	udiv	r6, r6, r8
 800db5c:	0076      	lsls	r6, r6, #1
 800db5e:	fb09 f500 	mul.w	r5, r9, r0
 800db62:	005b      	lsls	r3, r3, #1
 800db64:	013f      	lsls	r7, r7, #4
 800db66:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800db6a:	fbb5 f5f3 	udiv	r5, r5, r3
 800db6e:	f7ff f927 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800db72:	6863      	ldr	r3, [r4, #4]
 800db74:	6822      	ldr	r2, [r4, #0]
 800db76:	005b      	lsls	r3, r3, #1
 800db78:	fb09 f000 	mul.w	r0, r9, r0
 800db7c:	fbb0 f0f3 	udiv	r0, r0, r3
 800db80:	fbb0 f0f8 	udiv	r0, r0, r8
 800db84:	fb08 5310 	mls	r3, r8, r0, r5
 800db88:	00db      	lsls	r3, r3, #3
 800db8a:	3332      	adds	r3, #50	@ 0x32
 800db8c:	fbb3 f3f8 	udiv	r3, r3, r8
 800db90:	f003 0307 	and.w	r3, r3, #7
 800db94:	443b      	add	r3, r7
 800db96:	4433      	add	r3, r6
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800db98:	6093      	str	r3, [r2, #8]
    }
  }
}
 800db9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800db9e:	f7ff f8ff 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dba2:	6863      	ldr	r3, [r4, #4]
 800dba4:	f04f 0919 	mov.w	r9, #25
 800dba8:	fb09 f700 	mul.w	r7, r9, r0
 800dbac:	005b      	lsls	r3, r3, #1
 800dbae:	fbb7 f7f3 	udiv	r7, r7, r3
 800dbb2:	f7ff f8f5 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dbb6:	6863      	ldr	r3, [r4, #4]
 800dbb8:	fb09 f500 	mul.w	r5, r9, r0
 800dbbc:	005b      	lsls	r3, r3, #1
 800dbbe:	fbb5 f5f3 	udiv	r5, r5, r3
 800dbc2:	f7ff f8ed 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dbc6:	6863      	ldr	r3, [r4, #4]
 800dbc8:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800dbcc:	005b      	lsls	r3, r3, #1
 800dbce:	fb09 f000 	mul.w	r0, r9, r0
 800dbd2:	fbb0 f0f3 	udiv	r0, r0, r3
 800dbd6:	fbb0 f0f8 	udiv	r0, r0, r8
 800dbda:	fb08 5610 	mls	r6, r8, r0, r5
 800dbde:	f7ff f8df 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dbe2:	fbb7 f7f8 	udiv	r7, r7, r8
 800dbe6:	6863      	ldr	r3, [r4, #4]
 800dbe8:	00f6      	lsls	r6, r6, #3
 800dbea:	3632      	adds	r6, #50	@ 0x32
 800dbec:	fbb6 f6f8 	udiv	r6, r6, r8
 800dbf0:	0076      	lsls	r6, r6, #1
 800dbf2:	fb09 f500 	mul.w	r5, r9, r0
 800dbf6:	005b      	lsls	r3, r3, #1
 800dbf8:	013f      	lsls	r7, r7, #4
 800dbfa:	f406 76f8 	and.w	r6, r6, #496	@ 0x1f0
 800dbfe:	fbb5 f5f3 	udiv	r5, r5, r3
 800dc02:	f7ff f8cd 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dc06:	e7b4      	b.n	800db72 <UART_SetConfig+0xba>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800dc08:	4293      	cmp	r3, r2
 800dc0a:	d002      	beq.n	800dc12 <UART_SetConfig+0x15a>
 800dc0c:	4a3f      	ldr	r2, [pc, #252]	@ (800dd0c <UART_SetConfig+0x254>)
 800dc0e:	4293      	cmp	r3, r2
 800dc10:	d146      	bne.n	800dca0 <UART_SetConfig+0x1e8>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 800dc12:	f7ff f8d5 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800dc16:	6863      	ldr	r3, [r4, #4]
 800dc18:	f04f 0919 	mov.w	r9, #25
 800dc1c:	009b      	lsls	r3, r3, #2
 800dc1e:	fb09 f700 	mul.w	r7, r9, r0
 800dc22:	fbb7 f7f3 	udiv	r7, r7, r3
 800dc26:	f7ff f8cb 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800dc2a:	6863      	ldr	r3, [r4, #4]
 800dc2c:	fb09 f500 	mul.w	r5, r9, r0
 800dc30:	009b      	lsls	r3, r3, #2
 800dc32:	fbb5 f5f3 	udiv	r5, r5, r3
 800dc36:	f7ff f8c3 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800dc3a:	6863      	ldr	r3, [r4, #4]
 800dc3c:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800dc40:	009b      	lsls	r3, r3, #2
 800dc42:	fb09 f000 	mul.w	r0, r9, r0
 800dc46:	fbb0 f0f3 	udiv	r0, r0, r3
 800dc4a:	fbb0 f0f8 	udiv	r0, r0, r8
 800dc4e:	fb08 5610 	mls	r6, r8, r0, r5
 800dc52:	f7ff f8b5 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
 800dc56:	fbb7 f7f8 	udiv	r7, r7, r8
 800dc5a:	6863      	ldr	r3, [r4, #4]
 800dc5c:	0136      	lsls	r6, r6, #4
 800dc5e:	3632      	adds	r6, #50	@ 0x32
 800dc60:	fb09 f500 	mul.w	r5, r9, r0
 800dc64:	009b      	lsls	r3, r3, #2
 800dc66:	fbb6 f6f8 	udiv	r6, r6, r8
 800dc6a:	013f      	lsls	r7, r7, #4
 800dc6c:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800dc70:	fbb5 f5f3 	udiv	r5, r5, r3
 800dc74:	f7ff f8a4 	bl	800cdc0 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800dc78:	6863      	ldr	r3, [r4, #4]
 800dc7a:	6822      	ldr	r2, [r4, #0]
 800dc7c:	009b      	lsls	r3, r3, #2
 800dc7e:	fb09 f000 	mul.w	r0, r9, r0
 800dc82:	fbb0 f0f3 	udiv	r0, r0, r3
 800dc86:	fbb0 f0f8 	udiv	r0, r0, r8
 800dc8a:	fb08 5310 	mls	r3, r8, r0, r5
 800dc8e:	011b      	lsls	r3, r3, #4
 800dc90:	3332      	adds	r3, #50	@ 0x32
 800dc92:	fbb3 f3f8 	udiv	r3, r3, r8
 800dc96:	f003 030f 	and.w	r3, r3, #15
 800dc9a:	4333      	orrs	r3, r6
 800dc9c:	443b      	add	r3, r7
 800dc9e:	e77b      	b.n	800db98 <UART_SetConfig+0xe0>
 800dca0:	f7ff f87e 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dca4:	6863      	ldr	r3, [r4, #4]
 800dca6:	f04f 0919 	mov.w	r9, #25
 800dcaa:	fb09 f700 	mul.w	r7, r9, r0
 800dcae:	009b      	lsls	r3, r3, #2
 800dcb0:	fbb7 f7f3 	udiv	r7, r7, r3
 800dcb4:	f7ff f874 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dcb8:	6863      	ldr	r3, [r4, #4]
 800dcba:	fb09 f500 	mul.w	r5, r9, r0
 800dcbe:	009b      	lsls	r3, r3, #2
 800dcc0:	fbb5 f5f3 	udiv	r5, r5, r3
 800dcc4:	f7ff f86c 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dcc8:	6863      	ldr	r3, [r4, #4]
 800dcca:	f04f 0864 	mov.w	r8, #100	@ 0x64
 800dcce:	009b      	lsls	r3, r3, #2
 800dcd0:	fb09 f000 	mul.w	r0, r9, r0
 800dcd4:	fbb0 f0f3 	udiv	r0, r0, r3
 800dcd8:	fbb0 f0f8 	udiv	r0, r0, r8
 800dcdc:	fb08 5610 	mls	r6, r8, r0, r5
 800dce0:	f7ff f85e 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dce4:	fbb7 f7f8 	udiv	r7, r7, r8
 800dce8:	6863      	ldr	r3, [r4, #4]
 800dcea:	0136      	lsls	r6, r6, #4
 800dcec:	fb09 f500 	mul.w	r5, r9, r0
 800dcf0:	009b      	lsls	r3, r3, #2
 800dcf2:	013f      	lsls	r7, r7, #4
 800dcf4:	3632      	adds	r6, #50	@ 0x32
 800dcf6:	fbb5 f5f3 	udiv	r5, r5, r3
 800dcfa:	fbb6 f6f8 	udiv	r6, r6, r8
 800dcfe:	f006 06f0 	and.w	r6, r6, #240	@ 0xf0
 800dd02:	f7ff f84d 	bl	800cda0 <HAL_RCC_GetPCLK1Freq>
 800dd06:	e7b7      	b.n	800dc78 <UART_SetConfig+0x1c0>
 800dd08:	40011000 	.word	0x40011000
 800dd0c:	40011400 	.word	0x40011400

0800dd10 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 800dd10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd12:	4604      	mov	r4, r0
 800dd14:	460e      	mov	r6, r1
 800dd16:	4617      	mov	r7, r2
 800dd18:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800dd1a:	6822      	ldr	r2, [r4, #0]
 800dd1c:	6813      	ldr	r3, [r2, #0]
 800dd1e:	ea36 0303 	bics.w	r3, r6, r3
 800dd22:	d101      	bne.n	800dd28 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 800dd24:	2000      	movs	r0, #0
 800dd26:	e014      	b.n	800dd52 <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
    if (Timeout != HAL_MAX_DELAY)
 800dd28:	1c6b      	adds	r3, r5, #1
 800dd2a:	d0f7      	beq.n	800dd1c <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800dd2c:	b995      	cbnz	r5, 800dd54 <UART_WaitOnFlagUntilTimeout.constprop.0+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800dd2e:	6823      	ldr	r3, [r4, #0]
 800dd30:	68da      	ldr	r2, [r3, #12]
 800dd32:	f422 72d0 	bic.w	r2, r2, #416	@ 0x1a0
 800dd36:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800dd38:	695a      	ldr	r2, [r3, #20]
 800dd3a:	f022 0201 	bic.w	r2, r2, #1
 800dd3e:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 800dd40:	2320      	movs	r3, #32
 800dd42:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
        huart->RxState = HAL_UART_STATE_READY;
 800dd46:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
        __HAL_UNLOCK(huart);
 800dd4a:	2300      	movs	r3, #0
 800dd4c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 800dd50:	2003      	movs	r0, #3
}
 800dd52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800dd54:	f7fd faba 	bl	800b2cc <HAL_GetTick>
 800dd58:	1bc0      	subs	r0, r0, r7
 800dd5a:	4285      	cmp	r5, r0
 800dd5c:	d2dd      	bcs.n	800dd1a <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 800dd5e:	e7e6      	b.n	800dd2e <UART_WaitOnFlagUntilTimeout.constprop.0+0x1e>

0800dd60 <HAL_UART_MspInit>:
}
 800dd60:	4770      	bx	lr

0800dd62 <HAL_UART_Init>:
{
 800dd62:	b510      	push	{r4, lr}
  if (huart == NULL)
 800dd64:	4604      	mov	r4, r0
 800dd66:	b340      	cbz	r0, 800ddba <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800dd68:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800dd6c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800dd70:	b91b      	cbnz	r3, 800dd7a <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800dd72:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    HAL_UART_MspInit(huart);
 800dd76:	f7ff fff3 	bl	800dd60 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 800dd7a:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800dd7c:	2324      	movs	r3, #36	@ 0x24
 800dd7e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  __HAL_UART_DISABLE(huart);
 800dd82:	68d3      	ldr	r3, [r2, #12]
 800dd84:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800dd88:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 800dd8a:	4620      	mov	r0, r4
 800dd8c:	f7ff fe94 	bl	800dab8 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800dd90:	6823      	ldr	r3, [r4, #0]
 800dd92:	691a      	ldr	r2, [r3, #16]
 800dd94:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800dd98:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800dd9a:	695a      	ldr	r2, [r3, #20]
 800dd9c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800dda0:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800dda2:	68da      	ldr	r2, [r3, #12]
 800dda4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800dda8:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ddaa:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800ddac:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ddae:	63e0      	str	r0, [r4, #60]	@ 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800ddb0:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800ddb4:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
}
 800ddb8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ddba:	2001      	movs	r0, #1
 800ddbc:	e7fc      	b.n	800ddb8 <HAL_UART_Init+0x56>

0800ddbe <HAL_UART_Transmit>:
{
 800ddbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ddc2:	461f      	mov	r7, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800ddc4:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800ddc8:	2b20      	cmp	r3, #32
{
 800ddca:	4604      	mov	r4, r0
 800ddcc:	460d      	mov	r5, r1
 800ddce:	4690      	mov	r8, r2
  if (huart->gState == HAL_UART_STATE_READY)
 800ddd0:	d14f      	bne.n	800de72 <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 800ddd2:	2900      	cmp	r1, #0
 800ddd4:	d04b      	beq.n	800de6e <HAL_UART_Transmit+0xb0>
 800ddd6:	2a00      	cmp	r2, #0
 800ddd8:	d049      	beq.n	800de6e <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 800ddda:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 800ddde:	2b01      	cmp	r3, #1
 800dde0:	d047      	beq.n	800de72 <HAL_UART_Transmit+0xb4>
 800dde2:	2301      	movs	r3, #1
 800dde4:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800dde8:	2300      	movs	r3, #0
 800ddea:	63c3      	str	r3, [r0, #60]	@ 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ddec:	2321      	movs	r3, #33	@ 0x21
 800ddee:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
    tickstart = HAL_GetTick();
 800ddf2:	f7fd fa6b 	bl	800b2cc <HAL_GetTick>
    huart->TxXferSize = Size;
 800ddf6:	f8a4 8024 	strh.w	r8, [r4, #36]	@ 0x24
    tickstart = HAL_GetTick();
 800ddfa:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 800ddfc:	f8a4 8026 	strh.w	r8, [r4, #38]	@ 0x26
    while (huart->TxXferCount > 0U)
 800de00:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800de02:	b29b      	uxth	r3, r3
 800de04:	b963      	cbnz	r3, 800de20 <HAL_UART_Transmit+0x62>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800de06:	463b      	mov	r3, r7
 800de08:	4632      	mov	r2, r6
 800de0a:	2140      	movs	r1, #64	@ 0x40
 800de0c:	4620      	mov	r0, r4
 800de0e:	f7ff ff7f 	bl	800dd10 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800de12:	b9a8      	cbnz	r0, 800de40 <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
 800de14:	2320      	movs	r3, #32
 800de16:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    __HAL_UNLOCK(huart);
 800de1a:	f884 0038 	strb.w	r0, [r4, #56]	@ 0x38
    return HAL_OK;
 800de1e:	e010      	b.n	800de42 <HAL_UART_Transmit+0x84>
      huart->TxXferCount--;
 800de20:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 800de22:	3b01      	subs	r3, #1
 800de24:	b29b      	uxth	r3, r3
 800de26:	84e3      	strh	r3, [r4, #38]	@ 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800de28:	68a3      	ldr	r3, [r4, #8]
 800de2a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800de2e:	4632      	mov	r2, r6
 800de30:	463b      	mov	r3, r7
 800de32:	f04f 0180 	mov.w	r1, #128	@ 0x80
 800de36:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800de38:	d110      	bne.n	800de5c <HAL_UART_Transmit+0x9e>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800de3a:	f7ff ff69 	bl	800dd10 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800de3e:	b110      	cbz	r0, 800de46 <HAL_UART_Transmit+0x88>
          return HAL_TIMEOUT;
 800de40:	2003      	movs	r0, #3
}
 800de42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 800de46:	882b      	ldrh	r3, [r5, #0]
 800de48:	6822      	ldr	r2, [r4, #0]
 800de4a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800de4e:	6053      	str	r3, [r2, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800de50:	6923      	ldr	r3, [r4, #16]
 800de52:	b90b      	cbnz	r3, 800de58 <HAL_UART_Transmit+0x9a>
          pData += 2U;
 800de54:	3502      	adds	r5, #2
 800de56:	e7d3      	b.n	800de00 <HAL_UART_Transmit+0x42>
          pData += 1U;
 800de58:	3501      	adds	r5, #1
 800de5a:	e7d1      	b.n	800de00 <HAL_UART_Transmit+0x42>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800de5c:	f7ff ff58 	bl	800dd10 <UART_WaitOnFlagUntilTimeout.constprop.0>
 800de60:	2800      	cmp	r0, #0
 800de62:	d1ed      	bne.n	800de40 <HAL_UART_Transmit+0x82>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 800de64:	6823      	ldr	r3, [r4, #0]
 800de66:	f815 2b01 	ldrb.w	r2, [r5], #1
 800de6a:	605a      	str	r2, [r3, #4]
 800de6c:	e7c8      	b.n	800de00 <HAL_UART_Transmit+0x42>
      return  HAL_ERROR;
 800de6e:	2001      	movs	r0, #1
 800de70:	e7e7      	b.n	800de42 <HAL_UART_Transmit+0x84>
    __HAL_LOCK(huart);
 800de72:	2002      	movs	r0, #2
 800de74:	e7e5      	b.n	800de42 <HAL_UART_Transmit+0x84>

0800de76 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800de76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800de7a:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800de7e:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800de82:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800de86:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800de8a:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800de8e:	6809      	ldr	r1, [r1, #0]
 800de90:	ea43 0308 	orr.w	r3, r3, r8
 800de94:	b981      	cbnz	r1, 800deb8 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800de96:	ea43 030e 	orr.w	r3, r3, lr
 800de9a:	4313      	orrs	r3, r2
 800de9c:	ea43 030c 	orr.w	r3, r3, ip
 800dea0:	433b      	orrs	r3, r7
 800dea2:	6801      	ldr	r1, [r0, #0]
 800dea4:	4333      	orrs	r3, r6
 800dea6:	432b      	orrs	r3, r5
 800dea8:	4323      	orrs	r3, r4
 800deaa:	f36f 010e 	bfc	r1, #0, #15
 800deae:	430b      	orrs	r3, r1
 800deb0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800deb2:	2000      	movs	r0, #0
 800deb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800deb8:	6801      	ldr	r1, [r0, #0]
 800deba:	ea43 030e 	orr.w	r3, r3, lr
 800debe:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800dec2:	430b      	orrs	r3, r1
 800dec4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800dec6:	ea42 030c 	orr.w	r3, r2, ip
 800deca:	6841      	ldr	r1, [r0, #4]
 800decc:	433b      	orrs	r3, r7
 800dece:	4333      	orrs	r3, r6
 800ded0:	432b      	orrs	r3, r5
 800ded2:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800ded6:	4323      	orrs	r3, r4
 800ded8:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800dedc:	4313      	orrs	r3, r2
 800dede:	6043      	str	r3, [r0, #4]
 800dee0:	e7e7      	b.n	800deb2 <FMC_SDRAM_Init+0x3c>

0800dee2 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800dee2:	68cb      	ldr	r3, [r1, #12]
 800dee4:	f103 3cff 	add.w	ip, r3, #4294967295
 800dee8:	694b      	ldr	r3, [r1, #20]
{
 800deea:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800deec:	684c      	ldr	r4, [r1, #4]
 800deee:	688f      	ldr	r7, [r1, #8]
 800def0:	690e      	ldr	r6, [r1, #16]
 800def2:	698d      	ldr	r5, [r1, #24]
 800def4:	6809      	ldr	r1, [r1, #0]
 800def6:	3b01      	subs	r3, #1
 800def8:	051b      	lsls	r3, r3, #20
 800defa:	3c01      	subs	r4, #1
 800defc:	3f01      	subs	r7, #1
 800defe:	3e01      	subs	r6, #1
 800df00:	3d01      	subs	r5, #1
 800df02:	0124      	lsls	r4, r4, #4
 800df04:	023f      	lsls	r7, r7, #8
 800df06:	0436      	lsls	r6, r6, #16
 800df08:	062d      	lsls	r5, r5, #24
 800df0a:	3901      	subs	r1, #1
 800df0c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800df10:	b95a      	cbnz	r2, 800df2a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800df12:	430b      	orrs	r3, r1
 800df14:	4323      	orrs	r3, r4
 800df16:	6882      	ldr	r2, [r0, #8]
 800df18:	433b      	orrs	r3, r7
 800df1a:	4333      	orrs	r3, r6
 800df1c:	432b      	orrs	r3, r5
 800df1e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800df22:	4313      	orrs	r3, r2
 800df24:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800df26:	2000      	movs	r0, #0
 800df28:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800df2a:	6882      	ldr	r2, [r0, #8]
 800df2c:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800df30:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800df34:	4313      	orrs	r3, r2
 800df36:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800df38:	ea44 0307 	orr.w	r3, r4, r7
 800df3c:	68c2      	ldr	r2, [r0, #12]
 800df3e:	430b      	orrs	r3, r1
 800df40:	4333      	orrs	r3, r6
 800df42:	432b      	orrs	r3, r5
 800df44:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800df48:	4313      	orrs	r3, r2
 800df4a:	60c3      	str	r3, [r0, #12]
 800df4c:	e7eb      	b.n	800df26 <FMC_SDRAM_Timing_Init+0x44>

0800df4e <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800df4e:	b570      	push	{r4, r5, r6, lr}
 800df50:	4604      	mov	r4, r0
 800df52:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800df54:	6902      	ldr	r2, [r0, #16]
 800df56:	e9d1 3000 	ldrd	r3, r0, [r1]
 800df5a:	4303      	orrs	r3, r0
 800df5c:	68c8      	ldr	r0, [r1, #12]
 800df5e:	f36f 0215 	bfc	r2, #0, #22
 800df62:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800df66:	4313      	orrs	r3, r2
 800df68:	688a      	ldr	r2, [r1, #8]
 800df6a:	3a01      	subs	r2, #1
 800df6c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800df70:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800df72:	f7fd f9ab 	bl	800b2cc <HAL_GetTick>
 800df76:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800df78:	69a0      	ldr	r0, [r4, #24]
 800df7a:	f010 0020 	ands.w	r0, r0, #32
 800df7e:	d003      	beq.n	800df88 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800df80:	1c6b      	adds	r3, r5, #1
 800df82:	d0f9      	beq.n	800df78 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800df84:	b90d      	cbnz	r5, 800df8a <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800df86:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800df88:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800df8a:	f7fd f99f 	bl	800b2cc <HAL_GetTick>
 800df8e:	1b80      	subs	r0, r0, r6
 800df90:	42a8      	cmp	r0, r5
 800df92:	d9f1      	bls.n	800df78 <FMC_SDRAM_SendCommand+0x2a>
 800df94:	e7f7      	b.n	800df86 <FMC_SDRAM_SendCommand+0x38>

0800df96 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800df96:	6943      	ldr	r3, [r0, #20]
 800df98:	f36f 034d 	bfc	r3, #1, #13
 800df9c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800dfa0:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800dfa2:	2000      	movs	r0, #0
 800dfa4:	4770      	bx	lr

0800dfa6 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800dfa6:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800dfa8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800dfac:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800dfae:	f001 fded 	bl	800fb8c <xTaskGetSchedulerState>
 800dfb2:	2801      	cmp	r0, #1
 800dfb4:	d003      	beq.n	800dfbe <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800dfb6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800dfba:	f000 bbdb 	b.w	800e774 <xPortSysTickHandler>
}
 800dfbe:	bd08      	pop	{r3, pc}

0800dfc0 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800dfc0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800dfc4:	b92b      	cbnz	r3, 800dfd2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800dfc6:	4b06      	ldr	r3, [pc, #24]	@ (800dfe0 <osKernelInitialize+0x20>)
 800dfc8:	6818      	ldr	r0, [r3, #0]
 800dfca:	b928      	cbnz	r0, 800dfd8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800dfcc:	2201      	movs	r2, #1
 800dfce:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800dfd0:	4770      	bx	lr
    stat = osErrorISR;
 800dfd2:	f06f 0005 	mvn.w	r0, #5
 800dfd6:	4770      	bx	lr
    } else {
      stat = osError;
 800dfd8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800dfdc:	4770      	bx	lr
 800dfde:	bf00      	nop
 800dfe0:	200038c0 	.word	0x200038c0

0800dfe4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800dfe4:	b510      	push	{r4, lr}
 800dfe6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800dfea:	b95c      	cbnz	r4, 800e004 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800dfec:	4b08      	ldr	r3, [pc, #32]	@ (800e010 <osKernelStart+0x2c>)
 800dfee:	681a      	ldr	r2, [r3, #0]
 800dff0:	2a01      	cmp	r2, #1
 800dff2:	d10a      	bne.n	800e00a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800dff4:	4a07      	ldr	r2, [pc, #28]	@ (800e014 <osKernelStart+0x30>)
 800dff6:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800dff8:	2202      	movs	r2, #2
 800dffa:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800dffc:	f001 fb44 	bl	800f688 <vTaskStartScheduler>
      stat = osOK;
 800e000:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800e002:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800e004:	f06f 0005 	mvn.w	r0, #5
 800e008:	e7fb      	b.n	800e002 <osKernelStart+0x1e>
      stat = osError;
 800e00a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800e00e:	e7f8      	b.n	800e002 <osKernelStart+0x1e>
 800e010:	200038c0 	.word	0x200038c0
 800e014:	e000ed00 	.word	0xe000ed00

0800e018 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e018:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e01a:	b087      	sub	sp, #28
 800e01c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800e01e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e020:	460b      	mov	r3, r1
  hTask = NULL;
 800e022:	9205      	str	r2, [sp, #20]
 800e024:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800e028:	b9fa      	cbnz	r2, 800e06a <osThreadNew+0x52>
 800e02a:	b1f0      	cbz	r0, 800e06a <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800e02c:	b354      	cbz	r4, 800e084 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800e02e:	69a5      	ldr	r5, [r4, #24]
 800e030:	b125      	cbz	r5, 800e03c <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e032:	1e69      	subs	r1, r5, #1
 800e034:	2937      	cmp	r1, #55	@ 0x37
 800e036:	d902      	bls.n	800e03e <osThreadNew+0x26>
        return (NULL);
 800e038:	2000      	movs	r0, #0
 800e03a:	e017      	b.n	800e06c <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800e03c:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e03e:	6862      	ldr	r2, [r4, #4]
 800e040:	07d2      	lsls	r2, r2, #31
 800e042:	d4f9      	bmi.n	800e038 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 800e044:	6966      	ldr	r6, [r4, #20]
 800e046:	b19e      	cbz	r6, 800e070 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800e048:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e04a:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800e04e:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e050:	b187      	cbz	r7, 800e074 <osThreadNew+0x5c>
 800e052:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800e056:	d908      	bls.n	800e06a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e058:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e05a:	b134      	cbz	r4, 800e06a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e05c:	b12e      	cbz	r6, 800e06a <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800e05e:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800e062:	9500      	str	r5, [sp, #0]
 800e064:	f001 faa9 	bl	800f5ba <xTaskCreateStatic>
 800e068:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800e06a:	9805      	ldr	r0, [sp, #20]
}
 800e06c:	b007      	add	sp, #28
 800e06e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800e070:	2280      	movs	r2, #128	@ 0x80
 800e072:	e7ea      	b.n	800e04a <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800e074:	f1bc 0f00 	cmp.w	ip, #0
 800e078:	d1f7      	bne.n	800e06a <osThreadNew+0x52>
 800e07a:	6924      	ldr	r4, [r4, #16]
 800e07c:	2c00      	cmp	r4, #0
 800e07e:	d1f4      	bne.n	800e06a <osThreadNew+0x52>
 800e080:	460c      	mov	r4, r1
 800e082:	e001      	b.n	800e088 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 800e084:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800e086:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800e088:	a905      	add	r1, sp, #20
 800e08a:	e9cd 5100 	strd	r5, r1, [sp]
 800e08e:	b292      	uxth	r2, r2
 800e090:	4621      	mov	r1, r4
 800e092:	f001 faca 	bl	800f62a <xTaskCreate>
 800e096:	2801      	cmp	r0, #1
            hTask = NULL;
 800e098:	bf1c      	itt	ne
 800e09a:	2300      	movne	r3, #0
 800e09c:	9305      	strne	r3, [sp, #20]
 800e09e:	e7e4      	b.n	800e06a <osThreadNew+0x52>

0800e0a0 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800e0a0:	b508      	push	{r3, lr}
 800e0a2:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e0a6:	b922      	cbnz	r2, 800e0b2 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800e0a8:	b108      	cbz	r0, 800e0ae <osDelay+0xe>
      vTaskDelay(ticks);
 800e0aa:	f001 fc4b 	bl	800f944 <vTaskDelay>
    stat = osOK;
 800e0ae:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800e0b0:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800e0b2:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800e0b6:	e7fb      	b.n	800e0b0 <osDelay+0x10>

0800e0b8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800e0b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e0ba:	4604      	mov	r4, r0
 800e0bc:	460e      	mov	r6, r1
 800e0be:	4615      	mov	r5, r2
 800e0c0:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800e0c4:	b942      	cbnz	r2, 800e0d8 <osSemaphoreNew+0x20>
 800e0c6:	b138      	cbz	r0, 800e0d8 <osSemaphoreNew+0x20>
 800e0c8:	4288      	cmp	r0, r1
 800e0ca:	d305      	bcc.n	800e0d8 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800e0cc:	b155      	cbz	r5, 800e0e4 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800e0ce:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800e0d2:	b12b      	cbz	r3, 800e0e0 <osSemaphoreNew+0x28>
 800e0d4:	2f4f      	cmp	r7, #79	@ 0x4f
 800e0d6:	d822      	bhi.n	800e11e <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800e0d8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800e0da:	4620      	mov	r0, r4
 800e0dc:	b003      	add	sp, #12
 800e0de:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800e0e0:	2f00      	cmp	r7, #0
 800e0e2:	d1f9      	bne.n	800e0d8 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800e0e4:	2c01      	cmp	r4, #1
 800e0e6:	d00c      	beq.n	800e102 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800e0e8:	4620      	mov	r0, r4
 800e0ea:	4631      	mov	r1, r6
 800e0ec:	f000 fd7a 	bl	800ebe4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800e0f0:	4604      	mov	r4, r0
 800e0f2:	2800      	cmp	r0, #0
 800e0f4:	d0f0      	beq.n	800e0d8 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800e0f6:	b985      	cbnz	r5, 800e11a <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800e0f8:	4629      	mov	r1, r5
 800e0fa:	4620      	mov	r0, r4
 800e0fc:	f001 f898 	bl	800f230 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800e100:	e7eb      	b.n	800e0da <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800e102:	2203      	movs	r2, #3
 800e104:	2100      	movs	r1, #0
 800e106:	2001      	movs	r0, #1
 800e108:	f000 fd23 	bl	800eb52 <xQueueGenericCreate>
 800e10c:	e00e      	b.n	800e12c <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800e10e:	461a      	mov	r2, r3
 800e110:	f000 fd46 	bl	800eba0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800e114:	4604      	mov	r4, r0
 800e116:	2800      	cmp	r0, #0
 800e118:	d0de      	beq.n	800e0d8 <osSemaphoreNew+0x20>
          name = attr->name;
 800e11a:	682d      	ldr	r5, [r5, #0]
 800e11c:	e7ec      	b.n	800e0f8 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800e11e:	2801      	cmp	r0, #1
 800e120:	d1f5      	bne.n	800e10e <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800e122:	2103      	movs	r1, #3
 800e124:	9100      	str	r1, [sp, #0]
 800e126:	4611      	mov	r1, r2
 800e128:	f000 fcc5 	bl	800eab6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800e12c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800e12e:	2800      	cmp	r0, #0
 800e130:	d0d2      	beq.n	800e0d8 <osSemaphoreNew+0x20>
 800e132:	2e00      	cmp	r6, #0
 800e134:	d0df      	beq.n	800e0f6 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e136:	2300      	movs	r3, #0
 800e138:	461a      	mov	r2, r3
 800e13a:	4619      	mov	r1, r3
 800e13c:	f000 fd70 	bl	800ec20 <xQueueGenericSend>
 800e140:	2801      	cmp	r0, #1
 800e142:	d0d8      	beq.n	800e0f6 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800e144:	4620      	mov	r0, r4
 800e146:	f001 f89d 	bl	800f284 <vQueueDelete>
      if (hSemaphore != NULL) {
 800e14a:	e7c5      	b.n	800e0d8 <osSemaphoreNew+0x20>

0800e14c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800e14c:	b513      	push	{r0, r1, r4, lr}
 800e14e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e150:	b328      	cbz	r0, 800e19e <osSemaphoreAcquire+0x52>
 800e152:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e156:	b1cb      	cbz	r3, 800e18c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800e158:	bb09      	cbnz	r1, 800e19e <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e15a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e15c:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e15e:	f001 f81a 	bl	800f196 <xQueueReceiveFromISR>
 800e162:	2801      	cmp	r0, #1
 800e164:	d003      	beq.n	800e16e <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800e166:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800e16a:	b002      	add	sp, #8
 800e16c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800e16e:	9b01      	ldr	r3, [sp, #4]
 800e170:	b90b      	cbnz	r3, 800e176 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800e172:	2000      	movs	r0, #0
 800e174:	e7f9      	b.n	800e16a <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800e176:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e17a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e17e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e182:	f3bf 8f4f 	dsb	sy
 800e186:	f3bf 8f6f 	isb	sy
 800e18a:	e7f2      	b.n	800e172 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800e18c:	f000 ff46 	bl	800f01c <xQueueSemaphoreTake>
 800e190:	2801      	cmp	r0, #1
 800e192:	d0ee      	beq.n	800e172 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800e194:	2c00      	cmp	r4, #0
 800e196:	d0e6      	beq.n	800e166 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800e198:	f06f 0001 	mvn.w	r0, #1
 800e19c:	e7e5      	b.n	800e16a <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800e19e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e1a2:	e7e2      	b.n	800e16a <osSemaphoreAcquire+0x1e>

0800e1a4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800e1a4:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e1a6:	b318      	cbz	r0, 800e1f0 <osSemaphoreRelease+0x4c>
 800e1a8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e1ac:	b1cb      	cbz	r3, 800e1e2 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800e1ae:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e1b0:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800e1b2:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e1b4:	f000 fe43 	bl	800ee3e <xQueueGiveFromISR>
 800e1b8:	2801      	cmp	r0, #1
 800e1ba:	d004      	beq.n	800e1c6 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800e1bc:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800e1c0:	b003      	add	sp, #12
 800e1c2:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800e1c6:	9b01      	ldr	r3, [sp, #4]
 800e1c8:	b14b      	cbz	r3, 800e1de <osSemaphoreRelease+0x3a>
 800e1ca:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e1ce:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e1d2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e1d6:	f3bf 8f4f 	dsb	sy
 800e1da:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800e1de:	2000      	movs	r0, #0
 800e1e0:	e7ee      	b.n	800e1c0 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e1e2:	461a      	mov	r2, r3
 800e1e4:	4619      	mov	r1, r3
 800e1e6:	f000 fd1b 	bl	800ec20 <xQueueGenericSend>
 800e1ea:	2801      	cmp	r0, #1
 800e1ec:	d0f7      	beq.n	800e1de <osSemaphoreRelease+0x3a>
 800e1ee:	e7e5      	b.n	800e1bc <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800e1f0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e1f4:	e7e4      	b.n	800e1c0 <osSemaphoreRelease+0x1c>

0800e1f6 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800e1f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e1f8:	4605      	mov	r5, r0
 800e1fa:	460e      	mov	r6, r1
 800e1fc:	4614      	mov	r4, r2
 800e1fe:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e202:	b11f      	cbz	r7, 800e20c <osMessageQueueNew+0x16>
  hQueue = NULL;
 800e204:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800e206:	4628      	mov	r0, r5
 800e208:	b003      	add	sp, #12
 800e20a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e20c:	2800      	cmp	r0, #0
 800e20e:	d0f9      	beq.n	800e204 <osMessageQueueNew+0xe>
 800e210:	2900      	cmp	r1, #0
 800e212:	d0f7      	beq.n	800e204 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800e214:	b1da      	cbz	r2, 800e24e <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e216:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800e21a:	b183      	cbz	r3, 800e23e <osMessageQueueNew+0x48>
 800e21c:	2a4f      	cmp	r2, #79	@ 0x4f
 800e21e:	d9f1      	bls.n	800e204 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e220:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e222:	2a00      	cmp	r2, #0
 800e224:	d0ee      	beq.n	800e204 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e226:	6966      	ldr	r6, [r4, #20]
 800e228:	434d      	muls	r5, r1
 800e22a:	42ae      	cmp	r6, r5
 800e22c:	d3ea      	bcc.n	800e204 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800e22e:	9700      	str	r7, [sp, #0]
 800e230:	f000 fc41 	bl	800eab6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800e234:	4605      	mov	r5, r0
 800e236:	2800      	cmp	r0, #0
 800e238:	d0e4      	beq.n	800e204 <osMessageQueueNew+0xe>
        name = attr->name;
 800e23a:	6824      	ldr	r4, [r4, #0]
 800e23c:	e011      	b.n	800e262 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800e23e:	2a00      	cmp	r2, #0
 800e240:	d1e0      	bne.n	800e204 <osMessageQueueNew+0xe>
 800e242:	6923      	ldr	r3, [r4, #16]
 800e244:	2b00      	cmp	r3, #0
 800e246:	d1dd      	bne.n	800e204 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800e248:	6963      	ldr	r3, [r4, #20]
 800e24a:	2b00      	cmp	r3, #0
 800e24c:	d1da      	bne.n	800e204 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800e24e:	4628      	mov	r0, r5
 800e250:	2200      	movs	r2, #0
 800e252:	4631      	mov	r1, r6
 800e254:	f000 fc7d 	bl	800eb52 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800e258:	4605      	mov	r5, r0
 800e25a:	2800      	cmp	r0, #0
 800e25c:	d0d2      	beq.n	800e204 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800e25e:	2c00      	cmp	r4, #0
 800e260:	d1eb      	bne.n	800e23a <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800e262:	4621      	mov	r1, r4
 800e264:	4628      	mov	r0, r5
 800e266:	f000 ffe3 	bl	800f230 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800e26a:	e7cc      	b.n	800e206 <osMessageQueueNew+0x10>

0800e26c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800e26c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e26e:	461c      	mov	r4, r3
 800e270:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e274:	b1de      	cbz	r6, 800e2ae <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e276:	b338      	cbz	r0, 800e2c8 <osMessageQueuePut+0x5c>
 800e278:	b331      	cbz	r1, 800e2c8 <osMessageQueuePut+0x5c>
 800e27a:	bb2b      	cbnz	r3, 800e2c8 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e27c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e27e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e280:	f000 fd80 	bl	800ed84 <xQueueGenericSendFromISR>
 800e284:	2801      	cmp	r0, #1
 800e286:	d003      	beq.n	800e290 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800e288:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800e28c:	b002      	add	sp, #8
 800e28e:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800e290:	9b01      	ldr	r3, [sp, #4]
 800e292:	b90b      	cbnz	r3, 800e298 <osMessageQueuePut+0x2c>
  stat = osOK;
 800e294:	2000      	movs	r0, #0
 800e296:	e7f9      	b.n	800e28c <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800e298:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e29c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e2a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e2a4:	f3bf 8f4f 	dsb	sy
 800e2a8:	f3bf 8f6f 	isb	sy
 800e2ac:	e7f2      	b.n	800e294 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e2ae:	b158      	cbz	r0, 800e2c8 <osMessageQueuePut+0x5c>
 800e2b0:	b151      	cbz	r1, 800e2c8 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e2b2:	4633      	mov	r3, r6
 800e2b4:	4622      	mov	r2, r4
 800e2b6:	f000 fcb3 	bl	800ec20 <xQueueGenericSend>
 800e2ba:	2801      	cmp	r0, #1
 800e2bc:	d0ea      	beq.n	800e294 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800e2be:	2c00      	cmp	r4, #0
 800e2c0:	d0e2      	beq.n	800e288 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800e2c2:	f06f 0001 	mvn.w	r0, #1
 800e2c6:	e7e1      	b.n	800e28c <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800e2c8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e2cc:	e7de      	b.n	800e28c <osMessageQueuePut+0x20>

0800e2ce <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800e2ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e2d0:	461c      	mov	r4, r3
 800e2d2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e2d6:	b1db      	cbz	r3, 800e310 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e2d8:	b330      	cbz	r0, 800e328 <osMessageQueueGet+0x5a>
 800e2da:	b329      	cbz	r1, 800e328 <osMessageQueueGet+0x5a>
 800e2dc:	bb24      	cbnz	r4, 800e328 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e2de:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e2e0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e2e2:	f000 ff58 	bl	800f196 <xQueueReceiveFromISR>
 800e2e6:	2801      	cmp	r0, #1
 800e2e8:	d003      	beq.n	800e2f2 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800e2ea:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800e2ee:	b003      	add	sp, #12
 800e2f0:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800e2f2:	9b01      	ldr	r3, [sp, #4]
 800e2f4:	b90b      	cbnz	r3, 800e2fa <osMessageQueueGet+0x2c>
  stat = osOK;
 800e2f6:	2000      	movs	r0, #0
 800e2f8:	e7f9      	b.n	800e2ee <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800e2fa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e2fe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e302:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e306:	f3bf 8f4f 	dsb	sy
 800e30a:	f3bf 8f6f 	isb	sy
 800e30e:	e7f2      	b.n	800e2f6 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e310:	b150      	cbz	r0, 800e328 <osMessageQueueGet+0x5a>
 800e312:	b149      	cbz	r1, 800e328 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e314:	4622      	mov	r2, r4
 800e316:	f000 fde3 	bl	800eee0 <xQueueReceive>
 800e31a:	2801      	cmp	r0, #1
 800e31c:	d0eb      	beq.n	800e2f6 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800e31e:	2c00      	cmp	r4, #0
 800e320:	d0e3      	beq.n	800e2ea <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800e322:	f06f 0001 	mvn.w	r0, #1
 800e326:	e7e2      	b.n	800e2ee <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800e328:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e32c:	e7df      	b.n	800e2ee <osMessageQueueGet+0x20>
	...

0800e330 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800e330:	4b03      	ldr	r3, [pc, #12]	@ (800e340 <vApplicationGetIdleTaskMemory+0x10>)
 800e332:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800e334:	4b03      	ldr	r3, [pc, #12]	@ (800e344 <vApplicationGetIdleTaskMemory+0x14>)
 800e336:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800e338:	2380      	movs	r3, #128	@ 0x80
 800e33a:	6013      	str	r3, [r2, #0]
}
 800e33c:	4770      	bx	lr
 800e33e:	bf00      	nop
 800e340:	20003860 	.word	0x20003860
 800e344:	20003660 	.word	0x20003660

0800e348 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800e348:	4b03      	ldr	r3, [pc, #12]	@ (800e358 <vApplicationGetTimerTaskMemory+0x10>)
 800e34a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800e34c:	4b03      	ldr	r3, [pc, #12]	@ (800e35c <vApplicationGetTimerTaskMemory+0x14>)
 800e34e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800e350:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e354:	6013      	str	r3, [r2, #0]
}
 800e356:	4770      	bx	lr
 800e358:	20003600 	.word	0x20003600
 800e35c:	20003200 	.word	0x20003200

0800e360 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800e360:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e362:	4b10      	ldr	r3, [pc, #64]	@ (800e3a4 <prvInsertBlockIntoFreeList+0x44>)
 800e364:	461a      	mov	r2, r3
 800e366:	681b      	ldr	r3, [r3, #0]
 800e368:	4283      	cmp	r3, r0
 800e36a:	d3fb      	bcc.n	800e364 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e36c:	6854      	ldr	r4, [r2, #4]
 800e36e:	1911      	adds	r1, r2, r4
 800e370:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e372:	bf01      	itttt	eq
 800e374:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800e376:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e378:	1909      	addeq	r1, r1, r4
 800e37a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e37c:	6844      	ldr	r4, [r0, #4]
 800e37e:	1901      	adds	r1, r0, r4
 800e380:	428b      	cmp	r3, r1
 800e382:	d10c      	bne.n	800e39e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e384:	4908      	ldr	r1, [pc, #32]	@ (800e3a8 <prvInsertBlockIntoFreeList+0x48>)
 800e386:	6809      	ldr	r1, [r1, #0]
 800e388:	428b      	cmp	r3, r1
 800e38a:	d003      	beq.n	800e394 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e38c:	6859      	ldr	r1, [r3, #4]
 800e38e:	4421      	add	r1, r4
 800e390:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e392:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800e394:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800e396:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e398:	bf18      	it	ne
 800e39a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e39c:	bd10      	pop	{r4, pc}
 800e39e:	4619      	mov	r1, r3
 800e3a0:	e7f8      	b.n	800e394 <prvInsertBlockIntoFreeList+0x34>
 800e3a2:	bf00      	nop
 800e3a4:	200038dc 	.word	0x200038dc
 800e3a8:	200038d8 	.word	0x200038d8

0800e3ac <pvPortMalloc>:
{
 800e3ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3b0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800e3b2:	f001 f9af 	bl	800f714 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800e3b6:	4942      	ldr	r1, [pc, #264]	@ (800e4c0 <pvPortMalloc+0x114>)
 800e3b8:	4d42      	ldr	r5, [pc, #264]	@ (800e4c4 <pvPortMalloc+0x118>)
 800e3ba:	680b      	ldr	r3, [r1, #0]
 800e3bc:	bb0b      	cbnz	r3, 800e402 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800e3be:	4a42      	ldr	r2, [pc, #264]	@ (800e4c8 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e3c0:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e3c2:	bf1f      	itttt	ne
 800e3c4:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e3c6:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800e3ca:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800e3ce:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800e3d0:	bf0c      	ite	eq
 800e3d2:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e3d6:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800e3d8:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e3da:	4e3c      	ldr	r6, [pc, #240]	@ (800e4cc <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800e3dc:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e3de:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800e3e2:	2000      	movs	r0, #0
 800e3e4:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e3e6:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e3e8:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e3ec:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e3ee:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800e3f2:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e3f4:	4b36      	ldr	r3, [pc, #216]	@ (800e4d0 <pvPortMalloc+0x124>)
 800e3f6:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e3f8:	4b36      	ldr	r3, [pc, #216]	@ (800e4d4 <pvPortMalloc+0x128>)
 800e3fa:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e3fc:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800e400:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800e402:	682e      	ldr	r6, [r5, #0]
 800e404:	4226      	tst	r6, r4
 800e406:	d155      	bne.n	800e4b4 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800e408:	2c00      	cmp	r4, #0
 800e40a:	d046      	beq.n	800e49a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800e40c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800e410:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800e412:	bf1c      	itt	ne
 800e414:	f023 0307 	bicne.w	r3, r3, #7
 800e418:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800e41a:	2b00      	cmp	r3, #0
 800e41c:	d04a      	beq.n	800e4b4 <pvPortMalloc+0x108>
 800e41e:	4f2d      	ldr	r7, [pc, #180]	@ (800e4d4 <pvPortMalloc+0x128>)
 800e420:	683c      	ldr	r4, [r7, #0]
 800e422:	429c      	cmp	r4, r3
 800e424:	d346      	bcc.n	800e4b4 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800e426:	4a29      	ldr	r2, [pc, #164]	@ (800e4cc <pvPortMalloc+0x120>)
 800e428:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800e42a:	6868      	ldr	r0, [r5, #4]
 800e42c:	4298      	cmp	r0, r3
 800e42e:	d204      	bcs.n	800e43a <pvPortMalloc+0x8e>
 800e430:	f8d5 c000 	ldr.w	ip, [r5]
 800e434:	f1bc 0f00 	cmp.w	ip, #0
 800e438:	d115      	bne.n	800e466 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800e43a:	6809      	ldr	r1, [r1, #0]
 800e43c:	42a9      	cmp	r1, r5
 800e43e:	d039      	beq.n	800e4b4 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e440:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e442:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e446:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e448:	1ac2      	subs	r2, r0, r3
 800e44a:	2a10      	cmp	r2, #16
 800e44c:	d912      	bls.n	800e474 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800e44e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800e450:	0741      	lsls	r1, r0, #29
 800e452:	d00b      	beq.n	800e46c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800e454:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e458:	f383 8811 	msr	BASEPRI, r3
 800e45c:	f3bf 8f6f 	isb	sy
 800e460:	f3bf 8f4f 	dsb	sy
 800e464:	e7fe      	b.n	800e464 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800e466:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800e468:	4665      	mov	r5, ip
 800e46a:	e7de      	b.n	800e42a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800e46c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800e46e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800e470:	f7ff ff76 	bl	800e360 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e474:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e476:	4916      	ldr	r1, [pc, #88]	@ (800e4d0 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e478:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e47a:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800e47c:	4a16      	ldr	r2, [pc, #88]	@ (800e4d8 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e47e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e480:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800e482:	2300      	movs	r3, #0
 800e484:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800e486:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e488:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e48a:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800e48c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e490:	bf38      	it	cc
 800e492:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 800e494:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e496:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800e49a:	f001 f9df 	bl	800f85c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e49e:	0763      	lsls	r3, r4, #29
 800e4a0:	d00a      	beq.n	800e4b8 <pvPortMalloc+0x10c>
 800e4a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4a6:	f383 8811 	msr	BASEPRI, r3
 800e4aa:	f3bf 8f6f 	isb	sy
 800e4ae:	f3bf 8f4f 	dsb	sy
 800e4b2:	e7fe      	b.n	800e4b2 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800e4b4:	2400      	movs	r4, #0
 800e4b6:	e7f0      	b.n	800e49a <pvPortMalloc+0xee>
}
 800e4b8:	4620      	mov	r0, r4
 800e4ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4be:	bf00      	nop
 800e4c0:	200038d8 	.word	0x200038d8
 800e4c4:	200038c4 	.word	0x200038c4
 800e4c8:	200038e4 	.word	0x200038e4
 800e4cc:	200038dc 	.word	0x200038dc
 800e4d0:	200038d0 	.word	0x200038d0
 800e4d4:	200038d4 	.word	0x200038d4
 800e4d8:	200038cc 	.word	0x200038cc

0800e4dc <vPortFree>:
{
 800e4dc:	b510      	push	{r4, lr}
	if( pv != NULL )
 800e4de:	4604      	mov	r4, r0
 800e4e0:	b390      	cbz	r0, 800e548 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e4e2:	4a1a      	ldr	r2, [pc, #104]	@ (800e54c <vPortFree+0x70>)
 800e4e4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e4e8:	6812      	ldr	r2, [r2, #0]
 800e4ea:	4213      	tst	r3, r2
 800e4ec:	d108      	bne.n	800e500 <vPortFree+0x24>
 800e4ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e4f2:	f383 8811 	msr	BASEPRI, r3
 800e4f6:	f3bf 8f6f 	isb	sy
 800e4fa:	f3bf 8f4f 	dsb	sy
 800e4fe:	e7fe      	b.n	800e4fe <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800e500:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e504:	b141      	cbz	r1, 800e518 <vPortFree+0x3c>
 800e506:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e50a:	f383 8811 	msr	BASEPRI, r3
 800e50e:	f3bf 8f6f 	isb	sy
 800e512:	f3bf 8f4f 	dsb	sy
 800e516:	e7fe      	b.n	800e516 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e518:	ea23 0302 	bic.w	r3, r3, r2
 800e51c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800e520:	f001 f8f8 	bl	800f714 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e524:	4a0a      	ldr	r2, [pc, #40]	@ (800e550 <vPortFree+0x74>)
 800e526:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e52a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800e52c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e530:	440b      	add	r3, r1
 800e532:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800e534:	f7ff ff14 	bl	800e360 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800e538:	4a06      	ldr	r2, [pc, #24]	@ (800e554 <vPortFree+0x78>)
 800e53a:	6813      	ldr	r3, [r2, #0]
}
 800e53c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800e540:	3301      	adds	r3, #1
 800e542:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800e544:	f001 b98a 	b.w	800f85c <xTaskResumeAll>
}
 800e548:	bd10      	pop	{r4, pc}
 800e54a:	bf00      	nop
 800e54c:	200038c4 	.word	0x200038c4
 800e550:	200038d4 	.word	0x200038d4
 800e554:	200038c8 	.word	0x200038c8

0800e558 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e558:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e55c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e560:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e564:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e566:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e568:	2300      	movs	r3, #0
 800e56a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800e56c:	4770      	bx	lr

0800e56e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800e56e:	2300      	movs	r3, #0
 800e570:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800e572:	4770      	bx	lr

0800e574 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800e574:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800e576:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800e578:	689a      	ldr	r2, [r3, #8]
 800e57a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e57c:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800e57e:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e580:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800e582:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e584:	3301      	adds	r3, #1
 800e586:	6003      	str	r3, [r0, #0]
}
 800e588:	4770      	bx	lr

0800e58a <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800e58a:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800e58c:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800e58e:	1c63      	adds	r3, r4, #1
 800e590:	d10a      	bne.n	800e5a8 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800e592:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800e594:	685a      	ldr	r2, [r3, #4]
 800e596:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800e598:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800e59a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800e59c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e59e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800e5a0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e5a2:	3301      	adds	r3, #1
 800e5a4:	6003      	str	r3, [r0, #0]
}
 800e5a6:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800e5a8:	f100 0208 	add.w	r2, r0, #8
 800e5ac:	4613      	mov	r3, r2
 800e5ae:	6852      	ldr	r2, [r2, #4]
 800e5b0:	6815      	ldr	r5, [r2, #0]
 800e5b2:	42a5      	cmp	r5, r4
 800e5b4:	d9fa      	bls.n	800e5ac <vListInsert+0x22>
 800e5b6:	e7ed      	b.n	800e594 <vListInsert+0xa>

0800e5b8 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e5b8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800e5bc:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e5be:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800e5c0:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800e5c2:	6859      	ldr	r1, [r3, #4]
 800e5c4:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800e5c6:	bf08      	it	eq
 800e5c8:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800e5ca:	2200      	movs	r2, #0
 800e5cc:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800e5ce:	681a      	ldr	r2, [r3, #0]
 800e5d0:	3a01      	subs	r2, #1
 800e5d2:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800e5d4:	6818      	ldr	r0, [r3, #0]
}
 800e5d6:	4770      	bx	lr

0800e5d8 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800e5d8:	4808      	ldr	r0, [pc, #32]	@ (800e5fc <prvPortStartFirstTask+0x24>)
 800e5da:	6800      	ldr	r0, [r0, #0]
 800e5dc:	6800      	ldr	r0, [r0, #0]
 800e5de:	f380 8808 	msr	MSP, r0
 800e5e2:	f04f 0000 	mov.w	r0, #0
 800e5e6:	f380 8814 	msr	CONTROL, r0
 800e5ea:	b662      	cpsie	i
 800e5ec:	b661      	cpsie	f
 800e5ee:	f3bf 8f4f 	dsb	sy
 800e5f2:	f3bf 8f6f 	isb	sy
 800e5f6:	df00      	svc	0
 800e5f8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800e5fa:	0000      	.short	0x0000
 800e5fc:	e000ed08 	.word	0xe000ed08

0800e600 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800e600:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800e610 <vPortEnableVFP+0x10>
 800e604:	6801      	ldr	r1, [r0, #0]
 800e606:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800e60a:	6001      	str	r1, [r0, #0]
 800e60c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800e60e:	0000      	.short	0x0000
 800e610:	e000ed88 	.word	0xe000ed88

0800e614 <prvTaskExitError>:
{
 800e614:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800e616:	2300      	movs	r3, #0
 800e618:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800e61a:	4b0d      	ldr	r3, [pc, #52]	@ (800e650 <prvTaskExitError+0x3c>)
 800e61c:	681b      	ldr	r3, [r3, #0]
 800e61e:	3301      	adds	r3, #1
 800e620:	d008      	beq.n	800e634 <prvTaskExitError+0x20>
 800e622:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e626:	f383 8811 	msr	BASEPRI, r3
 800e62a:	f3bf 8f6f 	isb	sy
 800e62e:	f3bf 8f4f 	dsb	sy
 800e632:	e7fe      	b.n	800e632 <prvTaskExitError+0x1e>
 800e634:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e638:	f383 8811 	msr	BASEPRI, r3
 800e63c:	f3bf 8f6f 	isb	sy
 800e640:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e644:	9b01      	ldr	r3, [sp, #4]
 800e646:	2b00      	cmp	r3, #0
 800e648:	d0fc      	beq.n	800e644 <prvTaskExitError+0x30>
}
 800e64a:	b002      	add	sp, #8
 800e64c:	4770      	bx	lr
 800e64e:	bf00      	nop
 800e650:	20000080 	.word	0x20000080

0800e654 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e654:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800e658:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e65c:	4b07      	ldr	r3, [pc, #28]	@ (800e67c <pxPortInitialiseStack+0x28>)
 800e65e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e662:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e666:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e66a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800e66e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e672:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800e676:	3844      	subs	r0, #68	@ 0x44
 800e678:	4770      	bx	lr
 800e67a:	bf00      	nop
 800e67c:	0800e615 	.word	0x0800e615

0800e680 <SVC_Handler>:
	__asm volatile (
 800e680:	4b07      	ldr	r3, [pc, #28]	@ (800e6a0 <pxCurrentTCBConst2>)
 800e682:	6819      	ldr	r1, [r3, #0]
 800e684:	6808      	ldr	r0, [r1, #0]
 800e686:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e68a:	f380 8809 	msr	PSP, r0
 800e68e:	f3bf 8f6f 	isb	sy
 800e692:	f04f 0000 	mov.w	r0, #0
 800e696:	f380 8811 	msr	BASEPRI, r0
 800e69a:	4770      	bx	lr
 800e69c:	f3af 8000 	nop.w

0800e6a0 <pxCurrentTCBConst2>:
 800e6a0:	20013e24 	.word	0x20013e24

0800e6a4 <vPortEnterCritical>:
 800e6a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6a8:	f383 8811 	msr	BASEPRI, r3
 800e6ac:	f3bf 8f6f 	isb	sy
 800e6b0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e6b4:	4a0a      	ldr	r2, [pc, #40]	@ (800e6e0 <vPortEnterCritical+0x3c>)
 800e6b6:	6813      	ldr	r3, [r2, #0]
 800e6b8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e6ba:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e6bc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e6be:	d10e      	bne.n	800e6de <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e6c0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e6c4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800e6c8:	b2db      	uxtb	r3, r3
 800e6ca:	b143      	cbz	r3, 800e6de <vPortEnterCritical+0x3a>
 800e6cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6d0:	f383 8811 	msr	BASEPRI, r3
 800e6d4:	f3bf 8f6f 	isb	sy
 800e6d8:	f3bf 8f4f 	dsb	sy
 800e6dc:	e7fe      	b.n	800e6dc <vPortEnterCritical+0x38>
}
 800e6de:	4770      	bx	lr
 800e6e0:	20000080 	.word	0x20000080

0800e6e4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e6e4:	4a08      	ldr	r2, [pc, #32]	@ (800e708 <vPortExitCritical+0x24>)
 800e6e6:	6813      	ldr	r3, [r2, #0]
 800e6e8:	b943      	cbnz	r3, 800e6fc <vPortExitCritical+0x18>
 800e6ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e6ee:	f383 8811 	msr	BASEPRI, r3
 800e6f2:	f3bf 8f6f 	isb	sy
 800e6f6:	f3bf 8f4f 	dsb	sy
 800e6fa:	e7fe      	b.n	800e6fa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e6fc:	3b01      	subs	r3, #1
 800e6fe:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e700:	b90b      	cbnz	r3, 800e706 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e702:	f383 8811 	msr	BASEPRI, r3
}
 800e706:	4770      	bx	lr
 800e708:	20000080 	.word	0x20000080
 800e70c:	00000000 	.word	0x00000000

0800e710 <PendSV_Handler>:
	__asm volatile
 800e710:	f3ef 8009 	mrs	r0, PSP
 800e714:	f3bf 8f6f 	isb	sy
 800e718:	4b15      	ldr	r3, [pc, #84]	@ (800e770 <pxCurrentTCBConst>)
 800e71a:	681a      	ldr	r2, [r3, #0]
 800e71c:	f01e 0f10 	tst.w	lr, #16
 800e720:	bf08      	it	eq
 800e722:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e726:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e72a:	6010      	str	r0, [r2, #0]
 800e72c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e730:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800e734:	f380 8811 	msr	BASEPRI, r0
 800e738:	f3bf 8f4f 	dsb	sy
 800e73c:	f3bf 8f6f 	isb	sy
 800e740:	f001 f924 	bl	800f98c <vTaskSwitchContext>
 800e744:	f04f 0000 	mov.w	r0, #0
 800e748:	f380 8811 	msr	BASEPRI, r0
 800e74c:	bc09      	pop	{r0, r3}
 800e74e:	6819      	ldr	r1, [r3, #0]
 800e750:	6808      	ldr	r0, [r1, #0]
 800e752:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e756:	f01e 0f10 	tst.w	lr, #16
 800e75a:	bf08      	it	eq
 800e75c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e760:	f380 8809 	msr	PSP, r0
 800e764:	f3bf 8f6f 	isb	sy
 800e768:	4770      	bx	lr
 800e76a:	bf00      	nop
 800e76c:	f3af 8000 	nop.w

0800e770 <pxCurrentTCBConst>:
 800e770:	20013e24 	.word	0x20013e24

0800e774 <xPortSysTickHandler>:
{
 800e774:	b508      	push	{r3, lr}
	__asm volatile
 800e776:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e77a:	f383 8811 	msr	BASEPRI, r3
 800e77e:	f3bf 8f6f 	isb	sy
 800e782:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e786:	f000 ffd3 	bl	800f730 <xTaskIncrementTick>
 800e78a:	b128      	cbz	r0, 800e798 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e78c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e790:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e794:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800e798:	2300      	movs	r3, #0
 800e79a:	f383 8811 	msr	BASEPRI, r3
}
 800e79e:	bd08      	pop	{r3, pc}

0800e7a0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e7a0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800e7a4:	2300      	movs	r3, #0
 800e7a6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e7a8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e7aa:	4b05      	ldr	r3, [pc, #20]	@ (800e7c0 <vPortSetupTimerInterrupt+0x20>)
 800e7ac:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800e7b0:	681b      	ldr	r3, [r3, #0]
 800e7b2:	fbb3 f3f1 	udiv	r3, r3, r1
 800e7b6:	3b01      	subs	r3, #1
 800e7b8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e7ba:	2307      	movs	r3, #7
 800e7bc:	6113      	str	r3, [r2, #16]
}
 800e7be:	4770      	bx	lr
 800e7c0:	20000074 	.word	0x20000074

0800e7c4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e7c4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800e7c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e7ca:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800e7ce:	4a38      	ldr	r2, [pc, #224]	@ (800e8b0 <xPortStartScheduler+0xec>)
 800e7d0:	4291      	cmp	r1, r2
 800e7d2:	d108      	bne.n	800e7e6 <xPortStartScheduler+0x22>
	__asm volatile
 800e7d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e7d8:	f383 8811 	msr	BASEPRI, r3
 800e7dc:	f3bf 8f6f 	isb	sy
 800e7e0:	f3bf 8f4f 	dsb	sy
 800e7e4:	e7fe      	b.n	800e7e4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e7e6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800e7ea:	4b32      	ldr	r3, [pc, #200]	@ (800e8b4 <xPortStartScheduler+0xf0>)
 800e7ec:	429a      	cmp	r2, r3
 800e7ee:	d108      	bne.n	800e802 <xPortStartScheduler+0x3e>
 800e7f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e7f4:	f383 8811 	msr	BASEPRI, r3
 800e7f8:	f3bf 8f6f 	isb	sy
 800e7fc:	f3bf 8f4f 	dsb	sy
 800e800:	e7fe      	b.n	800e800 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e802:	4b2d      	ldr	r3, [pc, #180]	@ (800e8b8 <xPortStartScheduler+0xf4>)
 800e804:	781a      	ldrb	r2, [r3, #0]
 800e806:	b2d2      	uxtb	r2, r2
 800e808:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e80a:	22ff      	movs	r2, #255	@ 0xff
 800e80c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e80e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e810:	4a2a      	ldr	r2, [pc, #168]	@ (800e8bc <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e812:	b2db      	uxtb	r3, r3
 800e814:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e818:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800e81c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800e820:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e822:	4a27      	ldr	r2, [pc, #156]	@ (800e8c0 <xPortStartScheduler+0xfc>)
 800e824:	2307      	movs	r3, #7
 800e826:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e828:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800e82c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e82e:	0609      	lsls	r1, r1, #24
 800e830:	d40a      	bmi.n	800e848 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e832:	2b03      	cmp	r3, #3
 800e834:	d011      	beq.n	800e85a <xPortStartScheduler+0x96>
 800e836:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e83a:	f383 8811 	msr	BASEPRI, r3
 800e83e:	f3bf 8f6f 	isb	sy
 800e842:	f3bf 8f4f 	dsb	sy
 800e846:	e7fe      	b.n	800e846 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800e848:	3b01      	subs	r3, #1
 800e84a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e84c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800e850:	005b      	lsls	r3, r3, #1
 800e852:	b2db      	uxtb	r3, r3
 800e854:	f88d 3003 	strb.w	r3, [sp, #3]
 800e858:	e7e6      	b.n	800e828 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e85a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800e85e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e860:	9b01      	ldr	r3, [sp, #4]
 800e862:	4a15      	ldr	r2, [pc, #84]	@ (800e8b8 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e864:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e868:	b2db      	uxtb	r3, r3
 800e86a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e86c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e870:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800e874:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e878:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800e87c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800e880:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800e884:	f7ff ff8c 	bl	800e7a0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e888:	4b0e      	ldr	r3, [pc, #56]	@ (800e8c4 <xPortStartScheduler+0x100>)
 800e88a:	2500      	movs	r5, #0
 800e88c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800e88e:	f7ff feb7 	bl	800e600 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e892:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800e896:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800e89a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800e89e:	f7ff fe9b 	bl	800e5d8 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e8a2:	f001 f873 	bl	800f98c <vTaskSwitchContext>
	prvTaskExitError();
 800e8a6:	f7ff feb5 	bl	800e614 <prvTaskExitError>
}
 800e8aa:	4628      	mov	r0, r5
 800e8ac:	b003      	add	sp, #12
 800e8ae:	bd30      	pop	{r4, r5, pc}
 800e8b0:	410fc271 	.word	0x410fc271
 800e8b4:	410fc270 	.word	0x410fc270
 800e8b8:	e000e400 	.word	0xe000e400
 800e8bc:	200138e8 	.word	0x200138e8
 800e8c0:	200138e4 	.word	0x200138e4
 800e8c4:	20000080 	.word	0x20000080

0800e8c8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e8c8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e8cc:	2b0f      	cmp	r3, #15
 800e8ce:	d90e      	bls.n	800e8ee <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e8d0:	4a11      	ldr	r2, [pc, #68]	@ (800e918 <vPortValidateInterruptPriority+0x50>)
 800e8d2:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e8d4:	4a11      	ldr	r2, [pc, #68]	@ (800e91c <vPortValidateInterruptPriority+0x54>)
 800e8d6:	7812      	ldrb	r2, [r2, #0]
 800e8d8:	429a      	cmp	r2, r3
 800e8da:	d908      	bls.n	800e8ee <vPortValidateInterruptPriority+0x26>
 800e8dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e8e0:	f383 8811 	msr	BASEPRI, r3
 800e8e4:	f3bf 8f6f 	isb	sy
 800e8e8:	f3bf 8f4f 	dsb	sy
 800e8ec:	e7fe      	b.n	800e8ec <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e8ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e8f2:	4a0b      	ldr	r2, [pc, #44]	@ (800e920 <vPortValidateInterruptPriority+0x58>)
 800e8f4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800e8f8:	6812      	ldr	r2, [r2, #0]
 800e8fa:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800e8fe:	4293      	cmp	r3, r2
 800e900:	d908      	bls.n	800e914 <vPortValidateInterruptPriority+0x4c>
 800e902:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e906:	f383 8811 	msr	BASEPRI, r3
 800e90a:	f3bf 8f6f 	isb	sy
 800e90e:	f3bf 8f4f 	dsb	sy
 800e912:	e7fe      	b.n	800e912 <vPortValidateInterruptPriority+0x4a>
	}
 800e914:	4770      	bx	lr
 800e916:	bf00      	nop
 800e918:	e000e3f0 	.word	0xe000e3f0
 800e91c:	200138e8 	.word	0x200138e8
 800e920:	200138e4 	.word	0x200138e4

0800e924 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800e924:	b510      	push	{r4, lr}
 800e926:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e928:	f7ff febc 	bl	800e6a4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e92c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e92e:	f7ff fed9 	bl	800e6e4 <vPortExitCritical>

	return xReturn;
}
 800e932:	fab4 f084 	clz	r0, r4
 800e936:	0940      	lsrs	r0, r0, #5
 800e938:	bd10      	pop	{r4, pc}

0800e93a <prvCopyDataToQueue>:
{
 800e93a:	b570      	push	{r4, r5, r6, lr}
 800e93c:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e93e:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e940:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800e942:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e944:	b942      	cbnz	r2, 800e958 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e946:	6806      	ldr	r6, [r0, #0]
 800e948:	b99e      	cbnz	r6, 800e972 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e94a:	6880      	ldr	r0, [r0, #8]
 800e94c:	f001 f96c 	bl	800fc28 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e950:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e952:	3501      	adds	r5, #1
 800e954:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800e956:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e958:	b96e      	cbnz	r6, 800e976 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e95a:	6840      	ldr	r0, [r0, #4]
 800e95c:	f01c fceb 	bl	802b336 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e960:	6863      	ldr	r3, [r4, #4]
 800e962:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800e964:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e966:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e968:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e96a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e96c:	bf24      	itt	cs
 800e96e:	6823      	ldrcs	r3, [r4, #0]
 800e970:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800e972:	2000      	movs	r0, #0
 800e974:	e7ed      	b.n	800e952 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e976:	68c0      	ldr	r0, [r0, #12]
 800e978:	f01c fcdd 	bl	802b336 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e97c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800e97e:	68e3      	ldr	r3, [r4, #12]
 800e980:	4251      	negs	r1, r2
 800e982:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e984:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e986:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e988:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e98a:	bf3e      	ittt	cc
 800e98c:	68a3      	ldrcc	r3, [r4, #8]
 800e98e:	185b      	addcc	r3, r3, r1
 800e990:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e992:	2e02      	cmp	r6, #2
 800e994:	d1ed      	bne.n	800e972 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e996:	b10d      	cbz	r5, 800e99c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800e998:	3d01      	subs	r5, #1
 800e99a:	e7ea      	b.n	800e972 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800e99c:	4628      	mov	r0, r5
 800e99e:	e7d8      	b.n	800e952 <prvCopyDataToQueue+0x18>

0800e9a0 <prvCopyDataFromQueue>:
{
 800e9a0:	4603      	mov	r3, r0
 800e9a2:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e9a4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800e9a6:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e9a8:	b16a      	cbz	r2, 800e9c6 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e9aa:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e9ac:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e9ae:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e9b0:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e9b2:	bf28      	it	cs
 800e9b4:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e9b6:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e9b8:	bf28      	it	cs
 800e9ba:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e9bc:	68d9      	ldr	r1, [r3, #12]
}
 800e9be:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e9c2:	f01c bcb8 	b.w	802b336 <memcpy>
}
 800e9c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e9ca:	4770      	bx	lr

0800e9cc <prvUnlockQueue>:
{
 800e9cc:	b570      	push	{r4, r5, r6, lr}
 800e9ce:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800e9d0:	f7ff fe68 	bl	800e6a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9d4:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9d8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800e9dc:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9de:	2d00      	cmp	r5, #0
 800e9e0:	dd01      	ble.n	800e9e6 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e9e4:	b9b3      	cbnz	r3, 800ea14 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9e6:	23ff      	movs	r3, #255	@ 0xff
 800e9e8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800e9ec:	f7ff fe7a 	bl	800e6e4 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9f0:	f7ff fe58 	bl	800e6a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9f4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9f8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800e9fc:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9fe:	2d00      	cmp	r5, #0
 800ea00:	dd01      	ble.n	800ea06 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea02:	6923      	ldr	r3, [r4, #16]
 800ea04:	b97b      	cbnz	r3, 800ea26 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea06:	23ff      	movs	r3, #255	@ 0xff
 800ea08:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800ea0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ea10:	f7ff be68 	b.w	800e6e4 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea14:	4630      	mov	r0, r6
 800ea16:	f001 f82b 	bl	800fa70 <xTaskRemoveFromEventList>
 800ea1a:	b108      	cbz	r0, 800ea20 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800ea1c:	f001 f8b0 	bl	800fb80 <vTaskMissedYield>
			--cTxLock;
 800ea20:	3d01      	subs	r5, #1
 800ea22:	b26d      	sxtb	r5, r5
 800ea24:	e7db      	b.n	800e9de <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea26:	4630      	mov	r0, r6
 800ea28:	f001 f822 	bl	800fa70 <xTaskRemoveFromEventList>
 800ea2c:	b108      	cbz	r0, 800ea32 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800ea2e:	f001 f8a7 	bl	800fb80 <vTaskMissedYield>
				--cRxLock;
 800ea32:	3d01      	subs	r5, #1
 800ea34:	b26d      	sxtb	r5, r5
 800ea36:	e7e2      	b.n	800e9fe <prvUnlockQueue+0x32>

0800ea38 <xQueueGenericReset>:
{
 800ea38:	b538      	push	{r3, r4, r5, lr}
 800ea3a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ea3c:	4604      	mov	r4, r0
 800ea3e:	b940      	cbnz	r0, 800ea52 <xQueueGenericReset+0x1a>
 800ea40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea44:	f383 8811 	msr	BASEPRI, r3
 800ea48:	f3bf 8f6f 	isb	sy
 800ea4c:	f3bf 8f4f 	dsb	sy
 800ea50:	e7fe      	b.n	800ea50 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800ea52:	f7ff fe27 	bl	800e6a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea56:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800ea5a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800ea5c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea5e:	434b      	muls	r3, r1
 800ea60:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea62:	1a5b      	subs	r3, r3, r1
 800ea64:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea66:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800ea68:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800ea6a:	2000      	movs	r0, #0
 800ea6c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea6e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800ea70:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800ea74:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800ea78:	b9a5      	cbnz	r5, 800eaa4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea7a:	6923      	ldr	r3, [r4, #16]
 800ea7c:	b173      	cbz	r3, 800ea9c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea7e:	f104 0010 	add.w	r0, r4, #16
 800ea82:	f000 fff5 	bl	800fa70 <xTaskRemoveFromEventList>
 800ea86:	b148      	cbz	r0, 800ea9c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800ea88:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ea8c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ea90:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ea94:	f3bf 8f4f 	dsb	sy
 800ea98:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800ea9c:	f7ff fe22 	bl	800e6e4 <vPortExitCritical>
}
 800eaa0:	2001      	movs	r0, #1
 800eaa2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800eaa4:	f104 0010 	add.w	r0, r4, #16
 800eaa8:	f7ff fd56 	bl	800e558 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800eaac:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800eab0:	f7ff fd52 	bl	800e558 <vListInitialise>
 800eab4:	e7f2      	b.n	800ea9c <xQueueGenericReset+0x64>

0800eab6 <xQueueGenericCreateStatic>:
	{
 800eab6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eab8:	460d      	mov	r5, r1
 800eaba:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800eabc:	b940      	cbnz	r0, 800ead0 <xQueueGenericCreateStatic+0x1a>
 800eabe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eac2:	f383 8811 	msr	BASEPRI, r3
 800eac6:	f3bf 8f6f 	isb	sy
 800eaca:	f3bf 8f4f 	dsb	sy
 800eace:	e7fe      	b.n	800eace <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800ead0:	b943      	cbnz	r3, 800eae4 <xQueueGenericCreateStatic+0x2e>
 800ead2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ead6:	f383 8811 	msr	BASEPRI, r3
 800eada:	f3bf 8f6f 	isb	sy
 800eade:	f3bf 8f4f 	dsb	sy
 800eae2:	e7fe      	b.n	800eae2 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800eae4:	b14a      	cbz	r2, 800eafa <xQueueGenericCreateStatic+0x44>
 800eae6:	b991      	cbnz	r1, 800eb0e <xQueueGenericCreateStatic+0x58>
 800eae8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eaec:	f383 8811 	msr	BASEPRI, r3
 800eaf0:	f3bf 8f6f 	isb	sy
 800eaf4:	f3bf 8f4f 	dsb	sy
 800eaf8:	e7fe      	b.n	800eaf8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800eafa:	b141      	cbz	r1, 800eb0e <xQueueGenericCreateStatic+0x58>
 800eafc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb00:	f383 8811 	msr	BASEPRI, r3
 800eb04:	f3bf 8f6f 	isb	sy
 800eb08:	f3bf 8f4f 	dsb	sy
 800eb0c:	e7fe      	b.n	800eb0c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800eb0e:	2350      	movs	r3, #80	@ 0x50
 800eb10:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800eb12:	9b01      	ldr	r3, [sp, #4]
 800eb14:	2b50      	cmp	r3, #80	@ 0x50
 800eb16:	d008      	beq.n	800eb2a <xQueueGenericCreateStatic+0x74>
 800eb18:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb1c:	f383 8811 	msr	BASEPRI, r3
 800eb20:	f3bf 8f6f 	isb	sy
 800eb24:	f3bf 8f4f 	dsb	sy
 800eb28:	e7fe      	b.n	800eb28 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800eb2a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800eb2c:	2d00      	cmp	r5, #0
 800eb2e:	bf08      	it	eq
 800eb30:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800eb32:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800eb36:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800eb3a:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800eb3c:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800eb3e:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800eb40:	f7ff ff7a 	bl	800ea38 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800eb44:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800eb48:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800eb4c:	4620      	mov	r0, r4
 800eb4e:	b003      	add	sp, #12
 800eb50:	bd30      	pop	{r4, r5, pc}

0800eb52 <xQueueGenericCreate>:
	{
 800eb52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eb54:	460d      	mov	r5, r1
 800eb56:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800eb58:	4606      	mov	r6, r0
 800eb5a:	b940      	cbnz	r0, 800eb6e <xQueueGenericCreate+0x1c>
 800eb5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb60:	f383 8811 	msr	BASEPRI, r3
 800eb64:	f3bf 8f6f 	isb	sy
 800eb68:	f3bf 8f4f 	dsb	sy
 800eb6c:	e7fe      	b.n	800eb6c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb6e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800eb70:	3050      	adds	r0, #80	@ 0x50
 800eb72:	f7ff fc1b 	bl	800e3ac <pvPortMalloc>
		if( pxNewQueue != NULL )
 800eb76:	4604      	mov	r4, r0
 800eb78:	b170      	cbz	r0, 800eb98 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800eb7a:	2300      	movs	r3, #0
 800eb7c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800eb80:	b165      	cbz	r5, 800eb9c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800eb82:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800eb86:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800eb8a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800eb8c:	2101      	movs	r1, #1
 800eb8e:	4620      	mov	r0, r4
 800eb90:	f7ff ff52 	bl	800ea38 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800eb94:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800eb98:	4620      	mov	r0, r4
 800eb9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800eb9c:	4603      	mov	r3, r0
 800eb9e:	e7f2      	b.n	800eb86 <xQueueGenericCreate+0x34>

0800eba0 <xQueueCreateCountingSemaphoreStatic>:
	{
 800eba0:	b513      	push	{r0, r1, r4, lr}
 800eba2:	4613      	mov	r3, r2
 800eba4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800eba6:	b940      	cbnz	r0, 800ebba <xQueueCreateCountingSemaphoreStatic+0x1a>
 800eba8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ebac:	f383 8811 	msr	BASEPRI, r3
 800ebb0:	f3bf 8f6f 	isb	sy
 800ebb4:	f3bf 8f4f 	dsb	sy
 800ebb8:	e7fe      	b.n	800ebb8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800ebba:	4288      	cmp	r0, r1
 800ebbc:	d208      	bcs.n	800ebd0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800ebbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ebc2:	f383 8811 	msr	BASEPRI, r3
 800ebc6:	f3bf 8f6f 	isb	sy
 800ebca:	f3bf 8f4f 	dsb	sy
 800ebce:	e7fe      	b.n	800ebce <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800ebd0:	2202      	movs	r2, #2
 800ebd2:	9200      	str	r2, [sp, #0]
 800ebd4:	2200      	movs	r2, #0
 800ebd6:	4611      	mov	r1, r2
 800ebd8:	f7ff ff6d 	bl	800eab6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800ebdc:	b100      	cbz	r0, 800ebe0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800ebde:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800ebe0:	b002      	add	sp, #8
 800ebe2:	bd10      	pop	{r4, pc}

0800ebe4 <xQueueCreateCountingSemaphore>:
	{
 800ebe4:	b510      	push	{r4, lr}
 800ebe6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800ebe8:	b940      	cbnz	r0, 800ebfc <xQueueCreateCountingSemaphore+0x18>
 800ebea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ebee:	f383 8811 	msr	BASEPRI, r3
 800ebf2:	f3bf 8f6f 	isb	sy
 800ebf6:	f3bf 8f4f 	dsb	sy
 800ebfa:	e7fe      	b.n	800ebfa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800ebfc:	4288      	cmp	r0, r1
 800ebfe:	d208      	bcs.n	800ec12 <xQueueCreateCountingSemaphore+0x2e>
 800ec00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec04:	f383 8811 	msr	BASEPRI, r3
 800ec08:	f3bf 8f6f 	isb	sy
 800ec0c:	f3bf 8f4f 	dsb	sy
 800ec10:	e7fe      	b.n	800ec10 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800ec12:	2202      	movs	r2, #2
 800ec14:	2100      	movs	r1, #0
 800ec16:	f7ff ff9c 	bl	800eb52 <xQueueGenericCreate>
		if( xHandle != NULL )
 800ec1a:	b100      	cbz	r0, 800ec1e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800ec1c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800ec1e:	bd10      	pop	{r4, pc}

0800ec20 <xQueueGenericSend>:
{
 800ec20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ec24:	460f      	mov	r7, r1
 800ec26:	9201      	str	r2, [sp, #4]
 800ec28:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800ec2a:	4604      	mov	r4, r0
 800ec2c:	b940      	cbnz	r0, 800ec40 <xQueueGenericSend+0x20>
 800ec2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec32:	f383 8811 	msr	BASEPRI, r3
 800ec36:	f3bf 8f6f 	isb	sy
 800ec3a:	f3bf 8f4f 	dsb	sy
 800ec3e:	e7fe      	b.n	800ec3e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec40:	b951      	cbnz	r1, 800ec58 <xQueueGenericSend+0x38>
 800ec42:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ec44:	b143      	cbz	r3, 800ec58 <xQueueGenericSend+0x38>
 800ec46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec4a:	f383 8811 	msr	BASEPRI, r3
 800ec4e:	f3bf 8f6f 	isb	sy
 800ec52:	f3bf 8f4f 	dsb	sy
 800ec56:	e7fe      	b.n	800ec56 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ec58:	2e02      	cmp	r6, #2
 800ec5a:	d10b      	bne.n	800ec74 <xQueueGenericSend+0x54>
 800ec5c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ec5e:	2b01      	cmp	r3, #1
 800ec60:	d008      	beq.n	800ec74 <xQueueGenericSend+0x54>
 800ec62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec66:	f383 8811 	msr	BASEPRI, r3
 800ec6a:	f3bf 8f6f 	isb	sy
 800ec6e:	f3bf 8f4f 	dsb	sy
 800ec72:	e7fe      	b.n	800ec72 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ec74:	f000 ff8a 	bl	800fb8c <xTaskGetSchedulerState>
 800ec78:	4605      	mov	r5, r0
 800ec7a:	b320      	cbz	r0, 800ecc6 <xQueueGenericSend+0xa6>
 800ec7c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800ec7e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800ec82:	f7ff fd0f 	bl	800e6a4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ec86:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800ec88:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ec8a:	429a      	cmp	r2, r3
 800ec8c:	d227      	bcs.n	800ecde <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec8e:	4632      	mov	r2, r6
 800ec90:	4639      	mov	r1, r7
 800ec92:	4620      	mov	r0, r4
 800ec94:	f7ff fe51 	bl	800e93a <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec98:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ec9a:	b11b      	cbz	r3, 800eca4 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec9c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800eca0:	f000 fee6 	bl	800fa70 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800eca4:	b148      	cbz	r0, 800ecba <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800eca6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ecaa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ecae:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ecb2:	f3bf 8f4f 	dsb	sy
 800ecb6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ecba:	f7ff fd13 	bl	800e6e4 <vPortExitCritical>
				return pdPASS;
 800ecbe:	2001      	movs	r0, #1
}
 800ecc0:	b004      	add	sp, #16
 800ecc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ecc6:	9b01      	ldr	r3, [sp, #4]
 800ecc8:	2b00      	cmp	r3, #0
 800ecca:	d0d8      	beq.n	800ec7e <xQueueGenericSend+0x5e>
 800eccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ecd0:	f383 8811 	msr	BASEPRI, r3
 800ecd4:	f3bf 8f6f 	isb	sy
 800ecd8:	f3bf 8f4f 	dsb	sy
 800ecdc:	e7fe      	b.n	800ecdc <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ecde:	2e02      	cmp	r6, #2
 800ece0:	d0d5      	beq.n	800ec8e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ece2:	9b01      	ldr	r3, [sp, #4]
 800ece4:	b91b      	cbnz	r3, 800ecee <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800ece6:	f7ff fcfd 	bl	800e6e4 <vPortExitCritical>
					return errQUEUE_FULL;
 800ecea:	2000      	movs	r0, #0
 800ecec:	e7e8      	b.n	800ecc0 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800ecee:	b915      	cbnz	r5, 800ecf6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ecf0:	a802      	add	r0, sp, #8
 800ecf2:	f000 fefd 	bl	800faf0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800ecf6:	f7ff fcf5 	bl	800e6e4 <vPortExitCritical>
		vTaskSuspendAll();
 800ecfa:	f000 fd0b 	bl	800f714 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ecfe:	f7ff fcd1 	bl	800e6a4 <vPortEnterCritical>
 800ed02:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800ed06:	2bff      	cmp	r3, #255	@ 0xff
 800ed08:	bf08      	it	eq
 800ed0a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800ed0e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800ed12:	2bff      	cmp	r3, #255	@ 0xff
 800ed14:	bf08      	it	eq
 800ed16:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800ed1a:	f7ff fce3 	bl	800e6e4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ed1e:	a901      	add	r1, sp, #4
 800ed20:	a802      	add	r0, sp, #8
 800ed22:	f000 fef1 	bl	800fb08 <xTaskCheckForTimeOut>
 800ed26:	bb38      	cbnz	r0, 800ed78 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ed28:	f7ff fcbc 	bl	800e6a4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800ed2c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800ed2e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ed30:	429a      	cmp	r2, r3
 800ed32:	d10e      	bne.n	800ed52 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800ed34:	f7ff fcd6 	bl	800e6e4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ed38:	9901      	ldr	r1, [sp, #4]
 800ed3a:	f104 0010 	add.w	r0, r4, #16
 800ed3e:	f000 fe5f 	bl	800fa00 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ed42:	4620      	mov	r0, r4
 800ed44:	f7ff fe42 	bl	800e9cc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ed48:	f000 fd88 	bl	800f85c <xTaskResumeAll>
 800ed4c:	b148      	cbz	r0, 800ed62 <xQueueGenericSend+0x142>
 800ed4e:	2501      	movs	r5, #1
 800ed50:	e797      	b.n	800ec82 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800ed52:	f7ff fcc7 	bl	800e6e4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800ed56:	4620      	mov	r0, r4
 800ed58:	f7ff fe38 	bl	800e9cc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800ed5c:	f000 fd7e 	bl	800f85c <xTaskResumeAll>
 800ed60:	e7f5      	b.n	800ed4e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800ed62:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ed66:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ed6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ed6e:	f3bf 8f4f 	dsb	sy
 800ed72:	f3bf 8f6f 	isb	sy
 800ed76:	e7ea      	b.n	800ed4e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800ed78:	4620      	mov	r0, r4
 800ed7a:	f7ff fe27 	bl	800e9cc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800ed7e:	f000 fd6d 	bl	800f85c <xTaskResumeAll>
			return errQUEUE_FULL;
 800ed82:	e7b2      	b.n	800ecea <xQueueGenericSend+0xca>

0800ed84 <xQueueGenericSendFromISR>:
{
 800ed84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ed88:	4689      	mov	r9, r1
 800ed8a:	4617      	mov	r7, r2
 800ed8c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800ed8e:	4604      	mov	r4, r0
 800ed90:	b940      	cbnz	r0, 800eda4 <xQueueGenericSendFromISR+0x20>
 800ed92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ed96:	f383 8811 	msr	BASEPRI, r3
 800ed9a:	f3bf 8f6f 	isb	sy
 800ed9e:	f3bf 8f4f 	dsb	sy
 800eda2:	e7fe      	b.n	800eda2 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eda4:	b951      	cbnz	r1, 800edbc <xQueueGenericSendFromISR+0x38>
 800eda6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800eda8:	b143      	cbz	r3, 800edbc <xQueueGenericSendFromISR+0x38>
 800edaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800edae:	f383 8811 	msr	BASEPRI, r3
 800edb2:	f3bf 8f6f 	isb	sy
 800edb6:	f3bf 8f4f 	dsb	sy
 800edba:	e7fe      	b.n	800edba <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800edbc:	2e02      	cmp	r6, #2
 800edbe:	d10b      	bne.n	800edd8 <xQueueGenericSendFromISR+0x54>
 800edc0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800edc2:	2b01      	cmp	r3, #1
 800edc4:	d008      	beq.n	800edd8 <xQueueGenericSendFromISR+0x54>
 800edc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800edca:	f383 8811 	msr	BASEPRI, r3
 800edce:	f3bf 8f6f 	isb	sy
 800edd2:	f3bf 8f4f 	dsb	sy
 800edd6:	e7fe      	b.n	800edd6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800edd8:	f7ff fd76 	bl	800e8c8 <vPortValidateInterruptPriority>
	__asm volatile
 800eddc:	f3ef 8811 	mrs	r8, BASEPRI
 800ede0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ede4:	f383 8811 	msr	BASEPRI, r3
 800ede8:	f3bf 8f6f 	isb	sy
 800edec:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800edf0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800edf2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800edf4:	429a      	cmp	r2, r3
 800edf6:	d301      	bcc.n	800edfc <xQueueGenericSendFromISR+0x78>
 800edf8:	2e02      	cmp	r6, #2
 800edfa:	d11e      	bne.n	800ee3a <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800edfc:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ee00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ee02:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ee04:	4632      	mov	r2, r6
 800ee06:	4649      	mov	r1, r9
 800ee08:	4620      	mov	r0, r4
 800ee0a:	f7ff fd96 	bl	800e93a <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ee0e:	1c6b      	adds	r3, r5, #1
 800ee10:	d10e      	bne.n	800ee30 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee12:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ee14:	b13b      	cbz	r3, 800ee26 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee16:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800ee1a:	f000 fe29 	bl	800fa70 <xTaskRemoveFromEventList>
 800ee1e:	b110      	cbz	r0, 800ee26 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800ee20:	b10f      	cbz	r7, 800ee26 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ee22:	2301      	movs	r3, #1
 800ee24:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800ee26:	2001      	movs	r0, #1
	__asm volatile
 800ee28:	f388 8811 	msr	BASEPRI, r8
}
 800ee2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ee30:	3501      	adds	r5, #1
 800ee32:	b26d      	sxtb	r5, r5
 800ee34:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800ee38:	e7f5      	b.n	800ee26 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800ee3a:	2000      	movs	r0, #0
 800ee3c:	e7f4      	b.n	800ee28 <xQueueGenericSendFromISR+0xa4>

0800ee3e <xQueueGiveFromISR>:
{
 800ee3e:	b570      	push	{r4, r5, r6, lr}
 800ee40:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ee42:	4604      	mov	r4, r0
 800ee44:	b940      	cbnz	r0, 800ee58 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800ee46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee4a:	f383 8811 	msr	BASEPRI, r3
 800ee4e:	f3bf 8f6f 	isb	sy
 800ee52:	f3bf 8f4f 	dsb	sy
 800ee56:	e7fe      	b.n	800ee56 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ee58:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ee5a:	b143      	cbz	r3, 800ee6e <xQueueGiveFromISR+0x30>
 800ee5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee60:	f383 8811 	msr	BASEPRI, r3
 800ee64:	f3bf 8f6f 	isb	sy
 800ee68:	f3bf 8f4f 	dsb	sy
 800ee6c:	e7fe      	b.n	800ee6c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ee6e:	6803      	ldr	r3, [r0, #0]
 800ee70:	b953      	cbnz	r3, 800ee88 <xQueueGiveFromISR+0x4a>
 800ee72:	6883      	ldr	r3, [r0, #8]
 800ee74:	b143      	cbz	r3, 800ee88 <xQueueGiveFromISR+0x4a>
 800ee76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee7a:	f383 8811 	msr	BASEPRI, r3
 800ee7e:	f3bf 8f6f 	isb	sy
 800ee82:	f3bf 8f4f 	dsb	sy
 800ee86:	e7fe      	b.n	800ee86 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ee88:	f7ff fd1e 	bl	800e8c8 <vPortValidateInterruptPriority>
	__asm volatile
 800ee8c:	f3ef 8611 	mrs	r6, BASEPRI
 800ee90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee94:	f383 8811 	msr	BASEPRI, r3
 800ee98:	f3bf 8f6f 	isb	sy
 800ee9c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eea0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800eea2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800eea4:	4293      	cmp	r3, r2
 800eea6:	d919      	bls.n	800eedc <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800eea8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800eeac:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800eeae:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800eeb0:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800eeb2:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800eeb4:	d10d      	bne.n	800eed2 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eeb6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800eeb8:	b13b      	cbz	r3, 800eeca <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eeba:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800eebe:	f000 fdd7 	bl	800fa70 <xTaskRemoveFromEventList>
 800eec2:	b110      	cbz	r0, 800eeca <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800eec4:	b10d      	cbz	r5, 800eeca <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800eec6:	2301      	movs	r3, #1
 800eec8:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800eeca:	2001      	movs	r0, #1
	__asm volatile
 800eecc:	f386 8811 	msr	BASEPRI, r6
}
 800eed0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800eed2:	3301      	adds	r3, #1
 800eed4:	b25b      	sxtb	r3, r3
 800eed6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800eeda:	e7f6      	b.n	800eeca <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800eedc:	2000      	movs	r0, #0
 800eede:	e7f5      	b.n	800eecc <xQueueGiveFromISR+0x8e>

0800eee0 <xQueueReceive>:
{
 800eee0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800eee4:	460e      	mov	r6, r1
 800eee6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800eee8:	4604      	mov	r4, r0
 800eeea:	b940      	cbnz	r0, 800eefe <xQueueReceive+0x1e>
	__asm volatile
 800eeec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eef0:	f383 8811 	msr	BASEPRI, r3
 800eef4:	f3bf 8f6f 	isb	sy
 800eef8:	f3bf 8f4f 	dsb	sy
 800eefc:	e7fe      	b.n	800eefc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eefe:	b951      	cbnz	r1, 800ef16 <xQueueReceive+0x36>
 800ef00:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800ef02:	b143      	cbz	r3, 800ef16 <xQueueReceive+0x36>
 800ef04:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ef08:	f383 8811 	msr	BASEPRI, r3
 800ef0c:	f3bf 8f6f 	isb	sy
 800ef10:	f3bf 8f4f 	dsb	sy
 800ef14:	e7fe      	b.n	800ef14 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ef16:	f000 fe39 	bl	800fb8c <xTaskGetSchedulerState>
 800ef1a:	4605      	mov	r5, r0
 800ef1c:	b318      	cbz	r0, 800ef66 <xQueueReceive+0x86>
 800ef1e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800ef20:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800ef24:	f7ff fbbe 	bl	800e6a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ef28:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef2a:	b347      	cbz	r7, 800ef7e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ef2c:	4631      	mov	r1, r6
 800ef2e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef30:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800ef32:	f7ff fd35 	bl	800e9a0 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef36:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef38:	6923      	ldr	r3, [r4, #16]
 800ef3a:	b173      	cbz	r3, 800ef5a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef3c:	f104 0010 	add.w	r0, r4, #16
 800ef40:	f000 fd96 	bl	800fa70 <xTaskRemoveFromEventList>
 800ef44:	b148      	cbz	r0, 800ef5a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800ef46:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ef4a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ef4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800ef52:	f3bf 8f4f 	dsb	sy
 800ef56:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ef5a:	f7ff fbc3 	bl	800e6e4 <vPortExitCritical>
				return pdPASS;
 800ef5e:	2001      	movs	r0, #1
}
 800ef60:	b004      	add	sp, #16
 800ef62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ef66:	9b01      	ldr	r3, [sp, #4]
 800ef68:	2b00      	cmp	r3, #0
 800ef6a:	d0d9      	beq.n	800ef20 <xQueueReceive+0x40>
 800ef6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ef70:	f383 8811 	msr	BASEPRI, r3
 800ef74:	f3bf 8f6f 	isb	sy
 800ef78:	f3bf 8f4f 	dsb	sy
 800ef7c:	e7fe      	b.n	800ef7c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ef7e:	9b01      	ldr	r3, [sp, #4]
 800ef80:	b91b      	cbnz	r3, 800ef8a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800ef82:	f7ff fbaf 	bl	800e6e4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ef86:	2000      	movs	r0, #0
 800ef88:	e7ea      	b.n	800ef60 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800ef8a:	b915      	cbnz	r5, 800ef92 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ef8c:	a802      	add	r0, sp, #8
 800ef8e:	f000 fdaf 	bl	800faf0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800ef92:	f7ff fba7 	bl	800e6e4 <vPortExitCritical>
		vTaskSuspendAll();
 800ef96:	f000 fbbd 	bl	800f714 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ef9a:	f7ff fb83 	bl	800e6a4 <vPortEnterCritical>
 800ef9e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800efa2:	2bff      	cmp	r3, #255	@ 0xff
 800efa4:	bf08      	it	eq
 800efa6:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800efaa:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800efae:	2bff      	cmp	r3, #255	@ 0xff
 800efb0:	bf08      	it	eq
 800efb2:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800efb6:	f7ff fb95 	bl	800e6e4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800efba:	a901      	add	r1, sp, #4
 800efbc:	a802      	add	r0, sp, #8
 800efbe:	f000 fda3 	bl	800fb08 <xTaskCheckForTimeOut>
 800efc2:	bb00      	cbnz	r0, 800f006 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800efc4:	4620      	mov	r0, r4
 800efc6:	f7ff fcad 	bl	800e924 <prvIsQueueEmpty>
 800efca:	b1b0      	cbz	r0, 800effa <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800efcc:	9901      	ldr	r1, [sp, #4]
 800efce:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800efd2:	f000 fd15 	bl	800fa00 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800efd6:	4620      	mov	r0, r4
 800efd8:	f7ff fcf8 	bl	800e9cc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800efdc:	f000 fc3e 	bl	800f85c <xTaskResumeAll>
 800efe0:	b948      	cbnz	r0, 800eff6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800efe2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800efe6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800efea:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800efee:	f3bf 8f4f 	dsb	sy
 800eff2:	f3bf 8f6f 	isb	sy
 800eff6:	2501      	movs	r5, #1
 800eff8:	e794      	b.n	800ef24 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800effa:	4620      	mov	r0, r4
 800effc:	f7ff fce6 	bl	800e9cc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f000:	f000 fc2c 	bl	800f85c <xTaskResumeAll>
 800f004:	e7f7      	b.n	800eff6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800f006:	4620      	mov	r0, r4
 800f008:	f7ff fce0 	bl	800e9cc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f00c:	f000 fc26 	bl	800f85c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f010:	4620      	mov	r0, r4
 800f012:	f7ff fc87 	bl	800e924 <prvIsQueueEmpty>
 800f016:	2800      	cmp	r0, #0
 800f018:	d0ed      	beq.n	800eff6 <xQueueReceive+0x116>
 800f01a:	e7b4      	b.n	800ef86 <xQueueReceive+0xa6>

0800f01c <xQueueSemaphoreTake>:
{
 800f01c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f01e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800f020:	4604      	mov	r4, r0
{
 800f022:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f024:	b940      	cbnz	r0, 800f038 <xQueueSemaphoreTake+0x1c>
 800f026:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f02a:	f383 8811 	msr	BASEPRI, r3
 800f02e:	f3bf 8f6f 	isb	sy
 800f032:	f3bf 8f4f 	dsb	sy
 800f036:	e7fe      	b.n	800f036 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f038:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800f03a:	b145      	cbz	r5, 800f04e <xQueueSemaphoreTake+0x32>
 800f03c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f040:	f383 8811 	msr	BASEPRI, r3
 800f044:	f3bf 8f6f 	isb	sy
 800f048:	f3bf 8f4f 	dsb	sy
 800f04c:	e7fe      	b.n	800f04c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f04e:	f000 fd9d 	bl	800fb8c <xTaskGetSchedulerState>
 800f052:	4606      	mov	r6, r0
 800f054:	b320      	cbz	r0, 800f0a0 <xQueueSemaphoreTake+0x84>
 800f056:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800f058:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800f05a:	f7ff fb23 	bl	800e6a4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f05e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f060:	b353      	cbz	r3, 800f0b8 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f062:	3b01      	subs	r3, #1
 800f064:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f066:	6823      	ldr	r3, [r4, #0]
 800f068:	b913      	cbnz	r3, 800f070 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f06a:	f000 fe6d 	bl	800fd48 <pvTaskIncrementMutexHeldCount>
 800f06e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f070:	6923      	ldr	r3, [r4, #16]
 800f072:	b173      	cbz	r3, 800f092 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f074:	f104 0010 	add.w	r0, r4, #16
 800f078:	f000 fcfa 	bl	800fa70 <xTaskRemoveFromEventList>
 800f07c:	b148      	cbz	r0, 800f092 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800f07e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f082:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f086:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f08a:	f3bf 8f4f 	dsb	sy
 800f08e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f092:	f7ff fb27 	bl	800e6e4 <vPortExitCritical>
				return pdPASS;
 800f096:	2001      	movs	r0, #1
}
 800f098:	b005      	add	sp, #20
 800f09a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f09c:	4635      	mov	r5, r6
 800f09e:	e7db      	b.n	800f058 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f0a0:	9b01      	ldr	r3, [sp, #4]
 800f0a2:	2b00      	cmp	r3, #0
 800f0a4:	d0fa      	beq.n	800f09c <xQueueSemaphoreTake+0x80>
 800f0a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f0aa:	f383 8811 	msr	BASEPRI, r3
 800f0ae:	f3bf 8f6f 	isb	sy
 800f0b2:	f3bf 8f4f 	dsb	sy
 800f0b6:	e7fe      	b.n	800f0b6 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f0b8:	9b01      	ldr	r3, [sp, #4]
 800f0ba:	b953      	cbnz	r3, 800f0d2 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f0bc:	2d00      	cmp	r5, #0
 800f0be:	d066      	beq.n	800f18e <xQueueSemaphoreTake+0x172>
 800f0c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f0c4:	f383 8811 	msr	BASEPRI, r3
 800f0c8:	f3bf 8f6f 	isb	sy
 800f0cc:	f3bf 8f4f 	dsb	sy
 800f0d0:	e7fe      	b.n	800f0d0 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800f0d2:	b916      	cbnz	r6, 800f0da <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f0d4:	a802      	add	r0, sp, #8
 800f0d6:	f000 fd0b 	bl	800faf0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f0da:	f7ff fb03 	bl	800e6e4 <vPortExitCritical>
		vTaskSuspendAll();
 800f0de:	f000 fb19 	bl	800f714 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f0e2:	f7ff fadf 	bl	800e6a4 <vPortEnterCritical>
 800f0e6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800f0ea:	2bff      	cmp	r3, #255	@ 0xff
 800f0ec:	bf08      	it	eq
 800f0ee:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800f0f2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800f0f6:	2bff      	cmp	r3, #255	@ 0xff
 800f0f8:	bf08      	it	eq
 800f0fa:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800f0fe:	f7ff faf1 	bl	800e6e4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f102:	a901      	add	r1, sp, #4
 800f104:	a802      	add	r0, sp, #8
 800f106:	f000 fcff 	bl	800fb08 <xTaskCheckForTimeOut>
 800f10a:	bb50      	cbnz	r0, 800f162 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f10c:	4620      	mov	r0, r4
 800f10e:	f7ff fc09 	bl	800e924 <prvIsQueueEmpty>
 800f112:	b300      	cbz	r0, 800f156 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f114:	6823      	ldr	r3, [r4, #0]
 800f116:	b93b      	cbnz	r3, 800f128 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800f118:	f7ff fac4 	bl	800e6a4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f11c:	68a0      	ldr	r0, [r4, #8]
 800f11e:	f000 fd45 	bl	800fbac <xTaskPriorityInherit>
 800f122:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800f124:	f7ff fade 	bl	800e6e4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f128:	9901      	ldr	r1, [sp, #4]
 800f12a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f12e:	f000 fc67 	bl	800fa00 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f132:	4620      	mov	r0, r4
 800f134:	f7ff fc4a 	bl	800e9cc <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f138:	f000 fb90 	bl	800f85c <xTaskResumeAll>
 800f13c:	b948      	cbnz	r0, 800f152 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800f13e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f142:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f146:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f14a:	f3bf 8f4f 	dsb	sy
 800f14e:	f3bf 8f6f 	isb	sy
 800f152:	2601      	movs	r6, #1
 800f154:	e781      	b.n	800f05a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800f156:	4620      	mov	r0, r4
 800f158:	f7ff fc38 	bl	800e9cc <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f15c:	f000 fb7e 	bl	800f85c <xTaskResumeAll>
 800f160:	e7f7      	b.n	800f152 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800f162:	4620      	mov	r0, r4
 800f164:	f7ff fc32 	bl	800e9cc <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f168:	f000 fb78 	bl	800f85c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f16c:	4620      	mov	r0, r4
 800f16e:	f7ff fbd9 	bl	800e924 <prvIsQueueEmpty>
 800f172:	2800      	cmp	r0, #0
 800f174:	d0ed      	beq.n	800f152 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800f176:	b165      	cbz	r5, 800f192 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800f178:	f7ff fa94 	bl	800e6a4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f17c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f17e:	b119      	cbz	r1, 800f188 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f180:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800f182:	6819      	ldr	r1, [r3, #0]
 800f184:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f188:	68a0      	ldr	r0, [r4, #8]
 800f18a:	f000 fd8f 	bl	800fcac <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800f18e:	f7ff faa9 	bl	800e6e4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f192:	2000      	movs	r0, #0
 800f194:	e780      	b.n	800f098 <xQueueSemaphoreTake+0x7c>

0800f196 <xQueueReceiveFromISR>:
{
 800f196:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f19a:	4689      	mov	r9, r1
 800f19c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800f19e:	4604      	mov	r4, r0
 800f1a0:	b940      	cbnz	r0, 800f1b4 <xQueueReceiveFromISR+0x1e>
 800f1a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1a6:	f383 8811 	msr	BASEPRI, r3
 800f1aa:	f3bf 8f6f 	isb	sy
 800f1ae:	f3bf 8f4f 	dsb	sy
 800f1b2:	e7fe      	b.n	800f1b2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f1b4:	b951      	cbnz	r1, 800f1cc <xQueueReceiveFromISR+0x36>
 800f1b6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800f1b8:	b143      	cbz	r3, 800f1cc <xQueueReceiveFromISR+0x36>
 800f1ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1be:	f383 8811 	msr	BASEPRI, r3
 800f1c2:	f3bf 8f6f 	isb	sy
 800f1c6:	f3bf 8f4f 	dsb	sy
 800f1ca:	e7fe      	b.n	800f1ca <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f1cc:	f7ff fb7c 	bl	800e8c8 <vPortValidateInterruptPriority>
	__asm volatile
 800f1d0:	f3ef 8711 	mrs	r7, BASEPRI
 800f1d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1d8:	f383 8811 	msr	BASEPRI, r3
 800f1dc:	f3bf 8f6f 	isb	sy
 800f1e0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f1e4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f1e6:	b30d      	cbz	r5, 800f22c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f1e8:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f1ec:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800f1ee:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f1f0:	4620      	mov	r0, r4
 800f1f2:	f7ff fbd5 	bl	800e9a0 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f1f6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f1f8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f1fa:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800f1fc:	d111      	bne.n	800f222 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1fe:	6923      	ldr	r3, [r4, #16]
 800f200:	b153      	cbz	r3, 800f218 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f202:	f104 0010 	add.w	r0, r4, #16
 800f206:	f000 fc33 	bl	800fa70 <xTaskRemoveFromEventList>
 800f20a:	b128      	cbz	r0, 800f218 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800f20c:	f1b8 0f00 	cmp.w	r8, #0
 800f210:	d002      	beq.n	800f218 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f212:	2301      	movs	r3, #1
 800f214:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800f218:	2001      	movs	r0, #1
	__asm volatile
 800f21a:	f387 8811 	msr	BASEPRI, r7
}
 800f21e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f222:	3601      	adds	r6, #1
 800f224:	b276      	sxtb	r6, r6
 800f226:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800f22a:	e7f5      	b.n	800f218 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800f22c:	4628      	mov	r0, r5
 800f22e:	e7f4      	b.n	800f21a <xQueueReceiveFromISR+0x84>

0800f230 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800f230:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f232:	4a07      	ldr	r2, [pc, #28]	@ (800f250 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f234:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f236:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800f23a:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800f23e:	b91d      	cbnz	r5, 800f248 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f240:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f244:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800f246:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f248:	3301      	adds	r3, #1
 800f24a:	2b08      	cmp	r3, #8
 800f24c:	d1f3      	bne.n	800f236 <vQueueAddToRegistry+0x6>
 800f24e:	e7fa      	b.n	800f246 <vQueueAddToRegistry+0x16>
 800f250:	200138ec 	.word	0x200138ec

0800f254 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800f254:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f256:	4a09      	ldr	r2, [pc, #36]	@ (800f27c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f258:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f25a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800f25e:	4281      	cmp	r1, r0
 800f260:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800f264:	d106      	bne.n	800f274 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f266:	4a06      	ldr	r2, [pc, #24]	@ (800f280 <vQueueUnregisterQueue+0x2c>)
 800f268:	2100      	movs	r1, #0
 800f26a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800f26e:	4422      	add	r2, r4
 800f270:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800f272:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f274:	3301      	adds	r3, #1
 800f276:	2b08      	cmp	r3, #8
 800f278:	d1ef      	bne.n	800f25a <vQueueUnregisterQueue+0x6>
 800f27a:	e7fa      	b.n	800f272 <vQueueUnregisterQueue+0x1e>
 800f27c:	200138f0 	.word	0x200138f0
 800f280:	200138ec 	.word	0x200138ec

0800f284 <vQueueDelete>:
{
 800f284:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800f286:	b940      	cbnz	r0, 800f29a <vQueueDelete+0x16>
	__asm volatile
 800f288:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f28c:	f383 8811 	msr	BASEPRI, r3
 800f290:	f3bf 8f6f 	isb	sy
 800f294:	f3bf 8f4f 	dsb	sy
 800f298:	e7fe      	b.n	800f298 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800f29a:	f7ff ffdb 	bl	800f254 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f29e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800f2a2:	b91b      	cbnz	r3, 800f2ac <vQueueDelete+0x28>
}
 800f2a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800f2a8:	f7ff b918 	b.w	800e4dc <vPortFree>
}
 800f2ac:	bd10      	pop	{r4, pc}

0800f2ae <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f2ae:	b570      	push	{r4, r5, r6, lr}
 800f2b0:	4604      	mov	r4, r0
 800f2b2:	460d      	mov	r5, r1
 800f2b4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f2b6:	f7ff f9f5 	bl	800e6a4 <vPortEnterCritical>
 800f2ba:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800f2be:	2bff      	cmp	r3, #255	@ 0xff
 800f2c0:	bf04      	itt	eq
 800f2c2:	2300      	moveq	r3, #0
 800f2c4:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800f2c8:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800f2cc:	2bff      	cmp	r3, #255	@ 0xff
 800f2ce:	bf04      	itt	eq
 800f2d0:	2300      	moveq	r3, #0
 800f2d2:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800f2d6:	f7ff fa05 	bl	800e6e4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f2da:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800f2dc:	b92b      	cbnz	r3, 800f2ea <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f2de:	4632      	mov	r2, r6
 800f2e0:	4629      	mov	r1, r5
 800f2e2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f2e6:	f000 fba5 	bl	800fa34 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800f2ea:	4620      	mov	r0, r4
	}
 800f2ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800f2f0:	f7ff bb6c 	b.w	800e9cc <prvUnlockQueue>

0800f2f4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f2f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f2f8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f2fa:	f7ff f9d3 	bl	800e6a4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f2fe:	4b30      	ldr	r3, [pc, #192]	@ (800f3c0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800f300:	4e30      	ldr	r6, [pc, #192]	@ (800f3c4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800f302:	681a      	ldr	r2, [r3, #0]
 800f304:	4f30      	ldr	r7, [pc, #192]	@ (800f3c8 <prvAddNewTaskToReadyList+0xd4>)
 800f306:	3201      	adds	r2, #1
 800f308:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800f30a:	6835      	ldr	r5, [r6, #0]
 800f30c:	2d00      	cmp	r5, #0
 800f30e:	d14b      	bne.n	800f3a8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800f310:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f312:	681b      	ldr	r3, [r3, #0]
 800f314:	2b01      	cmp	r3, #1
 800f316:	d11f      	bne.n	800f358 <prvAddNewTaskToReadyList+0x64>
 800f318:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f31a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f31c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f31e:	f7ff f91b 	bl	800e558 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f322:	2d38      	cmp	r5, #56	@ 0x38
 800f324:	f108 0814 	add.w	r8, r8, #20
 800f328:	d1f7      	bne.n	800f31a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f32a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800f3f0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800f32e:	4d27      	ldr	r5, [pc, #156]	@ (800f3cc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800f330:	4640      	mov	r0, r8
 800f332:	f7ff f911 	bl	800e558 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f336:	4628      	mov	r0, r5
 800f338:	f7ff f90e 	bl	800e558 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f33c:	4824      	ldr	r0, [pc, #144]	@ (800f3d0 <prvAddNewTaskToReadyList+0xdc>)
 800f33e:	f7ff f90b 	bl	800e558 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f342:	4824      	ldr	r0, [pc, #144]	@ (800f3d4 <prvAddNewTaskToReadyList+0xe0>)
 800f344:	f7ff f908 	bl	800e558 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f348:	4823      	ldr	r0, [pc, #140]	@ (800f3d8 <prvAddNewTaskToReadyList+0xe4>)
 800f34a:	f7ff f905 	bl	800e558 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f34e:	4b23      	ldr	r3, [pc, #140]	@ (800f3dc <prvAddNewTaskToReadyList+0xe8>)
 800f350:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f354:	4b22      	ldr	r3, [pc, #136]	@ (800f3e0 <prvAddNewTaskToReadyList+0xec>)
 800f356:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800f358:	4a22      	ldr	r2, [pc, #136]	@ (800f3e4 <prvAddNewTaskToReadyList+0xf0>)
 800f35a:	6813      	ldr	r3, [r2, #0]
 800f35c:	3301      	adds	r3, #1
 800f35e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800f360:	4a21      	ldr	r2, [pc, #132]	@ (800f3e8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f362:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f364:	6811      	ldr	r1, [r2, #0]
 800f366:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f368:	2014      	movs	r0, #20
 800f36a:	428b      	cmp	r3, r1
 800f36c:	fb00 7003 	mla	r0, r0, r3, r7
 800f370:	f104 0104 	add.w	r1, r4, #4
 800f374:	bf88      	it	hi
 800f376:	6013      	strhi	r3, [r2, #0]
 800f378:	f7ff f8fc 	bl	800e574 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800f37c:	f7ff f9b2 	bl	800e6e4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800f380:	4b1a      	ldr	r3, [pc, #104]	@ (800f3ec <prvAddNewTaskToReadyList+0xf8>)
 800f382:	681b      	ldr	r3, [r3, #0]
 800f384:	b173      	cbz	r3, 800f3a4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f386:	6833      	ldr	r3, [r6, #0]
 800f388:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f38a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f38c:	429a      	cmp	r2, r3
 800f38e:	d209      	bcs.n	800f3a4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800f390:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f394:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f398:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f39c:	f3bf 8f4f 	dsb	sy
 800f3a0:	f3bf 8f6f 	isb	sy
}
 800f3a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800f3a8:	4b10      	ldr	r3, [pc, #64]	@ (800f3ec <prvAddNewTaskToReadyList+0xf8>)
 800f3aa:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f3ac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800f3ae:	2a00      	cmp	r2, #0
 800f3b0:	d1d2      	bne.n	800f358 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f3b2:	6832      	ldr	r2, [r6, #0]
 800f3b4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800f3b6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800f3b8:	bf98      	it	ls
 800f3ba:	6034      	strls	r4, [r6, #0]
 800f3bc:	e7cc      	b.n	800f358 <prvAddNewTaskToReadyList+0x64>
 800f3be:	bf00      	nop
 800f3c0:	20013950 	.word	0x20013950
 800f3c4:	20013e24 	.word	0x20013e24
 800f3c8:	200139c4 	.word	0x200139c4
 800f3cc:	2001399c 	.word	0x2001399c
 800f3d0:	20013980 	.word	0x20013980
 800f3d4:	2001396c 	.word	0x2001396c
 800f3d8:	20013954 	.word	0x20013954
 800f3dc:	20013998 	.word	0x20013998
 800f3e0:	20013994 	.word	0x20013994
 800f3e4:	20013934 	.word	0x20013934
 800f3e8:	20013948 	.word	0x20013948
 800f3ec:	20013944 	.word	0x20013944
 800f3f0:	200139b0 	.word	0x200139b0

0800f3f4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800f3f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f3f6:	4b15      	ldr	r3, [pc, #84]	@ (800f44c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f3f8:	4d15      	ldr	r5, [pc, #84]	@ (800f450 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800f3fa:	681c      	ldr	r4, [r3, #0]
{
 800f3fc:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f3fe:	6828      	ldr	r0, [r5, #0]
 800f400:	3004      	adds	r0, #4
{
 800f402:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f404:	f7ff f8d8 	bl	800e5b8 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f408:	1c73      	adds	r3, r6, #1
 800f40a:	d107      	bne.n	800f41c <prvAddCurrentTaskToDelayedList+0x28>
 800f40c:	b137      	cbz	r7, 800f41c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f40e:	6829      	ldr	r1, [r5, #0]
 800f410:	4810      	ldr	r0, [pc, #64]	@ (800f454 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800f412:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f416:	3104      	adds	r1, #4
 800f418:	f7ff b8ac 	b.w	800e574 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f41c:	682b      	ldr	r3, [r5, #0]
 800f41e:	19a4      	adds	r4, r4, r6
 800f420:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f422:	d307      	bcc.n	800f434 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f424:	4b0c      	ldr	r3, [pc, #48]	@ (800f458 <prvAddCurrentTaskToDelayedList+0x64>)
 800f426:	6818      	ldr	r0, [r3, #0]
 800f428:	6829      	ldr	r1, [r5, #0]
}
 800f42a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f42e:	3104      	adds	r1, #4
 800f430:	f7ff b8ab 	b.w	800e58a <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f434:	4b09      	ldr	r3, [pc, #36]	@ (800f45c <prvAddCurrentTaskToDelayedList+0x68>)
 800f436:	6818      	ldr	r0, [r3, #0]
 800f438:	6829      	ldr	r1, [r5, #0]
 800f43a:	3104      	adds	r1, #4
 800f43c:	f7ff f8a5 	bl	800e58a <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f440:	4b07      	ldr	r3, [pc, #28]	@ (800f460 <prvAddCurrentTaskToDelayedList+0x6c>)
 800f442:	681a      	ldr	r2, [r3, #0]
 800f444:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800f446:	bf88      	it	hi
 800f448:	601c      	strhi	r4, [r3, #0]
}
 800f44a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f44c:	2001394c 	.word	0x2001394c
 800f450:	20013e24 	.word	0x20013e24
 800f454:	20013954 	.word	0x20013954
 800f458:	20013994 	.word	0x20013994
 800f45c:	20013998 	.word	0x20013998
 800f460:	20013930 	.word	0x20013930

0800f464 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f464:	4a06      	ldr	r2, [pc, #24]	@ (800f480 <prvResetNextTaskUnblockTime+0x1c>)
 800f466:	6813      	ldr	r3, [r2, #0]
 800f468:	6819      	ldr	r1, [r3, #0]
 800f46a:	4b06      	ldr	r3, [pc, #24]	@ (800f484 <prvResetNextTaskUnblockTime+0x20>)
 800f46c:	b919      	cbnz	r1, 800f476 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f46e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f472:	601a      	str	r2, [r3, #0]
}
 800f474:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f476:	6812      	ldr	r2, [r2, #0]
 800f478:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f47a:	68d2      	ldr	r2, [r2, #12]
 800f47c:	6852      	ldr	r2, [r2, #4]
 800f47e:	e7f8      	b.n	800f472 <prvResetNextTaskUnblockTime+0xe>
 800f480:	20013998 	.word	0x20013998
 800f484:	20013930 	.word	0x20013930

0800f488 <prvDeleteTCB>:
	{
 800f488:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f48a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800f48e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f490:	b93b      	cbnz	r3, 800f4a2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800f492:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800f494:	f7ff f822 	bl	800e4dc <vPortFree>
				vPortFree( pxTCB );
 800f498:	4620      	mov	r0, r4
	}
 800f49a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800f49e:	f7ff b81d 	b.w	800e4dc <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f4a2:	2b01      	cmp	r3, #1
 800f4a4:	d0f9      	beq.n	800f49a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f4a6:	2b02      	cmp	r3, #2
 800f4a8:	d008      	beq.n	800f4bc <prvDeleteTCB+0x34>
 800f4aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f4ae:	f383 8811 	msr	BASEPRI, r3
 800f4b2:	f3bf 8f6f 	isb	sy
 800f4b6:	f3bf 8f4f 	dsb	sy
 800f4ba:	e7fe      	b.n	800f4ba <prvDeleteTCB+0x32>
	}
 800f4bc:	bd10      	pop	{r4, pc}
	...

0800f4c0 <prvIdleTask>:
{
 800f4c0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f4c2:	4c13      	ldr	r4, [pc, #76]	@ (800f510 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4c4:	4f13      	ldr	r7, [pc, #76]	@ (800f514 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800f4c6:	4d14      	ldr	r5, [pc, #80]	@ (800f518 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f4c8:	6823      	ldr	r3, [r4, #0]
 800f4ca:	b973      	cbnz	r3, 800f4ea <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f4cc:	4b13      	ldr	r3, [pc, #76]	@ (800f51c <prvIdleTask+0x5c>)
 800f4ce:	681b      	ldr	r3, [r3, #0]
 800f4d0:	2b01      	cmp	r3, #1
 800f4d2:	d9f8      	bls.n	800f4c6 <prvIdleTask+0x6>
				taskYIELD();
 800f4d4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f4d8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f4dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f4e0:	f3bf 8f4f 	dsb	sy
 800f4e4:	f3bf 8f6f 	isb	sy
 800f4e8:	e7ed      	b.n	800f4c6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800f4ea:	f7ff f8db 	bl	800e6a4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4ee:	68fb      	ldr	r3, [r7, #12]
 800f4f0:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f4f2:	1d30      	adds	r0, r6, #4
 800f4f4:	f7ff f860 	bl	800e5b8 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f4f8:	682b      	ldr	r3, [r5, #0]
 800f4fa:	3b01      	subs	r3, #1
 800f4fc:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f4fe:	6823      	ldr	r3, [r4, #0]
 800f500:	3b01      	subs	r3, #1
 800f502:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800f504:	f7ff f8ee 	bl	800e6e4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800f508:	4630      	mov	r0, r6
 800f50a:	f7ff ffbd 	bl	800f488 <prvDeleteTCB>
 800f50e:	e7db      	b.n	800f4c8 <prvIdleTask+0x8>
 800f510:	20013968 	.word	0x20013968
 800f514:	2001396c 	.word	0x2001396c
 800f518:	20013950 	.word	0x20013950
 800f51c:	200139c4 	.word	0x200139c4

0800f520 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f520:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f524:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f528:	0096      	lsls	r6, r2, #2
 800f52a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f52c:	4607      	mov	r7, r0
 800f52e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f530:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800f532:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f534:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f536:	f01b fe2e 	bl	802b196 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f53a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800f53c:	3e04      	subs	r6, #4
 800f53e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f540:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800f544:	b3b5      	cbz	r5, 800f5b4 <prvInitialiseNewTask.constprop.0+0x94>
 800f546:	1e6b      	subs	r3, r5, #1
 800f548:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800f54c:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f54e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f552:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800f556:	b109      	cbz	r1, 800f55c <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800f558:	42ab      	cmp	r3, r5
 800f55a:	d1f8      	bne.n	800f54e <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f55c:	2300      	movs	r3, #0
 800f55e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f562:	9d08      	ldr	r5, [sp, #32]
 800f564:	2d37      	cmp	r5, #55	@ 0x37
 800f566:	bf28      	it	cs
 800f568:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f56a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f56e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f570:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f572:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f574:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f578:	f7fe fff9 	bl	800e56e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f57c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f580:	f104 0018 	add.w	r0, r4, #24
 800f584:	f7fe fff3 	bl	800e56e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800f588:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f58c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f58e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f590:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f592:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f596:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f59a:	4642      	mov	r2, r8
 800f59c:	4639      	mov	r1, r7
 800f59e:	4630      	mov	r0, r6
 800f5a0:	f7ff f858 	bl	800e654 <pxPortInitialiseStack>
 800f5a4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f5a6:	f1b9 0f00 	cmp.w	r9, #0
 800f5aa:	d001      	beq.n	800f5b0 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f5ac:	f8c9 4000 	str.w	r4, [r9]
}
 800f5b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f5b4:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800f5b8:	e7d3      	b.n	800f562 <prvInitialiseNewTask.constprop.0+0x42>

0800f5ba <xTaskCreateStatic>:
	{
 800f5ba:	b570      	push	{r4, r5, r6, lr}
 800f5bc:	b086      	sub	sp, #24
 800f5be:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f5c2:	b945      	cbnz	r5, 800f5d6 <xTaskCreateStatic+0x1c>
 800f5c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f5c8:	f383 8811 	msr	BASEPRI, r3
 800f5cc:	f3bf 8f6f 	isb	sy
 800f5d0:	f3bf 8f4f 	dsb	sy
 800f5d4:	e7fe      	b.n	800f5d4 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800f5d6:	b944      	cbnz	r4, 800f5ea <xTaskCreateStatic+0x30>
 800f5d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f5dc:	f383 8811 	msr	BASEPRI, r3
 800f5e0:	f3bf 8f6f 	isb	sy
 800f5e4:	f3bf 8f4f 	dsb	sy
 800f5e8:	e7fe      	b.n	800f5e8 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f5ea:	2660      	movs	r6, #96	@ 0x60
 800f5ec:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f5ee:	9e05      	ldr	r6, [sp, #20]
 800f5f0:	2e60      	cmp	r6, #96	@ 0x60
 800f5f2:	d008      	beq.n	800f606 <xTaskCreateStatic+0x4c>
 800f5f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f5f8:	f383 8811 	msr	BASEPRI, r3
 800f5fc:	f3bf 8f6f 	isb	sy
 800f600:	f3bf 8f4f 	dsb	sy
 800f604:	e7fe      	b.n	800f604 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f606:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f608:	2502      	movs	r5, #2
 800f60a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f60e:	ad04      	add	r5, sp, #16
 800f610:	9501      	str	r5, [sp, #4]
 800f612:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800f614:	9402      	str	r4, [sp, #8]
 800f616:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f618:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f61a:	f7ff ff81 	bl	800f520 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f61e:	4620      	mov	r0, r4
 800f620:	f7ff fe68 	bl	800f2f4 <prvAddNewTaskToReadyList>
	}
 800f624:	9804      	ldr	r0, [sp, #16]
 800f626:	b006      	add	sp, #24
 800f628:	bd70      	pop	{r4, r5, r6, pc}

0800f62a <xTaskCreate>:
	{
 800f62a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f62e:	4607      	mov	r7, r0
 800f630:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f632:	0090      	lsls	r0, r2, #2
	{
 800f634:	4688      	mov	r8, r1
 800f636:	4616      	mov	r6, r2
 800f638:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f63a:	f7fe feb7 	bl	800e3ac <pvPortMalloc>
			if( pxStack != NULL )
 800f63e:	4605      	mov	r5, r0
 800f640:	b920      	cbnz	r0, 800f64c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f642:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f646:	b005      	add	sp, #20
 800f648:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f64c:	2060      	movs	r0, #96	@ 0x60
 800f64e:	f7fe fead 	bl	800e3ac <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f652:	4604      	mov	r4, r0
 800f654:	b198      	cbz	r0, 800f67e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f656:	2300      	movs	r3, #0
 800f658:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f65c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800f65e:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f660:	9301      	str	r3, [sp, #4]
 800f662:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f664:	9002      	str	r0, [sp, #8]
 800f666:	9300      	str	r3, [sp, #0]
 800f668:	4632      	mov	r2, r6
 800f66a:	464b      	mov	r3, r9
 800f66c:	4641      	mov	r1, r8
 800f66e:	4638      	mov	r0, r7
 800f670:	f7ff ff56 	bl	800f520 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f674:	4620      	mov	r0, r4
 800f676:	f7ff fe3d 	bl	800f2f4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f67a:	2001      	movs	r0, #1
 800f67c:	e7e3      	b.n	800f646 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800f67e:	4628      	mov	r0, r5
 800f680:	f7fe ff2c 	bl	800e4dc <vPortFree>
		if( pxNewTCB != NULL )
 800f684:	e7dd      	b.n	800f642 <xTaskCreate+0x18>
	...

0800f688 <vTaskStartScheduler>:
{
 800f688:	b510      	push	{r4, lr}
 800f68a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f68c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f68e:	aa07      	add	r2, sp, #28
 800f690:	a906      	add	r1, sp, #24
 800f692:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f694:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f698:	f7fe fe4a 	bl	800e330 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f69c:	9b05      	ldr	r3, [sp, #20]
 800f69e:	9302      	str	r3, [sp, #8]
 800f6a0:	9b06      	ldr	r3, [sp, #24]
 800f6a2:	9a07      	ldr	r2, [sp, #28]
 800f6a4:	4916      	ldr	r1, [pc, #88]	@ (800f700 <vTaskStartScheduler+0x78>)
 800f6a6:	4817      	ldr	r0, [pc, #92]	@ (800f704 <vTaskStartScheduler+0x7c>)
 800f6a8:	e9cd 4300 	strd	r4, r3, [sp]
 800f6ac:	4623      	mov	r3, r4
 800f6ae:	f7ff ff84 	bl	800f5ba <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800f6b2:	b318      	cbz	r0, 800f6fc <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800f6b4:	f000 fba6 	bl	800fe04 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f6b8:	2801      	cmp	r0, #1
 800f6ba:	d114      	bne.n	800f6e6 <vTaskStartScheduler+0x5e>
 800f6bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f6c0:	f383 8811 	msr	BASEPRI, r3
 800f6c4:	f3bf 8f6f 	isb	sy
 800f6c8:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800f6cc:	4b0e      	ldr	r3, [pc, #56]	@ (800f708 <vTaskStartScheduler+0x80>)
 800f6ce:	f04f 32ff 	mov.w	r2, #4294967295
 800f6d2:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800f6d4:	4b0d      	ldr	r3, [pc, #52]	@ (800f70c <vTaskStartScheduler+0x84>)
 800f6d6:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f6d8:	4b0d      	ldr	r3, [pc, #52]	@ (800f710 <vTaskStartScheduler+0x88>)
 800f6da:	601c      	str	r4, [r3, #0]
}
 800f6dc:	b008      	add	sp, #32
 800f6de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f6e2:	f7ff b86f 	b.w	800e7c4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f6e6:	3001      	adds	r0, #1
 800f6e8:	d108      	bne.n	800f6fc <vTaskStartScheduler+0x74>
 800f6ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f6ee:	f383 8811 	msr	BASEPRI, r3
 800f6f2:	f3bf 8f6f 	isb	sy
 800f6f6:	f3bf 8f4f 	dsb	sy
 800f6fa:	e7fe      	b.n	800f6fa <vTaskStartScheduler+0x72>
}
 800f6fc:	b008      	add	sp, #32
 800f6fe:	bd10      	pop	{r4, pc}
 800f700:	0802d0c2 	.word	0x0802d0c2
 800f704:	0800f4c1 	.word	0x0800f4c1
 800f708:	20013930 	.word	0x20013930
 800f70c:	20013944 	.word	0x20013944
 800f710:	2001394c 	.word	0x2001394c

0800f714 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f714:	4a02      	ldr	r2, [pc, #8]	@ (800f720 <vTaskSuspendAll+0xc>)
 800f716:	6813      	ldr	r3, [r2, #0]
 800f718:	3301      	adds	r3, #1
 800f71a:	6013      	str	r3, [r2, #0]
}
 800f71c:	4770      	bx	lr
 800f71e:	bf00      	nop
 800f720:	2001392c 	.word	0x2001392c

0800f724 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f724:	4b01      	ldr	r3, [pc, #4]	@ (800f72c <xTaskGetTickCount+0x8>)
 800f726:	6818      	ldr	r0, [r3, #0]
}
 800f728:	4770      	bx	lr
 800f72a:	bf00      	nop
 800f72c:	2001394c 	.word	0x2001394c

0800f730 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f730:	4b3f      	ldr	r3, [pc, #252]	@ (800f830 <xTaskIncrementTick+0x100>)
 800f732:	681b      	ldr	r3, [r3, #0]
{
 800f734:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f738:	2b00      	cmp	r3, #0
 800f73a:	d172      	bne.n	800f822 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f73c:	4b3d      	ldr	r3, [pc, #244]	@ (800f834 <xTaskIncrementTick+0x104>)
 800f73e:	681c      	ldr	r4, [r3, #0]
 800f740:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800f742:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f744:	b9bc      	cbnz	r4, 800f776 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800f746:	4b3c      	ldr	r3, [pc, #240]	@ (800f838 <xTaskIncrementTick+0x108>)
 800f748:	681a      	ldr	r2, [r3, #0]
 800f74a:	6812      	ldr	r2, [r2, #0]
 800f74c:	b142      	cbz	r2, 800f760 <xTaskIncrementTick+0x30>
 800f74e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f752:	f383 8811 	msr	BASEPRI, r3
 800f756:	f3bf 8f6f 	isb	sy
 800f75a:	f3bf 8f4f 	dsb	sy
 800f75e:	e7fe      	b.n	800f75e <xTaskIncrementTick+0x2e>
 800f760:	4a36      	ldr	r2, [pc, #216]	@ (800f83c <xTaskIncrementTick+0x10c>)
 800f762:	6819      	ldr	r1, [r3, #0]
 800f764:	6810      	ldr	r0, [r2, #0]
 800f766:	6018      	str	r0, [r3, #0]
 800f768:	6011      	str	r1, [r2, #0]
 800f76a:	4a35      	ldr	r2, [pc, #212]	@ (800f840 <xTaskIncrementTick+0x110>)
 800f76c:	6813      	ldr	r3, [r2, #0]
 800f76e:	3301      	adds	r3, #1
 800f770:	6013      	str	r3, [r2, #0]
 800f772:	f7ff fe77 	bl	800f464 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f776:	4d33      	ldr	r5, [pc, #204]	@ (800f844 <xTaskIncrementTick+0x114>)
 800f778:	4e33      	ldr	r6, [pc, #204]	@ (800f848 <xTaskIncrementTick+0x118>)
 800f77a:	682b      	ldr	r3, [r5, #0]
 800f77c:	4f33      	ldr	r7, [pc, #204]	@ (800f84c <xTaskIncrementTick+0x11c>)
 800f77e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800f780:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f784:	d212      	bcs.n	800f7ac <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f786:	683a      	ldr	r2, [r7, #0]
 800f788:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800f78a:	2114      	movs	r1, #20
 800f78c:	434a      	muls	r2, r1
 800f78e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800f790:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800f792:	4a2f      	ldr	r2, [pc, #188]	@ (800f850 <xTaskIncrementTick+0x120>)
 800f794:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800f796:	bf28      	it	cs
 800f798:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800f79c:	2a00      	cmp	r2, #0
 800f79e:	bf18      	it	ne
 800f7a0:	f04f 0b01 	movne.w	fp, #1
}
 800f7a4:	4658      	mov	r0, fp
 800f7a6:	b003      	add	sp, #12
 800f7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f7ac:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800f838 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800f7b0:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800f858 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f7b4:	f8d9 2000 	ldr.w	r2, [r9]
 800f7b8:	6812      	ldr	r2, [r2, #0]
 800f7ba:	b91a      	cbnz	r2, 800f7c4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f7bc:	f04f 32ff 	mov.w	r2, #4294967295
 800f7c0:	602a      	str	r2, [r5, #0]
					break;
 800f7c2:	e7e0      	b.n	800f786 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f7c4:	f8d9 2000 	ldr.w	r2, [r9]
 800f7c8:	68d2      	ldr	r2, [r2, #12]
 800f7ca:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f7ce:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800f7d2:	428c      	cmp	r4, r1
 800f7d4:	d201      	bcs.n	800f7da <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800f7d6:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f7d8:	e7d5      	b.n	800f786 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f7da:	f108 0304 	add.w	r3, r8, #4
 800f7de:	4618      	mov	r0, r3
 800f7e0:	9301      	str	r3, [sp, #4]
 800f7e2:	f7fe fee9 	bl	800e5b8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f7e6:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800f7ea:	b119      	cbz	r1, 800f7f4 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f7ec:	f108 0018 	add.w	r0, r8, #24
 800f7f0:	f7fe fee2 	bl	800e5b8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f7f4:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800f7f8:	f8da 1000 	ldr.w	r1, [sl]
 800f7fc:	2314      	movs	r3, #20
 800f7fe:	4288      	cmp	r0, r1
 800f800:	bf88      	it	hi
 800f802:	f8ca 0000 	strhi.w	r0, [sl]
 800f806:	9901      	ldr	r1, [sp, #4]
 800f808:	fb03 6000 	mla	r0, r3, r0, r6
 800f80c:	f7fe feb2 	bl	800e574 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f810:	6838      	ldr	r0, [r7, #0]
 800f812:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800f816:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800f818:	4291      	cmp	r1, r2
 800f81a:	bf28      	it	cs
 800f81c:	f04f 0b01 	movcs.w	fp, #1
 800f820:	e7c8      	b.n	800f7b4 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800f822:	4a0c      	ldr	r2, [pc, #48]	@ (800f854 <xTaskIncrementTick+0x124>)
 800f824:	6813      	ldr	r3, [r2, #0]
 800f826:	3301      	adds	r3, #1
 800f828:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800f82a:	f04f 0b00 	mov.w	fp, #0
 800f82e:	e7b9      	b.n	800f7a4 <xTaskIncrementTick+0x74>
 800f830:	2001392c 	.word	0x2001392c
 800f834:	2001394c 	.word	0x2001394c
 800f838:	20013998 	.word	0x20013998
 800f83c:	20013994 	.word	0x20013994
 800f840:	20013938 	.word	0x20013938
 800f844:	20013930 	.word	0x20013930
 800f848:	200139c4 	.word	0x200139c4
 800f84c:	20013e24 	.word	0x20013e24
 800f850:	2001393c 	.word	0x2001393c
 800f854:	20013940 	.word	0x20013940
 800f858:	20013948 	.word	0x20013948

0800f85c <xTaskResumeAll>:
{
 800f85c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800f860:	4c30      	ldr	r4, [pc, #192]	@ (800f924 <xTaskResumeAll+0xc8>)
 800f862:	6823      	ldr	r3, [r4, #0]
 800f864:	b943      	cbnz	r3, 800f878 <xTaskResumeAll+0x1c>
 800f866:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f86a:	f383 8811 	msr	BASEPRI, r3
 800f86e:	f3bf 8f6f 	isb	sy
 800f872:	f3bf 8f4f 	dsb	sy
 800f876:	e7fe      	b.n	800f876 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800f878:	f7fe ff14 	bl	800e6a4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f87c:	6823      	ldr	r3, [r4, #0]
 800f87e:	3b01      	subs	r3, #1
 800f880:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f882:	6824      	ldr	r4, [r4, #0]
 800f884:	b12c      	cbz	r4, 800f892 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800f886:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800f888:	f7fe ff2c 	bl	800e6e4 <vPortExitCritical>
}
 800f88c:	4620      	mov	r0, r4
 800f88e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f892:	4b25      	ldr	r3, [pc, #148]	@ (800f928 <xTaskResumeAll+0xcc>)
 800f894:	681b      	ldr	r3, [r3, #0]
 800f896:	2b00      	cmp	r3, #0
 800f898:	d0f5      	beq.n	800f886 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f89a:	4d24      	ldr	r5, [pc, #144]	@ (800f92c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800f89c:	4e24      	ldr	r6, [pc, #144]	@ (800f930 <xTaskResumeAll+0xd4>)
 800f89e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800f940 <xTaskResumeAll+0xe4>
 800f8a2:	e01d      	b.n	800f8e0 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f8a4:	68eb      	ldr	r3, [r5, #12]
 800f8a6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f8a8:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f8aa:	f104 0018 	add.w	r0, r4, #24
 800f8ae:	f7fe fe83 	bl	800e5b8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f8b2:	4638      	mov	r0, r7
 800f8b4:	f7fe fe80 	bl	800e5b8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f8b8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f8ba:	6832      	ldr	r2, [r6, #0]
 800f8bc:	2014      	movs	r0, #20
 800f8be:	4293      	cmp	r3, r2
 800f8c0:	fb00 8003 	mla	r0, r0, r3, r8
 800f8c4:	4639      	mov	r1, r7
 800f8c6:	bf88      	it	hi
 800f8c8:	6033      	strhi	r3, [r6, #0]
 800f8ca:	f7fe fe53 	bl	800e574 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f8ce:	4b19      	ldr	r3, [pc, #100]	@ (800f934 <xTaskResumeAll+0xd8>)
 800f8d0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800f8d2:	681b      	ldr	r3, [r3, #0]
 800f8d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f8d6:	429a      	cmp	r2, r3
 800f8d8:	d302      	bcc.n	800f8e0 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800f8da:	4b17      	ldr	r3, [pc, #92]	@ (800f938 <xTaskResumeAll+0xdc>)
 800f8dc:	2201      	movs	r2, #1
 800f8de:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f8e0:	682b      	ldr	r3, [r5, #0]
 800f8e2:	2b00      	cmp	r3, #0
 800f8e4:	d1de      	bne.n	800f8a4 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800f8e6:	b10c      	cbz	r4, 800f8ec <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800f8e8:	f7ff fdbc 	bl	800f464 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f8ec:	4d13      	ldr	r5, [pc, #76]	@ (800f93c <xTaskResumeAll+0xe0>)
 800f8ee:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f8f0:	b144      	cbz	r4, 800f904 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800f8f2:	4e11      	ldr	r6, [pc, #68]	@ (800f938 <xTaskResumeAll+0xdc>)
 800f8f4:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800f8f6:	f7ff ff1b 	bl	800f730 <xTaskIncrementTick>
 800f8fa:	b100      	cbz	r0, 800f8fe <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800f8fc:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f8fe:	3c01      	subs	r4, #1
 800f900:	d1f9      	bne.n	800f8f6 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800f902:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800f904:	4b0c      	ldr	r3, [pc, #48]	@ (800f938 <xTaskResumeAll+0xdc>)
 800f906:	681b      	ldr	r3, [r3, #0]
 800f908:	2b00      	cmp	r3, #0
 800f90a:	d0bc      	beq.n	800f886 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800f90c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f910:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f914:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f918:	f3bf 8f4f 	dsb	sy
 800f91c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f920:	2401      	movs	r4, #1
 800f922:	e7b1      	b.n	800f888 <xTaskResumeAll+0x2c>
 800f924:	2001392c 	.word	0x2001392c
 800f928:	20013950 	.word	0x20013950
 800f92c:	20013980 	.word	0x20013980
 800f930:	20013948 	.word	0x20013948
 800f934:	20013e24 	.word	0x20013e24
 800f938:	2001393c 	.word	0x2001393c
 800f93c:	20013940 	.word	0x20013940
 800f940:	200139c4 	.word	0x200139c4

0800f944 <vTaskDelay>:
	{
 800f944:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f946:	b950      	cbnz	r0, 800f95e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f948:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f94c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f950:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f954:	f3bf 8f4f 	dsb	sy
 800f958:	f3bf 8f6f 	isb	sy
	}
 800f95c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f95e:	4b0a      	ldr	r3, [pc, #40]	@ (800f988 <vTaskDelay+0x44>)
 800f960:	6819      	ldr	r1, [r3, #0]
 800f962:	b141      	cbz	r1, 800f976 <vTaskDelay+0x32>
 800f964:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f968:	f383 8811 	msr	BASEPRI, r3
 800f96c:	f3bf 8f6f 	isb	sy
 800f970:	f3bf 8f4f 	dsb	sy
 800f974:	e7fe      	b.n	800f974 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800f976:	f7ff fecd 	bl	800f714 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800f97a:	f7ff fd3b 	bl	800f3f4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800f97e:	f7ff ff6d 	bl	800f85c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800f982:	2800      	cmp	r0, #0
 800f984:	d0e0      	beq.n	800f948 <vTaskDelay+0x4>
 800f986:	e7e9      	b.n	800f95c <vTaskDelay+0x18>
 800f988:	2001392c 	.word	0x2001392c

0800f98c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f98c:	4b17      	ldr	r3, [pc, #92]	@ (800f9ec <vTaskSwitchContext+0x60>)
 800f98e:	681a      	ldr	r2, [r3, #0]
 800f990:	4b17      	ldr	r3, [pc, #92]	@ (800f9f0 <vTaskSwitchContext+0x64>)
{
 800f992:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f994:	b112      	cbz	r2, 800f99c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800f996:	2201      	movs	r2, #1
 800f998:	601a      	str	r2, [r3, #0]
}
 800f99a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f99c:	4d15      	ldr	r5, [pc, #84]	@ (800f9f4 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800f99e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9a0:	682a      	ldr	r2, [r5, #0]
 800f9a2:	4915      	ldr	r1, [pc, #84]	@ (800f9f8 <vTaskSwitchContext+0x6c>)
 800f9a4:	2614      	movs	r6, #20
 800f9a6:	fb06 f302 	mul.w	r3, r6, r2
 800f9aa:	18c8      	adds	r0, r1, r3
 800f9ac:	58cc      	ldr	r4, [r1, r3]
 800f9ae:	b18c      	cbz	r4, 800f9d4 <vTaskSwitchContext+0x48>
 800f9b0:	6844      	ldr	r4, [r0, #4]
 800f9b2:	3308      	adds	r3, #8
 800f9b4:	6864      	ldr	r4, [r4, #4]
 800f9b6:	6044      	str	r4, [r0, #4]
 800f9b8:	440b      	add	r3, r1
 800f9ba:	429c      	cmp	r4, r3
 800f9bc:	bf04      	itt	eq
 800f9be:	6863      	ldreq	r3, [r4, #4]
 800f9c0:	6043      	streq	r3, [r0, #4]
 800f9c2:	2314      	movs	r3, #20
 800f9c4:	fb03 1102 	mla	r1, r3, r2, r1
 800f9c8:	684b      	ldr	r3, [r1, #4]
 800f9ca:	68d9      	ldr	r1, [r3, #12]
 800f9cc:	4b0b      	ldr	r3, [pc, #44]	@ (800f9fc <vTaskSwitchContext+0x70>)
 800f9ce:	6019      	str	r1, [r3, #0]
 800f9d0:	602a      	str	r2, [r5, #0]
}
 800f9d2:	e7e2      	b.n	800f99a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9d4:	b942      	cbnz	r2, 800f9e8 <vTaskSwitchContext+0x5c>
 800f9d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f9da:	f383 8811 	msr	BASEPRI, r3
 800f9de:	f3bf 8f6f 	isb	sy
 800f9e2:	f3bf 8f4f 	dsb	sy
 800f9e6:	e7fe      	b.n	800f9e6 <vTaskSwitchContext+0x5a>
 800f9e8:	3a01      	subs	r2, #1
 800f9ea:	e7dc      	b.n	800f9a6 <vTaskSwitchContext+0x1a>
 800f9ec:	2001392c 	.word	0x2001392c
 800f9f0:	2001393c 	.word	0x2001393c
 800f9f4:	20013948 	.word	0x20013948
 800f9f8:	200139c4 	.word	0x200139c4
 800f9fc:	20013e24 	.word	0x20013e24

0800fa00 <vTaskPlaceOnEventList>:
{
 800fa00:	b510      	push	{r4, lr}
 800fa02:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800fa04:	b940      	cbnz	r0, 800fa18 <vTaskPlaceOnEventList+0x18>
 800fa06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fa0a:	f383 8811 	msr	BASEPRI, r3
 800fa0e:	f3bf 8f6f 	isb	sy
 800fa12:	f3bf 8f4f 	dsb	sy
 800fa16:	e7fe      	b.n	800fa16 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fa18:	4b05      	ldr	r3, [pc, #20]	@ (800fa30 <vTaskPlaceOnEventList+0x30>)
 800fa1a:	6819      	ldr	r1, [r3, #0]
 800fa1c:	3118      	adds	r1, #24
 800fa1e:	f7fe fdb4 	bl	800e58a <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800fa22:	4620      	mov	r0, r4
 800fa24:	2101      	movs	r1, #1
}
 800fa26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800fa2a:	f7ff bce3 	b.w	800f3f4 <prvAddCurrentTaskToDelayedList>
 800fa2e:	bf00      	nop
 800fa30:	20013e24 	.word	0x20013e24

0800fa34 <vTaskPlaceOnEventListRestricted>:
	{
 800fa34:	b538      	push	{r3, r4, r5, lr}
 800fa36:	460d      	mov	r5, r1
 800fa38:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800fa3a:	b940      	cbnz	r0, 800fa4e <vTaskPlaceOnEventListRestricted+0x1a>
 800fa3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fa40:	f383 8811 	msr	BASEPRI, r3
 800fa44:	f3bf 8f6f 	isb	sy
 800fa48:	f3bf 8f4f 	dsb	sy
 800fa4c:	e7fe      	b.n	800fa4c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fa4e:	4b07      	ldr	r3, [pc, #28]	@ (800fa6c <vTaskPlaceOnEventListRestricted+0x38>)
 800fa50:	6819      	ldr	r1, [r3, #0]
 800fa52:	3118      	adds	r1, #24
 800fa54:	f7fe fd8e 	bl	800e574 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800fa58:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800fa5a:	4621      	mov	r1, r4
 800fa5c:	bf0c      	ite	eq
 800fa5e:	4628      	moveq	r0, r5
 800fa60:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800fa64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800fa68:	f7ff bcc4 	b.w	800f3f4 <prvAddCurrentTaskToDelayedList>
 800fa6c:	20013e24 	.word	0x20013e24

0800fa70 <xTaskRemoveFromEventList>:
{
 800fa70:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa72:	68c3      	ldr	r3, [r0, #12]
 800fa74:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800fa76:	b944      	cbnz	r4, 800fa8a <xTaskRemoveFromEventList+0x1a>
 800fa78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fa7c:	f383 8811 	msr	BASEPRI, r3
 800fa80:	f3bf 8f6f 	isb	sy
 800fa84:	f3bf 8f4f 	dsb	sy
 800fa88:	e7fe      	b.n	800fa88 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fa8a:	f104 0518 	add.w	r5, r4, #24
 800fa8e:	4628      	mov	r0, r5
 800fa90:	f7fe fd92 	bl	800e5b8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa94:	4b10      	ldr	r3, [pc, #64]	@ (800fad8 <xTaskRemoveFromEventList+0x68>)
 800fa96:	681b      	ldr	r3, [r3, #0]
 800fa98:	b9db      	cbnz	r3, 800fad2 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fa9a:	1d25      	adds	r5, r4, #4
 800fa9c:	4628      	mov	r0, r5
 800fa9e:	f7fe fd8b 	bl	800e5b8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800faa2:	4a0e      	ldr	r2, [pc, #56]	@ (800fadc <xTaskRemoveFromEventList+0x6c>)
 800faa4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800faa6:	6811      	ldr	r1, [r2, #0]
 800faa8:	428b      	cmp	r3, r1
 800faaa:	bf88      	it	hi
 800faac:	6013      	strhi	r3, [r2, #0]
 800faae:	4a0c      	ldr	r2, [pc, #48]	@ (800fae0 <xTaskRemoveFromEventList+0x70>)
 800fab0:	2014      	movs	r0, #20
 800fab2:	4629      	mov	r1, r5
 800fab4:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fab8:	f7fe fd5c 	bl	800e574 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fabc:	4b09      	ldr	r3, [pc, #36]	@ (800fae4 <xTaskRemoveFromEventList+0x74>)
 800fabe:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800fac0:	681b      	ldr	r3, [r3, #0]
 800fac2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fac4:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fac6:	bf83      	ittte	hi
 800fac8:	4b07      	ldrhi	r3, [pc, #28]	@ (800fae8 <xTaskRemoveFromEventList+0x78>)
 800faca:	2001      	movhi	r0, #1
 800facc:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800face:	2000      	movls	r0, #0
}
 800fad0:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fad2:	4806      	ldr	r0, [pc, #24]	@ (800faec <xTaskRemoveFromEventList+0x7c>)
 800fad4:	4629      	mov	r1, r5
 800fad6:	e7ef      	b.n	800fab8 <xTaskRemoveFromEventList+0x48>
 800fad8:	2001392c 	.word	0x2001392c
 800fadc:	20013948 	.word	0x20013948
 800fae0:	200139c4 	.word	0x200139c4
 800fae4:	20013e24 	.word	0x20013e24
 800fae8:	2001393c 	.word	0x2001393c
 800faec:	20013980 	.word	0x20013980

0800faf0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800faf0:	4b03      	ldr	r3, [pc, #12]	@ (800fb00 <vTaskInternalSetTimeOutState+0x10>)
 800faf2:	681b      	ldr	r3, [r3, #0]
 800faf4:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800faf6:	4b03      	ldr	r3, [pc, #12]	@ (800fb04 <vTaskInternalSetTimeOutState+0x14>)
 800faf8:	681b      	ldr	r3, [r3, #0]
 800fafa:	6043      	str	r3, [r0, #4]
}
 800fafc:	4770      	bx	lr
 800fafe:	bf00      	nop
 800fb00:	20013938 	.word	0x20013938
 800fb04:	2001394c 	.word	0x2001394c

0800fb08 <xTaskCheckForTimeOut>:
{
 800fb08:	b570      	push	{r4, r5, r6, lr}
 800fb0a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800fb0c:	4605      	mov	r5, r0
 800fb0e:	b940      	cbnz	r0, 800fb22 <xTaskCheckForTimeOut+0x1a>
 800fb10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb14:	f383 8811 	msr	BASEPRI, r3
 800fb18:	f3bf 8f6f 	isb	sy
 800fb1c:	f3bf 8f4f 	dsb	sy
 800fb20:	e7fe      	b.n	800fb20 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800fb22:	b941      	cbnz	r1, 800fb36 <xTaskCheckForTimeOut+0x2e>
 800fb24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb28:	f383 8811 	msr	BASEPRI, r3
 800fb2c:	f3bf 8f6f 	isb	sy
 800fb30:	f3bf 8f4f 	dsb	sy
 800fb34:	e7fe      	b.n	800fb34 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800fb36:	f7fe fdb5 	bl	800e6a4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800fb3a:	4b0f      	ldr	r3, [pc, #60]	@ (800fb78 <xTaskCheckForTimeOut+0x70>)
 800fb3c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fb3e:	6823      	ldr	r3, [r4, #0]
 800fb40:	1c5a      	adds	r2, r3, #1
 800fb42:	d010      	beq.n	800fb66 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fb44:	480d      	ldr	r0, [pc, #52]	@ (800fb7c <xTaskCheckForTimeOut+0x74>)
 800fb46:	682e      	ldr	r6, [r5, #0]
 800fb48:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fb4a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fb4c:	4286      	cmp	r6, r0
 800fb4e:	d001      	beq.n	800fb54 <xTaskCheckForTimeOut+0x4c>
 800fb50:	428a      	cmp	r2, r1
 800fb52:	d90f      	bls.n	800fb74 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fb54:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fb56:	4283      	cmp	r3, r0
 800fb58:	d90a      	bls.n	800fb70 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800fb5a:	1a5b      	subs	r3, r3, r1
 800fb5c:	4413      	add	r3, r2
 800fb5e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800fb60:	4628      	mov	r0, r5
 800fb62:	f7ff ffc5 	bl	800faf0 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800fb66:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800fb68:	f7fe fdbc 	bl	800e6e4 <vPortExitCritical>
}
 800fb6c:	4620      	mov	r0, r4
 800fb6e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800fb70:	2300      	movs	r3, #0
 800fb72:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800fb74:	2401      	movs	r4, #1
 800fb76:	e7f7      	b.n	800fb68 <xTaskCheckForTimeOut+0x60>
 800fb78:	2001394c 	.word	0x2001394c
 800fb7c:	20013938 	.word	0x20013938

0800fb80 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fb80:	4b01      	ldr	r3, [pc, #4]	@ (800fb88 <vTaskMissedYield+0x8>)
 800fb82:	2201      	movs	r2, #1
 800fb84:	601a      	str	r2, [r3, #0]
}
 800fb86:	4770      	bx	lr
 800fb88:	2001393c 	.word	0x2001393c

0800fb8c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fb8c:	4b05      	ldr	r3, [pc, #20]	@ (800fba4 <xTaskGetSchedulerState+0x18>)
 800fb8e:	681b      	ldr	r3, [r3, #0]
 800fb90:	b133      	cbz	r3, 800fba0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fb92:	4b05      	ldr	r3, [pc, #20]	@ (800fba8 <xTaskGetSchedulerState+0x1c>)
 800fb94:	6818      	ldr	r0, [r3, #0]
 800fb96:	fab0 f080 	clz	r0, r0
 800fb9a:	0940      	lsrs	r0, r0, #5
 800fb9c:	0040      	lsls	r0, r0, #1
 800fb9e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fba0:	2001      	movs	r0, #1
	}
 800fba2:	4770      	bx	lr
 800fba4:	20013944 	.word	0x20013944
 800fba8:	2001392c 	.word	0x2001392c

0800fbac <xTaskPriorityInherit>:
	{
 800fbac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800fbae:	4604      	mov	r4, r0
 800fbb0:	b338      	cbz	r0, 800fc02 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fbb2:	4d1a      	ldr	r5, [pc, #104]	@ (800fc1c <xTaskPriorityInherit+0x70>)
 800fbb4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800fbb6:	682a      	ldr	r2, [r5, #0]
 800fbb8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800fbba:	4293      	cmp	r3, r2
 800fbbc:	d226      	bcs.n	800fc0c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fbbe:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fbc0:	4e17      	ldr	r6, [pc, #92]	@ (800fc20 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fbc2:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fbc4:	bfa1      	itttt	ge
 800fbc6:	682a      	ldrge	r2, [r5, #0]
 800fbc8:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800fbca:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800fbce:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fbd0:	2214      	movs	r2, #20
 800fbd2:	fb02 6303 	mla	r3, r2, r3, r6
 800fbd6:	6942      	ldr	r2, [r0, #20]
 800fbd8:	429a      	cmp	r2, r3
 800fbda:	d113      	bne.n	800fc04 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fbdc:	1d07      	adds	r7, r0, #4
 800fbde:	4638      	mov	r0, r7
 800fbe0:	f7fe fcea 	bl	800e5b8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fbe4:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fbe6:	4a0f      	ldr	r2, [pc, #60]	@ (800fc24 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fbe8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fbea:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fbec:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fbee:	2014      	movs	r0, #20
 800fbf0:	428b      	cmp	r3, r1
 800fbf2:	fb00 6003 	mla	r0, r0, r3, r6
 800fbf6:	4639      	mov	r1, r7
 800fbf8:	bf88      	it	hi
 800fbfa:	6013      	strhi	r3, [r2, #0]
 800fbfc:	f7fe fcba 	bl	800e574 <vListInsertEnd>
				xReturn = pdTRUE;
 800fc00:	2001      	movs	r0, #1
	}
 800fc02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fc04:	682b      	ldr	r3, [r5, #0]
 800fc06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fc08:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800fc0a:	e7f9      	b.n	800fc00 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fc0c:	682b      	ldr	r3, [r5, #0]
 800fc0e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 800fc10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fc12:	4298      	cmp	r0, r3
 800fc14:	bf2c      	ite	cs
 800fc16:	2000      	movcs	r0, #0
 800fc18:	2001      	movcc	r0, #1
 800fc1a:	e7f2      	b.n	800fc02 <xTaskPriorityInherit+0x56>
 800fc1c:	20013e24 	.word	0x20013e24
 800fc20:	200139c4 	.word	0x200139c4
 800fc24:	20013948 	.word	0x20013948

0800fc28 <xTaskPriorityDisinherit>:
	{
 800fc28:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800fc2a:	b908      	cbnz	r0, 800fc30 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800fc2c:	2000      	movs	r0, #0
	}
 800fc2e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800fc30:	4b1b      	ldr	r3, [pc, #108]	@ (800fca0 <xTaskPriorityDisinherit+0x78>)
 800fc32:	681c      	ldr	r4, [r3, #0]
 800fc34:	4284      	cmp	r4, r0
 800fc36:	d008      	beq.n	800fc4a <xTaskPriorityDisinherit+0x22>
 800fc38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fc3c:	f383 8811 	msr	BASEPRI, r3
 800fc40:	f3bf 8f6f 	isb	sy
 800fc44:	f3bf 8f4f 	dsb	sy
 800fc48:	e7fe      	b.n	800fc48 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800fc4a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800fc4c:	b943      	cbnz	r3, 800fc60 <xTaskPriorityDisinherit+0x38>
 800fc4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fc52:	f383 8811 	msr	BASEPRI, r3
 800fc56:	f3bf 8f6f 	isb	sy
 800fc5a:	f3bf 8f4f 	dsb	sy
 800fc5e:	e7fe      	b.n	800fc5e <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fc60:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800fc62:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fc64:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fc66:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fc68:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fc6a:	d0df      	beq.n	800fc2c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fc6c:	2b00      	cmp	r3, #0
 800fc6e:	d1dd      	bne.n	800fc2c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc70:	1d25      	adds	r5, r4, #4
 800fc72:	4628      	mov	r0, r5
 800fc74:	f7fe fca0 	bl	800e5b8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fc78:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800fc7a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fc7c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 800fc80:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fc82:	4a08      	ldr	r2, [pc, #32]	@ (800fca4 <xTaskPriorityDisinherit+0x7c>)
 800fc84:	6811      	ldr	r1, [r2, #0]
 800fc86:	428b      	cmp	r3, r1
 800fc88:	bf88      	it	hi
 800fc8a:	6013      	strhi	r3, [r2, #0]
 800fc8c:	4a06      	ldr	r2, [pc, #24]	@ (800fca8 <xTaskPriorityDisinherit+0x80>)
 800fc8e:	2014      	movs	r0, #20
 800fc90:	fb00 2003 	mla	r0, r0, r3, r2
 800fc94:	4629      	mov	r1, r5
 800fc96:	f7fe fc6d 	bl	800e574 <vListInsertEnd>
					xReturn = pdTRUE;
 800fc9a:	2001      	movs	r0, #1
		return xReturn;
 800fc9c:	e7c7      	b.n	800fc2e <xTaskPriorityDisinherit+0x6>
 800fc9e:	bf00      	nop
 800fca0:	20013e24 	.word	0x20013e24
 800fca4:	20013948 	.word	0x20013948
 800fca8:	200139c4 	.word	0x200139c4

0800fcac <vTaskPriorityDisinheritAfterTimeout>:
	{
 800fcac:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fcae:	4604      	mov	r4, r0
 800fcb0:	2800      	cmp	r0, #0
 800fcb2:	d041      	beq.n	800fd38 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 800fcb4:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 800fcb6:	b942      	cbnz	r2, 800fcca <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800fcb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fcbc:	f383 8811 	msr	BASEPRI, r3
 800fcc0:	f3bf 8f6f 	isb	sy
 800fcc4:	f3bf 8f4f 	dsb	sy
 800fcc8:	e7fe      	b.n	800fcc8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fcca:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800fccc:	4299      	cmp	r1, r3
 800fcce:	bf38      	it	cc
 800fcd0:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fcd2:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800fcd4:	428b      	cmp	r3, r1
 800fcd6:	d02f      	beq.n	800fd38 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fcd8:	2a01      	cmp	r2, #1
 800fcda:	d12d      	bne.n	800fd38 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800fcdc:	4a17      	ldr	r2, [pc, #92]	@ (800fd3c <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800fcde:	6812      	ldr	r2, [r2, #0]
 800fce0:	4282      	cmp	r2, r0
 800fce2:	d108      	bne.n	800fcf6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800fce4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fce8:	f383 8811 	msr	BASEPRI, r3
 800fcec:	f3bf 8f6f 	isb	sy
 800fcf0:	f3bf 8f4f 	dsb	sy
 800fcf4:	e7fe      	b.n	800fcf4 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fcf6:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fcf8:	4d11      	ldr	r5, [pc, #68]	@ (800fd40 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 800fcfa:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fcfc:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fcfe:	f04f 0214 	mov.w	r2, #20
 800fd02:	fb02 5303 	mla	r3, r2, r3, r5
 800fd06:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd08:	bfa4      	itt	ge
 800fd0a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 800fd0e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fd10:	429a      	cmp	r2, r3
 800fd12:	d111      	bne.n	800fd38 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fd14:	1d06      	adds	r6, r0, #4
 800fd16:	4630      	mov	r0, r6
 800fd18:	f7fe fc4e 	bl	800e5b8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fd1c:	4a09      	ldr	r2, [pc, #36]	@ (800fd44 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800fd1e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800fd20:	6811      	ldr	r1, [r2, #0]
 800fd22:	2014      	movs	r0, #20
 800fd24:	428b      	cmp	r3, r1
 800fd26:	fb00 5003 	mla	r0, r0, r3, r5
 800fd2a:	4631      	mov	r1, r6
	}
 800fd2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800fd30:	bf88      	it	hi
 800fd32:	6013      	strhi	r3, [r2, #0]
 800fd34:	f7fe bc1e 	b.w	800e574 <vListInsertEnd>
	}
 800fd38:	bd70      	pop	{r4, r5, r6, pc}
 800fd3a:	bf00      	nop
 800fd3c:	20013e24 	.word	0x20013e24
 800fd40:	200139c4 	.word	0x200139c4
 800fd44:	20013948 	.word	0x20013948

0800fd48 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fd48:	4b04      	ldr	r3, [pc, #16]	@ (800fd5c <pvTaskIncrementMutexHeldCount+0x14>)
 800fd4a:	681a      	ldr	r2, [r3, #0]
 800fd4c:	b11a      	cbz	r2, 800fd56 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fd4e:	6819      	ldr	r1, [r3, #0]
 800fd50:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 800fd52:	3201      	adds	r2, #1
 800fd54:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 800fd56:	6818      	ldr	r0, [r3, #0]
	}
 800fd58:	4770      	bx	lr
 800fd5a:	bf00      	nop
 800fd5c:	20013e24 	.word	0x20013e24

0800fd60 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 800fd60:	4291      	cmp	r1, r2
{
 800fd62:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fd64:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fd66:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800fd68:	d80a      	bhi.n	800fd80 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd6a:	1ad2      	subs	r2, r2, r3
 800fd6c:	6983      	ldr	r3, [r0, #24]
 800fd6e:	429a      	cmp	r2, r3
 800fd70:	d20d      	bcs.n	800fd8e <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fd72:	4b08      	ldr	r3, [pc, #32]	@ (800fd94 <prvInsertTimerInActiveList+0x34>)
 800fd74:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fd76:	6818      	ldr	r0, [r3, #0]
 800fd78:	f7fe fc07 	bl	800e58a <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800fd7c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800fd7e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800fd80:	429a      	cmp	r2, r3
 800fd82:	d201      	bcs.n	800fd88 <prvInsertTimerInActiveList+0x28>
 800fd84:	4299      	cmp	r1, r3
 800fd86:	d202      	bcs.n	800fd8e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fd88:	4b03      	ldr	r3, [pc, #12]	@ (800fd98 <prvInsertTimerInActiveList+0x38>)
 800fd8a:	1d01      	adds	r1, r0, #4
 800fd8c:	e7f3      	b.n	800fd76 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800fd8e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800fd90:	e7f5      	b.n	800fd7e <prvInsertTimerInActiveList+0x1e>
 800fd92:	bf00      	nop
 800fd94:	20013f24 	.word	0x20013f24
 800fd98:	20013f28 	.word	0x20013f28

0800fd9c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800fd9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800fd9e:	4c11      	ldr	r4, [pc, #68]	@ (800fde4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800fda0:	f7fe fc80 	bl	800e6a4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800fda4:	6825      	ldr	r5, [r4, #0]
 800fda6:	b9bd      	cbnz	r5, 800fdd8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800fda8:	4f0f      	ldr	r7, [pc, #60]	@ (800fde8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800fdaa:	4e10      	ldr	r6, [pc, #64]	@ (800fdec <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800fdac:	4638      	mov	r0, r7
 800fdae:	f7fe fbd3 	bl	800e558 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800fdb2:	4630      	mov	r0, r6
 800fdb4:	f7fe fbd0 	bl	800e558 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800fdb8:	4b0d      	ldr	r3, [pc, #52]	@ (800fdf0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fdba:	4a0e      	ldr	r2, [pc, #56]	@ (800fdf4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800fdbc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800fdbe:	4b0e      	ldr	r3, [pc, #56]	@ (800fdf8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fdc0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800fdc2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fdc4:	200a      	movs	r0, #10
 800fdc6:	4b0d      	ldr	r3, [pc, #52]	@ (800fdfc <prvCheckForValidListAndQueue+0x60>)
 800fdc8:	9500      	str	r5, [sp, #0]
 800fdca:	f7fe fe74 	bl	800eab6 <xQueueGenericCreateStatic>
 800fdce:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800fdd0:	b110      	cbz	r0, 800fdd8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800fdd2:	490b      	ldr	r1, [pc, #44]	@ (800fe00 <prvCheckForValidListAndQueue+0x64>)
 800fdd4:	f7ff fa2c 	bl	800f230 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800fdd8:	b003      	add	sp, #12
 800fdda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800fdde:	f7fe bc81 	b.w	800e6e4 <vPortExitCritical>
 800fde2:	bf00      	nop
 800fde4:	20013f20 	.word	0x20013f20
 800fde8:	20013f40 	.word	0x20013f40
 800fdec:	20013f2c 	.word	0x20013f2c
 800fdf0:	20013f28 	.word	0x20013f28
 800fdf4:	20013e78 	.word	0x20013e78
 800fdf8:	20013f24 	.word	0x20013f24
 800fdfc:	20013e28 	.word	0x20013e28
 800fe00:	0802d0c7 	.word	0x0802d0c7

0800fe04 <xTimerCreateTimerTask>:
{
 800fe04:	b510      	push	{r4, lr}
 800fe06:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800fe08:	f7ff ffc8 	bl	800fd9c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800fe0c:	4b12      	ldr	r3, [pc, #72]	@ (800fe58 <xTimerCreateTimerTask+0x54>)
 800fe0e:	681b      	ldr	r3, [r3, #0]
 800fe10:	b1b3      	cbz	r3, 800fe40 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800fe12:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800fe14:	aa07      	add	r2, sp, #28
 800fe16:	a906      	add	r1, sp, #24
 800fe18:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800fe1a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800fe1e:	f7fe fa93 	bl	800e348 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800fe22:	9b05      	ldr	r3, [sp, #20]
 800fe24:	9302      	str	r3, [sp, #8]
 800fe26:	9b06      	ldr	r3, [sp, #24]
 800fe28:	9301      	str	r3, [sp, #4]
 800fe2a:	2302      	movs	r3, #2
 800fe2c:	9300      	str	r3, [sp, #0]
 800fe2e:	9a07      	ldr	r2, [sp, #28]
 800fe30:	490a      	ldr	r1, [pc, #40]	@ (800fe5c <xTimerCreateTimerTask+0x58>)
 800fe32:	480b      	ldr	r0, [pc, #44]	@ (800fe60 <xTimerCreateTimerTask+0x5c>)
 800fe34:	4623      	mov	r3, r4
 800fe36:	f7ff fbc0 	bl	800f5ba <xTaskCreateStatic>
 800fe3a:	4b0a      	ldr	r3, [pc, #40]	@ (800fe64 <xTimerCreateTimerTask+0x60>)
 800fe3c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800fe3e:	b940      	cbnz	r0, 800fe52 <xTimerCreateTimerTask+0x4e>
 800fe40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fe44:	f383 8811 	msr	BASEPRI, r3
 800fe48:	f3bf 8f6f 	isb	sy
 800fe4c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800fe50:	e7fe      	b.n	800fe50 <xTimerCreateTimerTask+0x4c>
}
 800fe52:	2001      	movs	r0, #1
 800fe54:	b008      	add	sp, #32
 800fe56:	bd10      	pop	{r4, pc}
 800fe58:	20013f20 	.word	0x20013f20
 800fe5c:	0802d0cc 	.word	0x0802d0cc
 800fe60:	0800ff65 	.word	0x0800ff65
 800fe64:	20013f1c 	.word	0x20013f1c

0800fe68 <xTimerGenericCommand>:
{
 800fe68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fe6a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800fe6c:	4604      	mov	r4, r0
{
 800fe6e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800fe70:	b940      	cbnz	r0, 800fe84 <xTimerGenericCommand+0x1c>
 800fe72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fe76:	f383 8811 	msr	BASEPRI, r3
 800fe7a:	f3bf 8f6f 	isb	sy
 800fe7e:	f3bf 8f4f 	dsb	sy
 800fe82:	e7fe      	b.n	800fe82 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800fe84:	4d0d      	ldr	r5, [pc, #52]	@ (800febc <xTimerGenericCommand+0x54>)
 800fe86:	6828      	ldr	r0, [r5, #0]
 800fe88:	b180      	cbz	r0, 800feac <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800fe8a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fe8c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fe90:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800fe92:	dc0d      	bgt.n	800feb0 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fe94:	f7ff fe7a 	bl	800fb8c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fe98:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fe9a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fe9c:	bf08      	it	eq
 800fe9e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800fea0:	6828      	ldr	r0, [r5, #0]
 800fea2:	bf18      	it	ne
 800fea4:	461a      	movne	r2, r3
 800fea6:	4669      	mov	r1, sp
 800fea8:	f7fe feba 	bl	800ec20 <xQueueGenericSend>
}
 800feac:	b004      	add	sp, #16
 800feae:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800feb0:	2300      	movs	r3, #0
 800feb2:	4669      	mov	r1, sp
 800feb4:	f7fe ff66 	bl	800ed84 <xQueueGenericSendFromISR>
 800feb8:	e7f8      	b.n	800feac <xTimerGenericCommand+0x44>
 800feba:	bf00      	nop
 800febc:	20013f20 	.word	0x20013f20

0800fec0 <prvSampleTimeNow>:
{
 800fec0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800fec4:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 800ff60 <prvSampleTimeNow+0xa0>
{
 800fec8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800feca:	f7ff fc2b 	bl	800f724 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fece:	f8d8 3000 	ldr.w	r3, [r8]
 800fed2:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800fed4:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800fed6:	d909      	bls.n	800feec <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fed8:	4f1f      	ldr	r7, [pc, #124]	@ (800ff58 <prvSampleTimeNow+0x98>)
 800feda:	683b      	ldr	r3, [r7, #0]
 800fedc:	681a      	ldr	r2, [r3, #0]
 800fede:	b96a      	cbnz	r2, 800fefc <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800fee0:	4a1e      	ldr	r2, [pc, #120]	@ (800ff5c <prvSampleTimeNow+0x9c>)
 800fee2:	6811      	ldr	r1, [r2, #0]
 800fee4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800fee6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800fee8:	2301      	movs	r3, #1
 800feea:	e000      	b.n	800feee <prvSampleTimeNow+0x2e>
 800feec:	2300      	movs	r3, #0
}
 800feee:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800fef0:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800fef2:	f8c8 5000 	str.w	r5, [r8]
}
 800fef6:	b002      	add	sp, #8
 800fef8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fefc:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fefe:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff00:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff04:	f104 0a04 	add.w	sl, r4, #4
 800ff08:	4650      	mov	r0, sl
 800ff0a:	f7fe fb55 	bl	800e5b8 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ff0e:	6a23      	ldr	r3, [r4, #32]
 800ff10:	4620      	mov	r0, r4
 800ff12:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ff14:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800ff18:	075b      	lsls	r3, r3, #29
 800ff1a:	d5de      	bpl.n	800feda <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ff1c:	69a3      	ldr	r3, [r4, #24]
 800ff1e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 800ff20:	4599      	cmp	r9, r3
 800ff22:	d206      	bcs.n	800ff32 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff24:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ff26:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ff28:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ff2a:	4651      	mov	r1, sl
 800ff2c:	f7fe fb2d 	bl	800e58a <vListInsert>
 800ff30:	e7d3      	b.n	800feda <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ff32:	2300      	movs	r3, #0
 800ff34:	9300      	str	r3, [sp, #0]
 800ff36:	464a      	mov	r2, r9
 800ff38:	4619      	mov	r1, r3
 800ff3a:	4620      	mov	r0, r4
 800ff3c:	f7ff ff94 	bl	800fe68 <xTimerGenericCommand>
				configASSERT( xResult );
 800ff40:	2800      	cmp	r0, #0
 800ff42:	d1ca      	bne.n	800feda <prvSampleTimeNow+0x1a>
 800ff44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ff48:	f383 8811 	msr	BASEPRI, r3
 800ff4c:	f3bf 8f6f 	isb	sy
 800ff50:	f3bf 8f4f 	dsb	sy
 800ff54:	e7fe      	b.n	800ff54 <prvSampleTimeNow+0x94>
 800ff56:	bf00      	nop
 800ff58:	20013f28 	.word	0x20013f28
 800ff5c:	20013f24 	.word	0x20013f24
 800ff60:	20013f18 	.word	0x20013f18

0800ff64 <prvTimerTask>:
{
 800ff64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff68:	4d6e      	ldr	r5, [pc, #440]	@ (8010124 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ff6a:	4e6f      	ldr	r6, [pc, #444]	@ (8010128 <prvTimerTask+0x1c4>)
{
 800ff6c:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff6e:	682b      	ldr	r3, [r5, #0]
 800ff70:	f8d3 8000 	ldr.w	r8, [r3]
 800ff74:	f1b8 0f00 	cmp.w	r8, #0
 800ff78:	d035      	beq.n	800ffe6 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff7a:	68db      	ldr	r3, [r3, #12]
 800ff7c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff80:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800ff82:	f7ff fbc7 	bl	800f714 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ff86:	a804      	add	r0, sp, #16
 800ff88:	f7ff ff9a 	bl	800fec0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800ff8c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ff8e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800ff90:	2b00      	cmp	r3, #0
 800ff92:	d169      	bne.n	8010068 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ff94:	2c00      	cmp	r4, #0
 800ff96:	d14c      	bne.n	8010032 <prvTimerTask+0xce>
 800ff98:	4540      	cmp	r0, r8
 800ff9a:	d350      	bcc.n	801003e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800ff9c:	f7ff fc5e 	bl	800f85c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffa0:	682b      	ldr	r3, [r5, #0]
 800ffa2:	68db      	ldr	r3, [r3, #12]
 800ffa4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ffa6:	1d38      	adds	r0, r7, #4
 800ffa8:	f7fe fb06 	bl	800e5b8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ffac:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800ffb0:	0758      	lsls	r0, r3, #29
 800ffb2:	d51a      	bpl.n	800ffea <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ffb4:	69b9      	ldr	r1, [r7, #24]
 800ffb6:	4643      	mov	r3, r8
 800ffb8:	464a      	mov	r2, r9
 800ffba:	4441      	add	r1, r8
 800ffbc:	4638      	mov	r0, r7
 800ffbe:	f7ff fecf 	bl	800fd60 <prvInsertTimerInActiveList>
 800ffc2:	b1b0      	cbz	r0, 800fff2 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ffc4:	9400      	str	r4, [sp, #0]
 800ffc6:	4623      	mov	r3, r4
 800ffc8:	4642      	mov	r2, r8
 800ffca:	4621      	mov	r1, r4
 800ffcc:	4638      	mov	r0, r7
 800ffce:	f7ff ff4b 	bl	800fe68 <xTimerGenericCommand>
			configASSERT( xResult );
 800ffd2:	b970      	cbnz	r0, 800fff2 <prvTimerTask+0x8e>
 800ffd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ffd8:	f383 8811 	msr	BASEPRI, r3
 800ffdc:	f3bf 8f6f 	isb	sy
 800ffe0:	f3bf 8f4f 	dsb	sy
 800ffe4:	e7fe      	b.n	800ffe4 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ffe6:	2401      	movs	r4, #1
 800ffe8:	e7cb      	b.n	800ff82 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ffea:	f023 0301 	bic.w	r3, r3, #1
 800ffee:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fff2:	6a3b      	ldr	r3, [r7, #32]
 800fff4:	4638      	mov	r0, r7
 800fff6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800fff8:	6830      	ldr	r0, [r6, #0]
 800fffa:	2200      	movs	r2, #0
 800fffc:	a904      	add	r1, sp, #16
 800fffe:	f7fe ff6f 	bl	800eee0 <xQueueReceive>
 8010002:	2800      	cmp	r0, #0
 8010004:	d0b3      	beq.n	800ff6e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010006:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010008:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 801000a:	2b00      	cmp	r3, #0
 801000c:	db2f      	blt.n	801006e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 801000e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010010:	6963      	ldr	r3, [r4, #20]
 8010012:	2b00      	cmp	r3, #0
 8010014:	d132      	bne.n	801007c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8010016:	a803      	add	r0, sp, #12
 8010018:	f7ff ff52 	bl	800fec0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 801001c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 801001e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8010020:	2b09      	cmp	r3, #9
 8010022:	d8e9      	bhi.n	800fff8 <prvTimerTask+0x94>
 8010024:	e8df f003 	tbb	[pc, r3]
 8010028:	572e2e2e 	.word	0x572e2e2e
 801002c:	2e2e765e 	.word	0x2e2e765e
 8010030:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010032:	4b3e      	ldr	r3, [pc, #248]	@ (801012c <prvTimerTask+0x1c8>)
 8010034:	681b      	ldr	r3, [r3, #0]
 8010036:	681c      	ldr	r4, [r3, #0]
 8010038:	fab4 f484 	clz	r4, r4
 801003c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 801003e:	6830      	ldr	r0, [r6, #0]
 8010040:	4622      	mov	r2, r4
 8010042:	eba8 0109 	sub.w	r1, r8, r9
 8010046:	f7ff f932 	bl	800f2ae <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 801004a:	f7ff fc07 	bl	800f85c <xTaskResumeAll>
 801004e:	2800      	cmp	r0, #0
 8010050:	d1d2      	bne.n	800fff8 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8010052:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8010056:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801005a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 801005e:	f3bf 8f4f 	dsb	sy
 8010062:	f3bf 8f6f 	isb	sy
 8010066:	e7c7      	b.n	800fff8 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8010068:	f7ff fbf8 	bl	800f85c <xTaskResumeAll>
}
 801006c:	e7c4      	b.n	800fff8 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 801006e:	9b05      	ldr	r3, [sp, #20]
 8010070:	9907      	ldr	r1, [sp, #28]
 8010072:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8010074:	9b04      	ldr	r3, [sp, #16]
 8010076:	2b00      	cmp	r3, #0
 8010078:	dbbe      	blt.n	800fff8 <prvTimerTask+0x94>
 801007a:	e7c8      	b.n	801000e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801007c:	1d20      	adds	r0, r4, #4
 801007e:	f7fe fa9b 	bl	800e5b8 <uxListRemove>
 8010082:	e7c8      	b.n	8010016 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010084:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010088:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 801008a:	f043 0301 	orr.w	r3, r3, #1
 801008e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010092:	9b05      	ldr	r3, [sp, #20]
 8010094:	4620      	mov	r0, r4
 8010096:	4419      	add	r1, r3
 8010098:	f7ff fe62 	bl	800fd60 <prvInsertTimerInActiveList>
 801009c:	2800      	cmp	r0, #0
 801009e:	d0ab      	beq.n	800fff8 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80100a0:	6a23      	ldr	r3, [r4, #32]
 80100a2:	4620      	mov	r0, r4
 80100a4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80100a6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80100aa:	0759      	lsls	r1, r3, #29
 80100ac:	d5a4      	bpl.n	800fff8 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80100ae:	69a2      	ldr	r2, [r4, #24]
 80100b0:	9905      	ldr	r1, [sp, #20]
 80100b2:	2300      	movs	r3, #0
 80100b4:	440a      	add	r2, r1
 80100b6:	9300      	str	r3, [sp, #0]
 80100b8:	4619      	mov	r1, r3
 80100ba:	4620      	mov	r0, r4
 80100bc:	f7ff fed4 	bl	800fe68 <xTimerGenericCommand>
							configASSERT( xResult );
 80100c0:	2800      	cmp	r0, #0
 80100c2:	d199      	bne.n	800fff8 <prvTimerTask+0x94>
 80100c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80100c8:	f383 8811 	msr	BASEPRI, r3
 80100cc:	f3bf 8f6f 	isb	sy
 80100d0:	f3bf 8f4f 	dsb	sy
 80100d4:	e7fe      	b.n	80100d4 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100d6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100da:	f023 0301 	bic.w	r3, r3, #1
 80100de:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 80100e2:	e789      	b.n	800fff8 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80100e4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80100e8:	f043 0301 	orr.w	r3, r3, #1
 80100ec:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80100f0:	9905      	ldr	r1, [sp, #20]
 80100f2:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80100f4:	b941      	cbnz	r1, 8010108 <prvTimerTask+0x1a4>
 80100f6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80100fa:	f383 8811 	msr	BASEPRI, r3
 80100fe:	f3bf 8f6f 	isb	sy
 8010102:	f3bf 8f4f 	dsb	sy
 8010106:	e7fe      	b.n	8010106 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8010108:	4603      	mov	r3, r0
 801010a:	4401      	add	r1, r0
 801010c:	4620      	mov	r0, r4
 801010e:	f7ff fe27 	bl	800fd60 <prvInsertTimerInActiveList>
					break;
 8010112:	e771      	b.n	800fff8 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010114:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8010118:	079a      	lsls	r2, r3, #30
 801011a:	d4de      	bmi.n	80100da <prvTimerTask+0x176>
							vPortFree( pxTimer );
 801011c:	4620      	mov	r0, r4
 801011e:	f7fe f9dd 	bl	800e4dc <vPortFree>
 8010122:	e769      	b.n	800fff8 <prvTimerTask+0x94>
 8010124:	20013f28 	.word	0x20013f28
 8010128:	20013f20 	.word	0x20013f20
 801012c:	20013f24 	.word	0x20013f24

08010130 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010130:	8880      	ldrh	r0, [r0, #4]
 8010132:	4770      	bx	lr

08010134 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8010134:	b570      	push	{r4, r5, r6, lr}
 8010136:	6803      	ldr	r3, [r0, #0]
 8010138:	4605      	mov	r5, r0
 801013a:	460c      	mov	r4, r1
 801013c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801013e:	2100      	movs	r1, #0
 8010140:	4798      	blx	r3
 8010142:	682b      	ldr	r3, [r5, #0]
 8010144:	4606      	mov	r6, r0
 8010146:	6a1b      	ldr	r3, [r3, #32]
 8010148:	4628      	mov	r0, r5
 801014a:	4798      	blx	r3
 801014c:	1ba4      	subs	r4, r4, r6
 801014e:	b2a4      	uxth	r4, r4
 8010150:	fbb4 f0f0 	udiv	r0, r4, r0
 8010154:	bd70      	pop	{r4, r5, r6, pc}

08010156 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8010156:	2300      	movs	r3, #0
 8010158:	8083      	strh	r3, [r0, #4]
 801015a:	4770      	bx	lr

0801015c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 801015c:	b510      	push	{r4, lr}
 801015e:	6803      	ldr	r3, [r0, #0]
 8010160:	8881      	ldrh	r1, [r0, #4]
 8010162:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010164:	4604      	mov	r4, r0
 8010166:	4798      	blx	r3
 8010168:	88a3      	ldrh	r3, [r4, #4]
 801016a:	3301      	adds	r3, #1
 801016c:	80a3      	strh	r3, [r4, #4]
 801016e:	bd10      	pop	{r4, pc}

08010170 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010170:	6803      	ldr	r3, [r0, #0]
 8010172:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010174:	4718      	bx	r3

08010176 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8010176:	4770      	bx	lr

08010178 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010178:	4a02      	ldr	r2, [pc, #8]	@ (8010184 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 801017a:	6002      	str	r2, [r0, #0]
 801017c:	2200      	movs	r2, #0
 801017e:	8082      	strh	r2, [r0, #4]
 8010180:	4770      	bx	lr
 8010182:	bf00      	nop
 8010184:	0802dd34 	.word	0x0802dd34

08010188 <_ZN8touchgfx9Container13getFirstChildEv>:
 8010188:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 801018a:	4770      	bx	lr

0801018c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801018c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801018e:	2000      	movs	r0, #0
 8010190:	b12b      	cbz	r3, 801019e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010192:	b920      	cbnz	r0, 801019e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010194:	1a5a      	subs	r2, r3, r1
 8010196:	4250      	negs	r0, r2
 8010198:	4150      	adcs	r0, r2
 801019a:	699b      	ldr	r3, [r3, #24]
 801019c:	e7f8      	b.n	8010190 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801019e:	4770      	bx	lr

080101a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80101a0:	2300      	movs	r3, #0
 80101a2:	6148      	str	r0, [r1, #20]
 80101a4:	618b      	str	r3, [r1, #24]
 80101a6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80101a8:	b913      	cbnz	r3, 80101b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80101aa:	6281      	str	r1, [r0, #40]	@ 0x28
 80101ac:	4770      	bx	lr
 80101ae:	4613      	mov	r3, r2
 80101b0:	699a      	ldr	r2, [r3, #24]
 80101b2:	2a00      	cmp	r2, #0
 80101b4:	d1fb      	bne.n	80101ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80101b6:	6199      	str	r1, [r3, #24]
 80101b8:	4770      	bx	lr

080101ba <_ZN8touchgfx9Container9removeAllEv>:
 80101ba:	2200      	movs	r2, #0
 80101bc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80101be:	b123      	cbz	r3, 80101ca <_ZN8touchgfx9Container9removeAllEv+0x10>
 80101c0:	6999      	ldr	r1, [r3, #24]
 80101c2:	6281      	str	r1, [r0, #40]	@ 0x28
 80101c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80101c8:	e7f8      	b.n	80101bc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80101ca:	4770      	bx	lr

080101cc <_ZN8touchgfx9Container6unlinkEv>:
 80101cc:	2300      	movs	r3, #0
 80101ce:	6283      	str	r3, [r0, #40]	@ 0x28
 80101d0:	4770      	bx	lr

080101d2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80101d2:	2200      	movs	r2, #0
 80101d4:	8002      	strh	r2, [r0, #0]
 80101d6:	8042      	strh	r2, [r0, #2]
 80101d8:	8082      	strh	r2, [r0, #4]
 80101da:	80c2      	strh	r2, [r0, #6]
 80101dc:	4770      	bx	lr

080101de <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80101de:	b570      	push	{r4, r5, r6, lr}
 80101e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80101e2:	460d      	mov	r5, r1
 80101e4:	4616      	mov	r6, r2
 80101e6:	b13c      	cbz	r4, 80101f8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80101e8:	6823      	ldr	r3, [r4, #0]
 80101ea:	4620      	mov	r0, r4
 80101ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80101ee:	4632      	mov	r2, r6
 80101f0:	4629      	mov	r1, r5
 80101f2:	4798      	blx	r3
 80101f4:	69a4      	ldr	r4, [r4, #24]
 80101f6:	e7f6      	b.n	80101e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80101f8:	bd70      	pop	{r4, r5, r6, pc}

080101fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80101fa:	b538      	push	{r3, r4, r5, lr}
 80101fc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80101fe:	460d      	mov	r5, r1
 8010200:	b134      	cbz	r4, 8010210 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010202:	682b      	ldr	r3, [r5, #0]
 8010204:	4621      	mov	r1, r4
 8010206:	689b      	ldr	r3, [r3, #8]
 8010208:	4628      	mov	r0, r5
 801020a:	4798      	blx	r3
 801020c:	69a4      	ldr	r4, [r4, #24]
 801020e:	e7f7      	b.n	8010200 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010210:	bd38      	pop	{r3, r4, r5, pc}

08010212 <_ZN8touchgfx9ContainerD1Ev>:
 8010212:	4770      	bx	lr

08010214 <_ZN8touchgfx9ContainerD0Ev>:
 8010214:	b510      	push	{r4, lr}
 8010216:	212c      	movs	r1, #44	@ 0x2c
 8010218:	4604      	mov	r4, r0
 801021a:	f019 fd65 	bl	8029ce8 <_ZdlPvj>
 801021e:	4620      	mov	r0, r4
 8010220:	bd10      	pop	{r4, pc}

08010222 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010222:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010224:	b19b      	cbz	r3, 801024e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010226:	428b      	cmp	r3, r1
 8010228:	d109      	bne.n	801023e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801022a:	699a      	ldr	r2, [r3, #24]
 801022c:	2100      	movs	r1, #0
 801022e:	6159      	str	r1, [r3, #20]
 8010230:	6282      	str	r2, [r0, #40]	@ 0x28
 8010232:	b902      	cbnz	r2, 8010236 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010234:	4770      	bx	lr
 8010236:	6199      	str	r1, [r3, #24]
 8010238:	4770      	bx	lr
 801023a:	4613      	mov	r3, r2
 801023c:	b13a      	cbz	r2, 801024e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801023e:	699a      	ldr	r2, [r3, #24]
 8010240:	428a      	cmp	r2, r1
 8010242:	d1fa      	bne.n	801023a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010244:	698a      	ldr	r2, [r1, #24]
 8010246:	619a      	str	r2, [r3, #24]
 8010248:	2300      	movs	r3, #0
 801024a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801024e:	4770      	bx	lr

08010250 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010250:	b410      	push	{r4}
 8010252:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010254:	4604      	mov	r4, r0
 8010256:	b92b      	cbnz	r3, 8010264 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010258:	6803      	ldr	r3, [r0, #0]
 801025a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801025e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010260:	4611      	mov	r1, r2
 8010262:	4718      	bx	r3
 8010264:	b941      	cbnz	r1, 8010278 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010266:	6193      	str	r3, [r2, #24]
 8010268:	6282      	str	r2, [r0, #40]	@ 0x28
 801026a:	6154      	str	r4, [r2, #20]
 801026c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010270:	4770      	bx	lr
 8010272:	4603      	mov	r3, r0
 8010274:	2800      	cmp	r0, #0
 8010276:	d0f9      	beq.n	801026c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010278:	4299      	cmp	r1, r3
 801027a:	6998      	ldr	r0, [r3, #24]
 801027c:	d1f9      	bne.n	8010272 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801027e:	6190      	str	r0, [r2, #24]
 8010280:	618a      	str	r2, [r1, #24]
 8010282:	e7f2      	b.n	801026a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010288:	461f      	mov	r7, r3
 801028a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 801028e:	460d      	mov	r5, r1
 8010290:	4616      	mov	r6, r2
 8010292:	b103      	cbz	r3, 8010296 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010294:	6038      	str	r0, [r7, #0]
 8010296:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010298:	b314      	cbz	r4, 80102e0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801029a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801029e:	b1eb      	cbz	r3, 80102dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102a0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80102a4:	428d      	cmp	r5, r1
 80102a6:	db19      	blt.n	80102dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102a8:	8923      	ldrh	r3, [r4, #8]
 80102aa:	b289      	uxth	r1, r1
 80102ac:	440b      	add	r3, r1
 80102ae:	b21b      	sxth	r3, r3
 80102b0:	429d      	cmp	r5, r3
 80102b2:	da13      	bge.n	80102dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102b4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80102b8:	4296      	cmp	r6, r2
 80102ba:	db0f      	blt.n	80102dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102bc:	8963      	ldrh	r3, [r4, #10]
 80102be:	b292      	uxth	r2, r2
 80102c0:	4413      	add	r3, r2
 80102c2:	b21b      	sxth	r3, r3
 80102c4:	429e      	cmp	r6, r3
 80102c6:	da09      	bge.n	80102dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80102c8:	6823      	ldr	r3, [r4, #0]
 80102ca:	1ab2      	subs	r2, r6, r2
 80102cc:	1a69      	subs	r1, r5, r1
 80102ce:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 80102d2:	b212      	sxth	r2, r2
 80102d4:	463b      	mov	r3, r7
 80102d6:	b209      	sxth	r1, r1
 80102d8:	4620      	mov	r0, r4
 80102da:	47c0      	blx	r8
 80102dc:	69a4      	ldr	r4, [r4, #24]
 80102de:	e7db      	b.n	8010298 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80102e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080102e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80102e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102e8:	4c6e      	ldr	r4, [pc, #440]	@ (80104a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80102ea:	b0a1      	sub	sp, #132	@ 0x84
 80102ec:	6824      	ldr	r4, [r4, #0]
 80102ee:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80102f0:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 80102f4:	9303      	str	r3, [sp, #12]
 80102f6:	2400      	movs	r4, #0
 80102f8:	802c      	strh	r4, [r5, #0]
 80102fa:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 80102fc:	802c      	strh	r4, [r5, #0]
 80102fe:	601c      	str	r4, [r3, #0]
 8010300:	4606      	mov	r6, r0
 8010302:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010306:	f7ff ffbd 	bl	8010284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801030a:	f1b9 0f03 	cmp.w	r9, #3
 801030e:	f340 80c2 	ble.w	8010496 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010312:	4631      	mov	r1, r6
 8010314:	a80c      	add	r0, sp, #48	@ 0x30
 8010316:	f008 f907 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801031a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801031e:	9306      	str	r3, [sp, #24]
 8010320:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010324:	9307      	str	r3, [sp, #28]
 8010326:	9b03      	ldr	r3, [sp, #12]
 8010328:	f8d3 a000 	ldr.w	sl, [r3]
 801032c:	f1ba 0f00 	cmp.w	sl, #0
 8010330:	f000 80b4 	beq.w	801049c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010334:	4651      	mov	r1, sl
 8010336:	a810      	add	r0, sp, #64	@ 0x40
 8010338:	f008 f8f6 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801033c:	9b01      	ldr	r3, [sp, #4]
 801033e:	9a06      	ldr	r2, [sp, #24]
 8010340:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8010344:	189d      	adds	r5, r3, r2
 8010346:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 801034a:	9a07      	ldr	r2, [sp, #28]
 801034c:	2002      	movs	r0, #2
 801034e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010352:	4419      	add	r1, r3
 8010354:	1a6d      	subs	r5, r5, r1
 8010356:	9b02      	ldr	r3, [sp, #8]
 8010358:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 801035c:	4413      	add	r3, r2
 801035e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8010362:	fb92 f2f0 	sdiv	r2, r2, r0
 8010366:	440a      	add	r2, r1
 8010368:	1a9b      	subs	r3, r3, r2
 801036a:	435b      	muls	r3, r3
 801036c:	fb05 3505 	mla	r5, r5, r5, r3
 8010370:	4f4d      	ldr	r7, [pc, #308]	@ (80104a8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010372:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010374:	ac10      	add	r4, sp, #64	@ 0x40
 8010376:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010378:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801037a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801037c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801037e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010380:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010384:	f1b9 0f0c 	cmp.w	r9, #12
 8010388:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801038c:	f04f 0303 	mov.w	r3, #3
 8010390:	bfc8      	it	gt
 8010392:	4698      	movgt	r8, r3
 8010394:	f8cd 9000 	str.w	r9, [sp]
 8010398:	f04f 0400 	mov.w	r4, #0
 801039c:	bfdc      	itt	le
 801039e:	f109 32ff 	addle.w	r2, r9, #4294967295
 80103a2:	fb92 f8f3 	sdivle	r8, r2, r3
 80103a6:	1c63      	adds	r3, r4, #1
 80103a8:	aa10      	add	r2, sp, #64	@ 0x40
 80103aa:	f004 0401 	and.w	r4, r4, #1
 80103ae:	9308      	str	r3, [sp, #32]
 80103b0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80103b4:	9b00      	ldr	r3, [sp, #0]
 80103b6:	fb93 f3f8 	sdiv	r3, r3, r8
 80103ba:	b29b      	uxth	r3, r3
 80103bc:	3404      	adds	r4, #4
 80103be:	f04f 0b00 	mov.w	fp, #0
 80103c2:	9304      	str	r3, [sp, #16]
 80103c4:	9a04      	ldr	r2, [sp, #16]
 80103c6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80103ca:	fb13 f302 	smulbb	r3, r3, r2
 80103ce:	9a01      	ldr	r2, [sp, #4]
 80103d0:	b29b      	uxth	r3, r3
 80103d2:	1899      	adds	r1, r3, r2
 80103d4:	9305      	str	r3, [sp, #20]
 80103d6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80103da:	b209      	sxth	r1, r1
 80103dc:	4299      	cmp	r1, r3
 80103de:	db4d      	blt.n	801047c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80103e0:	8932      	ldrh	r2, [r6, #8]
 80103e2:	4413      	add	r3, r2
 80103e4:	b21b      	sxth	r3, r3
 80103e6:	4299      	cmp	r1, r3
 80103e8:	da48      	bge.n	801047c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80103ea:	9b04      	ldr	r3, [sp, #16]
 80103ec:	6827      	ldr	r7, [r4, #0]
 80103ee:	fb17 f703 	smulbb	r7, r7, r3
 80103f2:	9b02      	ldr	r3, [sp, #8]
 80103f4:	b2bf      	uxth	r7, r7
 80103f6:	18fa      	adds	r2, r7, r3
 80103f8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80103fc:	b212      	sxth	r2, r2
 80103fe:	429a      	cmp	r2, r3
 8010400:	db3c      	blt.n	801047c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010402:	8970      	ldrh	r0, [r6, #10]
 8010404:	4403      	add	r3, r0
 8010406:	b21b      	sxth	r3, r3
 8010408:	429a      	cmp	r2, r3
 801040a:	da37      	bge.n	801047c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801040c:	2300      	movs	r3, #0
 801040e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010410:	4630      	mov	r0, r6
 8010412:	ab0b      	add	r3, sp, #44	@ 0x2c
 8010414:	f7ff ff36 	bl	8010284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010418:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801041a:	b37a      	cbz	r2, 801047c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801041c:	4552      	cmp	r2, sl
 801041e:	d02d      	beq.n	801047c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010420:	4611      	mov	r1, r2
 8010422:	a80e      	add	r0, sp, #56	@ 0x38
 8010424:	9209      	str	r2, [sp, #36]	@ 0x24
 8010426:	f008 f87f 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801042a:	9a06      	ldr	r2, [sp, #24]
 801042c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8010430:	9b01      	ldr	r3, [sp, #4]
 8010432:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8010436:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 801043a:	4413      	add	r3, r2
 801043c:	f04f 0e02 	mov.w	lr, #2
 8010440:	fb91 f1fe 	sdiv	r1, r1, lr
 8010444:	4401      	add	r1, r0
 8010446:	1a58      	subs	r0, r3, r1
 8010448:	9a07      	ldr	r2, [sp, #28]
 801044a:	9b02      	ldr	r3, [sp, #8]
 801044c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8010450:	fb9c fcfe 	sdiv	ip, ip, lr
 8010454:	4413      	add	r3, r2
 8010456:	448c      	add	ip, r1
 8010458:	eba3 030c 	sub.w	r3, r3, ip
 801045c:	435b      	muls	r3, r3
 801045e:	fb00 3300 	mla	r3, r0, r0, r3
 8010462:	42ab      	cmp	r3, r5
 8010464:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010466:	d208      	bcs.n	801047a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010468:	9803      	ldr	r0, [sp, #12]
 801046a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801046c:	6001      	str	r1, [r0, #0]
 801046e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8010470:	9805      	ldr	r0, [sp, #20]
 8010472:	8008      	strh	r0, [r1, #0]
 8010474:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8010476:	461d      	mov	r5, r3
 8010478:	800f      	strh	r7, [r1, #0]
 801047a:	4692      	mov	sl, r2
 801047c:	f10b 0b01 	add.w	fp, fp, #1
 8010480:	f1bb 0f04 	cmp.w	fp, #4
 8010484:	f104 0408 	add.w	r4, r4, #8
 8010488:	d19c      	bne.n	80103c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801048a:	9b00      	ldr	r3, [sp, #0]
 801048c:	9c08      	ldr	r4, [sp, #32]
 801048e:	444b      	add	r3, r9
 8010490:	4544      	cmp	r4, r8
 8010492:	9300      	str	r3, [sp, #0]
 8010494:	d187      	bne.n	80103a6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010496:	b021      	add	sp, #132	@ 0x84
 8010498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801049c:	f04f 35ff 	mov.w	r5, #4294967295
 80104a0:	e766      	b.n	8010370 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80104a2:	bf00      	nop
 80104a4:	20013f60 	.word	0x20013f60
 80104a8:	0802be00 	.word	0x0802be00

080104ac <_ZN8touchgfx4RectaNERKS0_>:
 80104ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80104b0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80104b4:	888c      	ldrh	r4, [r1, #4]
 80104b6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80104ba:	443c      	add	r4, r7
 80104bc:	b2a4      	uxth	r4, r4
 80104be:	fa0f f884 	sxth.w	r8, r4
 80104c2:	45c1      	cmp	r9, r8
 80104c4:	da2f      	bge.n	8010526 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104c6:	8882      	ldrh	r2, [r0, #4]
 80104c8:	444a      	add	r2, r9
 80104ca:	b292      	uxth	r2, r2
 80104cc:	fa0f fe82 	sxth.w	lr, r2
 80104d0:	4577      	cmp	r7, lr
 80104d2:	da28      	bge.n	8010526 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104d4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80104d8:	88cb      	ldrh	r3, [r1, #6]
 80104da:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80104de:	442b      	add	r3, r5
 80104e0:	b21b      	sxth	r3, r3
 80104e2:	429e      	cmp	r6, r3
 80104e4:	da1f      	bge.n	8010526 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104e6:	88c3      	ldrh	r3, [r0, #6]
 80104e8:	4433      	add	r3, r6
 80104ea:	b29b      	uxth	r3, r3
 80104ec:	fa0f fc83 	sxth.w	ip, r3
 80104f0:	4565      	cmp	r5, ip
 80104f2:	da18      	bge.n	8010526 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80104f4:	454f      	cmp	r7, r9
 80104f6:	bfb8      	it	lt
 80104f8:	464f      	movlt	r7, r9
 80104fa:	42b5      	cmp	r5, r6
 80104fc:	bfb8      	it	lt
 80104fe:	4635      	movlt	r5, r6
 8010500:	45f0      	cmp	r8, lr
 8010502:	bfd8      	it	le
 8010504:	4622      	movle	r2, r4
 8010506:	1bd2      	subs	r2, r2, r7
 8010508:	8082      	strh	r2, [r0, #4]
 801050a:	884a      	ldrh	r2, [r1, #2]
 801050c:	88c9      	ldrh	r1, [r1, #6]
 801050e:	8007      	strh	r7, [r0, #0]
 8010510:	440a      	add	r2, r1
 8010512:	b292      	uxth	r2, r2
 8010514:	b211      	sxth	r1, r2
 8010516:	458c      	cmp	ip, r1
 8010518:	bfa8      	it	ge
 801051a:	4613      	movge	r3, r2
 801051c:	1b5b      	subs	r3, r3, r5
 801051e:	80c3      	strh	r3, [r0, #6]
 8010520:	8045      	strh	r5, [r0, #2]
 8010522:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010526:	2300      	movs	r3, #0
 8010528:	8003      	strh	r3, [r0, #0]
 801052a:	8043      	strh	r3, [r0, #2]
 801052c:	8083      	strh	r3, [r0, #4]
 801052e:	80c3      	strh	r3, [r0, #6]
 8010530:	e7f7      	b.n	8010522 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010532 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010532:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010536:	2b00      	cmp	r3, #0
 8010538:	dd06      	ble.n	8010548 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801053a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801053e:	2800      	cmp	r0, #0
 8010540:	bfcc      	ite	gt
 8010542:	2000      	movgt	r0, #0
 8010544:	2001      	movle	r0, #1
 8010546:	4770      	bx	lr
 8010548:	2001      	movs	r0, #1
 801054a:	4770      	bx	lr

0801054c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801054c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010550:	2300      	movs	r3, #0
 8010552:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8010554:	8003      	strh	r3, [r0, #0]
 8010556:	4604      	mov	r4, r0
 8010558:	8043      	strh	r3, [r0, #2]
 801055a:	8083      	strh	r3, [r0, #4]
 801055c:	80c3      	strh	r3, [r0, #6]
 801055e:	2d00      	cmp	r5, #0
 8010560:	d040      	beq.n	80105e4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010562:	1d28      	adds	r0, r5, #4
 8010564:	f7ff ffe5 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010568:	b988      	cbnz	r0, 801058e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801056a:	4620      	mov	r0, r4
 801056c:	f7ff ffe1 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010570:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010574:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010578:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801057c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010580:	b138      	cbz	r0, 8010592 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010582:	8022      	strh	r2, [r4, #0]
 8010584:	8063      	strh	r3, [r4, #2]
 8010586:	f8a4 e004 	strh.w	lr, [r4, #4]
 801058a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801058e:	69ad      	ldr	r5, [r5, #24]
 8010590:	e7e5      	b.n	801055e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010592:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010596:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801059a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801059e:	4290      	cmp	r0, r2
 80105a0:	4607      	mov	r7, r0
 80105a2:	bfa8      	it	ge
 80105a4:	4617      	movge	r7, r2
 80105a6:	4472      	add	r2, lr
 80105a8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80105ac:	8027      	strh	r7, [r4, #0]
 80105ae:	4299      	cmp	r1, r3
 80105b0:	460e      	mov	r6, r1
 80105b2:	4440      	add	r0, r8
 80105b4:	bfa8      	it	ge
 80105b6:	461e      	movge	r6, r3
 80105b8:	4471      	add	r1, lr
 80105ba:	4463      	add	r3, ip
 80105bc:	b200      	sxth	r0, r0
 80105be:	b212      	sxth	r2, r2
 80105c0:	b209      	sxth	r1, r1
 80105c2:	b21b      	sxth	r3, r3
 80105c4:	4290      	cmp	r0, r2
 80105c6:	bfac      	ite	ge
 80105c8:	ebc7 0200 	rsbge	r2, r7, r0
 80105cc:	ebc7 0202 	rsblt	r2, r7, r2
 80105d0:	4299      	cmp	r1, r3
 80105d2:	bfac      	ite	ge
 80105d4:	ebc6 0301 	rsbge	r3, r6, r1
 80105d8:	ebc6 0303 	rsblt	r3, r6, r3
 80105dc:	8066      	strh	r6, [r4, #2]
 80105de:	80a2      	strh	r2, [r4, #4]
 80105e0:	80e3      	strh	r3, [r4, #6]
 80105e2:	e7d4      	b.n	801058e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80105e4:	4620      	mov	r0, r4
 80105e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080105ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80105ea:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80105ee:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80105f2:	b383      	cbz	r3, 8010656 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80105f4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80105f6:	b374      	cbz	r4, 8010656 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80105f8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80105fc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010600:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010604:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010608:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801060c:	b303      	cbz	r3, 8010650 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801060e:	4668      	mov	r0, sp
 8010610:	1d21      	adds	r1, r4, #4
 8010612:	f8ad 5000 	strh.w	r5, [sp]
 8010616:	f8ad 6002 	strh.w	r6, [sp, #2]
 801061a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801061e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010622:	f7ff ff43 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8010626:	4668      	mov	r0, sp
 8010628:	f7ff ff83 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 801062c:	b980      	cbnz	r0, 8010650 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801062e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010632:	88a2      	ldrh	r2, [r4, #4]
 8010634:	1a9b      	subs	r3, r3, r2
 8010636:	f8ad 3000 	strh.w	r3, [sp]
 801063a:	88e2      	ldrh	r2, [r4, #6]
 801063c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010640:	1a9b      	subs	r3, r3, r2
 8010642:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010646:	6823      	ldr	r3, [r4, #0]
 8010648:	4669      	mov	r1, sp
 801064a:	689b      	ldr	r3, [r3, #8]
 801064c:	4620      	mov	r0, r4
 801064e:	4798      	blx	r3
 8010650:	69a4      	ldr	r4, [r4, #24]
 8010652:	2c00      	cmp	r4, #0
 8010654:	d1d8      	bne.n	8010608 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010656:	b002      	add	sp, #8
 8010658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801065c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801065c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801065e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010662:	460d      	mov	r5, r1
 8010664:	4616      	mov	r6, r2
 8010666:	b323      	cbz	r3, 80106b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010668:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801066a:	b314      	cbz	r4, 80106b2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801066c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010670:	b1eb      	cbz	r3, 80106ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010672:	6828      	ldr	r0, [r5, #0]
 8010674:	6869      	ldr	r1, [r5, #4]
 8010676:	466b      	mov	r3, sp
 8010678:	c303      	stmia	r3!, {r0, r1}
 801067a:	4668      	mov	r0, sp
 801067c:	1d21      	adds	r1, r4, #4
 801067e:	f7ff ff15 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8010682:	4668      	mov	r0, sp
 8010684:	f7ff ff55 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010688:	b988      	cbnz	r0, 80106ae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801068a:	f8bd 3000 	ldrh.w	r3, [sp]
 801068e:	88a2      	ldrh	r2, [r4, #4]
 8010690:	1a9b      	subs	r3, r3, r2
 8010692:	f8ad 3000 	strh.w	r3, [sp]
 8010696:	88e2      	ldrh	r2, [r4, #6]
 8010698:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801069c:	1a9b      	subs	r3, r3, r2
 801069e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80106a2:	6823      	ldr	r3, [r4, #0]
 80106a4:	4632      	mov	r2, r6
 80106a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80106a8:	4669      	mov	r1, sp
 80106aa:	4620      	mov	r0, r4
 80106ac:	4798      	blx	r3
 80106ae:	69a4      	ldr	r4, [r4, #24]
 80106b0:	e7db      	b.n	801066a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80106b2:	b002      	add	sp, #8
 80106b4:	bd70      	pop	{r4, r5, r6, pc}

080106b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80106b6:	b513      	push	{r0, r1, r4, lr}
 80106b8:	6803      	ldr	r3, [r0, #0]
 80106ba:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 80106be:	2300      	movs	r3, #0
 80106c0:	e9cd 3300 	strd	r3, r3, [sp]
 80106c4:	466b      	mov	r3, sp
 80106c6:	47a0      	blx	r4
 80106c8:	b002      	add	sp, #8
 80106ca:	bd10      	pop	{r4, pc}

080106cc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80106cc:	2301      	movs	r3, #1
 80106ce:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 80106d2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 80106d6:	4770      	bx	lr

080106d8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80106d8:	2301      	movs	r3, #1
 80106da:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 80106de:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 80106e2:	4770      	bx	lr

080106e4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80106e4:	6843      	ldr	r3, [r0, #4]
 80106e6:	2201      	movs	r2, #1
 80106e8:	725a      	strb	r2, [r3, #9]
 80106ea:	6840      	ldr	r0, [r0, #4]
 80106ec:	6803      	ldr	r3, [r0, #0]
 80106ee:	691b      	ldr	r3, [r3, #16]
 80106f0:	4718      	bx	r3

080106f2 <_ZN8touchgfx3HAL8flushDMAEv>:
 80106f2:	6840      	ldr	r0, [r0, #4]
 80106f4:	6803      	ldr	r3, [r0, #0]
 80106f6:	689b      	ldr	r3, [r3, #8]
 80106f8:	4718      	bx	r3

080106fa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80106fa:	b530      	push	{r4, r5, lr}
 80106fc:	b08b      	sub	sp, #44	@ 0x2c
 80106fe:	6804      	ldr	r4, [r0, #0]
 8010700:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8010704:	9509      	str	r5, [sp, #36]	@ 0x24
 8010706:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 801070a:	9508      	str	r5, [sp, #32]
 801070c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8010710:	9507      	str	r5, [sp, #28]
 8010712:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8010716:	9506      	str	r5, [sp, #24]
 8010718:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 801071c:	9505      	str	r5, [sp, #20]
 801071e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8010722:	9504      	str	r5, [sp, #16]
 8010724:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8010728:	9503      	str	r5, [sp, #12]
 801072a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 801072e:	9502      	str	r5, [sp, #8]
 8010730:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8010734:	e9cd 3500 	strd	r3, r5, [sp]
 8010738:	4613      	mov	r3, r2
 801073a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 801073c:	2200      	movs	r2, #0
 801073e:	47a0      	blx	r4
 8010740:	b00b      	add	sp, #44	@ 0x2c
 8010742:	bd30      	pop	{r4, r5, pc}

08010744 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010744:	4b04      	ldr	r3, [pc, #16]	@ (8010758 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010746:	781b      	ldrb	r3, [r3, #0]
 8010748:	b123      	cbz	r3, 8010754 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 801074a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 801074e:	f080 0001 	eor.w	r0, r0, #1
 8010752:	4770      	bx	lr
 8010754:	2001      	movs	r0, #1
 8010756:	4770      	bx	lr
 8010758:	20013f5e 	.word	0x20013f5e

0801075c <_ZN8touchgfx3HAL8endFrameEv>:
 801075c:	b510      	push	{r4, lr}
 801075e:	4604      	mov	r4, r0
 8010760:	6840      	ldr	r0, [r0, #4]
 8010762:	6803      	ldr	r3, [r0, #0]
 8010764:	689b      	ldr	r3, [r3, #8]
 8010766:	4798      	blx	r3
 8010768:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 801076c:	b113      	cbz	r3, 8010774 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801076e:	2301      	movs	r3, #1
 8010770:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8010774:	bd10      	pop	{r4, pc}

08010776 <_ZN8touchgfx3HAL10initializeEv>:
 8010776:	b510      	push	{r4, lr}
 8010778:	4604      	mov	r4, r0
 801077a:	f7f0 fe81 	bl	8001480 <_ZN8touchgfx10OSWrappers10initializeEv>
 801077e:	f7f0 fd8d 	bl	800129c <_ZN8touchgfx4GPIO4initEv>
 8010782:	6860      	ldr	r0, [r4, #4]
 8010784:	6803      	ldr	r3, [r0, #0]
 8010786:	68db      	ldr	r3, [r3, #12]
 8010788:	4798      	blx	r3
 801078a:	68e0      	ldr	r0, [r4, #12]
 801078c:	6803      	ldr	r3, [r0, #0]
 801078e:	689b      	ldr	r3, [r3, #8]
 8010790:	4798      	blx	r3
 8010792:	6823      	ldr	r3, [r4, #0]
 8010794:	4620      	mov	r0, r4
 8010796:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801079c:	4718      	bx	r3
	...

080107a0 <_ZN8touchgfx3HAL4tickEv>:
 80107a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80107a2:	6803      	ldr	r3, [r0, #0]
 80107a4:	4d5b      	ldr	r5, [pc, #364]	@ (8010914 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80107a6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80107aa:	4604      	mov	r4, r0
 80107ac:	4798      	blx	r3
 80107ae:	2800      	cmp	r0, #0
 80107b0:	f000 8095 	beq.w	80108de <_ZN8touchgfx3HAL4tickEv+0x13e>
 80107b4:	2001      	movs	r0, #1
 80107b6:	f7f0 fcef 	bl	8001198 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80107ba:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 80107be:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 80107c2:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 80107c6:	2600      	movs	r6, #0
 80107c8:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 80107cc:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 80107d0:	b133      	cbz	r3, 80107e0 <_ZN8touchgfx3HAL4tickEv+0x40>
 80107d2:	6823      	ldr	r3, [r4, #0]
 80107d4:	4620      	mov	r0, r4
 80107d6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 80107da:	4798      	blx	r3
 80107dc:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 80107e0:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 80107e4:	6862      	ldr	r2, [r4, #4]
 80107e6:	f083 0301 	eor.w	r3, r3, #1
 80107ea:	7253      	strb	r3, [r2, #9]
 80107ec:	2601      	movs	r6, #1
 80107ee:	702e      	strb	r6, [r5, #0]
 80107f0:	f006 fd60 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
 80107f4:	6803      	ldr	r3, [r0, #0]
 80107f6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80107f8:	4798      	blx	r3
 80107fa:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 80107fe:	b90b      	cbnz	r3, 8010804 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010800:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8010804:	f006 fd56 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
 8010808:	6803      	ldr	r3, [r0, #0]
 801080a:	695b      	ldr	r3, [r3, #20]
 801080c:	4798      	blx	r3
 801080e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010810:	6803      	ldr	r3, [r0, #0]
 8010812:	691b      	ldr	r3, [r3, #16]
 8010814:	4798      	blx	r3
 8010816:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 801081a:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 801081e:	3b01      	subs	r3, #1
 8010820:	b2db      	uxtb	r3, r3
 8010822:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010826:	b10a      	cbz	r2, 801082c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010828:	2b00      	cmp	r3, #0
 801082a:	d1eb      	bne.n	8010804 <_ZN8touchgfx3HAL4tickEv+0x64>
 801082c:	4a3a      	ldr	r2, [pc, #232]	@ (8010918 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801082e:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8010832:	7813      	ldrb	r3, [r2, #0]
 8010834:	3301      	adds	r3, #1
 8010836:	b25b      	sxtb	r3, r3
 8010838:	4299      	cmp	r1, r3
 801083a:	7013      	strb	r3, [r2, #0]
 801083c:	dc10      	bgt.n	8010860 <_ZN8touchgfx3HAL4tickEv+0xc0>
 801083e:	68e0      	ldr	r0, [r4, #12]
 8010840:	2300      	movs	r3, #0
 8010842:	7013      	strb	r3, [r2, #0]
 8010844:	6803      	ldr	r3, [r0, #0]
 8010846:	aa03      	add	r2, sp, #12
 8010848:	68db      	ldr	r3, [r3, #12]
 801084a:	a902      	add	r1, sp, #8
 801084c:	4798      	blx	r3
 801084e:	6823      	ldr	r3, [r4, #0]
 8010850:	2800      	cmp	r0, #0
 8010852:	d050      	beq.n	80108f6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010854:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8010858:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801085c:	4620      	mov	r0, r4
 801085e:	4798      	blx	r3
 8010860:	6960      	ldr	r0, [r4, #20]
 8010862:	2300      	movs	r3, #0
 8010864:	f88d 3007 	strb.w	r3, [sp, #7]
 8010868:	b158      	cbz	r0, 8010882 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801086a:	6803      	ldr	r3, [r0, #0]
 801086c:	f10d 0107 	add.w	r1, sp, #7
 8010870:	68db      	ldr	r3, [r3, #12]
 8010872:	4798      	blx	r3
 8010874:	b128      	cbz	r0, 8010882 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010876:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010878:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801087c:	6803      	ldr	r3, [r0, #0]
 801087e:	68db      	ldr	r3, [r3, #12]
 8010880:	4798      	blx	r3
 8010882:	f104 001c 	add.w	r0, r4, #28
 8010886:	f018 fc0f 	bl	80290a8 <_ZN8touchgfx8Gestures4tickEv>
 801088a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 801088e:	b30b      	cbz	r3, 80108d4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010890:	6920      	ldr	r0, [r4, #16]
 8010892:	6803      	ldr	r3, [r0, #0]
 8010894:	691b      	ldr	r3, [r3, #16]
 8010896:	4798      	blx	r3
 8010898:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 801089a:	4606      	mov	r6, r0
 801089c:	b903      	cbnz	r3, 80108a0 <_ZN8touchgfx3HAL4tickEv+0x100>
 801089e:	6760      	str	r0, [r4, #116]	@ 0x74
 80108a0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80108a2:	4a1e      	ldr	r2, [pc, #120]	@ (801091c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80108a4:	1af3      	subs	r3, r6, r3
 80108a6:	4293      	cmp	r3, r2
 80108a8:	d914      	bls.n	80108d4 <_ZN8touchgfx3HAL4tickEv+0x134>
 80108aa:	6920      	ldr	r0, [r4, #16]
 80108ac:	6803      	ldr	r3, [r0, #0]
 80108ae:	699b      	ldr	r3, [r3, #24]
 80108b0:	4798      	blx	r3
 80108b2:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 80108b4:	2264      	movs	r2, #100	@ 0x64
 80108b6:	1af3      	subs	r3, r6, r3
 80108b8:	fbb3 f3f2 	udiv	r3, r3, r2
 80108bc:	fbb0 f0f3 	udiv	r0, r0, r3
 80108c0:	2800      	cmp	r0, #0
 80108c2:	dc1d      	bgt.n	8010900 <_ZN8touchgfx3HAL4tickEv+0x160>
 80108c4:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 80108c8:	6920      	ldr	r0, [r4, #16]
 80108ca:	6803      	ldr	r3, [r0, #0]
 80108cc:	2100      	movs	r1, #0
 80108ce:	69db      	ldr	r3, [r3, #28]
 80108d0:	4798      	blx	r3
 80108d2:	6766      	str	r6, [r4, #116]	@ 0x74
 80108d4:	f006 fcee 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
 80108d8:	6803      	ldr	r3, [r0, #0]
 80108da:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80108dc:	4798      	blx	r3
 80108de:	6823      	ldr	r3, [r4, #0]
 80108e0:	4620      	mov	r0, r4
 80108e2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80108e6:	4798      	blx	r3
 80108e8:	2001      	movs	r0, #1
 80108ea:	f7f0 fc7f 	bl	80011ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80108ee:	2300      	movs	r3, #0
 80108f0:	702b      	strb	r3, [r5, #0]
 80108f2:	b004      	add	sp, #16
 80108f4:	bd70      	pop	{r4, r5, r6, pc}
 80108f6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80108fa:	4620      	mov	r0, r4
 80108fc:	4798      	blx	r3
 80108fe:	e7af      	b.n	8010860 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010900:	2863      	cmp	r0, #99	@ 0x63
 8010902:	bfcb      	itete	gt
 8010904:	2300      	movgt	r3, #0
 8010906:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 801090a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 801090e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8010912:	e7d9      	b.n	80108c8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010914:	20013f64 	.word	0x20013f64
 8010918:	20013f65 	.word	0x20013f65
 801091c:	05f5e100 	.word	0x05f5e100

08010920 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010920:	b510      	push	{r4, lr}
 8010922:	4604      	mov	r4, r0
 8010924:	f7f0 fddc 	bl	80014e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010928:	6863      	ldr	r3, [r4, #4]
 801092a:	2200      	movs	r2, #0
 801092c:	729a      	strb	r2, [r3, #10]
 801092e:	bd10      	pop	{r4, pc}

08010930 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010930:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8010932:	301c      	adds	r0, #28
 8010934:	f018 bbb6 	b.w	80290a4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010938 <_ZN8touchgfx3HAL5touchEll>:
 8010938:	b530      	push	{r4, r5, lr}
 801093a:	b087      	sub	sp, #28
 801093c:	4604      	mov	r4, r0
 801093e:	a804      	add	r0, sp, #16
 8010940:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010944:	f006 fa9e 	bl	8016e84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010948:	9b04      	ldr	r3, [sp, #16]
 801094a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801094e:	a906      	add	r1, sp, #24
 8010950:	9b05      	ldr	r3, [sp, #20]
 8010952:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010956:	a803      	add	r0, sp, #12
 8010958:	f006 fae6 	bl	8016f28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801095c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8010960:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010964:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010968:	f104 001c 	add.w	r0, r4, #28
 801096c:	b189      	cbz	r1, 8010992 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801096e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8010972:	9300      	str	r3, [sp, #0]
 8010974:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8010978:	4613      	mov	r3, r2
 801097a:	462a      	mov	r2, r5
 801097c:	f018 fba2 	bl	80290c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010980:	b128      	cbz	r0, 801098e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010982:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010986:	6623      	str	r3, [r4, #96]	@ 0x60
 8010988:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801098c:	6663      	str	r3, [r4, #100]	@ 0x64
 801098e:	b007      	add	sp, #28
 8010990:	bd30      	pop	{r4, r5, pc}
 8010992:	f018 fbd7 	bl	8029144 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010996:	2301      	movs	r3, #1
 8010998:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 801099c:	e7f1      	b.n	8010982 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801099e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801099e:	b510      	push	{r4, lr}
 80109a0:	2b00      	cmp	r3, #0
 80109a2:	d046      	beq.n	8010a32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80109a4:	ea81 0002 	eor.w	r0, r1, r2
 80109a8:	07c4      	lsls	r4, r0, #31
 80109aa:	d508      	bpl.n	80109be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80109ac:	440b      	add	r3, r1
 80109ae:	3a01      	subs	r2, #1
 80109b0:	428b      	cmp	r3, r1
 80109b2:	d93e      	bls.n	8010a32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80109b4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80109b8:	f801 0b01 	strb.w	r0, [r1], #1
 80109bc:	e7f8      	b.n	80109b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80109be:	07d0      	lsls	r0, r2, #31
 80109c0:	bf42      	ittt	mi
 80109c2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80109c6:	f801 0b01 	strbmi.w	r0, [r1], #1
 80109ca:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80109ce:	2b01      	cmp	r3, #1
 80109d0:	d911      	bls.n	80109f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80109d2:	ea81 0402 	eor.w	r4, r1, r2
 80109d6:	07a4      	lsls	r4, r4, #30
 80109d8:	4610      	mov	r0, r2
 80109da:	d022      	beq.n	8010a22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80109dc:	f023 0401 	bic.w	r4, r3, #1
 80109e0:	440c      	add	r4, r1
 80109e2:	428c      	cmp	r4, r1
 80109e4:	4602      	mov	r2, r0
 80109e6:	d904      	bls.n	80109f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80109e8:	8812      	ldrh	r2, [r2, #0]
 80109ea:	f821 2b02 	strh.w	r2, [r1], #2
 80109ee:	3002      	adds	r0, #2
 80109f0:	e7f7      	b.n	80109e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80109f2:	f003 0301 	and.w	r3, r3, #1
 80109f6:	f023 0003 	bic.w	r0, r3, #3
 80109fa:	4408      	add	r0, r1
 80109fc:	4288      	cmp	r0, r1
 80109fe:	4614      	mov	r4, r2
 8010a00:	d904      	bls.n	8010a0c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010a02:	6824      	ldr	r4, [r4, #0]
 8010a04:	f841 4b04 	str.w	r4, [r1], #4
 8010a08:	3204      	adds	r2, #4
 8010a0a:	e7f7      	b.n	80109fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010a0c:	f003 0303 	and.w	r3, r3, #3
 8010a10:	440b      	add	r3, r1
 8010a12:	3a01      	subs	r2, #1
 8010a14:	428b      	cmp	r3, r1
 8010a16:	d90c      	bls.n	8010a32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010a18:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010a1c:	f801 0b01 	strb.w	r0, [r1], #1
 8010a20:	e7f8      	b.n	8010a14 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010a22:	0790      	lsls	r0, r2, #30
 8010a24:	d0e7      	beq.n	80109f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010a26:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010a2a:	f821 0b02 	strh.w	r0, [r1], #2
 8010a2e:	3b02      	subs	r3, #2
 8010a30:	e7e1      	b.n	80109f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010a32:	2001      	movs	r0, #1
 8010a34:	bd10      	pop	{r4, pc}

08010a36 <_ZN8touchgfx3HAL7noTouchEv>:
 8010a36:	b510      	push	{r4, lr}
 8010a38:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8010a3c:	4604      	mov	r4, r0
 8010a3e:	b153      	cbz	r3, 8010a56 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010a40:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8010a44:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8010a48:	2101      	movs	r1, #1
 8010a4a:	301c      	adds	r0, #28
 8010a4c:	f018 fb7a 	bl	8029144 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010a50:	2300      	movs	r3, #0
 8010a52:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010a56:	bd10      	pop	{r4, pc}

08010a58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010a58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a5c:	b085      	sub	sp, #20
 8010a5e:	ad04      	add	r5, sp, #16
 8010a60:	4604      	mov	r4, r0
 8010a62:	2000      	movs	r0, #0
 8010a64:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010a68:	69a0      	ldr	r0, [r4, #24]
 8010a6a:	6806      	ldr	r6, [r0, #0]
 8010a6c:	9501      	str	r5, [sp, #4]
 8010a6e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8010a72:	9500      	str	r5, [sp, #0]
 8010a74:	6835      	ldr	r5, [r6, #0]
 8010a76:	4699      	mov	r9, r3
 8010a78:	460f      	mov	r7, r1
 8010a7a:	4690      	mov	r8, r2
 8010a7c:	47a8      	blx	r5
 8010a7e:	4d10      	ldr	r5, [pc, #64]	@ (8010ac0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010a80:	4606      	mov	r6, r0
 8010a82:	f8a5 9000 	strh.w	r9, [r5]
 8010a86:	f7f3 fb07 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8010a8a:	6803      	ldr	r3, [r0, #0]
 8010a8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010a8e:	4798      	blx	r3
 8010a90:	b128      	cbz	r0, 8010a9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010a92:	2801      	cmp	r0, #1
 8010a94:	d00b      	beq.n	8010aae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010a96:	4630      	mov	r0, r6
 8010a98:	b005      	add	sp, #20
 8010a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a9e:	882b      	ldrh	r3, [r5, #0]
 8010aa0:	fb08 7203 	mla	r2, r8, r3, r7
 8010aa4:	9b03      	ldr	r3, [sp, #12]
 8010aa6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010aaa:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8010aac:	e7f3      	b.n	8010a96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010aae:	882a      	ldrh	r2, [r5, #0]
 8010ab0:	9b03      	ldr	r3, [sp, #12]
 8010ab2:	fb08 7202 	mla	r2, r8, r2, r7
 8010ab6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010aba:	1a9a      	subs	r2, r3, r2
 8010abc:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8010abe:	e7ea      	b.n	8010a96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010ac0:	20013f5a 	.word	0x20013f5a

08010ac4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ac6:	b08b      	sub	sp, #44	@ 0x2c
 8010ac8:	4617      	mov	r7, r2
 8010aca:	4604      	mov	r4, r0
 8010acc:	460e      	mov	r6, r1
 8010ace:	461d      	mov	r5, r3
 8010ad0:	f7f3 fae2 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8010ad4:	6803      	ldr	r3, [r0, #0]
 8010ad6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010ad8:	4798      	blx	r3
 8010ada:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010ade:	9007      	str	r0, [sp, #28]
 8010ae0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010ae4:	4b0d      	ldr	r3, [pc, #52]	@ (8010b1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010ae6:	6822      	ldr	r2, [r4, #0]
 8010ae8:	881b      	ldrh	r3, [r3, #0]
 8010aea:	9306      	str	r3, [sp, #24]
 8010aec:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8010af0:	9305      	str	r3, [sp, #20]
 8010af2:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8010af6:	9304      	str	r3, [sp, #16]
 8010af8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010afc:	9303      	str	r3, [sp, #12]
 8010afe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010b02:	9302      	str	r3, [sp, #8]
 8010b04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8010b08:	e9cd 5300 	strd	r5, r3, [sp]
 8010b0c:	4631      	mov	r1, r6
 8010b0e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8010b10:	463b      	mov	r3, r7
 8010b12:	2200      	movs	r2, #0
 8010b14:	4620      	mov	r0, r4
 8010b16:	47a8      	blx	r5
 8010b18:	b00b      	add	sp, #44	@ 0x2c
 8010b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b1c:	20013f5a 	.word	0x20013f5a

08010b20 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010b20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b24:	4698      	mov	r8, r3
 8010b26:	6803      	ldr	r3, [r0, #0]
 8010b28:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8010b2a:	4b15      	ldr	r3, [pc, #84]	@ (8010b80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010b2c:	b08b      	sub	sp, #44	@ 0x2c
 8010b2e:	4617      	mov	r7, r2
 8010b30:	f8b3 9000 	ldrh.w	r9, [r3]
 8010b34:	460e      	mov	r6, r1
 8010b36:	4604      	mov	r4, r0
 8010b38:	f7f3 faae 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8010b3c:	6803      	ldr	r3, [r0, #0]
 8010b3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010b40:	4798      	blx	r3
 8010b42:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8010b46:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010b4a:	2302      	movs	r3, #2
 8010b4c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010b50:	2301      	movs	r3, #1
 8010b52:	9305      	str	r3, [sp, #20]
 8010b54:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010b58:	9304      	str	r3, [sp, #16]
 8010b5a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8010b5e:	9303      	str	r3, [sp, #12]
 8010b60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8010b64:	9302      	str	r3, [sp, #8]
 8010b66:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010b6a:	2200      	movs	r2, #0
 8010b6c:	e9cd 8300 	strd	r8, r3, [sp]
 8010b70:	4631      	mov	r1, r6
 8010b72:	463b      	mov	r3, r7
 8010b74:	4620      	mov	r0, r4
 8010b76:	47a8      	blx	r5
 8010b78:	b00b      	add	sp, #44	@ 0x2c
 8010b7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b7e:	bf00      	nop
 8010b80:	20013f5a 	.word	0x20013f5a

08010b84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010b84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b88:	4698      	mov	r8, r3
 8010b8a:	6803      	ldr	r3, [r0, #0]
 8010b8c:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8010b8e:	4b11      	ldr	r3, [pc, #68]	@ (8010bd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010b90:	b087      	sub	sp, #28
 8010b92:	f8b3 9000 	ldrh.w	r9, [r3]
 8010b96:	460e      	mov	r6, r1
 8010b98:	4617      	mov	r7, r2
 8010b9a:	4604      	mov	r4, r0
 8010b9c:	f7f3 fa7c 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8010ba0:	6803      	ldr	r3, [r0, #0]
 8010ba2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010ba4:	4798      	blx	r3
 8010ba6:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8010baa:	f8cd 900c 	str.w	r9, [sp, #12]
 8010bae:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010bb2:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8010bb6:	9302      	str	r3, [sp, #8]
 8010bb8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8010bbc:	9301      	str	r3, [sp, #4]
 8010bbe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010bc2:	9300      	str	r3, [sp, #0]
 8010bc4:	463a      	mov	r2, r7
 8010bc6:	4643      	mov	r3, r8
 8010bc8:	4631      	mov	r1, r6
 8010bca:	4620      	mov	r0, r4
 8010bcc:	47a8      	blx	r5
 8010bce:	b007      	add	sp, #28
 8010bd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010bd4:	20013f5a 	.word	0x20013f5a

08010bd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bdc:	4604      	mov	r4, r0
 8010bde:	b08f      	sub	sp, #60	@ 0x3c
 8010be0:	4610      	mov	r0, r2
 8010be2:	460d      	mov	r5, r1
 8010be4:	4691      	mov	r9, r2
 8010be6:	461e      	mov	r6, r3
 8010be8:	f009 ffa2 	bl	801ab30 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010bec:	2800      	cmp	r0, #0
 8010bee:	f000 809d 	beq.w	8010d2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010bf2:	6823      	ldr	r3, [r4, #0]
 8010bf4:	f8df b198 	ldr.w	fp, [pc, #408]	@ 8010d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010bf8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010bfa:	f8df a198 	ldr.w	sl, [pc, #408]	@ 8010d94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8010bfe:	4f61      	ldr	r7, [pc, #388]	@ (8010d84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010c00:	4620      	mov	r0, r4
 8010c02:	4798      	blx	r3
 8010c04:	6823      	ldr	r3, [r4, #0]
 8010c06:	4620      	mov	r0, r4
 8010c08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010c0a:	4798      	blx	r3
 8010c0c:	f8bb 3000 	ldrh.w	r3, [fp]
 8010c10:	9301      	str	r3, [sp, #4]
 8010c12:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8010c16:	f8ba 3000 	ldrh.w	r3, [sl]
 8010c1a:	9302      	str	r3, [sp, #8]
 8010c1c:	883b      	ldrh	r3, [r7, #0]
 8010c1e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010c22:	9303      	str	r3, [sp, #12]
 8010c24:	4b58      	ldr	r3, [pc, #352]	@ (8010d88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010c26:	9305      	str	r3, [sp, #20]
 8010c28:	881a      	ldrh	r2, [r3, #0]
 8010c2a:	9204      	str	r2, [sp, #16]
 8010c2c:	4640      	mov	r0, r8
 8010c2e:	f00a f813 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010c32:	8038      	strh	r0, [r7, #0]
 8010c34:	4640      	mov	r0, r8
 8010c36:	f00a f843 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010c3a:	9b05      	ldr	r3, [sp, #20]
 8010c3c:	b280      	uxth	r0, r0
 8010c3e:	8018      	strh	r0, [r3, #0]
 8010c40:	4b52      	ldr	r3, [pc, #328]	@ (8010d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010c42:	781b      	ldrb	r3, [r3, #0]
 8010c44:	2b00      	cmp	r3, #0
 8010c46:	d174      	bne.n	8010d32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010c48:	883b      	ldrh	r3, [r7, #0]
 8010c4a:	f8ab 3000 	strh.w	r3, [fp]
 8010c4e:	f8aa 0000 	strh.w	r0, [sl]
 8010c52:	4648      	mov	r0, r9
 8010c54:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8010c58:	f009 ff6a 	bl	801ab30 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010c5c:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8010c60:	2200      	movs	r2, #0
 8010c62:	4611      	mov	r1, r2
 8010c64:	4628      	mov	r0, r5
 8010c66:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010c6a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010c6e:	f7f2 fa34 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 8010c72:	2301      	movs	r3, #1
 8010c74:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8010c78:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8010c7c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010c80:	2b00      	cmp	r3, #0
 8010c82:	dd5c      	ble.n	8010d3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010c84:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010c88:	2b00      	cmp	r3, #0
 8010c8a:	dd58      	ble.n	8010d3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010c8c:	462a      	mov	r2, r5
 8010c8e:	ab0a      	add	r3, sp, #40	@ 0x28
 8010c90:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010c94:	6851      	ldr	r1, [r2, #4]
 8010c96:	c303      	stmia	r3!, {r0, r1}
 8010c98:	4631      	mov	r1, r6
 8010c9a:	a80a      	add	r0, sp, #40	@ 0x28
 8010c9c:	f7ff fc06 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8010ca0:	4b38      	ldr	r3, [pc, #224]	@ (8010d84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010ca2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010ca6:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010caa:	2100      	movs	r1, #0
 8010cac:	aa0a      	add	r2, sp, #40	@ 0x28
 8010cae:	4b36      	ldr	r3, [pc, #216]	@ (8010d88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010cb0:	910c      	str	r1, [sp, #48]	@ 0x30
 8010cb2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010cb6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010cba:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010cbe:	ab08      	add	r3, sp, #32
 8010cc0:	e883 0003 	stmia.w	r3, {r0, r1}
 8010cc4:	4618      	mov	r0, r3
 8010cc6:	a90c      	add	r1, sp, #48	@ 0x30
 8010cc8:	f7ff fbf0 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8010ccc:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8010cce:	2b00      	cmp	r3, #0
 8010cd0:	d13c      	bne.n	8010d4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010cd2:	2000      	movs	r0, #0
 8010cd4:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8010cd8:	2600      	movs	r6, #0
 8010cda:	682a      	ldr	r2, [r5, #0]
 8010cdc:	696b      	ldr	r3, [r5, #20]
 8010cde:	616e      	str	r6, [r5, #20]
 8010ce0:	9305      	str	r3, [sp, #20]
 8010ce2:	6892      	ldr	r2, [r2, #8]
 8010ce4:	a908      	add	r1, sp, #32
 8010ce6:	4628      	mov	r0, r5
 8010ce8:	4790      	blx	r2
 8010cea:	9b05      	ldr	r3, [sp, #20]
 8010cec:	616b      	str	r3, [r5, #20]
 8010cee:	4652      	mov	r2, sl
 8010cf0:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8010cf4:	4649      	mov	r1, r9
 8010cf6:	4628      	mov	r0, r5
 8010cf8:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8010cfc:	f7f2 f9ed 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 8010d00:	4b23      	ldr	r3, [pc, #140]	@ (8010d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010d02:	9a01      	ldr	r2, [sp, #4]
 8010d04:	801a      	strh	r2, [r3, #0]
 8010d06:	4b23      	ldr	r3, [pc, #140]	@ (8010d94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010d08:	9a02      	ldr	r2, [sp, #8]
 8010d0a:	801a      	strh	r2, [r3, #0]
 8010d0c:	4b1d      	ldr	r3, [pc, #116]	@ (8010d84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010d0e:	9a03      	ldr	r2, [sp, #12]
 8010d10:	801a      	strh	r2, [r3, #0]
 8010d12:	4b1d      	ldr	r3, [pc, #116]	@ (8010d88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010d14:	9a04      	ldr	r2, [sp, #16]
 8010d16:	801a      	strh	r2, [r3, #0]
 8010d18:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8010d1c:	6823      	ldr	r3, [r4, #0]
 8010d1e:	4620      	mov	r0, r4
 8010d20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010d22:	4798      	blx	r3
 8010d24:	6823      	ldr	r3, [r4, #0]
 8010d26:	4620      	mov	r0, r4
 8010d28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010d2a:	4798      	blx	r3
 8010d2c:	b00f      	add	sp, #60	@ 0x3c
 8010d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d32:	883b      	ldrh	r3, [r7, #0]
 8010d34:	f8ab 0000 	strh.w	r0, [fp]
 8010d38:	f8aa 3000 	strh.w	r3, [sl]
 8010d3c:	e789      	b.n	8010c52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010d3e:	462a      	mov	r2, r5
 8010d40:	ab0a      	add	r3, sp, #40	@ 0x28
 8010d42:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010d46:	6851      	ldr	r1, [r2, #4]
 8010d48:	c303      	stmia	r3!, {r0, r1}
 8010d4a:	e7a9      	b.n	8010ca0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010d4c:	a807      	add	r0, sp, #28
 8010d4e:	f00a f8f9 	bl	801af44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d52:	4606      	mov	r6, r0
 8010d54:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8010d56:	6803      	ldr	r3, [r0, #0]
 8010d58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010d5a:	4798      	blx	r3
 8010d5c:	4286      	cmp	r6, r0
 8010d5e:	d1b8      	bne.n	8010cd2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010d60:	f7f3 f99a 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8010d64:	6803      	ldr	r3, [r0, #0]
 8010d66:	4606      	mov	r6, r0
 8010d68:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010d6a:	9305      	str	r3, [sp, #20]
 8010d6c:	a807      	add	r0, sp, #28
 8010d6e:	f00a f8e9 	bl	801af44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d72:	9b05      	ldr	r3, [sp, #20]
 8010d74:	4601      	mov	r1, r0
 8010d76:	4630      	mov	r0, r6
 8010d78:	4798      	blx	r3
 8010d7a:	f080 0001 	eor.w	r0, r0, #1
 8010d7e:	b2c0      	uxtb	r0, r0
 8010d80:	e7a8      	b.n	8010cd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010d82:	bf00      	nop
 8010d84:	20013f54 	.word	0x20013f54
 8010d88:	20013f56 	.word	0x20013f56
 8010d8c:	20013f58 	.word	0x20013f58
 8010d90:	20013f5a 	.word	0x20013f5a
 8010d94:	20013f5c 	.word	0x20013f5c

08010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010d98:	b510      	push	{r4, lr}
 8010d9a:	4b07      	ldr	r3, [pc, #28]	@ (8010db8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010d9c:	781b      	ldrb	r3, [r3, #0]
 8010d9e:	4604      	mov	r4, r0
 8010da0:	b13b      	cbz	r3, 8010db2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010da2:	6803      	ldr	r3, [r0, #0]
 8010da4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010da6:	4798      	blx	r3
 8010da8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8010daa:	4283      	cmp	r3, r0
 8010dac:	d101      	bne.n	8010db2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010dae:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8010db0:	bd10      	pop	{r4, pc}
 8010db2:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8010db4:	e7fc      	b.n	8010db0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010db6:	bf00      	nop
 8010db8:	20013f5e 	.word	0x20013f5e

08010dbc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010dbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010dc0:	b08a      	sub	sp, #40	@ 0x28
 8010dc2:	461d      	mov	r5, r3
 8010dc4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8010dc8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010dcc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8010dd0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010dd4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010dd8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010ddc:	2400      	movs	r4, #0
 8010dde:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010de2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8010de6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010dea:	4690      	mov	r8, r2
 8010dec:	4607      	mov	r7, r0
 8010dee:	9404      	str	r4, [sp, #16]
 8010df0:	f88d 4020 	strb.w	r4, [sp, #32]
 8010df4:	f7ff ffd0 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010df8:	fb06 8505 	mla	r5, r6, r5, r8
 8010dfc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010e00:	6878      	ldr	r0, [r7, #4]
 8010e02:	9505      	str	r5, [sp, #20]
 8010e04:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010e08:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8010e0c:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8010e10:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8010e14:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8010e18:	6803      	ldr	r3, [r0, #0]
 8010e1a:	a901      	add	r1, sp, #4
 8010e1c:	685b      	ldr	r3, [r3, #4]
 8010e1e:	4798      	blx	r3
 8010e20:	b00a      	add	sp, #40	@ 0x28
 8010e22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010e26 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010e26:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e2a:	b08b      	sub	sp, #44	@ 0x2c
 8010e2c:	2400      	movs	r4, #0
 8010e2e:	461d      	mov	r5, r3
 8010e30:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8010e34:	4688      	mov	r8, r1
 8010e36:	4691      	mov	r9, r2
 8010e38:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8010e3c:	9404      	str	r4, [sp, #16]
 8010e3e:	4607      	mov	r7, r0
 8010e40:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010e44:	f7ff ffa8 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e48:	fb06 9505 	mla	r5, r6, r5, r9
 8010e4c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010e50:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010e54:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010e58:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8010e5c:	6878      	ldr	r0, [r7, #4]
 8010e5e:	9505      	str	r5, [sp, #20]
 8010e60:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010e64:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010e68:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010e6c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010e70:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010e74:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8010e78:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8010e7c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8010e80:	6803      	ldr	r3, [r0, #0]
 8010e82:	a901      	add	r1, sp, #4
 8010e84:	685b      	ldr	r3, [r3, #4]
 8010e86:	4798      	blx	r3
 8010e88:	b00b      	add	sp, #44	@ 0x2c
 8010e8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e94:	b08a      	sub	sp, #40	@ 0x28
 8010e96:	4698      	mov	r8, r3
 8010e98:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8010e9c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8010ea0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 8010ea4:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8010ea8:	2300      	movs	r3, #0
 8010eaa:	2d0b      	cmp	r5, #11
 8010eac:	4606      	mov	r6, r0
 8010eae:	9304      	str	r3, [sp, #16]
 8010eb0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8010eb4:	d138      	bne.n	8010f28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010eb6:	2380      	movs	r3, #128	@ 0x80
 8010eb8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ebc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010ec0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010ec4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010ec8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010ecc:	f88d 0020 	strb.w	r0, [sp, #32]
 8010ed0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8010ed4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ed8:	4630      	mov	r0, r6
 8010eda:	9203      	str	r2, [sp, #12]
 8010edc:	f7ff ff5c 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ee0:	2c0b      	cmp	r4, #11
 8010ee2:	bf98      	it	ls
 8010ee4:	4b1b      	ldrls	r3, [pc, #108]	@ (8010f54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010ee6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8010eea:	bf98      	it	ls
 8010eec:	5d19      	ldrbls	r1, [r3, r4]
 8010eee:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010ef2:	bf88      	it	hi
 8010ef4:	2100      	movhi	r1, #0
 8010ef6:	fb02 8307 	mla	r3, r2, r7, r8
 8010efa:	10c9      	asrs	r1, r1, #3
 8010efc:	fb01 0003 	mla	r0, r1, r3, r0
 8010f00:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8010f04:	9005      	str	r0, [sp, #20]
 8010f06:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8010f0a:	6870      	ldr	r0, [r6, #4]
 8010f0c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8010f10:	2300      	movs	r3, #0
 8010f12:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8010f16:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8010f1a:	6803      	ldr	r3, [r0, #0]
 8010f1c:	a901      	add	r1, sp, #4
 8010f1e:	685b      	ldr	r3, [r3, #4]
 8010f20:	4798      	blx	r3
 8010f22:	b00a      	add	sp, #40	@ 0x28
 8010f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f28:	2d02      	cmp	r5, #2
 8010f2a:	d109      	bne.n	8010f40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010f2c:	28ff      	cmp	r0, #255	@ 0xff
 8010f2e:	d105      	bne.n	8010f3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010f30:	f1bc 0f00 	cmp.w	ip, #0
 8010f34:	bf14      	ite	ne
 8010f36:	2340      	movne	r3, #64	@ 0x40
 8010f38:	2320      	moveq	r3, #32
 8010f3a:	e7bd      	b.n	8010eb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f3c:	2340      	movs	r3, #64	@ 0x40
 8010f3e:	e7bb      	b.n	8010eb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f40:	28ff      	cmp	r0, #255	@ 0xff
 8010f42:	d105      	bne.n	8010f50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010f44:	f1bc 0f00 	cmp.w	ip, #0
 8010f48:	bf14      	ite	ne
 8010f4a:	2304      	movne	r3, #4
 8010f4c:	2301      	moveq	r3, #1
 8010f4e:	e7b3      	b.n	8010eb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f50:	2304      	movs	r3, #4
 8010f52:	e7b1      	b.n	8010eb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010f54:	0802ddf0 	.word	0x0802ddf0

08010f58 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f5c:	b08b      	sub	sp, #44	@ 0x2c
 8010f5e:	461d      	mov	r5, r3
 8010f60:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8010f64:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8010f68:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8010f6c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8010f70:	bf14      	ite	ne
 8010f72:	2308      	movne	r3, #8
 8010f74:	2302      	moveq	r3, #2
 8010f76:	2400      	movs	r4, #0
 8010f78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010f7c:	4688      	mov	r8, r1
 8010f7e:	4693      	mov	fp, r2
 8010f80:	9404      	str	r4, [sp, #16]
 8010f82:	4607      	mov	r7, r0
 8010f84:	f7ff ff08 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f88:	2e0b      	cmp	r6, #11
 8010f8a:	bf98      	it	ls
 8010f8c:	4b15      	ldrls	r3, [pc, #84]	@ (8010fe4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010f8e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8010f92:	bf98      	it	ls
 8010f94:	5d9c      	ldrbls	r4, [r3, r6]
 8010f96:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8010f9a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010f9e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010fa2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8010fa6:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010faa:	10e4      	asrs	r4, r4, #3
 8010fac:	fb04 0405 	mla	r4, r4, r5, r0
 8010fb0:	2300      	movs	r3, #0
 8010fb2:	6878      	ldr	r0, [r7, #4]
 8010fb4:	9405      	str	r4, [sp, #20]
 8010fb6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010fba:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010fbe:	f8cd 8010 	str.w	r8, [sp, #16]
 8010fc2:	f88d 9020 	strb.w	r9, [sp, #32]
 8010fc6:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8010fca:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8010fce:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 8010fd2:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	a901      	add	r1, sp, #4
 8010fda:	685b      	ldr	r3, [r3, #4]
 8010fdc:	4798      	blx	r3
 8010fde:	b00b      	add	sp, #44	@ 0x2c
 8010fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fe4:	0802ddf0 	.word	0x0802ddf0

08010fe8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010fe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fec:	461e      	mov	r6, r3
 8010fee:	4b0a      	ldr	r3, [pc, #40]	@ (8011018 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010ff0:	460f      	mov	r7, r1
 8010ff2:	881d      	ldrh	r5, [r3, #0]
 8010ff4:	4690      	mov	r8, r2
 8010ff6:	f7f3 f84f 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8010ffa:	6803      	ldr	r3, [r0, #0]
 8010ffc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010ffe:	4798      	blx	r3
 8011000:	280b      	cmp	r0, #11
 8011002:	bf9a      	itte	ls
 8011004:	4b05      	ldrls	r3, [pc, #20]	@ (801101c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011006:	5c1c      	ldrbls	r4, [r3, r0]
 8011008:	2400      	movhi	r4, #0
 801100a:	fb08 7005 	mla	r0, r8, r5, r7
 801100e:	10e4      	asrs	r4, r4, #3
 8011010:	fb04 6000 	mla	r0, r4, r0, r6
 8011014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011018:	20013f5a 	.word	0x20013f5a
 801101c:	0802ddf0 	.word	0x0802ddf0

08011020 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011022:	b08b      	sub	sp, #44	@ 0x2c
 8011024:	461f      	mov	r7, r3
 8011026:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801102a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801102e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8011032:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011036:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801103a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801103e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011042:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011046:	2500      	movs	r5, #0
 8011048:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 801104c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011050:	4604      	mov	r4, r0
 8011052:	4616      	mov	r6, r2
 8011054:	9504      	str	r5, [sp, #16]
 8011056:	f7ff fe9f 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801105a:	463a      	mov	r2, r7
 801105c:	4631      	mov	r1, r6
 801105e:	4603      	mov	r3, r0
 8011060:	4620      	mov	r0, r4
 8011062:	f7ff ffc1 	bl	8010fe8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011066:	4b0e      	ldr	r3, [pc, #56]	@ (80110a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011068:	9005      	str	r0, [sp, #20]
 801106a:	881b      	ldrh	r3, [r3, #0]
 801106c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011070:	f7f3 f812 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8011074:	6803      	ldr	r3, [r0, #0]
 8011076:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011078:	4798      	blx	r3
 801107a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801107c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8011080:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8011084:	9304      	str	r3, [sp, #16]
 8011086:	6860      	ldr	r0, [r4, #4]
 8011088:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 801108c:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8011090:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 8011094:	6803      	ldr	r3, [r0, #0]
 8011096:	a901      	add	r1, sp, #4
 8011098:	685b      	ldr	r3, [r3, #4]
 801109a:	4798      	blx	r3
 801109c:	b00b      	add	sp, #44	@ 0x2c
 801109e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80110a0:	20013f5a 	.word	0x20013f5a

080110a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80110a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110a6:	b08d      	sub	sp, #52	@ 0x34
 80110a8:	466b      	mov	r3, sp
 80110aa:	e883 0006 	stmia.w	r3, {r1, r2}
 80110ae:	2300      	movs	r3, #0
 80110b0:	9306      	str	r3, [sp, #24]
 80110b2:	6803      	ldr	r3, [r0, #0]
 80110b4:	f8bd 6000 	ldrh.w	r6, [sp]
 80110b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80110ba:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80110be:	2501      	movs	r5, #1
 80110c0:	9503      	str	r5, [sp, #12]
 80110c2:	4604      	mov	r4, r0
 80110c4:	4798      	blx	r3
 80110c6:	463a      	mov	r2, r7
 80110c8:	4631      	mov	r1, r6
 80110ca:	4603      	mov	r3, r0
 80110cc:	4620      	mov	r0, r4
 80110ce:	f7ff ff8b 	bl	8010fe8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80110d2:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80110d4:	9307      	str	r3, [sp, #28]
 80110d6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80110da:	f8ad 3020 	strh.w	r3, [sp, #32]
 80110de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80110e2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80110e6:	4b0f      	ldr	r3, [pc, #60]	@ (8011124 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80110e8:	9004      	str	r0, [sp, #16]
 80110ea:	881b      	ldrh	r3, [r3, #0]
 80110ec:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80110f0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80110f4:	f7f2 ffd0 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 80110f8:	6803      	ldr	r3, [r0, #0]
 80110fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80110fc:	4798      	blx	r3
 80110fe:	23ff      	movs	r3, #255	@ 0xff
 8011100:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011104:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011108:	6860      	ldr	r0, [r4, #4]
 801110a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 801110e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8011112:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8011116:	6803      	ldr	r3, [r0, #0]
 8011118:	a903      	add	r1, sp, #12
 801111a:	685b      	ldr	r3, [r3, #4]
 801111c:	4798      	blx	r3
 801111e:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8011120:	b00d      	add	sp, #52	@ 0x34
 8011122:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011124:	20013f5a 	.word	0x20013f5a

08011128 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801112c:	b08c      	sub	sp, #48	@ 0x30
 801112e:	461e      	mov	r6, r3
 8011130:	466d      	mov	r5, sp
 8011132:	2300      	movs	r3, #0
 8011134:	e885 0006 	stmia.w	r5, {r1, r2}
 8011138:	9306      	str	r3, [sp, #24]
 801113a:	6803      	ldr	r3, [r0, #0]
 801113c:	f8bd 7000 	ldrh.w	r7, [sp]
 8011140:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011142:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011146:	2501      	movs	r5, #1
 8011148:	9503      	str	r5, [sp, #12]
 801114a:	4604      	mov	r4, r0
 801114c:	4798      	blx	r3
 801114e:	4642      	mov	r2, r8
 8011150:	4639      	mov	r1, r7
 8011152:	4603      	mov	r3, r0
 8011154:	4620      	mov	r0, r4
 8011156:	f7ff ff47 	bl	8010fe8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801115a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801115e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011162:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011166:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801116a:	4b11      	ldr	r3, [pc, #68]	@ (80111b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801116c:	9004      	str	r0, [sp, #16]
 801116e:	881b      	ldrh	r3, [r3, #0]
 8011170:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8011174:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011176:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 801117a:	9607      	str	r6, [sp, #28]
 801117c:	f7f2 ff8c 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8011180:	6803      	ldr	r3, [r0, #0]
 8011182:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011184:	4798      	blx	r3
 8011186:	23ff      	movs	r3, #255	@ 0xff
 8011188:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 801118c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011190:	6860      	ldr	r0, [r4, #4]
 8011192:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8011196:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 801119a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 801119e:	6803      	ldr	r3, [r0, #0]
 80111a0:	a903      	add	r1, sp, #12
 80111a2:	685b      	ldr	r3, [r3, #4]
 80111a4:	4798      	blx	r3
 80111a6:	4630      	mov	r0, r6
 80111a8:	b00c      	add	sp, #48	@ 0x30
 80111aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111ae:	bf00      	nop
 80111b0:	20013f5a 	.word	0x20013f5a

080111b4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80111b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111b6:	b085      	sub	sp, #20
 80111b8:	ac02      	add	r4, sp, #8
 80111ba:	e884 0006 	stmia.w	r4, {r1, r2}
 80111be:	4605      	mov	r5, r0
 80111c0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80111c4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80111c8:	f7ff fde6 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80111cc:	463a      	mov	r2, r7
 80111ce:	4603      	mov	r3, r0
 80111d0:	4631      	mov	r1, r6
 80111d2:	4628      	mov	r0, r5
 80111d4:	f7ff ff08 	bl	8010fe8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80111d8:	4a05      	ldr	r2, [pc, #20]	@ (80111f0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80111da:	682b      	ldr	r3, [r5, #0]
 80111dc:	8812      	ldrh	r2, [r2, #0]
 80111de:	9200      	str	r2, [sp, #0]
 80111e0:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80111e2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80111e6:	4603      	mov	r3, r0
 80111e8:	4628      	mov	r0, r5
 80111ea:	47b0      	blx	r6
 80111ec:	b005      	add	sp, #20
 80111ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111f0:	20013f5a 	.word	0x20013f5a

080111f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80111f4:	b570      	push	{r4, r5, r6, lr}
 80111f6:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 80111fa:	4604      	mov	r4, r0
 80111fc:	b19b      	cbz	r3, 8011226 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80111fe:	2002      	movs	r0, #2
 8011200:	f7f0 f81e 	bl	8001240 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011204:	2300      	movs	r3, #0
 8011206:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 801120a:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 801120e:	6823      	ldr	r3, [r4, #0]
 8011210:	4620      	mov	r0, r4
 8011212:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 8011216:	f7ff fdbf 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801121a:	462b      	mov	r3, r5
 801121c:	4601      	mov	r1, r0
 801121e:	4620      	mov	r0, r4
 8011220:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011224:	4718      	bx	r3
 8011226:	bd70      	pop	{r4, r5, r6, pc}

08011228 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011228:	b538      	push	{r3, r4, r5, lr}
 801122a:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 801122e:	428b      	cmp	r3, r1
 8011230:	4604      	mov	r4, r0
 8011232:	460d      	mov	r5, r1
 8011234:	d006      	beq.n	8011244 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011236:	6803      	ldr	r3, [r0, #0]
 8011238:	b929      	cbnz	r1, 8011246 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801123a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 801123e:	4798      	blx	r3
 8011240:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8011244:	bd38      	pop	{r3, r4, r5, pc}
 8011246:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 801124a:	e7f8      	b.n	801123e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801124c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801124c:	b510      	push	{r4, lr}
 801124e:	4b0d      	ldr	r3, [pc, #52]	@ (8011284 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011250:	781b      	ldrb	r3, [r3, #0]
 8011252:	4604      	mov	r4, r0
 8011254:	b95b      	cbnz	r3, 801126e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011256:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801125a:	2b02      	cmp	r3, #2
 801125c:	d007      	beq.n	801126e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801125e:	6840      	ldr	r0, [r0, #4]
 8011260:	f000 f92c 	bl	80114bc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011264:	b118      	cbz	r0, 801126e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011266:	6862      	ldr	r2, [r4, #4]
 8011268:	7a53      	ldrb	r3, [r2, #9]
 801126a:	2b00      	cmp	r3, #0
 801126c:	d0fc      	beq.n	8011268 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801126e:	f7f0 f92f 	bl	80014d0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011272:	4620      	mov	r0, r4
 8011274:	2100      	movs	r1, #0
 8011276:	f7ff ffd7 	bl	8011228 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801127a:	4620      	mov	r0, r4
 801127c:	f7ff fd8c 	bl	8010d98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011280:	bd10      	pop	{r4, pc}
 8011282:	bf00      	nop
 8011284:	20013f5e 	.word	0x20013f5e

08011288 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011288:	b570      	push	{r4, r5, r6, lr}
 801128a:	4604      	mov	r4, r0
 801128c:	6803      	ldr	r3, [r0, #0]
 801128e:	b919      	cbnz	r1, 8011298 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011290:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011296:	4718      	bx	r3
 8011298:	2200      	movs	r2, #0
 801129a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 801129e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 80112a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80112a4:	4798      	blx	r3
 80112a6:	6863      	ldr	r3, [r4, #4]
 80112a8:	2101      	movs	r1, #1
 80112aa:	4605      	mov	r5, r0
 80112ac:	7299      	strb	r1, [r3, #10]
 80112ae:	4620      	mov	r0, r4
 80112b0:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 80112b4:	f7ff ffb8 	bl	8011228 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80112b8:	4628      	mov	r0, r5
 80112ba:	bd70      	pop	{r4, r5, r6, pc}

080112bc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80112bc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80112c0:	1a13      	subs	r3, r2, r0
 80112c2:	4258      	negs	r0, r3
 80112c4:	4158      	adcs	r0, r3
 80112c6:	4770      	bx	lr

080112c8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80112c8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80112cc:	1a9b      	subs	r3, r3, r2
 80112ce:	2b00      	cmp	r3, #0
 80112d0:	bfdc      	itt	le
 80112d2:	6882      	ldrle	r2, [r0, #8]
 80112d4:	189b      	addle	r3, r3, r2
 80112d6:	2b01      	cmp	r3, #1
 80112d8:	bfcc      	ite	gt
 80112da:	2000      	movgt	r0, #0
 80112dc:	2001      	movle	r0, #1
 80112de:	4770      	bx	lr

080112e0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80112e0:	6902      	ldr	r2, [r0, #16]
 80112e2:	6843      	ldr	r3, [r0, #4]
 80112e4:	2024      	movs	r0, #36	@ 0x24
 80112e6:	fb00 3002 	mla	r0, r0, r2, r3
 80112ea:	4770      	bx	lr

080112ec <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80112ec:	6803      	ldr	r3, [r0, #0]
 80112ee:	691b      	ldr	r3, [r3, #16]
 80112f0:	4718      	bx	r3

080112f2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80112f2:	b570      	push	{r4, r5, r6, lr}
 80112f4:	2301      	movs	r3, #1
 80112f6:	7203      	strb	r3, [r0, #8]
 80112f8:	4604      	mov	r4, r0
 80112fa:	6840      	ldr	r0, [r0, #4]
 80112fc:	6803      	ldr	r3, [r0, #0]
 80112fe:	699b      	ldr	r3, [r3, #24]
 8011300:	4798      	blx	r3
 8011302:	6803      	ldr	r3, [r0, #0]
 8011304:	2b40      	cmp	r3, #64	@ 0x40
 8011306:	4605      	mov	r5, r0
 8011308:	d00c      	beq.n	8011324 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801130a:	d810      	bhi.n	801132e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801130c:	2b04      	cmp	r3, #4
 801130e:	d01d      	beq.n	801134c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011310:	d804      	bhi.n	801131c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011312:	2b01      	cmp	r3, #1
 8011314:	d006      	beq.n	8011324 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011316:	2b02      	cmp	r3, #2
 8011318:	d02c      	beq.n	8011374 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801131a:	bd70      	pop	{r4, r5, r6, pc}
 801131c:	2b08      	cmp	r3, #8
 801131e:	d01d      	beq.n	801135c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011320:	2b20      	cmp	r3, #32
 8011322:	d1fa      	bne.n	801131a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011324:	6823      	ldr	r3, [r4, #0]
 8011326:	4620      	mov	r0, r4
 8011328:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801132a:	4798      	blx	r3
 801132c:	e013      	b.n	8011356 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801132e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8011332:	d0f7      	beq.n	8011324 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011334:	d804      	bhi.n	8011340 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011336:	2b80      	cmp	r3, #128	@ 0x80
 8011338:	d0f4      	beq.n	8011324 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801133a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801133e:	e7f0      	b.n	8011322 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011340:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011344:	d0ee      	beq.n	8011324 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011346:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 801134a:	e7e5      	b.n	8011318 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801134c:	6823      	ldr	r3, [r4, #0]
 801134e:	7f01      	ldrb	r1, [r0, #28]
 8011350:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011352:	4620      	mov	r0, r4
 8011354:	4798      	blx	r3
 8011356:	6823      	ldr	r3, [r4, #0]
 8011358:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801135a:	e006      	b.n	801136a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801135c:	6823      	ldr	r3, [r4, #0]
 801135e:	7f01      	ldrb	r1, [r0, #28]
 8011360:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011362:	4620      	mov	r0, r4
 8011364:	4798      	blx	r3
 8011366:	6823      	ldr	r3, [r4, #0]
 8011368:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801136a:	4629      	mov	r1, r5
 801136c:	4620      	mov	r0, r4
 801136e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011372:	4718      	bx	r3
 8011374:	6823      	ldr	r3, [r4, #0]
 8011376:	4620      	mov	r0, r4
 8011378:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801137a:	4798      	blx	r3
 801137c:	e7f3      	b.n	8011366 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801137e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801137e:	4770      	bx	lr

08011380 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011380:	4770      	bx	lr

08011382 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011382:	4770      	bx	lr

08011384 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011384:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011388:	1ad2      	subs	r2, r2, r3
 801138a:	2a00      	cmp	r2, #0
 801138c:	b510      	push	{r4, lr}
 801138e:	bfdc      	itt	le
 8011390:	6884      	ldrle	r4, [r0, #8]
 8011392:	1912      	addle	r2, r2, r4
 8011394:	2a01      	cmp	r2, #1
 8011396:	dd16      	ble.n	80113c6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011398:	6842      	ldr	r2, [r0, #4]
 801139a:	2424      	movs	r4, #36	@ 0x24
 801139c:	fb04 2303 	mla	r3, r4, r3, r2
 80113a0:	f101 0220 	add.w	r2, r1, #32
 80113a4:	f851 4b04 	ldr.w	r4, [r1], #4
 80113a8:	f843 4b04 	str.w	r4, [r3], #4
 80113ac:	4291      	cmp	r1, r2
 80113ae:	d1f9      	bne.n	80113a4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80113b0:	780a      	ldrb	r2, [r1, #0]
 80113b2:	701a      	strb	r2, [r3, #0]
 80113b4:	68c3      	ldr	r3, [r0, #12]
 80113b6:	6882      	ldr	r2, [r0, #8]
 80113b8:	f3bf 8f5b 	dmb	ish
 80113bc:	3301      	adds	r3, #1
 80113be:	429a      	cmp	r2, r3
 80113c0:	bfd8      	it	le
 80113c2:	1a9b      	suble	r3, r3, r2
 80113c4:	60c3      	str	r3, [r0, #12]
 80113c6:	bd10      	pop	{r4, pc}

080113c8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80113c8:	6903      	ldr	r3, [r0, #16]
 80113ca:	6882      	ldr	r2, [r0, #8]
 80113cc:	f3bf 8f5b 	dmb	ish
 80113d0:	3301      	adds	r3, #1
 80113d2:	429a      	cmp	r2, r3
 80113d4:	bfd8      	it	le
 80113d6:	1a9b      	suble	r3, r3, r2
 80113d8:	6103      	str	r3, [r0, #16]
 80113da:	4770      	bx	lr

080113dc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80113dc:	b570      	push	{r4, r5, r6, lr}
 80113de:	4604      	mov	r4, r0
 80113e0:	460e      	mov	r6, r1
 80113e2:	6860      	ldr	r0, [r4, #4]
 80113e4:	6803      	ldr	r3, [r0, #0]
 80113e6:	685b      	ldr	r3, [r3, #4]
 80113e8:	4798      	blx	r3
 80113ea:	2800      	cmp	r0, #0
 80113ec:	d1f9      	bne.n	80113e2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80113ee:	4d0d      	ldr	r5, [pc, #52]	@ (8011424 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80113f0:	6828      	ldr	r0, [r5, #0]
 80113f2:	6803      	ldr	r3, [r0, #0]
 80113f4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80113f6:	4798      	blx	r3
 80113f8:	f7f0 f878 	bl	80014ec <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80113fc:	6828      	ldr	r0, [r5, #0]
 80113fe:	2101      	movs	r1, #1
 8011400:	f7ff ff12 	bl	8011228 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011404:	6860      	ldr	r0, [r4, #4]
 8011406:	6803      	ldr	r3, [r0, #0]
 8011408:	4631      	mov	r1, r6
 801140a:	689b      	ldr	r3, [r3, #8]
 801140c:	4798      	blx	r3
 801140e:	6823      	ldr	r3, [r4, #0]
 8011410:	4620      	mov	r0, r4
 8011412:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011414:	4798      	blx	r3
 8011416:	6828      	ldr	r0, [r5, #0]
 8011418:	6803      	ldr	r3, [r0, #0]
 801141a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801141e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8011420:	4718      	bx	r3
 8011422:	bf00      	nop
 8011424:	20013f60 	.word	0x20013f60

08011428 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011428:	b508      	push	{r3, lr}
 801142a:	f7f0 f851 	bl	80014d0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801142e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011432:	f7f0 b855 	b.w	80014e0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011436 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011436:	b510      	push	{r4, lr}
 8011438:	2114      	movs	r1, #20
 801143a:	4604      	mov	r4, r0
 801143c:	f018 fc54 	bl	8029ce8 <_ZdlPvj>
 8011440:	4620      	mov	r0, r4
 8011442:	bd10      	pop	{r4, pc}

08011444 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011444:	b510      	push	{r4, lr}
 8011446:	4604      	mov	r4, r0
 8011448:	6840      	ldr	r0, [r0, #4]
 801144a:	6803      	ldr	r3, [r0, #0]
 801144c:	681b      	ldr	r3, [r3, #0]
 801144e:	4798      	blx	r3
 8011450:	b948      	cbnz	r0, 8011466 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011452:	7a63      	ldrb	r3, [r4, #9]
 8011454:	b13b      	cbz	r3, 8011466 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011456:	7a23      	ldrb	r3, [r4, #8]
 8011458:	b92b      	cbnz	r3, 8011466 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801145a:	6823      	ldr	r3, [r4, #0]
 801145c:	4620      	mov	r0, r4
 801145e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011460:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011464:	4718      	bx	r3
 8011466:	bd10      	pop	{r4, pc}

08011468 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011468:	b570      	push	{r4, r5, r6, lr}
 801146a:	4604      	mov	r4, r0
 801146c:	6840      	ldr	r0, [r0, #4]
 801146e:	6803      	ldr	r3, [r0, #0]
 8011470:	681b      	ldr	r3, [r3, #0]
 8011472:	4798      	blx	r3
 8011474:	4605      	mov	r5, r0
 8011476:	b930      	cbnz	r0, 8011486 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011478:	7a23      	ldrb	r3, [r4, #8]
 801147a:	b123      	cbz	r3, 8011486 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801147c:	6860      	ldr	r0, [r4, #4]
 801147e:	6803      	ldr	r3, [r0, #0]
 8011480:	695b      	ldr	r3, [r3, #20]
 8011482:	4798      	blx	r3
 8011484:	7225      	strb	r5, [r4, #8]
 8011486:	6860      	ldr	r0, [r4, #4]
 8011488:	6803      	ldr	r3, [r0, #0]
 801148a:	681b      	ldr	r3, [r3, #0]
 801148c:	4798      	blx	r3
 801148e:	b928      	cbnz	r0, 801149c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011490:	6823      	ldr	r3, [r4, #0]
 8011492:	4620      	mov	r0, r4
 8011494:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011496:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801149a:	4718      	bx	r3
 801149c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80114a0:	f7f0 b82c 	b.w	80014fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080114a4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80114a4:	b510      	push	{r4, lr}
 80114a6:	4c04      	ldr	r4, [pc, #16]	@ (80114b8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80114a8:	6082      	str	r2, [r0, #8]
 80114aa:	2200      	movs	r2, #0
 80114ac:	e9c0 4100 	strd	r4, r1, [r0]
 80114b0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80114b4:	bd10      	pop	{r4, pc}
 80114b6:	bf00      	nop
 80114b8:	0802de04 	.word	0x0802de04

080114bc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80114bc:	6840      	ldr	r0, [r0, #4]
 80114be:	6803      	ldr	r3, [r0, #0]
 80114c0:	681b      	ldr	r3, [r3, #0]
 80114c2:	4718      	bx	r3
 80114c4:	0000      	movs	r0, r0
	...

080114c8 <_ZN8touchgfxL10applyNoiseEiihhh>:
 80114c8:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 80114cc:	4f20      	ldr	r7, [pc, #128]	@ (8011550 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 80114ce:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80114d2:	fb80 0101 	smull	r0, r1, r0, r1
 80114d6:	fba0 bc07 	umull	fp, ip, r0, r7
 80114da:	fb07 cc01 	mla	ip, r7, r1, ip
 80114de:	fb0b f70c 	mul.w	r7, fp, ip
 80114e2:	fbab 010b 	umull	r0, r1, fp, fp
 80114e6:	461c      	mov	r4, r3
 80114e8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80114ec:	fb00 f30c 	mul.w	r3, r0, ip
 80114f0:	fb0b 3301 	mla	r3, fp, r1, r3
 80114f4:	fba0 010b 	umull	r0, r1, r0, fp
 80114f8:	4616      	mov	r6, r2
 80114fa:	4419      	add	r1, r3
 80114fc:	a312      	add	r3, pc, #72	@ (adr r3, 8011548 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 80114fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011502:	f7ef fb81 	bl	8000c08 <__aeabi_ldivmod>
 8011506:	2ef7      	cmp	r6, #247	@ 0xf7
 8011508:	b290      	uxth	r0, r2
 801150a:	bf9e      	ittt	ls
 801150c:	f002 0207 	andls.w	r2, r2, #7
 8011510:	18b6      	addls	r6, r6, r2
 8011512:	b2f6      	uxtbls	r6, r6
 8011514:	2cfb      	cmp	r4, #251	@ 0xfb
 8011516:	bf9e      	ittt	ls
 8011518:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 801151c:	18e4      	addls	r4, r4, r3
 801151e:	b2e4      	uxtbls	r4, r4
 8011520:	2df7      	cmp	r5, #247	@ 0xf7
 8011522:	bf9c      	itt	ls
 8011524:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 8011528:	182d      	addls	r5, r5, r0
 801152a:	480a      	ldr	r0, [pc, #40]	@ (8011554 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 801152c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8011530:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 8011534:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8011538:	bf98      	it	ls
 801153a:	b2ed      	uxtbls	r5, r5
 801153c:	4304      	orrs	r4, r0
 801153e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 8011542:	b280      	uxth	r0, r0
 8011544:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8011548:	797a8d77 	.word	0x797a8d77
 801154c:	00000000 	.word	0x00000000
 8011550:	00ec4ba7 	.word	0x00ec4ba7
 8011554:	fffff800 	.word	0xfffff800

08011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 8011558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801155c:	ed2d 8b02 	vpush	{d8}
 8011560:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011564:	b087      	sub	sp, #28
 8011566:	7c41      	ldrb	r1, [r0, #17]
 8011568:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 801156c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8011570:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 8011574:	4605      	mov	r5, r0
 8011576:	2900      	cmp	r1, #0
 8011578:	f000 809a 	beq.w	80116b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 801157c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8011580:	ed90 7a08 	vldr	s14, [r0, #32]
 8011584:	68c0      	ldr	r0, [r0, #12]
 8011586:	454a      	cmp	r2, r9
 8011588:	db25      	blt.n	80115d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 801158a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801158e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011592:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8011596:	bfc8      	it	gt
 8011598:	2200      	movgt	r2, #0
 801159a:	5882      	ldr	r2, [r0, r2]
 801159c:	2100      	movs	r1, #0
 801159e:	7c2d      	ldrb	r5, [r5, #16]
 80115a0:	ea4f 2812 	mov.w	r8, r2, lsr #8
 80115a4:	0950      	lsrs	r0, r2, #5
 80115a6:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 80115aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80115ae:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 80115b2:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 80115b6:	2d00      	cmp	r5, #0
 80115b8:	d044      	beq.n	8011644 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 80115ba:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80115be:	d141      	bne.n	8011644 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 80115c0:	bb61      	cbnz	r1, 801161c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 80115c2:	ea4e 0000 	orr.w	r0, lr, r0
 80115c6:	ea4c 0500 	orr.w	r5, ip, r0
 80115ca:	42bc      	cmp	r4, r7
 80115cc:	f080 8217 	bcs.w	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80115d0:	f824 5b02 	strh.w	r5, [r4], #2
 80115d4:	e7f9      	b.n	80115ca <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 80115d6:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 80115da:	454f      	cmp	r7, r9
 80115dc:	dc08      	bgt.n	80115f0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 80115de:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80115e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80115e6:	f640 72fc 	movw	r2, #4092	@ 0xffc
 80115ea:	bfd8      	it	le
 80115ec:	2200      	movle	r2, #0
 80115ee:	e7d4      	b.n	801159a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 80115f0:	eba9 0202 	sub.w	r2, r9, r2
 80115f4:	ee07 2a90 	vmov	s15, r2
 80115f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80115fc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011600:	ee67 7a87 	vmul.f32	s15, s15, s14
 8011604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011608:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801160c:	ee17 2a90 	vmov	r2, s15
 8011610:	bfd8      	it	le
 8011612:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 8011616:	0092      	lsls	r2, r2, #2
 8011618:	5882      	ldr	r2, [r0, r2]
 801161a:	e7c0      	b.n	801159e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 801161c:	b2d5      	uxtb	r5, r2
 801161e:	fa5f f888 	uxtb.w	r8, r8
 8011622:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 8011626:	461e      	mov	r6, r3
 8011628:	42bc      	cmp	r4, r7
 801162a:	f080 81e8 	bcs.w	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801162e:	4630      	mov	r0, r6
 8011630:	9500      	str	r5, [sp, #0]
 8011632:	4643      	mov	r3, r8
 8011634:	4652      	mov	r2, sl
 8011636:	4649      	mov	r1, r9
 8011638:	f7ff ff46 	bl	80114c8 <_ZN8touchgfxL10applyNoiseEiihhh>
 801163c:	3601      	adds	r6, #1
 801163e:	f824 0b02 	strh.w	r0, [r4], #2
 8011642:	e7f1      	b.n	8011628 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 8011644:	0e12      	lsrs	r2, r2, #24
 8011646:	fb02 f20a 	mul.w	r2, r2, sl
 801164a:	1c53      	adds	r3, r2, #1
 801164c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 8011650:	1212      	asrs	r2, r2, #8
 8011652:	fb02 f50c 	mul.w	r5, r2, ip
 8011656:	fb02 f10e 	mul.w	r1, r2, lr
 801165a:	4350      	muls	r0, r2
 801165c:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 8011a10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8011660:	43d2      	mvns	r2, r2
 8011662:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8011666:	26ff      	movs	r6, #255	@ 0xff
 8011668:	42bc      	cmp	r4, r7
 801166a:	f080 81c8 	bcs.w	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801166e:	f8b4 e000 	ldrh.w	lr, [r4]
 8011672:	ea0e 030c 	and.w	r3, lr, ip
 8011676:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 801167a:	fb02 1303 	mla	r3, r2, r3, r1
 801167e:	fb02 0808 	mla	r8, r2, r8, r0
 8011682:	fb93 f3f6 	sdiv	r3, r3, r6
 8011686:	fb98 f8f6 	sdiv	r8, r8, r6
 801168a:	ea03 030c 	and.w	r3, r3, ip
 801168e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011692:	f00e 0e1f 	and.w	lr, lr, #31
 8011696:	ea43 0308 	orr.w	r3, r3, r8
 801169a:	fb02 5e0e 	mla	lr, r2, lr, r5
 801169e:	fb9e fef6 	sdiv	lr, lr, r6
 80116a2:	f00e 0e1f 	and.w	lr, lr, #31
 80116a6:	ea43 030e 	orr.w	r3, r3, lr
 80116aa:	f824 3b02 	strh.w	r3, [r4], #2
 80116ae:	e7db      	b.n	8011668 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 80116b0:	7c82      	ldrb	r2, [r0, #18]
 80116b2:	2a00      	cmp	r2, #0
 80116b4:	d04f      	beq.n	8011756 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 80116b6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80116ba:	ee07 2a90 	vmov	s15, r2
 80116be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80116c2:	ee07 3a10 	vmov	s14, r3
 80116c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80116ca:	461f      	mov	r7, r3
 80116cc:	eef4 6ae7 	vcmpe.f32	s13, s15
 80116d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80116d4:	f200 8095 	bhi.w	8011802 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 80116d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80116dc:	ee37 7a87 	vadd.f32	s14, s15, s14
 80116e0:	f640 71fc 	movw	r1, #4092	@ 0xffc
 80116e4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80116e8:	ee06 6a90 	vmov	s13, r6
 80116ec:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80116f0:	68ea      	ldr	r2, [r5, #12]
 80116f2:	f895 c010 	ldrb.w	ip, [r5, #16]
 80116f6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80116fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80116fe:	bf4a      	itet	mi
 8011700:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 8011704:	9602      	strpl	r6, [sp, #8]
 8011706:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 801170a:	ed95 7a08 	vldr	s14, [r5, #32]
 801170e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011716:	bfc8      	it	gt
 8011718:	2100      	movgt	r1, #0
 801171a:	5852      	ldr	r2, [r2, r1]
 801171c:	9902      	ldr	r1, [sp, #8]
 801171e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 8011722:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011726:	0950      	lsrs	r0, r2, #5
 8011728:	9103      	str	r1, [sp, #12]
 801172a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801172e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011732:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 8011736:	f1bc 0f00 	cmp.w	ip, #0
 801173a:	d024      	beq.n	8011786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 801173c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011740:	d121      	bne.n	8011786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8011742:	ea4b 0b00 	orr.w	fp, fp, r0
 8011746:	ea41 010b 	orr.w	r1, r1, fp
 801174a:	9a03      	ldr	r2, [sp, #12]
 801174c:	4294      	cmp	r4, r2
 801174e:	d255      	bcs.n	80117fc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8011750:	f824 1b02 	strh.w	r1, [r4], #2
 8011754:	e7f9      	b.n	801174a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 8011756:	ee07 9a10 	vmov	s14, r9
 801175a:	edd0 7a06 	vldr	s15, [r0, #24]
 801175e:	edd0 6a05 	vldr	s13, [r0, #20]
 8011762:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011766:	ee37 7a67 	vsub.f32	s14, s14, s15
 801176a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 801176e:	ed90 7a08 	vldr	s14, [r0, #32]
 8011772:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801177a:	bf44      	itt	mi
 801177c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 8011780:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 8011784:	e79d      	b.n	80116c2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 8011786:	0e12      	lsrs	r2, r2, #24
 8011788:	fb02 f20a 	mul.w	r2, r2, sl
 801178c:	f102 0c01 	add.w	ip, r2, #1
 8011790:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 8011794:	1212      	asrs	r2, r2, #8
 8011796:	4350      	muls	r0, r2
 8011798:	4351      	muls	r1, r2
 801179a:	fb02 fb0b 	mul.w	fp, r2, fp
 801179e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 8011a10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 80117a2:	9004      	str	r0, [sp, #16]
 80117a4:	43d2      	mvns	r2, r2
 80117a6:	9105      	str	r1, [sp, #20]
 80117a8:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80117ac:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 80117b0:	9903      	ldr	r1, [sp, #12]
 80117b2:	428c      	cmp	r4, r1
 80117b4:	d222      	bcs.n	80117fc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 80117b6:	8820      	ldrh	r0, [r4, #0]
 80117b8:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 80117bc:	460f      	mov	r7, r1
 80117be:	9904      	ldr	r1, [sp, #16]
 80117c0:	ea00 0c08 	and.w	ip, r0, r8
 80117c4:	fb02 bc0c 	mla	ip, r2, ip, fp
 80117c8:	fb02 1107 	mla	r1, r2, r7, r1
 80117cc:	fb9c fcfe 	sdiv	ip, ip, lr
 80117d0:	fb91 f1fe 	sdiv	r1, r1, lr
 80117d4:	ea0c 0c08 	and.w	ip, ip, r8
 80117d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80117dc:	ea4c 0101 	orr.w	r1, ip, r1
 80117e0:	f000 0c1f 	and.w	ip, r0, #31
 80117e4:	9805      	ldr	r0, [sp, #20]
 80117e6:	fb02 0c0c 	mla	ip, r2, ip, r0
 80117ea:	fb9c fcfe 	sdiv	ip, ip, lr
 80117ee:	f00c 0c1f 	and.w	ip, ip, #31
 80117f2:	ea41 010c 	orr.w	r1, r1, ip
 80117f6:	f824 1b02 	strh.w	r1, [r4], #2
 80117fa:	e7d9      	b.n	80117b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 80117fc:	9a02      	ldr	r2, [sp, #8]
 80117fe:	441a      	add	r2, r3
 8011800:	4617      	mov	r7, r2
 8011802:	441e      	add	r6, r3
 8011804:	b236      	sxth	r6, r6
 8011806:	42be      	cmp	r6, r7
 8011808:	f340 80f9 	ble.w	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801180c:	ed95 7a07 	vldr	s14, [r5, #28]
 8011810:	ee06 7a90 	vmov	s13, r7
 8011814:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011818:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801181c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8011820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011824:	f340 80b5 	ble.w	8011992 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 8011828:	ee06 6a10 	vmov	s12, r6
 801182c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8011830:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 8011a08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 8011834:	7c2b      	ldrb	r3, [r5, #16]
 8011836:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801183a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801183e:	bfd8      	it	le
 8011840:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 8011844:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 8011a0c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 8011848:	bfd8      	it	le
 801184a:	ee17 8a10 	vmovle	r8, s14
 801184e:	ed95 7a08 	vldr	s14, [r5, #32]
 8011852:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011856:	bfc8      	it	gt
 8011858:	46b0      	movgt	r8, r6
 801185a:	ee76 7ae7 	vsub.f32	s15, s13, s15
 801185e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011862:	eba8 0707 	sub.w	r7, r8, r7
 8011866:	bfd8      	it	le
 8011868:	eeb0 8a46 	vmovle.f32	s16, s12
 801186c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8011870:	eea7 8a27 	vfma.f32	s16, s14, s15
 8011874:	b1db      	cbz	r3, 80118ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 8011876:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801187a:	d118      	bne.n	80118ae <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 801187c:	42bc      	cmp	r4, r7
 801187e:	d262      	bcs.n	8011946 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 8011880:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8011884:	68eb      	ldr	r3, [r5, #12]
 8011886:	ee17 0a90 	vmov	r0, s15
 801188a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 801188e:	b2d3      	uxtb	r3, r2
 8011890:	9300      	str	r3, [sp, #0]
 8011892:	4649      	mov	r1, r9
 8011894:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8011898:	f3c2 4207 	ubfx	r2, r2, #16, #8
 801189c:	f7ff fe14 	bl	80114c8 <_ZN8touchgfxL10applyNoiseEiihhh>
 80118a0:	f824 0b02 	strh.w	r0, [r4], #2
 80118a4:	edd5 7a08 	vldr	s15, [r5, #32]
 80118a8:	ee38 8a27 	vadd.f32	s16, s16, s15
 80118ac:	e7e6      	b.n	801187c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 80118ae:	f8df b160 	ldr.w	fp, [pc, #352]	@ 8011a10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 80118b2:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 80118b6:	42bc      	cmp	r4, r7
 80118b8:	d245      	bcs.n	8011946 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 80118ba:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80118be:	68eb      	ldr	r3, [r5, #12]
 80118c0:	f8b4 e000 	ldrh.w	lr, [r4]
 80118c4:	ee17 2a90 	vmov	r2, s15
 80118c8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80118cc:	0e13      	lsrs	r3, r2, #24
 80118ce:	fb03 f30a 	mul.w	r3, r3, sl
 80118d2:	1c58      	adds	r0, r3, #1
 80118d4:	eb00 2023 	add.w	r0, r0, r3, asr #8
 80118d8:	1200      	asrs	r0, r0, #8
 80118da:	ea6f 0c00 	mvn.w	ip, r0
 80118de:	fa5f fc8c 	uxtb.w	ip, ip
 80118e2:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 80118e6:	ea0e 030b 	and.w	r3, lr, fp
 80118ea:	fb0c f303 	mul.w	r3, ip, r3
 80118ee:	b289      	uxth	r1, r1
 80118f0:	fb00 3101 	mla	r1, r0, r1, r3
 80118f4:	fb91 f1f9 	sdiv	r1, r1, r9
 80118f8:	ea01 030b 	and.w	r3, r1, fp
 80118fc:	9302      	str	r3, [sp, #8]
 80118fe:	0953      	lsrs	r3, r2, #5
 8011900:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8011904:	4619      	mov	r1, r3
 8011906:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 801190a:	fb0c f303 	mul.w	r3, ip, r3
 801190e:	fb00 3301 	mla	r3, r0, r1, r3
 8011912:	f00e 0e1f 	and.w	lr, lr, #31
 8011916:	9902      	ldr	r1, [sp, #8]
 8011918:	fb93 f3f9 	sdiv	r3, r3, r9
 801191c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8011920:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8011924:	fb0c fc0e 	mul.w	ip, ip, lr
 8011928:	4319      	orrs	r1, r3
 801192a:	fb00 c002 	mla	r0, r0, r2, ip
 801192e:	fb90 f0f9 	sdiv	r0, r0, r9
 8011932:	f000 001f 	and.w	r0, r0, #31
 8011936:	4301      	orrs	r1, r0
 8011938:	f824 1b02 	strh.w	r1, [r4], #2
 801193c:	edd5 7a08 	vldr	s15, [r5, #32]
 8011940:	ee38 8a27 	vadd.f32	s16, s16, s15
 8011944:	e7b7      	b.n	80118b6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 8011946:	4546      	cmp	r6, r8
 8011948:	dd59      	ble.n	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801194a:	edd5 7a08 	vldr	s15, [r5, #32]
 801194e:	68ea      	ldr	r2, [r5, #12]
 8011950:	7c29      	ldrb	r1, [r5, #16]
 8011952:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801195a:	f640 73fc 	movw	r3, #4092	@ 0xffc
 801195e:	bfd8      	it	le
 8011960:	2300      	movle	r3, #0
 8011962:	eba6 0608 	sub.w	r6, r6, r8
 8011966:	58d2      	ldr	r2, [r2, r3]
 8011968:	0a10      	lsrs	r0, r2, #8
 801196a:	0953      	lsrs	r3, r2, #5
 801196c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 8011970:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8011974:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8011978:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 801197c:	b159      	cbz	r1, 8011996 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 801197e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011982:	d108      	bne.n	8011996 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 8011984:	4318      	orrs	r0, r3
 8011986:	4338      	orrs	r0, r7
 8011988:	42b4      	cmp	r4, r6
 801198a:	d238      	bcs.n	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 801198c:	f824 0b02 	strh.w	r0, [r4], #2
 8011990:	e7fa      	b.n	8011988 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 8011992:	46b8      	mov	r8, r7
 8011994:	e7d9      	b.n	801194a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 8011996:	0e12      	lsrs	r2, r2, #24
 8011998:	fb02 f10a 	mul.w	r1, r2, sl
 801199c:	1c4a      	adds	r2, r1, #1
 801199e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 80119a2:	1212      	asrs	r2, r2, #8
 80119a4:	fb02 f507 	mul.w	r5, r2, r7
 80119a8:	4350      	muls	r0, r2
 80119aa:	4353      	muls	r3, r2
 80119ac:	f8df c060 	ldr.w	ip, [pc, #96]	@ 8011a10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 80119b0:	43d2      	mvns	r2, r2
 80119b2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80119b6:	27ff      	movs	r7, #255	@ 0xff
 80119b8:	42b4      	cmp	r4, r6
 80119ba:	d220      	bcs.n	80119fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 80119bc:	f8b4 e000 	ldrh.w	lr, [r4]
 80119c0:	ea0e 010c 	and.w	r1, lr, ip
 80119c4:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 80119c8:	fb02 0101 	mla	r1, r2, r1, r0
 80119cc:	fb02 3808 	mla	r8, r2, r8, r3
 80119d0:	fb91 f1f7 	sdiv	r1, r1, r7
 80119d4:	fb98 f8f7 	sdiv	r8, r8, r7
 80119d8:	ea01 010c 	and.w	r1, r1, ip
 80119dc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80119e0:	f00e 0e1f 	and.w	lr, lr, #31
 80119e4:	ea41 0108 	orr.w	r1, r1, r8
 80119e8:	fb02 5e0e 	mla	lr, r2, lr, r5
 80119ec:	fb9e fef7 	sdiv	lr, lr, r7
 80119f0:	f00e 0e1f 	and.w	lr, lr, #31
 80119f4:	ea41 010e 	orr.w	r1, r1, lr
 80119f8:	f824 1b02 	strh.w	r1, [r4], #2
 80119fc:	e7dc      	b.n	80119b8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 80119fe:	b007      	add	sp, #28
 8011a00:	ecbd 8b02 	vpop	{d8}
 8011a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a08:	00000000 	.word	0x00000000
 8011a0c:	447ffffe 	.word	0x447ffffe
 8011a10:	fffff800 	.word	0xfffff800

08011a14 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 8011a14:	4770      	bx	lr

08011a16 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 8011a16:	4770      	bx	lr

08011a18 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 8011a18:	b510      	push	{r4, lr}
 8011a1a:	2124      	movs	r1, #36	@ 0x24
 8011a1c:	4604      	mov	r4, r0
 8011a1e:	f018 f963 	bl	8029ce8 <_ZdlPvj>
 8011a22:	4620      	mov	r0, r4
 8011a24:	bd10      	pop	{r4, pc}
	...

08011a28 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011a28:	4b06      	ldr	r3, [pc, #24]	@ (8011a44 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011a2a:	60c1      	str	r1, [r0, #12]
 8011a2c:	094a      	lsrs	r2, r1, #5
 8011a2e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8011a32:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8011a36:	4313      	orrs	r3, r2
 8011a38:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011a3c:	4319      	orrs	r1, r3
 8011a3e:	8201      	strh	r1, [r0, #16]
 8011a40:	4770      	bx	lr
 8011a42:	bf00      	nop
 8011a44:	fffff800 	.word	0xfffff800

08011a48 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011a48:	f1a0 0008 	sub.w	r0, r0, #8
 8011a4c:	e7ec      	b.n	8011a28 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8011a4e:	bf00      	nop

08011a50 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8011a50:	b508      	push	{r3, lr}
 8011a52:	4b05      	ldr	r3, [pc, #20]	@ (8011a68 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011a54:	6818      	ldr	r0, [r3, #0]
 8011a56:	6803      	ldr	r3, [r0, #0]
 8011a58:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8011a5c:	4798      	blx	r3
 8011a5e:	1e43      	subs	r3, r0, #1
 8011a60:	4258      	negs	r0, r3
 8011a62:	4158      	adcs	r0, r3
 8011a64:	bd08      	pop	{r3, pc}
 8011a66:	bf00      	nop
 8011a68:	20013f60 	.word	0x20013f60

08011a6c <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011a6c:	4770      	bx	lr

08011a6e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8011a6e:	3808      	subs	r0, #8
 8011a70:	4770      	bx	lr

08011a72 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8011a72:	b430      	push	{r4, r5}
 8011a74:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011a78:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011a7c:	8a02      	ldrh	r2, [r0, #16]
 8011a7e:	9202      	str	r2, [sp, #8]
 8011a80:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011a84:	68c2      	ldr	r2, [r0, #12]
 8011a86:	4629      	mov	r1, r5
 8011a88:	4620      	mov	r0, r4
 8011a8a:	bc30      	pop	{r4, r5}
 8011a8c:	f7ef befe 	b.w	800188c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08011a90 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8011a90:	f7ef bef0 	b.w	8001874 <_ZN8touchgfx5paint8tearDownEv>

08011a94 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011a94:	b510      	push	{r4, lr}
 8011a96:	2114      	movs	r1, #20
 8011a98:	4604      	mov	r4, r0
 8011a9a:	f018 f925 	bl	8029ce8 <_ZdlPvj>
 8011a9e:	4620      	mov	r0, r4
 8011aa0:	bd10      	pop	{r4, pc}

08011aa2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8011aa2:	f1a0 0008 	sub.w	r0, r0, #8
 8011aa6:	e7f5      	b.n	8011a94 <_ZN8touchgfx13PainterRGB565D0Ev>

08011aa8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 8011aa8:	2300      	movs	r3, #0
 8011aaa:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011aac:	8503      	strh	r3, [r0, #40]	@ 0x28
 8011aae:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8011ab0:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8011ab2:	6980      	ldr	r0, [r0, #24]
 8011ab4:	b110      	cbz	r0, 8011abc <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 8011ab6:	6803      	ldr	r3, [r0, #0]
 8011ab8:	691b      	ldr	r3, [r3, #16]
 8011aba:	4718      	bx	r3
 8011abc:	4770      	bx	lr

08011abe <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 8011abe:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 8011ac2:	4770      	bx	lr

08011ac4 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 8011ac4:	b538      	push	{r3, r4, r5, lr}
 8011ac6:	0e0b      	lsrs	r3, r1, #24
 8011ac8:	7783      	strb	r3, [r0, #30]
 8011aca:	6803      	ldr	r3, [r0, #0]
 8011acc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011ace:	4604      	mov	r4, r0
 8011ad0:	460d      	mov	r5, r1
 8011ad2:	4798      	blx	r3
 8011ad4:	6803      	ldr	r3, [r0, #0]
 8011ad6:	4629      	mov	r1, r5
 8011ad8:	689b      	ldr	r3, [r3, #8]
 8011ada:	4798      	blx	r3
 8011adc:	6823      	ldr	r3, [r4, #0]
 8011ade:	4620      	mov	r0, r4
 8011ae0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011ae2:	4798      	blx	r3
 8011ae4:	61a0      	str	r0, [r4, #24]
 8011ae6:	bd38      	pop	{r3, r4, r5, pc}

08011ae8 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 8011ae8:	7741      	strb	r1, [r0, #29]
 8011aea:	4770      	bx	lr

08011aec <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 8011aec:	b530      	push	{r4, r5, lr}
 8011aee:	460d      	mov	r5, r1
 8011af0:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 8011af4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011af6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011af8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011afa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011afc:	682b      	ldr	r3, [r5, #0]
 8011afe:	6023      	str	r3, [r4, #0]
 8011b00:	bd30      	pop	{r4, r5, pc}

08011b02 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 8011b02:	b538      	push	{r3, r4, r5, lr}
 8011b04:	4604      	mov	r4, r0
 8011b06:	1d03      	adds	r3, r0, #4
 8011b08:	6808      	ldr	r0, [r1, #0]
 8011b0a:	6849      	ldr	r1, [r1, #4]
 8011b0c:	c303      	stmia	r3!, {r0, r1}
 8011b0e:	6813      	ldr	r3, [r2, #0]
 8011b10:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 8011b14:	6853      	ldr	r3, [r2, #4]
 8011b16:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 8011b1a:	2500      	movs	r5, #0
 8011b1c:	61a5      	str	r5, [r4, #24]
 8011b1e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8011b22:	f006 ff6d 	bl	8018a00 <_ZN8touchgfx9Matrix3x35resetEv>
 8011b26:	23ff      	movs	r3, #255	@ 0xff
 8011b28:	7763      	strb	r3, [r4, #29]
 8011b2a:	77a3      	strb	r3, [r4, #30]
 8011b2c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8011b30:	6323      	str	r3, [r4, #48]	@ 0x30
 8011b32:	2301      	movs	r3, #1
 8011b34:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8011b38:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 8011b3c:	bd38      	pop	{r3, r4, r5, pc}
	...

08011b40 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8011b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b44:	ed2d 8b0a 	vpush	{d8-d12}
 8011b48:	ee70 7a41 	vsub.f32	s15, s0, s2
 8011b4c:	b086      	sub	sp, #24
 8011b4e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011b52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b56:	4605      	mov	r5, r0
 8011b58:	eeb0 ba40 	vmov.f32	s22, s0
 8011b5c:	eef0 ba60 	vmov.f32	s23, s1
 8011b60:	eef0 aa41 	vmov.f32	s21, s2
 8011b64:	eeb0 aa61 	vmov.f32	s20, s3
 8011b68:	eeb0 ca42 	vmov.f32	s24, s4
 8011b6c:	eef0 ca62 	vmov.f32	s25, s5
 8011b70:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
 8011b74:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 8011b76:	6802      	ldr	r2, [r0, #0]
 8011b78:	d112      	bne.n	8011ba0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8011b7a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 8011b7e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b86:	d10b      	bne.n	8011ba0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8011b88:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8011b8c:	3901      	subs	r1, #1
 8011b8e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8011b90:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8011b94:	b006      	add	sp, #24
 8011b96:	ecbd 8b0a 	vpop	{d8-d12}
 8011b9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011b9e:	4710      	bx	r2
 8011ba0:	23ff      	movs	r3, #255	@ 0xff
 8011ba2:	77ab      	strb	r3, [r5, #30]
 8011ba4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011ba6:	4628      	mov	r0, r5
 8011ba8:	4798      	blx	r3
 8011baa:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 8011bae:	eef0 0a6b 	vmov.f32	s1, s23
 8011bb2:	eeb0 0a4b 	vmov.f32	s0, s22
 8011bb6:	4604      	mov	r4, r0
 8011bb8:	4640      	mov	r0, r8
 8011bba:	f006 ffd0 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011bbe:	4640      	mov	r0, r8
 8011bc0:	eef0 8a40 	vmov.f32	s17, s0
 8011bc4:	eef0 9a60 	vmov.f32	s19, s1
 8011bc8:	ed8d 0a00 	vstr	s0, [sp]
 8011bcc:	edcd 0a01 	vstr	s1, [sp, #4]
 8011bd0:	eeb0 0a6a 	vmov.f32	s0, s21
 8011bd4:	eef0 0a4a 	vmov.f32	s1, s20
 8011bd8:	f006 ffc1 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011bdc:	eef4 8a40 	vcmp.f32	s17, s0
 8011be0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011be4:	eef4 9a60 	vcmp.f32	s19, s1
 8011be8:	bf0c      	ite	eq
 8011bea:	2301      	moveq	r3, #1
 8011bec:	2300      	movne	r3, #0
 8011bee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011bf2:	eef4 8a40 	vcmp.f32	s17, s0
 8011bf6:	7463      	strb	r3, [r4, #17]
 8011bf8:	bf0c      	ite	eq
 8011bfa:	2301      	moveq	r3, #1
 8011bfc:	2300      	movne	r3, #0
 8011bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c02:	eeb0 8a40 	vmov.f32	s16, s0
 8011c06:	eeb0 9a60 	vmov.f32	s18, s1
 8011c0a:	ed8d 0a02 	vstr	s0, [sp, #8]
 8011c0e:	edcd 0a03 	vstr	s1, [sp, #12]
 8011c12:	74a3      	strb	r3, [r4, #18]
 8011c14:	d024      	beq.n	8011c60 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 8011c16:	eef4 9a60 	vcmp.f32	s19, s1
 8011c1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c1e:	d01f      	beq.n	8011c60 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 8011c20:	ee7a aacb 	vsub.f32	s21, s21, s22
 8011c24:	ee3a aa6b 	vsub.f32	s20, s20, s23
 8011c28:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
 8011c2c:	4640      	mov	r0, r8
 8011c2e:	eeca 7a2c 	vdiv.f32	s15, s20, s25
 8011c32:	eef0 0a6b 	vmov.f32	s1, s23
 8011c36:	eeb0 0a4b 	vmov.f32	s0, s22
 8011c3a:	eea7 0acc 	vfms.f32	s0, s15, s24
 8011c3e:	eeec 0a87 	vfma.f32	s1, s25, s14
 8011c42:	f006 ff8c 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011c46:	ed8d 0a04 	vstr	s0, [sp, #16]
 8011c4a:	ee30 0a68 	vsub.f32	s0, s0, s17
 8011c4e:	edcd 0a05 	vstr	s1, [sp, #20]
 8011c52:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8011c56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c5a:	d120      	bne.n	8011c9e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x15e>
 8011c5c:	2301      	movs	r3, #1
 8011c5e:	74a3      	strb	r3, [r4, #18]
 8011c60:	7c63      	ldrb	r3, [r4, #17]
 8011c62:	2b00      	cmp	r3, #0
 8011c64:	d050      	beq.n	8011d08 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c8>
 8011c66:	ee39 7a69 	vsub.f32	s14, s18, s19
 8011c6a:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 8011d5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 8011c6e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8011c72:	eef4 9ac9 	vcmpe.f32	s19, s18
 8011c76:	edc4 7a08 	vstr	s15, [r4, #32]
 8011c7a:	eefd 7ac9 	vcvt.s32.f32	s15, s18
 8011c7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c82:	ee17 3a90 	vmov	r3, s15
 8011c86:	eefd 7ae9 	vcvt.s32.f32	s15, s19
 8011c8a:	b21a      	sxth	r2, r3
 8011c8c:	ee17 3a90 	vmov	r3, s15
 8011c90:	b21b      	sxth	r3, r3
 8011c92:	bf47      	ittee	mi
 8011c94:	80e3      	strhmi	r3, [r4, #6]
 8011c96:	8122      	strhmi	r2, [r4, #8]
 8011c98:	80e2      	strhpl	r2, [r4, #6]
 8011c9a:	8123      	strhpl	r3, [r4, #8]
 8011c9c:	e02c      	b.n	8011cf8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8011c9e:	ee70 0ae9 	vsub.f32	s1, s1, s19
 8011ca2:	eec0 7a80 	vdiv.f32	s15, s1, s0
 8011ca6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8011caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cae:	edc4 7a05 	vstr	s15, [r4, #20]
 8011cb2:	d102      	bne.n	8011cba <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17a>
 8011cb4:	2301      	movs	r3, #1
 8011cb6:	7463      	strb	r3, [r4, #17]
 8011cb8:	e7d2      	b.n	8011c60 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
 8011cba:	eeb0 7a69 	vmov.f32	s14, s19
 8011cbe:	eea8 7ae7 	vfms.f32	s14, s17, s15
 8011cc2:	ee39 9a69 	vsub.f32	s18, s18, s19
 8011cc6:	ed84 7a06 	vstr	s14, [r4, #24]
 8011cca:	ee89 7a27 	vdiv.f32	s14, s18, s15
 8011cce:	ee38 8a68 	vsub.f32	s16, s16, s17
 8011cd2:	ee38 8a47 	vsub.f32	s16, s16, s14
 8011cd6:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 8011d60 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
 8011cda:	ed84 8a07 	vstr	s16, [r4, #28]
 8011cde:	eec7 7a08 	vdiv.f32	s15, s14, s16
 8011ce2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8011ce6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cea:	edc4 7a08 	vstr	s15, [r4, #32]
 8011cee:	d503      	bpl.n	8011cf8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8011cf0:	eeb1 8a48 	vneg.f32	s16, s16
 8011cf4:	ed84 8a07 	vstr	s16, [r4, #28]
 8011cf8:	60e7      	str	r7, [r4, #12]
 8011cfa:	7426      	strb	r6, [r4, #16]
 8011cfc:	61ac      	str	r4, [r5, #24]
 8011cfe:	b006      	add	sp, #24
 8011d00:	ecbd 8b0a 	vpop	{d8-d12}
 8011d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d08:	7ca3      	ldrb	r3, [r4, #18]
 8011d0a:	2b00      	cmp	r3, #0
 8011d0c:	d0f4      	beq.n	8011cf8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8011d0e:	ee38 7a68 	vsub.f32	s14, s16, s17
 8011d12:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8011d5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x21c>
 8011d16:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8011d1a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8011d1e:	edc4 7a08 	vstr	s15, [r4, #32]
 8011d22:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8011d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d2a:	ee17 3a90 	vmov	r3, s15
 8011d2e:	eefd 7ae8 	vcvt.s32.f32	s15, s17
 8011d32:	b21a      	sxth	r2, r3
 8011d34:	ee17 3a90 	vmov	r3, s15
 8011d38:	b21b      	sxth	r3, r3
 8011d3a:	bf47      	ittee	mi
 8011d3c:	80e3      	strhmi	r3, [r4, #6]
 8011d3e:	8122      	strhmi	r2, [r4, #8]
 8011d40:	80e2      	strhpl	r2, [r4, #6]
 8011d42:	8123      	strhpl	r3, [r4, #8]
 8011d44:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8011d48:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011d4c:	1a9b      	subs	r3, r3, r2
 8011d4e:	ee07 3a90 	vmov	s15, r3
 8011d52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011d56:	edc4 7a07 	vstr	s15, [r4, #28]
 8011d5a:	e7cd      	b.n	8011cf8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1b8>
 8011d5c:	447ffffe 	.word	0x447ffffe
 8011d60:	44800000 	.word	0x44800000

08011d64 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 8011d64:	b510      	push	{r4, lr}
 8011d66:	2100      	movs	r1, #0
 8011d68:	ed2d 8b02 	vpush	{d8}
 8011d6c:	eef0 8a62 	vmov.f32	s17, s5
 8011d70:	4604      	mov	r4, r0
 8011d72:	eeb0 8a42 	vmov.f32	s16, s4
 8011d76:	f017 fd27 	bl	80297c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8011d7a:	eef0 7a68 	vmov.f32	s15, s17
 8011d7e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011d82:	6823      	ldr	r3, [r4, #0]
 8011d84:	ee17 2a90 	vmov	r2, s15
 8011d88:	eef0 7a48 	vmov.f32	s15, s16
 8011d8c:	ecbd 8b02 	vpop	{d8}
 8011d90:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011d94:	4620      	mov	r0, r4
 8011d96:	689b      	ldr	r3, [r3, #8]
 8011d98:	ee17 1a90 	vmov	r1, s15
 8011d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011da0:	4718      	bx	r3

08011da2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 8011da2:	b510      	push	{r4, lr}
 8011da4:	2100      	movs	r1, #0
 8011da6:	ed2d 8b02 	vpush	{d8}
 8011daa:	eef0 8a63 	vmov.f32	s17, s7
 8011dae:	4604      	mov	r4, r0
 8011db0:	eeb0 8a43 	vmov.f32	s16, s6
 8011db4:	f017 fdca 	bl	802994c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8011db8:	eef0 7a68 	vmov.f32	s15, s17
 8011dbc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011dc0:	6823      	ldr	r3, [r4, #0]
 8011dc2:	ee17 2a90 	vmov	r2, s15
 8011dc6:	eef0 7a48 	vmov.f32	s15, s16
 8011dca:	ecbd 8b02 	vpop	{d8}
 8011dce:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011dd2:	4620      	mov	r0, r4
 8011dd4:	689b      	ldr	r3, [r3, #8]
 8011dd6:	ee17 1a90 	vmov	r1, s15
 8011dda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dde:	4718      	bx	r3

08011de0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 8011de0:	b513      	push	{r0, r1, r4, lr}
 8011de2:	4604      	mov	r4, r0
 8011de4:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8011de6:	f006 feba 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011dea:	eef0 7a60 	vmov.f32	s15, s1
 8011dee:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011df2:	4620      	mov	r0, r4
 8011df4:	ee17 2a90 	vmov	r2, s15
 8011df8:	eef0 7a40 	vmov.f32	s15, s0
 8011dfc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011e00:	ee17 1a90 	vmov	r1, s15
 8011e04:	b002      	add	sp, #8
 8011e06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e0a:	f017 bc37 	b.w	802967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

08011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 8011e0e:	b513      	push	{r0, r1, r4, lr}
 8011e10:	4604      	mov	r4, r0
 8011e12:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8011e14:	f006 fea3 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8011e18:	eef0 7a60 	vmov.f32	s15, s1
 8011e1c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011e20:	4620      	mov	r0, r4
 8011e22:	ee17 2a90 	vmov	r2, s15
 8011e26:	eef0 7a40 	vmov.f32	s15, s0
 8011e2a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8011e2e:	ee17 1a90 	vmov	r1, s15
 8011e32:	b002      	add	sp, #8
 8011e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e38:	f017 bc6d 	b.w	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

08011e3c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 8011e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e3e:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 8011e42:	2400      	movs	r4, #0
 8011e44:	9f07      	ldr	r7, [sp, #28]
 8011e46:	4463      	add	r3, ip
 8011e48:	4626      	mov	r6, r4
 8011e4a:	f04f 0e01 	mov.w	lr, #1
 8011e4e:	4563      	cmp	r3, ip
 8011e50:	d02d      	beq.n	8011eae <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 8011e52:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8011e56:	2d06      	cmp	r5, #6
 8011e58:	d8f9      	bhi.n	8011e4e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8011e5a:	fa0e f505 	lsl.w	r5, lr, r5
 8011e5e:	f015 0f66 	tst.w	r5, #102	@ 0x66
 8011e62:	d10d      	bne.n	8011e80 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 8011e64:	f015 0f10 	tst.w	r5, #16
 8011e68:	d117      	bne.n	8011e9a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 8011e6a:	072d      	lsls	r5, r5, #28
 8011e6c:	d5ef      	bpl.n	8011e4e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8011e6e:	3801      	subs	r0, #1
 8011e70:	b91e      	cbnz	r6, 8011e7a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 8011e72:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 8011e76:	682d      	ldr	r5, [r5, #0]
 8011e78:	600d      	str	r5, [r1, #0]
 8011e7a:	b96c      	cbnz	r4, 8011e98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8011e7c:	2601      	movs	r6, #1
 8011e7e:	e7e6      	b.n	8011e4e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8011e80:	b926      	cbnz	r6, 8011e8c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 8011e82:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 8011e86:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8011e8a:	600b      	str	r3, [r1, #0]
 8011e8c:	b924      	cbnz	r4, 8011e98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8011e8e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 8011e92:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8011e96:	6013      	str	r3, [r2, #0]
 8011e98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e9a:	3801      	subs	r0, #1
 8011e9c:	b91c      	cbnz	r4, 8011ea6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 8011e9e:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 8011ea2:	6824      	ldr	r4, [r4, #0]
 8011ea4:	6014      	str	r4, [r2, #0]
 8011ea6:	2e00      	cmp	r6, #0
 8011ea8:	d1f6      	bne.n	8011e98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8011eaa:	2401      	movs	r4, #1
 8011eac:	e7cf      	b.n	8011e4e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8011eae:	b90e      	cbnz	r6, 8011eb4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 8011eb0:	2300      	movs	r3, #0
 8011eb2:	600b      	str	r3, [r1, #0]
 8011eb4:	2c00      	cmp	r4, #0
 8011eb6:	d1ef      	bne.n	8011e98 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8011eb8:	2300      	movs	r3, #0
 8011eba:	e7ec      	b.n	8011e96 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

08011ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 8011ebc:	b538      	push	{r3, r4, r5, lr}
 8011ebe:	4604      	mov	r4, r0
 8011ec0:	ed2d 8b0a 	vpush	{d8-d12}
 8011ec4:	460d      	mov	r5, r1
 8011ec6:	eef0 ba40 	vmov.f32	s23, s0
 8011eca:	eeb0 ca60 	vmov.f32	s24, s1
 8011ece:	eef0 aa41 	vmov.f32	s21, s2
 8011ed2:	eeb0 ba61 	vmov.f32	s22, s3
 8011ed6:	eeb0 9a42 	vmov.f32	s18, s4
 8011eda:	eef0 9a62 	vmov.f32	s19, s5
 8011ede:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 8011ee2:	ee7b 8a29 	vadd.f32	s17, s22, s19
 8011ee6:	ee3a 8a89 	vadd.f32	s16, s21, s18
 8011eea:	ee68 8a8a 	vmul.f32	s17, s17, s20
 8011eee:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8011ef2:	ee3c 0a68 	vsub.f32	s0, s24, s17
 8011ef6:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 8011efa:	ee20 0a00 	vmul.f32	s0, s0, s0
 8011efe:	eea7 0aa7 	vfma.f32	s0, s15, s15
 8011f02:	f017 ff47 	bl	8029d94 <sqrtf>
 8011f06:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8011f0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f0e:	d12e      	bne.n	8011f6e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 8011f10:	ee79 7a6a 	vsub.f32	s15, s18, s21
 8011f14:	ee39 7acb 	vsub.f32	s14, s19, s22
 8011f18:	eeb0 8a6a 	vmov.f32	s16, s21
 8011f1c:	eef0 8a4b 	vmov.f32	s17, s22
 8011f20:	eea7 8a8a 	vfma.f32	s16, s15, s20
 8011f24:	eee7 8a0a 	vfma.f32	s17, s14, s20
 8011f28:	eea7 8a0a 	vfma.f32	s16, s14, s20
 8011f2c:	eee7 8aca 	vfms.f32	s17, s15, s20
 8011f30:	2d02      	cmp	r5, #2
 8011f32:	dc2f      	bgt.n	8011f94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 8011f34:	3501      	adds	r5, #1
 8011f36:	eef0 1a4b 	vmov.f32	s3, s22
 8011f3a:	eeb0 1a6a 	vmov.f32	s2, s21
 8011f3e:	4629      	mov	r1, r5
 8011f40:	eef0 2a68 	vmov.f32	s5, s17
 8011f44:	eeb0 2a48 	vmov.f32	s4, s16
 8011f48:	eef0 0a4c 	vmov.f32	s1, s24
 8011f4c:	eeb0 0a6b 	vmov.f32	s0, s23
 8011f50:	4620      	mov	r0, r4
 8011f52:	f7ff ffb3 	bl	8011ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 8011f56:	eef0 0a68 	vmov.f32	s1, s17
 8011f5a:	eeb0 0a48 	vmov.f32	s0, s16
 8011f5e:	4620      	mov	r0, r4
 8011f60:	f7ff ff55 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011f64:	eeb0 ba68 	vmov.f32	s22, s17
 8011f68:	eef0 aa48 	vmov.f32	s21, s16
 8011f6c:	e7b9      	b.n	8011ee2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 8011f6e:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 8011f72:	ee38 8a6b 	vsub.f32	s16, s16, s23
 8011f76:	ee78 8acc 	vsub.f32	s17, s17, s24
 8011f7a:	ee28 7a27 	vmul.f32	s14, s16, s15
 8011f7e:	ee68 7aa7 	vmul.f32	s15, s17, s15
 8011f82:	ee87 8a00 	vdiv.f32	s16, s14, s0
 8011f86:	eec7 8a80 	vdiv.f32	s17, s15, s0
 8011f8a:	ee3b 8a88 	vadd.f32	s16, s23, s16
 8011f8e:	ee7c 8a28 	vadd.f32	s17, s24, s17
 8011f92:	e7cd      	b.n	8011f30 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 8011f94:	eef0 0a68 	vmov.f32	s1, s17
 8011f98:	eeb0 0a48 	vmov.f32	s0, s16
 8011f9c:	4620      	mov	r0, r4
 8011f9e:	f7ff ff36 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011fa2:	ecbd 8b0a 	vpop	{d8-d12}
 8011fa6:	bd38      	pop	{r3, r4, r5, pc}

08011fa8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 8011fa8:	b510      	push	{r4, lr}
 8011faa:	ed2d 8b0a 	vpush	{d8-d12}
 8011fae:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 8011fb2:	2b02      	cmp	r3, #2
 8011fb4:	4604      	mov	r4, r0
 8011fb6:	eeb0 ca40 	vmov.f32	s24, s0
 8011fba:	eeb0 9a60 	vmov.f32	s18, s1
 8011fbe:	eef0 9a41 	vmov.f32	s19, s2
 8011fc2:	eef0 8a61 	vmov.f32	s17, s3
 8011fc6:	eeb0 ba42 	vmov.f32	s22, s4
 8011fca:	eef0 ba62 	vmov.f32	s23, s5
 8011fce:	eeb0 aa43 	vmov.f32	s20, s6
 8011fd2:	eef0 aa63 	vmov.f32	s21, s7
 8011fd6:	eeb0 8a44 	vmov.f32	s16, s8
 8011fda:	eef0 ca64 	vmov.f32	s25, s9
 8011fde:	d12c      	bne.n	801203a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 8011fe0:	eef0 0a62 	vmov.f32	s1, s5
 8011fe4:	eeb0 0a42 	vmov.f32	s0, s4
 8011fe8:	f7ff ff11 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8011fec:	ee79 9acb 	vsub.f32	s19, s19, s22
 8011ff0:	ee7a caec 	vsub.f32	s25, s21, s25
 8011ff4:	ee78 8aeb 	vsub.f32	s17, s17, s23
 8011ff8:	ee3a 8a48 	vsub.f32	s16, s20, s16
 8011ffc:	ee69 9aac 	vmul.f32	s19, s19, s25
 8012000:	ee28 8a88 	vmul.f32	s16, s17, s16
 8012004:	eef4 9ac8 	vcmpe.f32	s19, s16
 8012008:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801200c:	db0f      	blt.n	801202e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 801200e:	2101      	movs	r1, #1
 8012010:	eef0 2a6a 	vmov.f32	s5, s21
 8012014:	eeb0 2a4a 	vmov.f32	s4, s20
 8012018:	eef0 1a6b 	vmov.f32	s3, s23
 801201c:	eeb0 1a4b 	vmov.f32	s2, s22
 8012020:	eef0 0a49 	vmov.f32	s1, s18
 8012024:	eeb0 0a4c 	vmov.f32	s0, s24
 8012028:	4620      	mov	r0, r4
 801202a:	f7ff ff47 	bl	8011ebc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 801202e:	eef0 0a6a 	vmov.f32	s1, s21
 8012032:	eeb0 0a4a 	vmov.f32	s0, s20
 8012036:	4620      	mov	r0, r4
 8012038:	e035      	b.n	80120a6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 801203a:	2b01      	cmp	r3, #1
 801203c:	d138      	bne.n	80120b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 801203e:	ee31 4ae2 	vsub.f32	s8, s3, s5
 8012042:	ee33 6a48 	vsub.f32	s12, s6, s16
 8012046:	ee71 7a42 	vsub.f32	s15, s2, s4
 801204a:	ee73 6ae4 	vsub.f32	s13, s7, s9
 801204e:	ee26 7a44 	vnmul.f32	s14, s12, s8
 8012052:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8012056:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801205a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801205e:	d027      	beq.n	80120b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8012060:	ee28 8a63 	vnmul.f32	s16, s16, s7
 8012064:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 8012068:	eea4 8a83 	vfma.f32	s16, s9, s6
 801206c:	eee1 8a22 	vfma.f32	s17, s2, s5
 8012070:	ee68 7a67 	vnmul.f32	s15, s16, s15
 8012074:	ee28 8a44 	vnmul.f32	s16, s16, s8
 8012078:	eee6 7a28 	vfma.f32	s15, s12, s17
 801207c:	eea6 8aa8 	vfma.f32	s16, s13, s17
 8012080:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8012084:	eec8 0a07 	vdiv.f32	s1, s16, s14
 8012088:	ee3c ca40 	vsub.f32	s24, s24, s0
 801208c:	ee39 9a60 	vsub.f32	s18, s18, s1
 8012090:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 8012094:	ee29 9a09 	vmul.f32	s18, s18, s18
 8012098:	eeac 9a0c 	vfma.f32	s18, s24, s24
 801209c:	eef4 7ac9 	vcmpe.f32	s15, s18
 80120a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120a4:	db04      	blt.n	80120b0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 80120a6:	f7ff feb2 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80120aa:	ecbd 8b0a 	vpop	{d8-d12}
 80120ae:	bd10      	pop	{r4, pc}
 80120b0:	eef0 0a6b 	vmov.f32	s1, s23
 80120b4:	eeb0 0a4b 	vmov.f32	s0, s22
 80120b8:	4620      	mov	r0, r4
 80120ba:	f7ff fea8 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80120be:	e7b6      	b.n	801202e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

080120c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 80120c0:	b510      	push	{r4, lr}
 80120c2:	ed2d 8b0c 	vpush	{d8-d13}
 80120c6:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 80120ca:	4604      	mov	r4, r0
 80120cc:	eeb0 9a40 	vmov.f32	s18, s0
 80120d0:	eef0 9a60 	vmov.f32	s19, s1
 80120d4:	eef0 aa41 	vmov.f32	s21, s2
 80120d8:	eeb0 ba61 	vmov.f32	s22, s3
 80120dc:	b933      	cbnz	r3, 80120ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 80120de:	f7ff fe96 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80120e2:	eef0 0a4b 	vmov.f32	s1, s22
 80120e6:	eeb0 0a6a 	vmov.f32	s0, s21
 80120ea:	e015      	b.n	8012118 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 80120ec:	ee71 8a40 	vsub.f32	s17, s2, s0
 80120f0:	ee31 8ae0 	vsub.f32	s16, s3, s1
 80120f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80120f8:	2b02      	cmp	r3, #2
 80120fa:	ee68 8aa7 	vmul.f32	s17, s17, s15
 80120fe:	ee28 8a27 	vmul.f32	s16, s16, s15
 8012102:	d10f      	bne.n	8012124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 8012104:	ee70 0ae8 	vsub.f32	s1, s1, s17
 8012108:	ee30 0a08 	vadd.f32	s0, s0, s16
 801210c:	f7ff fe7f 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012110:	ee7b 0a68 	vsub.f32	s1, s22, s17
 8012114:	ee3a 0a88 	vadd.f32	s0, s21, s16
 8012118:	4620      	mov	r0, r4
 801211a:	f7ff fe78 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801211e:	ecbd 8b0c 	vpop	{d8-d13}
 8012122:	bd10      	pop	{r4, pc}
 8012124:	f7ff fe73 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012128:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8012260 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 801212c:	eddf ba4d 	vldr	s23, [pc, #308]	@ 8012264 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 8012130:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 8012268 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 8012134:	eddf ca4d 	vldr	s25, [pc, #308]	@ 801226c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 8012138:	ed9f da4d 	vldr	s26, [pc, #308]	@ 8012270 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 801213c:	eef0 0a69 	vmov.f32	s1, s19
 8012140:	eeb0 0a49 	vmov.f32	s0, s18
 8012144:	eee8 0a27 	vfma.f32	s1, s16, s15
 8012148:	4620      	mov	r0, r4
 801214a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 801214e:	eeb1 aa68 	vneg.f32	s20, s17
 8012152:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8012156:	eea8 0a2b 	vfma.f32	s0, s16, s23
 801215a:	f7ff fe58 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801215e:	eddf 7a45 	vldr	s15, [pc, #276]	@ 8012274 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 8012162:	eef0 0a69 	vmov.f32	s1, s19
 8012166:	eeb0 0a49 	vmov.f32	s0, s18
 801216a:	eee8 0a27 	vfma.f32	s1, s16, s15
 801216e:	4620      	mov	r0, r4
 8012170:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012174:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8012178:	eea8 0a0c 	vfma.f32	s0, s16, s24
 801217c:	f7ff fe47 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012180:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8012278 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 8012184:	eef0 0a69 	vmov.f32	s1, s19
 8012188:	eeb0 0a49 	vmov.f32	s0, s18
 801218c:	eee8 0a27 	vfma.f32	s1, s16, s15
 8012190:	4620      	mov	r0, r4
 8012192:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012196:	eeea 0a2c 	vfma.f32	s1, s20, s25
 801219a:	eea8 0a2c 	vfma.f32	s0, s16, s25
 801219e:	f7ff fe36 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80121a2:	eddf 7a36 	vldr	s15, [pc, #216]	@ 801227c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 80121a6:	eef0 0a69 	vmov.f32	s1, s19
 80121aa:	eeb0 0a49 	vmov.f32	s0, s18
 80121ae:	eee8 0a27 	vfma.f32	s1, s16, s15
 80121b2:	4620      	mov	r0, r4
 80121b4:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80121b8:	eeea 0a0d 	vfma.f32	s1, s20, s26
 80121bc:	eea8 0a0d 	vfma.f32	s0, s16, s26
 80121c0:	f7ff fe25 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80121c4:	ee79 0a88 	vadd.f32	s1, s19, s16
 80121c8:	ee39 0a28 	vadd.f32	s0, s18, s17
 80121cc:	ee70 0ae8 	vsub.f32	s1, s1, s17
 80121d0:	ee30 0a08 	vadd.f32	s0, s0, s16
 80121d4:	4620      	mov	r0, r4
 80121d6:	f7ff fe1a 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80121da:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8012280 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 80121de:	eef0 0a69 	vmov.f32	s1, s19
 80121e2:	eeb0 0a49 	vmov.f32	s0, s18
 80121e6:	eee8 0a27 	vfma.f32	s1, s16, s15
 80121ea:	4620      	mov	r0, r4
 80121ec:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80121f0:	eeea 0a0d 	vfma.f32	s1, s20, s26
 80121f4:	eea8 0a0d 	vfma.f32	s0, s16, s26
 80121f8:	f7ff fe09 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80121fc:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8012284 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 8012200:	eef0 0a69 	vmov.f32	s1, s19
 8012204:	eeb0 0a49 	vmov.f32	s0, s18
 8012208:	eee8 0a27 	vfma.f32	s1, s16, s15
 801220c:	4620      	mov	r0, r4
 801220e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012212:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8012216:	eea8 0a2c 	vfma.f32	s0, s16, s25
 801221a:	f7ff fdf8 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801221e:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8012288 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 8012222:	eef0 0a69 	vmov.f32	s1, s19
 8012226:	eeb0 0a49 	vmov.f32	s0, s18
 801222a:	eee8 0a27 	vfma.f32	s1, s16, s15
 801222e:	4620      	mov	r0, r4
 8012230:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012234:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8012238:	eea8 0a0c 	vfma.f32	s0, s16, s24
 801223c:	f7ff fde7 	bl	8011e0e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012240:	eddf 7a12 	vldr	s15, [pc, #72]	@ 801228c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 8012244:	eef0 0a69 	vmov.f32	s1, s19
 8012248:	eeb0 0a49 	vmov.f32	s0, s18
 801224c:	eee8 0a27 	vfma.f32	s1, s16, s15
 8012250:	4620      	mov	r0, r4
 8012252:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012256:	eeea 0a2b 	vfma.f32	s1, s20, s23
 801225a:	eea8 0a2b 	vfma.f32	s0, s16, s23
 801225e:	e73e      	b.n	80120de <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 8012260:	3d23d70a 	.word	0x3d23d70a
 8012264:	3e8f5c29 	.word	0x3e8f5c29
 8012268:	3f19999a 	.word	0x3f19999a
 801226c:	3f4ccccd 	.word	0x3f4ccccd
 8012270:	3f75c28f 	.word	0x3f75c28f
 8012274:	3e4ccccd 	.word	0x3e4ccccd
 8012278:	3ecccccd 	.word	0x3ecccccd
 801227c:	3f3851ec 	.word	0x3f3851ec
 8012280:	3fa3d70a 	.word	0x3fa3d70a
 8012284:	3fcccccd 	.word	0x3fcccccd
 8012288:	3fe66666 	.word	0x3fe66666
 801228c:	3ffae148 	.word	0x3ffae148

08012290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 8012290:	b570      	push	{r4, r5, r6, lr}
 8012292:	ed2d 8b06 	vpush	{d8-d10}
 8012296:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 801229a:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 801229e:	ee30 8ac8 	vsub.f32	s16, s1, s16
 80122a2:	ee30 9a49 	vsub.f32	s18, s0, s18
 80122a6:	eef0 aa40 	vmov.f32	s21, s0
 80122aa:	ee28 0a08 	vmul.f32	s0, s16, s16
 80122ae:	4604      	mov	r4, r0
 80122b0:	eea9 0a09 	vfma.f32	s0, s18, s18
 80122b4:	eeb0 aa60 	vmov.f32	s20, s1
 80122b8:	f017 fd6c 	bl	8029d94 <sqrtf>
 80122bc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80122c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80122c4:	dd36      	ble.n	8012334 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 80122c6:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 80122ca:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 80122ce:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 80122d2:	eec0 6a27 	vdiv.f32	s13, s0, s15
 80122d6:	2600      	movs	r6, #0
 80122d8:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 80122dc:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 80122e0:	eec8 8a26 	vdiv.f32	s17, s16, s13
 80122e4:	ee89 8a26 	vdiv.f32	s16, s18, s13
 80122e8:	ee70 9a28 	vadd.f32	s19, s0, s17
 80122ec:	ee30 9ac8 	vsub.f32	s18, s1, s16
 80122f0:	ee78 8aaa 	vadd.f32	s17, s17, s21
 80122f4:	ee3a 8a48 	vsub.f32	s16, s20, s16
 80122f8:	b1fd      	cbz	r5, 801233a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 80122fa:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 80122fe:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 8012302:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 8012306:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 801230a:	eef0 0a49 	vmov.f32	s1, s18
 801230e:	eeb0 0a69 	vmov.f32	s0, s19
 8012312:	4620      	mov	r0, r4
 8012314:	f7ff fd64 	bl	8011de0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8012318:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 801231c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 8012320:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 8012324:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 8012328:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 801232c:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 8012330:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 8012334:	ecbd 8b06 	vpop	{d8-d10}
 8012338:	bd70      	pop	{r4, r5, r6, pc}
 801233a:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 801233e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8012342:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8012346:	b16b      	cbz	r3, 8012364 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 8012348:	eef0 1a49 	vmov.f32	s3, s18
 801234c:	eeb0 1a69 	vmov.f32	s2, s19
 8012350:	eef0 0a62 	vmov.f32	s1, s5
 8012354:	eeb0 0a42 	vmov.f32	s0, s4
 8012358:	4620      	mov	r0, r4
 801235a:	f7ff feb1 	bl	80120c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 801235e:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 8012362:	e7db      	b.n	801231c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 8012364:	eef0 4a48 	vmov.f32	s9, s16
 8012368:	eeb0 4a68 	vmov.f32	s8, s17
 801236c:	eef0 3a49 	vmov.f32	s7, s18
 8012370:	eeb0 3a69 	vmov.f32	s6, s19
 8012374:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8012378:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 801237c:	4620      	mov	r0, r4
 801237e:	f7ff fe13 	bl	8011fa8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8012382:	e7cb      	b.n	801231c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

08012384 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 8012384:	ee07 2a90 	vmov	s15, r2
 8012388:	ee07 1a10 	vmov	s14, r1
 801238c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8012390:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8012394:	eddf 7a03 	vldr	s15, [pc, #12]	@ 80123a4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 8012398:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801239c:	ee20 0a27 	vmul.f32	s0, s0, s15
 80123a0:	f7ff bf76 	b.w	8012290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80123a4:	3d000000 	.word	0x3d000000

080123a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 80123a8:	b538      	push	{r3, r4, r5, lr}
 80123aa:	ed2d 8b02 	vpush	{d8}
 80123ae:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 80123b2:	4604      	mov	r4, r0
 80123b4:	b31d      	cbz	r5, 80123fe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 80123b6:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 80123ba:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 80123be:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 80123c2:	ee78 8a67 	vsub.f32	s17, s16, s15
 80123c6:	ee38 8a27 	vadd.f32	s16, s16, s15
 80123ca:	eef0 0a68 	vmov.f32	s1, s17
 80123ce:	f7ff fd07 	bl	8011de0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 80123d2:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 80123d6:	eef0 1a48 	vmov.f32	s3, s16
 80123da:	eeb0 0a41 	vmov.f32	s0, s2
 80123de:	eef0 0a68 	vmov.f32	s1, s17
 80123e2:	4620      	mov	r0, r4
 80123e4:	f7ff fe6c 	bl	80120c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 80123e8:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 80123ec:	eef0 1a68 	vmov.f32	s3, s17
 80123f0:	eef0 0a48 	vmov.f32	s1, s16
 80123f4:	eeb0 0a41 	vmov.f32	s0, s2
 80123f8:	4620      	mov	r0, r4
 80123fa:	f7ff fe61 	bl	80120c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 80123fe:	ecbd 8b02 	vpop	{d8}
 8012402:	4628      	mov	r0, r5
 8012404:	bd38      	pop	{r3, r4, r5, pc}

08012406 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 8012406:	b510      	push	{r4, lr}
 8012408:	ed2d 8b02 	vpush	{d8}
 801240c:	4604      	mov	r4, r0
 801240e:	eeb0 8a40 	vmov.f32	s16, s0
 8012412:	eef0 8a60 	vmov.f32	s17, s1
 8012416:	f7ff ffc7 	bl	80123a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801241a:	b9d0      	cbnz	r0, 8012452 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 801241c:	4620      	mov	r0, r4
 801241e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 8012422:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 8012426:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 801242a:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 801242e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8012432:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8012436:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 801243a:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 801243e:	eef0 0a68 	vmov.f32	s1, s17
 8012442:	eeb0 0a48 	vmov.f32	s0, s16
 8012446:	f7ff fdaf 	bl	8011fa8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 801244a:	2001      	movs	r0, #1
 801244c:	ecbd 8b02 	vpop	{d8}
 8012450:	bd10      	pop	{r4, pc}
 8012452:	2000      	movs	r0, #0
 8012454:	e7fa      	b.n	801244c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

08012456 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 8012456:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 801245a:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 801245e:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 8012462:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 8012466:	f7ff be2b 	b.w	80120c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0801246c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 801246c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012470:	b089      	sub	sp, #36	@ 0x24
 8012472:	461c      	mov	r4, r3
 8012474:	f10d 0820 	add.w	r8, sp, #32
 8012478:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 801247c:	9304      	str	r3, [sp, #16]
 801247e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8012480:	9105      	str	r1, [sp, #20]
 8012482:	2300      	movs	r3, #0
 8012484:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 8012488:	9306      	str	r3, [sp, #24]
 801248a:	f848 3d04 	str.w	r3, [r8, #-4]!
 801248e:	9b04      	ldr	r3, [sp, #16]
 8012490:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 8012494:	4682      	mov	sl, r0
 8012496:	4615      	mov	r5, r2
 8012498:	9b05      	ldr	r3, [sp, #20]
 801249a:	429d      	cmp	r5, r3
 801249c:	d96d      	bls.n	801257a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 801249e:	3d01      	subs	r5, #1
 80124a0:	f819 3005 	ldrb.w	r3, [r9, r5]
 80124a4:	2b06      	cmp	r3, #6
 80124a6:	d8f7      	bhi.n	8012498 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 80124a8:	a201      	add	r2, pc, #4	@ (adr r2, 80124b0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 80124aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80124ae:	bf00      	nop
 80124b0:	080124cf 	.word	0x080124cf
 80124b4:	08012499 	.word	0x08012499
 80124b8:	080124cd 	.word	0x080124cd
 80124bc:	080124f1 	.word	0x080124f1
 80124c0:	080124f1 	.word	0x080124f1
 80124c4:	080124f5 	.word	0x080124f5
 80124c8:	08012535 	.word	0x08012535
 80124cc:	3c02      	subs	r4, #2
 80124ce:	4650      	mov	r0, sl
 80124d0:	e9cd 9701 	strd	r9, r7, [sp, #4]
 80124d4:	9400      	str	r4, [sp, #0]
 80124d6:	462b      	mov	r3, r5
 80124d8:	4642      	mov	r2, r8
 80124da:	a906      	add	r1, sp, #24
 80124dc:	f7ff fcae 	bl	8011e3c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 80124e0:	eddd 0a07 	vldr	s1, [sp, #28]
 80124e4:	ed9d 0a06 	vldr	s0, [sp, #24]
 80124e8:	4630      	mov	r0, r6
 80124ea:	f7ff fed1 	bl	8012290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80124ee:	e7d3      	b.n	8012498 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 80124f0:	3c01      	subs	r4, #1
 80124f2:	e7ec      	b.n	80124ce <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 80124f4:	f1a4 0b04 	sub.w	fp, r4, #4
 80124f8:	3c02      	subs	r4, #2
 80124fa:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 80124fe:	4650      	mov	r0, sl
 8012500:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8012504:	f8cd b000 	str.w	fp, [sp]
 8012508:	462b      	mov	r3, r5
 801250a:	4642      	mov	r2, r8
 801250c:	a906      	add	r1, sp, #24
 801250e:	f7ff fc95 	bl	8011e3c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8012512:	eddd 2a07 	vldr	s5, [sp, #28]
 8012516:	ed9d 2a06 	vldr	s4, [sp, #24]
 801251a:	ed54 1a01 	vldr	s3, [r4, #-4]
 801251e:	ed14 1a02 	vldr	s2, [r4, #-8]
 8012522:	edd4 0a01 	vldr	s1, [r4, #4]
 8012526:	ed94 0a00 	vldr	s0, [r4]
 801252a:	4630      	mov	r0, r6
 801252c:	f7ff fc1a 	bl	8011d64 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8012530:	465c      	mov	r4, fp
 8012532:	e7b1      	b.n	8012498 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8012534:	f1a4 0b06 	sub.w	fp, r4, #6
 8012538:	3c02      	subs	r4, #2
 801253a:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 801253e:	4650      	mov	r0, sl
 8012540:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8012544:	f8cd b000 	str.w	fp, [sp]
 8012548:	462b      	mov	r3, r5
 801254a:	4642      	mov	r2, r8
 801254c:	a906      	add	r1, sp, #24
 801254e:	f7ff fc75 	bl	8011e3c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8012552:	eddd 3a07 	vldr	s7, [sp, #28]
 8012556:	ed9d 3a06 	vldr	s6, [sp, #24]
 801255a:	ed54 2a03 	vldr	s5, [r4, #-12]
 801255e:	ed14 2a04 	vldr	s4, [r4, #-16]
 8012562:	ed54 1a01 	vldr	s3, [r4, #-4]
 8012566:	ed14 1a02 	vldr	s2, [r4, #-8]
 801256a:	edd4 0a01 	vldr	s1, [r4, #4]
 801256e:	ed94 0a00 	vldr	s0, [r4]
 8012572:	4630      	mov	r0, r6
 8012574:	f7ff fc15 	bl	8011da2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8012578:	e7da      	b.n	8012530 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 801257a:	9b04      	ldr	r3, [sp, #16]
 801257c:	b113      	cbz	r3, 8012584 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 801257e:	4630      	mov	r0, r6
 8012580:	f7ff ff69 	bl	8012456 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 8012584:	b009      	add	sp, #36	@ 0x24
 8012586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801258a:	bf00      	nop

0801258c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 801258c:	eef0 7a60 	vmov.f32	s15, s1
 8012590:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8012594:	6803      	ldr	r3, [r0, #0]
 8012596:	ee17 2a90 	vmov	r2, s15
 801259a:	eef0 7a40 	vmov.f32	s15, s0
 801259e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80125a2:	689b      	ldr	r3, [r3, #8]
 80125a4:	ee17 1a90 	vmov	r1, s15
 80125a8:	4718      	bx	r3
	...

080125ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 80125ac:	b510      	push	{r4, lr}
 80125ae:	4b04      	ldr	r3, [pc, #16]	@ (80125c0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 80125b0:	4604      	mov	r4, r0
 80125b2:	f840 3b14 	str.w	r3, [r0], #20
 80125b6:	f002 faeb 	bl	8014b90 <_ZN8touchgfx7OutlineD1Ev>
 80125ba:	4620      	mov	r0, r4
 80125bc:	bd10      	pop	{r4, pc}
 80125be:	bf00      	nop
 80125c0:	0802e7e0 	.word	0x0802e7e0

080125c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 80125c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125c8:	ed2d 8b04 	vpush	{d8-d9}
 80125cc:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 80125d0:	b0b5      	sub	sp, #212	@ 0xd4
 80125d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80125d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125da:	4605      	mov	r5, r0
 80125dc:	468b      	mov	fp, r1
 80125de:	9206      	str	r2, [sp, #24]
 80125e0:	461e      	mov	r6, r3
 80125e2:	f04f 0400 	mov.w	r4, #0
 80125e6:	f240 814e 	bls.w	8012886 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 80125ea:	23ff      	movs	r3, #255	@ 0xff
 80125ec:	9300      	str	r3, [sp, #0]
 80125ee:	1d02      	adds	r2, r0, #4
 80125f0:	6981      	ldr	r1, [r0, #24]
 80125f2:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 80125f4:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 801288c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 80125f8:	a808      	add	r0, sp, #32
 80125fa:	f016 fef3 	bl	80293e4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 80125fe:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 8012602:	4ba3      	ldr	r3, [pc, #652]	@ (8012890 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 8012604:	edd5 6a08 	vldr	s13, [r5, #32]
 8012608:	9308      	str	r3, [sp, #32]
 801260a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801260e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012612:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012616:	bf48      	it	mi
 8012618:	eef1 7a67 	vnegmi.f32	s15, s15
 801261c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012620:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8012624:	2201      	movs	r2, #1
 8012626:	9325      	str	r3, [sp, #148]	@ 0x94
 8012628:	2300      	movs	r3, #0
 801262a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 801262e:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 8012632:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8012636:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 801263a:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 801263e:	7f6a      	ldrb	r2, [r5, #29]
 8012640:	7fab      	ldrb	r3, [r5, #30]
 8012642:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8012646:	435a      	muls	r2, r3
 8012648:	ee27 7a26 	vmul.f32	s14, s14, s13
 801264c:	1c53      	adds	r3, r2, #1
 801264e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8012652:	ee67 7a27 	vmul.f32	s15, s14, s15
 8012656:	f04f 0800 	mov.w	r8, #0
 801265a:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 801265e:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 8012662:	942a      	str	r4, [sp, #168]	@ 0xa8
 8012664:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8012668:	942b      	str	r4, [sp, #172]	@ 0xac
 801266a:	942c      	str	r4, [sp, #176]	@ 0xb0
 801266c:	942d      	str	r4, [sp, #180]	@ 0xb4
 801266e:	942e      	str	r4, [sp, #184]	@ 0xb8
 8012670:	942f      	str	r4, [sp, #188]	@ 0xbc
 8012672:	9430      	str	r4, [sp, #192]	@ 0xc0
 8012674:	9431      	str	r4, [sp, #196]	@ 0xc4
 8012676:	9432      	str	r4, [sp, #200]	@ 0xc8
 8012678:	9433      	str	r4, [sp, #204]	@ 0xcc
 801267a:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 801267e:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 8012682:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 8012686:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 801268a:	eef0 9a49 	vmov.f32	s19, s18
 801268e:	eeb0 8a49 	vmov.f32	s16, s18
 8012692:	eef0 8a49 	vmov.f32	s17, s18
 8012696:	4644      	mov	r4, r8
 8012698:	46c1      	mov	r9, r8
 801269a:	af08      	add	r7, sp, #32
 801269c:	f04f 0a01 	mov.w	sl, #1
 80126a0:	9b06      	ldr	r3, [sp, #24]
 80126a2:	454b      	cmp	r3, r9
 80126a4:	f000 80cc 	beq.w	8012840 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 80126a8:	f109 0301 	add.w	r3, r9, #1
 80126ac:	9305      	str	r3, [sp, #20]
 80126ae:	f81b 3009 	ldrb.w	r3, [fp, r9]
 80126b2:	2b06      	cmp	r3, #6
 80126b4:	d839      	bhi.n	801272a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80126b6:	e8df f003 	tbb	[pc, r3]
 80126ba:	3b04      	.short	0x3b04
 80126bc:	817c6f60 	.word	0x817c6f60
 80126c0:	a0          	.byte	0xa0
 80126c1:	00          	.byte	0x00
 80126c2:	45c1      	cmp	r9, r8
 80126c4:	d92b      	bls.n	801271e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 80126c6:	eef0 0a49 	vmov.f32	s1, s18
 80126ca:	eeb0 0a69 	vmov.f32	s0, s19
 80126ce:	4638      	mov	r0, r7
 80126d0:	f7ff fdde 	bl	8012290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80126d4:	4638      	mov	r0, r7
 80126d6:	f7ff fe67 	bl	80123a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 80126da:	4681      	mov	r9, r0
 80126dc:	b9f8      	cbnz	r0, 801271e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 80126de:	eef0 0a49 	vmov.f32	s1, s18
 80126e2:	eeb0 0a69 	vmov.f32	s0, s19
 80126e6:	4638      	mov	r0, r7
 80126e8:	f7ff fe8d 	bl	8012406 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 80126ec:	4628      	mov	r0, r5
 80126ee:	e9cd 9702 	strd	r9, r7, [sp, #8]
 80126f2:	e9cd b600 	strd	fp, r6, [sp]
 80126f6:	4623      	mov	r3, r4
 80126f8:	9a05      	ldr	r2, [sp, #20]
 80126fa:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 80126fe:	4641      	mov	r1, r8
 8012700:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 8012704:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8012708:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 801270c:	f7ff feae 	bl	801246c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8012710:	eef0 0a49 	vmov.f32	s1, s18
 8012714:	eeb0 0a69 	vmov.f32	s0, s19
 8012718:	4638      	mov	r0, r7
 801271a:	f7ff fe74 	bl	8012406 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 801271e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8012722:	eeb0 8a49 	vmov.f32	s16, s18
 8012726:	eef0 8a69 	vmov.f32	s17, s19
 801272a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 801272e:	e7b7      	b.n	80126a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 8012730:	45c1      	cmp	r9, r8
 8012732:	d90d      	bls.n	8012750 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8012734:	4638      	mov	r0, r7
 8012736:	f7ff fe37 	bl	80123a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801273a:	b948      	cbnz	r0, 8012750 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 801273c:	e9cd a702 	strd	sl, r7, [sp, #8]
 8012740:	e9cd b600 	strd	fp, r6, [sp]
 8012744:	4623      	mov	r3, r4
 8012746:	464a      	mov	r2, r9
 8012748:	4641      	mov	r1, r8
 801274a:	4628      	mov	r0, r5
 801274c:	f7ff fe8e 	bl	801246c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8012750:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8012754:	edd3 8a00 	vldr	s17, [r3]
 8012758:	ed93 8a01 	vldr	s16, [r3, #4]
 801275c:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 8012760:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 8012764:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8012768:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 801276c:	3402      	adds	r4, #2
 801276e:	46c8      	mov	r8, r9
 8012770:	eeb0 9a48 	vmov.f32	s18, s16
 8012774:	eef0 9a68 	vmov.f32	s19, s17
 8012778:	e7d7      	b.n	801272a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 801277a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 801277e:	edd3 8a00 	vldr	s17, [r3]
 8012782:	ed93 8a01 	vldr	s16, [r3, #4]
 8012786:	eeb0 0a68 	vmov.f32	s0, s17
 801278a:	eef0 0a48 	vmov.f32	s1, s16
 801278e:	4638      	mov	r0, r7
 8012790:	f7ff fd7e 	bl	8012290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8012794:	3402      	adds	r4, #2
 8012796:	e7c8      	b.n	801272a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012798:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 801279c:	edd3 8a00 	vldr	s17, [r3]
 80127a0:	eef0 0a48 	vmov.f32	s1, s16
 80127a4:	eeb0 0a68 	vmov.f32	s0, s17
 80127a8:	4638      	mov	r0, r7
 80127aa:	f7ff fd71 	bl	8012290 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 80127ae:	3401      	adds	r4, #1
 80127b0:	e7bb      	b.n	801272a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80127b2:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80127b6:	ed93 8a00 	vldr	s16, [r3]
 80127ba:	e7f1      	b.n	80127a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 80127bc:	00a3      	lsls	r3, r4, #2
 80127be:	f103 0208 	add.w	r2, r3, #8
 80127c2:	f103 090c 	add.w	r9, r3, #12
 80127c6:	4432      	add	r2, r6
 80127c8:	4433      	add	r3, r6
 80127ca:	44b1      	add	r9, r6
 80127cc:	ed92 2a00 	vldr	s4, [r2]
 80127d0:	edd9 2a00 	vldr	s5, [r9]
 80127d4:	edd3 1a01 	vldr	s3, [r3, #4]
 80127d8:	ed93 1a00 	vldr	s2, [r3]
 80127dc:	9207      	str	r2, [sp, #28]
 80127de:	eef0 0a48 	vmov.f32	s1, s16
 80127e2:	eeb0 0a68 	vmov.f32	s0, s17
 80127e6:	4638      	mov	r0, r7
 80127e8:	f7ff fabc 	bl	8011d64 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 80127ec:	9a07      	ldr	r2, [sp, #28]
 80127ee:	ed99 8a00 	vldr	s16, [r9]
 80127f2:	edd2 8a00 	vldr	s17, [r2]
 80127f6:	3404      	adds	r4, #4
 80127f8:	e797      	b.n	801272a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 80127fa:	00a3      	lsls	r3, r4, #2
 80127fc:	f103 0210 	add.w	r2, r3, #16
 8012800:	f103 0914 	add.w	r9, r3, #20
 8012804:	4432      	add	r2, r6
 8012806:	4433      	add	r3, r6
 8012808:	44b1      	add	r9, r6
 801280a:	ed92 3a00 	vldr	s6, [r2]
 801280e:	edd9 3a00 	vldr	s7, [r9]
 8012812:	edd3 2a03 	vldr	s5, [r3, #12]
 8012816:	ed93 2a02 	vldr	s4, [r3, #8]
 801281a:	edd3 1a01 	vldr	s3, [r3, #4]
 801281e:	ed93 1a00 	vldr	s2, [r3]
 8012822:	9207      	str	r2, [sp, #28]
 8012824:	eef0 0a48 	vmov.f32	s1, s16
 8012828:	eeb0 0a68 	vmov.f32	s0, s17
 801282c:	4638      	mov	r0, r7
 801282e:	f7ff fab8 	bl	8011da2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8012832:	9a07      	ldr	r2, [sp, #28]
 8012834:	ed99 8a00 	vldr	s16, [r9]
 8012838:	edd2 8a00 	vldr	s17, [r2]
 801283c:	3406      	adds	r4, #6
 801283e:	e774      	b.n	801272a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012840:	9b06      	ldr	r3, [sp, #24]
 8012842:	4543      	cmp	r3, r8
 8012844:	af08      	add	r7, sp, #32
 8012846:	d90f      	bls.n	8012868 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 8012848:	4638      	mov	r0, r7
 801284a:	f7ff fdad 	bl	80123a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 801284e:	b958      	cbnz	r0, 8012868 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 8012850:	2301      	movs	r3, #1
 8012852:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8012856:	9703      	str	r7, [sp, #12]
 8012858:	f8cd b000 	str.w	fp, [sp]
 801285c:	4623      	mov	r3, r4
 801285e:	9a06      	ldr	r2, [sp, #24]
 8012860:	4641      	mov	r1, r8
 8012862:	4628      	mov	r0, r5
 8012864:	f7ff fe02 	bl	801246c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8012868:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 801286c:	4638      	mov	r0, r7
 801286e:	f016 fe4d 	bl	802950c <_ZN8touchgfx6Canvas6renderEh>
 8012872:	4604      	mov	r4, r0
 8012874:	4638      	mov	r0, r7
 8012876:	f7ff fe99 	bl	80125ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 801287a:	4620      	mov	r0, r4
 801287c:	b035      	add	sp, #212	@ 0xd4
 801287e:	ecbd 8b04 	vpop	{d8-d9}
 8012882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012886:	2401      	movs	r4, #1
 8012888:	e7f7      	b.n	801287a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 801288a:	bf00      	nop
 801288c:	00000000 	.word	0x00000000
 8012890:	0802de80 	.word	0x0802de80

08012894 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 8012894:	b510      	push	{r4, lr}
 8012896:	4604      	mov	r4, r0
 8012898:	f7ff fe88 	bl	80125ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 801289c:	4620      	mov	r0, r4
 801289e:	21b0      	movs	r1, #176	@ 0xb0
 80128a0:	f017 fa22 	bl	8029ce8 <_ZdlPvj>
 80128a4:	4620      	mov	r0, r4
 80128a6:	bd10      	pop	{r4, pc}

080128a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 80128a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80128ac:	ed2d 8b06 	vpush	{d8-d10}
 80128b0:	b0aa      	sub	sp, #168	@ 0xa8
 80128b2:	4698      	mov	r8, r3
 80128b4:	23ff      	movs	r3, #255	@ 0xff
 80128b6:	4607      	mov	r7, r0
 80128b8:	9300      	str	r3, [sp, #0]
 80128ba:	4689      	mov	r9, r1
 80128bc:	4692      	mov	sl, r2
 80128be:	6981      	ldr	r1, [r0, #24]
 80128c0:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 80128c2:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 8012acc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 80128c6:	1d02      	adds	r2, r0, #4
 80128c8:	a80d      	add	r0, sp, #52	@ 0x34
 80128ca:	f016 fd8b 	bl	80293e4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 80128ce:	7f3b      	ldrb	r3, [r7, #28]
 80128d0:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 8012acc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 80128d4:	1e5a      	subs	r2, r3, #1
 80128d6:	4253      	negs	r3, r2
 80128d8:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 80128dc:	4153      	adcs	r3, r2
 80128de:	eeb0 0a60 	vmov.f32	s0, s1
 80128e2:	4628      	mov	r0, r5
 80128e4:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 80128e8:	f006 f939 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80128ec:	44ca      	add	sl, r9
 80128ee:	eeb0 9a40 	vmov.f32	s18, s0
 80128f2:	eef0 9a60 	vmov.f32	s19, s1
 80128f6:	eef0 8a48 	vmov.f32	s17, s16
 80128fa:	2400      	movs	r4, #0
 80128fc:	45ca      	cmp	sl, r9
 80128fe:	f000 80cd 	beq.w	8012a9c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 8012902:	f819 3b01 	ldrb.w	r3, [r9], #1
 8012906:	2b06      	cmp	r3, #6
 8012908:	d8f8      	bhi.n	80128fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801290a:	e8df f003 	tbb	[pc, r3]
 801290e:	0804      	.short	0x0804
 8012910:	58533f2a 	.word	0x58533f2a
 8012914:	8a          	.byte	0x8a
 8012915:	00          	.byte	0x00
 8012916:	a80d      	add	r0, sp, #52	@ 0x34
 8012918:	f016 fdd6 	bl	80294c8 <_ZN8touchgfx6Canvas5closeEv>
 801291c:	e7ee      	b.n	80128fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801291e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8012922:	edd3 8a00 	vldr	s17, [r3]
 8012926:	ed93 8a01 	vldr	s16, [r3, #4]
 801292a:	eeb0 0a68 	vmov.f32	s0, s17
 801292e:	eef0 0a48 	vmov.f32	s1, s16
 8012932:	4628      	mov	r0, r5
 8012934:	f006 f913 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012938:	eef0 7a60 	vmov.f32	s15, s1
 801293c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8012940:	a80d      	add	r0, sp, #52	@ 0x34
 8012942:	ee17 2a90 	vmov	r2, s15
 8012946:	eef0 7a40 	vmov.f32	s15, s0
 801294a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801294e:	eeb0 9a40 	vmov.f32	s18, s0
 8012952:	ee17 1a90 	vmov	r1, s15
 8012956:	eef0 9a60 	vmov.f32	s19, s1
 801295a:	f016 fe8f 	bl	802967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801295e:	3402      	adds	r4, #2
 8012960:	e7cc      	b.n	80128fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8012962:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8012966:	edd3 8a00 	vldr	s17, [r3]
 801296a:	ed93 8a01 	vldr	s16, [r3, #4]
 801296e:	eeb0 0a68 	vmov.f32	s0, s17
 8012972:	eef0 0a48 	vmov.f32	s1, s16
 8012976:	4628      	mov	r0, r5
 8012978:	f006 f8f1 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801297c:	a80d      	add	r0, sp, #52	@ 0x34
 801297e:	eeb0 9a40 	vmov.f32	s18, s0
 8012982:	eef0 9a60 	vmov.f32	s19, s1
 8012986:	f7ff fe01 	bl	801258c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 801298a:	e7e8      	b.n	801295e <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 801298c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8012990:	edd3 8a00 	vldr	s17, [r3]
 8012994:	eef0 0a48 	vmov.f32	s1, s16
 8012998:	eeb0 0a68 	vmov.f32	s0, s17
 801299c:	4628      	mov	r0, r5
 801299e:	f006 f8de 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80129a2:	a80d      	add	r0, sp, #52	@ 0x34
 80129a4:	eeb0 9a40 	vmov.f32	s18, s0
 80129a8:	eef0 9a60 	vmov.f32	s19, s1
 80129ac:	3401      	adds	r4, #1
 80129ae:	f7ff fded 	bl	801258c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80129b2:	e7a3      	b.n	80128fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80129b4:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80129b8:	ed93 8a00 	vldr	s16, [r3]
 80129bc:	e7ea      	b.n	8012994 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 80129be:	1ca3      	adds	r3, r4, #2
 80129c0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 80129c4:	ed53 0a01 	vldr	s1, [r3, #-4]
 80129c8:	ed13 0a02 	vldr	s0, [r3, #-8]
 80129cc:	edd3 8a00 	vldr	s17, [r3]
 80129d0:	ed93 8a01 	vldr	s16, [r3, #4]
 80129d4:	4628      	mov	r0, r5
 80129d6:	f006 f8c2 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80129da:	4628      	mov	r0, r5
 80129dc:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80129e0:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 80129e4:	eeb0 0a68 	vmov.f32	s0, s17
 80129e8:	eef0 0a48 	vmov.f32	s1, s16
 80129ec:	f006 f8b7 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80129f0:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 80129f4:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 80129f8:	eef0 2a60 	vmov.f32	s5, s1
 80129fc:	eeb0 2a40 	vmov.f32	s4, s0
 8012a00:	eeb0 aa40 	vmov.f32	s20, s0
 8012a04:	eef0 aa60 	vmov.f32	s21, s1
 8012a08:	eeb0 0a49 	vmov.f32	s0, s18
 8012a0c:	eef0 0a69 	vmov.f32	s1, s19
 8012a10:	a80d      	add	r0, sp, #52	@ 0x34
 8012a12:	f7ff f9a7 	bl	8011d64 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8012a16:	3404      	adds	r4, #4
 8012a18:	eef0 9a6a 	vmov.f32	s19, s21
 8012a1c:	eeb0 9a4a 	vmov.f32	s18, s20
 8012a20:	e76c      	b.n	80128fc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8012a22:	1d26      	adds	r6, r4, #4
 8012a24:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8012a28:	ed56 0a03 	vldr	s1, [r6, #-12]
 8012a2c:	ed16 0a04 	vldr	s0, [r6, #-16]
 8012a30:	edd6 8a00 	vldr	s17, [r6]
 8012a34:	ed96 8a01 	vldr	s16, [r6, #4]
 8012a38:	4628      	mov	r0, r5
 8012a3a:	f006 f890 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012a3e:	4628      	mov	r0, r5
 8012a40:	ed8d 0a07 	vstr	s0, [sp, #28]
 8012a44:	edcd 0a08 	vstr	s1, [sp, #32]
 8012a48:	ed16 0a02 	vldr	s0, [r6, #-8]
 8012a4c:	ed56 0a01 	vldr	s1, [r6, #-4]
 8012a50:	f006 f885 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012a54:	4628      	mov	r0, r5
 8012a56:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8012a5a:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 8012a5e:	eeb0 0a68 	vmov.f32	s0, s17
 8012a62:	eef0 0a48 	vmov.f32	s1, s16
 8012a66:	f006 f87a 	bl	8018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012a6a:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 8012a6e:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 8012a72:	eddd 1a08 	vldr	s3, [sp, #32]
 8012a76:	ed9d 1a07 	vldr	s2, [sp, #28]
 8012a7a:	eef0 3a60 	vmov.f32	s7, s1
 8012a7e:	eeb0 3a40 	vmov.f32	s6, s0
 8012a82:	eeb0 aa40 	vmov.f32	s20, s0
 8012a86:	eef0 aa60 	vmov.f32	s21, s1
 8012a8a:	eeb0 0a49 	vmov.f32	s0, s18
 8012a8e:	eef0 0a69 	vmov.f32	s1, s19
 8012a92:	a80d      	add	r0, sp, #52	@ 0x34
 8012a94:	f7ff f985 	bl	8011da2 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8012a98:	3406      	adds	r4, #6
 8012a9a:	e7bd      	b.n	8012a18 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 8012a9c:	7f7b      	ldrb	r3, [r7, #29]
 8012a9e:	7fb9      	ldrb	r1, [r7, #30]
 8012aa0:	4359      	muls	r1, r3
 8012aa2:	1c4b      	adds	r3, r1, #1
 8012aa4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8012aa8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8012aac:	a80d      	add	r0, sp, #52	@ 0x34
 8012aae:	f016 fd2d 	bl	802950c <_ZN8touchgfx6Canvas6renderEh>
 8012ab2:	4b07      	ldr	r3, [pc, #28]	@ (8012ad0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 8012ab4:	930d      	str	r3, [sp, #52]	@ 0x34
 8012ab6:	4604      	mov	r4, r0
 8012ab8:	a812      	add	r0, sp, #72	@ 0x48
 8012aba:	f002 f869 	bl	8014b90 <_ZN8touchgfx7OutlineD1Ev>
 8012abe:	4620      	mov	r0, r4
 8012ac0:	b02a      	add	sp, #168	@ 0xa8
 8012ac2:	ecbd 8b06 	vpop	{d8-d10}
 8012ac6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012aca:	bf00      	nop
 8012acc:	00000000 	.word	0x00000000
 8012ad0:	0802e7e0 	.word	0x0802e7e0

08012ad4 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 8012ad4:	b410      	push	{r4}
 8012ad6:	7f04      	ldrb	r4, [r0, #28]
 8012ad8:	b11c      	cbz	r4, 8012ae2 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 8012ada:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012ade:	f7ff bee3 	b.w	80128a8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 8012ae2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012ae6:	f7ff bd6d 	b.w	80125c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

08012aea <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 8012aea:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8012aee:	4691      	mov	r9, r2
 8012af0:	4602      	mov	r2, r0
 8012af2:	4606      	mov	r6, r0
 8012af4:	f852 0f26 	ldr.w	r0, [r2, #38]!
 8012af8:	4688      	mov	r8, r1
 8012afa:	6851      	ldr	r1, [r2, #4]
 8012afc:	469a      	mov	sl, r3
 8012afe:	ab02      	add	r3, sp, #8
 8012b00:	c303      	stmia	r3!, {r0, r1}
 8012b02:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012b06:	2b00      	cmp	r3, #0
 8012b08:	af02      	add	r7, sp, #8
 8012b0a:	dd2f      	ble.n	8012b6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8012b0c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 8012b10:	2c00      	cmp	r4, #0
 8012b12:	dd2b      	ble.n	8012b6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8012b14:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012b18:	441c      	add	r4, r3
 8012b1a:	b2a4      	uxth	r4, r4
 8012b1c:	b225      	sxth	r5, r4
 8012b1e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012b22:	42ab      	cmp	r3, r5
 8012b24:	da22      	bge.n	8012b6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
 8012b26:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012b28:	9300      	str	r3, [sp, #0]
 8012b2a:	9701      	str	r7, [sp, #4]
 8012b2c:	4653      	mov	r3, sl
 8012b2e:	464a      	mov	r2, r9
 8012b30:	4641      	mov	r1, r8
 8012b32:	4630      	mov	r0, r6
 8012b34:	f7ff ffce 	bl	8012ad4 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8012b38:	b940      	cbnz	r0, 8012b4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 8012b3a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012b3e:	2b01      	cmp	r3, #1
 8012b40:	d004      	beq.n	8012b4c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
 8012b42:	3301      	adds	r3, #1
 8012b44:	105b      	asrs	r3, r3, #1
 8012b46:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012b4a:	e7ec      	b.n	8012b26 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
 8012b4c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012b50:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012b54:	4413      	add	r3, r2
 8012b56:	b29b      	uxth	r3, r3
 8012b58:	441a      	add	r2, r3
 8012b5a:	b212      	sxth	r2, r2
 8012b5c:	4295      	cmp	r5, r2
 8012b5e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012b62:	dadc      	bge.n	8012b1e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8012b64:	1ae3      	subs	r3, r4, r3
 8012b66:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012b6a:	e7d8      	b.n	8012b1e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
 8012b6c:	b004      	add	sp, #16
 8012b6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08012b72 <_ZN8touchgfx6CircleD1Ev>:
 8012b72:	4770      	bx	lr

08012b74 <_ZN8touchgfx6CircleD0Ev>:
 8012b74:	b510      	push	{r4, lr}
 8012b76:	2148      	movs	r1, #72	@ 0x48
 8012b78:	4604      	mov	r4, r0
 8012b7a:	f017 f8b5 	bl	8029ce8 <_ZdlPvj>
 8012b7e:	4620      	mov	r0, r4
 8012b80:	bd10      	pop	{r4, pc}

08012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8012b82:	b507      	push	{r0, r1, r2, lr}
 8012b84:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8012b88:	ab01      	add	r3, sp, #4
 8012b8a:	6809      	ldr	r1, [r1, #0]
 8012b8c:	6800      	ldr	r0, [r0, #0]
 8012b8e:	f006 f8ff 	bl	8018d90 <_ZN8touchgfx6muldivElllRl>
 8012b92:	b003      	add	sp, #12
 8012b94:	f85d fb04 	ldr.w	pc, [sp], #4

08012b98 <_ZN8touchgfx7CWRUtil4sineEi>:
 8012b98:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8012b9c:	fb90 f2f3 	sdiv	r2, r0, r3
 8012ba0:	fb02 0013 	mls	r0, r2, r3, r0
 8012ba4:	2800      	cmp	r0, #0
 8012ba6:	bfb8      	it	lt
 8012ba8:	18c0      	addlt	r0, r0, r3
 8012baa:	285a      	cmp	r0, #90	@ 0x5a
 8012bac:	4b09      	ldr	r3, [pc, #36]	@ (8012bd4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012bae:	dc02      	bgt.n	8012bb6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012bb0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012bb4:	4770      	bx	lr
 8012bb6:	28b4      	cmp	r0, #180	@ 0xb4
 8012bb8:	dc02      	bgt.n	8012bc0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8012bba:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 8012bbe:	e7f7      	b.n	8012bb0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012bc0:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 8012bc4:	bfd4      	ite	le
 8012bc6:	38b4      	suble	r0, #180	@ 0xb4
 8012bc8:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 8012bcc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012bd0:	4240      	negs	r0, r0
 8012bd2:	4770      	bx	lr
 8012bd4:	0802ded8 	.word	0x0802ded8

08012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8012bd8:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8012bdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012bde:	fb90 f2f3 	sdiv	r2, r0, r3
 8012be2:	fb02 0013 	mls	r0, r2, r3, r0
 8012be6:	2800      	cmp	r0, #0
 8012be8:	bfb8      	it	lt
 8012bea:	18c0      	addlt	r0, r0, r3
 8012bec:	1144      	asrs	r4, r0, #5
 8012bee:	f000 061f 	and.w	r6, r0, #31
 8012bf2:	4620      	mov	r0, r4
 8012bf4:	f7ff ffd0 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 8012bf8:	4605      	mov	r5, r0
 8012bfa:	b90e      	cbnz	r6, 8012c00 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012bfc:	b002      	add	sp, #8
 8012bfe:	bd70      	pop	{r4, r5, r6, pc}
 8012c00:	1c60      	adds	r0, r4, #1
 8012c02:	f7ff ffc9 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 8012c06:	ab01      	add	r3, sp, #4
 8012c08:	2220      	movs	r2, #32
 8012c0a:	4631      	mov	r1, r6
 8012c0c:	1b40      	subs	r0, r0, r5
 8012c0e:	f006 f8bf 	bl	8018d90 <_ZN8touchgfx6muldivElllRl>
 8012c12:	4428      	add	r0, r5
 8012c14:	e7f2      	b.n	8012bfc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8012c16:	b508      	push	{r3, lr}
 8012c18:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 8012c1c:	f7ff ffdc 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012c20:	bd08      	pop	{r3, pc}
	...

08012c24 <_ZN8touchgfx6CircleC1Ev>:
 8012c24:	b510      	push	{r4, lr}
 8012c26:	4604      	mov	r4, r0
 8012c28:	f000 fd0a 	bl	8013640 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012c2c:	4b08      	ldr	r3, [pc, #32]	@ (8012c50 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8012c2e:	6023      	str	r3, [r4, #0]
 8012c30:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 8012c34:	2300      	movs	r3, #0
 8012c36:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 8012c3a:	f24b 4205 	movw	r2, #46085	@ 0xb405
 8012c3e:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 8012c42:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 8012c46:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 8012c4a:	60a3      	str	r3, [r4, #8]
 8012c4c:	4620      	mov	r0, r4
 8012c4e:	bd10      	pop	{r4, pc}
 8012c50:	0802df98 	.word	0x0802df98

08012c54 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8012c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c58:	428a      	cmp	r2, r1
 8012c5a:	4680      	mov	r8, r0
 8012c5c:	4610      	mov	r0, r2
 8012c5e:	4699      	mov	r9, r3
 8012c60:	bfa6      	itte	ge
 8012c62:	460a      	movge	r2, r1
 8012c64:	4603      	movge	r3, r0
 8012c66:	460b      	movlt	r3, r1
 8012c68:	1a99      	subs	r1, r3, r2
 8012c6a:	b085      	sub	sp, #20
 8012c6c:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 8012c70:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 8012c74:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8012c76:	bfa4      	itt	ge
 8012c78:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 8012c7c:	2200      	movge	r2, #0
 8012c7e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 8012c82:	9300      	str	r3, [sp, #0]
 8012c84:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 8012c88:	f102 0b01 	add.w	fp, r2, #1
 8012c8c:	2c00      	cmp	r4, #0
 8012c8e:	f040 80af 	bne.w	8012df0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8012c92:	4610      	mov	r0, r2
 8012c94:	9201      	str	r2, [sp, #4]
 8012c96:	f7ff ff9f 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012c9a:	a903      	add	r1, sp, #12
 8012c9c:	9003      	str	r0, [sp, #12]
 8012c9e:	4650      	mov	r0, sl
 8012ca0:	f7ff ff6f 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012ca4:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8012ca8:	9a01      	ldr	r2, [sp, #4]
 8012caa:	4408      	add	r0, r1
 8012cac:	f8d9 1000 	ldr.w	r1, [r9]
 8012cb0:	4281      	cmp	r1, r0
 8012cb2:	bfc8      	it	gt
 8012cb4:	f8c9 0000 	strgt.w	r0, [r9]
 8012cb8:	6839      	ldr	r1, [r7, #0]
 8012cba:	4288      	cmp	r0, r1
 8012cbc:	bfc8      	it	gt
 8012cbe:	6038      	strgt	r0, [r7, #0]
 8012cc0:	4610      	mov	r0, r2
 8012cc2:	f7ff ffa8 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012cc6:	a903      	add	r1, sp, #12
 8012cc8:	9003      	str	r0, [sp, #12]
 8012cca:	4650      	mov	r0, sl
 8012ccc:	f7ff ff59 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012cd0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8012cd4:	1a10      	subs	r0, r2, r0
 8012cd6:	6832      	ldr	r2, [r6, #0]
 8012cd8:	4282      	cmp	r2, r0
 8012cda:	bfc8      	it	gt
 8012cdc:	6030      	strgt	r0, [r6, #0]
 8012cde:	682a      	ldr	r2, [r5, #0]
 8012ce0:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8012ce4:	4290      	cmp	r0, r2
 8012ce6:	fb9b f2f1 	sdiv	r2, fp, r1
 8012cea:	fb01 b212 	mls	r2, r1, r2, fp
 8012cee:	eba1 0202 	sub.w	r2, r1, r2
 8012cf2:	bfc8      	it	gt
 8012cf4:	6028      	strgt	r0, [r5, #0]
 8012cf6:	fb92 f0f1 	sdiv	r0, r2, r1
 8012cfa:	fb01 2210 	mls	r2, r1, r0, r2
 8012cfe:	4493      	add	fp, r2
 8012d00:	9b00      	ldr	r3, [sp, #0]
 8012d02:	455b      	cmp	r3, fp
 8012d04:	db2a      	blt.n	8012d5c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8012d06:	4658      	mov	r0, fp
 8012d08:	f7ff ff66 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012d0c:	a903      	add	r1, sp, #12
 8012d0e:	9003      	str	r0, [sp, #12]
 8012d10:	4650      	mov	r0, sl
 8012d12:	f7ff ff36 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012d16:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8012d1a:	4410      	add	r0, r2
 8012d1c:	f8d9 2000 	ldr.w	r2, [r9]
 8012d20:	4282      	cmp	r2, r0
 8012d22:	bfc8      	it	gt
 8012d24:	f8c9 0000 	strgt.w	r0, [r9]
 8012d28:	683a      	ldr	r2, [r7, #0]
 8012d2a:	4290      	cmp	r0, r2
 8012d2c:	bfc8      	it	gt
 8012d2e:	6038      	strgt	r0, [r7, #0]
 8012d30:	4658      	mov	r0, fp
 8012d32:	f7ff ff70 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012d36:	a903      	add	r1, sp, #12
 8012d38:	9003      	str	r0, [sp, #12]
 8012d3a:	4650      	mov	r0, sl
 8012d3c:	f7ff ff21 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012d40:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8012d44:	1a10      	subs	r0, r2, r0
 8012d46:	6832      	ldr	r2, [r6, #0]
 8012d48:	4282      	cmp	r2, r0
 8012d4a:	bfc8      	it	gt
 8012d4c:	6030      	strgt	r0, [r6, #0]
 8012d4e:	682a      	ldr	r2, [r5, #0]
 8012d50:	4290      	cmp	r0, r2
 8012d52:	bfc8      	it	gt
 8012d54:	6028      	strgt	r0, [r5, #0]
 8012d56:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8012d5a:	e7d1      	b.n	8012d00 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8012d5c:	9b00      	ldr	r3, [sp, #0]
 8012d5e:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8012d62:	455b      	cmp	r3, fp
 8012d64:	dd27      	ble.n	8012db6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8012d66:	4618      	mov	r0, r3
 8012d68:	f7ff ff36 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012d6c:	a903      	add	r1, sp, #12
 8012d6e:	9003      	str	r0, [sp, #12]
 8012d70:	4650      	mov	r0, sl
 8012d72:	f7ff ff06 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012d76:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8012d7a:	4410      	add	r0, r2
 8012d7c:	f8d9 2000 	ldr.w	r2, [r9]
 8012d80:	4282      	cmp	r2, r0
 8012d82:	bfc8      	it	gt
 8012d84:	f8c9 0000 	strgt.w	r0, [r9]
 8012d88:	683a      	ldr	r2, [r7, #0]
 8012d8a:	4290      	cmp	r0, r2
 8012d8c:	bfc8      	it	gt
 8012d8e:	6038      	strgt	r0, [r7, #0]
 8012d90:	9800      	ldr	r0, [sp, #0]
 8012d92:	f7ff ff40 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012d96:	a903      	add	r1, sp, #12
 8012d98:	9003      	str	r0, [sp, #12]
 8012d9a:	4650      	mov	r0, sl
 8012d9c:	f7ff fef1 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012da0:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8012da4:	1a10      	subs	r0, r2, r0
 8012da6:	6832      	ldr	r2, [r6, #0]
 8012da8:	4282      	cmp	r2, r0
 8012daa:	bfc8      	it	gt
 8012dac:	6030      	strgt	r0, [r6, #0]
 8012dae:	682a      	ldr	r2, [r5, #0]
 8012db0:	4290      	cmp	r0, r2
 8012db2:	bfc8      	it	gt
 8012db4:	6028      	strgt	r0, [r5, #0]
 8012db6:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8012dba:	f8d9 1000 	ldr.w	r1, [r9]
 8012dbe:	4291      	cmp	r1, r2
 8012dc0:	bfc8      	it	gt
 8012dc2:	f8c9 2000 	strgt.w	r2, [r9]
 8012dc6:	683a      	ldr	r2, [r7, #0]
 8012dc8:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 8012dcc:	429a      	cmp	r2, r3
 8012dce:	bfb8      	it	lt
 8012dd0:	603b      	strlt	r3, [r7, #0]
 8012dd2:	6832      	ldr	r2, [r6, #0]
 8012dd4:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8012dd8:	429a      	cmp	r2, r3
 8012dda:	bfc8      	it	gt
 8012ddc:	6033      	strgt	r3, [r6, #0]
 8012dde:	682a      	ldr	r2, [r5, #0]
 8012de0:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8012de4:	429a      	cmp	r2, r3
 8012de6:	da00      	bge.n	8012dea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8012de8:	602b      	str	r3, [r5, #0]
 8012dea:	b005      	add	sp, #20
 8012dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012df0:	2002      	movs	r0, #2
 8012df2:	3401      	adds	r4, #1
 8012df4:	fb94 f4f0 	sdiv	r4, r4, r0
 8012df8:	4610      	mov	r0, r2
 8012dfa:	9201      	str	r2, [sp, #4]
 8012dfc:	f7ff feec 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012e00:	a903      	add	r1, sp, #12
 8012e02:	9003      	str	r0, [sp, #12]
 8012e04:	4650      	mov	r0, sl
 8012e06:	f7ff febc 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012e0a:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8012e0e:	9a01      	ldr	r2, [sp, #4]
 8012e10:	4408      	add	r0, r1
 8012e12:	f8d9 1000 	ldr.w	r1, [r9]
 8012e16:	1b03      	subs	r3, r0, r4
 8012e18:	4299      	cmp	r1, r3
 8012e1a:	bfc8      	it	gt
 8012e1c:	f8c9 3000 	strgt.w	r3, [r9]
 8012e20:	6839      	ldr	r1, [r7, #0]
 8012e22:	428b      	cmp	r3, r1
 8012e24:	bfc8      	it	gt
 8012e26:	603b      	strgt	r3, [r7, #0]
 8012e28:	f8d9 1000 	ldr.w	r1, [r9]
 8012e2c:	4420      	add	r0, r4
 8012e2e:	4281      	cmp	r1, r0
 8012e30:	bfc8      	it	gt
 8012e32:	f8c9 0000 	strgt.w	r0, [r9]
 8012e36:	6839      	ldr	r1, [r7, #0]
 8012e38:	4288      	cmp	r0, r1
 8012e3a:	bfc8      	it	gt
 8012e3c:	6038      	strgt	r0, [r7, #0]
 8012e3e:	4610      	mov	r0, r2
 8012e40:	f7ff fee9 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012e44:	a903      	add	r1, sp, #12
 8012e46:	9003      	str	r0, [sp, #12]
 8012e48:	4650      	mov	r0, sl
 8012e4a:	f7ff fe9a 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012e4e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8012e52:	1a10      	subs	r0, r2, r0
 8012e54:	6832      	ldr	r2, [r6, #0]
 8012e56:	1b01      	subs	r1, r0, r4
 8012e58:	428a      	cmp	r2, r1
 8012e5a:	bfc8      	it	gt
 8012e5c:	6031      	strgt	r1, [r6, #0]
 8012e5e:	682a      	ldr	r2, [r5, #0]
 8012e60:	4291      	cmp	r1, r2
 8012e62:	bfc8      	it	gt
 8012e64:	6029      	strgt	r1, [r5, #0]
 8012e66:	6832      	ldr	r2, [r6, #0]
 8012e68:	4420      	add	r0, r4
 8012e6a:	4282      	cmp	r2, r0
 8012e6c:	bfc8      	it	gt
 8012e6e:	6030      	strgt	r0, [r6, #0]
 8012e70:	682a      	ldr	r2, [r5, #0]
 8012e72:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8012e76:	4290      	cmp	r0, r2
 8012e78:	fb9b f2f1 	sdiv	r2, fp, r1
 8012e7c:	fb01 b212 	mls	r2, r1, r2, fp
 8012e80:	eba1 0202 	sub.w	r2, r1, r2
 8012e84:	bfc8      	it	gt
 8012e86:	6028      	strgt	r0, [r5, #0]
 8012e88:	fb92 f0f1 	sdiv	r0, r2, r1
 8012e8c:	fb01 2210 	mls	r2, r1, r0, r2
 8012e90:	4493      	add	fp, r2
 8012e92:	9b00      	ldr	r3, [sp, #0]
 8012e94:	455b      	cmp	r3, fp
 8012e96:	db40      	blt.n	8012f1a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8012e98:	4658      	mov	r0, fp
 8012e9a:	f7ff fe9d 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012e9e:	a903      	add	r1, sp, #12
 8012ea0:	9003      	str	r0, [sp, #12]
 8012ea2:	4650      	mov	r0, sl
 8012ea4:	f7ff fe6d 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012ea8:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8012eac:	4410      	add	r0, r2
 8012eae:	f8d9 2000 	ldr.w	r2, [r9]
 8012eb2:	1b01      	subs	r1, r0, r4
 8012eb4:	428a      	cmp	r2, r1
 8012eb6:	bfc8      	it	gt
 8012eb8:	f8c9 1000 	strgt.w	r1, [r9]
 8012ebc:	683a      	ldr	r2, [r7, #0]
 8012ebe:	4291      	cmp	r1, r2
 8012ec0:	bfc8      	it	gt
 8012ec2:	6039      	strgt	r1, [r7, #0]
 8012ec4:	f8d9 2000 	ldr.w	r2, [r9]
 8012ec8:	4420      	add	r0, r4
 8012eca:	4282      	cmp	r2, r0
 8012ecc:	bfc8      	it	gt
 8012ece:	f8c9 0000 	strgt.w	r0, [r9]
 8012ed2:	683a      	ldr	r2, [r7, #0]
 8012ed4:	4290      	cmp	r0, r2
 8012ed6:	bfc8      	it	gt
 8012ed8:	6038      	strgt	r0, [r7, #0]
 8012eda:	4658      	mov	r0, fp
 8012edc:	f7ff fe9b 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012ee0:	a903      	add	r1, sp, #12
 8012ee2:	9003      	str	r0, [sp, #12]
 8012ee4:	4650      	mov	r0, sl
 8012ee6:	f7ff fe4c 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012eea:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8012eee:	1a10      	subs	r0, r2, r0
 8012ef0:	6832      	ldr	r2, [r6, #0]
 8012ef2:	1b01      	subs	r1, r0, r4
 8012ef4:	428a      	cmp	r2, r1
 8012ef6:	bfc8      	it	gt
 8012ef8:	6031      	strgt	r1, [r6, #0]
 8012efa:	682a      	ldr	r2, [r5, #0]
 8012efc:	4291      	cmp	r1, r2
 8012efe:	bfc8      	it	gt
 8012f00:	6029      	strgt	r1, [r5, #0]
 8012f02:	6832      	ldr	r2, [r6, #0]
 8012f04:	4420      	add	r0, r4
 8012f06:	4282      	cmp	r2, r0
 8012f08:	bfc8      	it	gt
 8012f0a:	6030      	strgt	r0, [r6, #0]
 8012f0c:	682a      	ldr	r2, [r5, #0]
 8012f0e:	4290      	cmp	r0, r2
 8012f10:	bfc8      	it	gt
 8012f12:	6028      	strgt	r0, [r5, #0]
 8012f14:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8012f18:	e7bb      	b.n	8012e92 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8012f1a:	9b00      	ldr	r3, [sp, #0]
 8012f1c:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8012f20:	455b      	cmp	r3, fp
 8012f22:	f77f af62 	ble.w	8012dea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8012f26:	4618      	mov	r0, r3
 8012f28:	f7ff fe56 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8012f2c:	a903      	add	r1, sp, #12
 8012f2e:	9003      	str	r0, [sp, #12]
 8012f30:	4650      	mov	r0, sl
 8012f32:	f7ff fe26 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f36:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8012f3a:	4410      	add	r0, r2
 8012f3c:	f8d9 2000 	ldr.w	r2, [r9]
 8012f40:	1b01      	subs	r1, r0, r4
 8012f42:	428a      	cmp	r2, r1
 8012f44:	bfc8      	it	gt
 8012f46:	f8c9 1000 	strgt.w	r1, [r9]
 8012f4a:	683a      	ldr	r2, [r7, #0]
 8012f4c:	4291      	cmp	r1, r2
 8012f4e:	bfc8      	it	gt
 8012f50:	6039      	strgt	r1, [r7, #0]
 8012f52:	f8d9 2000 	ldr.w	r2, [r9]
 8012f56:	4420      	add	r0, r4
 8012f58:	4282      	cmp	r2, r0
 8012f5a:	bfc8      	it	gt
 8012f5c:	f8c9 0000 	strgt.w	r0, [r9]
 8012f60:	683b      	ldr	r3, [r7, #0]
 8012f62:	4298      	cmp	r0, r3
 8012f64:	bfc8      	it	gt
 8012f66:	6038      	strgt	r0, [r7, #0]
 8012f68:	9800      	ldr	r0, [sp, #0]
 8012f6a:	f7ff fe54 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8012f6e:	a903      	add	r1, sp, #12
 8012f70:	9003      	str	r0, [sp, #12]
 8012f72:	4650      	mov	r0, sl
 8012f74:	f7ff fe05 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f78:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 8012f7c:	6832      	ldr	r2, [r6, #0]
 8012f7e:	1a18      	subs	r0, r3, r0
 8012f80:	1b03      	subs	r3, r0, r4
 8012f82:	429a      	cmp	r2, r3
 8012f84:	bfc8      	it	gt
 8012f86:	6033      	strgt	r3, [r6, #0]
 8012f88:	682a      	ldr	r2, [r5, #0]
 8012f8a:	4293      	cmp	r3, r2
 8012f8c:	bfc8      	it	gt
 8012f8e:	602b      	strgt	r3, [r5, #0]
 8012f90:	6833      	ldr	r3, [r6, #0]
 8012f92:	4404      	add	r4, r0
 8012f94:	42a3      	cmp	r3, r4
 8012f96:	bfc8      	it	gt
 8012f98:	6034      	strgt	r4, [r6, #0]
 8012f9a:	682b      	ldr	r3, [r5, #0]
 8012f9c:	429c      	cmp	r4, r3
 8012f9e:	bfc8      	it	gt
 8012fa0:	602c      	strgt	r4, [r5, #0]
 8012fa2:	e722      	b.n	8012dea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08012fa4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8012fa4:	b530      	push	{r4, r5, lr}
 8012fa6:	4604      	mov	r4, r0
 8012fa8:	4608      	mov	r0, r1
 8012faa:	4611      	mov	r1, r2
 8012fac:	461a      	mov	r2, r3
 8012fae:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012fb2:	b089      	sub	sp, #36	@ 0x24
 8012fb4:	015b      	lsls	r3, r3, #5
 8012fb6:	9304      	str	r3, [sp, #16]
 8012fb8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012fbc:	2500      	movs	r5, #0
 8012fbe:	015b      	lsls	r3, r3, #5
 8012fc0:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8012fc4:	ab07      	add	r3, sp, #28
 8012fc6:	9302      	str	r3, [sp, #8]
 8012fc8:	ab06      	add	r3, sp, #24
 8012fca:	9301      	str	r3, [sp, #4]
 8012fcc:	ab05      	add	r3, sp, #20
 8012fce:	9300      	str	r3, [sp, #0]
 8012fd0:	ab04      	add	r3, sp, #16
 8012fd2:	9505      	str	r5, [sp, #20]
 8012fd4:	f7ff fe3e 	bl	8012c54 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8012fd8:	2520      	movs	r5, #32
 8012fda:	9a04      	ldr	r2, [sp, #16]
 8012fdc:	9805      	ldr	r0, [sp, #20]
 8012fde:	fb92 f2f5 	sdiv	r2, r2, r5
 8012fe2:	fb90 f0f5 	sdiv	r0, r0, r5
 8012fe6:	b292      	uxth	r2, r2
 8012fe8:	3002      	adds	r0, #2
 8012fea:	1a80      	subs	r0, r0, r2
 8012fec:	9b06      	ldr	r3, [sp, #24]
 8012fee:	9907      	ldr	r1, [sp, #28]
 8012ff0:	fb93 f3f5 	sdiv	r3, r3, r5
 8012ff4:	fb91 f1f5 	sdiv	r1, r1, r5
 8012ff8:	b29b      	uxth	r3, r3
 8012ffa:	3102      	adds	r1, #2
 8012ffc:	1ac9      	subs	r1, r1, r3
 8012ffe:	3a01      	subs	r2, #1
 8013000:	3b01      	subs	r3, #1
 8013002:	80a0      	strh	r0, [r4, #4]
 8013004:	4620      	mov	r0, r4
 8013006:	8022      	strh	r2, [r4, #0]
 8013008:	8063      	strh	r3, [r4, #2]
 801300a:	80e1      	strh	r1, [r4, #6]
 801300c:	b009      	add	sp, #36	@ 0x24
 801300e:	bd30      	pop	{r4, r5, pc}

08013010 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8013010:	b510      	push	{r4, lr}
 8013012:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 8013016:	4604      	mov	r4, r0
 8013018:	f7ff ffc4 	bl	8012fa4 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 801301c:	4620      	mov	r0, r4
 801301e:	bd10      	pop	{r4, pc}

08013020 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8013020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013024:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 8013028:	42b5      	cmp	r5, r6
 801302a:	bfa2      	ittt	ge
 801302c:	462b      	movge	r3, r5
 801302e:	4635      	movge	r5, r6
 8013030:	461e      	movge	r6, r3
 8013032:	1b73      	subs	r3, r6, r5
 8013034:	468a      	mov	sl, r1
 8013036:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 8013038:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 801303c:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 8013040:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 8013042:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8013046:	b0af      	sub	sp, #188	@ 0xbc
 8013048:	f04f 0320 	mov.w	r3, #32
 801304c:	4604      	mov	r4, r0
 801304e:	bfa4      	itt	ge
 8013050:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 8013054:	2500      	movge	r5, #0
 8013056:	fb99 f9f3 	sdiv	r9, r9, r3
 801305a:	fb9b fbf3 	sdiv	fp, fp, r3
 801305e:	2900      	cmp	r1, #0
 8013060:	f000 80ff 	beq.w	8013262 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 8013064:	f9ba 0000 	ldrsh.w	r0, [sl]
 8013068:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 801306c:	eba9 0700 	sub.w	r7, r9, r0
 8013070:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8013074:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8013078:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 801307c:	ebab 0803 	sub.w	r8, fp, r3
 8013080:	4407      	add	r7, r0
 8013082:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8013086:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 801308a:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 801308e:	b23f      	sxth	r7, r7
 8013090:	4498      	add	r8, r3
 8013092:	eba9 0707 	sub.w	r7, r9, r7
 8013096:	fa0f f888 	sxth.w	r8, r8
 801309a:	ebab 0808 	sub.w	r8, fp, r8
 801309e:	2f00      	cmp	r7, #0
 80130a0:	bfb8      	it	lt
 80130a2:	427f      	neglt	r7, r7
 80130a4:	f1b8 0f00 	cmp.w	r8, #0
 80130a8:	bfb8      	it	lt
 80130aa:	f1c8 0800 	rsblt	r8, r8, #0
 80130ae:	45bc      	cmp	ip, r7
 80130b0:	bfcc      	ite	gt
 80130b2:	f10c 0701 	addgt.w	r7, ip, #1
 80130b6:	3701      	addle	r7, #1
 80130b8:	4540      	cmp	r0, r8
 80130ba:	bfc8      	it	gt
 80130bc:	f100 0801 	addgt.w	r8, r0, #1
 80130c0:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 80130c4:	f100 0001 	add.w	r0, r0, #1
 80130c8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80130cc:	f04f 0302 	mov.w	r3, #2
 80130d0:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 80130d4:	fb91 f1f3 	sdiv	r1, r1, r3
 80130d8:	eba2 0201 	sub.w	r2, r2, r1
 80130dc:	bfd8      	it	le
 80130de:	f108 0801 	addle.w	r8, r8, #1
 80130e2:	9303      	str	r3, [sp, #12]
 80130e4:	920f      	str	r2, [sp, #60]	@ 0x3c
 80130e6:	f7ff fd57 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 80130ea:	a92e      	add	r1, sp, #184	@ 0xb8
 80130ec:	fb08 f808 	mul.w	r8, r8, r8
 80130f0:	f841 0d74 	str.w	r0, [r1, #-116]!
 80130f4:	a80f      	add	r0, sp, #60	@ 0x3c
 80130f6:	f7ff fd44 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80130fa:	fb07 8707 	mla	r7, r7, r7, r8
 80130fe:	f04f 0c20 	mov.w	ip, #32
 8013102:	fb90 f0fc 	sdiv	r0, r0, ip
 8013106:	4340      	muls	r0, r0
 8013108:	4287      	cmp	r7, r0
 801310a:	9b03      	ldr	r3, [sp, #12]
 801310c:	da04      	bge.n	8013118 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 801310e:	2401      	movs	r4, #1
 8013110:	4620      	mov	r0, r4
 8013112:	b02f      	add	sp, #188	@ 0xbc
 8013114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013118:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 801311a:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 801311c:	fb91 f2f3 	sdiv	r2, r1, r3
 8013120:	4402      	add	r2, r0
 8013122:	fb92 f2fc 	sdiv	r2, r2, ip
 8013126:	f9ba 1000 	ldrsh.w	r1, [sl]
 801312a:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 801312e:	440b      	add	r3, r1
 8013130:	b21b      	sxth	r3, r3
 8013132:	454b      	cmp	r3, r9
 8013134:	bfa8      	it	ge
 8013136:	464b      	movge	r3, r9
 8013138:	428b      	cmp	r3, r1
 801313a:	bfac      	ite	ge
 801313c:	eba9 0903 	subge.w	r9, r9, r3
 8013140:	eba9 0901 	sublt.w	r9, r9, r1
 8013144:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 8013148:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 801314c:	440b      	add	r3, r1
 801314e:	b21b      	sxth	r3, r3
 8013150:	455b      	cmp	r3, fp
 8013152:	bfa8      	it	ge
 8013154:	465b      	movge	r3, fp
 8013156:	428b      	cmp	r3, r1
 8013158:	bfac      	ite	ge
 801315a:	ebab 0b03 	subge.w	fp, fp, r3
 801315e:	ebab 0b01 	sublt.w	fp, fp, r1
 8013162:	3201      	adds	r2, #1
 8013164:	fb0b fb0b 	mul.w	fp, fp, fp
 8013168:	fb09 b909 	mla	r9, r9, r9, fp
 801316c:	4352      	muls	r2, r2
 801316e:	4591      	cmp	r9, r2
 8013170:	dccd      	bgt.n	801310e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8013172:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 8013176:	4621      	mov	r1, r4
 8013178:	4648      	mov	r0, r9
 801317a:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 801317c:	f005 f9d4 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013180:	6823      	ldr	r3, [r4, #0]
 8013182:	4620      	mov	r0, r4
 8013184:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8013186:	4798      	blx	r3
 8013188:	4653      	mov	r3, sl
 801318a:	9000      	str	r0, [sp, #0]
 801318c:	464a      	mov	r2, r9
 801318e:	4639      	mov	r1, r7
 8013190:	a811      	add	r0, sp, #68	@ 0x44
 8013192:	f016 f927 	bl	80293e4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8013196:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 8013198:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 801319a:	920b      	str	r2, [sp, #44]	@ 0x2c
 801319c:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80131a0:	930c      	str	r3, [sp, #48]	@ 0x30
 80131a2:	dd07      	ble.n	80131b4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 80131a4:	2102      	movs	r1, #2
 80131a6:	fb93 f3f1 	sdiv	r3, r3, r1
 80131aa:	4413      	add	r3, r2
 80131ac:	930c      	str	r3, [sp, #48]	@ 0x30
 80131ae:	fb93 f3f1 	sdiv	r3, r3, r1
 80131b2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80131b4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80131b8:	4628      	mov	r0, r5
 80131ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80131be:	930d      	str	r3, [sp, #52]	@ 0x34
 80131c0:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 80131c4:	f7ff fd08 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80131c8:	4649      	mov	r1, r9
 80131ca:	900f      	str	r0, [sp, #60]	@ 0x3c
 80131cc:	a80d      	add	r0, sp, #52	@ 0x34
 80131ce:	f7ff fcd8 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80131d2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80131d4:	f04f 0a02 	mov.w	sl, #2
 80131d8:	fb90 f0fa 	sdiv	r0, r0, sl
 80131dc:	eb00 0b03 	add.w	fp, r0, r3
 80131e0:	4628      	mov	r0, r5
 80131e2:	f7ff fd18 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80131e6:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 80131ea:	017f      	lsls	r7, r7, #5
 80131ec:	f848 0d80 	str.w	r0, [r8, #-128]!
 80131f0:	a80d      	add	r0, sp, #52	@ 0x34
 80131f2:	4641      	mov	r1, r8
 80131f4:	f7ff fcc5 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80131f8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80131fa:	fb90 f0fa 	sdiv	r0, r0, sl
 80131fe:	4659      	mov	r1, fp
 8013200:	1a12      	subs	r2, r2, r0
 8013202:	a811      	add	r0, sp, #68	@ 0x44
 8013204:	f016 fa3a 	bl	802967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013208:	f105 0a20 	add.w	sl, r5, #32
 801320c:	bb67      	cbnz	r7, 8013268 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 801320e:	46ab      	mov	fp, r5
 8013210:	45b2      	cmp	sl, r6
 8013212:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013214:	dc33      	bgt.n	801327e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 8013216:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013218:	4650      	mov	r0, sl
 801321a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801321e:	920d      	str	r2, [sp, #52]	@ 0x34
 8013220:	f7ff fcda 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013224:	4641      	mov	r1, r8
 8013226:	900e      	str	r0, [sp, #56]	@ 0x38
 8013228:	a80d      	add	r0, sp, #52	@ 0x34
 801322a:	f7ff fcaa 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801322e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8013230:	2302      	movs	r3, #2
 8013232:	fb90 f0f3 	sdiv	r0, r0, r3
 8013236:	eb00 0b02 	add.w	fp, r0, r2
 801323a:	4650      	mov	r0, sl
 801323c:	f7ff fceb 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013240:	4649      	mov	r1, r9
 8013242:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013244:	a80d      	add	r0, sp, #52	@ 0x34
 8013246:	f7ff fc9c 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801324a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 801324c:	2302      	movs	r3, #2
 801324e:	4659      	mov	r1, fp
 8013250:	fb90 f0f3 	sdiv	r0, r0, r3
 8013254:	1a12      	subs	r2, r2, r0
 8013256:	a811      	add	r0, sp, #68	@ 0x44
 8013258:	46d3      	mov	fp, sl
 801325a:	f016 fa5c 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801325e:	44ba      	add	sl, r7
 8013260:	e7d6      	b.n	8013210 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 8013262:	fb92 f2f3 	sdiv	r2, r2, r3
 8013266:	e75e      	b.n	8013126 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8013268:	fb9a f2f7 	sdiv	r2, sl, r7
 801326c:	fb07 a212 	mls	r2, r7, r2, sl
 8013270:	1aba      	subs	r2, r7, r2
 8013272:	fb92 f1f7 	sdiv	r1, r2, r7
 8013276:	fb07 2211 	mls	r2, r7, r1, r2
 801327a:	4492      	add	sl, r2
 801327c:	e7c7      	b.n	801320e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 801327e:	455e      	cmp	r6, fp
 8013280:	dd23      	ble.n	80132ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 8013282:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013284:	4630      	mov	r0, r6
 8013286:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 801328a:	920d      	str	r2, [sp, #52]	@ 0x34
 801328c:	f7ff fca4 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013290:	4641      	mov	r1, r8
 8013292:	900e      	str	r0, [sp, #56]	@ 0x38
 8013294:	a80d      	add	r0, sp, #52	@ 0x34
 8013296:	f7ff fc74 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801329a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801329c:	f04f 0a02 	mov.w	sl, #2
 80132a0:	fb90 f0fa 	sdiv	r0, r0, sl
 80132a4:	4403      	add	r3, r0
 80132a6:	4630      	mov	r0, r6
 80132a8:	9303      	str	r3, [sp, #12]
 80132aa:	f7ff fcb4 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80132ae:	4649      	mov	r1, r9
 80132b0:	900f      	str	r0, [sp, #60]	@ 0x3c
 80132b2:	a80d      	add	r0, sp, #52	@ 0x34
 80132b4:	f7ff fc65 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80132b8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80132ba:	9b03      	ldr	r3, [sp, #12]
 80132bc:	fb90 f0fa 	sdiv	r0, r0, sl
 80132c0:	4619      	mov	r1, r3
 80132c2:	1a12      	subs	r2, r2, r0
 80132c4:	a811      	add	r0, sp, #68	@ 0x44
 80132c6:	f016 fa26 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80132ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80132cc:	b99b      	cbnz	r3, 80132f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 80132ce:	1b75      	subs	r5, r6, r5
 80132d0:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 80132d4:	da04      	bge.n	80132e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 80132d6:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 80132da:	a811      	add	r0, sp, #68	@ 0x44
 80132dc:	f016 fa1b 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80132e0:	21ff      	movs	r1, #255	@ 0xff
 80132e2:	a811      	add	r0, sp, #68	@ 0x44
 80132e4:	f016 f912 	bl	802950c <_ZN8touchgfx6Canvas6renderEh>
 80132e8:	4604      	mov	r4, r0
 80132ea:	4b8a      	ldr	r3, [pc, #552]	@ (8013514 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 80132ec:	9311      	str	r3, [sp, #68]	@ 0x44
 80132ee:	a816      	add	r0, sp, #88	@ 0x58
 80132f0:	f001 fc4e 	bl	8014b90 <_ZN8touchgfx7OutlineD1Ev>
 80132f4:	e70c      	b.n	8013110 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80132f6:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 80132fa:	429a      	cmp	r2, r3
 80132fc:	f0c0 8107 	bcc.w	801350e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 8013300:	1b73      	subs	r3, r6, r5
 8013302:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 8013306:	9303      	str	r3, [sp, #12]
 8013308:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 801330c:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8013310:	da43      	bge.n	801339a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 8013312:	4630      	mov	r0, r6
 8013314:	f7ff fc60 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013318:	4649      	mov	r1, r9
 801331a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801331c:	a80b      	add	r0, sp, #44	@ 0x2c
 801331e:	f7ff fc30 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013322:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013324:	18c3      	adds	r3, r0, r3
 8013326:	4630      	mov	r0, r6
 8013328:	9305      	str	r3, [sp, #20]
 801332a:	f7ff fc74 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801332e:	4649      	mov	r1, r9
 8013330:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013332:	a80b      	add	r0, sp, #44	@ 0x2c
 8013334:	f7ff fc25 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013338:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801333a:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 801333e:	1a1b      	subs	r3, r3, r0
 8013340:	9304      	str	r3, [sp, #16]
 8013342:	9206      	str	r2, [sp, #24]
 8013344:	eb06 030a 	add.w	r3, r6, sl
 8013348:	9a06      	ldr	r2, [sp, #24]
 801334a:	4293      	cmp	r3, r2
 801334c:	da25      	bge.n	801339a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 801334e:	4618      	mov	r0, r3
 8013350:	9308      	str	r3, [sp, #32]
 8013352:	f7ff fc41 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013356:	4649      	mov	r1, r9
 8013358:	900f      	str	r0, [sp, #60]	@ 0x3c
 801335a:	a80c      	add	r0, sp, #48	@ 0x30
 801335c:	f7ff fc11 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013360:	9b05      	ldr	r3, [sp, #20]
 8013362:	2202      	movs	r2, #2
 8013364:	fb90 f0f2 	sdiv	r0, r0, r2
 8013368:	18c3      	adds	r3, r0, r3
 801336a:	9307      	str	r3, [sp, #28]
 801336c:	9b08      	ldr	r3, [sp, #32]
 801336e:	9209      	str	r2, [sp, #36]	@ 0x24
 8013370:	4618      	mov	r0, r3
 8013372:	f7ff fc50 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013376:	a92e      	add	r1, sp, #184	@ 0xb8
 8013378:	f841 0d80 	str.w	r0, [r1, #-128]!
 801337c:	a80c      	add	r0, sp, #48	@ 0x30
 801337e:	f7ff fc00 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013382:	9b04      	ldr	r3, [sp, #16]
 8013384:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013386:	9907      	ldr	r1, [sp, #28]
 8013388:	fb90 f2f2 	sdiv	r2, r0, r2
 801338c:	a811      	add	r0, sp, #68	@ 0x44
 801338e:	1a9a      	subs	r2, r3, r2
 8013390:	f016 f9c1 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013394:	9b08      	ldr	r3, [sp, #32]
 8013396:	4453      	add	r3, sl
 8013398:	e7d6      	b.n	8013348 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 801339a:	455e      	cmp	r6, fp
 801339c:	dd25      	ble.n	80133ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 801339e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80133a2:	4630      	mov	r0, r6
 80133a4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80133a8:	930d      	str	r3, [sp, #52]	@ 0x34
 80133aa:	f7ff fc15 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80133ae:	4641      	mov	r1, r8
 80133b0:	900e      	str	r0, [sp, #56]	@ 0x38
 80133b2:	a80d      	add	r0, sp, #52	@ 0x34
 80133b4:	f7ff fbe5 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80133b8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80133ba:	2202      	movs	r2, #2
 80133bc:	fb90 f0f2 	sdiv	r0, r0, r2
 80133c0:	eb00 0903 	add.w	r9, r0, r3
 80133c4:	4630      	mov	r0, r6
 80133c6:	9204      	str	r2, [sp, #16]
 80133c8:	f7ff fc25 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80133cc:	a92e      	add	r1, sp, #184	@ 0xb8
 80133ce:	f841 0d7c 	str.w	r0, [r1, #-124]!
 80133d2:	a80d      	add	r0, sp, #52	@ 0x34
 80133d4:	f7ff fbd5 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80133d8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80133da:	9a04      	ldr	r2, [sp, #16]
 80133dc:	fb90 f2f2 	sdiv	r2, r0, r2
 80133e0:	4649      	mov	r1, r9
 80133e2:	1a9a      	subs	r2, r3, r2
 80133e4:	a811      	add	r0, sp, #68	@ 0x44
 80133e6:	f016 f996 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80133ea:	46d9      	mov	r9, fp
 80133ec:	2602      	movs	r6, #2
 80133ee:	45a9      	cmp	r9, r5
 80133f0:	db25      	blt.n	801343e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 80133f2:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80133f6:	4648      	mov	r0, r9
 80133f8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80133fc:	930d      	str	r3, [sp, #52]	@ 0x34
 80133fe:	f7ff fbeb 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013402:	4641      	mov	r1, r8
 8013404:	900e      	str	r0, [sp, #56]	@ 0x38
 8013406:	a80d      	add	r0, sp, #52	@ 0x34
 8013408:	f7ff fbbb 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801340c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801340e:	fb90 f0f6 	sdiv	r0, r0, r6
 8013412:	eb00 0b03 	add.w	fp, r0, r3
 8013416:	4648      	mov	r0, r9
 8013418:	f7ff fbfd 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801341c:	a90f      	add	r1, sp, #60	@ 0x3c
 801341e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013420:	a80d      	add	r0, sp, #52	@ 0x34
 8013422:	f7ff fbae 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013426:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013428:	fb90 f0f6 	sdiv	r0, r0, r6
 801342c:	4659      	mov	r1, fp
 801342e:	1a12      	subs	r2, r2, r0
 8013430:	a811      	add	r0, sp, #68	@ 0x44
 8013432:	46cb      	mov	fp, r9
 8013434:	f016 f96f 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013438:	eba9 0907 	sub.w	r9, r9, r7
 801343c:	e7d7      	b.n	80133ee <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 801343e:	455d      	cmp	r5, fp
 8013440:	da22      	bge.n	8013488 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 8013442:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8013446:	4628      	mov	r0, r5
 8013448:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 801344c:	930d      	str	r3, [sp, #52]	@ 0x34
 801344e:	f7ff fbc3 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013452:	4641      	mov	r1, r8
 8013454:	900e      	str	r0, [sp, #56]	@ 0x38
 8013456:	a80d      	add	r0, sp, #52	@ 0x34
 8013458:	f7ff fb93 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801345c:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 801345e:	2602      	movs	r6, #2
 8013460:	fb90 f0f6 	sdiv	r0, r0, r6
 8013464:	4407      	add	r7, r0
 8013466:	4628      	mov	r0, r5
 8013468:	f7ff fbd5 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801346c:	a92e      	add	r1, sp, #184	@ 0xb8
 801346e:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8013472:	a80d      	add	r0, sp, #52	@ 0x34
 8013474:	f7ff fb85 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013478:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 801347a:	fb90 f0f6 	sdiv	r0, r0, r6
 801347e:	4639      	mov	r1, r7
 8013480:	1a12      	subs	r2, r2, r0
 8013482:	a811      	add	r0, sp, #68	@ 0x44
 8013484:	f016 f947 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013488:	9b03      	ldr	r3, [sp, #12]
 801348a:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 801348e:	f6bf af27 	bge.w	80132e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 8013492:	4628      	mov	r0, r5
 8013494:	f7ff fba0 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013498:	ae2e      	add	r6, sp, #184	@ 0xb8
 801349a:	f04f 0b02 	mov.w	fp, #2
 801349e:	f846 0d7c 	str.w	r0, [r6, #-124]!
 80134a2:	a80b      	add	r0, sp, #44	@ 0x2c
 80134a4:	4631      	mov	r1, r6
 80134a6:	f7ff fb6c 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80134aa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80134ac:	eb00 0903 	add.w	r9, r0, r3
 80134b0:	4628      	mov	r0, r5
 80134b2:	f7ff fbb0 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80134b6:	4631      	mov	r1, r6
 80134b8:	900f      	str	r0, [sp, #60]	@ 0x3c
 80134ba:	a80b      	add	r0, sp, #44	@ 0x2c
 80134bc:	f7ff fb61 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80134c0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80134c2:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 80134c6:	eba3 0800 	sub.w	r8, r3, r0
 80134ca:	4454      	add	r4, sl
 80134cc:	42a5      	cmp	r5, r4
 80134ce:	f77f af07 	ble.w	80132e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 80134d2:	4620      	mov	r0, r4
 80134d4:	f7ff fb80 	bl	8012bd8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80134d8:	4631      	mov	r1, r6
 80134da:	900f      	str	r0, [sp, #60]	@ 0x3c
 80134dc:	a80c      	add	r0, sp, #48	@ 0x30
 80134de:	f7ff fb50 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80134e2:	fb90 f0fb 	sdiv	r0, r0, fp
 80134e6:	eb00 0709 	add.w	r7, r0, r9
 80134ea:	4620      	mov	r0, r4
 80134ec:	f7ff fb93 	bl	8012c16 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80134f0:	a90e      	add	r1, sp, #56	@ 0x38
 80134f2:	900e      	str	r0, [sp, #56]	@ 0x38
 80134f4:	a80c      	add	r0, sp, #48	@ 0x30
 80134f6:	f7ff fb44 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80134fa:	4639      	mov	r1, r7
 80134fc:	fb90 f2fb 	sdiv	r2, r0, fp
 8013500:	a811      	add	r0, sp, #68	@ 0x44
 8013502:	eba8 0202 	sub.w	r2, r8, r2
 8013506:	f016 f906 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801350a:	4454      	add	r4, sl
 801350c:	e7de      	b.n	80134cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 801350e:	2400      	movs	r4, #0
 8013510:	e6eb      	b.n	80132ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 8013512:	bf00      	nop
 8013514:	0802e7e0 	.word	0x0802e7e0

08013518 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8013518:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801351a:	6803      	ldr	r3, [r0, #0]
 801351c:	460d      	mov	r5, r1
 801351e:	4604      	mov	r4, r0
 8013520:	4601      	mov	r1, r0
 8013522:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8013524:	a802      	add	r0, sp, #8
 8013526:	4798      	blx	r3
 8013528:	6828      	ldr	r0, [r5, #0]
 801352a:	6869      	ldr	r1, [r5, #4]
 801352c:	466b      	mov	r3, sp
 801352e:	c303      	stmia	r3!, {r0, r1}
 8013530:	4668      	mov	r0, sp
 8013532:	4619      	mov	r1, r3
 8013534:	f7fc ffba 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8013538:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 801353a:	b188      	cbz	r0, 8013560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801353c:	6803      	ldr	r3, [r0, #0]
 801353e:	1d21      	adds	r1, r4, #4
 8013540:	68db      	ldr	r3, [r3, #12]
 8013542:	4798      	blx	r3
 8013544:	b160      	cbz	r0, 8013560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013546:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801354a:	2b00      	cmp	r3, #0
 801354c:	dd08      	ble.n	8013560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801354e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8013552:	2d00      	cmp	r5, #0
 8013554:	dd04      	ble.n	8013560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013556:	4a2b      	ldr	r2, [pc, #172]	@ (8013604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8013558:	7812      	ldrb	r2, [r2, #0]
 801355a:	b11a      	cbz	r2, 8013564 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 801355c:	2a01      	cmp	r2, #1
 801355e:	d029      	beq.n	80135b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8013560:	b004      	add	sp, #16
 8013562:	bd70      	pop	{r4, r5, r6, pc}
 8013564:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013568:	441d      	add	r5, r3
 801356a:	b2ad      	uxth	r5, r5
 801356c:	b22e      	sxth	r6, r5
 801356e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8013572:	42b3      	cmp	r3, r6
 8013574:	daf4      	bge.n	8013560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013576:	6823      	ldr	r3, [r4, #0]
 8013578:	4669      	mov	r1, sp
 801357a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801357c:	4620      	mov	r0, r4
 801357e:	4798      	blx	r3
 8013580:	b940      	cbnz	r0, 8013594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8013582:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8013586:	2b01      	cmp	r3, #1
 8013588:	d004      	beq.n	8013594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801358a:	3301      	adds	r3, #1
 801358c:	105b      	asrs	r3, r3, #1
 801358e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013592:	e7f0      	b.n	8013576 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8013594:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013598:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801359c:	4413      	add	r3, r2
 801359e:	b29b      	uxth	r3, r3
 80135a0:	441a      	add	r2, r3
 80135a2:	b212      	sxth	r2, r2
 80135a4:	4296      	cmp	r6, r2
 80135a6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80135aa:	dae0      	bge.n	801356e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80135ac:	1aeb      	subs	r3, r5, r3
 80135ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80135b2:	e7dc      	b.n	801356e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80135b4:	f8bd 5000 	ldrh.w	r5, [sp]
 80135b8:	441d      	add	r5, r3
 80135ba:	b2ad      	uxth	r5, r5
 80135bc:	b22e      	sxth	r6, r5
 80135be:	f9bd 3000 	ldrsh.w	r3, [sp]
 80135c2:	42b3      	cmp	r3, r6
 80135c4:	dacc      	bge.n	8013560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80135c6:	6823      	ldr	r3, [r4, #0]
 80135c8:	4669      	mov	r1, sp
 80135ca:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80135cc:	4620      	mov	r0, r4
 80135ce:	4798      	blx	r3
 80135d0:	b940      	cbnz	r0, 80135e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80135d2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80135d6:	2b01      	cmp	r3, #1
 80135d8:	d004      	beq.n	80135e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80135da:	3301      	adds	r3, #1
 80135dc:	105b      	asrs	r3, r3, #1
 80135de:	f8ad 3004 	strh.w	r3, [sp, #4]
 80135e2:	e7f0      	b.n	80135c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80135e4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80135e8:	f8bd 3000 	ldrh.w	r3, [sp]
 80135ec:	4413      	add	r3, r2
 80135ee:	b29b      	uxth	r3, r3
 80135f0:	441a      	add	r2, r3
 80135f2:	b212      	sxth	r2, r2
 80135f4:	4296      	cmp	r6, r2
 80135f6:	f8ad 3000 	strh.w	r3, [sp]
 80135fa:	dae0      	bge.n	80135be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80135fc:	1aeb      	subs	r3, r5, r3
 80135fe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013602:	e7dc      	b.n	80135be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013604:	20013f58 	.word	0x20013f58

08013608 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8013608:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801360a:	6803      	ldr	r3, [r0, #0]
 801360c:	4604      	mov	r4, r0
 801360e:	4601      	mov	r1, r0
 8013610:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8013612:	4668      	mov	r0, sp
 8013614:	4798      	blx	r3
 8013616:	2100      	movs	r1, #0
 8013618:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801361c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013620:	9102      	str	r1, [sp, #8]
 8013622:	4668      	mov	r0, sp
 8013624:	a902      	add	r1, sp, #8
 8013626:	f8ad 200c 	strh.w	r2, [sp, #12]
 801362a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801362e:	f7fc ff3d 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8013632:	6823      	ldr	r3, [r4, #0]
 8013634:	4669      	mov	r1, sp
 8013636:	691b      	ldr	r3, [r3, #16]
 8013638:	4620      	mov	r0, r4
 801363a:	4798      	blx	r3
 801363c:	b004      	add	sp, #16
 801363e:	bd10      	pop	{r4, pc}

08013640 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8013640:	2101      	movs	r1, #1
 8013642:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8013646:	490b      	ldr	r1, [pc, #44]	@ (8013674 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8013648:	6001      	str	r1, [r0, #0]
 801364a:	2200      	movs	r2, #0
 801364c:	21ff      	movs	r1, #255	@ 0xff
 801364e:	8082      	strh	r2, [r0, #4]
 8013650:	80c2      	strh	r2, [r0, #6]
 8013652:	8102      	strh	r2, [r0, #8]
 8013654:	8142      	strh	r2, [r0, #10]
 8013656:	8182      	strh	r2, [r0, #12]
 8013658:	81c2      	strh	r2, [r0, #14]
 801365a:	8202      	strh	r2, [r0, #16]
 801365c:	8242      	strh	r2, [r0, #18]
 801365e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013662:	61c2      	str	r2, [r0, #28]
 8013664:	8402      	strh	r2, [r0, #32]
 8013666:	8442      	strh	r2, [r0, #34]	@ 0x22
 8013668:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 801366c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8013670:	6282      	str	r2, [r0, #40]	@ 0x28
 8013672:	4770      	bx	lr
 8013674:	0802e010 	.word	0x0802e010

08013678 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8013678:	f101 0364 	add.w	r3, r1, #100	@ 0x64
 801367c:	4602      	mov	r2, r0
 801367e:	cb03      	ldmia	r3!, {r0, r1}
 8013680:	6010      	str	r0, [r2, #0]
 8013682:	6051      	str	r1, [r2, #4]
 8013684:	4610      	mov	r0, r2
 8013686:	4770      	bx	lr

08013688 <_ZN8touchgfx4LineD1Ev>:
 8013688:	4770      	bx	lr

0801368a <_ZN8touchgfx4LineD0Ev>:
 801368a:	b510      	push	{r4, lr}
 801368c:	2170      	movs	r1, #112	@ 0x70
 801368e:	4604      	mov	r4, r0
 8013690:	f016 fb2a 	bl	8029ce8 <_ZdlPvj>
 8013694:	4620      	mov	r0, r4
 8013696:	bd10      	pop	{r4, pc}

08013698 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8013698:	6800      	ldr	r0, [r0, #0]
 801369a:	2800      	cmp	r0, #0
 801369c:	bfb9      	ittee	lt
 801369e:	2320      	movlt	r3, #32
 80136a0:	fb90 f0f3 	sdivlt	r0, r0, r3
 80136a4:	301f      	addge	r0, #31
 80136a6:	1140      	asrge	r0, r0, #5
 80136a8:	4770      	bx	lr

080136aa <_ZNK8touchgfx4Line17invalidateContentEv>:
 80136aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136ae:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
 80136b2:	b089      	sub	sp, #36	@ 0x24
 80136b4:	4604      	mov	r4, r0
 80136b6:	b353      	cbz	r3, 801370e <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80136b8:	6803      	ldr	r3, [r0, #0]
 80136ba:	4601      	mov	r1, r0
 80136bc:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80136be:	a802      	add	r0, sp, #8
 80136c0:	4798      	blx	r3
 80136c2:	2220      	movs	r2, #32
 80136c4:	f8d4 a02c 	ldr.w	sl, [r4, #44]	@ 0x2c
 80136c8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80136ca:	fb9a f0f2 	sdiv	r0, sl, r2
 80136ce:	fb91 f5f2 	sdiv	r5, r1, r2
 80136d2:	1b40      	subs	r0, r0, r5
 80136d4:	2800      	cmp	r0, #0
 80136d6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80136d8:	fb93 f6f2 	sdiv	r6, r3, r2
 80136dc:	bfb8      	it	lt
 80136de:	4240      	neglt	r0, r0
 80136e0:	0076      	lsls	r6, r6, #1
 80136e2:	4286      	cmp	r6, r0
 80136e4:	f8d4 b000 	ldr.w	fp, [r4]
 80136e8:	dc0c      	bgt.n	8013704 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80136ea:	6b25      	ldr	r5, [r4, #48]	@ 0x30
 80136ec:	f8d4 8038 	ldr.w	r8, [r4, #56]	@ 0x38
 80136f0:	fb95 f0f2 	sdiv	r0, r5, r2
 80136f4:	fb98 f7f2 	sdiv	r7, r8, r2
 80136f8:	1bc0      	subs	r0, r0, r7
 80136fa:	2800      	cmp	r0, #0
 80136fc:	bfb8      	it	lt
 80136fe:	4240      	neglt	r0, r0
 8013700:	4286      	cmp	r6, r0
 8013702:	dd07      	ble.n	8013714 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8013704:	f8db 3010 	ldr.w	r3, [fp, #16]
 8013708:	a902      	add	r1, sp, #8
 801370a:	4620      	mov	r0, r4
 801370c:	4798      	blx	r3
 801370e:	b009      	add	sp, #36	@ 0x24
 8013710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013714:	3301      	adds	r3, #1
 8013716:	2002      	movs	r0, #2
 8013718:	f10d 0920 	add.w	r9, sp, #32
 801371c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8013720:	4103      	asrs	r3, r0
 8013722:	f849 3d08 	str.w	r3, [r9, #-8]!
 8013726:	eb01 060a 	add.w	r6, r1, sl
 801372a:	eb08 0705 	add.w	r7, r8, r5
 801372e:	fb96 f6f0 	sdiv	r6, r6, r0
 8013732:	fb97 f7f0 	sdiv	r7, r7, r0
 8013736:	4648      	mov	r0, r9
 8013738:	9101      	str	r1, [sp, #4]
 801373a:	b236      	sxth	r6, r6
 801373c:	b23f      	sxth	r7, r7
 801373e:	fb96 f6f2 	sdiv	r6, r6, r2
 8013742:	fb97 f7f2 	sdiv	r7, r7, r2
 8013746:	f7ff ffa7 	bl	8013698 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801374a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801374e:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8013752:	9901      	ldr	r1, [sp, #4]
 8013754:	4293      	cmp	r3, r2
 8013756:	fa1f fe87 	uxth.w	lr, r7
 801375a:	fa1f fc86 	uxth.w	ip, r6
 801375e:	eba1 0a0a 	sub.w	sl, r1, sl
 8013762:	b280      	uxth	r0, r0
 8013764:	da54      	bge.n	8013810 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8013766:	ebac 0100 	sub.w	r1, ip, r0
 801376a:	b289      	uxth	r1, r1
 801376c:	4460      	add	r0, ip
 801376e:	f1ba 0f00 	cmp.w	sl, #0
 8013772:	b20e      	sxth	r6, r1
 8013774:	b280      	uxth	r0, r0
 8013776:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801377a:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 801377e:	da29      	bge.n	80137d4 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8013780:	eba8 0505 	sub.w	r5, r8, r5
 8013784:	2d00      	cmp	r5, #0
 8013786:	da2a      	bge.n	80137de <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8013788:	fa1f f88a 	uxth.w	r8, sl
 801378c:	eba0 0008 	sub.w	r0, r0, r8
 8013790:	fa1f f58c 	uxth.w	r5, ip
 8013794:	4443      	add	r3, r8
 8013796:	f8ad 0014 	strh.w	r0, [sp, #20]
 801379a:	1a59      	subs	r1, r3, r1
 801379c:	ebae 0005 	sub.w	r0, lr, r5
 80137a0:	f8ad a010 	strh.w	sl, [sp, #16]
 80137a4:	f8ad c012 	strh.w	ip, [sp, #18]
 80137a8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80137ac:	f8ad 6018 	strh.w	r6, [sp, #24]
 80137b0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80137b4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80137b8:	442a      	add	r2, r5
 80137ba:	eba2 0e0e 	sub.w	lr, r2, lr
 80137be:	f8ad e01e 	strh.w	lr, [sp, #30]
 80137c2:	f8db 3010 	ldr.w	r3, [fp, #16]
 80137c6:	a904      	add	r1, sp, #16
 80137c8:	4620      	mov	r0, r4
 80137ca:	4798      	blx	r3
 80137cc:	6823      	ldr	r3, [r4, #0]
 80137ce:	4649      	mov	r1, r9
 80137d0:	691b      	ldr	r3, [r3, #16]
 80137d2:	e79a      	b.n	801370a <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80137d4:	d003      	beq.n	80137de <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80137d6:	eba8 0505 	sub.w	r5, r8, r5
 80137da:	2d00      	cmp	r5, #0
 80137dc:	dcd4      	bgt.n	8013788 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80137de:	fa1f f88a 	uxth.w	r8, sl
 80137e2:	4443      	add	r3, r8
 80137e4:	fa1f f58c 	uxth.w	r5, ip
 80137e8:	1a59      	subs	r1, r3, r1
 80137ea:	eba0 0008 	sub.w	r0, r0, r8
 80137ee:	ebae 0305 	sub.w	r3, lr, r5
 80137f2:	f8ad 6010 	strh.w	r6, [sp, #16]
 80137f6:	f8ad c012 	strh.w	ip, [sp, #18]
 80137fa:	f8ad 1014 	strh.w	r1, [sp, #20]
 80137fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013802:	f8ad a018 	strh.w	sl, [sp, #24]
 8013806:	f8ad 701a 	strh.w	r7, [sp, #26]
 801380a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801380e:	e7d3      	b.n	80137b8 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8013810:	ebae 0100 	sub.w	r1, lr, r0
 8013814:	b289      	uxth	r1, r1
 8013816:	4470      	add	r0, lr
 8013818:	f1ba 0f00 	cmp.w	sl, #0
 801381c:	b20f      	sxth	r7, r1
 801381e:	b280      	uxth	r0, r0
 8013820:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8013824:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8013828:	da20      	bge.n	801386c <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801382a:	eba8 0505 	sub.w	r5, r8, r5
 801382e:	2d00      	cmp	r5, #0
 8013830:	da21      	bge.n	8013876 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8013832:	fa1f f88e 	uxth.w	r8, lr
 8013836:	fa1f f58a 	uxth.w	r5, sl
 801383a:	4443      	add	r3, r8
 801383c:	442a      	add	r2, r5
 801383e:	f8ad e010 	strh.w	lr, [sp, #16]
 8013842:	1b40      	subs	r0, r0, r5
 8013844:	ebac 0e08 	sub.w	lr, ip, r8
 8013848:	1a51      	subs	r1, r2, r1
 801384a:	eba3 0c0c 	sub.w	ip, r3, ip
 801384e:	f8ad a012 	strh.w	sl, [sp, #18]
 8013852:	f8ad e014 	strh.w	lr, [sp, #20]
 8013856:	f8ad 0016 	strh.w	r0, [sp, #22]
 801385a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801385e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013862:	f8ad c01c 	strh.w	ip, [sp, #28]
 8013866:	f8ad 101e 	strh.w	r1, [sp, #30]
 801386a:	e7aa      	b.n	80137c2 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801386c:	d003      	beq.n	8013876 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801386e:	eba8 0505 	sub.w	r5, r8, r5
 8013872:	2d00      	cmp	r5, #0
 8013874:	dcdd      	bgt.n	8013832 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8013876:	fa1f f58e 	uxth.w	r5, lr
 801387a:	fa1f f88a 	uxth.w	r8, sl
 801387e:	4442      	add	r2, r8
 8013880:	442b      	add	r3, r5
 8013882:	f8ad 7012 	strh.w	r7, [sp, #18]
 8013886:	1a51      	subs	r1, r2, r1
 8013888:	ebac 0705 	sub.w	r7, ip, r5
 801388c:	eba0 0008 	sub.w	r0, r0, r8
 8013890:	eba3 0c0c 	sub.w	ip, r3, ip
 8013894:	f8ad e010 	strh.w	lr, [sp, #16]
 8013898:	f8ad 7014 	strh.w	r7, [sp, #20]
 801389c:	f8ad 1016 	strh.w	r1, [sp, #22]
 80138a0:	f8ad 6018 	strh.w	r6, [sp, #24]
 80138a4:	f8ad a01a 	strh.w	sl, [sp, #26]
 80138a8:	f8ad c01c 	strh.w	ip, [sp, #28]
 80138ac:	f8ad 001e 	strh.w	r0, [sp, #30]
 80138b0:	e787      	b.n	80137c2 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080138b2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80138b2:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80138b6:	bf2c      	ite	cs
 80138b8:	f04f 4280 	movcs.w	r2, #1073741824	@ 0x40000000
 80138bc:	f44f 4280 	movcc.w	r2, #16384	@ 0x4000
 80138c0:	2300      	movs	r3, #0
 80138c2:	1899      	adds	r1, r3, r2
 80138c4:	4288      	cmp	r0, r1
 80138c6:	bf24      	itt	cs
 80138c8:	1853      	addcs	r3, r2, r1
 80138ca:	1a40      	subcs	r0, r0, r1
 80138cc:	0892      	lsrs	r2, r2, #2
 80138ce:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80138d2:	d1f6      	bne.n	80138c2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80138d4:	4618      	mov	r0, r3
 80138d6:	4770      	bx	lr

080138d8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80138d8:	b510      	push	{r4, lr}
 80138da:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80138de:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80138e2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80138e6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80138ea:	13a4      	asrs	r4, r4, #14
 80138ec:	139b      	asrs	r3, r3, #14
 80138ee:	429c      	cmp	r4, r3
 80138f0:	bfb8      	it	lt
 80138f2:	461c      	movlt	r4, r3
 80138f4:	2c01      	cmp	r4, #1
 80138f6:	dd07      	ble.n	8013908 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80138f8:	fb91 f1f4 	sdiv	r1, r1, r4
 80138fc:	fb90 f0f4 	sdiv	r0, r0, r4
 8013900:	f7ff ffea 	bl	80138d8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013904:	4360      	muls	r0, r4
 8013906:	bd10      	pop	{r4, pc}
 8013908:	4340      	muls	r0, r0
 801390a:	fb01 0001 	mla	r0, r1, r1, r0
 801390e:	f7ff ffd0 	bl	80138b2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8013912:	e7f8      	b.n	8013906 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08013914 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8013914:	2800      	cmp	r0, #0
 8013916:	b508      	push	{r3, lr}
 8013918:	da05      	bge.n	8013926 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801391a:	4240      	negs	r0, r0
 801391c:	f7ff fffa 	bl	8013914 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8013920:	4240      	negs	r0, r0
 8013922:	b240      	sxtb	r0, r0
 8013924:	bd08      	pop	{r3, pc}
 8013926:	f5b0 6f80 	cmp.w	r0, #1024	@ 0x400
 801392a:	dc11      	bgt.n	8013950 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801392c:	f5b0 7f35 	cmp.w	r0, #724	@ 0x2d4
 8013930:	dd09      	ble.n	8013946 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8013932:	4340      	muls	r0, r0
 8013934:	f5c0 1080 	rsb	r0, r0, #1048576	@ 0x100000
 8013938:	f7ff ffbb 	bl	80138b2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 801393c:	f7ff ffea 	bl	8013914 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8013940:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 8013944:	e7ed      	b.n	8013922 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8013946:	3003      	adds	r0, #3
 8013948:	10c0      	asrs	r0, r0, #3
 801394a:	4b02      	ldr	r3, [pc, #8]	@ (8013954 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 801394c:	5618      	ldrsb	r0, [r3, r0]
 801394e:	e7e9      	b.n	8013924 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8013950:	2000      	movs	r0, #0
 8013952:	e7e7      	b.n	8013924 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8013954:	0802e080 	.word	0x0802e080

08013958 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8013958:	4281      	cmp	r1, r0
 801395a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801395c:	460c      	mov	r4, r1
 801395e:	4615      	mov	r5, r2
 8013960:	dd07      	ble.n	8013972 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8013962:	4601      	mov	r1, r0
 8013964:	4620      	mov	r0, r4
 8013966:	f7ff fff7 	bl	8013958 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801396a:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 801396e:	b003      	add	sp, #12
 8013970:	bd30      	pop	{r4, r5, pc}
 8013972:	f7ff ffb1 	bl	80138d8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013976:	6028      	str	r0, [r5, #0]
 8013978:	2800      	cmp	r0, #0
 801397a:	d0f8      	beq.n	801396e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 801397c:	4602      	mov	r2, r0
 801397e:	ab01      	add	r3, sp, #4
 8013980:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8013984:	4620      	mov	r0, r4
 8013986:	f005 fa03 	bl	8018d90 <_ZN8touchgfx6muldivElllRl>
 801398a:	f7ff ffc3 	bl	8013914 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 801398e:	e7ee      	b.n	801396e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08013990 <_ZN8touchgfx4LineC1Ev>:
 8013990:	b510      	push	{r4, lr}
 8013992:	4604      	mov	r4, r0
 8013994:	f7ff fe54 	bl	8013640 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8013998:	4b0c      	ldr	r3, [pc, #48]	@ (80139cc <_ZN8touchgfx4LineC1Ev+0x3c>)
 801399a:	6023      	str	r3, [r4, #0]
 801399c:	2220      	movs	r2, #32
 801399e:	2300      	movs	r3, #0
 80139a0:	63e2      	str	r2, [r4, #60]	@ 0x3c
 80139a2:	2212      	movs	r2, #18
 80139a4:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 80139a8:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 80139ac:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80139b0:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 80139b4:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
 80139b8:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
 80139bc:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 80139c0:	e9c4 3319 	strd	r3, r3, [r4, #100]	@ 0x64
 80139c4:	66e2      	str	r2, [r4, #108]	@ 0x6c
 80139c6:	60a3      	str	r3, [r4, #8]
 80139c8:	4620      	mov	r0, r4
 80139ca:	bd10      	pop	{r4, pc}
 80139cc:	0802e0e4 	.word	0x0802e0e4

080139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80139d0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80139d4:	6b47      	ldr	r7, [r0, #52]	@ 0x34
 80139d6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80139d8:	6b85      	ldr	r5, [r0, #56]	@ 0x38
 80139da:	6b02      	ldr	r2, [r0, #48]	@ 0x30
 80139dc:	1aff      	subs	r7, r7, r3
 80139de:	4604      	mov	r4, r0
 80139e0:	eba5 0502 	sub.w	r5, r5, r2
 80139e4:	d142      	bne.n	8013a6c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80139e6:	b955      	cbnz	r5, 80139fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80139e8:	e9c0 3313 	strd	r3, r3, [r0, #76]	@ 0x4c
 80139ec:	e9c0 3311 	strd	r3, r3, [r0, #68]	@ 0x44
 80139f0:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80139f4:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80139f8:	b002      	add	sp, #8
 80139fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80139fe:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8013a02:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8013a06:	4629      	mov	r1, r5
 8013a08:	4642      	mov	r2, r8
 8013a0a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8013a0c:	f005 f9df 	bl	8018dce <_ZN8touchgfx6muldivElll>
 8013a10:	2502      	movs	r5, #2
 8013a12:	4642      	mov	r2, r8
 8013a14:	fb90 f6f5 	sdiv	r6, r0, r5
 8013a18:	4639      	mov	r1, r7
 8013a1a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8013a1c:	f005 f9d7 	bl	8018dce <_ZN8touchgfx6muldivElll>
 8013a20:	f894 9040 	ldrb.w	r9, [r4, #64]	@ 0x40
 8013a24:	fb90 f5f5 	sdiv	r5, r0, r5
 8013a28:	f1b9 0f00 	cmp.w	r9, #0
 8013a2c:	d067      	beq.n	8013afe <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8013a2e:	f1b9 0f02 	cmp.w	r9, #2
 8013a32:	d878      	bhi.n	8013b26 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8013a34:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8013a36:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8013a38:	1b93      	subs	r3, r2, r6
 8013a3a:	1b5b      	subs	r3, r3, r5
 8013a3c:	6463      	str	r3, [r4, #68]	@ 0x44
 8013a3e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013a40:	18e9      	adds	r1, r5, r3
 8013a42:	1b89      	subs	r1, r1, r6
 8013a44:	6561      	str	r1, [r4, #84]	@ 0x54
 8013a46:	1b81      	subs	r1, r0, r6
 8013a48:	4429      	add	r1, r5
 8013a4a:	64a1      	str	r1, [r4, #72]	@ 0x48
 8013a4c:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8013a4e:	4430      	add	r0, r6
 8013a50:	186f      	adds	r7, r5, r1
 8013a52:	4432      	add	r2, r6
 8013a54:	1b49      	subs	r1, r1, r5
 8013a56:	4437      	add	r7, r6
 8013a58:	4428      	add	r0, r5
 8013a5a:	4431      	add	r1, r6
 8013a5c:	1b52      	subs	r2, r2, r5
 8013a5e:	1b5b      	subs	r3, r3, r5
 8013a60:	65a7      	str	r7, [r4, #88]	@ 0x58
 8013a62:	64e0      	str	r0, [r4, #76]	@ 0x4c
 8013a64:	65e1      	str	r1, [r4, #92]	@ 0x5c
 8013a66:	6522      	str	r2, [r4, #80]	@ 0x50
 8013a68:	1b9b      	subs	r3, r3, r6
 8013a6a:	e05b      	b.n	8013b24 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8013a6c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8013a70:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8013a74:	2d00      	cmp	r5, #0
 8013a76:	d0c6      	beq.n	8013a06 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8013a78:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8013a7c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8013a80:	fb93 f2f8 	sdiv	r2, r3, r8
 8013a84:	fb08 3312 	mls	r3, r8, r2, r3
 8013a88:	b353      	cbz	r3, 8013ae0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8013a8a:	fb98 f2f3 	sdiv	r2, r8, r3
 8013a8e:	fb03 8812 	mls	r8, r3, r2, r8
 8013a92:	f1b8 0f00 	cmp.w	r8, #0
 8013a96:	d1f3      	bne.n	8013a80 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8013a98:	2b01      	cmp	r3, #1
 8013a9a:	bf1c      	itt	ne
 8013a9c:	fb95 f5f3 	sdivne	r5, r5, r3
 8013aa0:	fb97 f7f3 	sdivne	r7, r7, r3
 8013aa4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8013aa8:	f24b 5104 	movw	r1, #46340	@ 0xb504
 8013aac:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8013ab0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8013ab4:	428b      	cmp	r3, r1
 8013ab6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8013aba:	4608      	mov	r0, r1
 8013abc:	dd01      	ble.n	8013ac2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8013abe:	428a      	cmp	r2, r1
 8013ac0:	dc10      	bgt.n	8013ae4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8013ac2:	fb90 f3f3 	sdiv	r3, r0, r3
 8013ac6:	fb90 f2f2 	sdiv	r2, r0, r2
 8013aca:	4293      	cmp	r3, r2
 8013acc:	bfa8      	it	ge
 8013ace:	4613      	movge	r3, r2
 8013ad0:	435f      	muls	r7, r3
 8013ad2:	435d      	muls	r5, r3
 8013ad4:	4629      	mov	r1, r5
 8013ad6:	4638      	mov	r0, r7
 8013ad8:	f7ff fefe 	bl	80138d8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8013adc:	4680      	mov	r8, r0
 8013ade:	e792      	b.n	8013a06 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8013ae0:	4643      	mov	r3, r8
 8013ae2:	e7d9      	b.n	8013a98 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8013ae4:	fb93 f3f1 	sdiv	r3, r3, r1
 8013ae8:	fb92 f2f1 	sdiv	r2, r2, r1
 8013aec:	4293      	cmp	r3, r2
 8013aee:	bfcc      	ite	gt
 8013af0:	3301      	addgt	r3, #1
 8013af2:	1c53      	addle	r3, r2, #1
 8013af4:	fb97 f7f3 	sdiv	r7, r7, r3
 8013af8:	fb95 f5f3 	sdiv	r5, r5, r3
 8013afc:	e7ea      	b.n	8013ad4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8013afe:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8013b00:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8013b02:	1b93      	subs	r3, r2, r6
 8013b04:	6463      	str	r3, [r4, #68]	@ 0x44
 8013b06:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013b08:	18e9      	adds	r1, r5, r3
 8013b0a:	6561      	str	r1, [r4, #84]	@ 0x54
 8013b0c:	1b81      	subs	r1, r0, r6
 8013b0e:	64a1      	str	r1, [r4, #72]	@ 0x48
 8013b10:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 8013b12:	4430      	add	r0, r6
 8013b14:	186f      	adds	r7, r5, r1
 8013b16:	4432      	add	r2, r6
 8013b18:	1b49      	subs	r1, r1, r5
 8013b1a:	65a7      	str	r7, [r4, #88]	@ 0x58
 8013b1c:	64e0      	str	r0, [r4, #76]	@ 0x4c
 8013b1e:	65e1      	str	r1, [r4, #92]	@ 0x5c
 8013b20:	6522      	str	r2, [r4, #80]	@ 0x50
 8013b22:	1b5b      	subs	r3, r3, r5
 8013b24:	6623      	str	r3, [r4, #96]	@ 0x60
 8013b26:	6c62      	ldr	r2, [r4, #68]	@ 0x44
 8013b28:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8013b2a:	9200      	str	r2, [sp, #0]
 8013b2c:	9301      	str	r3, [sp, #4]
 8013b2e:	f104 0148 	add.w	r1, r4, #72	@ 0x48
 8013b32:	f104 0c54 	add.w	ip, r4, #84	@ 0x54
 8013b36:	680f      	ldr	r7, [r1, #0]
 8013b38:	9800      	ldr	r0, [sp, #0]
 8013b3a:	42ba      	cmp	r2, r7
 8013b3c:	bfa8      	it	ge
 8013b3e:	463a      	movge	r2, r7
 8013b40:	4287      	cmp	r7, r0
 8013b42:	bfc8      	it	gt
 8013b44:	9700      	strgt	r7, [sp, #0]
 8013b46:	690f      	ldr	r7, [r1, #16]
 8013b48:	9801      	ldr	r0, [sp, #4]
 8013b4a:	42bb      	cmp	r3, r7
 8013b4c:	bfa8      	it	ge
 8013b4e:	463b      	movge	r3, r7
 8013b50:	3104      	adds	r1, #4
 8013b52:	4287      	cmp	r7, r0
 8013b54:	bfc8      	it	gt
 8013b56:	9701      	strgt	r7, [sp, #4]
 8013b58:	458c      	cmp	ip, r1
 8013b5a:	d1ec      	bne.n	8013b36 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8013b5c:	4668      	mov	r0, sp
 8013b5e:	2720      	movs	r7, #32
 8013b60:	fb92 f8f7 	sdiv	r8, r2, r7
 8013b64:	fb93 f7f7 	sdiv	r7, r3, r7
 8013b68:	f7ff fd96 	bl	8013698 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013b6c:	4682      	mov	sl, r0
 8013b6e:	a801      	add	r0, sp, #4
 8013b70:	f7ff fd92 	bl	8013698 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013b74:	ebaa 0208 	sub.w	r2, sl, r8
 8013b78:	1bc0      	subs	r0, r0, r7
 8013b7a:	f1b9 0f01 	cmp.w	r9, #1
 8013b7e:	f8a4 8064 	strh.w	r8, [r4, #100]	@ 0x64
 8013b82:	f8a4 7066 	strh.w	r7, [r4, #102]	@ 0x66
 8013b86:	f8a4 2068 	strh.w	r2, [r4, #104]	@ 0x68
 8013b8a:	f8a4 006a 	strh.w	r0, [r4, #106]	@ 0x6a
 8013b8e:	f47f af33 	bne.w	80139f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8013b92:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8013b94:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8013b96:	1b83      	subs	r3, r0, r6
 8013b98:	6463      	str	r3, [r4, #68]	@ 0x44
 8013b9a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013b9c:	18ea      	adds	r2, r5, r3
 8013b9e:	6562      	str	r2, [r4, #84]	@ 0x54
 8013ba0:	1b8a      	subs	r2, r1, r6
 8013ba2:	64a2      	str	r2, [r4, #72]	@ 0x48
 8013ba4:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8013ba6:	4431      	add	r1, r6
 8013ba8:	18af      	adds	r7, r5, r2
 8013baa:	4406      	add	r6, r0
 8013bac:	1b52      	subs	r2, r2, r5
 8013bae:	1b5d      	subs	r5, r3, r5
 8013bb0:	65a7      	str	r7, [r4, #88]	@ 0x58
 8013bb2:	64e1      	str	r1, [r4, #76]	@ 0x4c
 8013bb4:	65e2      	str	r2, [r4, #92]	@ 0x5c
 8013bb6:	6526      	str	r6, [r4, #80]	@ 0x50
 8013bb8:	6625      	str	r5, [r4, #96]	@ 0x60
 8013bba:	e71d      	b.n	80139f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08013bbc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8013bbc:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8013bbe:	428b      	cmp	r3, r1
 8013bc0:	d102      	bne.n	8013bc8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8013bc2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013bc4:	4293      	cmp	r3, r2
 8013bc6:	d003      	beq.n	8013bd0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8013bc8:	e9c0 120b 	strd	r1, r2, [r0, #44]	@ 0x2c
 8013bcc:	f7ff bf00 	b.w	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013bd0:	4770      	bx	lr

08013bd2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8013bd2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8013bd4:	428b      	cmp	r3, r1
 8013bd6:	d102      	bne.n	8013bde <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8013bd8:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8013bda:	4293      	cmp	r3, r2
 8013bdc:	d003      	beq.n	8013be6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8013bde:	e9c0 120d 	strd	r1, r2, [r0, #52]	@ 0x34
 8013be2:	f7ff bef5 	b.w	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013be6:	4770      	bx	lr

08013be8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8013be8:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
 8013bec:	f7ff bef0 	b.w	80139d0 <_ZN8touchgfx4Line17updateCachedShapeEv>

08013bf0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8013bf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013bf4:	4604      	mov	r4, r0
 8013bf6:	b0a4      	sub	sp, #144	@ 0x90
 8013bf8:	6a85      	ldr	r5, [r0, #40]	@ 0x28
 8013bfa:	460e      	mov	r6, r1
 8013bfc:	4601      	mov	r1, r0
 8013bfe:	a805      	add	r0, sp, #20
 8013c00:	f004 fc92 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013c04:	6823      	ldr	r3, [r4, #0]
 8013c06:	4620      	mov	r0, r4
 8013c08:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8013c0a:	4798      	blx	r3
 8013c0c:	4633      	mov	r3, r6
 8013c0e:	9000      	str	r0, [sp, #0]
 8013c10:	aa05      	add	r2, sp, #20
 8013c12:	4629      	mov	r1, r5
 8013c14:	a807      	add	r0, sp, #28
 8013c16:	f015 fbe5 	bl	80293e4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8013c1a:	2300      	movs	r3, #0
 8013c1c:	9303      	str	r3, [sp, #12]
 8013c1e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
 8013c22:	2b01      	cmp	r3, #1
 8013c24:	d17c      	bne.n	8013d20 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x130>
 8013c26:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8013c28:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013c2a:	6d61      	ldr	r1, [r4, #84]	@ 0x54
 8013c2c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013c2e:	1ac0      	subs	r0, r0, r3
 8013c30:	eba1 0102 	sub.w	r1, r1, r2
 8013c34:	d437      	bmi.n	8013ca6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb6>
 8013c36:	2900      	cmp	r1, #0
 8013c38:	aa03      	add	r2, sp, #12
 8013c3a:	db2e      	blt.n	8013c9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xaa>
 8013c3c:	f7ff fe8c 	bl	8013958 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013c40:	f100 065a 	add.w	r6, r0, #90	@ 0x5a
 8013c44:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8013c46:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8013c48:	a807      	add	r0, sp, #28
 8013c4a:	f015 fd17 	bl	802967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013c4e:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8013c50:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8013c52:	a807      	add	r0, sp, #28
 8013c54:	f015 fd5f 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013c58:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
 8013c5a:	2db3      	cmp	r5, #179	@ 0xb3
 8013c5c:	dc33      	bgt.n	8013cc6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd6>
 8013c5e:	eba6 0805 	sub.w	r8, r6, r5
 8013c62:	4640      	mov	r0, r8
 8013c64:	f7fe ff98 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 8013c68:	a904      	add	r1, sp, #16
 8013c6a:	9004      	str	r0, [sp, #16]
 8013c6c:	a803      	add	r0, sp, #12
 8013c6e:	f7fe ff88 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c72:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8013c74:	1847      	adds	r7, r0, r1
 8013c76:	f1c8 005a 	rsb	r0, r8, #90	@ 0x5a
 8013c7a:	f7fe ff8d 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 8013c7e:	a905      	add	r1, sp, #20
 8013c80:	9005      	str	r0, [sp, #20]
 8013c82:	a803      	add	r0, sp, #12
 8013c84:	f7fe ff7d 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c88:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8013c8a:	4639      	mov	r1, r7
 8013c8c:	1a12      	subs	r2, r2, r0
 8013c8e:	a807      	add	r0, sp, #28
 8013c90:	f015 fd41 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013c94:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8013c96:	441d      	add	r5, r3
 8013c98:	e7df      	b.n	8013c5a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x6a>
 8013c9a:	4249      	negs	r1, r1
 8013c9c:	f7ff fe5c 	bl	8013958 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013ca0:	f1c0 065a 	rsb	r6, r0, #90	@ 0x5a
 8013ca4:	e7ce      	b.n	8013c44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8013ca6:	2900      	cmp	r1, #0
 8013ca8:	f1c0 0000 	rsb	r0, r0, #0
 8013cac:	aa03      	add	r2, sp, #12
 8013cae:	db04      	blt.n	8013cba <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xca>
 8013cb0:	f7ff fe52 	bl	8013958 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013cb4:	f5c0 7687 	rsb	r6, r0, #270	@ 0x10e
 8013cb8:	e7c4      	b.n	8013c44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8013cba:	4249      	negs	r1, r1
 8013cbc:	f7ff fe4c 	bl	8013958 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013cc0:	f500 7687 	add.w	r6, r0, #270	@ 0x10e
 8013cc4:	e7be      	b.n	8013c44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x54>
 8013cc6:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8013cc8:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8013cca:	a807      	add	r0, sp, #28
 8013ccc:	f015 fd23 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013cd0:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8013cd2:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8013cd4:	a807      	add	r0, sp, #28
 8013cd6:	f015 fd1e 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013cda:	6ee5      	ldr	r5, [r4, #108]	@ 0x6c
 8013cdc:	f1c5 05b4 	rsb	r5, r5, #180	@ 0xb4
 8013ce0:	2d00      	cmp	r5, #0
 8013ce2:	dd31      	ble.n	8013d48 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x158>
 8013ce4:	eb05 0806 	add.w	r8, r5, r6
 8013ce8:	4640      	mov	r0, r8
 8013cea:	f7fe ff55 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 8013cee:	a904      	add	r1, sp, #16
 8013cf0:	9004      	str	r0, [sp, #16]
 8013cf2:	a803      	add	r0, sp, #12
 8013cf4:	f7fe ff45 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013cf8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8013cfa:	1847      	adds	r7, r0, r1
 8013cfc:	f1c8 005a 	rsb	r0, r8, #90	@ 0x5a
 8013d00:	f7fe ff4a 	bl	8012b98 <_ZN8touchgfx7CWRUtil4sineEi>
 8013d04:	a905      	add	r1, sp, #20
 8013d06:	9005      	str	r0, [sp, #20]
 8013d08:	a803      	add	r0, sp, #12
 8013d0a:	f7fe ff3a 	bl	8012b82 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d0e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013d10:	4639      	mov	r1, r7
 8013d12:	1a12      	subs	r2, r2, r0
 8013d14:	a807      	add	r0, sp, #28
 8013d16:	f015 fcfe 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d1a:	6ee3      	ldr	r3, [r4, #108]	@ 0x6c
 8013d1c:	1aed      	subs	r5, r5, r3
 8013d1e:	e7df      	b.n	8013ce0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xf0>
 8013d20:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8013d22:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 8013d24:	a807      	add	r0, sp, #28
 8013d26:	f015 fca9 	bl	802967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013d2a:	6da2      	ldr	r2, [r4, #88]	@ 0x58
 8013d2c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
 8013d2e:	a807      	add	r0, sp, #28
 8013d30:	f015 fcf1 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d34:	6de2      	ldr	r2, [r4, #92]	@ 0x5c
 8013d36:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 8013d38:	a807      	add	r0, sp, #28
 8013d3a:	f015 fcec 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d3e:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8013d40:	6d21      	ldr	r1, [r4, #80]	@ 0x50
 8013d42:	a807      	add	r0, sp, #28
 8013d44:	f015 fce7 	bl	8029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d48:	21ff      	movs	r1, #255	@ 0xff
 8013d4a:	a807      	add	r0, sp, #28
 8013d4c:	f015 fbde 	bl	802950c <_ZN8touchgfx6Canvas6renderEh>
 8013d50:	4b04      	ldr	r3, [pc, #16]	@ (8013d64 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x174>)
 8013d52:	9307      	str	r3, [sp, #28]
 8013d54:	4604      	mov	r4, r0
 8013d56:	a80c      	add	r0, sp, #48	@ 0x30
 8013d58:	f000 ff1a 	bl	8014b90 <_ZN8touchgfx7OutlineD1Ev>
 8013d5c:	4620      	mov	r0, r4
 8013d5e:	b024      	add	sp, #144	@ 0x90
 8013d60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013d64:	0802e7e0 	.word	0x0802e7e0

08013d68 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013d68:	2000      	movs	r0, #0
 8013d6a:	4770      	bx	lr

08013d6c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8013d6c:	4b07      	ldr	r3, [pc, #28]	@ (8013d8c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8013d6e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013d70:	881b      	ldrh	r3, [r3, #0]
 8013d72:	4293      	cmp	r3, r2
 8013d74:	bf81      	itttt	hi
 8013d76:	4b06      	ldrhi	r3, [pc, #24]	@ (8013d90 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013d78:	681b      	ldrhi	r3, [r3, #0]
 8013d7a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8013d7e:	7858      	ldrbhi	r0, [r3, #1]
 8013d80:	bf8c      	ite	hi
 8013d82:	f000 0003 	andhi.w	r0, r0, #3
 8013d86:	2000      	movls	r0, #0
 8013d88:	4770      	bx	lr
 8013d8a:	bf00      	nop
 8013d8c:	20013fbc 	.word	0x20013fbc
 8013d90:	20013fb8 	.word	0x20013fb8

08013d94 <_ZN8touchgfx8TextAreaD1Ev>:
 8013d94:	4770      	bx	lr
	...

08013d98 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013d98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013d9c:	4b10      	ldr	r3, [pc, #64]	@ (8013de0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8013d9e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8013da0:	881b      	ldrh	r3, [r3, #0]
 8013da2:	428b      	cmp	r3, r1
 8013da4:	4604      	mov	r4, r0
 8013da6:	d918      	bls.n	8013dda <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8013da8:	6803      	ldr	r3, [r0, #0]
 8013daa:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8013dac:	4b0d      	ldr	r3, [pc, #52]	@ (8013de4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8013dae:	6818      	ldr	r0, [r3, #0]
 8013db0:	f7f3 fb14 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8013db4:	6823      	ldr	r3, [r4, #0]
 8013db6:	4606      	mov	r6, r0
 8013db8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013dba:	4620      	mov	r0, r4
 8013dbc:	4798      	blx	r3
 8013dbe:	6823      	ldr	r3, [r4, #0]
 8013dc0:	4607      	mov	r7, r0
 8013dc2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013dc6:	4620      	mov	r0, r4
 8013dc8:	4798      	blx	r3
 8013dca:	463a      	mov	r2, r7
 8013dcc:	4603      	mov	r3, r0
 8013dce:	4631      	mov	r1, r6
 8013dd0:	4620      	mov	r0, r4
 8013dd2:	46ac      	mov	ip, r5
 8013dd4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013dd8:	4760      	bx	ip
 8013dda:	2000      	movs	r0, #0
 8013ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013de0:	20013fbc 	.word	0x20013fbc
 8013de4:	20013fc4 	.word	0x20013fc4

08013de8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8013de8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013dec:	4b17      	ldr	r3, [pc, #92]	@ (8013e4c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8013dee:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8013df0:	881b      	ldrh	r3, [r3, #0]
 8013df2:	428b      	cmp	r3, r1
 8013df4:	4604      	mov	r4, r0
 8013df6:	d926      	bls.n	8013e46 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8013df8:	4b15      	ldr	r3, [pc, #84]	@ (8013e50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8013dfa:	681b      	ldr	r3, [r3, #0]
 8013dfc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013e00:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013e04:	4b13      	ldr	r3, [pc, #76]	@ (8013e54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8013e06:	7855      	ldrb	r5, [r2, #1]
 8013e08:	681b      	ldr	r3, [r3, #0]
 8013e0a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8013e0e:	6833      	ldr	r3, [r6, #0]
 8013e10:	69df      	ldr	r7, [r3, #28]
 8013e12:	4b11      	ldr	r3, [pc, #68]	@ (8013e58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013e14:	6818      	ldr	r0, [r3, #0]
 8013e16:	f7f3 fae1 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8013e1a:	6823      	ldr	r3, [r4, #0]
 8013e1c:	4680      	mov	r8, r0
 8013e1e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013e20:	4620      	mov	r0, r4
 8013e22:	4798      	blx	r3
 8013e24:	6823      	ldr	r3, [r4, #0]
 8013e26:	4681      	mov	r9, r0
 8013e28:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013e2c:	4620      	mov	r0, r4
 8013e2e:	4798      	blx	r3
 8013e30:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013e34:	9000      	str	r0, [sp, #0]
 8013e36:	464b      	mov	r3, r9
 8013e38:	4642      	mov	r2, r8
 8013e3a:	4629      	mov	r1, r5
 8013e3c:	4630      	mov	r0, r6
 8013e3e:	47b8      	blx	r7
 8013e40:	b003      	add	sp, #12
 8013e42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013e46:	2000      	movs	r0, #0
 8013e48:	e7fa      	b.n	8013e40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8013e4a:	bf00      	nop
 8013e4c:	20013fbc 	.word	0x20013fbc
 8013e50:	20013fb8 	.word	0x20013fb8
 8013e54:	20013fc0 	.word	0x20013fc0
 8013e58:	20013fc4 	.word	0x20013fc4

08013e5c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8013e5c:	b40e      	push	{r1, r2, r3}
 8013e5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013e62:	4b2f      	ldr	r3, [pc, #188]	@ (8013f20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013e64:	881a      	ldrh	r2, [r3, #0]
 8013e66:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8013e68:	429a      	cmp	r2, r3
 8013e6a:	b09d      	sub	sp, #116	@ 0x74
 8013e6c:	4604      	mov	r4, r0
 8013e6e:	d954      	bls.n	8013f1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013e70:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8013f24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8013e74:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8013f28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8013e78:	aa26      	add	r2, sp, #152	@ 0x98
 8013e7a:	9202      	str	r2, [sp, #8]
 8013e7c:	f8d9 2000 	ldr.w	r2, [r9]
 8013e80:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013e84:	f8d8 3000 	ldr.w	r3, [r8]
 8013e88:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013e8c:	682b      	ldr	r3, [r5, #0]
 8013e8e:	4628      	mov	r0, r5
 8013e90:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013e92:	4798      	blx	r3
 8013e94:	b207      	sxth	r7, r0
 8013e96:	4606      	mov	r6, r0
 8013e98:	a803      	add	r0, sp, #12
 8013e9a:	f005 fb28 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 8013e9e:	682b      	ldr	r3, [r5, #0]
 8013ea0:	4628      	mov	r0, r5
 8013ea2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013ea4:	4798      	blx	r3
 8013ea6:	682b      	ldr	r3, [r5, #0]
 8013ea8:	4682      	mov	sl, r0
 8013eaa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013eac:	4628      	mov	r0, r5
 8013eae:	4798      	blx	r3
 8013eb0:	4653      	mov	r3, sl
 8013eb2:	9000      	str	r0, [sp, #0]
 8013eb4:	9a02      	ldr	r2, [sp, #8]
 8013eb6:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8013eb8:	a803      	add	r0, sp, #12
 8013eba:	f005 fb73 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013ebe:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8013ec0:	f8d9 3000 	ldr.w	r3, [r9]
 8013ec4:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8013ec8:	8925      	ldrh	r5, [r4, #8]
 8013eca:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8013ece:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8013ed2:	eba5 050c 	sub.w	r5, r5, ip
 8013ed6:	784a      	ldrb	r2, [r1, #1]
 8013ed8:	f8d8 3000 	ldr.w	r3, [r8]
 8013edc:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8013ee0:	b22d      	sxth	r5, r5
 8013ee2:	9500      	str	r5, [sp, #0]
 8013ee4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8013ee8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013eec:	a803      	add	r0, sp, #12
 8013eee:	f002 fd4f 	bl	8016990 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8013ef2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8013ef6:	18b9      	adds	r1, r7, r2
 8013ef8:	2900      	cmp	r1, #0
 8013efa:	b203      	sxth	r3, r0
 8013efc:	dd0b      	ble.n	8013f16 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8013efe:	3b01      	subs	r3, #1
 8013f00:	fb13 f302 	smulbb	r3, r3, r2
 8013f04:	fb16 3300 	smlabb	r3, r6, r0, r3
 8013f08:	b21f      	sxth	r7, r3
 8013f0a:	4638      	mov	r0, r7
 8013f0c:	b01d      	add	sp, #116	@ 0x74
 8013f0e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013f12:	b003      	add	sp, #12
 8013f14:	4770      	bx	lr
 8013f16:	2b00      	cmp	r3, #0
 8013f18:	dcf7      	bgt.n	8013f0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8013f1a:	2700      	movs	r7, #0
 8013f1c:	e7f5      	b.n	8013f0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8013f1e:	bf00      	nop
 8013f20:	20013fbc 	.word	0x20013fbc
 8013f24:	20013fb8 	.word	0x20013fb8
 8013f28:	20013fc0 	.word	0x20013fc0

08013f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8013f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f30:	4bbc      	ldr	r3, [pc, #752]	@ (8014224 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013f32:	460c      	mov	r4, r1
 8013f34:	881b      	ldrh	r3, [r3, #0]
 8013f36:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8013f38:	428b      	cmp	r3, r1
 8013f3a:	b0a9      	sub	sp, #164	@ 0xa4
 8013f3c:	4680      	mov	r8, r0
 8013f3e:	d809      	bhi.n	8013f54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013f40:	2300      	movs	r3, #0
 8013f42:	f04f 32ff 	mov.w	r2, #4294967295
 8013f46:	e9c0 3200 	strd	r3, r2, [r0]
 8013f4a:	6083      	str	r3, [r0, #8]
 8013f4c:	4640      	mov	r0, r8
 8013f4e:	b029      	add	sp, #164	@ 0xa4
 8013f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f54:	4eb4      	ldr	r6, [pc, #720]	@ (8014228 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8013f56:	6833      	ldr	r3, [r6, #0]
 8013f58:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8013f5c:	4bb3      	ldr	r3, [pc, #716]	@ (801422c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8013f5e:	681b      	ldr	r3, [r3, #0]
 8013f60:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013f64:	4bb2      	ldr	r3, [pc, #712]	@ (8014230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013f66:	6818      	ldr	r0, [r3, #0]
 8013f68:	f7f3 fa38 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8013f6c:	682b      	ldr	r3, [r5, #0]
 8013f6e:	4681      	mov	r9, r0
 8013f70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013f72:	4628      	mov	r0, r5
 8013f74:	4798      	blx	r3
 8013f76:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8013f78:	b203      	sxth	r3, r0
 8013f7a:	4407      	add	r7, r0
 8013f7c:	9304      	str	r3, [sp, #16]
 8013f7e:	b2bb      	uxth	r3, r7
 8013f80:	9303      	str	r3, [sp, #12]
 8013f82:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8013f86:	4682      	mov	sl, r0
 8013f88:	a80f      	add	r0, sp, #60	@ 0x3c
 8013f8a:	2b00      	cmp	r3, #0
 8013f8c:	f040 80a6 	bne.w	80140dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8013f90:	f005 faad 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 8013f94:	682b      	ldr	r3, [r5, #0]
 8013f96:	4628      	mov	r0, r5
 8013f98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013f9a:	4798      	blx	r3
 8013f9c:	682b      	ldr	r3, [r5, #0]
 8013f9e:	4606      	mov	r6, r0
 8013fa0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013fa2:	4628      	mov	r0, r5
 8013fa4:	4798      	blx	r3
 8013fa6:	6823      	ldr	r3, [r4, #0]
 8013fa8:	4607      	mov	r7, r0
 8013faa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013fac:	4620      	mov	r0, r4
 8013fae:	4798      	blx	r3
 8013fb0:	6823      	ldr	r3, [r4, #0]
 8013fb2:	4683      	mov	fp, r0
 8013fb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013fb8:	4620      	mov	r0, r4
 8013fba:	4798      	blx	r3
 8013fbc:	463b      	mov	r3, r7
 8013fbe:	e9cd b000 	strd	fp, r0, [sp]
 8013fc2:	4649      	mov	r1, r9
 8013fc4:	4632      	mov	r2, r6
 8013fc6:	a80f      	add	r0, sp, #60	@ 0x3c
 8013fc8:	f005 fb01 	bl	80195ce <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8013fcc:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8013fd0:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8014228 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8013fd4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8013fd8:	f04f 0600 	mov.w	r6, #0
 8013fdc:	bf0c      	ite	eq
 8013fde:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8013fe2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8013fe6:	4637      	mov	r7, r6
 8013fe8:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8013fea:	f8db 3000 	ldr.w	r3, [fp]
 8013fee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013ff2:	4629      	mov	r1, r5
 8013ff4:	785b      	ldrb	r3, [r3, #1]
 8013ff6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013ffa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013ffe:	a80f      	add	r0, sp, #60	@ 0x3c
 8014000:	f002 f9cd 	bl	801639e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014004:	9b03      	ldr	r3, [sp, #12]
 8014006:	4286      	cmp	r6, r0
 8014008:	bfb8      	it	lt
 801400a:	4606      	movlt	r6, r0
 801400c:	3701      	adds	r7, #1
 801400e:	eba9 0903 	sub.w	r9, r9, r3
 8014012:	a80f      	add	r0, sp, #60	@ 0x3c
 8014014:	b236      	sxth	r6, r6
 8014016:	b2bf      	uxth	r7, r7
 8014018:	fa0f f989 	sxth.w	r9, r9
 801401c:	f005 fa8e 	bl	801953c <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014020:	b918      	cbnz	r0, 801402a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014022:	7a2b      	ldrb	r3, [r5, #8]
 8014024:	444b      	add	r3, r9
 8014026:	2b00      	cmp	r3, #0
 8014028:	dcde      	bgt.n	8013fe8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801402a:	9b03      	ldr	r3, [sp, #12]
 801402c:	9a04      	ldr	r2, [sp, #16]
 801402e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8014032:	fb13 f707 	smulbb	r7, r3, r7
 8014036:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8014038:	1aff      	subs	r7, r7, r3
 801403a:	b2bf      	uxth	r7, r7
 801403c:	b23b      	sxth	r3, r7
 801403e:	429a      	cmp	r2, r3
 8014040:	bfa8      	it	ge
 8014042:	4657      	movge	r7, sl
 8014044:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8014048:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801404c:	6823      	ldr	r3, [r4, #0]
 801404e:	bf08      	it	eq
 8014050:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8014054:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014056:	bf18      	it	ne
 8014058:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801405c:	4620      	mov	r0, r4
 801405e:	4798      	blx	r3
 8014060:	444f      	add	r7, r9
 8014062:	fa1f f987 	uxth.w	r9, r7
 8014066:	2801      	cmp	r0, #1
 8014068:	fa0f f789 	sxth.w	r7, r9
 801406c:	b2b3      	uxth	r3, r6
 801406e:	f000 80e1 	beq.w	8014234 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8014072:	2802      	cmp	r0, #2
 8014074:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8014078:	f000 80e2 	beq.w	8014240 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801407c:	7aea      	ldrb	r2, [r5, #11]
 801407e:	7b2d      	ldrb	r5, [r5, #12]
 8014080:	b236      	sxth	r6, r6
 8014082:	1ab6      	subs	r6, r6, r2
 8014084:	442a      	add	r2, r5
 8014086:	4413      	add	r3, r2
 8014088:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 801408c:	fa1f fa86 	uxth.w	sl, r6
 8014090:	b29b      	uxth	r3, r3
 8014092:	2a02      	cmp	r2, #2
 8014094:	fa0f fb8a 	sxth.w	fp, sl
 8014098:	b21e      	sxth	r6, r3
 801409a:	f000 80d5 	beq.w	8014248 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801409e:	2a03      	cmp	r2, #3
 80140a0:	f000 80dd 	beq.w	801425e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80140a4:	2a01      	cmp	r2, #1
 80140a6:	f040 80e5 	bne.w	8014274 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80140aa:	8925      	ldrh	r5, [r4, #8]
 80140ac:	4633      	mov	r3, r6
 80140ae:	eba5 0909 	sub.w	r9, r5, r9
 80140b2:	463e      	mov	r6, r7
 80140b4:	465d      	mov	r5, fp
 80140b6:	461f      	mov	r7, r3
 80140b8:	fa0f fb89 	sxth.w	fp, r9
 80140bc:	4b5c      	ldr	r3, [pc, #368]	@ (8014230 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80140be:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80140c0:	6818      	ldr	r0, [r3, #0]
 80140c2:	f7f3 f98b 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80140c6:	f8a8 b000 	strh.w	fp, [r8]
 80140ca:	f8a8 5002 	strh.w	r5, [r8, #2]
 80140ce:	f8a8 6004 	strh.w	r6, [r8, #4]
 80140d2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80140d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80140da:	e737      	b.n	8013f4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80140dc:	f005 fa07 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 80140e0:	682b      	ldr	r3, [r5, #0]
 80140e2:	4628      	mov	r0, r5
 80140e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80140e6:	4798      	blx	r3
 80140e8:	682b      	ldr	r3, [r5, #0]
 80140ea:	4607      	mov	r7, r0
 80140ec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80140ee:	4628      	mov	r0, r5
 80140f0:	4798      	blx	r3
 80140f2:	6823      	ldr	r3, [r4, #0]
 80140f4:	4683      	mov	fp, r0
 80140f6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80140f8:	4620      	mov	r0, r4
 80140fa:	4798      	blx	r3
 80140fc:	6822      	ldr	r2, [r4, #0]
 80140fe:	9005      	str	r0, [sp, #20]
 8014100:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8014104:	4620      	mov	r0, r4
 8014106:	4790      	blx	r2
 8014108:	9b05      	ldr	r3, [sp, #20]
 801410a:	9001      	str	r0, [sp, #4]
 801410c:	463a      	mov	r2, r7
 801410e:	4649      	mov	r1, r9
 8014110:	9300      	str	r3, [sp, #0]
 8014112:	a80f      	add	r0, sp, #60	@ 0x3c
 8014114:	465b      	mov	r3, fp
 8014116:	f005 fa5a 	bl	80195ce <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801411a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801411e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8014122:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8014124:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8014128:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801412c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014130:	bf0a      	itet	eq
 8014132:	464a      	moveq	r2, r9
 8014134:	461a      	movne	r2, r3
 8014136:	4699      	moveq	r9, r3
 8014138:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 801413c:	1ad2      	subs	r2, r2, r3
 801413e:	6833      	ldr	r3, [r6, #0]
 8014140:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8014144:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014148:	af0f      	add	r7, sp, #60	@ 0x3c
 801414a:	7859      	ldrb	r1, [r3, #1]
 801414c:	9707      	str	r7, [sp, #28]
 801414e:	2300      	movs	r3, #0
 8014150:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8014154:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014158:	f88d 1020 	strb.w	r1, [sp, #32]
 801415c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8014160:	9509      	str	r5, [sp, #36]	@ 0x24
 8014162:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014166:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 801416a:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 801416e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014172:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8014176:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801417a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801417e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8014182:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8014186:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801418a:	b350      	cbz	r0, 80141e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801418c:	682b      	ldr	r3, [r5, #0]
 801418e:	4628      	mov	r0, r5
 8014190:	695b      	ldr	r3, [r3, #20]
 8014192:	4798      	blx	r3
 8014194:	4607      	mov	r7, r0
 8014196:	b320      	cbz	r0, 80141e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014198:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801419a:	6803      	ldr	r3, [r0, #0]
 801419c:	4639      	mov	r1, r7
 801419e:	68db      	ldr	r3, [r3, #12]
 80141a0:	4798      	blx	r3
 80141a2:	4606      	mov	r6, r0
 80141a4:	b1e8      	cbz	r0, 80141e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80141a6:	7b43      	ldrb	r3, [r0, #13]
 80141a8:	7a82      	ldrb	r2, [r0, #10]
 80141aa:	005b      	lsls	r3, r3, #1
 80141ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80141b0:	4313      	orrs	r3, r2
 80141b2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80141b6:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 80141ba:	2b06      	cmp	r3, #6
 80141bc:	d111      	bne.n	80141e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80141be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80141c0:	6803      	ldr	r3, [r0, #0]
 80141c2:	4632      	mov	r2, r6
 80141c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80141c6:	4639      	mov	r1, r7
 80141c8:	4798      	blx	r3
 80141ca:	7b73      	ldrb	r3, [r6, #13]
 80141cc:	005b      	lsls	r3, r3, #1
 80141ce:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80141d2:	7ab3      	ldrb	r3, [r6, #10]
 80141d4:	4313      	orrs	r3, r2
 80141d6:	4418      	add	r0, r3
 80141d8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80141dc:	4418      	add	r0, r3
 80141de:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 80141e2:	2600      	movs	r6, #0
 80141e4:	4637      	mov	r7, r6
 80141e6:	a806      	add	r0, sp, #24
 80141e8:	f002 face 	bl	8016788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80141ec:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 80141f0:	9b03      	ldr	r3, [sp, #12]
 80141f2:	4286      	cmp	r6, r0
 80141f4:	eba9 0903 	sub.w	r9, r9, r3
 80141f8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80141fc:	bfb8      	it	lt
 80141fe:	4606      	movlt	r6, r0
 8014200:	3701      	adds	r7, #1
 8014202:	b236      	sxth	r6, r6
 8014204:	b2bf      	uxth	r7, r7
 8014206:	fa0f f989 	sxth.w	r9, r9
 801420a:	2b00      	cmp	r3, #0
 801420c:	f43f af0d 	beq.w	801402a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014210:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8014214:	2b00      	cmp	r3, #0
 8014216:	f47f af08 	bne.w	801402a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801421a:	7a2b      	ldrb	r3, [r5, #8]
 801421c:	444b      	add	r3, r9
 801421e:	2b00      	cmp	r3, #0
 8014220:	dce1      	bgt.n	80141e6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8014222:	e702      	b.n	801402a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014224:	20013fbc 	.word	0x20013fbc
 8014228:	20013fb8 	.word	0x20013fb8
 801422c:	20013fc0 	.word	0x20013fc0
 8014230:	20013fc4 	.word	0x20013fc4
 8014234:	ebaa 0606 	sub.w	r6, sl, r6
 8014238:	2002      	movs	r0, #2
 801423a:	fb96 f6f0 	sdiv	r6, r6, r0
 801423e:	e71d      	b.n	801407c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8014240:	441e      	add	r6, r3
 8014242:	ebaa 0606 	sub.w	r6, sl, r6
 8014246:	e719      	b.n	801407c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8014248:	8925      	ldrh	r5, [r4, #8]
 801424a:	1aed      	subs	r5, r5, r3
 801424c:	eba5 050a 	sub.w	r5, r5, sl
 8014250:	fa0f fb85 	sxth.w	fp, r5
 8014254:	8965      	ldrh	r5, [r4, #10]
 8014256:	eba5 0509 	sub.w	r5, r5, r9
 801425a:	b22d      	sxth	r5, r5
 801425c:	e72e      	b.n	80140bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801425e:	8965      	ldrh	r5, [r4, #10]
 8014260:	1aed      	subs	r5, r5, r3
 8014262:	eba5 050a 	sub.w	r5, r5, sl
 8014266:	4633      	mov	r3, r6
 8014268:	b22d      	sxth	r5, r5
 801426a:	463e      	mov	r6, r7
 801426c:	f04f 0b00 	mov.w	fp, #0
 8014270:	461f      	mov	r7, r3
 8014272:	e723      	b.n	80140bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8014274:	2500      	movs	r5, #0
 8014276:	e721      	b.n	80140bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08014278 <_ZN8touchgfx8TextAreaD0Ev>:
 8014278:	b510      	push	{r4, lr}
 801427a:	2148      	movs	r1, #72	@ 0x48
 801427c:	4604      	mov	r4, r0
 801427e:	f015 fd33 	bl	8029ce8 <_ZdlPvj>
 8014282:	4620      	mov	r0, r4
 8014284:	bd10      	pop	{r4, pc}
	...

08014288 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8014288:	b513      	push	{r0, r1, r4, lr}
 801428a:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 801428e:	4604      	mov	r4, r0
 8014290:	b1fb      	cbz	r3, 80142d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8014292:	4b16      	ldr	r3, [pc, #88]	@ (80142ec <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8014294:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8014296:	881b      	ldrh	r3, [r3, #0]
 8014298:	428b      	cmp	r3, r1
 801429a:	d91a      	bls.n	80142d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801429c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80142a0:	2b00      	cmp	r3, #0
 80142a2:	dd16      	ble.n	80142d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80142a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80142a8:	2b00      	cmp	r3, #0
 80142aa:	dd12      	ble.n	80142d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80142ac:	4b10      	ldr	r3, [pc, #64]	@ (80142f0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80142ae:	6818      	ldr	r0, [r3, #0]
 80142b0:	f7f3 f894 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80142b4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 80142b8:	6822      	ldr	r2, [r4, #0]
 80142ba:	2b00      	cmp	r3, #0
 80142bc:	db06      	blt.n	80142cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80142be:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 80142c2:	2b00      	cmp	r3, #0
 80142c4:	db02      	blt.n	80142cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80142c6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80142c8:	4298      	cmp	r0, r3
 80142ca:	d004      	beq.n	80142d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80142cc:	6953      	ldr	r3, [r2, #20]
 80142ce:	4620      	mov	r0, r4
 80142d0:	4798      	blx	r3
 80142d2:	b002      	add	sp, #8
 80142d4:	bd10      	pop	{r4, pc}
 80142d6:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 80142da:	c903      	ldmia	r1, {r0, r1}
 80142dc:	466b      	mov	r3, sp
 80142de:	e883 0003 	stmia.w	r3, {r0, r1}
 80142e2:	6912      	ldr	r2, [r2, #16]
 80142e4:	4619      	mov	r1, r3
 80142e6:	4620      	mov	r0, r4
 80142e8:	4790      	blx	r2
 80142ea:	e7f2      	b.n	80142d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80142ec:	20013fbc 	.word	0x20013fbc
 80142f0:	20013fc4 	.word	0x20013fc4

080142f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80142f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80142f8:	4b44      	ldr	r3, [pc, #272]	@ (801440c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80142fa:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80142fc:	881b      	ldrh	r3, [r3, #0]
 80142fe:	4293      	cmp	r3, r2
 8014300:	b08e      	sub	sp, #56	@ 0x38
 8014302:	4604      	mov	r4, r0
 8014304:	d97e      	bls.n	8014404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014306:	6808      	ldr	r0, [r1, #0]
 8014308:	4d41      	ldr	r5, [pc, #260]	@ (8014410 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801430a:	6849      	ldr	r1, [r1, #4]
 801430c:	ab05      	add	r3, sp, #20
 801430e:	c303      	stmia	r3!, {r0, r1}
 8014310:	4611      	mov	r1, r2
 8014312:	6828      	ldr	r0, [r5, #0]
 8014314:	f7f3 f862 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8014318:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 801431c:	2b00      	cmp	r3, #0
 801431e:	db11      	blt.n	8014344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8014320:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8014324:	2b00      	cmp	r3, #0
 8014326:	db0d      	blt.n	8014344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8014328:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801432a:	4298      	cmp	r0, r3
 801432c:	d10a      	bne.n	8014344 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801432e:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8014332:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014336:	ab09      	add	r3, sp, #36	@ 0x24
 8014338:	e883 0003 	stmia.w	r3, {r0, r1}
 801433c:	4619      	mov	r1, r3
 801433e:	a805      	add	r0, sp, #20
 8014340:	f7fc f8b4 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8014344:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014348:	2b00      	cmp	r3, #0
 801434a:	dd5b      	ble.n	8014404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801434c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014350:	2b00      	cmp	r3, #0
 8014352:	dd57      	ble.n	8014404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8014354:	4f2f      	ldr	r7, [pc, #188]	@ (8014414 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8014356:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8014358:	683b      	ldr	r3, [r7, #0]
 801435a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801435e:	4b2e      	ldr	r3, [pc, #184]	@ (8014418 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8014360:	681b      	ldr	r3, [r3, #0]
 8014362:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8014366:	2e00      	cmp	r6, #0
 8014368:	d04c      	beq.n	8014404 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801436a:	6823      	ldr	r3, [r4, #0]
 801436c:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8014370:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014372:	4620      	mov	r0, r4
 8014374:	4798      	blx	r3
 8014376:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8014378:	683b      	ldr	r3, [r7, #0]
 801437a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 801437e:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8014382:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8014386:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8014388:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801438c:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8014390:	785b      	ldrb	r3, [r3, #1]
 8014392:	9609      	str	r6, [sp, #36]	@ 0x24
 8014394:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014398:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 801439c:	4b1f      	ldr	r3, [pc, #124]	@ (801441c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801439e:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 80143a2:	681b      	ldr	r3, [r3, #0]
 80143a4:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 80143a8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80143aa:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 80143ae:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 80143b2:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 80143b6:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 80143ba:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80143be:	b10a      	cbz	r2, 80143c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80143c0:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 80143c2:	b906      	cbnz	r6, 80143c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80143c4:	689e      	ldr	r6, [r3, #8]
 80143c6:	af07      	add	r7, sp, #28
 80143c8:	4621      	mov	r1, r4
 80143ca:	4638      	mov	r0, r7
 80143cc:	f004 f8ac 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80143d0:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80143d2:	6828      	ldr	r0, [r5, #0]
 80143d4:	f7f3 f802 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 80143d8:	6823      	ldr	r3, [r4, #0]
 80143da:	4605      	mov	r5, r0
 80143dc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80143de:	4620      	mov	r0, r4
 80143e0:	4798      	blx	r3
 80143e2:	6823      	ldr	r3, [r4, #0]
 80143e4:	4680      	mov	r8, r0
 80143e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80143ea:	4620      	mov	r0, r4
 80143ec:	4798      	blx	r3
 80143ee:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80143f2:	ab09      	add	r3, sp, #36	@ 0x24
 80143f4:	9300      	str	r3, [sp, #0]
 80143f6:	9501      	str	r5, [sp, #4]
 80143f8:	ab05      	add	r3, sp, #20
 80143fa:	e897 0006 	ldmia.w	r7, {r1, r2}
 80143fe:	4630      	mov	r0, r6
 8014400:	f7f2 ff9e 	bl	8007340 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014404:	b00e      	add	sp, #56	@ 0x38
 8014406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801440a:	bf00      	nop
 801440c:	20013fbc 	.word	0x20013fbc
 8014410:	20013fc4 	.word	0x20013fc4
 8014414:	20013fb8 	.word	0x20013fb8
 8014418:	20013fc0 	.word	0x20013fc0
 801441c:	20013f60 	.word	0x20013f60

08014420 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8014420:	b570      	push	{r4, r5, r6, lr}
 8014422:	6803      	ldr	r3, [r0, #0]
 8014424:	4604      	mov	r4, r0
 8014426:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8014428:	4615      	mov	r5, r2
 801442a:	4798      	blx	r3
 801442c:	6823      	ldr	r3, [r4, #0]
 801442e:	4629      	mov	r1, r5
 8014430:	4620      	mov	r0, r4
 8014432:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8014434:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014438:	4718      	bx	r3
	...

0801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801443c:	b538      	push	{r3, r4, r5, lr}
 801443e:	4b0e      	ldr	r3, [pc, #56]	@ (8014478 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8014440:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8014442:	881b      	ldrh	r3, [r3, #0]
 8014444:	429a      	cmp	r2, r3
 8014446:	4604      	mov	r4, r0
 8014448:	d214      	bcs.n	8014474 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801444a:	6803      	ldr	r3, [r0, #0]
 801444c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 801444e:	4798      	blx	r3
 8014450:	6823      	ldr	r3, [r4, #0]
 8014452:	4605      	mov	r5, r0
 8014454:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8014456:	4620      	mov	r0, r4
 8014458:	4798      	blx	r3
 801445a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801445e:	b22d      	sxth	r5, r5
 8014460:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8014464:	4601      	mov	r1, r0
 8014466:	bf06      	itte	eq
 8014468:	4602      	moveq	r2, r0
 801446a:	4629      	moveq	r1, r5
 801446c:	462a      	movne	r2, r5
 801446e:	4620      	mov	r0, r4
 8014470:	f7ff ffd6 	bl	8014420 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8014474:	bd38      	pop	{r3, r4, r5, pc}
 8014476:	bf00      	nop
 8014478:	20013fbc 	.word	0x20013fbc

0801447c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 801447c:	b530      	push	{r4, r5, lr}
 801447e:	888b      	ldrh	r3, [r1, #4]
 8014480:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8014482:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8014486:	b085      	sub	sp, #20
 8014488:	4604      	mov	r4, r0
 801448a:	b923      	cbnz	r3, 8014496 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801448c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014490:	b90b      	cbnz	r3, 8014496 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8014492:	f7ff ffd3 	bl	801443c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8014496:	6823      	ldr	r3, [r4, #0]
 8014498:	466d      	mov	r5, sp
 801449a:	4621      	mov	r1, r4
 801449c:	4628      	mov	r0, r5
 801449e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80144a2:	4798      	blx	r3
 80144a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80144a8:	343c      	adds	r4, #60	@ 0x3c
 80144aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80144ae:	b005      	add	sp, #20
 80144b0:	bd30      	pop	{r4, r5, pc}

080144b2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80144b2:	2300      	movs	r3, #0
 80144b4:	8083      	strh	r3, [r0, #4]
 80144b6:	80c3      	strh	r3, [r0, #6]
 80144b8:	8003      	strh	r3, [r0, #0]
 80144ba:	8043      	strh	r3, [r0, #2]
 80144bc:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 80144c0:	2bff      	cmp	r3, #255	@ 0xff
 80144c2:	bf01      	itttt	eq
 80144c4:	890b      	ldrheq	r3, [r1, #8]
 80144c6:	8083      	strheq	r3, [r0, #4]
 80144c8:	894b      	ldrheq	r3, [r1, #10]
 80144ca:	80c3      	strheq	r3, [r0, #6]
 80144cc:	4770      	bx	lr
	...

080144d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80144d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80144d2:	4604      	mov	r4, r0
 80144d4:	6808      	ldr	r0, [r1, #0]
 80144d6:	6849      	ldr	r1, [r1, #4]
 80144d8:	466b      	mov	r3, sp
 80144da:	c303      	stmia	r3!, {r0, r1}
 80144dc:	6823      	ldr	r3, [r4, #0]
 80144de:	4669      	mov	r1, sp
 80144e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80144e2:	4620      	mov	r0, r4
 80144e4:	4798      	blx	r3
 80144e6:	4b08      	ldr	r3, [pc, #32]	@ (8014508 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80144e8:	681b      	ldr	r3, [r3, #0]
 80144ea:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80144ee:	b10a      	cbz	r2, 80144f4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80144f0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80144f2:	b900      	cbnz	r0, 80144f6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80144f4:	6898      	ldr	r0, [r3, #8]
 80144f6:	6803      	ldr	r3, [r0, #0]
 80144f8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80144fa:	6a1d      	ldr	r5, [r3, #32]
 80144fc:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8014500:	4669      	mov	r1, sp
 8014502:	47a8      	blx	r5
 8014504:	b003      	add	sp, #12
 8014506:	bd30      	pop	{r4, r5, pc}
 8014508:	20013f60 	.word	0x20013f60

0801450c <_ZN8touchgfx3BoxD1Ev>:
 801450c:	4770      	bx	lr

0801450e <_ZN8touchgfx3BoxD0Ev>:
 801450e:	b510      	push	{r4, lr}
 8014510:	212c      	movs	r1, #44	@ 0x2c
 8014512:	4604      	mov	r4, r0
 8014514:	f015 fbe8 	bl	8029ce8 <_ZdlPvj>
 8014518:	4620      	mov	r0, r4
 801451a:	bd10      	pop	{r4, pc}

0801451c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801451c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 8014520:	4770      	bx	lr

08014522 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8014522:	b570      	push	{r4, r5, r6, lr}
 8014524:	880b      	ldrh	r3, [r1, #0]
 8014526:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8014528:	4605      	mov	r5, r0
 801452a:	8813      	ldrh	r3, [r2, #0]
 801452c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8014530:	4604      	mov	r4, r0
 8014532:	4628      	mov	r0, r5
 8014534:	f006 fb90 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014538:	4606      	mov	r6, r0
 801453a:	4628      	mov	r0, r5
 801453c:	f006 fbc0 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014540:	6823      	ldr	r3, [r4, #0]
 8014542:	4605      	mov	r5, r0
 8014544:	4631      	mov	r1, r6
 8014546:	4620      	mov	r0, r4
 8014548:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801454a:	4798      	blx	r3
 801454c:	6823      	ldr	r3, [r4, #0]
 801454e:	4629      	mov	r1, r5
 8014550:	4620      	mov	r0, r4
 8014552:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8014554:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014558:	4718      	bx	r3

0801455a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801455a:	b510      	push	{r4, lr}
 801455c:	4604      	mov	r4, r0
 801455e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8014560:	b150      	cbz	r0, 8014578 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014562:	6803      	ldr	r3, [r0, #0]
 8014564:	68db      	ldr	r3, [r3, #12]
 8014566:	4798      	blx	r3
 8014568:	b130      	cbz	r0, 8014578 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801456a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 801456c:	6803      	ldr	r3, [r0, #0]
 801456e:	4621      	mov	r1, r4
 8014570:	689b      	ldr	r3, [r3, #8]
 8014572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014576:	4718      	bx	r3
 8014578:	bd10      	pop	{r4, pc}

0801457a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801457a:	b510      	push	{r4, lr}
 801457c:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8014580:	2bff      	cmp	r3, #255	@ 0xff
 8014582:	4604      	mov	r4, r0
 8014584:	d006      	beq.n	8014594 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8014586:	2300      	movs	r3, #0
 8014588:	8003      	strh	r3, [r0, #0]
 801458a:	8043      	strh	r3, [r0, #2]
 801458c:	8083      	strh	r3, [r0, #4]
 801458e:	80c3      	strh	r3, [r0, #6]
 8014590:	4620      	mov	r0, r4
 8014592:	bd10      	pop	{r4, pc}
 8014594:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8014598:	b11b      	cbz	r3, 80145a2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801459a:	3130      	adds	r1, #48	@ 0x30
 801459c:	f006 fbc4 	bl	801ad28 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80145a0:	e7f6      	b.n	8014590 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80145a2:	312e      	adds	r1, #46	@ 0x2e
 80145a4:	e7fa      	b.n	801459c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080145a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80145a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80145ac:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80145b0:	b08a      	sub	sp, #40	@ 0x28
 80145b2:	4604      	mov	r4, r0
 80145b4:	4688      	mov	r8, r1
 80145b6:	2b00      	cmp	r3, #0
 80145b8:	d066      	beq.n	8014688 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80145ba:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80145bc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80145c0:	a805      	add	r0, sp, #20
 80145c2:	f006 fb49 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80145c6:	4607      	mov	r7, r0
 80145c8:	a805      	add	r0, sp, #20
 80145ca:	f006 fb79 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80145ce:	f9b8 6000 	ldrsh.w	r6, [r8]
 80145d2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80145d6:	4432      	add	r2, r6
 80145d8:	b292      	uxth	r2, r2
 80145da:	2300      	movs	r3, #0
 80145dc:	fa0f fc82 	sxth.w	ip, r2
 80145e0:	459c      	cmp	ip, r3
 80145e2:	9306      	str	r3, [sp, #24]
 80145e4:	dd52      	ble.n	801468c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80145e6:	42b7      	cmp	r7, r6
 80145e8:	dd50      	ble.n	801468c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80145ea:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80145ee:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80145f2:	442b      	add	r3, r5
 80145f4:	b29b      	uxth	r3, r3
 80145f6:	b219      	sxth	r1, r3
 80145f8:	2900      	cmp	r1, #0
 80145fa:	dd47      	ble.n	801468c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80145fc:	42a8      	cmp	r0, r5
 80145fe:	dd45      	ble.n	801468c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014600:	4567      	cmp	r7, ip
 8014602:	bfb8      	it	lt
 8014604:	b2ba      	uxthlt	r2, r7
 8014606:	4288      	cmp	r0, r1
 8014608:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801460c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8014610:	bfb8      	it	lt
 8014612:	b283      	uxthlt	r3, r0
 8014614:	1b92      	subs	r2, r2, r6
 8014616:	1b5b      	subs	r3, r3, r5
 8014618:	f8ad 201c 	strh.w	r2, [sp, #28]
 801461c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014620:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014624:	f8ad 501a 	strh.w	r5, [sp, #26]
 8014628:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801462c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8014630:	429a      	cmp	r2, r3
 8014632:	d026      	beq.n	8014682 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014634:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014638:	2b00      	cmp	r3, #0
 801463a:	dd22      	ble.n	8014682 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801463c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014640:	2b00      	cmp	r3, #0
 8014642:	dd1e      	ble.n	8014682 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014644:	2300      	movs	r3, #0
 8014646:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801464a:	6823      	ldr	r3, [r4, #0]
 801464c:	a908      	add	r1, sp, #32
 801464e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014650:	4620      	mov	r0, r4
 8014652:	4798      	blx	r3
 8014654:	4b0f      	ldr	r3, [pc, #60]	@ (8014694 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8014656:	681b      	ldr	r3, [r3, #0]
 8014658:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801465c:	b10a      	cbz	r2, 8014662 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801465e:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8014660:	b900      	cbnz	r0, 8014664 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8014662:	6898      	ldr	r0, [r3, #8]
 8014664:	6801      	ldr	r1, [r0, #0]
 8014666:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801466a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801466e:	2501      	movs	r5, #1
 8014670:	9502      	str	r5, [sp, #8]
 8014672:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8014676:	9401      	str	r4, [sp, #4]
 8014678:	ac06      	add	r4, sp, #24
 801467a:	9400      	str	r4, [sp, #0]
 801467c:	688c      	ldr	r4, [r1, #8]
 801467e:	a905      	add	r1, sp, #20
 8014680:	47a0      	blx	r4
 8014682:	b00a      	add	sp, #40	@ 0x28
 8014684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014688:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801468a:	e797      	b.n	80145bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801468c:	2300      	movs	r3, #0
 801468e:	9307      	str	r3, [sp, #28]
 8014690:	e7ca      	b.n	8014628 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8014692:	bf00      	nop
 8014694:	20013f60 	.word	0x20013f60

08014698 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8014698:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 801469c:	b12a      	cbz	r2, 80146aa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801469e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80146a2:	b112      	cbz	r2, 80146aa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80146a4:	6803      	ldr	r3, [r0, #0]
 80146a6:	695b      	ldr	r3, [r3, #20]
 80146a8:	4718      	bx	r3
 80146aa:	4770      	bx	lr

080146ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80146ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80146b0:	4b2f      	ldr	r3, [pc, #188]	@ (8014770 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80146b2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80146b4:	881b      	ldrh	r3, [r3, #0]
 80146b6:	4293      	cmp	r3, r2
 80146b8:	b08d      	sub	sp, #52	@ 0x34
 80146ba:	4604      	mov	r4, r0
 80146bc:	460f      	mov	r7, r1
 80146be:	d954      	bls.n	801476a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80146c0:	4b2c      	ldr	r3, [pc, #176]	@ (8014774 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80146c2:	6819      	ldr	r1, [r3, #0]
 80146c4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80146c8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80146cc:	4a2a      	ldr	r2, [pc, #168]	@ (8014778 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80146ce:	6812      	ldr	r2, [r2, #0]
 80146d0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80146d4:	2900      	cmp	r1, #0
 80146d6:	d048      	beq.n	801476a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80146d8:	785a      	ldrb	r2, [r3, #1]
 80146da:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 80146de:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 80146e2:	4b26      	ldr	r3, [pc, #152]	@ (801477c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80146e4:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 80146e8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 80146ec:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 80146f0:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 80146f2:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 80146f6:	9107      	str	r1, [sp, #28]
 80146f8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80146fc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014700:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8014704:	681a      	ldr	r2, [r3, #0]
 8014706:	f88d 8020 	strb.w	r8, [sp, #32]
 801470a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 801470e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8014712:	9609      	str	r6, [sp, #36]	@ 0x24
 8014714:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8014718:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 801471c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8014720:	b10b      	cbz	r3, 8014726 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8014722:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8014724:	b905      	cbnz	r5, 8014728 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8014726:	6895      	ldr	r5, [r2, #8]
 8014728:	ae05      	add	r6, sp, #20
 801472a:	4621      	mov	r1, r4
 801472c:	4630      	mov	r0, r6
 801472e:	f003 fefb 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014732:	4b13      	ldr	r3, [pc, #76]	@ (8014780 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8014734:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8014736:	6818      	ldr	r0, [r3, #0]
 8014738:	f7f2 fe50 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 801473c:	6823      	ldr	r3, [r4, #0]
 801473e:	4680      	mov	r8, r0
 8014740:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8014742:	4620      	mov	r0, r4
 8014744:	4798      	blx	r3
 8014746:	6823      	ldr	r3, [r4, #0]
 8014748:	4681      	mov	r9, r0
 801474a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801474e:	4620      	mov	r0, r4
 8014750:	4798      	blx	r3
 8014752:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8014756:	ab07      	add	r3, sp, #28
 8014758:	9300      	str	r3, [sp, #0]
 801475a:	f8cd 8004 	str.w	r8, [sp, #4]
 801475e:	463b      	mov	r3, r7
 8014760:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014764:	4628      	mov	r0, r5
 8014766:	f7f2 fdeb 	bl	8007340 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801476a:	b00d      	add	sp, #52	@ 0x34
 801476c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014770:	20013fbc 	.word	0x20013fbc
 8014774:	20013fb8 	.word	0x20013fb8
 8014778:	20013fc0 	.word	0x20013fc0
 801477c:	20013f60 	.word	0x20013f60
 8014780:	20013fc4 	.word	0x20013fc4

08014784 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8014784:	4770      	bx	lr

08014786 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8014786:	b510      	push	{r4, lr}
 8014788:	2134      	movs	r1, #52	@ 0x34
 801478a:	4604      	mov	r4, r0
 801478c:	f015 faac 	bl	8029ce8 <_ZdlPvj>
 8014790:	4620      	mov	r0, r4
 8014792:	bd10      	pop	{r4, pc}

08014794 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8014794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014798:	4604      	mov	r4, r0
 801479a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801479c:	8962      	ldrh	r2, [r4, #10]
 801479e:	b218      	sxth	r0, r3
 80147a0:	460e      	mov	r6, r1
 80147a2:	005b      	lsls	r3, r3, #1
 80147a4:	8921      	ldrh	r1, [r4, #8]
 80147a6:	b29b      	uxth	r3, r3
 80147a8:	1ac9      	subs	r1, r1, r3
 80147aa:	b08e      	sub	sp, #56	@ 0x38
 80147ac:	b209      	sxth	r1, r1
 80147ae:	1ad3      	subs	r3, r2, r3
 80147b0:	b21b      	sxth	r3, r3
 80147b2:	2900      	cmp	r1, #0
 80147b4:	f8ad 0000 	strh.w	r0, [sp]
 80147b8:	f8ad 0002 	strh.w	r0, [sp, #2]
 80147bc:	f8ad 1004 	strh.w	r1, [sp, #4]
 80147c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80147c4:	dd5e      	ble.n	8014884 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80147c6:	2b00      	cmp	r3, #0
 80147c8:	dd5c      	ble.n	8014884 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80147ca:	6830      	ldr	r0, [r6, #0]
 80147cc:	6871      	ldr	r1, [r6, #4]
 80147ce:	ab02      	add	r3, sp, #8
 80147d0:	c303      	stmia	r3!, {r0, r1}
 80147d2:	4669      	mov	r1, sp
 80147d4:	a802      	add	r0, sp, #8
 80147d6:	f7fb fe69 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 80147da:	4620      	mov	r0, r4
 80147dc:	a902      	add	r1, sp, #8
 80147de:	f7ff fe77 	bl	80144d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80147e2:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 80147e4:	2800      	cmp	r0, #0
 80147e6:	d05f      	beq.n	80148a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80147e8:	8963      	ldrh	r3, [r4, #10]
 80147ea:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80147ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 80147f2:	1a1f      	subs	r7, r3, r0
 80147f4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80147f8:	b202      	sxth	r2, r0
 80147fa:	2500      	movs	r5, #0
 80147fc:	b21b      	sxth	r3, r3
 80147fe:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8014802:	1a09      	subs	r1, r1, r0
 8014804:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8014808:	9506      	str	r5, [sp, #24]
 801480a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801480e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8014812:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8014816:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 801481a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801481e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8014822:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014826:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801482a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801482e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8014832:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8014836:	af04      	add	r7, sp, #16
 8014838:	ab06      	add	r3, sp, #24
 801483a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801483e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014842:	e887 0003 	stmia.w	r7, {r0, r1}
 8014846:	4631      	mov	r1, r6
 8014848:	4638      	mov	r0, r7
 801484a:	f7fb fe2f 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 801484e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8014852:	2b00      	cmp	r3, #0
 8014854:	dd12      	ble.n	801487c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014856:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801485a:	2b00      	cmp	r3, #0
 801485c:	dd0e      	ble.n	801487c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801485e:	6823      	ldr	r3, [r4, #0]
 8014860:	4639      	mov	r1, r7
 8014862:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014864:	4620      	mov	r0, r4
 8014866:	4798      	blx	r3
 8014868:	f7ef fc16 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 801486c:	6803      	ldr	r3, [r0, #0]
 801486e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8014870:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8014874:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8014878:	4639      	mov	r1, r7
 801487a:	47c0      	blx	r8
 801487c:	3501      	adds	r5, #1
 801487e:	2d04      	cmp	r5, #4
 8014880:	d1da      	bne.n	8014838 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8014882:	e011      	b.n	80148a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014884:	6830      	ldr	r0, [r6, #0]
 8014886:	6871      	ldr	r1, [r6, #4]
 8014888:	ab06      	add	r3, sp, #24
 801488a:	c303      	stmia	r3!, {r0, r1}
 801488c:	6823      	ldr	r3, [r4, #0]
 801488e:	a906      	add	r1, sp, #24
 8014890:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014892:	4620      	mov	r0, r4
 8014894:	4798      	blx	r3
 8014896:	f7ef fbff 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 801489a:	6803      	ldr	r3, [r0, #0]
 801489c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801489e:	6a1d      	ldr	r5, [r3, #32]
 80148a0:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80148a4:	a906      	add	r1, sp, #24
 80148a6:	47a8      	blx	r5
 80148a8:	b00e      	add	sp, #56	@ 0x38
 80148aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080148ae <_ZN8touchgfx5ImageD1Ev>:
 80148ae:	4770      	bx	lr

080148b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80148b0:	b570      	push	{r4, r5, r6, lr}
 80148b2:	880b      	ldrh	r3, [r1, #0]
 80148b4:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80148b6:	4604      	mov	r4, r0
 80148b8:	4608      	mov	r0, r1
 80148ba:	460d      	mov	r5, r1
 80148bc:	f006 f9cc 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80148c0:	4606      	mov	r6, r0
 80148c2:	4628      	mov	r0, r5
 80148c4:	f006 f9fc 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80148c8:	6823      	ldr	r3, [r4, #0]
 80148ca:	4605      	mov	r5, r0
 80148cc:	4631      	mov	r1, r6
 80148ce:	4620      	mov	r0, r4
 80148d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80148d2:	4798      	blx	r3
 80148d4:	6823      	ldr	r3, [r4, #0]
 80148d6:	4629      	mov	r1, r5
 80148d8:	4620      	mov	r0, r4
 80148da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80148dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80148e0:	4718      	bx	r3

080148e2 <_ZN8touchgfx5ImageD0Ev>:
 80148e2:	b510      	push	{r4, lr}
 80148e4:	212c      	movs	r1, #44	@ 0x2c
 80148e6:	4604      	mov	r4, r0
 80148e8:	f015 f9fe 	bl	8029ce8 <_ZdlPvj>
 80148ec:	4620      	mov	r0, r4
 80148ee:	bd10      	pop	{r4, pc}

080148f0 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80148f0:	b510      	push	{r4, lr}
 80148f2:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 80148f6:	2bff      	cmp	r3, #255	@ 0xff
 80148f8:	4604      	mov	r4, r0
 80148fa:	d006      	beq.n	801490a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80148fc:	2300      	movs	r3, #0
 80148fe:	8003      	strh	r3, [r0, #0]
 8014900:	8043      	strh	r3, [r0, #2]
 8014902:	8083      	strh	r3, [r0, #4]
 8014904:	80c3      	strh	r3, [r0, #6]
 8014906:	4620      	mov	r0, r4
 8014908:	bd10      	pop	{r4, pc}
 801490a:	3126      	adds	r1, #38	@ 0x26
 801490c:	f006 fa0c 	bl	801ad28 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014910:	e7f9      	b.n	8014906 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08014912 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8014912:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 8014916:	b12a      	cbz	r2, 8014924 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8014918:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 801491c:	b112      	cbz	r2, 8014924 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801491e:	6803      	ldr	r3, [r0, #0]
 8014920:	695b      	ldr	r3, [r3, #20]
 8014922:	4718      	bx	r3
 8014924:	4770      	bx	lr
	...

08014928 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014928:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801492c:	4604      	mov	r4, r0
 801492e:	b088      	sub	sp, #32
 8014930:	f854 3b26 	ldr.w	r3, [r4], #38
 8014934:	2500      	movs	r5, #0
 8014936:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014938:	460f      	mov	r7, r1
 801493a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801493e:	a904      	add	r1, sp, #16
 8014940:	4606      	mov	r6, r0
 8014942:	4798      	blx	r3
 8014944:	4620      	mov	r0, r4
 8014946:	f006 f987 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801494a:	4680      	mov	r8, r0
 801494c:	4620      	mov	r0, r4
 801494e:	f006 f9b7 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014952:	9506      	str	r5, [sp, #24]
 8014954:	ad06      	add	r5, sp, #24
 8014956:	f8ad 001e 	strh.w	r0, [sp, #30]
 801495a:	4639      	mov	r1, r7
 801495c:	4628      	mov	r0, r5
 801495e:	f8ad 801c 	strh.w	r8, [sp, #28]
 8014962:	f7fb fda3 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8014966:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801496a:	2b00      	cmp	r3, #0
 801496c:	dd19      	ble.n	80149a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801496e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014972:	2b00      	cmp	r3, #0
 8014974:	dd15      	ble.n	80149a2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014976:	4b0c      	ldr	r3, [pc, #48]	@ (80149a8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014978:	681b      	ldr	r3, [r3, #0]
 801497a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801497e:	b10a      	cbz	r2, 8014984 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8014980:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8014982:	b900      	cbnz	r0, 8014986 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014984:	6898      	ldr	r0, [r3, #8]
 8014986:	6801      	ldr	r1, [r0, #0]
 8014988:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801498c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014990:	2701      	movs	r7, #1
 8014992:	9702      	str	r7, [sp, #8]
 8014994:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8014998:	e9cd 5600 	strd	r5, r6, [sp]
 801499c:	688d      	ldr	r5, [r1, #8]
 801499e:	4621      	mov	r1, r4
 80149a0:	47a8      	blx	r5
 80149a2:	b008      	add	sp, #32
 80149a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80149a8:	20013f60 	.word	0x20013f60

080149ac <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80149ac:	4770      	bx	lr

080149ae <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80149ae:	b510      	push	{r4, lr}
 80149b0:	2148      	movs	r1, #72	@ 0x48
 80149b2:	4604      	mov	r4, r0
 80149b4:	f015 f998 	bl	8029ce8 <_ZdlPvj>
 80149b8:	4620      	mov	r0, r4
 80149ba:	bd10      	pop	{r4, pc}

080149bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80149bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80149c0:	b08d      	sub	sp, #52	@ 0x34
 80149c2:	4604      	mov	r4, r0
 80149c4:	460f      	mov	r7, r1
 80149c6:	f7ff fdef 	bl	80145a8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80149ca:	4a55      	ldr	r2, [pc, #340]	@ (8014b20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80149cc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80149ce:	8812      	ldrh	r2, [r2, #0]
 80149d0:	429a      	cmp	r2, r3
 80149d2:	f240 8082 	bls.w	8014ada <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80149d6:	4d53      	ldr	r5, [pc, #332]	@ (8014b24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80149d8:	682a      	ldr	r2, [r5, #0]
 80149da:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80149de:	4b52      	ldr	r3, [pc, #328]	@ (8014b28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80149e0:	681b      	ldr	r3, [r3, #0]
 80149e2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80149e6:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 80149ea:	2200      	movs	r2, #0
 80149ec:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80149f0:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 80149f4:	2a03      	cmp	r2, #3
 80149f6:	d811      	bhi.n	8014a1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80149f8:	e8df f002 	tbb	[pc, r2]
 80149fc:	89727902 	.word	0x89727902
 8014a00:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014a04:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014a08:	1ad2      	subs	r2, r2, r3
 8014a0a:	2002      	movs	r0, #2
 8014a0c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8014a10:	fb92 f2f0 	sdiv	r2, r2, r0
 8014a14:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014a18:	f8ad 200e 	strh.w	r2, [sp, #14]
 8014a1c:	f10d 080c 	add.w	r8, sp, #12
 8014a20:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014a24:	f10d 0914 	add.w	r9, sp, #20
 8014a28:	e889 0003 	stmia.w	r9, {r0, r1}
 8014a2c:	4639      	mov	r1, r7
 8014a2e:	4648      	mov	r0, r9
 8014a30:	f7fb fd3c 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8014a34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014a38:	2b00      	cmp	r3, #0
 8014a3a:	dd4e      	ble.n	8014ada <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014a3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014a40:	2b00      	cmp	r3, #0
 8014a42:	dd4a      	ble.n	8014ada <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014a44:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014a48:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8014a4c:	1a9b      	subs	r3, r3, r2
 8014a4e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014a52:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014a56:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8014a5a:	1a9b      	subs	r3, r3, r2
 8014a5c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014a60:	6823      	ldr	r3, [r4, #0]
 8014a62:	4641      	mov	r1, r8
 8014a64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014a66:	4620      	mov	r0, r4
 8014a68:	4798      	blx	r3
 8014a6a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8014a6e:	2b00      	cmp	r3, #0
 8014a70:	d053      	beq.n	8014b1a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8014a72:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8014a74:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 8014a76:	682b      	ldr	r3, [r5, #0]
 8014a78:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 8014a7c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 8014a80:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014a84:	785b      	ldrb	r3, [r3, #1]
 8014a86:	9209      	str	r2, [sp, #36]	@ 0x24
 8014a88:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8014a8c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014a90:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8014a94:	2300      	movs	r3, #0
 8014a96:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8014a9a:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 8014a9e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8014aa2:	4b22      	ldr	r3, [pc, #136]	@ (8014b2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8014aa4:	9607      	str	r6, [sp, #28]
 8014aa6:	681b      	ldr	r3, [r3, #0]
 8014aa8:	f88d 5020 	strb.w	r5, [sp, #32]
 8014aac:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8014ab0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8014ab4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8014ab8:	b10a      	cbz	r2, 8014abe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8014aba:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 8014abc:	b904      	cbnz	r4, 8014ac0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8014abe:	689c      	ldr	r4, [r3, #8]
 8014ac0:	4b1b      	ldr	r3, [pc, #108]	@ (8014b30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8014ac2:	6818      	ldr	r0, [r3, #0]
 8014ac4:	f7f2 fc8a 	bl	80073dc <_ZNK8touchgfx5Texts7getTextEt>
 8014ac8:	ab07      	add	r3, sp, #28
 8014aca:	9001      	str	r0, [sp, #4]
 8014acc:	9300      	str	r3, [sp, #0]
 8014ace:	e898 0006 	ldmia.w	r8, {r1, r2}
 8014ad2:	464b      	mov	r3, r9
 8014ad4:	4620      	mov	r0, r4
 8014ad6:	f7f2 fc33 	bl	8007340 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014ada:	b00d      	add	sp, #52	@ 0x34
 8014adc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014ae0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014ae4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014ae8:	1ad2      	subs	r2, r2, r3
 8014aea:	3201      	adds	r2, #1
 8014aec:	e78d      	b.n	8014a0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8014aee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014af2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014af6:	1ad2      	subs	r2, r2, r3
 8014af8:	3201      	adds	r2, #1
 8014afa:	2002      	movs	r0, #2
 8014afc:	f8ad 3010 	strh.w	r3, [sp, #16]
 8014b00:	fb92 f2f0 	sdiv	r2, r2, r0
 8014b04:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014b08:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014b0c:	e786      	b.n	8014a1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8014b0e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014b12:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014b16:	1ad2      	subs	r2, r2, r3
 8014b18:	e7ef      	b.n	8014afa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8014b1a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8014b1c:	e7aa      	b.n	8014a74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8014b1e:	bf00      	nop
 8014b20:	20013fbc 	.word	0x20013fbc
 8014b24:	20013fb8 	.word	0x20013fb8
 8014b28:	20013fc0 	.word	0x20013fc0
 8014b2c:	20013f60 	.word	0x20013f60
 8014b30:	20013fc4 	.word	0x20013fc4

08014b34 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014b34:	b510      	push	{r4, lr}
 8014b36:	2101      	movs	r1, #1
 8014b38:	4c13      	ldr	r4, [pc, #76]	@ (8014b88 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8014b3a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8014b3e:	2200      	movs	r2, #0
 8014b40:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8014b44:	6004      	str	r4, [r0, #0]
 8014b46:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8014b4a:	4c10      	ldr	r4, [pc, #64]	@ (8014b8c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8014b4c:	8082      	strh	r2, [r0, #4]
 8014b4e:	80c2      	strh	r2, [r0, #6]
 8014b50:	8102      	strh	r2, [r0, #8]
 8014b52:	8142      	strh	r2, [r0, #10]
 8014b54:	8182      	strh	r2, [r0, #12]
 8014b56:	81c2      	strh	r2, [r0, #14]
 8014b58:	8202      	strh	r2, [r0, #16]
 8014b5a:	8242      	strh	r2, [r0, #18]
 8014b5c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014b60:	61c2      	str	r2, [r0, #28]
 8014b62:	8402      	strh	r2, [r0, #32]
 8014b64:	8442      	strh	r2, [r0, #34]	@ 0x22
 8014b66:	6282      	str	r2, [r0, #40]	@ 0x28
 8014b68:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8014b6c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8014b6e:	8601      	strh	r1, [r0, #48]	@ 0x30
 8014b70:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8014b74:	6344      	str	r4, [r0, #52]	@ 0x34
 8014b76:	8701      	strh	r1, [r0, #56]	@ 0x38
 8014b78:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8014b7c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8014b80:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8014b84:	bd10      	pop	{r4, pc}
 8014b86:	bf00      	nop
 8014b88:	0802e328 	.word	0x0802e328
 8014b8c:	0802d504 	.word	0x0802d504

08014b90 <_ZN8touchgfx7OutlineD1Ev>:
 8014b90:	4770      	bx	lr

08014b92 <_ZN8touchgfx7OutlineD0Ev>:
 8014b92:	b510      	push	{r4, lr}
 8014b94:	2130      	movs	r1, #48	@ 0x30
 8014b96:	4604      	mov	r4, r0
 8014b98:	f015 f8a6 	bl	8029ce8 <_ZdlPvj>
 8014b9c:	4620      	mov	r0, r4
 8014b9e:	bd10      	pop	{r4, pc}

08014ba0 <_ZN8touchgfx7Outline5resetEv>:
 8014ba0:	b510      	push	{r4, lr}
 8014ba2:	4604      	mov	r4, r0
 8014ba4:	f000 fe96 	bl	80158d4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8014ba8:	60e0      	str	r0, [r4, #12]
 8014baa:	f000 fe99 	bl	80158e0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8014bae:	68e3      	ldr	r3, [r4, #12]
 8014bb0:	6123      	str	r3, [r4, #16]
 8014bb2:	08c0      	lsrs	r0, r0, #3
 8014bb4:	2200      	movs	r2, #0
 8014bb6:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 8014bba:	3801      	subs	r0, #1
 8014bbc:	6060      	str	r0, [r4, #4]
 8014bbe:	60a2      	str	r2, [r4, #8]
 8014bc0:	8019      	strh	r1, [r3, #0]
 8014bc2:	8059      	strh	r1, [r3, #2]
 8014bc4:	809a      	strh	r2, [r3, #4]
 8014bc6:	80da      	strh	r2, [r3, #6]
 8014bc8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8014bca:	f023 0301 	bic.w	r3, r3, #1
 8014bce:	f043 0302 	orr.w	r3, r3, #2
 8014bd2:	6263      	str	r3, [r4, #36]	@ 0x24
 8014bd4:	bd10      	pop	{r4, pc}
	...

08014bd8 <_ZN8touchgfx7OutlineC1Ev>:
 8014bd8:	b510      	push	{r4, lr}
 8014bda:	4b0a      	ldr	r3, [pc, #40]	@ (8014c04 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8014bdc:	6003      	str	r3, [r0, #0]
 8014bde:	2300      	movs	r3, #0
 8014be0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8014be4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8014be8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8014bec:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8014bf0:	6243      	str	r3, [r0, #36]	@ 0x24
 8014bf2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8014bf6:	4604      	mov	r4, r0
 8014bf8:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 8014bfc:	f7ff ffd0 	bl	8014ba0 <_ZN8touchgfx7Outline5resetEv>
 8014c00:	4620      	mov	r0, r4
 8014c02:	bd10      	pop	{r4, pc}
 8014c04:	0802e39c 	.word	0x0802e39c

08014c08 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c0c:	b093      	sub	sp, #76	@ 0x4c
 8014c0e:	1156      	asrs	r6, r2, #5
 8014c10:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8014c12:	9305      	str	r3, [sp, #20]
 8014c14:	f004 051f 	and.w	r5, r4, #31
 8014c18:	1153      	asrs	r3, r2, #5
 8014c1a:	9504      	str	r5, [sp, #16]
 8014c1c:	1165      	asrs	r5, r4, #5
 8014c1e:	9303      	str	r3, [sp, #12]
 8014c20:	42ae      	cmp	r6, r5
 8014c22:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014c26:	9306      	str	r3, [sp, #24]
 8014c28:	f002 031f 	and.w	r3, r2, #31
 8014c2c:	f040 80f8 	bne.w	8014e20 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8014c30:	9c04      	ldr	r4, [sp, #16]
 8014c32:	9a05      	ldr	r2, [sp, #20]
 8014c34:	42a3      	cmp	r3, r4
 8014c36:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014c3a:	6902      	ldr	r2, [r0, #16]
 8014c3c:	d125      	bne.n	8014c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8014c3e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8014c42:	459e      	cmp	lr, r3
 8014c44:	d103      	bne.n	8014c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014c46:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014c4a:	429e      	cmp	r6, r3
 8014c4c:	d035      	beq.n	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014c4e:	88d1      	ldrh	r1, [r2, #6]
 8014c50:	8893      	ldrh	r3, [r2, #4]
 8014c52:	430b      	orrs	r3, r1
 8014c54:	d010      	beq.n	8014c78 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014c56:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014c5a:	2b00      	cmp	r3, #0
 8014c5c:	db0c      	blt.n	8014c78 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014c5e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8014c60:	428b      	cmp	r3, r1
 8014c62:	da09      	bge.n	8014c78 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014c64:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014c68:	428b      	cmp	r3, r1
 8014c6a:	bf38      	it	cc
 8014c6c:	3208      	addcc	r2, #8
 8014c6e:	f103 0301 	add.w	r3, r3, #1
 8014c72:	bf38      	it	cc
 8014c74:	6102      	strcc	r2, [r0, #16]
 8014c76:	6083      	str	r3, [r0, #8]
 8014c78:	6903      	ldr	r3, [r0, #16]
 8014c7a:	9a03      	ldr	r2, [sp, #12]
 8014c7c:	f8a3 e000 	strh.w	lr, [r3]
 8014c80:	805a      	strh	r2, [r3, #2]
 8014c82:	2200      	movs	r2, #0
 8014c84:	809a      	strh	r2, [r3, #4]
 8014c86:	80da      	strh	r2, [r3, #6]
 8014c88:	e017      	b.n	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014c8a:	9c05      	ldr	r4, [sp, #20]
 8014c8c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8014c90:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014c94:	f004 041f 	and.w	r4, r4, #31
 8014c98:	114e      	asrs	r6, r1, #5
 8014c9a:	9402      	str	r4, [sp, #8]
 8014c9c:	9c04      	ldr	r4, [sp, #16]
 8014c9e:	4576      	cmp	r6, lr
 8014ca0:	f001 0c1f 	and.w	ip, r1, #31
 8014ca4:	eba4 0403 	sub.w	r4, r4, r3
 8014ca8:	d10a      	bne.n	8014cc0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8014caa:	9b02      	ldr	r3, [sp, #8]
 8014cac:	449c      	add	ip, r3
 8014cae:	44a0      	add	r8, r4
 8014cb0:	fb04 a40c 	mla	r4, r4, ip, sl
 8014cb4:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014cb8:	80d4      	strh	r4, [r2, #6]
 8014cba:	b013      	add	sp, #76	@ 0x4c
 8014cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cc0:	9d05      	ldr	r5, [sp, #20]
 8014cc2:	1a69      	subs	r1, r5, r1
 8014cc4:	bf5b      	ittet	pl
 8014cc6:	f1cc 0520 	rsbpl	r5, ip, #32
 8014cca:	436c      	mulpl	r4, r5
 8014ccc:	2500      	movmi	r5, #0
 8014cce:	2520      	movpl	r5, #32
 8014cd0:	bf44      	itt	mi
 8014cd2:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014cd6:	4249      	negmi	r1, r1
 8014cd8:	9501      	str	r5, [sp, #4]
 8014cda:	9f01      	ldr	r7, [sp, #4]
 8014cdc:	fb94 f5f1 	sdiv	r5, r4, r1
 8014ce0:	fb01 4415 	mls	r4, r1, r5, r4
 8014ce4:	bf54      	ite	pl
 8014ce6:	f04f 0901 	movpl.w	r9, #1
 8014cea:	f04f 39ff 	movmi.w	r9, #4294967295
 8014cee:	2c00      	cmp	r4, #0
 8014cf0:	bfb8      	it	lt
 8014cf2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014cf6:	44bc      	add	ip, r7
 8014cf8:	44a8      	add	r8, r5
 8014cfa:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014cfe:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014d02:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014d06:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014d0a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014d0e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8014d12:	bfb8      	it	lt
 8014d14:	1864      	addlt	r4, r4, r1
 8014d16:	ea58 0202 	orrs.w	r2, r8, r2
 8014d1a:	444e      	add	r6, r9
 8014d1c:	d011      	beq.n	8014d42 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014d1e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014d22:	f1b8 0f00 	cmp.w	r8, #0
 8014d26:	db0c      	blt.n	8014d42 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014d28:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8014d2a:	4590      	cmp	r8, r2
 8014d2c:	da09      	bge.n	8014d42 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014d2e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8014d32:	4590      	cmp	r8, r2
 8014d34:	bf3c      	itt	cc
 8014d36:	f10c 0208 	addcc.w	r2, ip, #8
 8014d3a:	6102      	strcc	r2, [r0, #16]
 8014d3c:	f108 0201 	add.w	r2, r8, #1
 8014d40:	6082      	str	r2, [r0, #8]
 8014d42:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014d46:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014d4a:	f8ac 6000 	strh.w	r6, [ip]
 8014d4e:	2700      	movs	r7, #0
 8014d50:	45b6      	cmp	lr, r6
 8014d52:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014d56:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014d5a:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014d5e:	442b      	add	r3, r5
 8014d60:	d04d      	beq.n	8014dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8014d62:	9f04      	ldr	r7, [sp, #16]
 8014d64:	1aff      	subs	r7, r7, r3
 8014d66:	443d      	add	r5, r7
 8014d68:	016d      	lsls	r5, r5, #5
 8014d6a:	fb95 f8f1 	sdiv	r8, r5, r1
 8014d6e:	fb01 5518 	mls	r5, r1, r8, r5
 8014d72:	2d00      	cmp	r5, #0
 8014d74:	bfb8      	it	lt
 8014d76:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014d7a:	f108 0701 	add.w	r7, r8, #1
 8014d7e:	bfb8      	it	lt
 8014d80:	186d      	addlt	r5, r5, r1
 8014d82:	1a64      	subs	r4, r4, r1
 8014d84:	9703      	str	r7, [sp, #12]
 8014d86:	f04f 0a00 	mov.w	sl, #0
 8014d8a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014d8e:	1964      	adds	r4, r4, r5
 8014d90:	bf58      	it	pl
 8014d92:	9f03      	ldrpl	r7, [sp, #12]
 8014d94:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014d98:	bf48      	it	mi
 8014d9a:	4647      	movmi	r7, r8
 8014d9c:	44bb      	add	fp, r7
 8014d9e:	f8ac b004 	strh.w	fp, [ip, #4]
 8014da2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014da6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014daa:	f8ac b006 	strh.w	fp, [ip, #6]
 8014dae:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014db2:	443b      	add	r3, r7
 8014db4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014db8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014dbc:	bf58      	it	pl
 8014dbe:	1a64      	subpl	r4, r4, r1
 8014dc0:	ea5b 0707 	orrs.w	r7, fp, r7
 8014dc4:	444e      	add	r6, r9
 8014dc6:	d011      	beq.n	8014dec <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014dc8:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014dcc:	f1bb 0f00 	cmp.w	fp, #0
 8014dd0:	db0c      	blt.n	8014dec <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014dd2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014dd4:	45bb      	cmp	fp, r7
 8014dd6:	da09      	bge.n	8014dec <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014dd8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014ddc:	45bb      	cmp	fp, r7
 8014dde:	bf3c      	itt	cc
 8014de0:	f10c 0708 	addcc.w	r7, ip, #8
 8014de4:	6107      	strcc	r7, [r0, #16]
 8014de6:	f10b 0701 	add.w	r7, fp, #1
 8014dea:	6087      	str	r7, [r0, #8]
 8014dec:	6907      	ldr	r7, [r0, #16]
 8014dee:	45b6      	cmp	lr, r6
 8014df0:	803e      	strh	r6, [r7, #0]
 8014df2:	807a      	strh	r2, [r7, #2]
 8014df4:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014df8:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014dfc:	d1c5      	bne.n	8014d8a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8014dfe:	9a04      	ldr	r2, [sp, #16]
 8014e00:	1ad3      	subs	r3, r2, r3
 8014e02:	6902      	ldr	r2, [r0, #16]
 8014e04:	8891      	ldrh	r1, [r2, #4]
 8014e06:	88d6      	ldrh	r6, [r2, #6]
 8014e08:	4419      	add	r1, r3
 8014e0a:	8091      	strh	r1, [r2, #4]
 8014e0c:	9902      	ldr	r1, [sp, #8]
 8014e0e:	f101 0c20 	add.w	ip, r1, #32
 8014e12:	9901      	ldr	r1, [sp, #4]
 8014e14:	ebac 0c01 	sub.w	ip, ip, r1
 8014e18:	fb03 630c 	mla	r3, r3, ip, r6
 8014e1c:	80d3      	strh	r3, [r2, #6]
 8014e1e:	e74c      	b.n	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014e20:	9d05      	ldr	r5, [sp, #20]
 8014e22:	1aa2      	subs	r2, r4, r2
 8014e24:	eba5 0501 	sub.w	r5, r5, r1
 8014e28:	9508      	str	r5, [sp, #32]
 8014e2a:	9202      	str	r2, [sp, #8]
 8014e2c:	f140 8128 	bpl.w	8015080 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8014e30:	9a03      	ldr	r2, [sp, #12]
 8014e32:	2a00      	cmp	r2, #0
 8014e34:	f6ff af41 	blt.w	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014e38:	9a02      	ldr	r2, [sp, #8]
 8014e3a:	4252      	negs	r2, r2
 8014e3c:	9202      	str	r2, [sp, #8]
 8014e3e:	9a06      	ldr	r2, [sp, #24]
 8014e40:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014e44:	f04f 34ff 	mov.w	r4, #4294967295
 8014e48:	9206      	str	r2, [sp, #24]
 8014e4a:	462a      	mov	r2, r5
 8014e4c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8014e4e:	435a      	muls	r2, r3
 8014e50:	2400      	movs	r4, #0
 8014e52:	9d02      	ldr	r5, [sp, #8]
 8014e54:	9401      	str	r4, [sp, #4]
 8014e56:	9c02      	ldr	r4, [sp, #8]
 8014e58:	fb92 f4f4 	sdiv	r4, r2, r4
 8014e5c:	fb05 2214 	mls	r2, r5, r4, r2
 8014e60:	2a00      	cmp	r2, #0
 8014e62:	9207      	str	r2, [sp, #28]
 8014e64:	bfbc      	itt	lt
 8014e66:	1952      	addlt	r2, r2, r5
 8014e68:	9207      	strlt	r2, [sp, #28]
 8014e6a:	9a01      	ldr	r2, [sp, #4]
 8014e6c:	6905      	ldr	r5, [r0, #16]
 8014e6e:	bfb8      	it	lt
 8014e70:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014e74:	eb04 0901 	add.w	r9, r4, r1
 8014e78:	429a      	cmp	r2, r3
 8014e7a:	ea4f 1669 	mov.w	r6, r9, asr #5
 8014e7e:	f040 8112 	bne.w	80150a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8014e82:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014e86:	429e      	cmp	r6, r3
 8014e88:	d104      	bne.n	8014e94 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014e8a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014e8e:	9a03      	ldr	r2, [sp, #12]
 8014e90:	429a      	cmp	r2, r3
 8014e92:	d01b      	beq.n	8014ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014e94:	88ea      	ldrh	r2, [r5, #6]
 8014e96:	88ab      	ldrh	r3, [r5, #4]
 8014e98:	4313      	orrs	r3, r2
 8014e9a:	d010      	beq.n	8014ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014e9c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014ea0:	2a00      	cmp	r2, #0
 8014ea2:	db0c      	blt.n	8014ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014ea4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014ea6:	429a      	cmp	r2, r3
 8014ea8:	da09      	bge.n	8014ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014eaa:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8014eae:	429a      	cmp	r2, r3
 8014eb0:	bf38      	it	cc
 8014eb2:	3508      	addcc	r5, #8
 8014eb4:	f102 0201 	add.w	r2, r2, #1
 8014eb8:	bf38      	it	cc
 8014eba:	6105      	strcc	r5, [r0, #16]
 8014ebc:	6082      	str	r2, [r0, #8]
 8014ebe:	6903      	ldr	r3, [r0, #16]
 8014ec0:	9a03      	ldr	r2, [sp, #12]
 8014ec2:	805a      	strh	r2, [r3, #2]
 8014ec4:	2200      	movs	r2, #0
 8014ec6:	801e      	strh	r6, [r3, #0]
 8014ec8:	809a      	strh	r2, [r3, #4]
 8014eca:	80da      	strh	r2, [r3, #6]
 8014ecc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014ece:	9a03      	ldr	r2, [sp, #12]
 8014ed0:	6901      	ldr	r1, [r0, #16]
 8014ed2:	441a      	add	r2, r3
 8014ed4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014ed8:	42b3      	cmp	r3, r6
 8014eda:	d103      	bne.n	8014ee4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8014edc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014ee0:	429a      	cmp	r2, r3
 8014ee2:	d01a      	beq.n	8014f1a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8014ee4:	88cc      	ldrh	r4, [r1, #6]
 8014ee6:	888b      	ldrh	r3, [r1, #4]
 8014ee8:	4323      	orrs	r3, r4
 8014eea:	d010      	beq.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014eec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014ef0:	2c00      	cmp	r4, #0
 8014ef2:	db0c      	blt.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014ef4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014ef6:	429c      	cmp	r4, r3
 8014ef8:	da09      	bge.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014efa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014efe:	429c      	cmp	r4, r3
 8014f00:	bf38      	it	cc
 8014f02:	3108      	addcc	r1, #8
 8014f04:	f104 0401 	add.w	r4, r4, #1
 8014f08:	bf38      	it	cc
 8014f0a:	6101      	strcc	r1, [r0, #16]
 8014f0c:	6084      	str	r4, [r0, #8]
 8014f0e:	6903      	ldr	r3, [r0, #16]
 8014f10:	2100      	movs	r1, #0
 8014f12:	801e      	strh	r6, [r3, #0]
 8014f14:	805a      	strh	r2, [r3, #2]
 8014f16:	8099      	strh	r1, [r3, #4]
 8014f18:	80d9      	strh	r1, [r3, #6]
 8014f1a:	9b06      	ldr	r3, [sp, #24]
 8014f1c:	4293      	cmp	r3, r2
 8014f1e:	f000 8082 	beq.w	8015026 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8014f22:	9b08      	ldr	r3, [sp, #32]
 8014f24:	9c02      	ldr	r4, [sp, #8]
 8014f26:	9902      	ldr	r1, [sp, #8]
 8014f28:	015b      	lsls	r3, r3, #5
 8014f2a:	fb93 f1f1 	sdiv	r1, r3, r1
 8014f2e:	fb04 3311 	mls	r3, r4, r1, r3
 8014f32:	2b00      	cmp	r3, #0
 8014f34:	9103      	str	r1, [sp, #12]
 8014f36:	9308      	str	r3, [sp, #32]
 8014f38:	da04      	bge.n	8014f44 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014f3a:	1e4b      	subs	r3, r1, #1
 8014f3c:	9303      	str	r3, [sp, #12]
 8014f3e:	9b08      	ldr	r3, [sp, #32]
 8014f40:	4423      	add	r3, r4
 8014f42:	9308      	str	r3, [sp, #32]
 8014f44:	9b07      	ldr	r3, [sp, #28]
 8014f46:	9902      	ldr	r1, [sp, #8]
 8014f48:	1a5b      	subs	r3, r3, r1
 8014f4a:	9307      	str	r3, [sp, #28]
 8014f4c:	9b01      	ldr	r3, [sp, #4]
 8014f4e:	f1c3 0320 	rsb	r3, r3, #32
 8014f52:	930e      	str	r3, [sp, #56]	@ 0x38
 8014f54:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014f56:	9b01      	ldr	r3, [sp, #4]
 8014f58:	1a5b      	subs	r3, r3, r1
 8014f5a:	464f      	mov	r7, r9
 8014f5c:	930a      	str	r3, [sp, #40]	@ 0x28
 8014f5e:	2600      	movs	r6, #0
 8014f60:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014f64:	185b      	adds	r3, r3, r1
 8014f66:	bf58      	it	pl
 8014f68:	9902      	ldrpl	r1, [sp, #8]
 8014f6a:	9307      	str	r3, [sp, #28]
 8014f6c:	bf5d      	ittte	pl
 8014f6e:	1a5b      	subpl	r3, r3, r1
 8014f70:	9307      	strpl	r3, [sp, #28]
 8014f72:	9b03      	ldrpl	r3, [sp, #12]
 8014f74:	9903      	ldrmi	r1, [sp, #12]
 8014f76:	bf58      	it	pl
 8014f78:	1c59      	addpl	r1, r3, #1
 8014f7a:	4489      	add	r9, r1
 8014f7c:	2a00      	cmp	r2, #0
 8014f7e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8014f82:	db2e      	blt.n	8014fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014f84:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014f86:	4293      	cmp	r3, r2
 8014f88:	dd2b      	ble.n	8014fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014f8a:	9c01      	ldr	r4, [sp, #4]
 8014f8c:	6905      	ldr	r5, [r0, #16]
 8014f8e:	46a0      	mov	r8, r4
 8014f90:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8014f92:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8014f96:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014f9a:	45a0      	cmp	r8, r4
 8014f9c:	f040 814f 	bne.w	801523e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8014fa0:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014fa4:	4551      	cmp	r1, sl
 8014fa6:	d103      	bne.n	8014fb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8014fa8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014fac:	4291      	cmp	r1, r2
 8014fae:	d018      	beq.n	8014fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014fb0:	ea5c 010e 	orrs.w	r1, ip, lr
 8014fb4:	d00f      	beq.n	8014fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014fb6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014fba:	2900      	cmp	r1, #0
 8014fbc:	db0b      	blt.n	8014fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014fbe:	428b      	cmp	r3, r1
 8014fc0:	dd09      	ble.n	8014fd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014fc2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8014fc6:	4299      	cmp	r1, r3
 8014fc8:	bf38      	it	cc
 8014fca:	3508      	addcc	r5, #8
 8014fcc:	f101 0101 	add.w	r1, r1, #1
 8014fd0:	bf38      	it	cc
 8014fd2:	6105      	strcc	r5, [r0, #16]
 8014fd4:	6081      	str	r1, [r0, #8]
 8014fd6:	6903      	ldr	r3, [r0, #16]
 8014fd8:	f8a3 a000 	strh.w	sl, [r3]
 8014fdc:	805a      	strh	r2, [r3, #2]
 8014fde:	809e      	strh	r6, [r3, #4]
 8014fe0:	80de      	strh	r6, [r3, #6]
 8014fe2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8014fe4:	6901      	ldr	r1, [r0, #16]
 8014fe6:	441a      	add	r2, r3
 8014fe8:	88cc      	ldrh	r4, [r1, #6]
 8014fea:	888b      	ldrh	r3, [r1, #4]
 8014fec:	4323      	orrs	r3, r4
 8014fee:	d010      	beq.n	8015012 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014ff0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014ff4:	2c00      	cmp	r4, #0
 8014ff6:	db0c      	blt.n	8015012 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014ff8:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014ffa:	429c      	cmp	r4, r3
 8014ffc:	da09      	bge.n	8015012 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014ffe:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8015002:	429c      	cmp	r4, r3
 8015004:	bf38      	it	cc
 8015006:	3108      	addcc	r1, #8
 8015008:	f104 0401 	add.w	r4, r4, #1
 801500c:	bf38      	it	cc
 801500e:	6101      	strcc	r1, [r0, #16]
 8015010:	6084      	str	r4, [r0, #8]
 8015012:	6903      	ldr	r3, [r0, #16]
 8015014:	f8a3 a000 	strh.w	sl, [r3]
 8015018:	805a      	strh	r2, [r3, #2]
 801501a:	809e      	strh	r6, [r3, #4]
 801501c:	80de      	strh	r6, [r3, #6]
 801501e:	9b06      	ldr	r3, [sp, #24]
 8015020:	4293      	cmp	r3, r2
 8015022:	464f      	mov	r7, r9
 8015024:	d19c      	bne.n	8014f60 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8015026:	9b01      	ldr	r3, [sp, #4]
 8015028:	6907      	ldr	r7, [r0, #16]
 801502a:	f1c3 0620 	rsb	r6, r3, #32
 801502e:	9b05      	ldr	r3, [sp, #20]
 8015030:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8015034:	9b04      	ldr	r3, [sp, #16]
 8015036:	429e      	cmp	r6, r3
 8015038:	f040 81cc 	bne.w	80153d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 801503c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8015040:	459e      	cmp	lr, r3
 8015042:	d104      	bne.n	801504e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8015044:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8015048:	429a      	cmp	r2, r3
 801504a:	f43f ae36 	beq.w	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801504e:	88f9      	ldrh	r1, [r7, #6]
 8015050:	88bb      	ldrh	r3, [r7, #4]
 8015052:	430b      	orrs	r3, r1
 8015054:	d010      	beq.n	8015078 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015056:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801505a:	2b00      	cmp	r3, #0
 801505c:	db0c      	blt.n	8015078 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801505e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8015060:	428b      	cmp	r3, r1
 8015062:	da09      	bge.n	8015078 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8015064:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8015068:	428b      	cmp	r3, r1
 801506a:	bf38      	it	cc
 801506c:	3708      	addcc	r7, #8
 801506e:	f103 0301 	add.w	r3, r3, #1
 8015072:	bf38      	it	cc
 8015074:	6107      	strcc	r7, [r0, #16]
 8015076:	6083      	str	r3, [r0, #8]
 8015078:	6903      	ldr	r3, [r0, #16]
 801507a:	f8a3 e000 	strh.w	lr, [r3]
 801507e:	e5ff      	b.n	8014c80 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8015080:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8015082:	9c03      	ldr	r4, [sp, #12]
 8015084:	42a2      	cmp	r2, r4
 8015086:	f6ff ae18 	blt.w	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801508a:	9c06      	ldr	r4, [sp, #24]
 801508c:	42a2      	cmp	r2, r4
 801508e:	bfb8      	it	lt
 8015090:	3201      	addlt	r2, #1
 8015092:	9c08      	ldr	r4, [sp, #32]
 8015094:	bfb8      	it	lt
 8015096:	9206      	strlt	r2, [sp, #24]
 8015098:	f1c3 0220 	rsb	r2, r3, #32
 801509c:	4362      	muls	r2, r4
 801509e:	2401      	movs	r4, #1
 80150a0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80150a2:	2420      	movs	r4, #32
 80150a4:	e6d5      	b.n	8014e52 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80150a6:	f009 021f 	and.w	r2, r9, #31
 80150aa:	ea4f 1861 	mov.w	r8, r1, asr #5
 80150ae:	920c      	str	r2, [sp, #48]	@ 0x30
 80150b0:	9a01      	ldr	r2, [sp, #4]
 80150b2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80150b6:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80150ba:	45b0      	cmp	r8, r6
 80150bc:	f001 011f 	and.w	r1, r1, #31
 80150c0:	eba2 0203 	sub.w	r2, r2, r3
 80150c4:	d108      	bne.n	80150d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80150c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80150c8:	4419      	add	r1, r3
 80150ca:	4496      	add	lr, r2
 80150cc:	fb02 a101 	mla	r1, r2, r1, sl
 80150d0:	f8a5 e004 	strh.w	lr, [r5, #4]
 80150d4:	80e9      	strh	r1, [r5, #6]
 80150d6:	e6f9      	b.n	8014ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80150d8:	2c00      	cmp	r4, #0
 80150da:	f2c0 80a9 	blt.w	8015230 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80150de:	2701      	movs	r7, #1
 80150e0:	f1c1 0c20 	rsb	ip, r1, #32
 80150e4:	970a      	str	r7, [sp, #40]	@ 0x28
 80150e6:	fb02 f20c 	mul.w	r2, r2, ip
 80150ea:	2720      	movs	r7, #32
 80150ec:	9709      	str	r7, [sp, #36]	@ 0x24
 80150ee:	fb92 fcf4 	sdiv	ip, r2, r4
 80150f2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80150f4:	fb04 221c 	mls	r2, r4, ip, r2
 80150f8:	2a00      	cmp	r2, #0
 80150fa:	bfb8      	it	lt
 80150fc:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8015100:	4439      	add	r1, r7
 8015102:	fb0c a101 	mla	r1, ip, r1, sl
 8015106:	80e9      	strh	r1, [r5, #6]
 8015108:	44e6      	add	lr, ip
 801510a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801510c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8015110:	eb08 0501 	add.w	r5, r8, r1
 8015114:	6901      	ldr	r1, [r0, #16]
 8015116:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801511a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801511e:	bfb8      	it	lt
 8015120:	1912      	addlt	r2, r2, r4
 8015122:	ea58 070e 	orrs.w	r7, r8, lr
 8015126:	d010      	beq.n	801514a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015128:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801512c:	f1be 0f00 	cmp.w	lr, #0
 8015130:	db0b      	blt.n	801514a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015132:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8015134:	45be      	cmp	lr, r7
 8015136:	da08      	bge.n	801514a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8015138:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801513c:	45be      	cmp	lr, r7
 801513e:	bf3c      	itt	cc
 8015140:	3108      	addcc	r1, #8
 8015142:	6101      	strcc	r1, [r0, #16]
 8015144:	f10e 0101 	add.w	r1, lr, #1
 8015148:	6081      	str	r1, [r0, #8]
 801514a:	6901      	ldr	r1, [r0, #16]
 801514c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015150:	800d      	strh	r5, [r1, #0]
 8015152:	f04f 0e00 	mov.w	lr, #0
 8015156:	42ae      	cmp	r6, r5
 8015158:	f8a1 8002 	strh.w	r8, [r1, #2]
 801515c:	f8a1 e004 	strh.w	lr, [r1, #4]
 8015160:	f8a1 e006 	strh.w	lr, [r1, #6]
 8015164:	4463      	add	r3, ip
 8015166:	d054      	beq.n	8015212 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8015168:	9901      	ldr	r1, [sp, #4]
 801516a:	1ac9      	subs	r1, r1, r3
 801516c:	4461      	add	r1, ip
 801516e:	0149      	lsls	r1, r1, #5
 8015170:	fb91 fef4 	sdiv	lr, r1, r4
 8015174:	fb04 111e 	mls	r1, r4, lr, r1
 8015178:	2900      	cmp	r1, #0
 801517a:	bfb8      	it	lt
 801517c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8015180:	f10e 0701 	add.w	r7, lr, #1
 8015184:	bfb8      	it	lt
 8015186:	1909      	addlt	r1, r1, r4
 8015188:	1b12      	subs	r2, r2, r4
 801518a:	970d      	str	r7, [sp, #52]	@ 0x34
 801518c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8015190:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8015192:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8015196:	1852      	adds	r2, r2, r1
 8015198:	bf54      	ite	pl
 801519a:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 801519e:	46f4      	movmi	ip, lr
 80151a0:	44e3      	add	fp, ip
 80151a2:	f8aa b004 	strh.w	fp, [sl, #4]
 80151a6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80151aa:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80151ae:	f8aa b006 	strh.w	fp, [sl, #6]
 80151b2:	4463      	add	r3, ip
 80151b4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80151b8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80151bc:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80151c0:	bf58      	it	pl
 80151c2:	1b12      	subpl	r2, r2, r4
 80151c4:	443d      	add	r5, r7
 80151c6:	ea5b 070a 	orrs.w	r7, fp, sl
 80151ca:	d014      	beq.n	80151f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80151cc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80151d0:	f1ba 0f00 	cmp.w	sl, #0
 80151d4:	db0f      	blt.n	80151f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80151d6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80151d8:	45ba      	cmp	sl, r7
 80151da:	da0c      	bge.n	80151f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80151dc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80151e0:	45ba      	cmp	sl, r7
 80151e2:	bf38      	it	cc
 80151e4:	f10c 0c08 	addcc.w	ip, ip, #8
 80151e8:	f10a 0a01 	add.w	sl, sl, #1
 80151ec:	bf38      	it	cc
 80151ee:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80151f2:	f8c0 a008 	str.w	sl, [r0, #8]
 80151f6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80151fa:	f04f 0700 	mov.w	r7, #0
 80151fe:	42ae      	cmp	r6, r5
 8015200:	f8ac 5000 	strh.w	r5, [ip]
 8015204:	f8ac 8002 	strh.w	r8, [ip, #2]
 8015208:	f8ac 7004 	strh.w	r7, [ip, #4]
 801520c:	f8ac 7006 	strh.w	r7, [ip, #6]
 8015210:	d1bc      	bne.n	801518c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8015212:	6904      	ldr	r4, [r0, #16]
 8015214:	9a01      	ldr	r2, [sp, #4]
 8015216:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015218:	1ad3      	subs	r3, r2, r3
 801521a:	88a2      	ldrh	r2, [r4, #4]
 801521c:	441a      	add	r2, r3
 801521e:	80a2      	strh	r2, [r4, #4]
 8015220:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015222:	3120      	adds	r1, #32
 8015224:	1a89      	subs	r1, r1, r2
 8015226:	88e2      	ldrh	r2, [r4, #6]
 8015228:	fb03 2301 	mla	r3, r3, r1, r2
 801522c:	80e3      	strh	r3, [r4, #6]
 801522e:	e64d      	b.n	8014ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8015230:	f04f 37ff 	mov.w	r7, #4294967295
 8015234:	970a      	str	r7, [sp, #40]	@ 0x28
 8015236:	434a      	muls	r2, r1
 8015238:	4264      	negs	r4, r4
 801523a:	2700      	movs	r7, #0
 801523c:	e756      	b.n	80150ec <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801523e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8015242:	f009 031f 	and.w	r3, r9, #31
 8015246:	45d0      	cmp	r8, sl
 8015248:	f007 071f 	and.w	r7, r7, #31
 801524c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801524e:	fa1f fc8c 	uxth.w	ip, ip
 8015252:	fa1f fe8e 	uxth.w	lr, lr
 8015256:	d10a      	bne.n	801526e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8015258:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801525a:	449c      	add	ip, r3
 801525c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801525e:	f8a5 c004 	strh.w	ip, [r5, #4]
 8015262:	441f      	add	r7, r3
 8015264:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015266:	fb03 e707 	mla	r7, r3, r7, lr
 801526a:	80ef      	strh	r7, [r5, #6]
 801526c:	e6b9      	b.n	8014fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801526e:	2900      	cmp	r1, #0
 8015270:	f2c0 80a8 	blt.w	80153c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8015274:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8015276:	f1c7 0320 	rsb	r3, r7, #32
 801527a:	4363      	muls	r3, r4
 801527c:	2401      	movs	r4, #1
 801527e:	940d      	str	r4, [sp, #52]	@ 0x34
 8015280:	2420      	movs	r4, #32
 8015282:	940c      	str	r4, [sp, #48]	@ 0x30
 8015284:	fb93 f4f1 	sdiv	r4, r3, r1
 8015288:	fb01 3b14 	mls	fp, r1, r4, r3
 801528c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801528e:	f1bb 0f00 	cmp.w	fp, #0
 8015292:	bfb8      	it	lt
 8015294:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8015298:	441f      	add	r7, r3
 801529a:	fb04 e707 	mla	r7, r4, r7, lr
 801529e:	44a4      	add	ip, r4
 80152a0:	f8a5 c004 	strh.w	ip, [r5, #4]
 80152a4:	80ef      	strh	r7, [r5, #6]
 80152a6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80152aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80152ac:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80152b0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80152b4:	bfb8      	it	lt
 80152b6:	448b      	addlt	fp, r1
 80152b8:	eb08 0503 	add.w	r5, r8, r3
 80152bc:	ea5e 0307 	orrs.w	r3, lr, r7
 80152c0:	d011      	beq.n	80152e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80152c2:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80152c6:	f1be 0f00 	cmp.w	lr, #0
 80152ca:	db0c      	blt.n	80152e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80152cc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80152ce:	45be      	cmp	lr, r7
 80152d0:	da09      	bge.n	80152e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80152d2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80152d6:	45be      	cmp	lr, r7
 80152d8:	bf3c      	itt	cc
 80152da:	f10c 0708 	addcc.w	r7, ip, #8
 80152de:	6107      	strcc	r7, [r0, #16]
 80152e0:	f10e 0701 	add.w	r7, lr, #1
 80152e4:	6087      	str	r7, [r0, #8]
 80152e6:	6907      	ldr	r7, [r0, #16]
 80152e8:	b213      	sxth	r3, r2
 80152ea:	9310      	str	r3, [sp, #64]	@ 0x40
 80152ec:	807b      	strh	r3, [r7, #2]
 80152ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80152f0:	803d      	strh	r5, [r7, #0]
 80152f2:	4555      	cmp	r5, sl
 80152f4:	80be      	strh	r6, [r7, #4]
 80152f6:	80fe      	strh	r6, [r7, #6]
 80152f8:	eb04 0c03 	add.w	ip, r4, r3
 80152fc:	d051      	beq.n	80153a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80152fe:	9b01      	ldr	r3, [sp, #4]
 8015300:	eba3 070c 	sub.w	r7, r3, ip
 8015304:	443c      	add	r4, r7
 8015306:	0164      	lsls	r4, r4, #5
 8015308:	fb94 f8f1 	sdiv	r8, r4, r1
 801530c:	fb01 4418 	mls	r4, r1, r8, r4
 8015310:	2c00      	cmp	r4, #0
 8015312:	bfb8      	it	lt
 8015314:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8015318:	ebab 0301 	sub.w	r3, fp, r1
 801531c:	f108 0701 	add.w	r7, r8, #1
 8015320:	bfb8      	it	lt
 8015322:	1864      	addlt	r4, r4, r1
 8015324:	9309      	str	r3, [sp, #36]	@ 0x24
 8015326:	9711      	str	r7, [sp, #68]	@ 0x44
 8015328:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801532a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801532e:	191b      	adds	r3, r3, r4
 8015330:	bf58      	it	pl
 8015332:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8015334:	f8be b004 	ldrh.w	fp, [lr, #4]
 8015338:	9309      	str	r3, [sp, #36]	@ 0x24
 801533a:	bf48      	it	mi
 801533c:	4647      	movmi	r7, r8
 801533e:	44bb      	add	fp, r7
 8015340:	f8ae b004 	strh.w	fp, [lr, #4]
 8015344:	f8be b006 	ldrh.w	fp, [lr, #6]
 8015348:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801534c:	f8ae b006 	strh.w	fp, [lr, #6]
 8015350:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8015354:	44bc      	add	ip, r7
 8015356:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8015358:	f8be b006 	ldrh.w	fp, [lr, #6]
 801535c:	443d      	add	r5, r7
 801535e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8015362:	bf5c      	itt	pl
 8015364:	1a5b      	subpl	r3, r3, r1
 8015366:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8015368:	ea5b 0307 	orrs.w	r3, fp, r7
 801536c:	d011      	beq.n	8015392 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801536e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8015372:	f1bb 0f00 	cmp.w	fp, #0
 8015376:	db0c      	blt.n	8015392 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8015378:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801537a:	45bb      	cmp	fp, r7
 801537c:	da09      	bge.n	8015392 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801537e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015382:	45bb      	cmp	fp, r7
 8015384:	bf3c      	itt	cc
 8015386:	f10e 0708 	addcc.w	r7, lr, #8
 801538a:	6107      	strcc	r7, [r0, #16]
 801538c:	f10b 0701 	add.w	r7, fp, #1
 8015390:	6087      	str	r7, [r0, #8]
 8015392:	6907      	ldr	r7, [r0, #16]
 8015394:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015396:	803d      	strh	r5, [r7, #0]
 8015398:	4555      	cmp	r5, sl
 801539a:	807b      	strh	r3, [r7, #2]
 801539c:	80be      	strh	r6, [r7, #4]
 801539e:	80fe      	strh	r6, [r7, #6]
 80153a0:	d1c2      	bne.n	8015328 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80153a2:	9b01      	ldr	r3, [sp, #4]
 80153a4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80153a6:	eba3 0c0c 	sub.w	ip, r3, ip
 80153aa:	6903      	ldr	r3, [r0, #16]
 80153ac:	8899      	ldrh	r1, [r3, #4]
 80153ae:	4461      	add	r1, ip
 80153b0:	8099      	strh	r1, [r3, #4]
 80153b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80153b4:	3720      	adds	r7, #32
 80153b6:	1a7f      	subs	r7, r7, r1
 80153b8:	88d9      	ldrh	r1, [r3, #6]
 80153ba:	fb0c 1c07 	mla	ip, ip, r7, r1
 80153be:	f8a3 c006 	strh.w	ip, [r3, #6]
 80153c2:	e60e      	b.n	8014fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80153c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80153c6:	f04f 34ff 	mov.w	r4, #4294967295
 80153ca:	940d      	str	r4, [sp, #52]	@ 0x34
 80153cc:	437b      	muls	r3, r7
 80153ce:	4249      	negs	r1, r1
 80153d0:	2400      	movs	r4, #0
 80153d2:	e756      	b.n	8015282 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80153d4:	9905      	ldr	r1, [sp, #20]
 80153d6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80153da:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80153de:	f001 011f 	and.w	r1, r1, #31
 80153e2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80153e6:	9102      	str	r1, [sp, #8]
 80153e8:	9904      	ldr	r1, [sp, #16]
 80153ea:	45f3      	cmp	fp, lr
 80153ec:	f009 0c1f 	and.w	ip, r9, #31
 80153f0:	eba1 0406 	sub.w	r4, r1, r6
 80153f4:	d108      	bne.n	8015408 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80153f6:	9b02      	ldr	r3, [sp, #8]
 80153f8:	449c      	add	ip, r3
 80153fa:	44a0      	add	r8, r4
 80153fc:	fb04 a40c 	mla	r4, r4, ip, sl
 8015400:	f8a7 8004 	strh.w	r8, [r7, #4]
 8015404:	80fc      	strh	r4, [r7, #6]
 8015406:	e458      	b.n	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8015408:	9905      	ldr	r1, [sp, #20]
 801540a:	ebb1 0109 	subs.w	r1, r1, r9
 801540e:	bf5b      	ittet	pl
 8015410:	f1cc 0520 	rsbpl	r5, ip, #32
 8015414:	436c      	mulpl	r4, r5
 8015416:	2500      	movmi	r5, #0
 8015418:	2520      	movpl	r5, #32
 801541a:	bf44      	itt	mi
 801541c:	fb04 f40c 	mulmi.w	r4, r4, ip
 8015420:	4249      	negmi	r1, r1
 8015422:	9501      	str	r5, [sp, #4]
 8015424:	9b01      	ldr	r3, [sp, #4]
 8015426:	fb94 f5f1 	sdiv	r5, r4, r1
 801542a:	fb01 4415 	mls	r4, r1, r5, r4
 801542e:	bf54      	ite	pl
 8015430:	f04f 0901 	movpl.w	r9, #1
 8015434:	f04f 39ff 	movmi.w	r9, #4294967295
 8015438:	2c00      	cmp	r4, #0
 801543a:	bfb8      	it	lt
 801543c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8015440:	449c      	add	ip, r3
 8015442:	44a8      	add	r8, r5
 8015444:	fb05 ac0c 	mla	ip, r5, ip, sl
 8015448:	f8a7 8004 	strh.w	r8, [r7, #4]
 801544c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015450:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015454:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8015458:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801545c:	bfb8      	it	lt
 801545e:	1864      	addlt	r4, r4, r1
 8015460:	ea58 0707 	orrs.w	r7, r8, r7
 8015464:	eb0b 0309 	add.w	r3, fp, r9
 8015468:	d011      	beq.n	801548e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801546a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801546e:	f1b8 0f00 	cmp.w	r8, #0
 8015472:	db0c      	blt.n	801548e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8015474:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8015476:	45b8      	cmp	r8, r7
 8015478:	da09      	bge.n	801548e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801547a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801547e:	45b8      	cmp	r8, r7
 8015480:	bf3c      	itt	cc
 8015482:	f10c 0708 	addcc.w	r7, ip, #8
 8015486:	6107      	strcc	r7, [r0, #16]
 8015488:	f108 0701 	add.w	r7, r8, #1
 801548c:	6087      	str	r7, [r0, #8]
 801548e:	6907      	ldr	r7, [r0, #16]
 8015490:	f04f 0c00 	mov.w	ip, #0
 8015494:	b212      	sxth	r2, r2
 8015496:	459e      	cmp	lr, r3
 8015498:	803b      	strh	r3, [r7, #0]
 801549a:	807a      	strh	r2, [r7, #2]
 801549c:	f8a7 c004 	strh.w	ip, [r7, #4]
 80154a0:	f8a7 c006 	strh.w	ip, [r7, #6]
 80154a4:	442e      	add	r6, r5
 80154a6:	d04d      	beq.n	8015544 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80154a8:	9f04      	ldr	r7, [sp, #16]
 80154aa:	1bbf      	subs	r7, r7, r6
 80154ac:	443d      	add	r5, r7
 80154ae:	016d      	lsls	r5, r5, #5
 80154b0:	fb95 f8f1 	sdiv	r8, r5, r1
 80154b4:	fb01 5518 	mls	r5, r1, r8, r5
 80154b8:	4565      	cmp	r5, ip
 80154ba:	bfb8      	it	lt
 80154bc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80154c0:	f108 0701 	add.w	r7, r8, #1
 80154c4:	bfb8      	it	lt
 80154c6:	186d      	addlt	r5, r5, r1
 80154c8:	1a64      	subs	r4, r4, r1
 80154ca:	9703      	str	r7, [sp, #12]
 80154cc:	f04f 0a00 	mov.w	sl, #0
 80154d0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80154d4:	1964      	adds	r4, r4, r5
 80154d6:	bf58      	it	pl
 80154d8:	9f03      	ldrpl	r7, [sp, #12]
 80154da:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80154de:	bf48      	it	mi
 80154e0:	4647      	movmi	r7, r8
 80154e2:	44bb      	add	fp, r7
 80154e4:	f8ac b004 	strh.w	fp, [ip, #4]
 80154e8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80154ec:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80154f0:	f8ac b006 	strh.w	fp, [ip, #6]
 80154f4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80154f8:	443e      	add	r6, r7
 80154fa:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80154fe:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8015502:	bf58      	it	pl
 8015504:	1a64      	subpl	r4, r4, r1
 8015506:	ea5b 0707 	orrs.w	r7, fp, r7
 801550a:	444b      	add	r3, r9
 801550c:	d011      	beq.n	8015532 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801550e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8015512:	f1bb 0f00 	cmp.w	fp, #0
 8015516:	db0c      	blt.n	8015532 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015518:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 801551a:	45bb      	cmp	fp, r7
 801551c:	da09      	bge.n	8015532 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801551e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8015522:	45bb      	cmp	fp, r7
 8015524:	bf3c      	itt	cc
 8015526:	f10c 0708 	addcc.w	r7, ip, #8
 801552a:	6107      	strcc	r7, [r0, #16]
 801552c:	f10b 0701 	add.w	r7, fp, #1
 8015530:	6087      	str	r7, [r0, #8]
 8015532:	6907      	ldr	r7, [r0, #16]
 8015534:	459e      	cmp	lr, r3
 8015536:	803b      	strh	r3, [r7, #0]
 8015538:	807a      	strh	r2, [r7, #2]
 801553a:	f8a7 a004 	strh.w	sl, [r7, #4]
 801553e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8015542:	d1c5      	bne.n	80154d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8015544:	9b04      	ldr	r3, [sp, #16]
 8015546:	1b9e      	subs	r6, r3, r6
 8015548:	6903      	ldr	r3, [r0, #16]
 801554a:	889a      	ldrh	r2, [r3, #4]
 801554c:	4432      	add	r2, r6
 801554e:	809a      	strh	r2, [r3, #4]
 8015550:	9a02      	ldr	r2, [sp, #8]
 8015552:	f102 0c20 	add.w	ip, r2, #32
 8015556:	9a01      	ldr	r2, [sp, #4]
 8015558:	ebac 0c02 	sub.w	ip, ip, r2
 801555c:	88da      	ldrh	r2, [r3, #6]
 801555e:	fb06 260c 	mla	r6, r6, ip, r2
 8015562:	80de      	strh	r6, [r3, #6]
 8015564:	f7ff bba9 	b.w	8014cba <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08015568 <_ZN8touchgfx7Outline6lineToEii>:
 8015568:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801556a:	079b      	lsls	r3, r3, #30
 801556c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801556e:	460e      	mov	r6, r1
 8015570:	4615      	mov	r5, r2
 8015572:	d511      	bpl.n	8015598 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015574:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8015578:	ea86 0701 	eor.w	r7, r6, r1
 801557c:	ea85 0302 	eor.w	r3, r5, r2
 8015580:	433b      	orrs	r3, r7
 8015582:	d009      	beq.n	8015598 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015584:	4633      	mov	r3, r6
 8015586:	9500      	str	r5, [sp, #0]
 8015588:	f7ff fb3e 	bl	8014c08 <_ZN8touchgfx7Outline10renderLineEiiii>
 801558c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801558e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8015592:	f043 0301 	orr.w	r3, r3, #1
 8015596:	6243      	str	r3, [r0, #36]	@ 0x24
 8015598:	b003      	add	sp, #12
 801559a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801559c <_ZN8touchgfx7Outline6moveToEii>:
 801559c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801559e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80155a0:	4615      	mov	r5, r2
 80155a2:	079a      	lsls	r2, r3, #30
 80155a4:	4604      	mov	r4, r0
 80155a6:	460e      	mov	r6, r1
 80155a8:	d401      	bmi.n	80155ae <_ZN8touchgfx7Outline6moveToEii+0x12>
 80155aa:	f7ff faf9 	bl	8014ba0 <_ZN8touchgfx7Outline5resetEv>
 80155ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80155b0:	07db      	lsls	r3, r3, #31
 80155b2:	d504      	bpl.n	80155be <_ZN8touchgfx7Outline6moveToEii+0x22>
 80155b4:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 80155b8:	4620      	mov	r0, r4
 80155ba:	f7ff ffd5 	bl	8015568 <_ZN8touchgfx7Outline6lineToEii>
 80155be:	6923      	ldr	r3, [r4, #16]
 80155c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80155c4:	1170      	asrs	r0, r6, #5
 80155c6:	4290      	cmp	r0, r2
 80155c8:	ea4f 1165 	mov.w	r1, r5, asr #5
 80155cc:	d103      	bne.n	80155d6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80155ce:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80155d2:	4291      	cmp	r1, r2
 80155d4:	d01a      	beq.n	801560c <_ZN8touchgfx7Outline6moveToEii+0x70>
 80155d6:	88df      	ldrh	r7, [r3, #6]
 80155d8:	889a      	ldrh	r2, [r3, #4]
 80155da:	433a      	orrs	r2, r7
 80155dc:	d010      	beq.n	8015600 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80155de:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80155e2:	2a00      	cmp	r2, #0
 80155e4:	db0c      	blt.n	8015600 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80155e6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 80155e8:	42ba      	cmp	r2, r7
 80155ea:	da09      	bge.n	8015600 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80155ec:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80155f0:	42ba      	cmp	r2, r7
 80155f2:	bf38      	it	cc
 80155f4:	3308      	addcc	r3, #8
 80155f6:	f102 0201 	add.w	r2, r2, #1
 80155fa:	bf38      	it	cc
 80155fc:	6123      	strcc	r3, [r4, #16]
 80155fe:	60a2      	str	r2, [r4, #8]
 8015600:	6923      	ldr	r3, [r4, #16]
 8015602:	2200      	movs	r2, #0
 8015604:	8018      	strh	r0, [r3, #0]
 8015606:	8059      	strh	r1, [r3, #2]
 8015608:	809a      	strh	r2, [r3, #4]
 801560a:	80da      	strh	r2, [r3, #6]
 801560c:	6166      	str	r6, [r4, #20]
 801560e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8015612:	6225      	str	r5, [r4, #32]
 8015614:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015616 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8015616:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801561a:	b0d0      	sub	sp, #320	@ 0x140
 801561c:	466c      	mov	r4, sp
 801561e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8015622:	4627      	mov	r7, r4
 8015624:	1a0d      	subs	r5, r1, r0
 8015626:	2d48      	cmp	r5, #72	@ 0x48
 8015628:	f100 0308 	add.w	r3, r0, #8
 801562c:	f340 80d5 	ble.w	80157da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015630:	112d      	asrs	r5, r5, #4
 8015632:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8015636:	f9b0 9000 	ldrsh.w	r9, [r0]
 801563a:	6816      	ldr	r6, [r2, #0]
 801563c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8015640:	6006      	str	r6, [r0, #0]
 8015642:	6856      	ldr	r6, [r2, #4]
 8015644:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015648:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801564c:	6046      	str	r6, [r0, #4]
 801564e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015652:	f8a2 8002 	strh.w	r8, [r2, #2]
 8015656:	f8a2 e004 	strh.w	lr, [r2, #4]
 801565a:	f8a2 c006 	strh.w	ip, [r2, #6]
 801565e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8015662:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8015666:	4565      	cmp	r5, ip
 8015668:	f1a1 0208 	sub.w	r2, r1, #8
 801566c:	db06      	blt.n	801567c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801566e:	d119      	bne.n	80156a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015670:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015674:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8015678:	42ae      	cmp	r6, r5
 801567a:	dd13      	ble.n	80156a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801567c:	460e      	mov	r6, r1
 801567e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8015682:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015686:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801568a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801568e:	601d      	str	r5, [r3, #0]
 8015690:	6875      	ldr	r5, [r6, #4]
 8015692:	605d      	str	r5, [r3, #4]
 8015694:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015698:	f821 cc06 	strh.w	ip, [r1, #-6]
 801569c:	f821 8c04 	strh.w	r8, [r1, #-4]
 80156a0:	f821 ec02 	strh.w	lr, [r1, #-2]
 80156a4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80156a8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80156ac:	42ae      	cmp	r6, r5
 80156ae:	db06      	blt.n	80156be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80156b0:	d116      	bne.n	80156e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80156b2:	f9b0 c000 	ldrsh.w	ip, [r0]
 80156b6:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80156ba:	45ac      	cmp	ip, r5
 80156bc:	da10      	bge.n	80156e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80156be:	681d      	ldr	r5, [r3, #0]
 80156c0:	f9b0 8000 	ldrsh.w	r8, [r0]
 80156c4:	6005      	str	r5, [r0, #0]
 80156c6:	685d      	ldr	r5, [r3, #4]
 80156c8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80156cc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80156d0:	f8a0 8008 	strh.w	r8, [r0, #8]
 80156d4:	6045      	str	r5, [r0, #4]
 80156d6:	8146      	strh	r6, [r0, #10]
 80156d8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80156dc:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80156e0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80156e4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80156e8:	4565      	cmp	r5, ip
 80156ea:	db06      	blt.n	80156fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80156ec:	d119      	bne.n	8015722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80156ee:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80156f2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80156f6:	42ae      	cmp	r6, r5
 80156f8:	da13      	bge.n	8015722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80156fa:	460e      	mov	r6, r1
 80156fc:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015700:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015704:	6005      	str	r5, [r0, #0]
 8015706:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801570a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801570e:	6875      	ldr	r5, [r6, #4]
 8015710:	6045      	str	r5, [r0, #4]
 8015712:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015716:	f821 cc06 	strh.w	ip, [r1, #-6]
 801571a:	f821 8c04 	strh.w	r8, [r1, #-4]
 801571e:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015722:	3308      	adds	r3, #8
 8015724:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015728:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801572c:	45e6      	cmp	lr, ip
 801572e:	dbf8      	blt.n	8015722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015730:	d105      	bne.n	801573e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015732:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015736:	f9b0 5000 	ldrsh.w	r5, [r0]
 801573a:	42ae      	cmp	r6, r5
 801573c:	dbf1      	blt.n	8015722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801573e:	4615      	mov	r5, r2
 8015740:	3a08      	subs	r2, #8
 8015742:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8015746:	45b4      	cmp	ip, r6
 8015748:	dbf9      	blt.n	801573e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801574a:	d105      	bne.n	8015758 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801574c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015750:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015754:	45b0      	cmp	r8, r6
 8015756:	dbf2      	blt.n	801573e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015758:	4293      	cmp	r3, r2
 801575a:	f1a5 0608 	sub.w	r6, r5, #8
 801575e:	d816      	bhi.n	801578e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8015760:	f8d6 c000 	ldr.w	ip, [r6]
 8015764:	f9b3 a000 	ldrsh.w	sl, [r3]
 8015768:	f8c3 c000 	str.w	ip, [r3]
 801576c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8015770:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015774:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8015778:	f8c3 c004 	str.w	ip, [r3, #4]
 801577c:	f825 ac08 	strh.w	sl, [r5, #-8]
 8015780:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015784:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015788:	f825 8c02 	strh.w	r8, [r5, #-2]
 801578c:	e7c9      	b.n	8015722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801578e:	f8d6 e000 	ldr.w	lr, [r6]
 8015792:	f9b0 a000 	ldrsh.w	sl, [r0]
 8015796:	f8c0 e000 	str.w	lr, [r0]
 801579a:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801579e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80157a2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80157a6:	f8c0 e004 	str.w	lr, [r0, #4]
 80157aa:	f825 ac08 	strh.w	sl, [r5, #-8]
 80157ae:	f825 cc06 	strh.w	ip, [r5, #-6]
 80157b2:	f825 9c04 	strh.w	r9, [r5, #-4]
 80157b6:	f825 8c02 	strh.w	r8, [r5, #-2]
 80157ba:	1acd      	subs	r5, r1, r3
 80157bc:	1a16      	subs	r6, r2, r0
 80157be:	10ed      	asrs	r5, r5, #3
 80157c0:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80157c4:	bfb5      	itete	lt
 80157c6:	e9c4 0200 	strdlt	r0, r2, [r4]
 80157ca:	e9c4 3100 	strdge	r3, r1, [r4]
 80157ce:	460a      	movlt	r2, r1
 80157d0:	4603      	movge	r3, r0
 80157d2:	3408      	adds	r4, #8
 80157d4:	4618      	mov	r0, r3
 80157d6:	4611      	mov	r1, r2
 80157d8:	e724      	b.n	8015624 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80157da:	4299      	cmp	r1, r3
 80157dc:	d928      	bls.n	8015830 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80157de:	f1a3 0210 	sub.w	r2, r3, #16
 80157e2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80157e6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80157ea:	45ac      	cmp	ip, r5
 80157ec:	db06      	blt.n	80157fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80157ee:	d11d      	bne.n	801582c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80157f0:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80157f4:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80157f8:	42ae      	cmp	r6, r5
 80157fa:	da17      	bge.n	801582c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80157fc:	4615      	mov	r5, r2
 80157fe:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8015802:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8015806:	6116      	str	r6, [r2, #16]
 8015808:	686e      	ldr	r6, [r5, #4]
 801580a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801580e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8015812:	f8a2 9008 	strh.w	r9, [r2, #8]
 8015816:	42a8      	cmp	r0, r5
 8015818:	6156      	str	r6, [r2, #20]
 801581a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801581e:	f8a2 800c 	strh.w	r8, [r2, #12]
 8015822:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8015826:	f1a2 0208 	sub.w	r2, r2, #8
 801582a:	d1da      	bne.n	80157e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 801582c:	3308      	adds	r3, #8
 801582e:	e7d4      	b.n	80157da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015830:	42bc      	cmp	r4, r7
 8015832:	d903      	bls.n	801583c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8015834:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015838:	3c08      	subs	r4, #8
 801583a:	e6f3      	b.n	8015624 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801583c:	b050      	add	sp, #320	@ 0x140
 801583e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015842 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8015842:	b510      	push	{r4, lr}
 8015844:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015846:	07da      	lsls	r2, r3, #31
 8015848:	4604      	mov	r4, r0
 801584a:	d507      	bpl.n	801585c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801584c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8015850:	f7ff fe8a 	bl	8015568 <_ZN8touchgfx7Outline6lineToEii>
 8015854:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015856:	f023 0301 	bic.w	r3, r3, #1
 801585a:	6243      	str	r3, [r0, #36]	@ 0x24
 801585c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801585e:	079b      	lsls	r3, r3, #30
 8015860:	d521      	bpl.n	80158a6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8015862:	6923      	ldr	r3, [r4, #16]
 8015864:	88d9      	ldrh	r1, [r3, #6]
 8015866:	889a      	ldrh	r2, [r3, #4]
 8015868:	430a      	orrs	r2, r1
 801586a:	d010      	beq.n	801588e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801586c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8015870:	2a00      	cmp	r2, #0
 8015872:	db0c      	blt.n	801588e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015874:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8015876:	428a      	cmp	r2, r1
 8015878:	da09      	bge.n	801588e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801587a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801587e:	4291      	cmp	r1, r2
 8015880:	bf88      	it	hi
 8015882:	3308      	addhi	r3, #8
 8015884:	f102 0201 	add.w	r2, r2, #1
 8015888:	bf88      	it	hi
 801588a:	6123      	strhi	r3, [r4, #16]
 801588c:	60a2      	str	r2, [r4, #8]
 801588e:	68a1      	ldr	r1, [r4, #8]
 8015890:	b129      	cbz	r1, 801589e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015892:	6863      	ldr	r3, [r4, #4]
 8015894:	4299      	cmp	r1, r3
 8015896:	d802      	bhi.n	801589e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015898:	68e0      	ldr	r0, [r4, #12]
 801589a:	f7ff febc 	bl	8015616 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801589e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80158a0:	f023 0302 	bic.w	r3, r3, #2
 80158a4:	6263      	str	r3, [r4, #36]	@ 0x24
 80158a6:	68e0      	ldr	r0, [r4, #12]
 80158a8:	bd10      	pop	{r4, pc}
	...

080158ac <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80158ac:	4b02      	ldr	r3, [pc, #8]	@ (80158b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80158ae:	6018      	str	r0, [r3, #0]
 80158b0:	4b02      	ldr	r3, [pc, #8]	@ (80158bc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80158b2:	6019      	str	r1, [r3, #0]
 80158b4:	4770      	bx	lr
 80158b6:	bf00      	nop
 80158b8:	20013f68 	.word	0x20013f68
 80158bc:	20013f6c 	.word	0x20013f6c

080158c0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80158c0:	4a02      	ldr	r2, [pc, #8]	@ (80158cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80158c2:	2300      	movs	r3, #0
 80158c4:	6013      	str	r3, [r2, #0]
 80158c6:	4a02      	ldr	r2, [pc, #8]	@ (80158d0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80158c8:	6013      	str	r3, [r2, #0]
 80158ca:	4770      	bx	lr
 80158cc:	20013f68 	.word	0x20013f68
 80158d0:	20013f6c 	.word	0x20013f6c

080158d4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80158d4:	4b01      	ldr	r3, [pc, #4]	@ (80158dc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80158d6:	6818      	ldr	r0, [r3, #0]
 80158d8:	4770      	bx	lr
 80158da:	bf00      	nop
 80158dc:	20013f68 	.word	0x20013f68

080158e0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80158e0:	4b01      	ldr	r3, [pc, #4]	@ (80158e8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80158e2:	6818      	ldr	r0, [r3, #0]
 80158e4:	4770      	bx	lr
 80158e6:	bf00      	nop
 80158e8:	20013f6c 	.word	0x20013f6c

080158ec <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80158ec:	b510      	push	{r4, lr}
 80158ee:	6803      	ldr	r3, [r0, #0]
 80158f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80158f2:	460c      	mov	r4, r1
 80158f4:	4798      	blx	r3
 80158f6:	1b03      	subs	r3, r0, r4
 80158f8:	4258      	negs	r0, r3
 80158fa:	4158      	adcs	r0, r3
 80158fc:	bd10      	pop	{r4, pc}
	...

08015900 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8015900:	4b01      	ldr	r3, [pc, #4]	@ (8015908 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8015902:	6019      	str	r1, [r3, #0]
 8015904:	4770      	bx	lr
 8015906:	bf00      	nop
 8015908:	20013f70 	.word	0x20013f70

0801590c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801590c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015910:	4696      	mov	lr, r2
 8015912:	4605      	mov	r5, r0
 8015914:	4614      	mov	r4, r2
 8015916:	460e      	mov	r6, r1
 8015918:	461f      	mov	r7, r3
 801591a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801591e:	b097      	sub	sp, #92	@ 0x5c
 8015920:	f10d 0c1c 	add.w	ip, sp, #28
 8015924:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015928:	f8de 3000 	ldr.w	r3, [lr]
 801592c:	f8cc 3000 	str.w	r3, [ip]
 8015930:	f104 0e14 	add.w	lr, r4, #20
 8015934:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015938:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801593c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015940:	f8de 3000 	ldr.w	r3, [lr]
 8015944:	f8cc 3000 	str.w	r3, [ip]
 8015948:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 801594c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015950:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8015954:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015958:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 801595c:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8015960:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8015964:	f8de 3000 	ldr.w	r3, [lr]
 8015968:	f8cc 3000 	str.w	r3, [ip]
 801596c:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801596e:	682b      	ldr	r3, [r5, #0]
 8015970:	9201      	str	r2, [sp, #4]
 8015972:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015976:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8015978:	9200      	str	r2, [sp, #0]
 801597a:	f8cd 8008 	str.w	r8, [sp, #8]
 801597e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8015982:	aa07      	add	r2, sp, #28
 8015984:	463b      	mov	r3, r7
 8015986:	4631      	mov	r1, r6
 8015988:	4628      	mov	r0, r5
 801598a:	47d8      	blx	fp
 801598c:	46a6      	mov	lr, r4
 801598e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015992:	f10d 0c1c 	add.w	ip, sp, #28
 8015996:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801599a:	f8de 3000 	ldr.w	r3, [lr]
 801599e:	f8cc 3000 	str.w	r3, [ip]
 80159a2:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 80159a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80159aa:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80159ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80159b2:	343c      	adds	r4, #60	@ 0x3c
 80159b4:	f8de 3000 	ldr.w	r3, [lr]
 80159b8:	f8cc 3000 	str.w	r3, [ip]
 80159bc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80159be:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80159c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80159c6:	6823      	ldr	r3, [r4, #0]
 80159c8:	f8cc 3000 	str.w	r3, [ip]
 80159cc:	682b      	ldr	r3, [r5, #0]
 80159ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80159d2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80159d4:	9201      	str	r2, [sp, #4]
 80159d6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80159d8:	9200      	str	r2, [sp, #0]
 80159da:	f8cd 8008 	str.w	r8, [sp, #8]
 80159de:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80159e0:	aa07      	add	r2, sp, #28
 80159e2:	463b      	mov	r3, r7
 80159e4:	4631      	mov	r1, r6
 80159e6:	4628      	mov	r0, r5
 80159e8:	47a0      	blx	r4
 80159ea:	b017      	add	sp, #92	@ 0x5c
 80159ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080159f0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80159f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159f4:	b08d      	sub	sp, #52	@ 0x34
 80159f6:	4688      	mov	r8, r1
 80159f8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80159fa:	f8d3 c000 	ldr.w	ip, [r3]
 80159fe:	680f      	ldr	r7, [r1, #0]
 8015a00:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8015a04:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8015a08:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 8015a0c:	edd3 6a07 	vldr	s13, [r3, #28]
 8015a10:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8015a12:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8015a16:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015a1a:	f9ba 1000 	ldrsh.w	r1, [sl]
 8015a1e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8015a22:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8015a26:	eba7 070c 	sub.w	r7, r7, ip
 8015a2a:	42bc      	cmp	r4, r7
 8015a2c:	bfa8      	it	ge
 8015a2e:	463c      	movge	r4, r7
 8015a30:	ee07 4a90 	vmov	s15, r4
 8015a34:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015a38:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8015a3c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8015a40:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015a44:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015a48:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8015a4c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015a50:	eb09 0e0c 	add.w	lr, r9, ip
 8015a54:	4571      	cmp	r1, lr
 8015a56:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015a5a:	ee32 1a05 	vadd.f32	s2, s4, s10
 8015a5e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8015a62:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015a66:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015a6a:	f340 808d 	ble.w	8015b88 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8015a6e:	eba1 060e 	sub.w	r6, r1, lr
 8015a72:	fb96 f5f4 	sdiv	r5, r6, r4
 8015a76:	ee07 5a10 	vmov	s14, r5
 8015a7a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015a7e:	2d00      	cmp	r5, #0
 8015a80:	fb04 6615 	mls	r6, r4, r5, r6
 8015a84:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015a88:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015a8c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8015a90:	dd13      	ble.n	8015aba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8015a92:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015a96:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015a9a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8015a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015aa2:	bf18      	it	ne
 8015aa4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015aa8:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015aac:	bf08      	it	eq
 8015aae:	eeb0 7a67 	vmoveq.f32	s14, s15
 8015ab2:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015ab6:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015aba:	fb05 f204 	mul.w	r2, r5, r4
 8015abe:	1abf      	subs	r7, r7, r2
 8015ac0:	4494      	add	ip, r2
 8015ac2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8015ac6:	4411      	add	r1, r2
 8015ac8:	eb09 020c 	add.w	r2, r9, ip
 8015acc:	443a      	add	r2, r7
 8015ace:	b209      	sxth	r1, r1
 8015ad0:	428a      	cmp	r2, r1
 8015ad2:	bfc4      	itt	gt
 8015ad4:	eba1 0209 	subgt.w	r2, r1, r9
 8015ad8:	eba2 070c 	subgt.w	r7, r2, ip
 8015adc:	2f00      	cmp	r7, #0
 8015ade:	dd50      	ble.n	8015b82 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8015ae0:	fb97 f1f4 	sdiv	r1, r7, r4
 8015ae4:	fb04 7211 	mls	r2, r4, r1, r7
 8015ae8:	b90a      	cbnz	r2, 8015aee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8015aea:	3901      	subs	r1, #1
 8015aec:	4622      	mov	r2, r4
 8015aee:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8015af2:	6840      	ldr	r0, [r0, #4]
 8015af4:	900b      	str	r0, [sp, #44]	@ 0x2c
 8015af6:	f8d0 a000 	ldr.w	sl, [r0]
 8015afa:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8015afc:	9008      	str	r0, [sp, #32]
 8015afe:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8015b02:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8015b04:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8015b08:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8015b0c:	695b      	ldr	r3, [r3, #20]
 8015b0e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015b10:	445b      	add	r3, fp
 8015b12:	eef0 6a42 	vmov.f32	s13, s4
 8015b16:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015b1a:	ee21 3a23 	vmul.f32	s6, s2, s7
 8015b1e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8015b22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015b26:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015b2a:	9307      	str	r3, [sp, #28]
 8015b2c:	ee17 7a90 	vmov	r7, s15
 8015b30:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015b34:	eeb0 7a61 	vmov.f32	s14, s3
 8015b38:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015b3c:	ee16 3a90 	vmov	r3, s13
 8015b40:	fb97 f7f4 	sdiv	r7, r7, r4
 8015b44:	ee17 ca90 	vmov	ip, s15
 8015b48:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015b4c:	fb9c fcf4 	sdiv	ip, ip, r4
 8015b50:	fb0c 3306 	mla	r3, ip, r6, r3
 8015b54:	9302      	str	r3, [sp, #8]
 8015b56:	ee17 3a10 	vmov	r3, s14
 8015b5a:	44b6      	add	lr, r6
 8015b5c:	fb04 e505 	mla	r5, r4, r5, lr
 8015b60:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015b64:	fb07 3706 	mla	r7, r7, r6, r3
 8015b68:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015b6c:	e9cd 4700 	strd	r4, r7, [sp]
 8015b70:	2900      	cmp	r1, #0
 8015b72:	bfcc      	ite	gt
 8015b74:	46a1      	movgt	r9, r4
 8015b76:	4691      	movle	r9, r2
 8015b78:	eba9 0306 	sub.w	r3, r9, r6
 8015b7c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8015b80:	47a0      	blx	r4
 8015b82:	b00d      	add	sp, #52	@ 0x34
 8015b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b88:	2500      	movs	r5, #0
 8015b8a:	462e      	mov	r6, r5
 8015b8c:	e799      	b.n	8015ac2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08015b90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b94:	b0db      	sub	sp, #364	@ 0x16c
 8015b96:	461d      	mov	r5, r3
 8015b98:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8015b9c:	930a      	str	r3, [sp, #40]	@ 0x28
 8015b9e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8015ba2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015ba4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8015ba8:	9310      	str	r3, [sp, #64]	@ 0x40
 8015baa:	6803      	ldr	r3, [r0, #0]
 8015bac:	910f      	str	r1, [sp, #60]	@ 0x3c
 8015bae:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8015bb0:	9009      	str	r0, [sp, #36]	@ 0x24
 8015bb2:	4614      	mov	r4, r2
 8015bb4:	4629      	mov	r1, r5
 8015bb6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8015bba:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8015bbe:	47b8      	blx	r7
 8015bc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015bc2:	6058      	str	r0, [r3, #4]
 8015bc4:	2800      	cmp	r0, #0
 8015bc6:	f000 83a1 	beq.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015bca:	682b      	ldr	r3, [r5, #0]
 8015bcc:	9314      	str	r3, [sp, #80]	@ 0x50
 8015bce:	686b      	ldr	r3, [r5, #4]
 8015bd0:	9315      	str	r3, [sp, #84]	@ 0x54
 8015bd2:	4bc4      	ldr	r3, [pc, #784]	@ (8015ee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8015bd4:	ed94 7a02 	vldr	s14, [r4, #8]
 8015bd8:	7819      	ldrb	r1, [r3, #0]
 8015bda:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8015bde:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8015be2:	2900      	cmp	r1, #0
 8015be4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015be8:	bf16      	itet	ne
 8015bea:	4619      	movne	r1, r3
 8015bec:	4611      	moveq	r1, r2
 8015bee:	4613      	movne	r3, r2
 8015bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015bf4:	9116      	str	r1, [sp, #88]	@ 0x58
 8015bf6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8015bfa:	f240 8387 	bls.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015bfe:	ed94 7a07 	vldr	s14, [r4, #28]
 8015c02:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015c06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015c0a:	f240 837f 	bls.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c0e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8015c12:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015c1a:	f240 8377 	bls.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c1e:	6822      	ldr	r2, [r4, #0]
 8015c20:	4bb1      	ldr	r3, [pc, #708]	@ (8015ee8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8015c22:	429a      	cmp	r2, r3
 8015c24:	f2c0 8372 	blt.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c28:	49b0      	ldr	r1, [pc, #704]	@ (8015eec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015c2a:	6963      	ldr	r3, [r4, #20]
 8015c2c:	428a      	cmp	r2, r1
 8015c2e:	f300 836d 	bgt.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c32:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8015c36:	48ae      	ldr	r0, [pc, #696]	@ (8015ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015c38:	33ff      	adds	r3, #255	@ 0xff
 8015c3a:	4283      	cmp	r3, r0
 8015c3c:	f200 8366 	bhi.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c40:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8015c42:	4dac      	ldr	r5, [pc, #688]	@ (8015ef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015c44:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8015c48:	33ff      	adds	r3, #255	@ 0xff
 8015c4a:	42ab      	cmp	r3, r5
 8015c4c:	f200 835e 	bhi.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c50:	6862      	ldr	r2, [r4, #4]
 8015c52:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8015c56:	33ff      	adds	r3, #255	@ 0xff
 8015c58:	4283      	cmp	r3, r0
 8015c5a:	f200 8357 	bhi.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c5e:	69a1      	ldr	r1, [r4, #24]
 8015c60:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8015c64:	33ff      	adds	r3, #255	@ 0xff
 8015c66:	4283      	cmp	r3, r0
 8015c68:	f200 8350 	bhi.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c6c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8015c6e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8015c72:	30ff      	adds	r0, #255	@ 0xff
 8015c74:	42a8      	cmp	r0, r5
 8015c76:	f200 8349 	bhi.w	801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015c7a:	428a      	cmp	r2, r1
 8015c7c:	f280 8110 	bge.w	8015ea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015c80:	429a      	cmp	r2, r3
 8015c82:	f300 8119 	bgt.w	8015eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015c86:	4299      	cmp	r1, r3
 8015c88:	f280 811d 	bge.w	8015ec6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015c8c:	2502      	movs	r5, #2
 8015c8e:	2701      	movs	r7, #1
 8015c90:	46a9      	mov	r9, r5
 8015c92:	46b8      	mov	r8, r7
 8015c94:	f04f 0a00 	mov.w	sl, #0
 8015c98:	4621      	mov	r1, r4
 8015c9a:	a849      	add	r0, sp, #292	@ 0x124
 8015c9c:	f004 f998 	bl	8019fd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015ca0:	4622      	mov	r2, r4
 8015ca2:	4653      	mov	r3, sl
 8015ca4:	a949      	add	r1, sp, #292	@ 0x124
 8015ca6:	f8cd 9000 	str.w	r9, [sp]
 8015caa:	a819      	add	r0, sp, #100	@ 0x64
 8015cac:	f004 fac0 	bl	801a230 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015cb0:	4622      	mov	r2, r4
 8015cb2:	4653      	mov	r3, sl
 8015cb4:	a949      	add	r1, sp, #292	@ 0x124
 8015cb6:	f8cd 8000 	str.w	r8, [sp]
 8015cba:	a829      	add	r0, sp, #164	@ 0xa4
 8015cbc:	f004 fab8 	bl	801a230 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015cc0:	4643      	mov	r3, r8
 8015cc2:	4622      	mov	r2, r4
 8015cc4:	a949      	add	r1, sp, #292	@ 0x124
 8015cc6:	f8cd 9000 	str.w	r9, [sp]
 8015cca:	a839      	add	r0, sp, #228	@ 0xe4
 8015ccc:	f004 fab0 	bl	801a230 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015cd0:	42af      	cmp	r7, r5
 8015cd2:	bfb5      	itete	lt
 8015cd4:	2300      	movlt	r3, #0
 8015cd6:	2301      	movge	r3, #1
 8015cd8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8015cda:	930e      	strge	r3, [sp, #56]	@ 0x38
 8015cdc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015cde:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015ce2:	af12      	add	r7, sp, #72	@ 0x48
 8015ce4:	bfb9      	ittee	lt
 8015ce6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8015ce8:	ac19      	addlt	r4, sp, #100	@ 0x64
 8015cea:	ad19      	addge	r5, sp, #100	@ 0x64
 8015cec:	ac29      	addge	r4, sp, #164	@ 0xa4
 8015cee:	e887 0003 	stmia.w	r7, {r0, r1}
 8015cf2:	b928      	cbnz	r0, 8015d00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015cf4:	4b80      	ldr	r3, [pc, #512]	@ (8015ef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015cf6:	6818      	ldr	r0, [r3, #0]
 8015cf8:	6803      	ldr	r3, [r0, #0]
 8015cfa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015cfc:	4798      	blx	r3
 8015cfe:	6038      	str	r0, [r7, #0]
 8015d00:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8015d02:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015d06:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015d0a:	930c      	str	r3, [sp, #48]	@ 0x30
 8015d0c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015d0e:	6963      	ldr	r3, [r4, #20]
 8015d10:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8015d12:	440b      	add	r3, r1
 8015d14:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015d18:	4408      	add	r0, r1
 8015d1a:	b200      	sxth	r0, r0
 8015d1c:	4283      	cmp	r3, r0
 8015d1e:	900d      	str	r0, [sp, #52]	@ 0x34
 8015d20:	f280 80dd 	bge.w	8015ede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015d24:	428b      	cmp	r3, r1
 8015d26:	da08      	bge.n	8015d3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015d28:	2a00      	cmp	r2, #0
 8015d2a:	dd06      	ble.n	8015d3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015d2c:	1acb      	subs	r3, r1, r3
 8015d2e:	429a      	cmp	r2, r3
 8015d30:	f2c0 80e4 	blt.w	8015efc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015d34:	2b00      	cmp	r3, #0
 8015d36:	f300 80e2 	bgt.w	8015efe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015d3a:	6967      	ldr	r7, [r4, #20]
 8015d3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015d3e:	443b      	add	r3, r7
 8015d40:	461f      	mov	r7, r3
 8015d42:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015d44:	1bdf      	subs	r7, r3, r7
 8015d46:	4297      	cmp	r7, r2
 8015d48:	bfa8      	it	ge
 8015d4a:	4617      	movge	r7, r2
 8015d4c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8015d50:	2f00      	cmp	r7, #0
 8015d52:	f340 8166 	ble.w	8016022 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015d56:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8015d58:	6829      	ldr	r1, [r5, #0]
 8015d5a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015d5e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015d62:	6820      	ldr	r0, [r4, #0]
 8015d64:	4411      	add	r1, r2
 8015d66:	4299      	cmp	r1, r3
 8015d68:	dd1a      	ble.n	8015da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015d6a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015d6e:	440b      	add	r3, r1
 8015d70:	4402      	add	r2, r0
 8015d72:	b21b      	sxth	r3, r3
 8015d74:	429a      	cmp	r2, r3
 8015d76:	dc13      	bgt.n	8015da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015d78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015d7a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015d7c:	681b      	ldr	r3, [r3, #0]
 8015d7e:	9206      	str	r2, [sp, #24]
 8015d80:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015d82:	9205      	str	r2, [sp, #20]
 8015d84:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015d86:	9500      	str	r5, [sp, #0]
 8015d88:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015d8c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8015d8e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8015d90:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015d94:	a912      	add	r1, sp, #72	@ 0x48
 8015d96:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8015d9a:	aa49      	add	r2, sp, #292	@ 0x124
 8015d9c:	4623      	mov	r3, r4
 8015d9e:	47c8      	blx	r9
 8015da0:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015da4:	441a      	add	r2, r3
 8015da6:	6963      	ldr	r3, [r4, #20]
 8015da8:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8015dac:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8015db0:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8015db4:	68a1      	ldr	r1, [r4, #8]
 8015db6:	ed94 6a08 	vldr	s12, [r4, #32]
 8015dba:	6022      	str	r2, [r4, #0]
 8015dbc:	3301      	adds	r3, #1
 8015dbe:	6163      	str	r3, [r4, #20]
 8015dc0:	69a3      	ldr	r3, [r4, #24]
 8015dc2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015dc6:	3b01      	subs	r3, #1
 8015dc8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8015dcc:	61a3      	str	r3, [r4, #24]
 8015dce:	6923      	ldr	r3, [r4, #16]
 8015dd0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015dd4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015dd8:	edd4 6a07 	vldr	s13, [r4, #28]
 8015ddc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8015de0:	440b      	add	r3, r1
 8015de2:	68e1      	ldr	r1, [r4, #12]
 8015de4:	6123      	str	r3, [r4, #16]
 8015de6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015dea:	428b      	cmp	r3, r1
 8015dec:	edc4 6a07 	vstr	s13, [r4, #28]
 8015df0:	db15      	blt.n	8015e1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8015df2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8015df6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015dfa:	3201      	adds	r2, #1
 8015dfc:	edc4 6a07 	vstr	s13, [r4, #28]
 8015e00:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8015e04:	6022      	str	r2, [r4, #0]
 8015e06:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015e0a:	1a5b      	subs	r3, r3, r1
 8015e0c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015e10:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8015e14:	6123      	str	r3, [r4, #16]
 8015e16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015e1a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8015e1e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015e22:	441a      	add	r2, r3
 8015e24:	696b      	ldr	r3, [r5, #20]
 8015e26:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8015e2a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8015e2e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8015e32:	68a9      	ldr	r1, [r5, #8]
 8015e34:	ed95 6a08 	vldr	s12, [r5, #32]
 8015e38:	602a      	str	r2, [r5, #0]
 8015e3a:	3301      	adds	r3, #1
 8015e3c:	616b      	str	r3, [r5, #20]
 8015e3e:	69ab      	ldr	r3, [r5, #24]
 8015e40:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015e44:	3b01      	subs	r3, #1
 8015e46:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8015e4a:	61ab      	str	r3, [r5, #24]
 8015e4c:	692b      	ldr	r3, [r5, #16]
 8015e4e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015e52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015e56:	edd5 6a07 	vldr	s13, [r5, #28]
 8015e5a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015e5e:	440b      	add	r3, r1
 8015e60:	68e9      	ldr	r1, [r5, #12]
 8015e62:	612b      	str	r3, [r5, #16]
 8015e64:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015e68:	428b      	cmp	r3, r1
 8015e6a:	edc5 6a07 	vstr	s13, [r5, #28]
 8015e6e:	db15      	blt.n	8015e9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8015e70:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8015e74:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015e78:	3201      	adds	r2, #1
 8015e7a:	edc5 6a07 	vstr	s13, [r5, #28]
 8015e7e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8015e82:	602a      	str	r2, [r5, #0]
 8015e84:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015e88:	1a5b      	subs	r3, r3, r1
 8015e8a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015e8e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8015e92:	612b      	str	r3, [r5, #16]
 8015e94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015e98:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015e9c:	3f01      	subs	r7, #1
 8015e9e:	e757      	b.n	8015d50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015ea0:	4299      	cmp	r1, r3
 8015ea2:	dc13      	bgt.n	8015ecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015ea4:	429a      	cmp	r2, r3
 8015ea6:	da14      	bge.n	8015ed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015ea8:	2502      	movs	r5, #2
 8015eaa:	2703      	movs	r7, #3
 8015eac:	46a9      	mov	r9, r5
 8015eae:	f04f 0800 	mov.w	r8, #0
 8015eb2:	f04f 0a01 	mov.w	sl, #1
 8015eb6:	e6ef      	b.n	8015c98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015eb8:	2501      	movs	r5, #1
 8015eba:	2700      	movs	r7, #0
 8015ebc:	46a9      	mov	r9, r5
 8015ebe:	46b8      	mov	r8, r7
 8015ec0:	f04f 0a02 	mov.w	sl, #2
 8015ec4:	e6e8      	b.n	8015c98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015ec6:	2501      	movs	r5, #1
 8015ec8:	2702      	movs	r7, #2
 8015eca:	e6e1      	b.n	8015c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015ecc:	2500      	movs	r5, #0
 8015ece:	2701      	movs	r7, #1
 8015ed0:	e7f4      	b.n	8015ebc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8015ed2:	2702      	movs	r7, #2
 8015ed4:	2503      	movs	r5, #3
 8015ed6:	f04f 0900 	mov.w	r9, #0
 8015eda:	46b8      	mov	r8, r7
 8015edc:	e7e9      	b.n	8015eb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8015ede:	4613      	mov	r3, r2
 8015ee0:	e728      	b.n	8015d34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8015ee2:	bf00      	nop
 8015ee4:	20013f58 	.word	0x20013f58
 8015ee8:	fffd8f01 	.word	0xfffd8f01
 8015eec:	00027100 	.word	0x00027100
 8015ef0:	0004e1ff 	.word	0x0004e1ff
 8015ef4:	0004e1fe 	.word	0x0004e1fe
 8015ef8:	20013f60 	.word	0x20013f60
 8015efc:	4613      	mov	r3, r2
 8015efe:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8015f00:	9111      	str	r1, [sp, #68]	@ 0x44
 8015f02:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8015f06:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8015f0a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8015f0c:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8015f10:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8015f14:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8015f18:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8015f1c:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8015f20:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8015f24:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8015f28:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8015f2c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8015f30:	469e      	mov	lr, r3
 8015f32:	469c      	mov	ip, r3
 8015f34:	f04f 0900 	mov.w	r9, #0
 8015f38:	f1bc 0f00 	cmp.w	ip, #0
 8015f3c:	d147      	bne.n	8015fce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8015f3e:	eb03 0c07 	add.w	ip, r3, r7
 8015f42:	1ad7      	subs	r7, r2, r3
 8015f44:	f1b9 0f00 	cmp.w	r9, #0
 8015f48:	d009      	beq.n	8015f5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015f4a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8015f4e:	9029      	str	r0, [sp, #164]	@ 0xa4
 8015f50:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8015f54:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8015f58:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8015f5c:	912d      	str	r1, [sp, #180]	@ 0xb4
 8015f5e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8015f60:	9111      	str	r1, [sp, #68]	@ 0x44
 8015f62:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8015f66:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8015f6a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8015f6e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8015f72:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8015f76:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8015f7a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8015f7e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8015f82:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8015f86:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8015f8a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8015f8e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8015f92:	f04f 0800 	mov.w	r8, #0
 8015f96:	f1be 0f00 	cmp.w	lr, #0
 8015f9a:	d031      	beq.n	8016000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015f9c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8015f9e:	4431      	add	r1, r6
 8015fa0:	4549      	cmp	r1, r9
 8015fa2:	4450      	add	r0, sl
 8015fa4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015fa8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015fac:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015fb0:	db08      	blt.n	8015fc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8015fb2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015fb6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015fba:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015fbe:	3001      	adds	r0, #1
 8015fc0:	eba1 0109 	sub.w	r1, r1, r9
 8015fc4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015fc8:	f04f 0801 	mov.w	r8, #1
 8015fcc:	e7e3      	b.n	8015f96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8015fce:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8015fd0:	4431      	add	r1, r6
 8015fd2:	4541      	cmp	r1, r8
 8015fd4:	4450      	add	r0, sl
 8015fd6:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015fda:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015fde:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015fe2:	db08      	blt.n	8015ff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015fe4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015fe8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015fec:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015ff0:	3001      	adds	r0, #1
 8015ff2:	eba1 0108 	sub.w	r1, r1, r8
 8015ff6:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015ffa:	f04f 0901 	mov.w	r9, #1
 8015ffe:	e79b      	b.n	8015f38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8016000:	449c      	add	ip, r3
 8016002:	1aff      	subs	r7, r7, r3
 8016004:	f1b8 0f00 	cmp.w	r8, #0
 8016008:	d009      	beq.n	801601e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801600a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 801600e:	9019      	str	r0, [sp, #100]	@ 0x64
 8016010:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8016014:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8016018:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 801601c:	911d      	str	r1, [sp, #116]	@ 0x74
 801601e:	1ad2      	subs	r2, r2, r3
 8016020:	e68b      	b.n	8015d3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8016022:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016024:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8016026:	2b00      	cmp	r3, #0
 8016028:	f000 80d1 	beq.w	80161ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801602c:	ad19      	add	r5, sp, #100	@ 0x64
 801602e:	ac39      	add	r4, sp, #228	@ 0xe4
 8016030:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8016032:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8016036:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801603a:	930c      	str	r3, [sp, #48]	@ 0x30
 801603c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801603e:	6963      	ldr	r3, [r4, #20]
 8016040:	440b      	add	r3, r1
 8016042:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8016046:	4408      	add	r0, r1
 8016048:	b200      	sxth	r0, r0
 801604a:	4283      	cmp	r3, r0
 801604c:	900d      	str	r0, [sp, #52]	@ 0x34
 801604e:	f280 80c1 	bge.w	80161d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8016052:	428b      	cmp	r3, r1
 8016054:	da08      	bge.n	8016068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8016056:	2a00      	cmp	r2, #0
 8016058:	dd06      	ble.n	8016068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801605a:	1acb      	subs	r3, r1, r3
 801605c:	429a      	cmp	r2, r3
 801605e:	f2c0 80bb 	blt.w	80161d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8016062:	2b00      	cmp	r3, #0
 8016064:	f300 80b9 	bgt.w	80161da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8016068:	6967      	ldr	r7, [r4, #20]
 801606a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801606c:	443b      	add	r3, r7
 801606e:	461f      	mov	r7, r3
 8016070:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016072:	1bdf      	subs	r7, r3, r7
 8016074:	4297      	cmp	r7, r2
 8016076:	bfa8      	it	ge
 8016078:	4617      	movge	r7, r2
 801607a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 801607e:	2f00      	cmp	r7, #0
 8016080:	f340 813c 	ble.w	80162fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8016084:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8016086:	6829      	ldr	r1, [r5, #0]
 8016088:	f9b3 2000 	ldrsh.w	r2, [r3]
 801608c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8016090:	6820      	ldr	r0, [r4, #0]
 8016092:	4411      	add	r1, r2
 8016094:	4299      	cmp	r1, r3
 8016096:	dd1a      	ble.n	80160ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8016098:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801609c:	440b      	add	r3, r1
 801609e:	4402      	add	r2, r0
 80160a0:	b21b      	sxth	r3, r3
 80160a2:	429a      	cmp	r2, r3
 80160a4:	dc13      	bgt.n	80160ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80160a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80160a8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80160aa:	681b      	ldr	r3, [r3, #0]
 80160ac:	9206      	str	r2, [sp, #24]
 80160ae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80160b0:	9205      	str	r2, [sp, #20]
 80160b2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80160b4:	9500      	str	r5, [sp, #0]
 80160b6:	e9cd b203 	strd	fp, r2, [sp, #12]
 80160ba:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 80160bc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80160be:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80160c2:	a912      	add	r1, sp, #72	@ 0x48
 80160c4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 80160c8:	aa49      	add	r2, sp, #292	@ 0x124
 80160ca:	4623      	mov	r3, r4
 80160cc:	47c8      	blx	r9
 80160ce:	e9d4 2300 	ldrd	r2, r3, [r4]
 80160d2:	441a      	add	r2, r3
 80160d4:	6963      	ldr	r3, [r4, #20]
 80160d6:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 80160da:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80160de:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 80160e2:	68a1      	ldr	r1, [r4, #8]
 80160e4:	ed94 6a08 	vldr	s12, [r4, #32]
 80160e8:	6022      	str	r2, [r4, #0]
 80160ea:	3301      	adds	r3, #1
 80160ec:	6163      	str	r3, [r4, #20]
 80160ee:	69a3      	ldr	r3, [r4, #24]
 80160f0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80160f4:	3b01      	subs	r3, #1
 80160f6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80160fa:	61a3      	str	r3, [r4, #24]
 80160fc:	6923      	ldr	r3, [r4, #16]
 80160fe:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8016102:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016106:	edd4 6a07 	vldr	s13, [r4, #28]
 801610a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801610e:	440b      	add	r3, r1
 8016110:	68e1      	ldr	r1, [r4, #12]
 8016112:	6123      	str	r3, [r4, #16]
 8016114:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016118:	428b      	cmp	r3, r1
 801611a:	edc4 6a07 	vstr	s13, [r4, #28]
 801611e:	db15      	blt.n	801614c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8016120:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8016124:	ee76 6a26 	vadd.f32	s13, s12, s13
 8016128:	3201      	adds	r2, #1
 801612a:	edc4 6a07 	vstr	s13, [r4, #28]
 801612e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8016132:	6022      	str	r2, [r4, #0]
 8016134:	ee36 7a87 	vadd.f32	s14, s13, s14
 8016138:	1a5b      	subs	r3, r3, r1
 801613a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 801613e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8016142:	6123      	str	r3, [r4, #16]
 8016144:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016148:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801614c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8016150:	441a      	add	r2, r3
 8016152:	696b      	ldr	r3, [r5, #20]
 8016154:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8016158:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 801615c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8016160:	68a9      	ldr	r1, [r5, #8]
 8016162:	ed95 6a08 	vldr	s12, [r5, #32]
 8016166:	602a      	str	r2, [r5, #0]
 8016168:	3301      	adds	r3, #1
 801616a:	616b      	str	r3, [r5, #20]
 801616c:	69ab      	ldr	r3, [r5, #24]
 801616e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8016172:	3b01      	subs	r3, #1
 8016174:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8016178:	61ab      	str	r3, [r5, #24]
 801617a:	692b      	ldr	r3, [r5, #16]
 801617c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8016180:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8016184:	edd5 6a07 	vldr	s13, [r5, #28]
 8016188:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801618c:	440b      	add	r3, r1
 801618e:	68e9      	ldr	r1, [r5, #12]
 8016190:	612b      	str	r3, [r5, #16]
 8016192:	ee76 6a86 	vadd.f32	s13, s13, s12
 8016196:	428b      	cmp	r3, r1
 8016198:	edc5 6a07 	vstr	s13, [r5, #28]
 801619c:	db15      	blt.n	80161ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801619e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 80161a2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80161a6:	3201      	adds	r2, #1
 80161a8:	edc5 6a07 	vstr	s13, [r5, #28]
 80161ac:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 80161b0:	602a      	str	r2, [r5, #0]
 80161b2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80161b6:	1a5b      	subs	r3, r3, r1
 80161b8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80161bc:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 80161c0:	612b      	str	r3, [r5, #16]
 80161c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80161c6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80161ca:	3f01      	subs	r7, #1
 80161cc:	e757      	b.n	801607e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80161ce:	ad39      	add	r5, sp, #228	@ 0xe4
 80161d0:	ac19      	add	r4, sp, #100	@ 0x64
 80161d2:	e72d      	b.n	8016030 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80161d4:	4613      	mov	r3, r2
 80161d6:	e744      	b.n	8016062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80161d8:	4613      	mov	r3, r2
 80161da:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 80161de:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 80161e0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 80161e4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 80161e8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 80161ec:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80161f0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80161f4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80161f8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80161fc:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80161fe:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8016202:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8016206:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 801620a:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 801620e:	960e      	str	r6, [sp, #56]	@ 0x38
 8016210:	469e      	mov	lr, r3
 8016212:	461f      	mov	r7, r3
 8016214:	f04f 0900 	mov.w	r9, #0
 8016218:	2f00      	cmp	r7, #0
 801621a:	d146      	bne.n	80162aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801621c:	449c      	add	ip, r3
 801621e:	1ad7      	subs	r7, r2, r3
 8016220:	f1b9 0f00 	cmp.w	r9, #0
 8016224:	d009      	beq.n	801623a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8016226:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 801622a:	9039      	str	r0, [sp, #228]	@ 0xe4
 801622c:	913d      	str	r1, [sp, #244]	@ 0xf4
 801622e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8016232:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8016236:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 801623a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 801623c:	910e      	str	r1, [sp, #56]	@ 0x38
 801623e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8016242:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8016246:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801624a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801624e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8016252:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8016256:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801625a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801625e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8016262:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8016266:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801626a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801626e:	f04f 0800 	mov.w	r8, #0
 8016272:	f1be 0f00 	cmp.w	lr, #0
 8016276:	d030      	beq.n	80162da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8016278:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801627a:	4431      	add	r1, r6
 801627c:	4549      	cmp	r1, r9
 801627e:	4450      	add	r0, sl
 8016280:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8016284:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016288:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801628c:	db08      	blt.n	80162a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801628e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8016292:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8016296:	ee37 7a06 	vadd.f32	s14, s14, s12
 801629a:	3001      	adds	r0, #1
 801629c:	eba1 0109 	sub.w	r1, r1, r9
 80162a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80162a4:	f04f 0801 	mov.w	r8, #1
 80162a8:	e7e3      	b.n	8016272 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80162aa:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 80162ac:	4431      	add	r1, r6
 80162ae:	4541      	cmp	r1, r8
 80162b0:	4450      	add	r0, sl
 80162b2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80162b6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80162ba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80162be:	db08      	blt.n	80162d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80162c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80162c4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80162c8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80162cc:	3001      	adds	r0, #1
 80162ce:	eba1 0108 	sub.w	r1, r1, r8
 80162d2:	3f01      	subs	r7, #1
 80162d4:	f04f 0901 	mov.w	r9, #1
 80162d8:	e79e      	b.n	8016218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80162da:	449c      	add	ip, r3
 80162dc:	1aff      	subs	r7, r7, r3
 80162de:	f1b8 0f00 	cmp.w	r8, #0
 80162e2:	d009      	beq.n	80162f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80162e4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80162e8:	9019      	str	r0, [sp, #100]	@ 0x64
 80162ea:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80162ee:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80162f2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80162f6:	911d      	str	r1, [sp, #116]	@ 0x74
 80162f8:	1ad2      	subs	r2, r2, r3
 80162fa:	e6b5      	b.n	8016068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80162fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80162fe:	681b      	ldr	r3, [r3, #0]
 8016300:	b923      	cbnz	r3, 801630c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016302:	4b04      	ldr	r3, [pc, #16]	@ (8016314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8016304:	6818      	ldr	r0, [r3, #0]
 8016306:	6803      	ldr	r3, [r0, #0]
 8016308:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801630a:	4798      	blx	r3
 801630c:	b05b      	add	sp, #364	@ 0x16c
 801630e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016312:	bf00      	nop
 8016314:	20013f60 	.word	0x20013f60

08016318 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8016318:	b570      	push	{r4, r5, r6, lr}
 801631a:	4604      	mov	r4, r0
 801631c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8016320:	9805      	ldr	r0, [sp, #20]
 8016322:	6061      	str	r1, [r4, #4]
 8016324:	2500      	movs	r5, #0
 8016326:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801632a:	8263      	strh	r3, [r4, #18]
 801632c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016330:	8025      	strh	r5, [r4, #0]
 8016332:	7221      	strb	r1, [r4, #8]
 8016334:	7266      	strb	r6, [r4, #9]
 8016336:	60e0      	str	r0, [r4, #12]
 8016338:	8222      	strh	r2, [r4, #16]
 801633a:	82a3      	strh	r3, [r4, #20]
 801633c:	82e5      	strh	r5, [r4, #22]
 801633e:	8325      	strh	r5, [r4, #24]
 8016340:	8365      	strh	r5, [r4, #26]
 8016342:	83a5      	strh	r5, [r4, #28]
 8016344:	83e5      	strh	r5, [r4, #30]
 8016346:	8425      	strh	r5, [r4, #32]
 8016348:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801634c:	b32e      	cbz	r6, 801639a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801634e:	6803      	ldr	r3, [r0, #0]
 8016350:	695b      	ldr	r3, [r3, #20]
 8016352:	4798      	blx	r3
 8016354:	4606      	mov	r6, r0
 8016356:	b300      	cbz	r0, 801639a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016358:	68e0      	ldr	r0, [r4, #12]
 801635a:	6803      	ldr	r3, [r0, #0]
 801635c:	4631      	mov	r1, r6
 801635e:	68db      	ldr	r3, [r3, #12]
 8016360:	4798      	blx	r3
 8016362:	4605      	mov	r5, r0
 8016364:	b1c8      	cbz	r0, 801639a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8016366:	7b43      	ldrb	r3, [r0, #13]
 8016368:	7a82      	ldrb	r2, [r0, #10]
 801636a:	005b      	lsls	r3, r3, #1
 801636c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016370:	4313      	orrs	r3, r2
 8016372:	8423      	strh	r3, [r4, #32]
 8016374:	7a63      	ldrb	r3, [r4, #9]
 8016376:	2b06      	cmp	r3, #6
 8016378:	d10f      	bne.n	801639a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801637a:	68e0      	ldr	r0, [r4, #12]
 801637c:	6803      	ldr	r3, [r0, #0]
 801637e:	462a      	mov	r2, r5
 8016380:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016382:	4631      	mov	r1, r6
 8016384:	4798      	blx	r3
 8016386:	7b6b      	ldrb	r3, [r5, #13]
 8016388:	005b      	lsls	r3, r3, #1
 801638a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801638e:	7aab      	ldrb	r3, [r5, #10]
 8016390:	4313      	orrs	r3, r2
 8016392:	4418      	add	r0, r3
 8016394:	8c23      	ldrh	r3, [r4, #32]
 8016396:	4418      	add	r0, r3
 8016398:	8420      	strh	r0, [r4, #32]
 801639a:	4620      	mov	r0, r4
 801639c:	bd70      	pop	{r4, r5, r6, pc}

0801639e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801639e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163a2:	2400      	movs	r4, #0
 80163a4:	b085      	sub	sp, #20
 80163a6:	4681      	mov	r9, r0
 80163a8:	4688      	mov	r8, r1
 80163aa:	4692      	mov	sl, r2
 80163ac:	469b      	mov	fp, r3
 80163ae:	4627      	mov	r7, r4
 80163b0:	4625      	mov	r5, r4
 80163b2:	4626      	mov	r6, r4
 80163b4:	4554      	cmp	r4, sl
 80163b6:	da2a      	bge.n	801640e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80163b8:	2300      	movs	r3, #0
 80163ba:	9303      	str	r3, [sp, #12]
 80163bc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80163c0:	429d      	cmp	r5, r3
 80163c2:	d004      	beq.n	80163ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80163c4:	f242 030b 	movw	r3, #8203	@ 0x200b
 80163c8:	429d      	cmp	r5, r3
 80163ca:	bf18      	it	ne
 80163cc:	462f      	movne	r7, r5
 80163ce:	ab03      	add	r3, sp, #12
 80163d0:	4642      	mov	r2, r8
 80163d2:	4659      	mov	r1, fp
 80163d4:	4648      	mov	r0, r9
 80163d6:	f003 fc11 	bl	8019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80163da:	4605      	mov	r5, r0
 80163dc:	b1b8      	cbz	r0, 801640e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80163de:	280a      	cmp	r0, #10
 80163e0:	d015      	beq.n	801640e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80163e2:	9a03      	ldr	r2, [sp, #12]
 80163e4:	b18a      	cbz	r2, 801640a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80163e6:	7b50      	ldrb	r0, [r2, #13]
 80163e8:	7a93      	ldrb	r3, [r2, #10]
 80163ea:	8895      	ldrh	r5, [r2, #4]
 80163ec:	0040      	lsls	r0, r0, #1
 80163ee:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80163f2:	4303      	orrs	r3, r0
 80163f4:	9301      	str	r3, [sp, #4]
 80163f6:	f8d8 3000 	ldr.w	r3, [r8]
 80163fa:	4639      	mov	r1, r7
 80163fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80163fe:	4640      	mov	r0, r8
 8016400:	4798      	blx	r3
 8016402:	9b01      	ldr	r3, [sp, #4]
 8016404:	4418      	add	r0, r3
 8016406:	4406      	add	r6, r0
 8016408:	b2b6      	uxth	r6, r6
 801640a:	3401      	adds	r4, #1
 801640c:	e7d2      	b.n	80163b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801640e:	4630      	mov	r0, r6
 8016410:	b005      	add	sp, #20
 8016412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016416 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8016416:	2a02      	cmp	r2, #2
 8016418:	b530      	push	{r4, r5, lr}
 801641a:	d011      	beq.n	8016440 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801641c:	2a03      	cmp	r2, #3
 801641e:	d01c      	beq.n	801645a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8016420:	2a01      	cmp	r2, #1
 8016422:	d10c      	bne.n	801643e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016424:	888b      	ldrh	r3, [r1, #4]
 8016426:	8801      	ldrh	r1, [r0, #0]
 8016428:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801642c:	8844      	ldrh	r4, [r0, #2]
 801642e:	8004      	strh	r4, [r0, #0]
 8016430:	1a5b      	subs	r3, r3, r1
 8016432:	1a9b      	subs	r3, r3, r2
 8016434:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016438:	8043      	strh	r3, [r0, #2]
 801643a:	8081      	strh	r1, [r0, #4]
 801643c:	80c2      	strh	r2, [r0, #6]
 801643e:	bd30      	pop	{r4, r5, pc}
 8016440:	88cb      	ldrh	r3, [r1, #6]
 8016442:	8842      	ldrh	r2, [r0, #2]
 8016444:	1a9b      	subs	r3, r3, r2
 8016446:	88c2      	ldrh	r2, [r0, #6]
 8016448:	1a9b      	subs	r3, r3, r2
 801644a:	888a      	ldrh	r2, [r1, #4]
 801644c:	8801      	ldrh	r1, [r0, #0]
 801644e:	8043      	strh	r3, [r0, #2]
 8016450:	1a52      	subs	r2, r2, r1
 8016452:	8881      	ldrh	r1, [r0, #4]
 8016454:	1a52      	subs	r2, r2, r1
 8016456:	8002      	strh	r2, [r0, #0]
 8016458:	e7f1      	b.n	801643e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801645a:	88cb      	ldrh	r3, [r1, #6]
 801645c:	8841      	ldrh	r1, [r0, #2]
 801645e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8016462:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016466:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801646a:	8045      	strh	r5, [r0, #2]
 801646c:	1a5b      	subs	r3, r3, r1
 801646e:	1a9b      	subs	r3, r3, r2
 8016470:	8003      	strh	r3, [r0, #0]
 8016472:	8082      	strh	r2, [r0, #4]
 8016474:	80c4      	strh	r4, [r0, #6]
 8016476:	e7e2      	b.n	801643e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08016478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8016478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801647c:	b09f      	sub	sp, #124	@ 0x7c
 801647e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8016480:	9312      	str	r3, [sp, #72]	@ 0x48
 8016482:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8016484:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8016486:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8016488:	8812      	ldrh	r2, [r2, #0]
 801648a:	889b      	ldrh	r3, [r3, #4]
 801648c:	900e      	str	r0, [sp, #56]	@ 0x38
 801648e:	4413      	add	r3, r2
 8016490:	6828      	ldr	r0, [r5, #0]
 8016492:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016494:	b21b      	sxth	r3, r3
 8016496:	9311      	str	r3, [sp, #68]	@ 0x44
 8016498:	6803      	ldr	r3, [r0, #0]
 801649a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801649e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80164a0:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 80164a4:	4798      	blx	r3
 80164a6:	682b      	ldr	r3, [r5, #0]
 80164a8:	9013      	str	r0, [sp, #76]	@ 0x4c
 80164aa:	7b1a      	ldrb	r2, [r3, #12]
 80164ac:	7adb      	ldrb	r3, [r3, #11]
 80164ae:	9215      	str	r2, [sp, #84]	@ 0x54
 80164b0:	9316      	str	r3, [sp, #88]	@ 0x58
 80164b2:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 80164b6:	2c00      	cmp	r4, #0
 80164b8:	d067      	beq.n	801658a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80164ba:	7c2b      	ldrb	r3, [r5, #16]
 80164bc:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80164be:	2b06      	cmp	r3, #6
 80164c0:	bf14      	ite	ne
 80164c2:	2301      	movne	r3, #1
 80164c4:	2302      	moveq	r3, #2
 80164c6:	4413      	add	r3, r2
 80164c8:	f04f 0900 	mov.w	r9, #0
 80164cc:	9310      	str	r3, [sp, #64]	@ 0x40
 80164ce:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 80164d2:	464c      	mov	r4, r9
 80164d4:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 80164d8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80164da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80164dc:	4293      	cmp	r3, r2
 80164de:	f280 808b 	bge.w	80165f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80164e2:	2300      	movs	r3, #0
 80164e4:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 80164e8:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 80164ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80164f0:	429c      	cmp	r4, r3
 80164f2:	d006      	beq.n	8016502 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 80164f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80164f6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80164fa:	4294      	cmp	r4, r2
 80164fc:	bf18      	it	ne
 80164fe:	4623      	movne	r3, r4
 8016500:	930c      	str	r3, [sp, #48]	@ 0x30
 8016502:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016504:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8016506:	682a      	ldr	r2, [r5, #0]
 8016508:	428b      	cmp	r3, r1
 801650a:	db40      	blt.n	801658e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801650c:	6813      	ldr	r3, [r2, #0]
 801650e:	4610      	mov	r0, r2
 8016510:	695b      	ldr	r3, [r3, #20]
 8016512:	4798      	blx	r3
 8016514:	4604      	mov	r4, r0
 8016516:	6828      	ldr	r0, [r5, #0]
 8016518:	6803      	ldr	r3, [r0, #0]
 801651a:	aa1d      	add	r2, sp, #116	@ 0x74
 801651c:	689f      	ldr	r7, [r3, #8]
 801651e:	4621      	mov	r1, r4
 8016520:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8016524:	47b8      	blx	r7
 8016526:	901c      	str	r0, [sp, #112]	@ 0x70
 8016528:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801652c:	429c      	cmp	r4, r3
 801652e:	f000 80ea 	beq.w	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8016532:	f242 030b 	movw	r3, #8203	@ 0x200b
 8016536:	429c      	cmp	r4, r3
 8016538:	f000 80e5 	beq.w	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801653c:	2c00      	cmp	r4, #0
 801653e:	f000 810c 	beq.w	801675a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8016542:	2c0a      	cmp	r4, #10
 8016544:	d05e      	beq.n	8016604 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8016546:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8016548:	b36a      	cbz	r2, 80165a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801654a:	8894      	ldrh	r4, [r2, #4]
 801654c:	f1bb 0f00 	cmp.w	fp, #0
 8016550:	d03a      	beq.n	80165c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8016552:	f892 900d 	ldrb.w	r9, [r2, #13]
 8016556:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801655a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801655e:	f892 900a 	ldrb.w	r9, [r2, #10]
 8016562:	f1bb 0f01 	cmp.w	fp, #1
 8016566:	ea49 0903 	orr.w	r9, r9, r3
 801656a:	d133      	bne.n	80165d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 801656c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801656e:	eba6 0609 	sub.w	r6, r6, r9
 8016572:	2b00      	cmp	r3, #0
 8016574:	d14d      	bne.n	8016612 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8016576:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8016578:	eb09 0306 	add.w	r3, r9, r6
 801657c:	4413      	add	r3, r2
 801657e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8016580:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016584:	4293      	cmp	r3, r2
 8016586:	da4e      	bge.n	8016626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8016588:	e036      	b.n	80165f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801658a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801658c:	e79c      	b.n	80164c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 801658e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8016592:	9301      	str	r3, [sp, #4]
 8016594:	ab1d      	add	r3, sp, #116	@ 0x74
 8016596:	9300      	str	r3, [sp, #0]
 8016598:	4659      	mov	r1, fp
 801659a:	ab1c      	add	r3, sp, #112	@ 0x70
 801659c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801659e:	f003 fb76 	bl	8019c8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80165a2:	4604      	mov	r4, r0
 80165a4:	e7c0      	b.n	8016528 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80165a6:	6828      	ldr	r0, [r5, #0]
 80165a8:	6803      	ldr	r3, [r0, #0]
 80165aa:	691b      	ldr	r3, [r3, #16]
 80165ac:	4798      	blx	r3
 80165ae:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80165b2:	4298      	cmp	r0, r3
 80165b4:	f000 80a7 	beq.w	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80165b8:	f242 030b 	movw	r3, #8203	@ 0x200b
 80165bc:	4298      	cmp	r0, r3
 80165be:	f000 80a2 	beq.w	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80165c2:	f1bb 0f00 	cmp.w	fp, #0
 80165c6:	d100      	bne.n	80165ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80165c8:	444e      	add	r6, r9
 80165ca:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80165cc:	2a00      	cmp	r2, #0
 80165ce:	d1c0      	bne.n	8016552 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80165d0:	4691      	mov	r9, r2
 80165d2:	e098      	b.n	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80165d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80165d6:	2b00      	cmp	r3, #0
 80165d8:	f000 80c1 	beq.w	801675e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 80165dc:	f1bb 0f00 	cmp.w	fp, #0
 80165e0:	d117      	bne.n	8016612 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80165e2:	6828      	ldr	r0, [r5, #0]
 80165e4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80165e6:	6803      	ldr	r3, [r0, #0]
 80165e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80165ea:	4798      	blx	r3
 80165ec:	4406      	add	r6, r0
 80165ee:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80165f0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80165f2:	1af3      	subs	r3, r6, r3
 80165f4:	4293      	cmp	r3, r2
 80165f6:	dd16      	ble.n	8016626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80165f8:	2c00      	cmp	r4, #0
 80165fa:	f000 80ae 	beq.w	801675a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80165fe:	2c0a      	cmp	r4, #10
 8016600:	f040 809c 	bne.w	801673c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8016604:	240a      	movs	r4, #10
 8016606:	fab4 f084 	clz	r0, r4
 801660a:	0940      	lsrs	r0, r0, #5
 801660c:	b01f      	add	sp, #124	@ 0x7c
 801660e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016612:	6828      	ldr	r0, [r5, #0]
 8016614:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016616:	6803      	ldr	r3, [r0, #0]
 8016618:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801661a:	4798      	blx	r3
 801661c:	f1bb 0f01 	cmp.w	fp, #1
 8016620:	eba6 0600 	sub.w	r6, r6, r0
 8016624:	d0a7      	beq.n	8016576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8016626:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8016628:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801662a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801662e:	f9b3 8000 	ldrsh.w	r8, [r3]
 8016632:	7b43      	ldrb	r3, [r0, #13]
 8016634:	015b      	lsls	r3, r3, #5
 8016636:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801663a:	7983      	ldrb	r3, [r0, #6]
 801663c:	4431      	add	r1, r6
 801663e:	4313      	orrs	r3, r2
 8016640:	440b      	add	r3, r1
 8016642:	4543      	cmp	r3, r8
 8016644:	db5f      	blt.n	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8016646:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8016648:	4299      	cmp	r1, r3
 801664a:	da5c      	bge.n	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801664c:	6828      	ldr	r0, [r5, #0]
 801664e:	6803      	ldr	r3, [r0, #0]
 8016650:	45b0      	cmp	r8, r6
 8016652:	bfc8      	it	gt
 8016654:	eba8 0806 	subgt.w	r8, r8, r6
 8016658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801665a:	bfcc      	ite	gt
 801665c:	fa1f f888 	uxthgt.w	r8, r8
 8016660:	f04f 0800 	movle.w	r8, #0
 8016664:	4798      	blx	r3
 8016666:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8016668:	7b53      	ldrb	r3, [r2, #13]
 801666a:	00d9      	lsls	r1, r3, #3
 801666c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8016670:	7a11      	ldrb	r1, [r2, #8]
 8016672:	4339      	orrs	r1, r7
 8016674:	065f      	lsls	r7, r3, #25
 8016676:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8016678:	bf44      	itt	mi
 801667a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801667e:	b209      	sxthmi	r1, r1
 8016680:	19c7      	adds	r7, r0, r7
 8016682:	1a7f      	subs	r7, r7, r1
 8016684:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8016686:	b2bf      	uxth	r7, r7
 8016688:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801668c:	fa0f fa87 	sxth.w	sl, r7
 8016690:	4551      	cmp	r1, sl
 8016692:	dd3c      	ble.n	801670e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8016694:	011b      	lsls	r3, r3, #4
 8016696:	79d0      	ldrb	r0, [r2, #7]
 8016698:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801669c:	4303      	orrs	r3, r0
 801669e:	449a      	add	sl, r3
 80166a0:	4551      	cmp	r1, sl
 80166a2:	dc30      	bgt.n	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80166a4:	1bcf      	subs	r7, r1, r7
 80166a6:	b23f      	sxth	r7, r7
 80166a8:	468a      	mov	sl, r1
 80166aa:	9219      	str	r2, [sp, #100]	@ 0x64
 80166ac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80166ae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80166b0:	6828      	ldr	r0, [r5, #0]
 80166b2:	2a00      	cmp	r2, #0
 80166b4:	d12d      	bne.n	8016712 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 80166b6:	9318      	str	r3, [sp, #96]	@ 0x60
 80166b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80166ba:	6819      	ldr	r1, [r3, #0]
 80166bc:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 80166be:	6801      	ldr	r1, [r0, #0]
 80166c0:	9314      	str	r3, [sp, #80]	@ 0x50
 80166c2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80166c4:	4788      	blx	r1
 80166c6:	79a9      	ldrb	r1, [r5, #6]
 80166c8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80166ca:	7ba9      	ldrb	r1, [r5, #14]
 80166cc:	910a      	str	r1, [sp, #40]	@ 0x28
 80166ce:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 80166d2:	9109      	str	r1, [sp, #36]	@ 0x24
 80166d4:	68a9      	ldr	r1, [r5, #8]
 80166d6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80166d8:	9306      	str	r3, [sp, #24]
 80166da:	b2bf      	uxth	r7, r7
 80166dc:	e9cd 8702 	strd	r8, r7, [sp, #8]
 80166e0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80166e2:	9304      	str	r3, [sp, #16]
 80166e4:	44b0      	add	r8, r6
 80166e6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80166ea:	fa0f f388 	sxth.w	r3, r8
 80166ee:	9300      	str	r3, [sp, #0]
 80166f0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80166f2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80166f4:	9205      	str	r2, [sp, #20]
 80166f6:	f8cd a004 	str.w	sl, [sp, #4]
 80166fa:	681a      	ldr	r2, [r3, #0]
 80166fc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80166fe:	685b      	ldr	r3, [r3, #4]
 8016700:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016702:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8016704:	47b8      	blx	r7
 8016706:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016708:	3301      	adds	r3, #1
 801670a:	930d      	str	r3, [sp, #52]	@ 0x34
 801670c:	e6e4      	b.n	80164d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 801670e:	2700      	movs	r7, #0
 8016710:	e7cb      	b.n	80166aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8016712:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016714:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8016718:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801671a:	f8dc 1000 	ldr.w	r1, [ip]
 801671e:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8016722:	79aa      	ldrb	r2, [r5, #6]
 8016724:	9203      	str	r2, [sp, #12]
 8016726:	7baa      	ldrb	r2, [r5, #14]
 8016728:	9202      	str	r2, [sp, #8]
 801672a:	68aa      	ldr	r2, [r5, #8]
 801672c:	e9cd 0200 	strd	r0, r2, [sp]
 8016730:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8016732:	688f      	ldr	r7, [r1, #8]
 8016734:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016736:	4660      	mov	r0, ip
 8016738:	47b8      	blx	r7
 801673a:	e7e4      	b.n	8016706 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801673c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801673e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8016740:	3501      	adds	r5, #1
 8016742:	429d      	cmp	r5, r3
 8016744:	f6bf af5f 	bge.w	8016606 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8016748:	4659      	mov	r1, fp
 801674a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801674c:	f7f0 fdb4 	bl	80072b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016750:	4604      	mov	r4, r0
 8016752:	b110      	cbz	r0, 801675a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8016754:	280a      	cmp	r0, #10
 8016756:	d1f2      	bne.n	801673e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8016758:	e754      	b.n	8016604 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801675a:	2400      	movs	r4, #0
 801675c:	e753      	b.n	8016606 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801675e:	f1bb 0f00 	cmp.w	fp, #0
 8016762:	f43f af44 	beq.w	80165ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8016766:	e75e      	b.n	8016626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08016768 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8016768:	b530      	push	{r4, r5, lr}
 801676a:	8ac4      	ldrh	r4, [r0, #22]
 801676c:	8b45      	ldrh	r5, [r0, #26]
 801676e:	8343      	strh	r3, [r0, #26]
 8016770:	442c      	add	r4, r5
 8016772:	1ae4      	subs	r4, r4, r3
 8016774:	82c4      	strh	r4, [r0, #22]
 8016776:	8b83      	ldrh	r3, [r0, #28]
 8016778:	8b04      	ldrh	r4, [r0, #24]
 801677a:	4422      	add	r2, r4
 801677c:	440c      	add	r4, r1
 801677e:	1a59      	subs	r1, r3, r1
 8016780:	83c2      	strh	r2, [r0, #30]
 8016782:	8304      	strh	r4, [r0, #24]
 8016784:	8381      	strh	r1, [r0, #28]
 8016786:	bd30      	pop	{r4, r5, pc}

08016788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8016788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801678c:	4604      	mov	r4, r0
 801678e:	8a47      	ldrh	r7, [r0, #18]
 8016790:	68c0      	ldr	r0, [r0, #12]
 8016792:	6803      	ldr	r3, [r0, #0]
 8016794:	b085      	sub	sp, #20
 8016796:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016798:	4798      	blx	r3
 801679a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801679e:	7a63      	ldrb	r3, [r4, #9]
 80167a0:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80167a4:	42b7      	cmp	r7, r6
 80167a6:	f103 33ff 	add.w	r3, r3, #4294967295
 80167aa:	bfac      	ite	ge
 80167ac:	f04f 0900 	movge.w	r9, #0
 80167b0:	f04f 0901 	movlt.w	r9, #1
 80167b4:	2b05      	cmp	r3, #5
 80167b6:	d804      	bhi.n	80167c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80167b8:	e8df f003 	tbb	[pc, r3]
 80167bc:	470e0854 	.word	0x470e0854
 80167c0:	4c4c      	.short	0x4c4c
 80167c2:	2500      	movs	r5, #0
 80167c4:	46a9      	mov	r9, r5
 80167c6:	462e      	mov	r6, r5
 80167c8:	462f      	mov	r7, r5
 80167ca:	e00d      	b.n	80167e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80167cc:	42b7      	cmp	r7, r6
 80167ce:	bfb4      	ite	lt
 80167d0:	2600      	movlt	r6, #0
 80167d2:	2601      	movge	r6, #1
 80167d4:	2500      	movs	r5, #0
 80167d6:	e7f7      	b.n	80167c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80167d8:	42b7      	cmp	r7, r6
 80167da:	464d      	mov	r5, r9
 80167dc:	f04f 0900 	mov.w	r9, #0
 80167e0:	bfb4      	ite	lt
 80167e2:	2600      	movlt	r6, #0
 80167e4:	2601      	movge	r6, #1
 80167e6:	464f      	mov	r7, r9
 80167e8:	f04f 0800 	mov.w	r8, #0
 80167ec:	f8a4 8016 	strh.w	r8, [r4, #22]
 80167f0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80167f4:	f8cd 8004 	str.w	r8, [sp, #4]
 80167f8:	2300      	movs	r3, #0
 80167fa:	9303      	str	r3, [sp, #12]
 80167fc:	8823      	ldrh	r3, [r4, #0]
 80167fe:	2b20      	cmp	r3, #32
 8016800:	d034      	beq.n	801686c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8016802:	f242 010b 	movw	r1, #8203	@ 0x200b
 8016806:	1a5a      	subs	r2, r3, r1
 8016808:	f1d2 0a00 	rsbs	sl, r2, #0
 801680c:	eb4a 0a02 	adc.w	sl, sl, r2
 8016810:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8016814:	4293      	cmp	r3, r2
 8016816:	d009      	beq.n	801682c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016818:	428b      	cmp	r3, r1
 801681a:	9a01      	ldr	r2, [sp, #4]
 801681c:	bf18      	it	ne
 801681e:	461a      	movne	r2, r3
 8016820:	9201      	str	r2, [sp, #4]
 8016822:	bf0c      	ite	eq
 8016824:	f04f 0a01 	moveq.w	sl, #1
 8016828:	f04f 0a00 	movne.w	sl, #0
 801682c:	ab03      	add	r3, sp, #12
 801682e:	68e2      	ldr	r2, [r4, #12]
 8016830:	7a21      	ldrb	r1, [r4, #8]
 8016832:	6860      	ldr	r0, [r4, #4]
 8016834:	f003 f9e2 	bl	8019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016838:	8020      	strh	r0, [r4, #0]
 801683a:	b9d8      	cbnz	r0, 8016874 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801683c:	8ba2      	ldrh	r2, [r4, #28]
 801683e:	2300      	movs	r3, #0
 8016840:	4611      	mov	r1, r2
 8016842:	4620      	mov	r0, r4
 8016844:	f7ff ff90 	bl	8016768 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016848:	e06e      	b.n	8016928 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801684a:	2500      	movs	r5, #0
 801684c:	46a9      	mov	r9, r5
 801684e:	462e      	mov	r6, r5
 8016850:	2701      	movs	r7, #1
 8016852:	e7c9      	b.n	80167e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016854:	42b7      	cmp	r7, r6
 8016856:	f04f 0500 	mov.w	r5, #0
 801685a:	bfb4      	ite	lt
 801685c:	2700      	movlt	r7, #0
 801685e:	2701      	movge	r7, #1
 8016860:	462e      	mov	r6, r5
 8016862:	e7c1      	b.n	80167e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016864:	2500      	movs	r5, #0
 8016866:	46a9      	mov	r9, r5
 8016868:	2601      	movs	r6, #1
 801686a:	e7ad      	b.n	80167c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801686c:	9301      	str	r3, [sp, #4]
 801686e:	f04f 0a01 	mov.w	sl, #1
 8016872:	e7db      	b.n	801682c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016874:	8b63      	ldrh	r3, [r4, #26]
 8016876:	280a      	cmp	r0, #10
 8016878:	f103 0301 	add.w	r3, r3, #1
 801687c:	8363      	strh	r3, [r4, #26]
 801687e:	d0dd      	beq.n	801683c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8016880:	9a03      	ldr	r2, [sp, #12]
 8016882:	bb62      	cbnz	r2, 80168de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8016884:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8016888:	4298      	cmp	r0, r3
 801688a:	d003      	beq.n	8016894 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801688c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8016890:	4298      	cmp	r0, r3
 8016892:	d1b1      	bne.n	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016894:	8823      	ldrh	r3, [r4, #0]
 8016896:	8ba1      	ldrh	r1, [r4, #28]
 8016898:	2b20      	cmp	r3, #32
 801689a:	d003      	beq.n	80168a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801689c:	f242 000b 	movw	r0, #8203	@ 0x200b
 80168a0:	4283      	cmp	r3, r0
 80168a2:	d131      	bne.n	8016908 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80168a4:	f1ba 0f00 	cmp.w	sl, #0
 80168a8:	bf0a      	itet	eq
 80168aa:	4688      	moveq	r8, r1
 80168ac:	4650      	movne	r0, sl
 80168ae:	2001      	moveq	r0, #1
 80168b0:	440a      	add	r2, r1
 80168b2:	8b23      	ldrh	r3, [r4, #24]
 80168b4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80168b8:	b292      	uxth	r2, r2
 80168ba:	83a2      	strh	r2, [r4, #28]
 80168bc:	4413      	add	r3, r2
 80168be:	f1b9 0f00 	cmp.w	r9, #0
 80168c2:	d102      	bne.n	80168ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80168c4:	2d00      	cmp	r5, #0
 80168c6:	d042      	beq.n	801694e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80168c8:	b300      	cbz	r0, 801690c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80168ca:	8c21      	ldrh	r1, [r4, #32]
 80168cc:	4419      	add	r1, r3
 80168ce:	458c      	cmp	ip, r1
 80168d0:	da37      	bge.n	8016942 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80168d2:	8ae1      	ldrh	r1, [r4, #22]
 80168d4:	2900      	cmp	r1, #0
 80168d6:	d034      	beq.n	8016942 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80168d8:	4563      	cmp	r3, ip
 80168da:	dd8d      	ble.n	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80168dc:	e01d      	b.n	801691a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80168de:	8893      	ldrh	r3, [r2, #4]
 80168e0:	8023      	strh	r3, [r4, #0]
 80168e2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80168e6:	9901      	ldr	r1, [sp, #4]
 80168e8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80168ec:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80168f0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80168f4:	ea4b 0b00 	orr.w	fp, fp, r0
 80168f8:	68e0      	ldr	r0, [r4, #12]
 80168fa:	6803      	ldr	r3, [r0, #0]
 80168fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80168fe:	4798      	blx	r3
 8016900:	eb0b 0200 	add.w	r2, fp, r0
 8016904:	b292      	uxth	r2, r2
 8016906:	e7c5      	b.n	8016894 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016908:	2000      	movs	r0, #0
 801690a:	e7d1      	b.n	80168b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 801690c:	4563      	cmp	r3, ip
 801690e:	f77f af73 	ble.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016912:	8ae3      	ldrh	r3, [r4, #22]
 8016914:	2b00      	cmp	r3, #0
 8016916:	f43f af6f 	beq.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801691a:	2301      	movs	r3, #1
 801691c:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8016920:	8c22      	ldrh	r2, [r4, #32]
 8016922:	8be3      	ldrh	r3, [r4, #30]
 8016924:	4413      	add	r3, r2
 8016926:	83e3      	strh	r3, [r4, #30]
 8016928:	68e0      	ldr	r0, [r4, #12]
 801692a:	6803      	ldr	r3, [r0, #0]
 801692c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801692e:	4798      	blx	r3
 8016930:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8016934:	4418      	add	r0, r3
 8016936:	8a63      	ldrh	r3, [r4, #18]
 8016938:	1a18      	subs	r0, r3, r0
 801693a:	8260      	strh	r0, [r4, #18]
 801693c:	b005      	add	sp, #20
 801693e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016942:	2300      	movs	r3, #0
 8016944:	4611      	mov	r1, r2
 8016946:	4620      	mov	r0, r4
 8016948:	f7ff ff0e 	bl	8016768 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801694c:	e754      	b.n	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801694e:	4563      	cmp	r3, ip
 8016950:	dd14      	ble.n	801697c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8016952:	b117      	cbz	r7, 801695a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8016954:	2301      	movs	r3, #1
 8016956:	460a      	mov	r2, r1
 8016958:	e772      	b.n	8016840 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801695a:	2e00      	cmp	r6, #0
 801695c:	f43f af4c 	beq.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016960:	2800      	cmp	r0, #0
 8016962:	f47f af49 	bne.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016966:	f1ba 0f00 	cmp.w	sl, #0
 801696a:	d002      	beq.n	8016972 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801696c:	2301      	movs	r3, #1
 801696e:	4642      	mov	r2, r8
 8016970:	e767      	b.n	8016842 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8016972:	8ae3      	ldrh	r3, [r4, #22]
 8016974:	2b00      	cmp	r3, #0
 8016976:	f43f af3f 	beq.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801697a:	e7d5      	b.n	8016928 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801697c:	2800      	cmp	r0, #0
 801697e:	f47f af3b 	bne.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016982:	f1ba 0f00 	cmp.w	sl, #0
 8016986:	f43f af37 	beq.w	80167f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801698a:	2301      	movs	r3, #1
 801698c:	4642      	mov	r2, r8
 801698e:	e7da      	b.n	8016946 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08016990 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016990:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016992:	4605      	mov	r5, r0
 8016994:	b08f      	sub	sp, #60	@ 0x3c
 8016996:	4617      	mov	r7, r2
 8016998:	461c      	mov	r4, r3
 801699a:	460e      	mov	r6, r1
 801699c:	b1d1      	cbz	r1, 80169d4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801699e:	681b      	ldr	r3, [r3, #0]
 80169a0:	4620      	mov	r0, r4
 80169a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80169a4:	4798      	blx	r3
 80169a6:	4240      	negs	r0, r0
 80169a8:	b200      	sxth	r0, r0
 80169aa:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80169ae:	9603      	str	r6, [sp, #12]
 80169b0:	9700      	str	r7, [sp, #0]
 80169b2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80169b6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80169ba:	4629      	mov	r1, r5
 80169bc:	a805      	add	r0, sp, #20
 80169be:	f7ff fcab 	bl	8016318 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80169c2:	2401      	movs	r4, #1
 80169c4:	a805      	add	r0, sp, #20
 80169c6:	f7ff fedf 	bl	8016788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80169ca:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80169ce:	b163      	cbz	r3, 80169ea <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80169d0:	3401      	adds	r4, #1
 80169d2:	e7f7      	b.n	80169c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80169d4:	f003 f9e0 	bl	8019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80169d8:	2401      	movs	r4, #1
 80169da:	280a      	cmp	r0, #10
 80169dc:	4628      	mov	r0, r5
 80169de:	bf08      	it	eq
 80169e0:	3401      	addeq	r4, #1
 80169e2:	f003 f9d9 	bl	8019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80169e6:	2800      	cmp	r0, #0
 80169e8:	d1f7      	bne.n	80169da <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80169ea:	b2a0      	uxth	r0, r4
 80169ec:	b00f      	add	sp, #60	@ 0x3c
 80169ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

080169f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80169f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169f4:	b0e3      	sub	sp, #396	@ 0x18c
 80169f6:	461c      	mov	r4, r3
 80169f8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80169fa:	4683      	mov	fp, r0
 80169fc:	4688      	mov	r8, r1
 80169fe:	2b00      	cmp	r3, #0
 8016a00:	f000 8112 	beq.w	8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016a04:	6823      	ldr	r3, [r4, #0]
 8016a06:	2b00      	cmp	r3, #0
 8016a08:	f000 810e 	beq.w	8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016a0c:	7ba3      	ldrb	r3, [r4, #14]
 8016a0e:	2b00      	cmp	r3, #0
 8016a10:	f000 810a 	beq.w	8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016a14:	6810      	ldr	r0, [r2, #0]
 8016a16:	6851      	ldr	r1, [r2, #4]
 8016a18:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8016a1c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8016a20:	ad0a      	add	r5, sp, #40	@ 0x28
 8016a22:	462b      	mov	r3, r5
 8016a24:	c303      	stmia	r3!, {r0, r1}
 8016a26:	2100      	movs	r1, #0
 8016a28:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8016a2c:	910c      	str	r1, [sp, #48]	@ 0x30
 8016a2e:	79a2      	ldrb	r2, [r4, #6]
 8016a30:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8016a34:	a90c      	add	r1, sp, #48	@ 0x30
 8016a36:	4628      	mov	r0, r5
 8016a38:	f7ff fced 	bl	8016416 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016a3c:	a90c      	add	r1, sp, #48	@ 0x30
 8016a3e:	4608      	mov	r0, r1
 8016a40:	79a2      	ldrb	r2, [r4, #6]
 8016a42:	f7ff fce8 	bl	8016416 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016a46:	a817      	add	r0, sp, #92	@ 0x5c
 8016a48:	f002 fd51 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 8016a4c:	6820      	ldr	r0, [r4, #0]
 8016a4e:	6803      	ldr	r3, [r0, #0]
 8016a50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8016a52:	4798      	blx	r3
 8016a54:	4606      	mov	r6, r0
 8016a56:	6820      	ldr	r0, [r4, #0]
 8016a58:	6803      	ldr	r3, [r0, #0]
 8016a5a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8016a5c:	4798      	blx	r3
 8016a5e:	4633      	mov	r3, r6
 8016a60:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8016a62:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8016a64:	9000      	str	r0, [sp, #0]
 8016a66:	a817      	add	r0, sp, #92	@ 0x5c
 8016a68:	f002 fd9c 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016a6c:	6820      	ldr	r0, [r4, #0]
 8016a6e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8016a72:	6803      	ldr	r3, [r0, #0]
 8016a74:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016a76:	4798      	blx	r3
 8016a78:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016a7c:	6823      	ldr	r3, [r4, #0]
 8016a7e:	4607      	mov	r7, r0
 8016a80:	4406      	add	r6, r0
 8016a82:	a830      	add	r0, sp, #192	@ 0xc0
 8016a84:	f893 9009 	ldrb.w	r9, [r3, #9]
 8016a88:	f002 fd31 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 8016a8c:	7c23      	ldrb	r3, [r4, #16]
 8016a8e:	b17b      	cbz	r3, 8016ab0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016a90:	6820      	ldr	r0, [r4, #0]
 8016a92:	6803      	ldr	r3, [r0, #0]
 8016a94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8016a96:	4798      	blx	r3
 8016a98:	9009      	str	r0, [sp, #36]	@ 0x24
 8016a9a:	6820      	ldr	r0, [r4, #0]
 8016a9c:	6802      	ldr	r2, [r0, #0]
 8016a9e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8016aa0:	4790      	blx	r2
 8016aa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016aa4:	9000      	str	r0, [sp, #0]
 8016aa6:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8016aa8:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8016aaa:	a830      	add	r0, sp, #192	@ 0xc0
 8016aac:	f002 fd7a 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016ab0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8016ab4:	7be2      	ldrb	r2, [r4, #15]
 8016ab6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8016aba:	1a8a      	subs	r2, r1, r2
 8016abc:	7c21      	ldrb	r1, [r4, #16]
 8016abe:	9103      	str	r1, [sp, #12]
 8016ac0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8016ac4:	9102      	str	r1, [sp, #8]
 8016ac6:	6821      	ldr	r1, [r4, #0]
 8016ac8:	9101      	str	r1, [sp, #4]
 8016aca:	7961      	ldrb	r1, [r4, #5]
 8016acc:	9100      	str	r1, [sp, #0]
 8016ace:	b292      	uxth	r2, r2
 8016ad0:	a930      	add	r1, sp, #192	@ 0xc0
 8016ad2:	a80e      	add	r0, sp, #56	@ 0x38
 8016ad4:	f7ff fc20 	bl	8016318 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8016ad8:	2e00      	cmp	r6, #0
 8016ada:	dc5b      	bgt.n	8016b94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8016adc:	af17      	add	r7, sp, #92	@ 0x5c
 8016ade:	f04f 0900 	mov.w	r9, #0
 8016ae2:	7c23      	ldrb	r3, [r4, #16]
 8016ae4:	2b00      	cmp	r3, #0
 8016ae6:	f000 80b1 	beq.w	8016c4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8016aea:	a80e      	add	r0, sp, #56	@ 0x38
 8016aec:	f7ff fe4c 	bl	8016788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016af0:	f1ba 0f00 	cmp.w	sl, #0
 8016af4:	f000 80a5 	beq.w	8016c42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016af8:	7c23      	ldrb	r3, [r4, #16]
 8016afa:	9309      	str	r3, [sp, #36]	@ 0x24
 8016afc:	2264      	movs	r2, #100	@ 0x64
 8016afe:	4639      	mov	r1, r7
 8016b00:	a849      	add	r0, sp, #292	@ 0x124
 8016b02:	f014 fc18 	bl	802b336 <memcpy>
 8016b06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016b08:	2b00      	cmp	r3, #0
 8016b0a:	f000 80a7 	beq.w	8016c5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8016b0e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8016b12:	7922      	ldrb	r2, [r4, #4]
 8016b14:	2a01      	cmp	r2, #1
 8016b16:	f040 808a 	bne.w	8016c2e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8016b1a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8016b1e:	1ac0      	subs	r0, r0, r3
 8016b20:	2302      	movs	r3, #2
 8016b22:	fb90 f0f3 	sdiv	r0, r0, r3
 8016b26:	b200      	sxth	r0, r0
 8016b28:	7c23      	ldrb	r3, [r4, #16]
 8016b2a:	2b00      	cmp	r3, #0
 8016b2c:	f000 808b 	beq.w	8016c46 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016b30:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8016b34:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8016b38:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016b3c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016b40:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8016b44:	4410      	add	r0, r2
 8016b46:	b200      	sxth	r0, r0
 8016b48:	9000      	str	r0, [sp, #0]
 8016b4a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016b4e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016b52:	4642      	mov	r2, r8
 8016b54:	2100      	movs	r1, #0
 8016b56:	4658      	mov	r0, fp
 8016b58:	f7ff fc8e 	bl	8016478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016b5c:	2800      	cmp	r0, #0
 8016b5e:	d163      	bne.n	8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016b60:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8016b64:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8016b68:	b2b2      	uxth	r2, r6
 8016b6a:	4413      	add	r3, r2
 8016b6c:	1a8a      	subs	r2, r1, r2
 8016b6e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8016b72:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8016b76:	b21b      	sxth	r3, r3
 8016b78:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016b7c:	2a00      	cmp	r2, #0
 8016b7e:	d153      	bne.n	8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016b80:	6822      	ldr	r2, [r4, #0]
 8016b82:	8869      	ldrh	r1, [r5, #2]
 8016b84:	7a12      	ldrb	r2, [r2, #8]
 8016b86:	1a9b      	subs	r3, r3, r2
 8016b88:	88ea      	ldrh	r2, [r5, #6]
 8016b8a:	440a      	add	r2, r1
 8016b8c:	b212      	sxth	r2, r2
 8016b8e:	4293      	cmp	r3, r2
 8016b90:	dda7      	ble.n	8016ae2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016b92:	e049      	b.n	8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016b94:	7c23      	ldrb	r3, [r4, #16]
 8016b96:	444f      	add	r7, r9
 8016b98:	b1c3      	cbz	r3, 8016bcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8016b9a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8016b9e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016ba2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016ba6:	443b      	add	r3, r7
 8016ba8:	4293      	cmp	r3, r2
 8016baa:	da97      	bge.n	8016adc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016bac:	a80e      	add	r0, sp, #56	@ 0x38
 8016bae:	f7ff fdeb 	bl	8016788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016bb2:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8016bb6:	3b01      	subs	r3, #1
 8016bb8:	b29b      	uxth	r3, r3
 8016bba:	454b      	cmp	r3, r9
 8016bbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8016bbe:	d021      	beq.n	8016c04 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8016bc0:	7961      	ldrb	r1, [r4, #5]
 8016bc2:	a817      	add	r0, sp, #92	@ 0x5c
 8016bc4:	f7f0 fb78 	bl	80072b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016bc8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016bca:	e7f4      	b.n	8016bb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8016bcc:	fa1f f986 	uxth.w	r9, r6
 8016bd0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016bd4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016bd8:	443b      	add	r3, r7
 8016bda:	4293      	cmp	r3, r2
 8016bdc:	f6bf af7e 	bge.w	8016adc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016be0:	a817      	add	r0, sp, #92	@ 0x5c
 8016be2:	f003 f8d9 	bl	8019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016be6:	b1f8      	cbz	r0, 8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016be8:	280a      	cmp	r0, #10
 8016bea:	d1f1      	bne.n	8016bd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016bec:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8016bf0:	444b      	add	r3, r9
 8016bf2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016bf6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8016bfa:	eba3 0309 	sub.w	r3, r3, r9
 8016bfe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8016c02:	e7e5      	b.n	8016bd0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016c04:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8016c08:	b2b3      	uxth	r3, r6
 8016c0a:	441a      	add	r2, r3
 8016c0c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016c10:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8016c14:	1ad3      	subs	r3, r2, r3
 8016c16:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8016c1a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016c1e:	b11b      	cbz	r3, 8016c28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016c20:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8016c24:	2b00      	cmp	r3, #0
 8016c26:	d0ba      	beq.n	8016b9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8016c28:	b063      	add	sp, #396	@ 0x18c
 8016c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c2e:	2a02      	cmp	r2, #2
 8016c30:	d105      	bne.n	8016c3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8016c32:	7be2      	ldrb	r2, [r4, #15]
 8016c34:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8016c38:	1a80      	subs	r0, r0, r2
 8016c3a:	1ac0      	subs	r0, r0, r3
 8016c3c:	e773      	b.n	8016b26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016c3e:	2000      	movs	r0, #0
 8016c40:	e772      	b.n	8016b28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016c42:	7be0      	ldrb	r0, [r4, #15]
 8016c44:	e770      	b.n	8016b28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016c46:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8016c4a:	e773      	b.n	8016b34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016c4c:	f1ba 0f00 	cmp.w	sl, #0
 8016c50:	d0f7      	beq.n	8016c42 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016c52:	2264      	movs	r2, #100	@ 0x64
 8016c54:	4639      	mov	r1, r7
 8016c56:	a849      	add	r0, sp, #292	@ 0x124
 8016c58:	f014 fb6d 	bl	802b336 <memcpy>
 8016c5c:	2300      	movs	r3, #0
 8016c5e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8016c62:	6821      	ldr	r1, [r4, #0]
 8016c64:	a849      	add	r0, sp, #292	@ 0x124
 8016c66:	f7ff fb9a 	bl	801639e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016c6a:	b203      	sxth	r3, r0
 8016c6c:	e751      	b.n	8016b12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016c6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016c6e:	2b03      	cmp	r3, #3
 8016c70:	d818      	bhi.n	8016ca4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016c72:	e8df f003 	tbb	[pc, r3]
 8016c76:	0602      	.short	0x0602
 8016c78:	130d      	.short	0x130d
 8016c7a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016c7e:	1850      	adds	r0, r2, r1
 8016c80:	4770      	bx	lr
 8016c82:	8803      	ldrh	r3, [r0, #0]
 8016c84:	8880      	ldrh	r0, [r0, #4]
 8016c86:	4418      	add	r0, r3
 8016c88:	b200      	sxth	r0, r0
 8016c8a:	1a80      	subs	r0, r0, r2
 8016c8c:	3801      	subs	r0, #1
 8016c8e:	4770      	bx	lr
 8016c90:	8803      	ldrh	r3, [r0, #0]
 8016c92:	8880      	ldrh	r0, [r0, #4]
 8016c94:	4418      	add	r0, r3
 8016c96:	b200      	sxth	r0, r0
 8016c98:	1a40      	subs	r0, r0, r1
 8016c9a:	e7f7      	b.n	8016c8c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016c9c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016ca0:	4410      	add	r0, r2
 8016ca2:	4770      	bx	lr
 8016ca4:	2000      	movs	r0, #0
 8016ca6:	4770      	bx	lr

08016ca8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8016ca8:	2b03      	cmp	r3, #3
 8016caa:	d817      	bhi.n	8016cdc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016cac:	e8df f003 	tbb	[pc, r3]
 8016cb0:	10090602 	.word	0x10090602
 8016cb4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016cb8:	1850      	adds	r0, r2, r1
 8016cba:	4770      	bx	lr
 8016cbc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016cc0:	e7fa      	b.n	8016cb8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8016cc2:	8843      	ldrh	r3, [r0, #2]
 8016cc4:	88c0      	ldrh	r0, [r0, #6]
 8016cc6:	4418      	add	r0, r3
 8016cc8:	b200      	sxth	r0, r0
 8016cca:	1a80      	subs	r0, r0, r2
 8016ccc:	3801      	subs	r0, #1
 8016cce:	4770      	bx	lr
 8016cd0:	8843      	ldrh	r3, [r0, #2]
 8016cd2:	88c0      	ldrh	r0, [r0, #6]
 8016cd4:	4418      	add	r0, r3
 8016cd6:	b200      	sxth	r0, r0
 8016cd8:	1a40      	subs	r0, r0, r1
 8016cda:	e7f7      	b.n	8016ccc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016cdc:	2000      	movs	r0, #0
 8016cde:	4770      	bx	lr

08016ce0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8016ce0:	4b01      	ldr	r3, [pc, #4]	@ (8016ce8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8016ce2:	2200      	movs	r2, #0
 8016ce4:	601a      	str	r2, [r3, #0]
 8016ce6:	4770      	bx	lr
 8016ce8:	20013f70 	.word	0x20013f70

08016cec <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8016cec:	4603      	mov	r3, r0
 8016cee:	b1c8      	cbz	r0, 8016d24 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8016cf0:	0c02      	lsrs	r2, r0, #16
 8016cf2:	0412      	lsls	r2, r2, #16
 8016cf4:	b9a2      	cbnz	r2, 8016d20 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8016cf6:	0403      	lsls	r3, r0, #16
 8016cf8:	2010      	movs	r0, #16
 8016cfa:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8016cfe:	bf04      	itt	eq
 8016d00:	021b      	lsleq	r3, r3, #8
 8016d02:	3008      	addeq	r0, #8
 8016d04:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8016d08:	bf04      	itt	eq
 8016d0a:	011b      	lsleq	r3, r3, #4
 8016d0c:	3004      	addeq	r0, #4
 8016d0e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8016d12:	bf04      	itt	eq
 8016d14:	009b      	lsleq	r3, r3, #2
 8016d16:	3002      	addeq	r0, #2
 8016d18:	2b00      	cmp	r3, #0
 8016d1a:	db04      	blt.n	8016d26 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016d1c:	3001      	adds	r0, #1
 8016d1e:	4770      	bx	lr
 8016d20:	2000      	movs	r0, #0
 8016d22:	e7ea      	b.n	8016cfa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016d24:	2020      	movs	r0, #32
 8016d26:	4770      	bx	lr

08016d28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8016d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d2c:	b087      	sub	sp, #28
 8016d2e:	460d      	mov	r5, r1
 8016d30:	4616      	mov	r6, r2
 8016d32:	4698      	mov	r8, r3
 8016d34:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8016d38:	4601      	mov	r1, r0
 8016d3a:	b120      	cbz	r0, 8016d46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016d3c:	b11a      	cbz	r2, 8016d46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016d3e:	2d1f      	cmp	r5, #31
 8016d40:	d801      	bhi.n	8016d46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016d42:	2b1f      	cmp	r3, #31
 8016d44:	d904      	bls.n	8016d50 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8016d46:	2000      	movs	r0, #0
 8016d48:	6038      	str	r0, [r7, #0]
 8016d4a:	b007      	add	sp, #28
 8016d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d50:	b97d      	cbnz	r5, 8016d72 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016d52:	b143      	cbz	r3, 8016d66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016d54:	4602      	mov	r2, r0
 8016d56:	e9cd 4700 	strd	r4, r7, [sp]
 8016d5a:	462b      	mov	r3, r5
 8016d5c:	4641      	mov	r1, r8
 8016d5e:	4630      	mov	r0, r6
 8016d60:	f7ff ffe2 	bl	8016d28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016d64:	e7f1      	b.n	8016d4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016d66:	f04f 33ff 	mov.w	r3, #4294967295
 8016d6a:	603b      	str	r3, [r7, #0]
 8016d6c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8016d70:	e7eb      	b.n	8016d4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016d72:	fa32 fa05 	lsrs.w	sl, r2, r5
 8016d76:	d106      	bne.n	8016d86 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8016d78:	4346      	muls	r6, r0
 8016d7a:	fbb6 f0f4 	udiv	r0, r6, r4
 8016d7e:	fb04 6610 	mls	r6, r4, r0, r6
 8016d82:	603e      	str	r6, [r7, #0]
 8016d84:	e7e1      	b.n	8016d4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016d86:	2201      	movs	r2, #1
 8016d88:	40aa      	lsls	r2, r5
 8016d8a:	3a01      	subs	r2, #1
 8016d8c:	4016      	ands	r6, r2
 8016d8e:	fa00 fb05 	lsl.w	fp, r0, r5
 8016d92:	4630      	mov	r0, r6
 8016d94:	fbbb f9f4 	udiv	r9, fp, r4
 8016d98:	fb0a f309 	mul.w	r3, sl, r9
 8016d9c:	9303      	str	r3, [sp, #12]
 8016d9e:	f7ff ffa5 	bl	8016cec <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016da2:	462b      	mov	r3, r5
 8016da4:	460a      	mov	r2, r1
 8016da6:	e9cd 4700 	strd	r4, r7, [sp]
 8016daa:	4601      	mov	r1, r0
 8016dac:	4630      	mov	r0, r6
 8016dae:	f7ff ffbb 	bl	8016d28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016db2:	fb04 b919 	mls	r9, r4, r9, fp
 8016db6:	4606      	mov	r6, r0
 8016db8:	4648      	mov	r0, r9
 8016dba:	eb05 0108 	add.w	r1, r5, r8
 8016dbe:	f7ff ff95 	bl	8016cec <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016dc2:	ab05      	add	r3, sp, #20
 8016dc4:	e9cd 4300 	strd	r4, r3, [sp]
 8016dc8:	464a      	mov	r2, r9
 8016dca:	4603      	mov	r3, r0
 8016dcc:	4650      	mov	r0, sl
 8016dce:	f7ff ffab 	bl	8016d28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016dd2:	6839      	ldr	r1, [r7, #0]
 8016dd4:	9a05      	ldr	r2, [sp, #20]
 8016dd6:	9b03      	ldr	r3, [sp, #12]
 8016dd8:	4411      	add	r1, r2
 8016dda:	fbb1 f2f4 	udiv	r2, r1, r4
 8016dde:	18d3      	adds	r3, r2, r3
 8016de0:	441e      	add	r6, r3
 8016de2:	fb04 1412 	mls	r4, r4, r2, r1
 8016de6:	4430      	add	r0, r6
 8016de8:	603c      	str	r4, [r7, #0]
 8016dea:	e7ae      	b.n	8016d4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08016dec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8016dec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016df0:	b085      	sub	sp, #20
 8016df2:	f1b0 0900 	subs.w	r9, r0, #0
 8016df6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8016df8:	461d      	mov	r5, r3
 8016dfa:	bfbf      	itttt	lt
 8016dfc:	6823      	ldrlt	r3, [r4, #0]
 8016dfe:	425b      	neglt	r3, r3
 8016e00:	f1c9 0900 	rsblt	r9, r9, #0
 8016e04:	6023      	strlt	r3, [r4, #0]
 8016e06:	bfb4      	ite	lt
 8016e08:	f04f 36ff 	movlt.w	r6, #4294967295
 8016e0c:	2601      	movge	r6, #1
 8016e0e:	2a00      	cmp	r2, #0
 8016e10:	4617      	mov	r7, r2
 8016e12:	da04      	bge.n	8016e1e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8016e14:	6823      	ldr	r3, [r4, #0]
 8016e16:	425b      	negs	r3, r3
 8016e18:	4257      	negs	r7, r2
 8016e1a:	4276      	negs	r6, r6
 8016e1c:	6023      	str	r3, [r4, #0]
 8016e1e:	2d00      	cmp	r5, #0
 8016e20:	4638      	mov	r0, r7
 8016e22:	bfba      	itte	lt
 8016e24:	426d      	neglt	r5, r5
 8016e26:	f04f 38ff 	movlt.w	r8, #4294967295
 8016e2a:	f04f 0801 	movge.w	r8, #1
 8016e2e:	f7ff ff5d 	bl	8016cec <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016e32:	ab03      	add	r3, sp, #12
 8016e34:	e9cd 5300 	strd	r5, r3, [sp]
 8016e38:	463a      	mov	r2, r7
 8016e3a:	4603      	mov	r3, r0
 8016e3c:	4648      	mov	r0, r9
 8016e3e:	f7ff ff73 	bl	8016d28 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016e42:	6823      	ldr	r3, [r4, #0]
 8016e44:	9a03      	ldr	r2, [sp, #12]
 8016e46:	4546      	cmp	r6, r8
 8016e48:	441a      	add	r2, r3
 8016e4a:	fb92 f3f5 	sdiv	r3, r2, r5
 8016e4e:	4418      	add	r0, r3
 8016e50:	bf18      	it	ne
 8016e52:	4240      	negne	r0, r0
 8016e54:	fb05 2313 	mls	r3, r5, r3, r2
 8016e58:	1c72      	adds	r2, r6, #1
 8016e5a:	6023      	str	r3, [r4, #0]
 8016e5c:	d105      	bne.n	8016e6a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016e5e:	2b00      	cmp	r3, #0
 8016e60:	f1c3 0200 	rsb	r2, r3, #0
 8016e64:	db0b      	blt.n	8016e7e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8016e66:	6022      	str	r2, [r4, #0]
 8016e68:	e006      	b.n	8016e78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016e6a:	2e01      	cmp	r6, #1
 8016e6c:	d104      	bne.n	8016e78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016e6e:	2b00      	cmp	r3, #0
 8016e70:	da02      	bge.n	8016e78 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016e72:	442b      	add	r3, r5
 8016e74:	3801      	subs	r0, #1
 8016e76:	6023      	str	r3, [r4, #0]
 8016e78:	b005      	add	sp, #20
 8016e7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016e7e:	3801      	subs	r0, #1
 8016e80:	1b52      	subs	r2, r2, r5
 8016e82:	e7f0      	b.n	8016e66 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016e84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016e84:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8016e88:	4c1c      	ldr	r4, [pc, #112]	@ (8016efc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8016e8a:	6807      	ldr	r7, [r0, #0]
 8016e8c:	69a3      	ldr	r3, [r4, #24]
 8016e8e:	4605      	mov	r5, r0
 8016e90:	b92b      	cbnz	r3, 8016e9e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016e92:	6840      	ldr	r0, [r0, #4]
 8016e94:	e9c5 7000 	strd	r7, r0, [r5]
 8016e98:	b004      	add	sp, #16
 8016e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016e9e:	68a2      	ldr	r2, [r4, #8]
 8016ea0:	6820      	ldr	r0, [r4, #0]
 8016ea2:	ae04      	add	r6, sp, #16
 8016ea4:	f04f 0802 	mov.w	r8, #2
 8016ea8:	fb93 f1f8 	sdiv	r1, r3, r8
 8016eac:	440a      	add	r2, r1
 8016eae:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016eb2:	69e1      	ldr	r1, [r4, #28]
 8016eb4:	9600      	str	r6, [sp, #0]
 8016eb6:	463a      	mov	r2, r7
 8016eb8:	f7ff ff98 	bl	8016dec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016ebc:	69a3      	ldr	r3, [r4, #24]
 8016ebe:	686a      	ldr	r2, [r5, #4]
 8016ec0:	6a21      	ldr	r1, [r4, #32]
 8016ec2:	9600      	str	r6, [sp, #0]
 8016ec4:	4607      	mov	r7, r0
 8016ec6:	6860      	ldr	r0, [r4, #4]
 8016ec8:	f7ff ff90 	bl	8016dec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016ecc:	6962      	ldr	r2, [r4, #20]
 8016ece:	69a3      	ldr	r3, [r4, #24]
 8016ed0:	fb93 f8f8 	sdiv	r8, r3, r8
 8016ed4:	4442      	add	r2, r8
 8016ed6:	9203      	str	r2, [sp, #12]
 8016ed8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8016eda:	682a      	ldr	r2, [r5, #0]
 8016edc:	9600      	str	r6, [sp, #0]
 8016ede:	4407      	add	r7, r0
 8016ee0:	68e0      	ldr	r0, [r4, #12]
 8016ee2:	f7ff ff83 	bl	8016dec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016ee6:	9600      	str	r6, [sp, #0]
 8016ee8:	4680      	mov	r8, r0
 8016eea:	69a3      	ldr	r3, [r4, #24]
 8016eec:	686a      	ldr	r2, [r5, #4]
 8016eee:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8016ef0:	6920      	ldr	r0, [r4, #16]
 8016ef2:	f7ff ff7b 	bl	8016dec <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016ef6:	4440      	add	r0, r8
 8016ef8:	e7cc      	b.n	8016e94 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8016efa:	bf00      	nop
 8016efc:	20013f74 	.word	0x20013f74

08016f00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8016f00:	4b07      	ldr	r3, [pc, #28]	@ (8016f20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8016f02:	781b      	ldrb	r3, [r3, #0]
 8016f04:	2b01      	cmp	r3, #1
 8016f06:	d109      	bne.n	8016f1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8016f08:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016f0c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016f10:	8003      	strh	r3, [r0, #0]
 8016f12:	4b04      	ldr	r3, [pc, #16]	@ (8016f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8016f14:	881b      	ldrh	r3, [r3, #0]
 8016f16:	3b01      	subs	r3, #1
 8016f18:	1a9b      	subs	r3, r3, r2
 8016f1a:	800b      	strh	r3, [r1, #0]
 8016f1c:	4770      	bx	lr
 8016f1e:	bf00      	nop
 8016f20:	20013f58 	.word	0x20013f58
 8016f24:	20013f54 	.word	0x20013f54

08016f28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8016f28:	b510      	push	{r4, lr}
 8016f2a:	4b07      	ldr	r3, [pc, #28]	@ (8016f48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016f2c:	781b      	ldrb	r3, [r3, #0]
 8016f2e:	2b01      	cmp	r3, #1
 8016f30:	d108      	bne.n	8016f44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016f32:	4b06      	ldr	r3, [pc, #24]	@ (8016f4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016f34:	880c      	ldrh	r4, [r1, #0]
 8016f36:	881b      	ldrh	r3, [r3, #0]
 8016f38:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016f3c:	3b01      	subs	r3, #1
 8016f3e:	1b1b      	subs	r3, r3, r4
 8016f40:	8003      	strh	r3, [r0, #0]
 8016f42:	800a      	strh	r2, [r1, #0]
 8016f44:	bd10      	pop	{r4, pc}
 8016f46:	bf00      	nop
 8016f48:	20013f58 	.word	0x20013f58
 8016f4c:	20013f54 	.word	0x20013f54

08016f50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016f50:	b510      	push	{r4, lr}
 8016f52:	4b0a      	ldr	r3, [pc, #40]	@ (8016f7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016f54:	781b      	ldrb	r3, [r3, #0]
 8016f56:	2b01      	cmp	r3, #1
 8016f58:	d10e      	bne.n	8016f78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8016f5a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016f5e:	8843      	ldrh	r3, [r0, #2]
 8016f60:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016f64:	8044      	strh	r4, [r0, #2]
 8016f66:	18ca      	adds	r2, r1, r3
 8016f68:	4b05      	ldr	r3, [pc, #20]	@ (8016f80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8016f6a:	881b      	ldrh	r3, [r3, #0]
 8016f6c:	1a9b      	subs	r3, r3, r2
 8016f6e:	8003      	strh	r3, [r0, #0]
 8016f70:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016f74:	80c3      	strh	r3, [r0, #6]
 8016f76:	8081      	strh	r1, [r0, #4]
 8016f78:	bd10      	pop	{r4, pc}
 8016f7a:	bf00      	nop
 8016f7c:	20013f58 	.word	0x20013f58
 8016f80:	20013f54 	.word	0x20013f54

08016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016f84:	4b08      	ldr	r3, [pc, #32]	@ (8016fa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8016f86:	781b      	ldrb	r3, [r3, #0]
 8016f88:	2b01      	cmp	r3, #1
 8016f8a:	d10c      	bne.n	8016fa6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016f8c:	8803      	ldrh	r3, [r0, #0]
 8016f8e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016f92:	8842      	ldrh	r2, [r0, #2]
 8016f94:	8002      	strh	r2, [r0, #0]
 8016f96:	185a      	adds	r2, r3, r1
 8016f98:	4b04      	ldr	r3, [pc, #16]	@ (8016fac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8016f9a:	881b      	ldrh	r3, [r3, #0]
 8016f9c:	1a9b      	subs	r3, r3, r2
 8016f9e:	8043      	strh	r3, [r0, #2]
 8016fa0:	88c3      	ldrh	r3, [r0, #6]
 8016fa2:	8083      	strh	r3, [r0, #4]
 8016fa4:	80c1      	strh	r1, [r0, #6]
 8016fa6:	4770      	bx	lr
 8016fa8:	20013f58 	.word	0x20013f58
 8016fac:	20013f54 	.word	0x20013f54

08016fb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016fb0:	b510      	push	{r4, lr}
 8016fb2:	4b07      	ldr	r3, [pc, #28]	@ (8016fd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016fb4:	781b      	ldrb	r3, [r3, #0]
 8016fb6:	2b01      	cmp	r3, #1
 8016fb8:	d108      	bne.n	8016fcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8016fba:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016fbe:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016fc2:	8003      	strh	r3, [r0, #0]
 8016fc4:	8893      	ldrh	r3, [r2, #4]
 8016fc6:	3b01      	subs	r3, #1
 8016fc8:	1b1b      	subs	r3, r3, r4
 8016fca:	800b      	strh	r3, [r1, #0]
 8016fcc:	bd10      	pop	{r4, pc}
 8016fce:	bf00      	nop
 8016fd0:	20013f58 	.word	0x20013f58

08016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8016fd4:	b510      	push	{r4, lr}
 8016fd6:	4b0a      	ldr	r3, [pc, #40]	@ (8017000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8016fd8:	781b      	ldrb	r3, [r3, #0]
 8016fda:	2b01      	cmp	r3, #1
 8016fdc:	460a      	mov	r2, r1
 8016fde:	d10d      	bne.n	8016ffc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8016fe0:	8881      	ldrh	r1, [r0, #4]
 8016fe2:	8803      	ldrh	r3, [r0, #0]
 8016fe4:	440b      	add	r3, r1
 8016fe6:	4601      	mov	r1, r0
 8016fe8:	3b01      	subs	r3, #1
 8016fea:	f821 3b02 	strh.w	r3, [r1], #2
 8016fee:	f7ff ffdf 	bl	8016fb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8016ff2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016ff6:	88c2      	ldrh	r2, [r0, #6]
 8016ff8:	8082      	strh	r2, [r0, #4]
 8016ffa:	80c3      	strh	r3, [r0, #6]
 8016ffc:	bd10      	pop	{r4, pc}
 8016ffe:	bf00      	nop
 8017000:	20013f58 	.word	0x20013f58

08017004 <_ZN8touchgfx11Application13requestRedrawEv>:
 8017004:	4b06      	ldr	r3, [pc, #24]	@ (8017020 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8017006:	f9b3 2000 	ldrsh.w	r2, [r3]
 801700a:	4b06      	ldr	r3, [pc, #24]	@ (8017024 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801700c:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8017010:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017014:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8017018:	2100      	movs	r1, #0
 801701a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801701e:	4770      	bx	lr
 8017020:	20013f54 	.word	0x20013f54
 8017024:	20013f56 	.word	0x20013f56

08017028 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8017028:	4b03      	ldr	r3, [pc, #12]	@ (8017038 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801702a:	6818      	ldr	r0, [r3, #0]
 801702c:	b110      	cbz	r0, 8017034 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801702e:	6803      	ldr	r3, [r0, #0]
 8017030:	699b      	ldr	r3, [r3, #24]
 8017032:	4718      	bx	r3
 8017034:	4770      	bx	lr
 8017036:	bf00      	nop
 8017038:	20013fa4 	.word	0x20013fa4

0801703c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801703c:	4770      	bx	lr
	...

08017040 <_ZN8touchgfx11Application4drawEv>:
 8017040:	b507      	push	{r0, r1, r2, lr}
 8017042:	4b09      	ldr	r3, [pc, #36]	@ (8017068 <_ZN8touchgfx11Application4drawEv+0x28>)
 8017044:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017048:	4b08      	ldr	r3, [pc, #32]	@ (801706c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801704a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801704e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017052:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017056:	6803      	ldr	r3, [r0, #0]
 8017058:	2100      	movs	r1, #0
 801705a:	9100      	str	r1, [sp, #0]
 801705c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801705e:	4669      	mov	r1, sp
 8017060:	4798      	blx	r3
 8017062:	b003      	add	sp, #12
 8017064:	f85d fb04 	ldr.w	pc, [sp], #4
 8017068:	20013f54 	.word	0x20013f54
 801706c:	20013f56 	.word	0x20013f56

08017070 <_ZN8touchgfx11Application10invalidateEv>:
 8017070:	4b09      	ldr	r3, [pc, #36]	@ (8017098 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8017072:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017076:	4b09      	ldr	r3, [pc, #36]	@ (801709c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8017078:	b082      	sub	sp, #8
 801707a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801707e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017082:	2100      	movs	r1, #0
 8017084:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017088:	9100      	str	r1, [sp, #0]
 801708a:	6803      	ldr	r3, [r0, #0]
 801708c:	aa02      	add	r2, sp, #8
 801708e:	e912 0006 	ldmdb	r2, {r1, r2}
 8017092:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017094:	b002      	add	sp, #8
 8017096:	4718      	bx	r3
 8017098:	20013f54 	.word	0x20013f54
 801709c:	20013f56 	.word	0x20013f56

080170a0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80170a0:	4b03      	ldr	r3, [pc, #12]	@ (80170b0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80170a2:	6818      	ldr	r0, [r3, #0]
 80170a4:	b110      	cbz	r0, 80170ac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80170a6:	6803      	ldr	r3, [r0, #0]
 80170a8:	69db      	ldr	r3, [r3, #28]
 80170aa:	4718      	bx	r3
 80170ac:	4770      	bx	lr
 80170ae:	bf00      	nop
 80170b0:	20013fa4 	.word	0x20013fa4

080170b4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80170b4:	4b03      	ldr	r3, [pc, #12]	@ (80170c4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80170b6:	6818      	ldr	r0, [r3, #0]
 80170b8:	b110      	cbz	r0, 80170c0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80170ba:	6803      	ldr	r3, [r0, #0]
 80170bc:	6a1b      	ldr	r3, [r3, #32]
 80170be:	4718      	bx	r3
 80170c0:	4770      	bx	lr
 80170c2:	bf00      	nop
 80170c4:	20013fa4 	.word	0x20013fa4

080170c8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80170c8:	2300      	movs	r3, #0
 80170ca:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 80170ce:	4770      	bx	lr

080170d0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80170d0:	4b03      	ldr	r3, [pc, #12]	@ (80170e0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80170d2:	6818      	ldr	r0, [r3, #0]
 80170d4:	b110      	cbz	r0, 80170dc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80170d6:	6803      	ldr	r3, [r0, #0]
 80170d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80170da:	4718      	bx	r3
 80170dc:	4770      	bx	lr
 80170de:	bf00      	nop
 80170e0:	20013fa4 	.word	0x20013fa4

080170e4 <_ZN8touchgfx11ApplicationD1Ev>:
 80170e4:	4770      	bx	lr

080170e6 <_ZN8touchgfx11ApplicationD0Ev>:
 80170e6:	b510      	push	{r4, lr}
 80170e8:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80170ec:	4604      	mov	r4, r0
 80170ee:	f012 fdfb 	bl	8029ce8 <_ZdlPvj>
 80170f2:	4620      	mov	r0, r4
 80170f4:	bd10      	pop	{r4, pc}

080170f6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80170f6:	b510      	push	{r4, lr}
 80170f8:	f9b1 4000 	ldrsh.w	r4, [r1]
 80170fc:	888a      	ldrh	r2, [r1, #4]
 80170fe:	f9b0 3000 	ldrsh.w	r3, [r0]
 8017102:	4422      	add	r2, r4
 8017104:	b212      	sxth	r2, r2
 8017106:	4293      	cmp	r3, r2
 8017108:	da15      	bge.n	8017136 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801710a:	8882      	ldrh	r2, [r0, #4]
 801710c:	4413      	add	r3, r2
 801710e:	b21b      	sxth	r3, r3
 8017110:	429c      	cmp	r4, r3
 8017112:	da10      	bge.n	8017136 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8017114:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8017118:	88c9      	ldrh	r1, [r1, #6]
 801711a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801711e:	4419      	add	r1, r3
 8017120:	b209      	sxth	r1, r1
 8017122:	428a      	cmp	r2, r1
 8017124:	da07      	bge.n	8017136 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8017126:	88c0      	ldrh	r0, [r0, #6]
 8017128:	4410      	add	r0, r2
 801712a:	b200      	sxth	r0, r0
 801712c:	4283      	cmp	r3, r0
 801712e:	bfac      	ite	ge
 8017130:	2000      	movge	r0, #0
 8017132:	2001      	movlt	r0, #1
 8017134:	bd10      	pop	{r4, pc}
 8017136:	2000      	movs	r0, #0
 8017138:	e7fc      	b.n	8017134 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801713a <_ZN8touchgfx4Rect10restrictToEss>:
 801713a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801713e:	2b00      	cmp	r3, #0
 8017140:	b510      	push	{r4, lr}
 8017142:	da04      	bge.n	801714e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8017144:	8884      	ldrh	r4, [r0, #4]
 8017146:	4423      	add	r3, r4
 8017148:	8083      	strh	r3, [r0, #4]
 801714a:	2300      	movs	r3, #0
 801714c:	8003      	strh	r3, [r0, #0]
 801714e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8017152:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8017156:	1b09      	subs	r1, r1, r4
 8017158:	428b      	cmp	r3, r1
 801715a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801715e:	bfc8      	it	gt
 8017160:	8081      	strhgt	r1, [r0, #4]
 8017162:	2b00      	cmp	r3, #0
 8017164:	da04      	bge.n	8017170 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8017166:	88c1      	ldrh	r1, [r0, #6]
 8017168:	440b      	add	r3, r1
 801716a:	80c3      	strh	r3, [r0, #6]
 801716c:	2300      	movs	r3, #0
 801716e:	8043      	strh	r3, [r0, #2]
 8017170:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8017174:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8017178:	1a52      	subs	r2, r2, r1
 801717a:	4293      	cmp	r3, r2
 801717c:	bfc8      	it	gt
 801717e:	80c2      	strhgt	r2, [r0, #6]
 8017180:	bd10      	pop	{r4, pc}
	...

08017184 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8017184:	b510      	push	{r4, lr}
 8017186:	4b10      	ldr	r3, [pc, #64]	@ (80171c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8017188:	f9b3 2000 	ldrsh.w	r2, [r3]
 801718c:	4b0f      	ldr	r3, [pc, #60]	@ (80171cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801718e:	460c      	mov	r4, r1
 8017190:	4620      	mov	r0, r4
 8017192:	f9b3 1000 	ldrsh.w	r1, [r3]
 8017196:	f7ff ffd0 	bl	801713a <_ZN8touchgfx4Rect10restrictToEss>
 801719a:	4b0d      	ldr	r3, [pc, #52]	@ (80171d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801719c:	6818      	ldr	r0, [r3, #0]
 801719e:	b190      	cbz	r0, 80171c6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80171a0:	6803      	ldr	r3, [r0, #0]
 80171a2:	4621      	mov	r1, r4
 80171a4:	689b      	ldr	r3, [r3, #8]
 80171a6:	4798      	blx	r3
 80171a8:	4b0a      	ldr	r3, [pc, #40]	@ (80171d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80171aa:	6818      	ldr	r0, [r3, #0]
 80171ac:	b118      	cbz	r0, 80171b6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80171ae:	6803      	ldr	r3, [r0, #0]
 80171b0:	4621      	mov	r1, r4
 80171b2:	689b      	ldr	r3, [r3, #8]
 80171b4:	4798      	blx	r3
 80171b6:	4b08      	ldr	r3, [pc, #32]	@ (80171d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80171b8:	6818      	ldr	r0, [r3, #0]
 80171ba:	6803      	ldr	r3, [r0, #0]
 80171bc:	4621      	mov	r1, r4
 80171be:	69db      	ldr	r3, [r3, #28]
 80171c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80171c4:	4718      	bx	r3
 80171c6:	bd10      	pop	{r4, pc}
 80171c8:	20013f56 	.word	0x20013f56
 80171cc:	20013f54 	.word	0x20013f54
 80171d0:	20013fa4 	.word	0x20013fa4
 80171d4:	20013fa0 	.word	0x20013fa0
 80171d8:	20013f60 	.word	0x20013f60

080171dc <_ZNK8touchgfx4Rect8includesERKS0_>:
 80171dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80171de:	4606      	mov	r6, r0
 80171e0:	4608      	mov	r0, r1
 80171e2:	460f      	mov	r7, r1
 80171e4:	f7f9 f9a5 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 80171e8:	b9e8      	cbnz	r0, 8017226 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80171ea:	f9b7 5000 	ldrsh.w	r5, [r7]
 80171ee:	f9b6 4000 	ldrsh.w	r4, [r6]
 80171f2:	42a5      	cmp	r5, r4
 80171f4:	db17      	blt.n	8017226 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80171f6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80171fa:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80171fe:	429a      	cmp	r2, r3
 8017200:	db11      	blt.n	8017226 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8017202:	88b9      	ldrh	r1, [r7, #4]
 8017204:	440d      	add	r5, r1
 8017206:	88b1      	ldrh	r1, [r6, #4]
 8017208:	440c      	add	r4, r1
 801720a:	b22d      	sxth	r5, r5
 801720c:	b224      	sxth	r4, r4
 801720e:	42a5      	cmp	r5, r4
 8017210:	dc09      	bgt.n	8017226 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8017212:	88f8      	ldrh	r0, [r7, #6]
 8017214:	4410      	add	r0, r2
 8017216:	88f2      	ldrh	r2, [r6, #6]
 8017218:	4413      	add	r3, r2
 801721a:	b200      	sxth	r0, r0
 801721c:	b21b      	sxth	r3, r3
 801721e:	4298      	cmp	r0, r3
 8017220:	bfcc      	ite	gt
 8017222:	2000      	movgt	r0, #0
 8017224:	2001      	movle	r0, #1
 8017226:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08017228 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8017228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801722a:	4604      	mov	r4, r0
 801722c:	4608      	mov	r0, r1
 801722e:	460d      	mov	r5, r1
 8017230:	f7f9 f97f 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017234:	b978      	cbnz	r0, 8017256 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8017236:	4620      	mov	r0, r4
 8017238:	f7f9 f97b 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 801723c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8017240:	b150      	cbz	r0, 8017258 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8017242:	8026      	strh	r6, [r4, #0]
 8017244:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017248:	8063      	strh	r3, [r4, #2]
 801724a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801724e:	80a3      	strh	r3, [r4, #4]
 8017250:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8017254:	80e3      	strh	r3, [r4, #6]
 8017256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017258:	f9b4 1000 	ldrsh.w	r1, [r4]
 801725c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8017260:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8017264:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8017268:	88ed      	ldrh	r5, [r5, #6]
 801726a:	42b1      	cmp	r1, r6
 801726c:	460f      	mov	r7, r1
 801726e:	bfa8      	it	ge
 8017270:	4637      	movge	r7, r6
 8017272:	4293      	cmp	r3, r2
 8017274:	4618      	mov	r0, r3
 8017276:	4466      	add	r6, ip
 8017278:	bfa8      	it	ge
 801727a:	4610      	movge	r0, r2
 801727c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017280:	8027      	strh	r7, [r4, #0]
 8017282:	442a      	add	r2, r5
 8017284:	88e5      	ldrh	r5, [r4, #6]
 8017286:	8060      	strh	r0, [r4, #2]
 8017288:	4461      	add	r1, ip
 801728a:	442b      	add	r3, r5
 801728c:	b236      	sxth	r6, r6
 801728e:	b209      	sxth	r1, r1
 8017290:	b212      	sxth	r2, r2
 8017292:	b21b      	sxth	r3, r3
 8017294:	428e      	cmp	r6, r1
 8017296:	bfac      	ite	ge
 8017298:	ebc7 0106 	rsbge	r1, r7, r6
 801729c:	ebc7 0101 	rsblt	r1, r7, r1
 80172a0:	429a      	cmp	r2, r3
 80172a2:	bfac      	ite	ge
 80172a4:	ebc0 0202 	rsbge	r2, r0, r2
 80172a8:	ebc0 0203 	rsblt	r2, r0, r3
 80172ac:	80a1      	strh	r1, [r4, #4]
 80172ae:	80e2      	strh	r2, [r4, #6]
 80172b0:	e7d1      	b.n	8017256 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080172b4 <_ZN8touchgfx11Application11getInstanceEv>:
 80172b4:	4b01      	ldr	r3, [pc, #4]	@ (80172bc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80172b6:	6818      	ldr	r0, [r3, #0]
 80172b8:	4770      	bx	lr
 80172ba:	bf00      	nop
 80172bc:	20013fb4 	.word	0x20013fb4

080172c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80172c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80172c2:	4b10      	ldr	r3, [pc, #64]	@ (8017304 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80172c4:	781b      	ldrb	r3, [r3, #0]
 80172c6:	4605      	mov	r5, r0
 80172c8:	b1d3      	cbz	r3, 8017300 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80172ca:	4b0f      	ldr	r3, [pc, #60]	@ (8017308 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80172cc:	4f0f      	ldr	r7, [pc, #60]	@ (801730c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80172ce:	881c      	ldrh	r4, [r3, #0]
 80172d0:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 80172d4:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 80172d8:	42a3      	cmp	r3, r4
 80172da:	d90e      	bls.n	80172fa <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80172dc:	683b      	ldr	r3, [r7, #0]
 80172de:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80172e2:	b10a      	cbz	r2, 80172e8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80172e4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80172e6:	b900      	cbnz	r0, 80172ea <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80172e8:	6898      	ldr	r0, [r3, #8]
 80172ea:	6803      	ldr	r3, [r0, #0]
 80172ec:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80172f0:	69db      	ldr	r3, [r3, #28]
 80172f2:	3401      	adds	r4, #1
 80172f4:	4798      	blx	r3
 80172f6:	b2a4      	uxth	r4, r4
 80172f8:	e7ec      	b.n	80172d4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80172fa:	2300      	movs	r3, #0
 80172fc:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 8017300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017302:	bf00      	nop
 8017304:	20013f5e 	.word	0x20013f5e
 8017308:	20000084 	.word	0x20000084
 801730c:	20013f60 	.word	0x20013f60

08017310 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8017310:	b510      	push	{r4, lr}
 8017312:	2300      	movs	r3, #0
 8017314:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8017318:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801731c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8017320:	4604      	mov	r4, r0
 8017322:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8017326:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801732a:	429a      	cmp	r2, r3
 801732c:	d90e      	bls.n	801734c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801732e:	18e2      	adds	r2, r4, r3
 8017330:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8017334:	b122      	cbz	r2, 8017340 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8017336:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801733a:	6803      	ldr	r3, [r0, #0]
 801733c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801733e:	4798      	blx	r3
 8017340:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8017344:	3301      	adds	r3, #1
 8017346:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801734a:	e7ea      	b.n	8017322 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801734c:	bd10      	pop	{r4, pc}

0801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801734e:	2300      	movs	r3, #0
 8017350:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8017354:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8017358:	30a4      	adds	r0, #164	@ 0xa4
 801735a:	f802 3b01 	strb.w	r3, [r2], #1
 801735e:	4282      	cmp	r2, r0
 8017360:	d1fb      	bne.n	801735a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8017362:	4770      	bx	lr

08017364 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8017364:	b570      	push	{r4, r5, r6, lr}
 8017366:	4c0b      	ldr	r4, [pc, #44]	@ (8017394 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8017368:	4605      	mov	r5, r0
 801736a:	6820      	ldr	r0, [r4, #0]
 801736c:	460e      	mov	r6, r1
 801736e:	b110      	cbz	r0, 8017376 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8017370:	6803      	ldr	r3, [r0, #0]
 8017372:	695b      	ldr	r3, [r3, #20]
 8017374:	4798      	blx	r3
 8017376:	1d28      	adds	r0, r5, #4
 8017378:	f7ff ffe9 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801737c:	6026      	str	r6, [r4, #0]
 801737e:	6833      	ldr	r3, [r6, #0]
 8017380:	4630      	mov	r0, r6
 8017382:	68db      	ldr	r3, [r3, #12]
 8017384:	4798      	blx	r3
 8017386:	682b      	ldr	r3, [r5, #0]
 8017388:	4628      	mov	r0, r5
 801738a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801738c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017390:	4718      	bx	r3
 8017392:	bf00      	nop
 8017394:	20013fa4 	.word	0x20013fa4

08017398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8017398:	2300      	movs	r3, #0
 801739a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801739e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80173a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80173a4:	461a      	mov	r2, r3
 80173a6:	461c      	mov	r4, r3
 80173a8:	461d      	mov	r5, r3
 80173aa:	459c      	cmp	ip, r3
 80173ac:	dd1a      	ble.n	80173e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80173ae:	18c6      	adds	r6, r0, r3
 80173b0:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 80173b4:	b16e      	cbz	r6, 80173d2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80173b6:	429a      	cmp	r2, r3
 80173b8:	d008      	beq.n	80173cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80173ba:	fa1f fe82 	uxth.w	lr, r2
 80173be:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80173c2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80173c6:	1887      	adds	r7, r0, r2
 80173c8:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 80173cc:	3201      	adds	r2, #1
 80173ce:	3301      	adds	r3, #1
 80173d0:	e7eb      	b.n	80173aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80173d2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 80173d6:	4299      	cmp	r1, r3
 80173d8:	bfa8      	it	ge
 80173da:	3501      	addge	r5, #1
 80173dc:	429e      	cmp	r6, r3
 80173de:	bfc8      	it	gt
 80173e0:	3401      	addgt	r4, #1
 80173e2:	e7f4      	b.n	80173ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80173e4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 80173e8:	1b49      	subs	r1, r1, r5
 80173ea:	1b1b      	subs	r3, r3, r4
 80173ec:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 80173f0:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80173f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80173f8:	4293      	cmp	r3, r2
 80173fa:	dd03      	ble.n	8017404 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80173fc:	3b01      	subs	r3, #1
 80173fe:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8017402:	e7f7      	b.n	80173f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8017404:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08017408 <_ZN8touchgfx11Application15handleTickEventEv>:
 8017408:	b570      	push	{r4, r5, r6, lr}
 801740a:	4d16      	ldr	r5, [pc, #88]	@ (8017464 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801740c:	4604      	mov	r4, r0
 801740e:	6828      	ldr	r0, [r5, #0]
 8017410:	b140      	cbz	r0, 8017424 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8017412:	7a03      	ldrb	r3, [r0, #8]
 8017414:	b933      	cbnz	r3, 8017424 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8017416:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801741a:	6803      	ldr	r3, [r0, #0]
 801741c:	689b      	ldr	r3, [r3, #8]
 801741e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017422:	4718      	bx	r3
 8017424:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8017428:	4e0f      	ldr	r6, [pc, #60]	@ (8017468 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801742a:	b973      	cbnz	r3, 801744a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801742c:	b168      	cbz	r0, 801744a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801742e:	7a03      	ldrb	r3, [r0, #8]
 8017430:	b15b      	cbz	r3, 801744a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017432:	6830      	ldr	r0, [r6, #0]
 8017434:	b110      	cbz	r0, 801743c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8017436:	6803      	ldr	r3, [r0, #0]
 8017438:	691b      	ldr	r3, [r3, #16]
 801743a:	4798      	blx	r3
 801743c:	6828      	ldr	r0, [r5, #0]
 801743e:	6803      	ldr	r3, [r0, #0]
 8017440:	68db      	ldr	r3, [r3, #12]
 8017442:	4798      	blx	r3
 8017444:	2301      	movs	r3, #1
 8017446:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801744a:	3404      	adds	r4, #4
 801744c:	4620      	mov	r0, r4
 801744e:	f7ff ff5f 	bl	8017310 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8017452:	4620      	mov	r0, r4
 8017454:	f7ff ffa0 	bl	8017398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017458:	6830      	ldr	r0, [r6, #0]
 801745a:	b110      	cbz	r0, 8017462 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801745c:	6803      	ldr	r3, [r0, #0]
 801745e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017460:	e7dd      	b.n	801741e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8017462:	bd70      	pop	{r4, r5, r6, pc}
 8017464:	20013fa8 	.word	0x20013fa8
 8017468:	20013fa4 	.word	0x20013fa4

0801746c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801746c:	4603      	mov	r3, r0
 801746e:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8017472:	2200      	movs	r2, #0
 8017474:	801a      	strh	r2, [r3, #0]
 8017476:	805a      	strh	r2, [r3, #2]
 8017478:	809a      	strh	r2, [r3, #4]
 801747a:	80da      	strh	r2, [r3, #6]
 801747c:	3308      	adds	r3, #8
 801747e:	428b      	cmp	r3, r1
 8017480:	d1f8      	bne.n	8017474 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8017482:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8017486:	4770      	bx	lr

08017488 <_ZN8touchgfx11ApplicationC1Ev>:
 8017488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801748a:	4606      	mov	r6, r0
 801748c:	4b1c      	ldr	r3, [pc, #112]	@ (8017500 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801748e:	f846 3b04 	str.w	r3, [r6], #4
 8017492:	4604      	mov	r4, r0
 8017494:	2500      	movs	r5, #0
 8017496:	22a8      	movs	r2, #168	@ 0xa8
 8017498:	2100      	movs	r1, #0
 801749a:	4630      	mov	r0, r6
 801749c:	f013 fe7b 	bl	802b196 <memset>
 80174a0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80174a4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80174a8:	f7ff ffe0 	bl	801746c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80174ac:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80174b0:	f7ff ffdc 	bl	801746c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80174b4:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 80174b8:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80174bc:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80174c0:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 80174c4:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 80174c8:	490e      	ldr	r1, [pc, #56]	@ (8017504 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80174ca:	480f      	ldr	r0, [pc, #60]	@ (8017508 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80174cc:	4f0f      	ldr	r7, [pc, #60]	@ (801750c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80174ce:	f011 fd77 	bl	8028fc0 <CRC_Lock>
 80174d2:	4b0f      	ldr	r3, [pc, #60]	@ (8017510 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80174d4:	b158      	cbz	r0, 80174ee <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80174d6:	801d      	strh	r5, [r3, #0]
 80174d8:	4a0e      	ldr	r2, [pc, #56]	@ (8017514 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80174da:	2300      	movs	r3, #0
 80174dc:	6013      	str	r3, [r2, #0]
 80174de:	4a0e      	ldr	r2, [pc, #56]	@ (8017518 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80174e0:	603b      	str	r3, [r7, #0]
 80174e2:	4630      	mov	r0, r6
 80174e4:	6013      	str	r3, [r2, #0]
 80174e6:	f7ff ff32 	bl	801734e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80174ea:	4620      	mov	r0, r4
 80174ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80174ee:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80174f2:	2002      	movs	r0, #2
 80174f4:	801a      	strh	r2, [r3, #0]
 80174f6:	6038      	str	r0, [r7, #0]
 80174f8:	f001 fe4c 	bl	8019194 <_ZN8touchgfx6Screen4drawEv>
 80174fc:	e7ec      	b.n	80174d8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80174fe:	bf00      	nop
 8017500:	0802e3ac 	.word	0x0802e3ac
 8017504:	b5e8b5cd 	.word	0xb5e8b5cd
 8017508:	f407a5c2 	.word	0xf407a5c2
 801750c:	20013fa4 	.word	0x20013fa4
 8017510:	20000084 	.word	0x20000084
 8017514:	20013fb4 	.word	0x20013fb4
 8017518:	20013fa8 	.word	0x20013fa8

0801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801751c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8017520:	3b01      	subs	r3, #1
 8017522:	b29b      	uxth	r3, r3
 8017524:	428b      	cmp	r3, r1
 8017526:	b510      	push	{r4, lr}
 8017528:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801752c:	d908      	bls.n	8017540 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801752e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017532:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8017536:	681a      	ldr	r2, [r3, #0]
 8017538:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801753c:	685a      	ldr	r2, [r3, #4]
 801753e:	6062      	str	r2, [r4, #4]
 8017540:	bd10      	pop	{r4, pc}
	...

08017544 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8017544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017548:	4b8f      	ldr	r3, [pc, #572]	@ (8017788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801754a:	b08f      	sub	sp, #60	@ 0x3c
 801754c:	ac0a      	add	r4, sp, #40	@ 0x28
 801754e:	e884 0006 	stmia.w	r4, {r1, r2}
 8017552:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017556:	4b8d      	ldr	r3, [pc, #564]	@ (801778c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8017558:	4683      	mov	fp, r0
 801755a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801755e:	4620      	mov	r0, r4
 8017560:	f7ff fdeb 	bl	801713a <_ZN8touchgfx4Rect10restrictToEss>
 8017564:	4620      	mov	r0, r4
 8017566:	f7f8 ffe4 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 801756a:	2800      	cmp	r0, #0
 801756c:	d16a      	bne.n	8017644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801756e:	9403      	str	r4, [sp, #12]
 8017570:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8017574:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8017578:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801757c:	35a4      	adds	r5, #164	@ 0xa4
 801757e:	9301      	str	r3, [sp, #4]
 8017580:	b15c      	cbz	r4, 801759a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8017582:	4629      	mov	r1, r5
 8017584:	9803      	ldr	r0, [sp, #12]
 8017586:	f7ff fe29 	bl	80171dc <_ZNK8touchgfx4Rect8includesERKS0_>
 801758a:	3c01      	subs	r4, #1
 801758c:	b118      	cbz	r0, 8017596 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801758e:	b2a1      	uxth	r1, r4
 8017590:	9801      	ldr	r0, [sp, #4]
 8017592:	f7ff ffc3 	bl	801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017596:	3d08      	subs	r5, #8
 8017598:	e7f2      	b.n	8017580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801759a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801759e:	f8cd a010 	str.w	sl, [sp, #16]
 80175a2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80175a6:	9302      	str	r3, [sp, #8]
 80175a8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80175ac:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80175b0:	9306      	str	r3, [sp, #24]
 80175b2:	445c      	add	r4, fp
 80175b4:	2500      	movs	r5, #0
 80175b6:	4626      	mov	r6, r4
 80175b8:	f8cd a014 	str.w	sl, [sp, #20]
 80175bc:	462f      	mov	r7, r5
 80175be:	9b05      	ldr	r3, [sp, #20]
 80175c0:	2b00      	cmp	r3, #0
 80175c2:	d073      	beq.n	80176ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80175c4:	9903      	ldr	r1, [sp, #12]
 80175c6:	4630      	mov	r0, r6
 80175c8:	f7ff fd95 	bl	80170f6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80175cc:	b350      	cbz	r0, 8017624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80175ce:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80175d2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80175d6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80175da:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80175de:	45e6      	cmp	lr, ip
 80175e0:	db33      	blt.n	801764a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80175e2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80175e6:	88b3      	ldrh	r3, [r6, #4]
 80175e8:	4472      	add	r2, lr
 80175ea:	4463      	add	r3, ip
 80175ec:	b212      	sxth	r2, r2
 80175ee:	b21b      	sxth	r3, r3
 80175f0:	429a      	cmp	r2, r3
 80175f2:	dc2a      	bgt.n	801764a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80175f4:	88f3      	ldrh	r3, [r6, #6]
 80175f6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80175fa:	fa1f f289 	uxth.w	r2, r9
 80175fe:	4413      	add	r3, r2
 8017600:	b29b      	uxth	r3, r3
 8017602:	45c8      	cmp	r8, r9
 8017604:	fa1f fc88 	uxth.w	ip, r8
 8017608:	fa0f fe83 	sxth.w	lr, r3
 801760c:	db0f      	blt.n	801762e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801760e:	eba3 030c 	sub.w	r3, r3, ip
 8017612:	1ac9      	subs	r1, r1, r3
 8017614:	b209      	sxth	r1, r1
 8017616:	2900      	cmp	r1, #0
 8017618:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801761c:	dd12      	ble.n	8017644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801761e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8017622:	4605      	mov	r5, r0
 8017624:	9b05      	ldr	r3, [sp, #20]
 8017626:	3b01      	subs	r3, #1
 8017628:	9305      	str	r3, [sp, #20]
 801762a:	3e08      	subs	r6, #8
 801762c:	e7c7      	b.n	80175be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801762e:	4461      	add	r1, ip
 8017630:	b209      	sxth	r1, r1
 8017632:	4571      	cmp	r1, lr
 8017634:	dc38      	bgt.n	80176a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017636:	eba2 020c 	sub.w	r2, r2, ip
 801763a:	b212      	sxth	r2, r2
 801763c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017640:	2a00      	cmp	r2, #0
 8017642:	dcee      	bgt.n	8017622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017644:	b00f      	add	sp, #60	@ 0x3c
 8017646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801764a:	45c8      	cmp	r8, r9
 801764c:	db2c      	blt.n	80176a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801764e:	88f3      	ldrh	r3, [r6, #6]
 8017650:	4499      	add	r9, r3
 8017652:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8017656:	4498      	add	r8, r3
 8017658:	fa0f f989 	sxth.w	r9, r9
 801765c:	fa0f f888 	sxth.w	r8, r8
 8017660:	45c1      	cmp	r9, r8
 8017662:	db21      	blt.n	80176a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017664:	88b3      	ldrh	r3, [r6, #4]
 8017666:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801766a:	fa1f f28c 	uxth.w	r2, ip
 801766e:	4413      	add	r3, r2
 8017670:	b29b      	uxth	r3, r3
 8017672:	45e6      	cmp	lr, ip
 8017674:	fa1f f88e 	uxth.w	r8, lr
 8017678:	fa0f f983 	sxth.w	r9, r3
 801767c:	db0a      	blt.n	8017694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801767e:	eba3 0308 	sub.w	r3, r3, r8
 8017682:	1ac9      	subs	r1, r1, r3
 8017684:	b209      	sxth	r1, r1
 8017686:	2900      	cmp	r1, #0
 8017688:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 801768c:	ddda      	ble.n	8017644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801768e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8017692:	e7c6      	b.n	8017622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017694:	4441      	add	r1, r8
 8017696:	b209      	sxth	r1, r1
 8017698:	4549      	cmp	r1, r9
 801769a:	dc05      	bgt.n	80176a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801769c:	eba2 0208 	sub.w	r2, r2, r8
 80176a0:	b212      	sxth	r2, r2
 80176a2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80176a6:	e7cb      	b.n	8017640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80176a8:	4607      	mov	r7, r0
 80176aa:	e7bb      	b.n	8017624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80176ac:	2d00      	cmp	r5, #0
 80176ae:	d181      	bne.n	80175b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80176b0:	2f00      	cmp	r7, #0
 80176b2:	f000 81dd 	beq.w	8017a70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80176b6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80176ba:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80176be:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80176c2:	b2b3      	uxth	r3, r6
 80176c4:	9305      	str	r3, [sp, #20]
 80176c6:	9a05      	ldr	r2, [sp, #20]
 80176c8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80176cc:	4413      	add	r3, r2
 80176ce:	b2ba      	uxth	r2, r7
 80176d0:	4492      	add	sl, r2
 80176d2:	b29b      	uxth	r3, r3
 80176d4:	fa1f fa8a 	uxth.w	sl, sl
 80176d8:	fa0f f883 	sxth.w	r8, r3
 80176dc:	fa0f f98a 	sxth.w	r9, sl
 80176e0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80176e4:	9b04      	ldr	r3, [sp, #16]
 80176e6:	2b00      	cmp	r3, #0
 80176e8:	d052      	beq.n	8017790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80176ea:	9903      	ldr	r1, [sp, #12]
 80176ec:	4620      	mov	r0, r4
 80176ee:	f7ff fd02 	bl	80170f6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80176f2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80176f6:	b1c0      	cbz	r0, 801772a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80176f8:	f9b4 e000 	ldrsh.w	lr, [r4]
 80176fc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017700:	4576      	cmp	r6, lr
 8017702:	dc22      	bgt.n	801774a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017704:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017708:	44f4      	add	ip, lr
 801770a:	fa0f fc8c 	sxth.w	ip, ip
 801770e:	45e0      	cmp	r8, ip
 8017710:	db1b      	blt.n	801774a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017712:	428f      	cmp	r7, r1
 8017714:	fa1f fc81 	uxth.w	ip, r1
 8017718:	88e1      	ldrh	r1, [r4, #6]
 801771a:	dc0d      	bgt.n	8017738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801771c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8017720:	eba1 010c 	sub.w	r1, r1, ip
 8017724:	f8a4 9002 	strh.w	r9, [r4, #2]
 8017728:	80e1      	strh	r1, [r4, #6]
 801772a:	4628      	mov	r0, r5
 801772c:	9904      	ldr	r1, [sp, #16]
 801772e:	3901      	subs	r1, #1
 8017730:	9104      	str	r1, [sp, #16]
 8017732:	3c08      	subs	r4, #8
 8017734:	4605      	mov	r5, r0
 8017736:	e7d3      	b.n	80176e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8017738:	4461      	add	r1, ip
 801773a:	b209      	sxth	r1, r1
 801773c:	4549      	cmp	r1, r9
 801773e:	dcf5      	bgt.n	801772c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017740:	eba2 0c0c 	sub.w	ip, r2, ip
 8017744:	f8a4 c006 	strh.w	ip, [r4, #6]
 8017748:	e7ef      	b.n	801772a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801774a:	428f      	cmp	r7, r1
 801774c:	dcee      	bgt.n	801772c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801774e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8017752:	4461      	add	r1, ip
 8017754:	b209      	sxth	r1, r1
 8017756:	4589      	cmp	r9, r1
 8017758:	dbe8      	blt.n	801772c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801775a:	4576      	cmp	r6, lr
 801775c:	fa1f fc8e 	uxth.w	ip, lr
 8017760:	88a1      	ldrh	r1, [r4, #4]
 8017762:	dc07      	bgt.n	8017774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8017764:	eba3 0c0c 	sub.w	ip, r3, ip
 8017768:	eba1 010c 	sub.w	r1, r1, ip
 801776c:	f8a4 8000 	strh.w	r8, [r4]
 8017770:	80a1      	strh	r1, [r4, #4]
 8017772:	e7da      	b.n	801772a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017774:	4461      	add	r1, ip
 8017776:	b209      	sxth	r1, r1
 8017778:	4588      	cmp	r8, r1
 801777a:	dbd7      	blt.n	801772c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801777c:	9905      	ldr	r1, [sp, #20]
 801777e:	eba1 0c0c 	sub.w	ip, r1, ip
 8017782:	f8a4 c004 	strh.w	ip, [r4, #4]
 8017786:	e7d0      	b.n	801772a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017788:	20013f56 	.word	0x20013f56
 801778c:	20013f54 	.word	0x20013f54
 8017790:	2d00      	cmp	r5, #0
 8017792:	f000 816d 	beq.w	8017a70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017796:	9b06      	ldr	r3, [sp, #24]
 8017798:	445b      	add	r3, fp
 801779a:	461c      	mov	r4, r3
 801779c:	9b02      	ldr	r3, [sp, #8]
 801779e:	3301      	adds	r3, #1
 80177a0:	f000 8166 	beq.w	8017a70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80177a4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80177a8:	4629      	mov	r1, r5
 80177aa:	9803      	ldr	r0, [sp, #12]
 80177ac:	f7ff fd16 	bl	80171dc <_ZNK8touchgfx4Rect8includesERKS0_>
 80177b0:	b120      	cbz	r0, 80177bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80177b2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80177b6:	9801      	ldr	r0, [sp, #4]
 80177b8:	f7ff feb0 	bl	801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80177bc:	9903      	ldr	r1, [sp, #12]
 80177be:	4628      	mov	r0, r5
 80177c0:	f7ff fc99 	bl	80170f6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80177c4:	2800      	cmp	r0, #0
 80177c6:	f000 809c 	beq.w	8017902 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80177ca:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80177ce:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80177d2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80177d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80177d8:	fa1f f189 	uxth.w	r1, r9
 80177dc:	eb01 0c03 	add.w	ip, r1, r3
 80177e0:	fa1f fa8c 	uxth.w	sl, ip
 80177e4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80177e8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 80177ec:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 80177f0:	b283      	uxth	r3, r0
 80177f2:	eb03 050c 	add.w	r5, r3, ip
 80177f6:	b2ad      	uxth	r5, r5
 80177f8:	9505      	str	r5, [sp, #20]
 80177fa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80177fe:	9504      	str	r5, [sp, #16]
 8017800:	4548      	cmp	r0, r9
 8017802:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8017806:	f340 8099 	ble.w	801793c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801780a:	1a5b      	subs	r3, r3, r1
 801780c:	b29b      	uxth	r3, r3
 801780e:	4596      	cmp	lr, r2
 8017810:	fa0f f08a 	sxth.w	r0, sl
 8017814:	b21e      	sxth	r6, r3
 8017816:	dd2e      	ble.n	8017876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8017818:	9f02      	ldr	r7, [sp, #8]
 801781a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801781e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8017822:	9f04      	ldr	r7, [sp, #16]
 8017824:	1a3f      	subs	r7, r7, r0
 8017826:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801782a:	fa1f fe8e 	uxth.w	lr, lr
 801782e:	b292      	uxth	r2, r2
 8017830:	ebae 0102 	sub.w	r1, lr, r2
 8017834:	44a6      	add	lr, r4
 8017836:	4402      	add	r2, r0
 8017838:	b289      	uxth	r1, r1
 801783a:	fa0f fe8e 	sxth.w	lr, lr
 801783e:	b212      	sxth	r2, r2
 8017840:	b20d      	sxth	r5, r1
 8017842:	ebae 0202 	sub.w	r2, lr, r2
 8017846:	436f      	muls	r7, r5
 8017848:	4372      	muls	r2, r6
 801784a:	4297      	cmp	r7, r2
 801784c:	db09      	blt.n	8017862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801784e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8017852:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8017856:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801785a:	449c      	add	ip, r3
 801785c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8017860:	e686      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017862:	4421      	add	r1, r4
 8017864:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8017868:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 801786c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8017870:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017874:	e67c      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017876:	9f04      	ldr	r7, [sp, #16]
 8017878:	42b8      	cmp	r0, r7
 801787a:	da27      	bge.n	80178cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801787c:	9902      	ldr	r1, [sp, #8]
 801787e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8017882:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8017886:	eb05 010e 	add.w	r1, r5, lr
 801788a:	fa1f f881 	uxth.w	r8, r1
 801788e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8017892:	4411      	add	r1, r2
 8017894:	eba1 0108 	sub.w	r1, r1, r8
 8017898:	b289      	uxth	r1, r1
 801789a:	fa0f f988 	sxth.w	r9, r8
 801789e:	eba2 020e 	sub.w	r2, r2, lr
 80178a2:	fa0f f881 	sxth.w	r8, r1
 80178a6:	1a3f      	subs	r7, r7, r0
 80178a8:	4372      	muls	r2, r6
 80178aa:	fb08 f707 	mul.w	r7, r8, r7
 80178ae:	42ba      	cmp	r2, r7
 80178b0:	dc06      	bgt.n	80178c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80178b2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80178b6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80178ba:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80178be:	e7ca      	b.n	8017856 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80178c0:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80178c4:	4429      	add	r1, r5
 80178c6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80178ca:	e651      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80178cc:	9805      	ldr	r0, [sp, #20]
 80178ce:	ebaa 0000 	sub.w	r0, sl, r0
 80178d2:	b280      	uxth	r0, r0
 80178d4:	2d06      	cmp	r5, #6
 80178d6:	fa0f fe80 	sxth.w	lr, r0
 80178da:	d817      	bhi.n	801790c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80178dc:	9b04      	ldr	r3, [sp, #16]
 80178de:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80178e2:	1c6b      	adds	r3, r5, #1
 80178e4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80178e8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 80178ec:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80178f0:	9b01      	ldr	r3, [sp, #4]
 80178f2:	9801      	ldr	r0, [sp, #4]
 80178f4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80178f8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80178fc:	805a      	strh	r2, [r3, #2]
 80178fe:	809e      	strh	r6, [r3, #4]
 8017900:	80d9      	strh	r1, [r3, #6]
 8017902:	9b02      	ldr	r3, [sp, #8]
 8017904:	3b01      	subs	r3, #1
 8017906:	9302      	str	r3, [sp, #8]
 8017908:	3c08      	subs	r4, #8
 801790a:	e747      	b.n	801779c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801790c:	9a02      	ldr	r2, [sp, #8]
 801790e:	45b6      	cmp	lr, r6
 8017910:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017914:	db0d      	blt.n	8017932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8017916:	449c      	add	ip, r3
 8017918:	fa1f fc8c 	uxth.w	ip, ip
 801791c:	445a      	add	r2, fp
 801791e:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8017922:	448c      	add	ip, r1
 8017924:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8017928:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 801792c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8017930:	e61e      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017932:	445a      	add	r2, fp
 8017934:	4484      	add	ip, r0
 8017936:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801793a:	e78f      	b.n	801785c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801793c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8017940:	fa1f f18e 	uxth.w	r1, lr
 8017944:	eb01 0806 	add.w	r8, r1, r6
 8017948:	b293      	uxth	r3, r2
 801794a:	fa1f f888 	uxth.w	r8, r8
 801794e:	9306      	str	r3, [sp, #24]
 8017950:	fa0f f388 	sxth.w	r3, r8
 8017954:	9307      	str	r3, [sp, #28]
 8017956:	9f06      	ldr	r7, [sp, #24]
 8017958:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801795c:	443b      	add	r3, r7
 801795e:	b29b      	uxth	r3, r3
 8017960:	4596      	cmp	lr, r2
 8017962:	9308      	str	r3, [sp, #32]
 8017964:	da24      	bge.n	80179b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8017966:	9905      	ldr	r1, [sp, #20]
 8017968:	eba3 0308 	sub.w	r3, r3, r8
 801796c:	ebaa 0401 	sub.w	r4, sl, r1
 8017970:	b2a4      	uxth	r4, r4
 8017972:	b29b      	uxth	r3, r3
 8017974:	b225      	sxth	r5, r4
 8017976:	b219      	sxth	r1, r3
 8017978:	eba2 020e 	sub.w	r2, r2, lr
 801797c:	eba9 0000 	sub.w	r0, r9, r0
 8017980:	436a      	muls	r2, r5
 8017982:	4348      	muls	r0, r1
 8017984:	4282      	cmp	r2, r0
 8017986:	9a02      	ldr	r2, [sp, #8]
 8017988:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801798c:	445a      	add	r2, fp
 801798e:	dc06      	bgt.n	801799e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8017990:	9b07      	ldr	r3, [sp, #28]
 8017992:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8017996:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 801799a:	44a4      	add	ip, r4
 801799c:	e75e      	b.n	801785c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801799e:	9904      	ldr	r1, [sp, #16]
 80179a0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80179a4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80179a8:	4433      	add	r3, r6
 80179aa:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80179ae:	e5df      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80179b0:	9f06      	ldr	r7, [sp, #24]
 80179b2:	9b04      	ldr	r3, [sp, #16]
 80179b4:	1bc9      	subs	r1, r1, r7
 80179b6:	fa0f f78a 	sxth.w	r7, sl
 80179ba:	b289      	uxth	r1, r1
 80179bc:	429f      	cmp	r7, r3
 80179be:	fa0f fe81 	sxth.w	lr, r1
 80179c2:	dd23      	ble.n	8017a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80179c4:	9a05      	ldr	r2, [sp, #20]
 80179c6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80179ca:	9d07      	ldr	r5, [sp, #28]
 80179cc:	ebaa 0202 	sub.w	r2, sl, r2
 80179d0:	b292      	uxth	r2, r2
 80179d2:	eba5 0a03 	sub.w	sl, r5, r3
 80179d6:	b214      	sxth	r4, r2
 80179d8:	eba9 0000 	sub.w	r0, r9, r0
 80179dc:	9b02      	ldr	r3, [sp, #8]
 80179de:	fb0e f000 	mul.w	r0, lr, r0
 80179e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80179e6:	00db      	lsls	r3, r3, #3
 80179e8:	4550      	cmp	r0, sl
 80179ea:	445b      	add	r3, fp
 80179ec:	db03      	blt.n	80179f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80179ee:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 80179f2:	4494      	add	ip, r2
 80179f4:	e732      	b.n	801785c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80179f6:	9a04      	ldr	r2, [sp, #16]
 80179f8:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 80179fc:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8017a00:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8017a04:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017a08:	4431      	add	r1, r6
 8017a0a:	e75c      	b.n	80178c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8017a0c:	9b08      	ldr	r3, [sp, #32]
 8017a0e:	eba3 0308 	sub.w	r3, r3, r8
 8017a12:	b29b      	uxth	r3, r3
 8017a14:	2d06      	cmp	r5, #6
 8017a16:	b218      	sxth	r0, r3
 8017a18:	d813      	bhi.n	8017a42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8017a1a:	9b07      	ldr	r3, [sp, #28]
 8017a1c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8017a20:	1c6b      	adds	r3, r5, #1
 8017a22:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8017a26:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8017a2a:	9b01      	ldr	r3, [sp, #4]
 8017a2c:	9901      	ldr	r1, [sp, #4]
 8017a2e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017a32:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8017a36:	805a      	strh	r2, [r3, #2]
 8017a38:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017a3a:	809a      	strh	r2, [r3, #4]
 8017a3c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8017a40:	e75f      	b.n	8017902 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8017a42:	9c02      	ldr	r4, [sp, #8]
 8017a44:	4570      	cmp	r0, lr
 8017a46:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8017a4a:	db0d      	blt.n	8017a68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8017a4c:	4431      	add	r1, r6
 8017a4e:	9b06      	ldr	r3, [sp, #24]
 8017a50:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017a54:	b289      	uxth	r1, r1
 8017a56:	445c      	add	r4, fp
 8017a58:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8017a5c:	4419      	add	r1, r3
 8017a5e:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8017a62:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8017a66:	e583      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017a68:	445c      	add	r4, fp
 8017a6a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8017a6e:	e79b      	b.n	80179a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017a70:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8017a74:	1e65      	subs	r5, r4, #1
 8017a76:	b2ad      	uxth	r5, r5
 8017a78:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8017a7c:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8017a80:	42b5      	cmp	r5, r6
 8017a82:	d044      	beq.n	8017b0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017a84:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017a88:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8017a8c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8017a90:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8017a94:	4282      	cmp	r2, r0
 8017a96:	d11f      	bne.n	8017ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017a98:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8017a9c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8017aa0:	459c      	cmp	ip, r3
 8017aa2:	d119      	bne.n	8017ad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017aa4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8017aa8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8017aac:	19d8      	adds	r0, r3, r7
 8017aae:	b200      	sxth	r0, r0
 8017ab0:	4288      	cmp	r0, r1
 8017ab2:	d109      	bne.n	8017ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017ab4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8017ab8:	4413      	add	r3, r2
 8017aba:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017abe:	4629      	mov	r1, r5
 8017ac0:	9801      	ldr	r0, [sp, #4]
 8017ac2:	f7ff fd2b 	bl	801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017ac6:	e003      	b.n	8017ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017ac8:	4411      	add	r1, r2
 8017aca:	b209      	sxth	r1, r1
 8017acc:	42b9      	cmp	r1, r7
 8017ace:	d0f3      	beq.n	8017ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017ad0:	3d01      	subs	r5, #1
 8017ad2:	b2ad      	uxth	r5, r5
 8017ad4:	3c08      	subs	r4, #8
 8017ad6:	e7d3      	b.n	8017a80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017ad8:	42b9      	cmp	r1, r7
 8017ada:	d1f9      	bne.n	8017ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017adc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8017ae0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8017ae4:	4299      	cmp	r1, r3
 8017ae6:	d1f3      	bne.n	8017ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017ae8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8017aec:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8017af0:	181f      	adds	r7, r3, r0
 8017af2:	b23f      	sxth	r7, r7
 8017af4:	42ba      	cmp	r2, r7
 8017af6:	d105      	bne.n	8017b04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8017af8:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8017afc:	440b      	add	r3, r1
 8017afe:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8017b02:	e7dc      	b.n	8017abe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8017b04:	440a      	add	r2, r1
 8017b06:	b212      	sxth	r2, r2
 8017b08:	4290      	cmp	r0, r2
 8017b0a:	d1e1      	bne.n	8017ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017b0c:	e7f6      	b.n	8017afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8017b0e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8017b12:	2e07      	cmp	r6, #7
 8017b14:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8017b18:	d812      	bhi.n	8017b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8017b1a:	1c75      	adds	r5, r6, #1
 8017b1c:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8017b20:	9d01      	ldr	r5, [sp, #4]
 8017b22:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8017b26:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8017b2a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017b2e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8017b32:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8017b36:	442c      	add	r4, r5
 8017b38:	8061      	strh	r1, [r4, #2]
 8017b3a:	80a2      	strh	r2, [r4, #4]
 8017b3c:	80e3      	strh	r3, [r4, #6]
 8017b3e:	e581      	b.n	8017644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017b40:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8017b44:	3e01      	subs	r6, #1
 8017b46:	445c      	add	r4, fp
 8017b48:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8017b4c:	f04f 37ff 	mov.w	r7, #4294967295
 8017b50:	2500      	movs	r5, #0
 8017b52:	9305      	str	r3, [sp, #20]
 8017b54:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8017b58:	9302      	str	r3, [sp, #8]
 8017b5a:	1e72      	subs	r2, r6, #1
 8017b5c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8017b60:	9304      	str	r3, [sp, #16]
 8017b62:	4691      	mov	r9, r2
 8017b64:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8017b68:	f1b9 3fff 	cmp.w	r9, #4294967295
 8017b6c:	bf14      	ite	ne
 8017b6e:	9905      	ldrne	r1, [sp, #20]
 8017b70:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017b74:	6818      	ldr	r0, [r3, #0]
 8017b76:	9207      	str	r2, [sp, #28]
 8017b78:	bf18      	it	ne
 8017b7a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8017b7e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8017b82:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017b86:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8017b8a:	9306      	str	r3, [sp, #24]
 8017b8c:	fb18 f801 	smulbb	r8, r8, r1
 8017b90:	6859      	ldr	r1, [r3, #4]
 8017b92:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017b96:	4671      	mov	r1, lr
 8017b98:	a80c      	add	r0, sp, #48	@ 0x30
 8017b9a:	f7ff fb45 	bl	8017228 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017b9e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8017ba2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8017ba6:	9b04      	ldr	r3, [sp, #16]
 8017ba8:	9a02      	ldr	r2, [sp, #8]
 8017baa:	fb10 f001 	smulbb	r0, r0, r1
 8017bae:	fb02 8803 	mla	r8, r2, r3, r8
 8017bb2:	eba0 0108 	sub.w	r1, r0, r8
 8017bb6:	f04f 0c08 	mov.w	ip, #8
 8017bba:	fb90 f0fc 	sdiv	r0, r0, ip
 8017bbe:	4288      	cmp	r0, r1
 8017bc0:	dc20      	bgt.n	8017c04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017bc2:	4551      	cmp	r1, sl
 8017bc4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017bc8:	da03      	bge.n	8017bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8017bca:	b1d9      	cbz	r1, 8017c04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017bcc:	468a      	mov	sl, r1
 8017bce:	464f      	mov	r7, r9
 8017bd0:	4635      	mov	r5, r6
 8017bd2:	f109 39ff 	add.w	r9, r9, #4294967295
 8017bd6:	f119 0f02 	cmn.w	r9, #2
 8017bda:	d1c5      	bne.n	8017b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8017bdc:	4616      	mov	r6, r2
 8017bde:	3201      	adds	r2, #1
 8017be0:	f1a4 0408 	sub.w	r4, r4, #8
 8017be4:	d1b6      	bne.n	8017b54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017be6:	9b01      	ldr	r3, [sp, #4]
 8017be8:	b2ac      	uxth	r4, r5
 8017bea:	00ed      	lsls	r5, r5, #3
 8017bec:	1958      	adds	r0, r3, r5
 8017bee:	1c7b      	adds	r3, r7, #1
 8017bf0:	d10b      	bne.n	8017c0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8017bf2:	4601      	mov	r1, r0
 8017bf4:	9803      	ldr	r0, [sp, #12]
 8017bf6:	f7ff fb17 	bl	8017228 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017bfa:	4621      	mov	r1, r4
 8017bfc:	9801      	ldr	r0, [sp, #4]
 8017bfe:	f7ff fc8d 	bl	801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017c02:	e4b5      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017c04:	464f      	mov	r7, r9
 8017c06:	4635      	mov	r5, r6
 8017c08:	e7ed      	b.n	8017be6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8017c0a:	9b01      	ldr	r3, [sp, #4]
 8017c0c:	00ff      	lsls	r7, r7, #3
 8017c0e:	19d9      	adds	r1, r3, r7
 8017c10:	f7ff fb0a 	bl	8017228 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017c14:	9b03      	ldr	r3, [sp, #12]
 8017c16:	cb03      	ldmia	r3!, {r0, r1}
 8017c18:	445f      	add	r7, fp
 8017c1a:	445d      	add	r5, fp
 8017c1c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8017c20:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8017c24:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8017c28:	9b03      	ldr	r3, [sp, #12]
 8017c2a:	6869      	ldr	r1, [r5, #4]
 8017c2c:	c303      	stmia	r3!, {r0, r1}
 8017c2e:	e7e4      	b.n	8017bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08017c30 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8017c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c34:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8017c38:	b09b      	sub	sp, #108	@ 0x6c
 8017c3a:	4604      	mov	r4, r0
 8017c3c:	4630      	mov	r0, r6
 8017c3e:	f7f8 fc78 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c42:	4605      	mov	r5, r0
 8017c44:	b948      	cbnz	r0, 8017c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8017c46:	6823      	ldr	r3, [r4, #0]
 8017c48:	e896 0006 	ldmia.w	r6, {r1, r2}
 8017c4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c4e:	4620      	mov	r0, r4
 8017c50:	4798      	blx	r3
 8017c52:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8017c56:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8017c5a:	4bc6      	ldr	r3, [pc, #792]	@ (8017f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8017c5c:	681b      	ldr	r3, [r3, #0]
 8017c5e:	2b00      	cmp	r3, #0
 8017c60:	d03f      	beq.n	8017ce2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017c62:	4dc5      	ldr	r5, [pc, #788]	@ (8017f78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017c64:	4628      	mov	r0, r5
 8017c66:	f7f8 fc64 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c6a:	4606      	mov	r6, r0
 8017c6c:	2800      	cmp	r0, #0
 8017c6e:	d138      	bne.n	8017ce2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017c70:	4628      	mov	r0, r5
 8017c72:	f7ff f96d 	bl	8016f50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017c76:	6823      	ldr	r3, [r4, #0]
 8017c78:	6829      	ldr	r1, [r5, #0]
 8017c7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c7c:	686a      	ldr	r2, [r5, #4]
 8017c7e:	4620      	mov	r0, r4
 8017c80:	4798      	blx	r3
 8017c82:	802e      	strh	r6, [r5, #0]
 8017c84:	806e      	strh	r6, [r5, #2]
 8017c86:	80ae      	strh	r6, [r5, #4]
 8017c88:	80ee      	strh	r6, [r5, #6]
 8017c8a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8017c8e:	4dbb      	ldr	r5, [pc, #748]	@ (8017f7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017c90:	4640      	mov	r0, r8
 8017c92:	f7ff fbeb 	bl	801746c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017c96:	882e      	ldrh	r6, [r5, #0]
 8017c98:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8017c9c:	4633      	mov	r3, r6
 8017c9e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8017ca2:	42bb      	cmp	r3, r7
 8017ca4:	d224      	bcs.n	8017cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017ca6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8017caa:	2907      	cmp	r1, #7
 8017cac:	d816      	bhi.n	8017cdc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8017cae:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017cb2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017cb6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8017cba:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8017cbe:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017cc2:	1c4a      	adds	r2, r1, #1
 8017cc4:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8017cc8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8017ccc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017cd0:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017cd4:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017cd8:	f8a2 c006 	strh.w	ip, [r2, #6]
 8017cdc:	3301      	adds	r3, #1
 8017cde:	b29b      	uxth	r3, r3
 8017ce0:	e7df      	b.n	8017ca2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017ce2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8017ce6:	2b00      	cmp	r3, #0
 8017ce8:	d1cf      	bne.n	8017c8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8017cea:	b01b      	add	sp, #108	@ 0x6c
 8017cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cf0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8017cf4:	42b3      	cmp	r3, r6
 8017cf6:	d90c      	bls.n	8017d12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8017cf8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8017cfc:	6822      	ldr	r2, [r4, #0]
 8017cfe:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8017d02:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8017d04:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8017d08:	4620      	mov	r0, r4
 8017d0a:	3601      	adds	r6, #1
 8017d0c:	47b8      	blx	r7
 8017d0e:	b2b6      	uxth	r6, r6
 8017d10:	e7ee      	b.n	8017cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017d12:	4a9b      	ldr	r2, [pc, #620]	@ (8017f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017d14:	6813      	ldr	r3, [r2, #0]
 8017d16:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8017d1a:	2b01      	cmp	r3, #1
 8017d1c:	4691      	mov	r9, r2
 8017d1e:	f040 80e2 	bne.w	8017ee6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8017d22:	8829      	ldrh	r1, [r5, #0]
 8017d24:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8017d28:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8017d2c:	33ae      	adds	r3, #174	@ 0xae
 8017d2e:	2600      	movs	r6, #0
 8017d30:	428f      	cmp	r7, r1
 8017d32:	f103 0308 	add.w	r3, r3, #8
 8017d36:	dd0a      	ble.n	8017d4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8017d38:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8017d3c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8017d40:	4402      	add	r2, r0
 8017d42:	b212      	sxth	r2, r2
 8017d44:	4296      	cmp	r6, r2
 8017d46:	bfb8      	it	lt
 8017d48:	4616      	movlt	r6, r2
 8017d4a:	3101      	adds	r1, #1
 8017d4c:	e7f0      	b.n	8017d30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8017d4e:	4b8d      	ldr	r3, [pc, #564]	@ (8017f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017d50:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8017f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8017d54:	881b      	ldrh	r3, [r3, #0]
 8017d56:	2b0f      	cmp	r3, #15
 8017d58:	bf88      	it	hi
 8017d5a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8017d5e:	f04f 0300 	mov.w	r3, #0
 8017d62:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017d66:	bf98      	it	ls
 8017d68:	f04f 0b01 	movls.w	fp, #1
 8017d6c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017d70:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017d74:	4b82      	ldr	r3, [pc, #520]	@ (8017f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017d76:	4438      	add	r0, r7
 8017d78:	b207      	sxth	r7, r0
 8017d7a:	6818      	ldr	r0, [r3, #0]
 8017d7c:	42b7      	cmp	r7, r6
 8017d7e:	6803      	ldr	r3, [r0, #0]
 8017d80:	f280 8083 	bge.w	8017e8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017d84:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8017d88:	4798      	blx	r3
 8017d8a:	eb07 030b 	add.w	r3, r7, fp
 8017d8e:	4298      	cmp	r0, r3
 8017d90:	da07      	bge.n	8017da2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017d92:	42b0      	cmp	r0, r6
 8017d94:	da05      	bge.n	8017da2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017d96:	4287      	cmp	r7, r0
 8017d98:	dd6c      	ble.n	8017e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8017d9a:	2f00      	cmp	r7, #0
 8017d9c:	dd6a      	ble.n	8017e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8017d9e:	4630      	mov	r0, r6
 8017da0:	e004      	b.n	8017dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017da2:	4287      	cmp	r7, r0
 8017da4:	dcfb      	bgt.n	8017d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017da6:	42b0      	cmp	r0, r6
 8017da8:	bfa8      	it	ge
 8017daa:	4630      	movge	r0, r6
 8017dac:	4b76      	ldr	r3, [pc, #472]	@ (8017f88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8017dae:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017db2:	1bc0      	subs	r0, r0, r7
 8017db4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017db8:	882f      	ldrh	r7, [r5, #0]
 8017dba:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017dbe:	2200      	movs	r2, #0
 8017dc0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017dc4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017dc8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8017dcc:	42bb      	cmp	r3, r7
 8017dce:	d9cd      	bls.n	8017d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017dd0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017dd4:	ab07      	add	r3, sp, #28
 8017dd6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017dda:	6851      	ldr	r1, [r2, #4]
 8017ddc:	c303      	stmia	r3!, {r0, r1}
 8017dde:	a905      	add	r1, sp, #20
 8017de0:	a807      	add	r0, sp, #28
 8017de2:	f7ff f988 	bl	80170f6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017de6:	2800      	cmp	r0, #0
 8017de8:	d04c      	beq.n	8017e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8017dea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8017dee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017df2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8017df6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8017dfa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017dfe:	9302      	str	r3, [sp, #8]
 8017e00:	4686      	mov	lr, r0
 8017e02:	4290      	cmp	r0, r2
 8017e04:	4450      	add	r0, sl
 8017e06:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8017e0a:	bfb8      	it	lt
 8017e0c:	4696      	movlt	lr, r2
 8017e0e:	4452      	add	r2, sl
 8017e10:	4299      	cmp	r1, r3
 8017e12:	b280      	uxth	r0, r0
 8017e14:	b292      	uxth	r2, r2
 8017e16:	468c      	mov	ip, r1
 8017e18:	fa0f fa82 	sxth.w	sl, r2
 8017e1c:	bfb8      	it	lt
 8017e1e:	469c      	movlt	ip, r3
 8017e20:	b203      	sxth	r3, r0
 8017e22:	4553      	cmp	r3, sl
 8017e24:	bfb8      	it	lt
 8017e26:	4602      	movlt	r2, r0
 8017e28:	eba2 020e 	sub.w	r2, r2, lr
 8017e2c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017e30:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017e34:	9b02      	ldr	r3, [sp, #8]
 8017e36:	f8ad e01c 	strh.w	lr, [sp, #28]
 8017e3a:	4411      	add	r1, r2
 8017e3c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017e40:	f8ad c01e 	strh.w	ip, [sp, #30]
 8017e44:	4413      	add	r3, r2
 8017e46:	b289      	uxth	r1, r1
 8017e48:	b29b      	uxth	r3, r3
 8017e4a:	b208      	sxth	r0, r1
 8017e4c:	b21a      	sxth	r2, r3
 8017e4e:	4290      	cmp	r0, r2
 8017e50:	bfb8      	it	lt
 8017e52:	460b      	movlt	r3, r1
 8017e54:	eba3 030c 	sub.w	r3, r3, ip
 8017e58:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8017e5c:	a807      	add	r0, sp, #28
 8017e5e:	f7f8 fb68 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017e62:	b920      	cbnz	r0, 8017e6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017e64:	6823      	ldr	r3, [r4, #0]
 8017e66:	a907      	add	r1, sp, #28
 8017e68:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017e6a:	4620      	mov	r0, r4
 8017e6c:	4798      	blx	r3
 8017e6e:	3701      	adds	r7, #1
 8017e70:	b2bf      	uxth	r7, r7
 8017e72:	e7a9      	b.n	8017dc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017e74:	f8d9 0000 	ldr.w	r0, [r9]
 8017e78:	6803      	ldr	r3, [r0, #0]
 8017e7a:	2101      	movs	r1, #1
 8017e7c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8017e80:	4798      	blx	r3
 8017e82:	e773      	b.n	8017d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017e84:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017e88:	e7e8      	b.n	8017e5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8017e8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017e8c:	4798      	blx	r3
 8017e8e:	4b3f      	ldr	r3, [pc, #252]	@ (8017f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017e90:	781b      	ldrb	r3, [r3, #0]
 8017e92:	2b00      	cmp	r3, #0
 8017e94:	f43f af29 	beq.w	8017cea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017e98:	2300      	movs	r3, #0
 8017e9a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8017e9e:	882b      	ldrh	r3, [r5, #0]
 8017ea0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8017ea4:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8017ea8:	42ab      	cmp	r3, r5
 8017eaa:	f4bf af1e 	bcs.w	8017cea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017eae:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8017eb2:	2907      	cmp	r1, #7
 8017eb4:	d814      	bhi.n	8017ee0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017eb6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8017eba:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8017ebe:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017ec2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017ec6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8017eca:	1c4a      	adds	r2, r1, #1
 8017ecc:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8017ed0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017ed4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017ed8:	f8a2 c002 	strh.w	ip, [r2, #2]
 8017edc:	8097      	strh	r7, [r2, #4]
 8017ede:	80d6      	strh	r6, [r2, #6]
 8017ee0:	3301      	adds	r3, #1
 8017ee2:	b29b      	uxth	r3, r3
 8017ee4:	e7e0      	b.n	8017ea8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017ee6:	2b02      	cmp	r3, #2
 8017ee8:	f040 8133 	bne.w	8018152 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8017eec:	4b28      	ldr	r3, [pc, #160]	@ (8017f90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8017eee:	781b      	ldrb	r3, [r3, #0]
 8017ef0:	2b01      	cmp	r3, #1
 8017ef2:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8017ef6:	f000 8098 	beq.w	801802a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017efa:	882a      	ldrh	r2, [r5, #0]
 8017efc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8017f00:	3201      	adds	r2, #1
 8017f02:	b292      	uxth	r2, r2
 8017f04:	2900      	cmp	r1, #0
 8017f06:	d0c2      	beq.n	8017e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017f08:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8017f0c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8017f10:	441e      	add	r6, r3
 8017f12:	b236      	sxth	r6, r6
 8017f14:	4694      	mov	ip, r2
 8017f16:	f04f 0900 	mov.w	r9, #0
 8017f1a:	fa1f f38c 	uxth.w	r3, ip
 8017f1e:	4299      	cmp	r1, r3
 8017f20:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8017f24:	f240 80bf 	bls.w	80180a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8017f28:	4427      	add	r7, r4
 8017f2a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8017f2e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8017f32:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8017f36:	4283      	cmp	r3, r0
 8017f38:	f340 80a1 	ble.w	801807e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8017f3c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8017f40:	4406      	add	r6, r0
 8017f42:	b236      	sxth	r6, r6
 8017f44:	429e      	cmp	r6, r3
 8017f46:	bfa8      	it	ge
 8017f48:	461e      	movge	r6, r3
 8017f4a:	46e1      	mov	r9, ip
 8017f4c:	f10c 0c01 	add.w	ip, ip, #1
 8017f50:	e7e3      	b.n	8017f1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8017f52:	d10a      	bne.n	8017f6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017f54:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8017f58:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8017f5c:	4562      	cmp	r2, ip
 8017f5e:	bfb8      	it	lt
 8017f60:	4662      	movlt	r2, ip
 8017f62:	4288      	cmp	r0, r1
 8017f64:	bfb8      	it	lt
 8017f66:	461f      	movlt	r7, r3
 8017f68:	e087      	b.n	801807a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017f6a:	428a      	cmp	r2, r1
 8017f6c:	bfb8      	it	lt
 8017f6e:	460a      	movlt	r2, r1
 8017f70:	e083      	b.n	801807a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017f72:	bf00      	nop
 8017f74:	20013fa0 	.word	0x20013fa0
 8017f78:	20013fac 	.word	0x20013fac
 8017f7c:	20000084 	.word	0x20000084
 8017f80:	20013f60 	.word	0x20013f60
 8017f84:	20013f56 	.word	0x20013f56
 8017f88:	20013f54 	.word	0x20013f54
 8017f8c:	20013f5e 	.word	0x20013f5e
 8017f90:	20013f58 	.word	0x20013f58
 8017f94:	19a1      	adds	r1, r4, r6
 8017f96:	ab07      	add	r3, sp, #28
 8017f98:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017f9c:	6849      	ldr	r1, [r1, #4]
 8017f9e:	c303      	stmia	r3!, {r0, r1}
 8017fa0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017fa4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017fa8:	2b13      	cmp	r3, #19
 8017faa:	bfd8      	it	le
 8017fac:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017fb0:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017fb4:	440b      	add	r3, r1
 8017fb6:	1a9b      	subs	r3, r3, r2
 8017fb8:	a807      	add	r0, sp, #28
 8017fba:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017fbe:	f7fe ffe1 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017fc2:	a807      	add	r0, sp, #28
 8017fc4:	f7f8 fab5 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017fc8:	bb78      	cbnz	r0, 801802a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017fca:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8017fce:	f8d9 0000 	ldr.w	r0, [r9]
 8017fd2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017fd6:	f8d0 e000 	ldr.w	lr, [r0]
 8017fda:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8017fde:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017fe2:	f1bc 0f14 	cmp.w	ip, #20
 8017fe6:	bfa8      	it	ge
 8017fe8:	f04f 0c14 	movge.w	ip, #20
 8017fec:	fa1f fc8c 	uxth.w	ip, ip
 8017ff0:	f8cd c000 	str.w	ip, [sp]
 8017ff4:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8017ff8:	47d8      	blx	fp
 8017ffa:	4683      	mov	fp, r0
 8017ffc:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8018000:	a807      	add	r0, sp, #28
 8018002:	f7fe ffa5 	bl	8016f50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8018006:	6823      	ldr	r3, [r4, #0]
 8018008:	4426      	add	r6, r4
 801800a:	4620      	mov	r0, r4
 801800c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801800e:	a907      	add	r1, sp, #28
 8018010:	4798      	blx	r3
 8018012:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8018016:	eba0 000b 	sub.w	r0, r0, fp
 801801a:	b200      	sxth	r0, r0
 801801c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8018020:	b918      	cbnz	r0, 801802a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8018022:	b2b9      	uxth	r1, r7
 8018024:	4650      	mov	r0, sl
 8018026:	f7ff fa79 	bl	801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801802a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801802e:	f1bb 0f00 	cmp.w	fp, #0
 8018032:	f43f af2c 	beq.w	8017e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8018036:	882b      	ldrh	r3, [r5, #0]
 8018038:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801803c:	3301      	adds	r3, #1
 801803e:	b29b      	uxth	r3, r3
 8018040:	2700      	movs	r7, #0
 8018042:	b299      	uxth	r1, r3
 8018044:	458b      	cmp	fp, r1
 8018046:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801804a:	d9a3      	bls.n	8017f94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801804c:	4426      	add	r6, r4
 801804e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8018052:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8018056:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 801805a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801805e:	4408      	add	r0, r1
 8018060:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8018064:	4461      	add	r1, ip
 8018066:	b200      	sxth	r0, r0
 8018068:	b209      	sxth	r1, r1
 801806a:	4288      	cmp	r0, r1
 801806c:	f6bf af71 	bge.w	8017f52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8018070:	4584      	cmp	ip, r0
 8018072:	4662      	mov	r2, ip
 8018074:	461f      	mov	r7, r3
 8018076:	bfb8      	it	lt
 8018078:	4602      	movlt	r2, r0
 801807a:	3301      	adds	r3, #1
 801807c:	e7e1      	b.n	8018042 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801807e:	d10e      	bne.n	801809e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8018080:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8018084:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8018088:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801808c:	4473      	add	r3, lr
 801808e:	b21b      	sxth	r3, r3
 8018090:	429e      	cmp	r6, r3
 8018092:	bfa8      	it	ge
 8018094:	461e      	movge	r6, r3
 8018096:	4287      	cmp	r7, r0
 8018098:	bfb8      	it	lt
 801809a:	46e1      	movlt	r9, ip
 801809c:	e756      	b.n	8017f4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801809e:	4286      	cmp	r6, r0
 80180a0:	bfa8      	it	ge
 80180a2:	4606      	movge	r6, r0
 80180a4:	e752      	b.n	8017f4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80180a6:	eb0a 0007 	add.w	r0, sl, r7
 80180aa:	4427      	add	r7, r4
 80180ac:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80180b0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80180b4:	f1bb 0f13 	cmp.w	fp, #19
 80180b8:	bfde      	ittt	le
 80180ba:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 80180be:	445e      	addle	r6, fp
 80180c0:	b236      	sxthle	r6, r6
 80180c2:	f7f8 fa36 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 80180c6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80180ca:	2800      	cmp	r0, #0
 80180cc:	f47f af1a 	bne.w	8017f04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80180d0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80180d4:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80180d8:	482a      	ldr	r0, [pc, #168]	@ (8018184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80180da:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80180de:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80180e2:	6800      	ldr	r0, [r0, #0]
 80180e4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80180e8:	1ab6      	subs	r6, r6, r2
 80180ea:	2e14      	cmp	r6, #20
 80180ec:	f8ad 201e 	strh.w	r2, [sp, #30]
 80180f0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80180f4:	bfa8      	it	ge
 80180f6:	2614      	movge	r6, #20
 80180f8:	f8d0 c000 	ldr.w	ip, [r0]
 80180fc:	b2b6      	uxth	r6, r6
 80180fe:	fa1f fb8b 	uxth.w	fp, fp
 8018102:	455e      	cmp	r6, fp
 8018104:	bf94      	ite	ls
 8018106:	9600      	strls	r6, [sp, #0]
 8018108:	f8cd b000 	strhi.w	fp, [sp]
 801810c:	b292      	uxth	r2, r2
 801810e:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8018112:	b29b      	uxth	r3, r3
 8018114:	b289      	uxth	r1, r1
 8018116:	47b0      	blx	r6
 8018118:	6823      	ldr	r3, [r4, #0]
 801811a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801811e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8018120:	a907      	add	r1, sp, #28
 8018122:	4620      	mov	r0, r4
 8018124:	4798      	blx	r3
 8018126:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801812a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801812e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8018132:	1a5b      	subs	r3, r3, r1
 8018134:	440a      	add	r2, r1
 8018136:	b21b      	sxth	r3, r3
 8018138:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801813c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8018140:	2b00      	cmp	r3, #0
 8018142:	f47f aeda 	bne.w	8017efa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8018146:	fa1f f189 	uxth.w	r1, r9
 801814a:	4650      	mov	r0, sl
 801814c:	f7ff f9e6 	bl	801751c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018150:	e6d3      	b.n	8017efa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8018152:	882e      	ldrh	r6, [r5, #0]
 8018154:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8018158:	42b3      	cmp	r3, r6
 801815a:	f67f ae98 	bls.w	8017e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801815e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8018162:	ab07      	add	r3, sp, #28
 8018164:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8018168:	6851      	ldr	r1, [r2, #4]
 801816a:	c303      	stmia	r3!, {r0, r1}
 801816c:	a807      	add	r0, sp, #28
 801816e:	f7f8 f9e0 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018172:	b920      	cbnz	r0, 801817e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8018174:	6823      	ldr	r3, [r4, #0]
 8018176:	a907      	add	r1, sp, #28
 8018178:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801817a:	4620      	mov	r0, r4
 801817c:	4798      	blx	r3
 801817e:	3601      	adds	r6, #1
 8018180:	b2b6      	uxth	r6, r6
 8018182:	e7e7      	b.n	8018154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8018184:	20013f60 	.word	0x20013f60

08018188 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8018188:	4b03      	ldr	r3, [pc, #12]	@ (8018198 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801818a:	2200      	movs	r2, #0
 801818c:	801a      	strh	r2, [r3, #0]
 801818e:	805a      	strh	r2, [r3, #2]
 8018190:	809a      	strh	r2, [r3, #4]
 8018192:	80da      	strh	r2, [r3, #6]
 8018194:	4770      	bx	lr
 8018196:	bf00      	nop
 8018198:	20013fac 	.word	0x20013fac

0801819c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801819c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181a0:	4606      	mov	r6, r0
 80181a2:	b09d      	sub	sp, #116	@ 0x74
 80181a4:	a803      	add	r0, sp, #12
 80181a6:	4614      	mov	r4, r2
 80181a8:	468a      	mov	sl, r1
 80181aa:	461d      	mov	r5, r3
 80181ac:	f001 f99f 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 80181b0:	6833      	ldr	r3, [r6, #0]
 80181b2:	4630      	mov	r0, r6
 80181b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80181b6:	4798      	blx	r3
 80181b8:	6833      	ldr	r3, [r6, #0]
 80181ba:	4607      	mov	r7, r0
 80181bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80181be:	4630      	mov	r0, r6
 80181c0:	4798      	blx	r3
 80181c2:	462a      	mov	r2, r5
 80181c4:	9000      	str	r0, [sp, #0]
 80181c6:	4621      	mov	r1, r4
 80181c8:	463b      	mov	r3, r7
 80181ca:	a803      	add	r0, sp, #12
 80181cc:	f001 f9ea 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80181d0:	2500      	movs	r5, #0
 80181d2:	462c      	mov	r4, r5
 80181d4:	46a9      	mov	r9, r5
 80181d6:	46a8      	mov	r8, r5
 80181d8:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80181dc:	2300      	movs	r3, #0
 80181de:	9302      	str	r3, [sp, #8]
 80181e0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80181e4:	429c      	cmp	r4, r3
 80181e6:	d002      	beq.n	80181ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80181e8:	455c      	cmp	r4, fp
 80181ea:	bf18      	it	ne
 80181ec:	4625      	movne	r5, r4
 80181ee:	ab02      	add	r3, sp, #8
 80181f0:	4632      	mov	r2, r6
 80181f2:	4651      	mov	r1, sl
 80181f4:	a803      	add	r0, sp, #12
 80181f6:	f001 fd01 	bl	8019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80181fa:	4604      	mov	r4, r0
 80181fc:	b108      	cbz	r0, 8018202 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80181fe:	280a      	cmp	r0, #10
 8018200:	d10a      	bne.n	8018218 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8018202:	45c1      	cmp	r9, r8
 8018204:	bf38      	it	cc
 8018206:	46c1      	movcc	r9, r8
 8018208:	f04f 0800 	mov.w	r8, #0
 801820c:	2c00      	cmp	r4, #0
 801820e:	d1e5      	bne.n	80181dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8018210:	4648      	mov	r0, r9
 8018212:	b01d      	add	sp, #116	@ 0x74
 8018214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018218:	9a02      	ldr	r2, [sp, #8]
 801821a:	2a00      	cmp	r2, #0
 801821c:	d0de      	beq.n	80181dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801821e:	7b57      	ldrb	r7, [r2, #13]
 8018220:	6833      	ldr	r3, [r6, #0]
 8018222:	8894      	ldrh	r4, [r2, #4]
 8018224:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8018226:	007f      	lsls	r7, r7, #1
 8018228:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801822c:	7a97      	ldrb	r7, [r2, #10]
 801822e:	4629      	mov	r1, r5
 8018230:	4307      	orrs	r7, r0
 8018232:	4630      	mov	r0, r6
 8018234:	4798      	blx	r3
 8018236:	4438      	add	r0, r7
 8018238:	4480      	add	r8, r0
 801823a:	fa1f f888 	uxth.w	r8, r8
 801823e:	e7e5      	b.n	801820c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08018240 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8018240:	b508      	push	{r3, lr}
 8018242:	6803      	ldr	r3, [r0, #0]
 8018244:	68db      	ldr	r3, [r3, #12]
 8018246:	4798      	blx	r3
 8018248:	b128      	cbz	r0, 8018256 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801824a:	7b43      	ldrb	r3, [r0, #13]
 801824c:	7a80      	ldrb	r0, [r0, #10]
 801824e:	005b      	lsls	r3, r3, #1
 8018250:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8018254:	4318      	orrs	r0, r3
 8018256:	bd08      	pop	{r3, pc}

08018258 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8018258:	b40e      	push	{r1, r2, r3}
 801825a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801825c:	b09e      	sub	sp, #120	@ 0x78
 801825e:	ab23      	add	r3, sp, #140	@ 0x8c
 8018260:	4605      	mov	r5, r0
 8018262:	f853 4b04 	ldr.w	r4, [r3], #4
 8018266:	9303      	str	r3, [sp, #12]
 8018268:	a805      	add	r0, sp, #20
 801826a:	f001 f940 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 801826e:	682b      	ldr	r3, [r5, #0]
 8018270:	4628      	mov	r0, r5
 8018272:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018274:	4798      	blx	r3
 8018276:	682b      	ldr	r3, [r5, #0]
 8018278:	4606      	mov	r6, r0
 801827a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801827c:	4628      	mov	r0, r5
 801827e:	4798      	blx	r3
 8018280:	4633      	mov	r3, r6
 8018282:	ae1e      	add	r6, sp, #120	@ 0x78
 8018284:	4621      	mov	r1, r4
 8018286:	9000      	str	r0, [sp, #0]
 8018288:	9a03      	ldr	r2, [sp, #12]
 801828a:	2400      	movs	r4, #0
 801828c:	a805      	add	r0, sp, #20
 801828e:	f001 f989 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018292:	f846 4d68 	str.w	r4, [r6, #-104]!
 8018296:	462a      	mov	r2, r5
 8018298:	4633      	mov	r3, r6
 801829a:	4621      	mov	r1, r4
 801829c:	a805      	add	r0, sp, #20
 801829e:	f001 fcad 	bl	8019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80182a2:	b1f0      	cbz	r0, 80182e2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80182a4:	280a      	cmp	r0, #10
 80182a6:	d018      	beq.n	80182da <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80182a8:	9f04      	ldr	r7, [sp, #16]
 80182aa:	b1b7      	cbz	r7, 80182da <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80182ac:	7b78      	ldrb	r0, [r7, #13]
 80182ae:	7a3b      	ldrb	r3, [r7, #8]
 80182b0:	88ea      	ldrh	r2, [r5, #6]
 80182b2:	00c1      	lsls	r1, r0, #3
 80182b4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80182b8:	4319      	orrs	r1, r3
 80182ba:	0643      	lsls	r3, r0, #25
 80182bc:	bf44      	itt	mi
 80182be:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80182c2:	b219      	sxthmi	r1, r3
 80182c4:	0100      	lsls	r0, r0, #4
 80182c6:	79fb      	ldrb	r3, [r7, #7]
 80182c8:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80182cc:	4303      	orrs	r3, r0
 80182ce:	4413      	add	r3, r2
 80182d0:	1a5b      	subs	r3, r3, r1
 80182d2:	b21b      	sxth	r3, r3
 80182d4:	429c      	cmp	r4, r3
 80182d6:	bfb8      	it	lt
 80182d8:	461c      	movlt	r4, r3
 80182da:	4633      	mov	r3, r6
 80182dc:	462a      	mov	r2, r5
 80182de:	2100      	movs	r1, #0
 80182e0:	e7dc      	b.n	801829c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80182e2:	b2a0      	uxth	r0, r4
 80182e4:	b01e      	add	sp, #120	@ 0x78
 80182e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80182ea:	b003      	add	sp, #12
 80182ec:	4770      	bx	lr

080182ee <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80182ee:	7a43      	ldrb	r3, [r0, #9]
 80182f0:	8880      	ldrh	r0, [r0, #4]
 80182f2:	4418      	add	r0, r3
 80182f4:	b280      	uxth	r0, r0
 80182f6:	4770      	bx	lr

080182f8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80182f8:	6803      	ldr	r3, [r0, #0]
 80182fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80182fc:	4718      	bx	r3

080182fe <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80182fe:	b40e      	push	{r1, r2, r3}
 8018300:	b570      	push	{r4, r5, r6, lr}
 8018302:	b09d      	sub	sp, #116	@ 0x74
 8018304:	ab21      	add	r3, sp, #132	@ 0x84
 8018306:	4604      	mov	r4, r0
 8018308:	f853 5b04 	ldr.w	r5, [r3], #4
 801830c:	9302      	str	r3, [sp, #8]
 801830e:	a803      	add	r0, sp, #12
 8018310:	f001 f8ed 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 8018314:	6823      	ldr	r3, [r4, #0]
 8018316:	4620      	mov	r0, r4
 8018318:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801831a:	4798      	blx	r3
 801831c:	6823      	ldr	r3, [r4, #0]
 801831e:	4606      	mov	r6, r0
 8018320:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018322:	4620      	mov	r0, r4
 8018324:	4798      	blx	r3
 8018326:	4633      	mov	r3, r6
 8018328:	9000      	str	r0, [sp, #0]
 801832a:	9a02      	ldr	r2, [sp, #8]
 801832c:	4629      	mov	r1, r5
 801832e:	a803      	add	r0, sp, #12
 8018330:	f001 f938 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018334:	a803      	add	r0, sp, #12
 8018336:	f001 fd2f 	bl	8019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801833a:	2401      	movs	r4, #1
 801833c:	b2a3      	uxth	r3, r4
 801833e:	b140      	cbz	r0, 8018352 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8018340:	280a      	cmp	r0, #10
 8018342:	bf08      	it	eq
 8018344:	3301      	addeq	r3, #1
 8018346:	a803      	add	r0, sp, #12
 8018348:	bf08      	it	eq
 801834a:	b21c      	sxtheq	r4, r3
 801834c:	f001 fd24 	bl	8019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018350:	e7f4      	b.n	801833c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8018352:	4618      	mov	r0, r3
 8018354:	b01d      	add	sp, #116	@ 0x74
 8018356:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801835a:	b003      	add	sp, #12
 801835c:	4770      	bx	lr

0801835e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801835e:	b40e      	push	{r1, r2, r3}
 8018360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018362:	b09e      	sub	sp, #120	@ 0x78
 8018364:	ab23      	add	r3, sp, #140	@ 0x8c
 8018366:	4604      	mov	r4, r0
 8018368:	f853 5b04 	ldr.w	r5, [r3], #4
 801836c:	9303      	str	r3, [sp, #12]
 801836e:	a805      	add	r0, sp, #20
 8018370:	f001 f8bd 	bl	80194ee <_ZN8touchgfx12TextProviderC1Ev>
 8018374:	6823      	ldr	r3, [r4, #0]
 8018376:	4620      	mov	r0, r4
 8018378:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801837a:	4798      	blx	r3
 801837c:	6823      	ldr	r3, [r4, #0]
 801837e:	4606      	mov	r6, r0
 8018380:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018382:	4620      	mov	r0, r4
 8018384:	4798      	blx	r3
 8018386:	4633      	mov	r3, r6
 8018388:	4629      	mov	r1, r5
 801838a:	9000      	str	r0, [sp, #0]
 801838c:	9a03      	ldr	r2, [sp, #12]
 801838e:	a805      	add	r0, sp, #20
 8018390:	ad1e      	add	r5, sp, #120	@ 0x78
 8018392:	f001 f907 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018396:	2100      	movs	r1, #0
 8018398:	f845 1d68 	str.w	r1, [r5, #-104]!
 801839c:	4622      	mov	r2, r4
 801839e:	462b      	mov	r3, r5
 80183a0:	a805      	add	r0, sp, #20
 80183a2:	f001 fc2b 	bl	8019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80183a6:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80183aa:	b1d8      	cbz	r0, 80183e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80183ac:	280a      	cmp	r0, #10
 80183ae:	d012      	beq.n	80183d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80183b0:	9804      	ldr	r0, [sp, #16]
 80183b2:	b180      	cbz	r0, 80183d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80183b4:	7b47      	ldrb	r7, [r0, #13]
 80183b6:	88e2      	ldrh	r2, [r4, #6]
 80183b8:	00fb      	lsls	r3, r7, #3
 80183ba:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80183be:	7a03      	ldrb	r3, [r0, #8]
 80183c0:	430b      	orrs	r3, r1
 80183c2:	0679      	lsls	r1, r7, #25
 80183c4:	bf44      	itt	mi
 80183c6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80183ca:	b21b      	sxthmi	r3, r3
 80183cc:	1ad3      	subs	r3, r2, r3
 80183ce:	b21b      	sxth	r3, r3
 80183d0:	429e      	cmp	r6, r3
 80183d2:	bfa8      	it	ge
 80183d4:	461e      	movge	r6, r3
 80183d6:	462b      	mov	r3, r5
 80183d8:	4622      	mov	r2, r4
 80183da:	2100      	movs	r1, #0
 80183dc:	a805      	add	r0, sp, #20
 80183de:	f001 fc0d 	bl	8019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80183e2:	e7e2      	b.n	80183aa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80183e4:	4630      	mov	r0, r6
 80183e6:	b01e      	add	sp, #120	@ 0x78
 80183e8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80183ec:	b003      	add	sp, #12
 80183ee:	4770      	bx	lr

080183f0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80183f0:	b513      	push	{r0, r1, r4, lr}
 80183f2:	6803      	ldr	r3, [r0, #0]
 80183f4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80183f8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80183fc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018400:	2400      	movs	r4, #0
 8018402:	9400      	str	r4, [sp, #0]
 8018404:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018408:	691b      	ldr	r3, [r3, #16]
 801840a:	4669      	mov	r1, sp
 801840c:	4798      	blx	r3
 801840e:	b002      	add	sp, #8
 8018410:	bd10      	pop	{r4, pc}

08018412 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8018412:	b538      	push	{r3, r4, r5, lr}
 8018414:	680b      	ldr	r3, [r1, #0]
 8018416:	460c      	mov	r4, r1
 8018418:	68db      	ldr	r3, [r3, #12]
 801841a:	4605      	mov	r5, r0
 801841c:	4798      	blx	r3
 801841e:	6823      	ldr	r3, [r4, #0]
 8018420:	4620      	mov	r0, r4
 8018422:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018424:	4629      	mov	r1, r5
 8018426:	4798      	blx	r3
 8018428:	4628      	mov	r0, r5
 801842a:	bd38      	pop	{r3, r4, r5, pc}

0801842c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801842c:	b410      	push	{r4}
 801842e:	880a      	ldrh	r2, [r1, #0]
 8018430:	8884      	ldrh	r4, [r0, #4]
 8018432:	4422      	add	r2, r4
 8018434:	800a      	strh	r2, [r1, #0]
 8018436:	88c4      	ldrh	r4, [r0, #6]
 8018438:	884a      	ldrh	r2, [r1, #2]
 801843a:	4422      	add	r2, r4
 801843c:	804a      	strh	r2, [r1, #2]
 801843e:	6940      	ldr	r0, [r0, #20]
 8018440:	b120      	cbz	r0, 801844c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8018442:	6803      	ldr	r3, [r0, #0]
 8018444:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018448:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801844a:	4718      	bx	r3
 801844c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018450:	4770      	bx	lr

08018452 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8018452:	b570      	push	{r4, r5, r6, lr}
 8018454:	8882      	ldrh	r2, [r0, #4]
 8018456:	880b      	ldrh	r3, [r1, #0]
 8018458:	4413      	add	r3, r2
 801845a:	800b      	strh	r3, [r1, #0]
 801845c:	88c2      	ldrh	r2, [r0, #6]
 801845e:	884b      	ldrh	r3, [r1, #2]
 8018460:	460c      	mov	r4, r1
 8018462:	4413      	add	r3, r2
 8018464:	804b      	strh	r3, [r1, #2]
 8018466:	4605      	mov	r5, r0
 8018468:	1d01      	adds	r1, r0, #4
 801846a:	4620      	mov	r0, r4
 801846c:	f7f8 f81e 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8018470:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8018474:	2b00      	cmp	r3, #0
 8018476:	dd0b      	ble.n	8018490 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018478:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801847c:	2b00      	cmp	r3, #0
 801847e:	dd07      	ble.n	8018490 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018480:	6968      	ldr	r0, [r5, #20]
 8018482:	b128      	cbz	r0, 8018490 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018484:	6803      	ldr	r3, [r0, #0]
 8018486:	4621      	mov	r1, r4
 8018488:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801848a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801848e:	4718      	bx	r3
 8018490:	bd70      	pop	{r4, r5, r6, pc}
	...

08018494 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8018494:	b570      	push	{r4, r5, r6, lr}
 8018496:	8882      	ldrh	r2, [r0, #4]
 8018498:	880b      	ldrh	r3, [r1, #0]
 801849a:	4413      	add	r3, r2
 801849c:	800b      	strh	r3, [r1, #0]
 801849e:	88c2      	ldrh	r2, [r0, #6]
 80184a0:	884b      	ldrh	r3, [r1, #2]
 80184a2:	460c      	mov	r4, r1
 80184a4:	4413      	add	r3, r2
 80184a6:	804b      	strh	r3, [r1, #2]
 80184a8:	4605      	mov	r5, r0
 80184aa:	1d01      	adds	r1, r0, #4
 80184ac:	4620      	mov	r0, r4
 80184ae:	f7f7 fffd 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 80184b2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80184b6:	2b00      	cmp	r3, #0
 80184b8:	dd19      	ble.n	80184ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80184ba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80184be:	2b00      	cmp	r3, #0
 80184c0:	dd15      	ble.n	80184ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80184c2:	6968      	ldr	r0, [r5, #20]
 80184c4:	b128      	cbz	r0, 80184d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80184c6:	6803      	ldr	r3, [r0, #0]
 80184c8:	4621      	mov	r1, r4
 80184ca:	691b      	ldr	r3, [r3, #16]
 80184cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80184d0:	4718      	bx	r3
 80184d2:	4b07      	ldr	r3, [pc, #28]	@ (80184f0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80184d4:	681b      	ldr	r3, [r3, #0]
 80184d6:	3304      	adds	r3, #4
 80184d8:	429d      	cmp	r5, r3
 80184da:	d108      	bne.n	80184ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80184dc:	f7fe feea 	bl	80172b4 <_ZN8touchgfx11Application11getInstanceEv>
 80184e0:	6803      	ldr	r3, [r0, #0]
 80184e2:	6821      	ldr	r1, [r4, #0]
 80184e4:	6862      	ldr	r2, [r4, #4]
 80184e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80184e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80184ec:	4718      	bx	r3
 80184ee:	bd70      	pop	{r4, r5, r6, pc}
 80184f0:	20013fa4 	.word	0x20013fa4

080184f4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80184f4:	b570      	push	{r4, r5, r6, lr}
 80184f6:	4604      	mov	r4, r0
 80184f8:	4616      	mov	r6, r2
 80184fa:	460d      	mov	r5, r1
 80184fc:	b901      	cbnz	r1, 8018500 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80184fe:	b192      	cbz	r2, 8018526 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8018500:	6823      	ldr	r3, [r4, #0]
 8018502:	4620      	mov	r0, r4
 8018504:	699b      	ldr	r3, [r3, #24]
 8018506:	4798      	blx	r3
 8018508:	88e2      	ldrh	r2, [r4, #6]
 801850a:	88a1      	ldrh	r1, [r4, #4]
 801850c:	4432      	add	r2, r6
 801850e:	4429      	add	r1, r5
 8018510:	4620      	mov	r0, r4
 8018512:	b212      	sxth	r2, r2
 8018514:	b209      	sxth	r1, r1
 8018516:	f7ea fde0 	bl	80030da <_ZN8touchgfx8Drawable5setXYEss>
 801851a:	6823      	ldr	r3, [r4, #0]
 801851c:	4620      	mov	r0, r4
 801851e:	699b      	ldr	r3, [r3, #24]
 8018520:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018524:	4718      	bx	r3
 8018526:	bd70      	pop	{r4, r5, r6, pc}

08018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8018528:	b510      	push	{r4, lr}
 801852a:	4604      	mov	r4, r0
 801852c:	4608      	mov	r0, r1
 801852e:	2300      	movs	r3, #0
 8018530:	8023      	strh	r3, [r4, #0]
 8018532:	8063      	strh	r3, [r4, #2]
 8018534:	6803      	ldr	r3, [r0, #0]
 8018536:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801853a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801853e:	80a1      	strh	r1, [r4, #4]
 8018540:	80e2      	strh	r2, [r4, #6]
 8018542:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018544:	4621      	mov	r1, r4
 8018546:	4798      	blx	r3
 8018548:	4620      	mov	r0, r4
 801854a:	bd10      	pop	{r4, pc}

0801854c <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 801854c:	4770      	bx	lr

0801854e <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 801854e:	b510      	push	{r4, lr}
 8018550:	211c      	movs	r1, #28
 8018552:	4604      	mov	r4, r0
 8018554:	f011 fbc8 	bl	8029ce8 <_ZdlPvj>
 8018558:	4620      	mov	r0, r4
 801855a:	bd10      	pop	{r4, pc}

0801855c <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 801855c:	4a04      	ldr	r2, [pc, #16]	@ (8018570 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 801855e:	6002      	str	r2, [r0, #0]
 8018560:	2200      	movs	r2, #0
 8018562:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8018566:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801856a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801856e:	4770      	bx	lr
 8018570:	0802e400 	.word	0x0802e400

08018574 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8018574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018578:	4604      	mov	r4, r0
 801857a:	b087      	sub	sp, #28
 801857c:	4696      	mov	lr, r2
 801857e:	8b22      	ldrh	r2, [r4, #24]
 8018580:	6880      	ldr	r0, [r0, #8]
 8018582:	9105      	str	r1, [sp, #20]
 8018584:	1c51      	adds	r1, r2, #1
 8018586:	8321      	strh	r1, [r4, #24]
 8018588:	2101      	movs	r1, #1
 801858a:	5481      	strb	r1, [r0, r2]
 801858c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018590:	8b60      	ldrh	r0, [r4, #26]
 8018592:	ee06 2a90 	vmov	s13, r2
 8018596:	68e2      	ldr	r2, [r4, #12]
 8018598:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801859c:	1845      	adds	r5, r0, r1
 801859e:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 80185a2:	8365      	strh	r5, [r4, #26]
 80185a4:	edc2 6a00 	vstr	s13, [r2]
 80185a8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80185ac:	8b60      	ldrh	r0, [r4, #26]
 80185ae:	ee07 2a10 	vmov	s14, r2
 80185b2:	68e2      	ldr	r2, [r4, #12]
 80185b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185b8:	1845      	adds	r5, r0, r1
 80185ba:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 80185be:	8365      	strh	r5, [r4, #26]
 80185c0:	ed82 7a00 	vstr	s14, [r2]
 80185c4:	f8be 2000 	ldrh.w	r2, [lr]
 80185c8:	9203      	str	r2, [sp, #12]
 80185ca:	2200      	movs	r2, #0
 80185cc:	1d18      	adds	r0, r3, #4
 80185ce:	4689      	mov	r9, r1
 80185d0:	9201      	str	r2, [sp, #4]
 80185d2:	4613      	mov	r3, r2
 80185d4:	4694      	mov	ip, r2
 80185d6:	460d      	mov	r5, r1
 80185d8:	9202      	str	r2, [sp, #8]
 80185da:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80185de:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 80185e2:	9e05      	ldr	r6, [sp, #20]
 80185e4:	f8d4 a008 	ldr.w	sl, [r4, #8]
 80185e8:	f108 0701 	add.w	r7, r8, #1
 80185ec:	428e      	cmp	r6, r1
 80185ee:	b2bf      	uxth	r7, r7
 80185f0:	eb0a 0b08 	add.w	fp, sl, r8
 80185f4:	f340 80b6 	ble.w	8018764 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
 80185f8:	9b03      	ldr	r3, [sp, #12]
 80185fa:	f9b0 c000 	ldrsh.w	ip, [r0]
 80185fe:	fa43 fb05 	asr.w	fp, r3, r5
 8018602:	f00b 0b01 	and.w	fp, fp, #1
 8018606:	fa5f f38b 	uxtb.w	r3, fp
 801860a:	9304      	str	r3, [sp, #16]
 801860c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8018610:	f1bb 0f00 	cmp.w	fp, #0
 8018614:	d057      	beq.n	80186c6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
 8018616:	ee07 ca90 	vmov	s15, ip
 801861a:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 801861e:	ee07 3a90 	vmov	s15, r3
 8018622:	8327      	strh	r7, [r4, #24]
 8018624:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018628:	f1b9 0f00 	cmp.w	r9, #0
 801862c:	d028      	beq.n	8018680 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
 801862e:	f04f 0602 	mov.w	r6, #2
 8018632:	f80a 6008 	strb.w	r6, [sl, r8]
 8018636:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801863a:	68e7      	ldr	r7, [r4, #12]
 801863c:	f108 0901 	add.w	r9, r8, #1
 8018640:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018644:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018648:	edc7 5a00 	vstr	s11, [r7]
 801864c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018650:	68e7      	ldr	r7, [r4, #12]
 8018652:	f108 0901 	add.w	r9, r8, #1
 8018656:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801865a:	f8a4 901a 	strh.w	r9, [r4, #26]
 801865e:	edc7 7a00 	vstr	s15, [r7]
 8018662:	3501      	adds	r5, #1
 8018664:	2d10      	cmp	r5, #16
 8018666:	d106      	bne.n	8018676 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8018668:	9d02      	ldr	r5, [sp, #8]
 801866a:	3501      	adds	r5, #1
 801866c:	9502      	str	r5, [sp, #8]
 801866e:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
 8018672:	9503      	str	r5, [sp, #12]
 8018674:	2500      	movs	r5, #0
 8018676:	3101      	adds	r1, #1
 8018678:	3004      	adds	r0, #4
 801867a:	f8dd 9010 	ldr.w	r9, [sp, #16]
 801867e:	e7ae      	b.n	80185de <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
 8018680:	f04f 0605 	mov.w	r6, #5
 8018684:	f80a 6008 	strb.w	r6, [sl, r8]
 8018688:	ed9d 5a01 	vldr	s10, [sp, #4]
 801868c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018690:	68e7      	ldr	r7, [r4, #12]
 8018692:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018696:	f108 0901 	add.w	r9, r8, #1
 801869a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801869e:	f8a4 901a 	strh.w	r9, [r4, #26]
 80186a2:	ed87 5a00 	vstr	s10, [r7]
 80186a6:	ee05 2a10 	vmov	s10, r2
 80186aa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80186ae:	68e7      	ldr	r7, [r4, #12]
 80186b0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 80186b4:	f108 0901 	add.w	r9, r8, #1
 80186b8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80186bc:	f8a4 901a 	strh.w	r9, [r4, #26]
 80186c0:	ed87 5a00 	vstr	s10, [r7]
 80186c4:	e7b7      	b.n	8018636 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
 80186c6:	f1b9 0f00 	cmp.w	r9, #0
 80186ca:	d147      	bne.n	801875c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
 80186cc:	f04f 0605 	mov.w	r6, #5
 80186d0:	8327      	strh	r7, [r4, #24]
 80186d2:	f80a 6008 	strb.w	r6, [sl, r8]
 80186d6:	eddd 7a01 	vldr	s15, [sp, #4]
 80186da:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80186de:	68e7      	ldr	r7, [r4, #12]
 80186e0:	9e01      	ldr	r6, [sp, #4]
 80186e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80186e6:	f108 0901 	add.w	r9, r8, #1
 80186ea:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80186ee:	f8a4 901a 	strh.w	r9, [r4, #26]
 80186f2:	edc7 7a00 	vstr	s15, [r7]
 80186f6:	ee07 2a90 	vmov	s15, r2
 80186fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80186fe:	68e7      	ldr	r7, [r4, #12]
 8018700:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018704:	f108 0901 	add.w	r9, r8, #1
 8018708:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801870c:	4466      	add	r6, ip
 801870e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018712:	edc7 7a00 	vstr	s15, [r7]
 8018716:	ee07 6a90 	vmov	s15, r6
 801871a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801871e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018722:	68e7      	ldr	r7, [r4, #12]
 8018724:	ee67 7a86 	vmul.f32	s15, s15, s12
 8018728:	f108 0901 	add.w	r9, r8, #1
 801872c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018730:	441a      	add	r2, r3
 8018732:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018736:	edc7 7a00 	vstr	s15, [r7]
 801873a:	ee07 2a90 	vmov	s15, r2
 801873e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018742:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018746:	68e7      	ldr	r7, [r4, #12]
 8018748:	ee67 7a86 	vmul.f32	s15, s15, s12
 801874c:	f108 0901 	add.w	r9, r8, #1
 8018750:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018754:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018758:	edc7 7a00 	vstr	s15, [r7]
 801875c:	461a      	mov	r2, r3
 801875e:	f8cd c004 	str.w	ip, [sp, #4]
 8018762:	e77e      	b.n	8018662 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
 8018764:	f1b9 0f00 	cmp.w	r9, #0
 8018768:	d028      	beq.n	80187bc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 801876a:	ee07 ca90 	vmov	s15, ip
 801876e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018772:	eef4 6a67 	vcmp.f32	s13, s15
 8018776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801877a:	d108      	bne.n	801878e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
 801877c:	ee07 3a90 	vmov	s15, r3
 8018780:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018784:	eeb4 7a67 	vcmp.f32	s14, s15
 8018788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801878c:	d016      	beq.n	80187bc <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
 801878e:	2302      	movs	r3, #2
 8018790:	8327      	strh	r7, [r4, #24]
 8018792:	f88b 3000 	strb.w	r3, [fp]
 8018796:	8b62      	ldrh	r2, [r4, #26]
 8018798:	68e3      	ldr	r3, [r4, #12]
 801879a:	1c51      	adds	r1, r2, #1
 801879c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80187a0:	8361      	strh	r1, [r4, #26]
 80187a2:	edc3 6a00 	vstr	s13, [r3]
 80187a6:	8b62      	ldrh	r2, [r4, #26]
 80187a8:	68e3      	ldr	r3, [r4, #12]
 80187aa:	1c51      	adds	r1, r2, #1
 80187ac:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80187b0:	8361      	strh	r1, [r4, #26]
 80187b2:	ed83 7a00 	vstr	s14, [r3]
 80187b6:	b007      	add	sp, #28
 80187b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80187bc:	2305      	movs	r3, #5
 80187be:	8327      	strh	r7, [r4, #24]
 80187c0:	eddd 7a01 	vldr	s15, [sp, #4]
 80187c4:	f88b 3000 	strb.w	r3, [fp]
 80187c8:	8b61      	ldrh	r1, [r4, #26]
 80187ca:	68e3      	ldr	r3, [r4, #12]
 80187cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80187d0:	1c4d      	adds	r5, r1, #1
 80187d2:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80187d6:	8365      	strh	r5, [r4, #26]
 80187d8:	edc3 7a00 	vstr	s15, [r3]
 80187dc:	ee07 2a90 	vmov	s15, r2
 80187e0:	8b61      	ldrh	r1, [r4, #26]
 80187e2:	68e3      	ldr	r3, [r4, #12]
 80187e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80187e8:	1c4d      	adds	r5, r1, #1
 80187ea:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80187ee:	8365      	strh	r5, [r4, #26]
 80187f0:	edc3 7a00 	vstr	s15, [r3]
 80187f4:	e7cf      	b.n	8018796 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

080187f8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 80187f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80187fc:	b08e      	sub	sp, #56	@ 0x38
 80187fe:	4604      	mov	r4, r0
 8018800:	4688      	mov	r8, r1
 8018802:	4615      	mov	r5, r2
 8018804:	4699      	mov	r9, r3
 8018806:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8018808:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801880c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801880e:	f7e9 fb47 	bl	8001ea0 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8018812:	6060      	str	r0, [r4, #4]
 8018814:	f1b9 0f00 	cmp.w	r9, #0
 8018818:	f000 80e8 	beq.w	80189ec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801881c:	2800      	cmp	r0, #0
 801881e:	f000 80e5 	beq.w	80189ec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8018822:	a805      	add	r0, sp, #20
 8018824:	f000 f8f9 	bl	8018a1a <_ZN8touchgfx9Matrix3x3C1Ev>
 8018828:	6833      	ldr	r3, [r6, #0]
 801882a:	4630      	mov	r0, r6
 801882c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801882e:	4798      	blx	r3
 8018830:	a805      	add	r0, sp, #20
 8018832:	eef0 0a40 	vmov.f32	s1, s0
 8018836:	f000 f8f4 	bl	8018a22 <_ZN8touchgfx9Matrix3x35scaleEff>
 801883a:	6860      	ldr	r0, [r4, #4]
 801883c:	f1ba 0f03 	cmp.w	sl, #3
 8018840:	d83b      	bhi.n	80188ba <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8018842:	e8df f00a 	tbb	[pc, sl]
 8018846:	1002      	.short	0x1002
 8018848:	9f71      	.short	0x9f71
 801884a:	6803      	ldr	r3, [r0, #0]
 801884c:	462a      	mov	r2, r5
 801884e:	689b      	ldr	r3, [r3, #8]
 8018850:	4641      	mov	r1, r8
 8018852:	4798      	blx	r3
 8018854:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8018858:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801885c:	ee07 7a90 	vmov	s15, r7
 8018860:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8018864:	e026      	b.n	80188b4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8018866:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801886a:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801886e:	8869      	ldrh	r1, [r5, #2]
 8018870:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018874:	1a9b      	subs	r3, r3, r2
 8018876:	1a5b      	subs	r3, r3, r1
 8018878:	f8ad 300c 	strh.w	r3, [sp, #12]
 801887c:	882b      	ldrh	r3, [r5, #0]
 801887e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018882:	88ab      	ldrh	r3, [r5, #4]
 8018884:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018888:	6803      	ldr	r3, [r0, #0]
 801888a:	aa03      	add	r2, sp, #12
 801888c:	689b      	ldr	r3, [r3, #8]
 801888e:	4641      	mov	r1, r8
 8018890:	4798      	blx	r3
 8018892:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 80189f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8018896:	a805      	add	r0, sp, #20
 8018898:	f000 f8e8 	bl	8018a6c <_ZN8touchgfx9Matrix3x36rotateEf>
 801889c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80188a0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80188a2:	ee07 7a90 	vmov	s15, r7
 80188a6:	1a9b      	subs	r3, r3, r2
 80188a8:	ee00 3a10 	vmov	s0, r3
 80188ac:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80188b0:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80188b4:	a805      	add	r0, sp, #20
 80188b6:	f000 f927 	bl	8018b08 <_ZN8touchgfx9Matrix3x39translateEff>
 80188ba:	6860      	ldr	r0, [r4, #4]
 80188bc:	6803      	ldr	r3, [r0, #0]
 80188be:	a905      	add	r1, sp, #20
 80188c0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80188c2:	4798      	blx	r3
 80188c4:	6860      	ldr	r0, [r4, #4]
 80188c6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80188c8:	6803      	ldr	r3, [r0, #0]
 80188ca:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 80188ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80188d0:	4798      	blx	r3
 80188d2:	6860      	ldr	r0, [r4, #4]
 80188d4:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 80188d8:	6803      	ldr	r3, [r0, #0]
 80188da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80188dc:	4798      	blx	r3
 80188de:	6860      	ldr	r0, [r4, #4]
 80188e0:	6803      	ldr	r3, [r0, #0]
 80188e2:	2101      	movs	r1, #1
 80188e4:	68db      	ldr	r3, [r3, #12]
 80188e6:	2500      	movs	r5, #0
 80188e8:	4798      	blx	r3
 80188ea:	f8b9 7000 	ldrh.w	r7, [r9]
 80188ee:	61a5      	str	r5, [r4, #24]
 80188f0:	f104 0310 	add.w	r3, r4, #16
 80188f4:	f104 0208 	add.w	r2, r4, #8
 80188f8:	f104 0114 	add.w	r1, r4, #20
 80188fc:	f104 000c 	add.w	r0, r4, #12
 8018900:	f109 0602 	add.w	r6, r9, #2
 8018904:	f7ee fd98 	bl	8007438 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8018908:	42af      	cmp	r7, r5
 801890a:	dd60      	ble.n	80189ce <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801890c:	8831      	ldrh	r1, [r6, #0]
 801890e:	f101 030f 	add.w	r3, r1, #15
 8018912:	1cb2      	adds	r2, r6, #2
 8018914:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8018918:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801891c:	4620      	mov	r0, r4
 801891e:	f7ff fe29 	bl	8018574 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8018922:	3501      	adds	r5, #1
 8018924:	4606      	mov	r6, r0
 8018926:	e7ef      	b.n	8018908 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8018928:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801892c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8018930:	8829      	ldrh	r1, [r5, #0]
 8018932:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018936:	1a9b      	subs	r3, r3, r2
 8018938:	1a5b      	subs	r3, r3, r1
 801893a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801893e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8018942:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8018946:	886d      	ldrh	r5, [r5, #2]
 8018948:	f8ad 1012 	strh.w	r1, [sp, #18]
 801894c:	1a5b      	subs	r3, r3, r1
 801894e:	1b5b      	subs	r3, r3, r5
 8018950:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018954:	6803      	ldr	r3, [r0, #0]
 8018956:	aa03      	add	r2, sp, #12
 8018958:	689b      	ldr	r3, [r3, #8]
 801895a:	4641      	mov	r1, r8
 801895c:	4798      	blx	r3
 801895e:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 80189f8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8018962:	a805      	add	r0, sp, #20
 8018964:	f000 f882 	bl	8018a6c <_ZN8touchgfx9Matrix3x36rotateEf>
 8018968:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801896c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801896e:	1a9b      	subs	r3, r3, r2
 8018970:	ee00 3a90 	vmov	s1, r3
 8018974:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8018978:	1bdb      	subs	r3, r3, r7
 801897a:	ee00 3a10 	vmov	s0, r3
 801897e:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8018982:	e795      	b.n	80188b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8018984:	886b      	ldrh	r3, [r5, #2]
 8018986:	f8ad 300c 	strh.w	r3, [sp, #12]
 801898a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801898e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8018992:	8829      	ldrh	r1, [r5, #0]
 8018994:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018998:	1a9b      	subs	r3, r3, r2
 801899a:	1a5b      	subs	r3, r3, r1
 801899c:	f8ad 300e 	strh.w	r3, [sp, #14]
 80189a0:	88eb      	ldrh	r3, [r5, #6]
 80189a2:	f8ad 3010 	strh.w	r3, [sp, #16]
 80189a6:	6803      	ldr	r3, [r0, #0]
 80189a8:	aa03      	add	r2, sp, #12
 80189aa:	689b      	ldr	r3, [r3, #8]
 80189ac:	4641      	mov	r1, r8
 80189ae:	4798      	blx	r3
 80189b0:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 80189fc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 80189b4:	a805      	add	r0, sp, #20
 80189b6:	f000 f859 	bl	8018a6c <_ZN8touchgfx9Matrix3x36rotateEf>
 80189ba:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80189be:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80189c2:	1bdb      	subs	r3, r3, r7
 80189c4:	ee00 3a90 	vmov	s1, r3
 80189c8:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80189cc:	e748      	b.n	8018860 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 80189ce:	6860      	ldr	r0, [r4, #4]
 80189d0:	8b22      	ldrh	r2, [r4, #24]
 80189d2:	6803      	ldr	r3, [r0, #0]
 80189d4:	2100      	movs	r1, #0
 80189d6:	9101      	str	r1, [sp, #4]
 80189d8:	8b61      	ldrh	r1, [r4, #26]
 80189da:	9100      	str	r1, [sp, #0]
 80189dc:	6a1d      	ldr	r5, [r3, #32]
 80189de:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 80189e2:	47a8      	blx	r5
 80189e4:	6860      	ldr	r0, [r4, #4]
 80189e6:	6803      	ldr	r3, [r0, #0]
 80189e8:	69db      	ldr	r3, [r3, #28]
 80189ea:	4798      	blx	r3
 80189ec:	b00e      	add	sp, #56	@ 0x38
 80189ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80189f2:	bf00      	nop
 80189f4:	42b40000 	.word	0x42b40000
 80189f8:	43340000 	.word	0x43340000
 80189fc:	43870000 	.word	0x43870000

08018a00 <_ZN8touchgfx9Matrix3x35resetEv>:
 8018a00:	2300      	movs	r3, #0
 8018a02:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018a06:	6002      	str	r2, [r0, #0]
 8018a08:	6043      	str	r3, [r0, #4]
 8018a0a:	6083      	str	r3, [r0, #8]
 8018a0c:	60c3      	str	r3, [r0, #12]
 8018a0e:	6102      	str	r2, [r0, #16]
 8018a10:	6143      	str	r3, [r0, #20]
 8018a12:	6183      	str	r3, [r0, #24]
 8018a14:	61c3      	str	r3, [r0, #28]
 8018a16:	6202      	str	r2, [r0, #32]
 8018a18:	4770      	bx	lr

08018a1a <_ZN8touchgfx9Matrix3x3C1Ev>:
 8018a1a:	b508      	push	{r3, lr}
 8018a1c:	f7ff fff0 	bl	8018a00 <_ZN8touchgfx9Matrix3x35resetEv>
 8018a20:	bd08      	pop	{r3, pc}

08018a22 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8018a22:	edd0 7a00 	vldr	s15, [r0]
 8018a26:	ee67 7a80 	vmul.f32	s15, s15, s0
 8018a2a:	edc0 7a00 	vstr	s15, [r0]
 8018a2e:	edd0 7a01 	vldr	s15, [r0, #4]
 8018a32:	ee67 7a80 	vmul.f32	s15, s15, s0
 8018a36:	edc0 7a01 	vstr	s15, [r0, #4]
 8018a3a:	edd0 7a02 	vldr	s15, [r0, #8]
 8018a3e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8018a42:	edd0 7a03 	vldr	s15, [r0, #12]
 8018a46:	ed80 0a02 	vstr	s0, [r0, #8]
 8018a4a:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8018a4e:	edc0 7a03 	vstr	s15, [r0, #12]
 8018a52:	edd0 7a04 	vldr	s15, [r0, #16]
 8018a56:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8018a5a:	edc0 7a04 	vstr	s15, [r0, #16]
 8018a5e:	edd0 7a05 	vldr	s15, [r0, #20]
 8018a62:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8018a66:	edc0 0a05 	vstr	s1, [r0, #20]
 8018a6a:	4770      	bx	lr

08018a6c <_ZN8touchgfx9Matrix3x36rotateEf>:
 8018a6c:	b510      	push	{r4, lr}
 8018a6e:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8018b00 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8018a72:	ee20 0a27 	vmul.f32	s0, s0, s15
 8018a76:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8018b04 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8018a7a:	ed2d 8b02 	vpush	{d8}
 8018a7e:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8018a82:	4604      	mov	r4, r0
 8018a84:	eeb0 0a68 	vmov.f32	s0, s17
 8018a88:	f011 f9a2 	bl	8029dd0 <cosf>
 8018a8c:	eeb0 8a40 	vmov.f32	s16, s0
 8018a90:	eeb0 0a68 	vmov.f32	s0, s17
 8018a94:	f011 f9e0 	bl	8029e58 <sinf>
 8018a98:	edd4 6a03 	vldr	s13, [r4, #12]
 8018a9c:	edd4 4a00 	vldr	s9, [r4]
 8018aa0:	ed94 7a04 	vldr	s14, [r4, #16]
 8018aa4:	ed94 5a01 	vldr	s10, [r4, #4]
 8018aa8:	edd4 5a02 	vldr	s11, [r4, #8]
 8018aac:	ee60 7a66 	vnmul.f32	s15, s0, s13
 8018ab0:	ee66 6a88 	vmul.f32	s13, s13, s16
 8018ab4:	eee8 7a24 	vfma.f32	s15, s16, s9
 8018ab8:	eee0 6a24 	vfma.f32	s13, s0, s9
 8018abc:	edc4 7a00 	vstr	s15, [r4]
 8018ac0:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8018ac4:	ee27 7a08 	vmul.f32	s14, s14, s16
 8018ac8:	eee8 7a05 	vfma.f32	s15, s16, s10
 8018acc:	eea0 7a05 	vfma.f32	s14, s0, s10
 8018ad0:	edc4 7a01 	vstr	s15, [r4, #4]
 8018ad4:	edd4 7a05 	vldr	s15, [r4, #20]
 8018ad8:	edc4 6a03 	vstr	s13, [r4, #12]
 8018adc:	ee20 6a67 	vnmul.f32	s12, s0, s15
 8018ae0:	ee67 7a88 	vmul.f32	s15, s15, s16
 8018ae4:	eea8 6a25 	vfma.f32	s12, s16, s11
 8018ae8:	ecbd 8b02 	vpop	{d8}
 8018aec:	eee0 7a25 	vfma.f32	s15, s0, s11
 8018af0:	ed84 6a02 	vstr	s12, [r4, #8]
 8018af4:	ed84 7a04 	vstr	s14, [r4, #16]
 8018af8:	edc4 7a05 	vstr	s15, [r4, #20]
 8018afc:	bd10      	pop	{r4, pc}
 8018afe:	bf00      	nop
 8018b00:	40490fdb 	.word	0x40490fdb
 8018b04:	43340000 	.word	0x43340000

08018b08 <_ZN8touchgfx9Matrix3x39translateEff>:
 8018b08:	ed90 6a06 	vldr	s12, [r0, #24]
 8018b0c:	edd0 7a00 	vldr	s15, [r0]
 8018b10:	edd0 6a07 	vldr	s13, [r0, #28]
 8018b14:	ed90 7a08 	vldr	s14, [r0, #32]
 8018b18:	eee6 7a00 	vfma.f32	s15, s12, s0
 8018b1c:	edc0 7a00 	vstr	s15, [r0]
 8018b20:	edd0 7a01 	vldr	s15, [r0, #4]
 8018b24:	eee6 7a80 	vfma.f32	s15, s13, s0
 8018b28:	edc0 7a01 	vstr	s15, [r0, #4]
 8018b2c:	edd0 7a02 	vldr	s15, [r0, #8]
 8018b30:	eee7 7a00 	vfma.f32	s15, s14, s0
 8018b34:	edc0 7a02 	vstr	s15, [r0, #8]
 8018b38:	edd0 7a03 	vldr	s15, [r0, #12]
 8018b3c:	eee6 7a20 	vfma.f32	s15, s12, s1
 8018b40:	edc0 7a03 	vstr	s15, [r0, #12]
 8018b44:	edd0 7a04 	vldr	s15, [r0, #16]
 8018b48:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8018b4c:	edc0 7a04 	vstr	s15, [r0, #16]
 8018b50:	edd0 7a05 	vldr	s15, [r0, #20]
 8018b54:	eee7 7a20 	vfma.f32	s15, s14, s1
 8018b58:	edc0 7a05 	vstr	s15, [r0, #20]
 8018b5c:	4770      	bx	lr

08018b5e <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 8018b5e:	edd0 6a01 	vldr	s13, [r0, #4]
 8018b62:	edd0 7a04 	vldr	s15, [r0, #16]
 8018b66:	ed90 7a03 	vldr	s14, [r0, #12]
 8018b6a:	ee60 7aa7 	vmul.f32	s15, s1, s15
 8018b6e:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8018b72:	edd0 6a00 	vldr	s13, [r0]
 8018b76:	eee7 7a00 	vfma.f32	s15, s14, s0
 8018b7a:	b084      	sub	sp, #16
 8018b7c:	eee6 0a80 	vfma.f32	s1, s13, s0
 8018b80:	ed90 7a05 	vldr	s14, [r0, #20]
 8018b84:	ed90 0a02 	vldr	s0, [r0, #8]
 8018b88:	ee30 0a80 	vadd.f32	s0, s1, s0
 8018b8c:	ee77 0a87 	vadd.f32	s1, s15, s14
 8018b90:	b004      	add	sp, #16
 8018b92:	4770      	bx	lr

08018b94 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8018b94:	b530      	push	{r4, r5, lr}
 8018b96:	8083      	strh	r3, [r0, #4]
 8018b98:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8018b9c:	80c3      	strh	r3, [r0, #6]
 8018b9e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8018ba2:	7203      	strb	r3, [r0, #8]
 8018ba4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018ba8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8018bac:	7243      	strb	r3, [r0, #9]
 8018bae:	7a83      	ldrb	r3, [r0, #10]
 8018bb0:	6141      	str	r1, [r0, #20]
 8018bb2:	f365 0306 	bfi	r3, r5, #0, #7
 8018bb6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8018bba:	8302      	strh	r2, [r0, #24]
 8018bbc:	f365 13c7 	bfi	r3, r5, #7, #1
 8018bc0:	7283      	strb	r3, [r0, #10]
 8018bc2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8018bc6:	72c3      	strb	r3, [r0, #11]
 8018bc8:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8018bcc:	7303      	strb	r3, [r0, #12]
 8018bce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8018bd2:	81c3      	strh	r3, [r0, #14]
 8018bd4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8018bd8:	8203      	strh	r3, [r0, #16]
 8018bda:	4b01      	ldr	r3, [pc, #4]	@ (8018be0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8018bdc:	6003      	str	r3, [r0, #0]
 8018bde:	bd30      	pop	{r4, r5, pc}
 8018be0:	0802e414 	.word	0x0802e414

08018be4 <_ZNK8touchgfx9ConstFont4findEt>:
 8018be4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018be6:	6944      	ldr	r4, [r0, #20]
 8018be8:	b3bc      	cbz	r4, 8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018bea:	88a3      	ldrh	r3, [r4, #4]
 8018bec:	8b02      	ldrh	r2, [r0, #24]
 8018bee:	1acb      	subs	r3, r1, r3
 8018bf0:	f102 32ff 	add.w	r2, r2, #4294967295
 8018bf4:	d431      	bmi.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018bf6:	4293      	cmp	r3, r2
 8018bf8:	dd0c      	ble.n	8018c14 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8018bfa:	230e      	movs	r3, #14
 8018bfc:	fb03 4302 	mla	r3, r3, r2, r4
 8018c00:	889b      	ldrh	r3, [r3, #4]
 8018c02:	1a5b      	subs	r3, r3, r1
 8018c04:	1ad3      	subs	r3, r2, r3
 8018c06:	429a      	cmp	r2, r3
 8018c08:	db27      	blt.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018c0a:	2b00      	cmp	r3, #0
 8018c0c:	bfbc      	itt	lt
 8018c0e:	2302      	movlt	r3, #2
 8018c10:	fb92 f3f3 	sdivlt	r3, r2, r3
 8018c14:	2500      	movs	r5, #0
 8018c16:	260e      	movs	r6, #14
 8018c18:	4295      	cmp	r5, r2
 8018c1a:	dc1e      	bgt.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018c1c:	fb06 4003 	mla	r0, r6, r3, r4
 8018c20:	8887      	ldrh	r7, [r0, #4]
 8018c22:	42b9      	cmp	r1, r7
 8018c24:	d01a      	beq.n	8018c5c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8018c26:	d20d      	bcs.n	8018c44 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018c28:	1e5a      	subs	r2, r3, #1
 8018c2a:	4295      	cmp	r5, r2
 8018c2c:	dc15      	bgt.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018c2e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8018c32:	1a5b      	subs	r3, r3, r1
 8018c34:	1ad3      	subs	r3, r2, r3
 8018c36:	429a      	cmp	r2, r3
 8018c38:	db0f      	blt.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018c3a:	429d      	cmp	r5, r3
 8018c3c:	ddec      	ble.n	8018c18 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018c3e:	1953      	adds	r3, r2, r5
 8018c40:	105b      	asrs	r3, r3, #1
 8018c42:	e7e9      	b.n	8018c18 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018c44:	1c5d      	adds	r5, r3, #1
 8018c46:	42aa      	cmp	r2, r5
 8018c48:	db07      	blt.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018c4a:	8a43      	ldrh	r3, [r0, #18]
 8018c4c:	1acb      	subs	r3, r1, r3
 8018c4e:	442b      	add	r3, r5
 8018c50:	429d      	cmp	r5, r3
 8018c52:	dc02      	bgt.n	8018c5a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018c54:	429a      	cmp	r2, r3
 8018c56:	dadf      	bge.n	8018c18 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018c58:	e7f1      	b.n	8018c3e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8018c5a:	2000      	movs	r0, #0
 8018c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018c5e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8018c5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c60:	4604      	mov	r4, r0
 8018c62:	4617      	mov	r7, r2
 8018c64:	461e      	mov	r6, r3
 8018c66:	b911      	cbnz	r1, 8018c6e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8018c68:	2500      	movs	r5, #0
 8018c6a:	4628      	mov	r0, r5
 8018c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018c6e:	290a      	cmp	r1, #10
 8018c70:	d0fa      	beq.n	8018c68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018c72:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8018c76:	4291      	cmp	r1, r2
 8018c78:	d0f6      	beq.n	8018c68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018c7a:	f242 020b 	movw	r2, #8203	@ 0x200b
 8018c7e:	4291      	cmp	r1, r2
 8018c80:	d0f2      	beq.n	8018c68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018c82:	f7ff ffaf 	bl	8018be4 <_ZNK8touchgfx9ConstFont4findEt>
 8018c86:	4605      	mov	r5, r0
 8018c88:	b950      	cbnz	r0, 8018ca0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8018c8a:	6823      	ldr	r3, [r4, #0]
 8018c8c:	4620      	mov	r0, r4
 8018c8e:	691b      	ldr	r3, [r3, #16]
 8018c90:	4798      	blx	r3
 8018c92:	4601      	mov	r1, r0
 8018c94:	4620      	mov	r0, r4
 8018c96:	f7ff ffa5 	bl	8018be4 <_ZNK8touchgfx9ConstFont4findEt>
 8018c9a:	4605      	mov	r5, r0
 8018c9c:	2800      	cmp	r0, #0
 8018c9e:	d0e3      	beq.n	8018c68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018ca0:	6823      	ldr	r3, [r4, #0]
 8018ca2:	4629      	mov	r1, r5
 8018ca4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8018ca6:	4620      	mov	r0, r4
 8018ca8:	4798      	blx	r3
 8018caa:	6038      	str	r0, [r7, #0]
 8018cac:	6823      	ldr	r3, [r4, #0]
 8018cae:	4620      	mov	r0, r4
 8018cb0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018cb2:	4798      	blx	r3
 8018cb4:	7030      	strb	r0, [r6, #0]
 8018cb6:	e7d8      	b.n	8018c6a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08018cb8 <_ZN8touchgfx4clzuEm>:
 8018cb8:	4603      	mov	r3, r0
 8018cba:	b1c8      	cbz	r0, 8018cf0 <_ZN8touchgfx4clzuEm+0x38>
 8018cbc:	0c02      	lsrs	r2, r0, #16
 8018cbe:	0412      	lsls	r2, r2, #16
 8018cc0:	b9a2      	cbnz	r2, 8018cec <_ZN8touchgfx4clzuEm+0x34>
 8018cc2:	0403      	lsls	r3, r0, #16
 8018cc4:	2010      	movs	r0, #16
 8018cc6:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8018cca:	bf04      	itt	eq
 8018ccc:	021b      	lsleq	r3, r3, #8
 8018cce:	3008      	addeq	r0, #8
 8018cd0:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8018cd4:	bf04      	itt	eq
 8018cd6:	011b      	lsleq	r3, r3, #4
 8018cd8:	3004      	addeq	r0, #4
 8018cda:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8018cde:	bf04      	itt	eq
 8018ce0:	009b      	lsleq	r3, r3, #2
 8018ce2:	3002      	addeq	r0, #2
 8018ce4:	2b00      	cmp	r3, #0
 8018ce6:	db04      	blt.n	8018cf2 <_ZN8touchgfx4clzuEm+0x3a>
 8018ce8:	3001      	adds	r0, #1
 8018cea:	4770      	bx	lr
 8018cec:	2000      	movs	r0, #0
 8018cee:	e7ea      	b.n	8018cc6 <_ZN8touchgfx4clzuEm+0xe>
 8018cf0:	2020      	movs	r0, #32
 8018cf2:	4770      	bx	lr

08018cf4 <_ZN8touchgfx7muldivuEmmmRm>:
 8018cf4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8018cf8:	460f      	mov	r7, r1
 8018cfa:	4615      	mov	r5, r2
 8018cfc:	461e      	mov	r6, r3
 8018cfe:	4601      	mov	r1, r0
 8018d00:	b100      	cbz	r0, 8018d04 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8018d02:	b927      	cbnz	r7, 8018d0e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8018d04:	2000      	movs	r0, #0
 8018d06:	6030      	str	r0, [r6, #0]
 8018d08:	b002      	add	sp, #8
 8018d0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018d0e:	f7ff ffd3 	bl	8018cb8 <_ZN8touchgfx4clzuEm>
 8018d12:	b980      	cbnz	r0, 8018d36 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8018d14:	4638      	mov	r0, r7
 8018d16:	f7ff ffcf 	bl	8018cb8 <_ZN8touchgfx4clzuEm>
 8018d1a:	2800      	cmp	r0, #0
 8018d1c:	dd05      	ble.n	8018d2a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8018d1e:	4633      	mov	r3, r6
 8018d20:	462a      	mov	r2, r5
 8018d22:	4638      	mov	r0, r7
 8018d24:	f7ff ffe6 	bl	8018cf4 <_ZN8touchgfx7muldivuEmmmRm>
 8018d28:	e7ee      	b.n	8018d08 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018d2a:	f04f 33ff 	mov.w	r3, #4294967295
 8018d2e:	6033      	str	r3, [r6, #0]
 8018d30:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8018d34:	e7e8      	b.n	8018d08 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018d36:	fa37 f800 	lsrs.w	r8, r7, r0
 8018d3a:	fb07 f301 	mul.w	r3, r7, r1
 8018d3e:	d105      	bne.n	8018d4c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8018d40:	fbb3 f0f5 	udiv	r0, r3, r5
 8018d44:	fb05 3510 	mls	r5, r5, r0, r3
 8018d48:	6035      	str	r5, [r6, #0]
 8018d4a:	e7dd      	b.n	8018d08 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018d4c:	2301      	movs	r3, #1
 8018d4e:	fa01 fa00 	lsl.w	sl, r1, r0
 8018d52:	fa03 f000 	lsl.w	r0, r3, r0
 8018d56:	3801      	subs	r0, #1
 8018d58:	462a      	mov	r2, r5
 8018d5a:	4633      	mov	r3, r6
 8018d5c:	4038      	ands	r0, r7
 8018d5e:	f7ff ffc9 	bl	8018cf4 <_ZN8touchgfx7muldivuEmmmRm>
 8018d62:	fbba f9f5 	udiv	r9, sl, r5
 8018d66:	462a      	mov	r2, r5
 8018d68:	4607      	mov	r7, r0
 8018d6a:	ab01      	add	r3, sp, #4
 8018d6c:	fb05 a119 	mls	r1, r5, r9, sl
 8018d70:	4640      	mov	r0, r8
 8018d72:	f7ff ffbf 	bl	8018cf4 <_ZN8touchgfx7muldivuEmmmRm>
 8018d76:	9b01      	ldr	r3, [sp, #4]
 8018d78:	6832      	ldr	r2, [r6, #0]
 8018d7a:	fb08 f409 	mul.w	r4, r8, r9
 8018d7e:	441a      	add	r2, r3
 8018d80:	fbb2 f3f5 	udiv	r3, r2, r5
 8018d84:	441c      	add	r4, r3
 8018d86:	443c      	add	r4, r7
 8018d88:	4420      	add	r0, r4
 8018d8a:	fb05 2513 	mls	r5, r5, r3, r2
 8018d8e:	e7db      	b.n	8018d48 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08018d90 <_ZN8touchgfx6muldivElllRl>:
 8018d90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018d92:	2800      	cmp	r0, #0
 8018d94:	bfba      	itte	lt
 8018d96:	4240      	neglt	r0, r0
 8018d98:	f04f 34ff 	movlt.w	r4, #4294967295
 8018d9c:	2401      	movge	r4, #1
 8018d9e:	2900      	cmp	r1, #0
 8018da0:	bfbc      	itt	lt
 8018da2:	4249      	neglt	r1, r1
 8018da4:	4264      	neglt	r4, r4
 8018da6:	2a00      	cmp	r2, #0
 8018da8:	bfb6      	itet	lt
 8018daa:	4265      	neglt	r5, r4
 8018dac:	4625      	movge	r5, r4
 8018dae:	4252      	neglt	r2, r2
 8018db0:	4288      	cmp	r0, r1
 8018db2:	461e      	mov	r6, r3
 8018db4:	bfc2      	ittt	gt
 8018db6:	4603      	movgt	r3, r0
 8018db8:	4608      	movgt	r0, r1
 8018dba:	4619      	movgt	r1, r3
 8018dbc:	ab01      	add	r3, sp, #4
 8018dbe:	f7ff ff99 	bl	8018cf4 <_ZN8touchgfx7muldivuEmmmRm>
 8018dc2:	9b01      	ldr	r3, [sp, #4]
 8018dc4:	4368      	muls	r0, r5
 8018dc6:	435c      	muls	r4, r3
 8018dc8:	6034      	str	r4, [r6, #0]
 8018dca:	b002      	add	sp, #8
 8018dcc:	bd70      	pop	{r4, r5, r6, pc}

08018dce <_ZN8touchgfx6muldivElll>:
 8018dce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018dd0:	4606      	mov	r6, r0
 8018dd2:	ab01      	add	r3, sp, #4
 8018dd4:	460d      	mov	r5, r1
 8018dd6:	4614      	mov	r4, r2
 8018dd8:	f7ff ffda 	bl	8018d90 <_ZN8touchgfx6muldivElllRl>
 8018ddc:	2e00      	cmp	r6, #0
 8018dde:	db20      	blt.n	8018e22 <_ZN8touchgfx6muldivElll+0x54>
 8018de0:	bf14      	ite	ne
 8018de2:	2301      	movne	r3, #1
 8018de4:	2300      	moveq	r3, #0
 8018de6:	2d00      	cmp	r5, #0
 8018de8:	db1e      	blt.n	8018e28 <_ZN8touchgfx6muldivElll+0x5a>
 8018dea:	bf14      	ite	ne
 8018dec:	2201      	movne	r2, #1
 8018dee:	2200      	moveq	r2, #0
 8018df0:	2c00      	cmp	r4, #0
 8018df2:	fb03 f202 	mul.w	r2, r3, r2
 8018df6:	db1a      	blt.n	8018e2e <_ZN8touchgfx6muldivElll+0x60>
 8018df8:	bf14      	ite	ne
 8018dfa:	2301      	movne	r3, #1
 8018dfc:	2300      	moveq	r3, #0
 8018dfe:	4353      	muls	r3, r2
 8018e00:	2b01      	cmp	r3, #1
 8018e02:	d117      	bne.n	8018e34 <_ZN8touchgfx6muldivElll+0x66>
 8018e04:	9b01      	ldr	r3, [sp, #4]
 8018e06:	2c00      	cmp	r4, #0
 8018e08:	bfb8      	it	lt
 8018e0a:	4264      	neglt	r4, r4
 8018e0c:	2b00      	cmp	r3, #0
 8018e0e:	f104 0401 	add.w	r4, r4, #1
 8018e12:	bfb8      	it	lt
 8018e14:	425b      	neglt	r3, r3
 8018e16:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018e1a:	db00      	blt.n	8018e1e <_ZN8touchgfx6muldivElll+0x50>
 8018e1c:	3001      	adds	r0, #1
 8018e1e:	b002      	add	sp, #8
 8018e20:	bd70      	pop	{r4, r5, r6, pc}
 8018e22:	f04f 33ff 	mov.w	r3, #4294967295
 8018e26:	e7de      	b.n	8018de6 <_ZN8touchgfx6muldivElll+0x18>
 8018e28:	f04f 32ff 	mov.w	r2, #4294967295
 8018e2c:	e7e0      	b.n	8018df0 <_ZN8touchgfx6muldivElll+0x22>
 8018e2e:	f04f 33ff 	mov.w	r3, #4294967295
 8018e32:	e7e4      	b.n	8018dfe <_ZN8touchgfx6muldivElll+0x30>
 8018e34:	3301      	adds	r3, #1
 8018e36:	d1f2      	bne.n	8018e1e <_ZN8touchgfx6muldivElll+0x50>
 8018e38:	9b01      	ldr	r3, [sp, #4]
 8018e3a:	2c00      	cmp	r4, #0
 8018e3c:	bfb8      	it	lt
 8018e3e:	4264      	neglt	r4, r4
 8018e40:	2b00      	cmp	r3, #0
 8018e42:	bfb8      	it	lt
 8018e44:	425b      	neglt	r3, r3
 8018e46:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018e4a:	bfc8      	it	gt
 8018e4c:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8018e50:	e7e5      	b.n	8018e1e <_ZN8touchgfx6muldivElll+0x50>

08018e52 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8018e52:	2000      	movs	r0, #0
 8018e54:	4770      	bx	lr

08018e56 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8018e56:	2001      	movs	r0, #1
 8018e58:	4770      	bx	lr

08018e5a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8018e5a:	2002      	movs	r0, #2
 8018e5c:	4770      	bx	lr

08018e5e <_ZN8touchgfx6ScreenD1Ev>:
 8018e5e:	4770      	bx	lr

08018e60 <_ZN8touchgfx12GestureEventD1Ev>:
 8018e60:	4770      	bx	lr

08018e62 <_ZN8touchgfx9DragEventD1Ev>:
 8018e62:	4770      	bx	lr

08018e64 <_ZN8touchgfx10ClickEventD1Ev>:
 8018e64:	4770      	bx	lr

08018e66 <_ZN8touchgfx10ClickEventD0Ev>:
 8018e66:	b510      	push	{r4, lr}
 8018e68:	210c      	movs	r1, #12
 8018e6a:	4604      	mov	r4, r0
 8018e6c:	f010 ff3c 	bl	8029ce8 <_ZdlPvj>
 8018e70:	4620      	mov	r0, r4
 8018e72:	bd10      	pop	{r4, pc}

08018e74 <_ZN8touchgfx9DragEventD0Ev>:
 8018e74:	b510      	push	{r4, lr}
 8018e76:	2110      	movs	r1, #16
 8018e78:	4604      	mov	r4, r0
 8018e7a:	f010 ff35 	bl	8029ce8 <_ZdlPvj>
 8018e7e:	4620      	mov	r0, r4
 8018e80:	bd10      	pop	{r4, pc}

08018e82 <_ZN8touchgfx12GestureEventD0Ev>:
 8018e82:	b510      	push	{r4, lr}
 8018e84:	210c      	movs	r1, #12
 8018e86:	4604      	mov	r4, r0
 8018e88:	f010 ff2e 	bl	8029ce8 <_ZdlPvj>
 8018e8c:	4620      	mov	r0, r4
 8018e8e:	bd10      	pop	{r4, pc}

08018e90 <_ZN8touchgfx6ScreenD0Ev>:
 8018e90:	b510      	push	{r4, lr}
 8018e92:	213c      	movs	r1, #60	@ 0x3c
 8018e94:	4604      	mov	r4, r0
 8018e96:	f010 ff27 	bl	8029ce8 <_ZdlPvj>
 8018e9a:	4620      	mov	r0, r4
 8018e9c:	bd10      	pop	{r4, pc}
	...

08018ea0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8018ea0:	b530      	push	{r4, r5, lr}
 8018ea2:	460d      	mov	r5, r1
 8018ea4:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8018ea6:	b087      	sub	sp, #28
 8018ea8:	4604      	mov	r4, r0
 8018eaa:	b301      	cbz	r1, 8018eee <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018eac:	a801      	add	r0, sp, #4
 8018eae:	f7ff fb3b 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018eb2:	892a      	ldrh	r2, [r5, #8]
 8018eb4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8018eb8:	7928      	ldrb	r0, [r5, #4]
 8018eba:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8018ebe:	f88d 0010 	strb.w	r0, [sp, #16]
 8018ec2:	1ad2      	subs	r2, r2, r3
 8018ec4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8018ec6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8018ec8:	f8ad 1012 	strh.w	r1, [sp, #18]
 8018ecc:	441a      	add	r2, r3
 8018ece:	896b      	ldrh	r3, [r5, #10]
 8018ed0:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8018ed4:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018ed8:	1b5b      	subs	r3, r3, r5
 8018eda:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8018edc:	442b      	add	r3, r5
 8018ede:	4d05      	ldr	r5, [pc, #20]	@ (8018ef4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8018ee0:	9503      	str	r5, [sp, #12]
 8018ee2:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018ee6:	6803      	ldr	r3, [r0, #0]
 8018ee8:	a903      	add	r1, sp, #12
 8018eea:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8018eec:	4798      	blx	r3
 8018eee:	b007      	add	sp, #28
 8018ef0:	bd30      	pop	{r4, r5, pc}
 8018ef2:	bf00      	nop
 8018ef4:	0802e4a4 	.word	0x0802e4a4

08018ef8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8018ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018efc:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8018efe:	b08a      	sub	sp, #40	@ 0x28
 8018f00:	4604      	mov	r4, r0
 8018f02:	460d      	mov	r5, r1
 8018f04:	b113      	cbz	r3, 8018f0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8018f06:	790b      	ldrb	r3, [r1, #4]
 8018f08:	2b00      	cmp	r3, #0
 8018f0a:	d044      	beq.n	8018f96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018f0c:	f104 0804 	add.w	r8, r4, #4
 8018f10:	4641      	mov	r1, r8
 8018f12:	a803      	add	r0, sp, #12
 8018f14:	f7ff fb08 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018f18:	792b      	ldrb	r3, [r5, #4]
 8018f1a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018f1e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8018f22:	b983      	cbnz	r3, 8018f46 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8018f24:	892a      	ldrh	r2, [r5, #8]
 8018f26:	88e9      	ldrh	r1, [r5, #6]
 8018f28:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8018f2c:	1b92      	subs	r2, r2, r6
 8018f2e:	1bc9      	subs	r1, r1, r7
 8018f30:	9301      	str	r3, [sp, #4]
 8018f32:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8018f36:	9300      	str	r3, [sp, #0]
 8018f38:	b212      	sxth	r2, r2
 8018f3a:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8018f3e:	b209      	sxth	r1, r1
 8018f40:	4640      	mov	r0, r8
 8018f42:	f7f7 f9cf 	bl	80102e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8018f46:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8018f48:	b329      	cbz	r1, 8018f96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018f4a:	a805      	add	r0, sp, #20
 8018f4c:	f7ff faec 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018f50:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8018f54:	792b      	ldrb	r3, [r5, #4]
 8018f56:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8018f58:	f88d 3020 	strb.w	r3, [sp, #32]
 8018f5c:	1abf      	subs	r7, r7, r2
 8018f5e:	88ea      	ldrh	r2, [r5, #6]
 8018f60:	4417      	add	r7, r2
 8018f62:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8018f64:	4417      	add	r7, r2
 8018f66:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8018f6a:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8018f6e:	1ab6      	subs	r6, r6, r2
 8018f70:	892a      	ldrh	r2, [r5, #8]
 8018f72:	4416      	add	r6, r2
 8018f74:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8018f76:	4416      	add	r6, r2
 8018f78:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8018f7c:	4a07      	ldr	r2, [pc, #28]	@ (8018f9c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8018f7e:	9207      	str	r2, [sp, #28]
 8018f80:	2600      	movs	r6, #0
 8018f82:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8018f86:	6803      	ldr	r3, [r0, #0]
 8018f88:	a907      	add	r1, sp, #28
 8018f8a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8018f8c:	4798      	blx	r3
 8018f8e:	792b      	ldrb	r3, [r5, #4]
 8018f90:	b10b      	cbz	r3, 8018f96 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018f92:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8018f96:	b00a      	add	sp, #40	@ 0x28
 8018f98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018f9c:	0802e47c 	.word	0x0802e47c

08018fa0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8018fa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fa4:	460c      	mov	r4, r1
 8018fa6:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8018fa8:	b088      	sub	sp, #32
 8018faa:	4605      	mov	r5, r0
 8018fac:	2900      	cmp	r1, #0
 8018fae:	d06d      	beq.n	801908c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8018fb0:	4668      	mov	r0, sp
 8018fb2:	f7ff fab9 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018fb6:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8018fb8:	88e3      	ldrh	r3, [r4, #6]
 8018fba:	f9bd 8000 	ldrsh.w	r8, [sp]
 8018fbe:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8018fc2:	440b      	add	r3, r1
 8018fc4:	b21b      	sxth	r3, r3
 8018fc6:	4543      	cmp	r3, r8
 8018fc8:	db31      	blt.n	801902e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018fca:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8018fce:	44c4      	add	ip, r8
 8018fd0:	fa0f fc8c 	sxth.w	ip, ip
 8018fd4:	4563      	cmp	r3, ip
 8018fd6:	da2a      	bge.n	801902e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018fd8:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8018fda:	8926      	ldrh	r6, [r4, #8]
 8018fdc:	4416      	add	r6, r2
 8018fde:	b236      	sxth	r6, r6
 8018fe0:	42be      	cmp	r6, r7
 8018fe2:	db24      	blt.n	801902e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018fe4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018fe8:	4438      	add	r0, r7
 8018fea:	b200      	sxth	r0, r0
 8018fec:	4286      	cmp	r6, r0
 8018fee:	da1e      	bge.n	801902e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018ff0:	8963      	ldrh	r3, [r4, #10]
 8018ff2:	4419      	add	r1, r3
 8018ff4:	b209      	sxth	r1, r1
 8018ff6:	4541      	cmp	r1, r8
 8018ff8:	db08      	blt.n	801900c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018ffa:	4561      	cmp	r1, ip
 8018ffc:	da06      	bge.n	801900c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018ffe:	89a3      	ldrh	r3, [r4, #12]
 8019000:	441a      	add	r2, r3
 8019002:	b212      	sxth	r2, r2
 8019004:	42ba      	cmp	r2, r7
 8019006:	db01      	blt.n	801900c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019008:	4282      	cmp	r2, r0
 801900a:	db10      	blt.n	801902e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801900c:	4b21      	ldr	r3, [pc, #132]	@ (8019094 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801900e:	9304      	str	r3, [sp, #16]
 8019010:	2302      	movs	r3, #2
 8019012:	f88d 3014 	strb.w	r3, [sp, #20]
 8019016:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8019018:	2300      	movs	r3, #0
 801901a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801901e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8019022:	f8ad 301a 	strh.w	r3, [sp, #26]
 8019026:	6803      	ldr	r3, [r0, #0]
 8019028:	a904      	add	r1, sp, #16
 801902a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801902c:	4798      	blx	r3
 801902e:	1d29      	adds	r1, r5, #4
 8019030:	a802      	add	r0, sp, #8
 8019032:	f7ff fa79 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019036:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801903a:	88e0      	ldrh	r0, [r4, #6]
 801903c:	7921      	ldrb	r1, [r4, #4]
 801903e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8019042:	8922      	ldrh	r2, [r4, #8]
 8019044:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8019046:	f88d 1014 	strb.w	r1, [sp, #20]
 801904a:	eba3 0808 	sub.w	r8, r3, r8
 801904e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019052:	1bdf      	subs	r7, r3, r7
 8019054:	b2bb      	uxth	r3, r7
 8019056:	fa1f f888 	uxth.w	r8, r8
 801905a:	8967      	ldrh	r7, [r4, #10]
 801905c:	89a4      	ldrh	r4, [r4, #12]
 801905e:	4440      	add	r0, r8
 8019060:	4460      	add	r0, ip
 8019062:	441a      	add	r2, r3
 8019064:	44b8      	add	r8, r7
 8019066:	4423      	add	r3, r4
 8019068:	f8ad 0016 	strh.w	r0, [sp, #22]
 801906c:	4433      	add	r3, r6
 801906e:	4432      	add	r2, r6
 8019070:	44e0      	add	r8, ip
 8019072:	4c09      	ldr	r4, [pc, #36]	@ (8019098 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8019074:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8019076:	9404      	str	r4, [sp, #16]
 8019078:	f8ad 2018 	strh.w	r2, [sp, #24]
 801907c:	f8ad 801a 	strh.w	r8, [sp, #26]
 8019080:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019084:	6803      	ldr	r3, [r0, #0]
 8019086:	a904      	add	r1, sp, #16
 8019088:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801908a:	4798      	blx	r3
 801908c:	b008      	add	sp, #32
 801908e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019092:	bf00      	nop
 8019094:	0802e47c 	.word	0x0802e47c
 8019098:	0802e490 	.word	0x0802e490

0801909c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801909c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801909e:	4604      	mov	r4, r0
 80190a0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80190a4:	3201      	adds	r2, #1
 80190a6:	d112      	bne.n	80190ce <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80190a8:	6803      	ldr	r3, [r0, #0]
 80190aa:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80190ae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80190b2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80190b6:	2500      	movs	r5, #0
 80190b8:	9500      	str	r5, [sp, #0]
 80190ba:	466d      	mov	r5, sp
 80190bc:	4629      	mov	r1, r5
 80190be:	f8ad 2006 	strh.w	r2, [sp, #6]
 80190c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80190c4:	4798      	blx	r3
 80190c6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80190ca:	e884 0003 	stmia.w	r4, {r0, r1}
 80190ce:	4620      	mov	r0, r4
 80190d0:	b003      	add	sp, #12
 80190d2:	bd30      	pop	{r4, r5, pc}

080190d4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80190d4:	b513      	push	{r0, r1, r4, lr}
 80190d6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80190da:	3301      	adds	r3, #1
 80190dc:	4604      	mov	r4, r0
 80190de:	d109      	bne.n	80190f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80190e0:	4601      	mov	r1, r0
 80190e2:	4668      	mov	r0, sp
 80190e4:	f7ff fa20 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80190e8:	f8bd 3000 	ldrh.w	r3, [sp]
 80190ec:	8423      	strh	r3, [r4, #32]
 80190ee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80190f2:	8463      	strh	r3, [r4, #34]	@ 0x22
 80190f4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80190f8:	b002      	add	sp, #8
 80190fa:	bd10      	pop	{r4, pc}

080190fc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80190fc:	b513      	push	{r0, r1, r4, lr}
 80190fe:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8019102:	3301      	adds	r3, #1
 8019104:	4604      	mov	r4, r0
 8019106:	d109      	bne.n	801911c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8019108:	4601      	mov	r1, r0
 801910a:	4668      	mov	r0, sp
 801910c:	f7ff fa0c 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019110:	f8bd 3000 	ldrh.w	r3, [sp]
 8019114:	8423      	strh	r3, [r4, #32]
 8019116:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801911a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801911c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8019120:	b002      	add	sp, #8
 8019122:	bd10      	pop	{r4, pc}

08019124 <_ZN8touchgfx6ScreenC1Ev>:
 8019124:	b570      	push	{r4, r5, r6, lr}
 8019126:	4605      	mov	r5, r0
 8019128:	4b16      	ldr	r3, [pc, #88]	@ (8019184 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801912a:	f845 3b04 	str.w	r3, [r5], #4
 801912e:	2300      	movs	r3, #0
 8019130:	8103      	strh	r3, [r0, #8]
 8019132:	8143      	strh	r3, [r0, #10]
 8019134:	8183      	strh	r3, [r0, #12]
 8019136:	81c3      	strh	r3, [r0, #14]
 8019138:	8203      	strh	r3, [r0, #16]
 801913a:	8243      	strh	r3, [r0, #18]
 801913c:	8283      	strh	r3, [r0, #20]
 801913e:	82c3      	strh	r3, [r0, #22]
 8019140:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8019144:	6203      	str	r3, [r0, #32]
 8019146:	8483      	strh	r3, [r0, #36]	@ 0x24
 8019148:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801914a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801914e:	4a0e      	ldr	r2, [pc, #56]	@ (8019188 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8019150:	6343      	str	r3, [r0, #52]	@ 0x34
 8019152:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8019156:	4b0d      	ldr	r3, [pc, #52]	@ (801918c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8019158:	6042      	str	r2, [r0, #4]
 801915a:	f9b3 6000 	ldrsh.w	r6, [r3]
 801915e:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8019160:	4a0b      	ldr	r2, [pc, #44]	@ (8019190 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8019162:	4604      	mov	r4, r0
 8019164:	2101      	movs	r1, #1
 8019166:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801916a:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801916e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8019172:	4628      	mov	r0, r5
 8019174:	4798      	blx	r3
 8019176:	6863      	ldr	r3, [r4, #4]
 8019178:	4628      	mov	r0, r5
 801917a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801917c:	4631      	mov	r1, r6
 801917e:	4798      	blx	r3
 8019180:	4620      	mov	r0, r4
 8019182:	bd70      	pop	{r4, r5, r6, pc}
 8019184:	0802e4b8 	.word	0x0802e4b8
 8019188:	0802dd68 	.word	0x0802dd68
 801918c:	20013f56 	.word	0x20013f56
 8019190:	20013f54 	.word	0x20013f54

08019194 <_ZN8touchgfx6Screen4drawEv>:
 8019194:	b507      	push	{r0, r1, r2, lr}
 8019196:	4b09      	ldr	r3, [pc, #36]	@ (80191bc <_ZN8touchgfx6Screen4drawEv+0x28>)
 8019198:	f9b3 2000 	ldrsh.w	r2, [r3]
 801919c:	4b08      	ldr	r3, [pc, #32]	@ (80191c0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801919e:	f8ad 2004 	strh.w	r2, [sp, #4]
 80191a2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80191a6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80191aa:	6803      	ldr	r3, [r0, #0]
 80191ac:	2100      	movs	r1, #0
 80191ae:	9100      	str	r1, [sp, #0]
 80191b0:	689b      	ldr	r3, [r3, #8]
 80191b2:	4669      	mov	r1, sp
 80191b4:	4798      	blx	r3
 80191b6:	b003      	add	sp, #12
 80191b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80191bc:	20013f54 	.word	0x20013f54
 80191c0:	20013f56 	.word	0x20013f56

080191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80191c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191c8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80191cc:	2b00      	cmp	r3, #0
 80191ce:	b089      	sub	sp, #36	@ 0x24
 80191d0:	4680      	mov	r8, r0
 80191d2:	460c      	mov	r4, r1
 80191d4:	4615      	mov	r5, r2
 80191d6:	dd0e      	ble.n	80191f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80191d8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80191dc:	2b00      	cmp	r3, #0
 80191de:	dd0a      	ble.n	80191f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80191e0:	4628      	mov	r0, r5
 80191e2:	f7ff ff5b 	bl	801909c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80191e6:	4621      	mov	r1, r4
 80191e8:	f7fd ff85 	bl	80170f6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80191ec:	69eb      	ldr	r3, [r5, #28]
 80191ee:	b928      	cbnz	r0, 80191fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80191f0:	461d      	mov	r5, r3
 80191f2:	2b00      	cmp	r3, #0
 80191f4:	d1f4      	bne.n	80191e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80191f6:	b009      	add	sp, #36	@ 0x24
 80191f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191fc:	ae04      	add	r6, sp, #16
 80191fe:	2b00      	cmp	r3, #0
 8019200:	f000 80b5 	beq.w	801936e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019204:	682b      	ldr	r3, [r5, #0]
 8019206:	4629      	mov	r1, r5
 8019208:	68db      	ldr	r3, [r3, #12]
 801920a:	a802      	add	r0, sp, #8
 801920c:	4798      	blx	r3
 801920e:	4628      	mov	r0, r5
 8019210:	f7ff ff60 	bl	80190d4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8019214:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8019218:	4407      	add	r7, r0
 801921a:	4628      	mov	r0, r5
 801921c:	f7ff ff6e 	bl	80190fc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8019220:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019224:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8019228:	f8ad 2014 	strh.w	r2, [sp, #20]
 801922c:	4418      	add	r0, r3
 801922e:	4621      	mov	r1, r4
 8019230:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8019234:	f8ad 0012 	strh.w	r0, [sp, #18]
 8019238:	b23f      	sxth	r7, r7
 801923a:	4630      	mov	r0, r6
 801923c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019240:	f8ad 7010 	strh.w	r7, [sp, #16]
 8019244:	f7f7 f932 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8019248:	4628      	mov	r0, r5
 801924a:	f7ff ff27 	bl	801909c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801924e:	4602      	mov	r2, r0
 8019250:	e896 0003 	ldmia.w	r6, {r0, r1}
 8019254:	ab06      	add	r3, sp, #24
 8019256:	e883 0003 	stmia.w	r3, {r0, r1}
 801925a:	4611      	mov	r1, r2
 801925c:	4618      	mov	r0, r3
 801925e:	f7f7 f925 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8019262:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019266:	f9b4 1000 	ldrsh.w	r1, [r4]
 801926a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801926e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8019272:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8019276:	4299      	cmp	r1, r3
 8019278:	d10b      	bne.n	8019292 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801927a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801927e:	4552      	cmp	r2, sl
 8019280:	d107      	bne.n	8019292 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8019282:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8019286:	455a      	cmp	r2, fp
 8019288:	d103      	bne.n	8019292 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801928a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801928e:	454a      	cmp	r2, r9
 8019290:	d06d      	beq.n	801936e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019292:	f1bb 0f00 	cmp.w	fp, #0
 8019296:	dd65      	ble.n	8019364 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8019298:	f1b9 0f00 	cmp.w	r9, #0
 801929c:	dd62      	ble.n	8019364 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801929e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80192a2:	fa1f f08a 	uxth.w	r0, sl
 80192a6:	4552      	cmp	r2, sl
 80192a8:	9000      	str	r0, [sp, #0]
 80192aa:	da12      	bge.n	80192d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80192ac:	9301      	str	r3, [sp, #4]
 80192ae:	9b00      	ldr	r3, [sp, #0]
 80192b0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80192b4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80192b8:	1a9a      	subs	r2, r3, r2
 80192ba:	f8ad 1010 	strh.w	r1, [sp, #16]
 80192be:	f8ad 0014 	strh.w	r0, [sp, #20]
 80192c2:	f8ad 2016 	strh.w	r2, [sp, #22]
 80192c6:	69ea      	ldr	r2, [r5, #28]
 80192c8:	4631      	mov	r1, r6
 80192ca:	4640      	mov	r0, r8
 80192cc:	f7ff ff7a 	bl	80191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80192d0:	9b01      	ldr	r3, [sp, #4]
 80192d2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80192d6:	429a      	cmp	r2, r3
 80192d8:	b29f      	uxth	r7, r3
 80192da:	da0d      	bge.n	80192f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80192dc:	f8ad 2010 	strh.w	r2, [sp, #16]
 80192e0:	1aba      	subs	r2, r7, r2
 80192e2:	f8ad a012 	strh.w	sl, [sp, #18]
 80192e6:	f8ad 2014 	strh.w	r2, [sp, #20]
 80192ea:	f8ad 9016 	strh.w	r9, [sp, #22]
 80192ee:	69ea      	ldr	r2, [r5, #28]
 80192f0:	4631      	mov	r1, r6
 80192f2:	4640      	mov	r0, r8
 80192f4:	f7ff ff66 	bl	80191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80192f8:	8822      	ldrh	r2, [r4, #0]
 80192fa:	88a3      	ldrh	r3, [r4, #4]
 80192fc:	445f      	add	r7, fp
 80192fe:	4413      	add	r3, r2
 8019300:	b29b      	uxth	r3, r3
 8019302:	b2bf      	uxth	r7, r7
 8019304:	b23a      	sxth	r2, r7
 8019306:	b219      	sxth	r1, r3
 8019308:	4291      	cmp	r1, r2
 801930a:	dd0d      	ble.n	8019328 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801930c:	1bdb      	subs	r3, r3, r7
 801930e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019312:	f8ad a012 	strh.w	sl, [sp, #18]
 8019316:	f8ad 3014 	strh.w	r3, [sp, #20]
 801931a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801931e:	69ea      	ldr	r2, [r5, #28]
 8019320:	4631      	mov	r1, r6
 8019322:	4640      	mov	r0, r8
 8019324:	f7ff ff4e 	bl	80191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8019328:	88e2      	ldrh	r2, [r4, #6]
 801932a:	8863      	ldrh	r3, [r4, #2]
 801932c:	4413      	add	r3, r2
 801932e:	9a00      	ldr	r2, [sp, #0]
 8019330:	444a      	add	r2, r9
 8019332:	b29b      	uxth	r3, r3
 8019334:	fa1f f982 	uxth.w	r9, r2
 8019338:	fa0f f289 	sxth.w	r2, r9
 801933c:	b219      	sxth	r1, r3
 801933e:	428a      	cmp	r2, r1
 8019340:	da15      	bge.n	801936e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8019342:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019346:	f9b4 0000 	ldrsh.w	r0, [r4]
 801934a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801934e:	eba3 0309 	sub.w	r3, r3, r9
 8019352:	f8ad 0010 	strh.w	r0, [sp, #16]
 8019356:	f8ad 2012 	strh.w	r2, [sp, #18]
 801935a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801935e:	69ea      	ldr	r2, [r5, #28]
 8019360:	4631      	mov	r1, r6
 8019362:	e001      	b.n	8019368 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8019364:	69ea      	ldr	r2, [r5, #28]
 8019366:	4621      	mov	r1, r4
 8019368:	4640      	mov	r0, r8
 801936a:	f7ff ff2b 	bl	80191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801936e:	4628      	mov	r0, r5
 8019370:	f7ff fe94 	bl	801909c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8019374:	6861      	ldr	r1, [r4, #4]
 8019376:	4602      	mov	r2, r0
 8019378:	6820      	ldr	r0, [r4, #0]
 801937a:	4633      	mov	r3, r6
 801937c:	c303      	stmia	r3!, {r0, r1}
 801937e:	4611      	mov	r1, r2
 8019380:	4630      	mov	r0, r6
 8019382:	f7f7 f893 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8019386:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801938a:	2b00      	cmp	r3, #0
 801938c:	f77f af33 	ble.w	80191f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8019390:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8019394:	2b00      	cmp	r3, #0
 8019396:	f77f af2e 	ble.w	80191f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801939a:	4628      	mov	r0, r5
 801939c:	f7ff fe9a 	bl	80190d4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80193a0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80193a4:	1a18      	subs	r0, r3, r0
 80193a6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80193aa:	4628      	mov	r0, r5
 80193ac:	f7ff fea6 	bl	80190fc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80193b0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80193b4:	1a18      	subs	r0, r3, r0
 80193b6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80193ba:	682b      	ldr	r3, [r5, #0]
 80193bc:	4631      	mov	r1, r6
 80193be:	689b      	ldr	r3, [r3, #8]
 80193c0:	4628      	mov	r0, r5
 80193c2:	4798      	blx	r3
 80193c4:	e717      	b.n	80191f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080193c6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80193c6:	b570      	push	{r4, r5, r6, lr}
 80193c8:	460c      	mov	r4, r1
 80193ca:	b086      	sub	sp, #24
 80193cc:	1d06      	adds	r6, r0, #4
 80193ce:	2300      	movs	r3, #0
 80193d0:	4631      	mov	r1, r6
 80193d2:	4605      	mov	r5, r0
 80193d4:	a802      	add	r0, sp, #8
 80193d6:	9301      	str	r3, [sp, #4]
 80193d8:	f7ff f8a6 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80193dc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80193e0:	8822      	ldrh	r2, [r4, #0]
 80193e2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80193e6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80193ea:	f8ad 0014 	strh.w	r0, [sp, #20]
 80193ee:	1ad2      	subs	r2, r2, r3
 80193f0:	8863      	ldrh	r3, [r4, #2]
 80193f2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80193f6:	1a5b      	subs	r3, r3, r1
 80193f8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80193fc:	f8ad 1016 	strh.w	r1, [sp, #22]
 8019400:	aa01      	add	r2, sp, #4
 8019402:	a904      	add	r1, sp, #16
 8019404:	4630      	mov	r0, r6
 8019406:	f8ad 3012 	strh.w	r3, [sp, #18]
 801940a:	f7f7 f927 	bl	801065c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801940e:	9a01      	ldr	r2, [sp, #4]
 8019410:	b11a      	cbz	r2, 801941a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8019412:	4621      	mov	r1, r4
 8019414:	4628      	mov	r0, r5
 8019416:	f7ff fed5 	bl	80191c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801941a:	b006      	add	sp, #24
 801941c:	bd70      	pop	{r4, r5, r6, pc}

0801941e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801941e:	b530      	push	{r4, r5, lr}
 8019420:	4602      	mov	r2, r0
 8019422:	4604      	mov	r4, r0
 8019424:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8019428:	b085      	sub	sp, #20
 801942a:	460d      	mov	r5, r1
 801942c:	6851      	ldr	r1, [r2, #4]
 801942e:	466b      	mov	r3, sp
 8019430:	c303      	stmia	r3!, {r0, r1}
 8019432:	4629      	mov	r1, r5
 8019434:	4668      	mov	r0, sp
 8019436:	f7f7 f839 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 801943a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801943e:	b12b      	cbz	r3, 801944c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8019440:	4669      	mov	r1, sp
 8019442:	4620      	mov	r0, r4
 8019444:	f7ff ffbf 	bl	80193c6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8019448:	b005      	add	sp, #20
 801944a:	bd30      	pop	{r4, r5, pc}
 801944c:	3404      	adds	r4, #4
 801944e:	4621      	mov	r1, r4
 8019450:	a802      	add	r0, sp, #8
 8019452:	f7ff f869 	bl	8018528 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019456:	f8bd 3000 	ldrh.w	r3, [sp]
 801945a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801945e:	1a9b      	subs	r3, r3, r2
 8019460:	f8ad 3000 	strh.w	r3, [sp]
 8019464:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019468:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801946c:	4669      	mov	r1, sp
 801946e:	1a9b      	subs	r3, r3, r2
 8019470:	4620      	mov	r0, r4
 8019472:	f8ad 3002 	strh.w	r3, [sp, #2]
 8019476:	f7f7 f8b8 	bl	80105ea <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801947a:	e7e5      	b.n	8019448 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801947c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801947c:	680a      	ldr	r2, [r1, #0]
 801947e:	460b      	mov	r3, r1
 8019480:	6992      	ldr	r2, [r2, #24]
 8019482:	1d01      	adds	r1, r0, #4
 8019484:	4618      	mov	r0, r3
 8019486:	4710      	bx	r2

08019488 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8019488:	4298      	cmp	r0, r3
 801948a:	d200      	bcs.n	801948e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801948c:	b913      	cbnz	r3, 8019494 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801948e:	440a      	add	r2, r1
 8019490:	b210      	sxth	r0, r2
 8019492:	4770      	bx	lr
 8019494:	ee07 0a90 	vmov	s15, r0
 8019498:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801949c:	ee07 3a90 	vmov	s15, r3
 80194a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80194a4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80194a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80194ac:	ee37 7a66 	vsub.f32	s14, s14, s13
 80194b0:	ee07 2a90 	vmov	s15, r2
 80194b4:	ee67 5a07 	vmul.f32	s11, s14, s14
 80194b8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80194bc:	eee5 6a87 	vfma.f32	s13, s11, s14
 80194c0:	ee07 1a90 	vmov	s15, r1
 80194c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80194c8:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80194cc:	eee6 7a26 	vfma.f32	s15, s12, s13
 80194d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80194d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80194d8:	bfcc      	ite	gt
 80194da:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80194de:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80194e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80194e6:	ee17 3a90 	vmov	r3, s15
 80194ea:	b218      	sxth	r0, r3
 80194ec:	4770      	bx	lr

080194ee <_ZN8touchgfx12TextProviderC1Ev>:
 80194ee:	b538      	push	{r3, r4, r5, lr}
 80194f0:	2500      	movs	r5, #0
 80194f2:	2302      	movs	r3, #2
 80194f4:	4604      	mov	r4, r0
 80194f6:	e9c0 5500 	strd	r5, r5, [r0]
 80194fa:	7403      	strb	r3, [r0, #16]
 80194fc:	6145      	str	r5, [r0, #20]
 80194fe:	7605      	strb	r5, [r0, #24]
 8019500:	83c5      	strh	r5, [r0, #30]
 8019502:	8405      	strh	r5, [r0, #32]
 8019504:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8019506:	8705      	strh	r5, [r0, #56]	@ 0x38
 8019508:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801950a:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801950e:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8019512:	220e      	movs	r2, #14
 8019514:	4629      	mov	r1, r5
 8019516:	304c      	adds	r0, #76	@ 0x4c
 8019518:	f011 fe3d 	bl	802b196 <memset>
 801951c:	2301      	movs	r3, #1
 801951e:	4620      	mov	r0, r4
 8019520:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8019524:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8019528:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801952c:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8019530:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8019534:	f7ed ff02 	bl	800733c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8019538:	4620      	mov	r0, r4
 801953a:	bd38      	pop	{r3, r4, r5, pc}

0801953c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801953c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801953e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019542:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8019544:	fab0 f080 	clz	r0, r0
 8019548:	0940      	lsrs	r0, r0, #5
 801954a:	4770      	bx	lr

0801954c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801954c:	b530      	push	{r4, r5, lr}
 801954e:	2500      	movs	r5, #0
 8019550:	2401      	movs	r4, #1
 8019552:	6843      	ldr	r3, [r0, #4]
 8019554:	b913      	cbnz	r3, 801955c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8019556:	6803      	ldr	r3, [r0, #0]
 8019558:	b313      	cbz	r3, 80195a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801955a:	6043      	str	r3, [r0, #4]
 801955c:	7e03      	ldrb	r3, [r0, #24]
 801955e:	b143      	cbz	r3, 8019572 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8019560:	6943      	ldr	r3, [r0, #20]
 8019562:	b12b      	cbz	r3, 8019570 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8019564:	881a      	ldrh	r2, [r3, #0]
 8019566:	b11a      	cbz	r2, 8019570 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8019568:	1c9a      	adds	r2, r3, #2
 801956a:	6142      	str	r2, [r0, #20]
 801956c:	8818      	ldrh	r0, [r3, #0]
 801956e:	bd30      	pop	{r4, r5, pc}
 8019570:	7605      	strb	r5, [r0, #24]
 8019572:	6843      	ldr	r3, [r0, #4]
 8019574:	8819      	ldrh	r1, [r3, #0]
 8019576:	b199      	cbz	r1, 80195a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8019578:	1c9a      	adds	r2, r3, #2
 801957a:	2902      	cmp	r1, #2
 801957c:	6042      	str	r2, [r0, #4]
 801957e:	d1f5      	bne.n	801956c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8019580:	7c03      	ldrb	r3, [r0, #16]
 8019582:	2b01      	cmp	r3, #1
 8019584:	d8e5      	bhi.n	8019552 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8019586:	1c5a      	adds	r2, r3, #1
 8019588:	3302      	adds	r3, #2
 801958a:	7402      	strb	r2, [r0, #16]
 801958c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8019590:	6143      	str	r3, [r0, #20]
 8019592:	2b00      	cmp	r3, #0
 8019594:	d0dd      	beq.n	8019552 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8019596:	881b      	ldrh	r3, [r3, #0]
 8019598:	2b00      	cmp	r3, #0
 801959a:	d0da      	beq.n	8019552 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801959c:	7604      	strb	r4, [r0, #24]
 801959e:	e7d8      	b.n	8019552 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80195a0:	2000      	movs	r0, #0
 80195a2:	e7e4      	b.n	801956e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80195a4:	b430      	push	{r4, r5}
 80195a6:	6001      	str	r1, [r0, #0]
 80195a8:	2100      	movs	r1, #0
 80195aa:	6041      	str	r1, [r0, #4]
 80195ac:	6815      	ldr	r5, [r2, #0]
 80195ae:	6085      	str	r5, [r0, #8]
 80195b0:	6852      	ldr	r2, [r2, #4]
 80195b2:	6443      	str	r3, [r0, #68]	@ 0x44
 80195b4:	9b02      	ldr	r3, [sp, #8]
 80195b6:	60c2      	str	r2, [r0, #12]
 80195b8:	7401      	strb	r1, [r0, #16]
 80195ba:	6141      	str	r1, [r0, #20]
 80195bc:	7601      	strb	r1, [r0, #24]
 80195be:	8701      	strh	r1, [r0, #56]	@ 0x38
 80195c0:	8401      	strh	r1, [r0, #32]
 80195c2:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80195c6:	6483      	str	r3, [r0, #72]	@ 0x48
 80195c8:	bc30      	pop	{r4, r5}
 80195ca:	f7ed beb7 	b.w	800733c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080195ce <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80195ce:	b408      	push	{r3}
 80195d0:	b510      	push	{r4, lr}
 80195d2:	b085      	sub	sp, #20
 80195d4:	ac07      	add	r4, sp, #28
 80195d6:	f854 3b04 	ldr.w	r3, [r4], #4
 80195da:	9300      	str	r3, [sp, #0]
 80195dc:	4613      	mov	r3, r2
 80195de:	4622      	mov	r2, r4
 80195e0:	9403      	str	r4, [sp, #12]
 80195e2:	f7ff ffdf 	bl	80195a4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80195e6:	b005      	add	sp, #20
 80195e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80195ec:	b001      	add	sp, #4
 80195ee:	4770      	bx	lr

080195f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80195f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80195f2:	4605      	mov	r5, r0
 80195f4:	4608      	mov	r0, r1
 80195f6:	b1e9      	cbz	r1, 8019634 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80195f8:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80195fc:	460b      	mov	r3, r1
 80195fe:	f101 0708 	add.w	r7, r1, #8
 8019602:	4622      	mov	r2, r4
 8019604:	6818      	ldr	r0, [r3, #0]
 8019606:	6859      	ldr	r1, [r3, #4]
 8019608:	4626      	mov	r6, r4
 801960a:	c603      	stmia	r6!, {r0, r1}
 801960c:	3308      	adds	r3, #8
 801960e:	42bb      	cmp	r3, r7
 8019610:	4634      	mov	r4, r6
 8019612:	d1f7      	bne.n	8019604 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8019614:	6818      	ldr	r0, [r3, #0]
 8019616:	6030      	str	r0, [r6, #0]
 8019618:	889b      	ldrh	r3, [r3, #4]
 801961a:	80b3      	strh	r3, [r6, #4]
 801961c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8019620:	015b      	lsls	r3, r3, #5
 8019622:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8019626:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 801962a:	430b      	orrs	r3, r1
 801962c:	425b      	negs	r3, r3
 801962e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8019632:	4610      	mov	r0, r2
 8019634:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019636 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8019636:	b538      	push	{r3, r4, r5, lr}
 8019638:	460c      	mov	r4, r1
 801963a:	6811      	ldr	r1, [r2, #0]
 801963c:	4610      	mov	r0, r2
 801963e:	68cd      	ldr	r5, [r1, #12]
 8019640:	4619      	mov	r1, r3
 8019642:	47a8      	blx	r5
 8019644:	2800      	cmp	r0, #0
 8019646:	bf08      	it	eq
 8019648:	4620      	moveq	r0, r4
 801964a:	bd38      	pop	{r3, r4, r5, pc}

0801964c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801964c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019650:	468c      	mov	ip, r1
 8019652:	4605      	mov	r5, r0
 8019654:	4614      	mov	r4, r2
 8019656:	b942      	cbnz	r2, 801966a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8019658:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801965c:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8019660:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8019664:	4620      	mov	r0, r4
 8019666:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801966a:	7b50      	ldrb	r0, [r2, #13]
 801966c:	8893      	ldrh	r3, [r2, #4]
 801966e:	0106      	lsls	r6, r0, #4
 8019670:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8019674:	79e6      	ldrb	r6, [r4, #7]
 8019676:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801967a:	4316      	orrs	r6, r2
 801967c:	185a      	adds	r2, r3, r1
 801967e:	b291      	uxth	r1, r2
 8019680:	291d      	cmp	r1, #29
 8019682:	b2b7      	uxth	r7, r6
 8019684:	d87e      	bhi.n	8019784 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8019686:	2201      	movs	r2, #1
 8019688:	408a      	lsls	r2, r1
 801968a:	498a      	ldr	r1, [pc, #552]	@ (80198b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 801968c:	420a      	tst	r2, r1
 801968e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8019692:	d12d      	bne.n	80196f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8019694:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8019698:	d074      	beq.n	8019784 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801969a:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801969e:	4623      	mov	r3, r4
 80196a0:	f104 0e08 	add.w	lr, r4, #8
 80196a4:	4614      	mov	r4, r2
 80196a6:	6818      	ldr	r0, [r3, #0]
 80196a8:	6859      	ldr	r1, [r3, #4]
 80196aa:	4694      	mov	ip, r2
 80196ac:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80196b0:	3308      	adds	r3, #8
 80196b2:	4573      	cmp	r3, lr
 80196b4:	4662      	mov	r2, ip
 80196b6:	d1f6      	bne.n	80196a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80196b8:	6818      	ldr	r0, [r3, #0]
 80196ba:	f8cc 0000 	str.w	r0, [ip]
 80196be:	889b      	ldrh	r3, [r3, #4]
 80196c0:	f8ac 3004 	strh.w	r3, [ip, #4]
 80196c4:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80196c8:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80196cc:	b2b3      	uxth	r3, r6
 80196ce:	1aca      	subs	r2, r1, r3
 80196d0:	b292      	uxth	r2, r2
 80196d2:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80196d6:	10d2      	asrs	r2, r2, #3
 80196d8:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80196dc:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80196e0:	4302      	orrs	r2, r0
 80196e2:	1bcf      	subs	r7, r1, r7
 80196e4:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80196e8:	1afb      	subs	r3, r7, r3
 80196ea:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80196ee:	e7b9      	b.n	8019664 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80196f0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80196f4:	4623      	mov	r3, r4
 80196f6:	f104 0808 	add.w	r8, r4, #8
 80196fa:	4614      	mov	r4, r2
 80196fc:	6818      	ldr	r0, [r3, #0]
 80196fe:	6859      	ldr	r1, [r3, #4]
 8019700:	4696      	mov	lr, r2
 8019702:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8019706:	3308      	adds	r3, #8
 8019708:	4543      	cmp	r3, r8
 801970a:	4672      	mov	r2, lr
 801970c:	d1f6      	bne.n	80196fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 801970e:	6818      	ldr	r0, [r3, #0]
 8019710:	f8ce 0000 	str.w	r0, [lr]
 8019714:	889b      	ldrh	r3, [r3, #4]
 8019716:	f8ae 3004 	strh.w	r3, [lr, #4]
 801971a:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 801971c:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8019720:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8019722:	f640 6333 	movw	r3, #3635	@ 0xe33
 8019726:	4299      	cmp	r1, r3
 8019728:	d111      	bne.n	801974e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801972a:	f8dc 3000 	ldr.w	r3, [ip]
 801972e:	4660      	mov	r0, ip
 8019730:	68db      	ldr	r3, [r3, #12]
 8019732:	4798      	blx	r3
 8019734:	7b41      	ldrb	r1, [r0, #13]
 8019736:	00cb      	lsls	r3, r1, #3
 8019738:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801973c:	7a03      	ldrb	r3, [r0, #8]
 801973e:	4313      	orrs	r3, r2
 8019740:	064a      	lsls	r2, r1, #25
 8019742:	bf44      	itt	mi
 8019744:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8019748:	b21b      	sxthmi	r3, r3
 801974a:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801974e:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8019752:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8019756:	443b      	add	r3, r7
 8019758:	4433      	add	r3, r6
 801975a:	b29b      	uxth	r3, r3
 801975c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8019760:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8019764:	10db      	asrs	r3, r3, #3
 8019766:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801976a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801976e:	4313      	orrs	r3, r2
 8019770:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8019774:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8019778:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 801977c:	1a9b      	subs	r3, r3, r2
 801977e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8019782:	e76f      	b.n	8019664 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8019784:	f023 0204 	bic.w	r2, r3, #4
 8019788:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801978c:	428a      	cmp	r2, r1
 801978e:	d003      	beq.n	8019798 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8019790:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8019794:	4293      	cmp	r3, r2
 8019796:	d137      	bne.n	8019808 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8019798:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 801979c:	4622      	mov	r2, r4
 801979e:	f104 0808 	add.w	r8, r4, #8
 80197a2:	4634      	mov	r4, r6
 80197a4:	6810      	ldr	r0, [r2, #0]
 80197a6:	6851      	ldr	r1, [r2, #4]
 80197a8:	46b6      	mov	lr, r6
 80197aa:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80197ae:	3208      	adds	r2, #8
 80197b0:	4542      	cmp	r2, r8
 80197b2:	4676      	mov	r6, lr
 80197b4:	d1f6      	bne.n	80197a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 80197b6:	6810      	ldr	r0, [r2, #0]
 80197b8:	f8ce 0000 	str.w	r0, [lr]
 80197bc:	8892      	ldrh	r2, [r2, #4]
 80197be:	f8ae 2004 	strh.w	r2, [lr, #4]
 80197c2:	3b01      	subs	r3, #1
 80197c4:	b29b      	uxth	r3, r3
 80197c6:	4662      	mov	r2, ip
 80197c8:	4621      	mov	r1, r4
 80197ca:	4628      	mov	r0, r5
 80197cc:	f7ff ff33 	bl	8019636 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80197d0:	7b41      	ldrb	r1, [r0, #13]
 80197d2:	00cb      	lsls	r3, r1, #3
 80197d4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80197d8:	7a03      	ldrb	r3, [r0, #8]
 80197da:	0648      	lsls	r0, r1, #25
 80197dc:	ea43 0302 	orr.w	r3, r3, r2
 80197e0:	bf44      	itt	mi
 80197e2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80197e6:	b21b      	sxthmi	r3, r3
 80197e8:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80197ec:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80197f0:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80197f4:	005b      	lsls	r3, r3, #1
 80197f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80197fa:	4313      	orrs	r3, r2
 80197fc:	115a      	asrs	r2, r3, #5
 80197fe:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8019802:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8019806:	e046      	b.n	8019896 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8019808:	00c2      	lsls	r2, r0, #3
 801980a:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 801980e:	7a22      	ldrb	r2, [r4, #8]
 8019810:	430a      	orrs	r2, r1
 8019812:	0641      	lsls	r1, r0, #25
 8019814:	bf44      	itt	mi
 8019816:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801981a:	b212      	sxthmi	r2, r2
 801981c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8019820:	f640 6109 	movw	r1, #3593	@ 0xe09
 8019824:	f023 0210 	bic.w	r2, r3, #16
 8019828:	428a      	cmp	r2, r1
 801982a:	d003      	beq.n	8019834 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 801982c:	f640 6213 	movw	r2, #3603	@ 0xe13
 8019830:	4293      	cmp	r3, r2
 8019832:	d13d      	bne.n	80198b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8019834:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8019838:	f104 0808 	add.w	r8, r4, #8
 801983c:	4696      	mov	lr, r2
 801983e:	6820      	ldr	r0, [r4, #0]
 8019840:	6861      	ldr	r1, [r4, #4]
 8019842:	4616      	mov	r6, r2
 8019844:	c603      	stmia	r6!, {r0, r1}
 8019846:	3408      	adds	r4, #8
 8019848:	4544      	cmp	r4, r8
 801984a:	4632      	mov	r2, r6
 801984c:	d1f7      	bne.n	801983e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801984e:	6820      	ldr	r0, [r4, #0]
 8019850:	6030      	str	r0, [r6, #0]
 8019852:	88a1      	ldrh	r1, [r4, #4]
 8019854:	80b1      	strh	r1, [r6, #4]
 8019856:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801985a:	0076      	lsls	r6, r6, #1
 801985c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8019860:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8019864:	4316      	orrs	r6, r2
 8019866:	f640 6213 	movw	r2, #3603	@ 0xe13
 801986a:	4293      	cmp	r3, r2
 801986c:	bf1a      	itte	ne
 801986e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8019872:	b29b      	uxthne	r3, r3
 8019874:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8019878:	4662      	mov	r2, ip
 801987a:	4671      	mov	r1, lr
 801987c:	4628      	mov	r0, r5
 801987e:	4674      	mov	r4, lr
 8019880:	f7ff fed9 	bl	8019636 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019884:	7b43      	ldrb	r3, [r0, #13]
 8019886:	7a82      	ldrb	r2, [r0, #10]
 8019888:	005b      	lsls	r3, r3, #1
 801988a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801988e:	4313      	orrs	r3, r2
 8019890:	1af6      	subs	r6, r6, r3
 8019892:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8019896:	7b61      	ldrb	r1, [r4, #13]
 8019898:	00cb      	lsls	r3, r1, #3
 801989a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801989e:	7a23      	ldrb	r3, [r4, #8]
 80198a0:	4313      	orrs	r3, r2
 80198a2:	064a      	lsls	r2, r1, #25
 80198a4:	bf44      	itt	mi
 80198a6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80198aa:	b21b      	sxthmi	r3, r3
 80198ac:	1bdb      	subs	r3, r3, r7
 80198ae:	e71c      	b.n	80196ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80198b0:	2300      	movs	r3, #0
 80198b2:	e7a6      	b.n	8019802 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 80198b4:	3fc00079 	.word	0x3fc00079

080198b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80198b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80198bc:	4604      	mov	r4, r0
 80198be:	b942      	cbnz	r2, 80198d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80198c0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80198c4:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80198c8:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80198cc:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80198d0:	e047      	b.n	8019962 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80198d2:	7b51      	ldrb	r1, [r2, #13]
 80198d4:	8893      	ldrh	r3, [r2, #4]
 80198d6:	010d      	lsls	r5, r1, #4
 80198d8:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80198dc:	79d5      	ldrb	r5, [r2, #7]
 80198de:	4305      	orrs	r5, r0
 80198e0:	2d04      	cmp	r5, #4
 80198e2:	bfcc      	ite	gt
 80198e4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80198e8:	f04f 0e01 	movle.w	lr, #1
 80198ec:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80198f0:	f200 80ab 	bhi.w	8019a4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80198f4:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80198f8:	4283      	cmp	r3, r0
 80198fa:	d216      	bcs.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80198fc:	f240 605b 	movw	r0, #1627	@ 0x65b
 8019900:	4283      	cmp	r3, r0
 8019902:	d859      	bhi.n	80199b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8019904:	f240 6057 	movw	r0, #1623	@ 0x657
 8019908:	4283      	cmp	r3, r0
 801990a:	d20e      	bcs.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801990c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8019910:	d24a      	bcs.n	80199a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8019912:	f240 604e 	movw	r0, #1614	@ 0x64e
 8019916:	4283      	cmp	r3, r0
 8019918:	d207      	bcs.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801991a:	f240 601a 	movw	r0, #1562	@ 0x61a
 801991e:	4283      	cmp	r3, r0
 8019920:	d02a      	beq.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019922:	d821      	bhi.n	8019968 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8019924:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8019928:	d35b      	bcc.n	80199e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801992a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801992e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8019932:	f040 80d0 	bne.w	8019ad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8019936:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801993a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801993e:	f040 80ca 	bne.w	8019ad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8019942:	00cb      	lsls	r3, r1, #3
 8019944:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8019948:	7a13      	ldrb	r3, [r2, #8]
 801994a:	0649      	lsls	r1, r1, #25
 801994c:	ea43 0300 	orr.w	r3, r3, r0
 8019950:	bf44      	itt	mi
 8019952:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8019956:	b21b      	sxthmi	r3, r3
 8019958:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801995c:	1b5d      	subs	r5, r3, r5
 801995e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8019962:	4610      	mov	r0, r2
 8019964:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019968:	f240 604b 	movw	r0, #1611	@ 0x64b
 801996c:	4283      	cmp	r3, r0
 801996e:	d338      	bcc.n	80199e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019970:	f240 604c 	movw	r0, #1612	@ 0x64c
 8019974:	4283      	cmp	r3, r0
 8019976:	d9d8      	bls.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019978:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 801997c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8019980:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8019984:	f040 80f2 	bne.w	8019b6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019988:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801998c:	f040 80ee 	bne.w	8019b6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019990:	00cb      	lsls	r3, r1, #3
 8019992:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8019996:	7a13      	ldrb	r3, [r2, #8]
 8019998:	064e      	lsls	r6, r1, #25
 801999a:	ea43 0300 	orr.w	r3, r3, r0
 801999e:	bf44      	itt	mi
 80199a0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80199a4:	b21b      	sxthmi	r3, r3
 80199a6:	e7d9      	b.n	801995c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80199a8:	f240 6054 	movw	r0, #1620	@ 0x654
 80199ac:	4283      	cmp	r3, r0
 80199ae:	d8e3      	bhi.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80199b0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80199b4:	d9e0      	bls.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80199b6:	e7b8      	b.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80199b8:	f240 6074 	movw	r0, #1652	@ 0x674
 80199bc:	4283      	cmp	r3, r0
 80199be:	d0b4      	beq.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80199c0:	d82d      	bhi.n	8019a1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80199c2:	f240 605e 	movw	r0, #1630	@ 0x65e
 80199c6:	4283      	cmp	r3, r0
 80199c8:	d804      	bhi.n	80199d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80199ca:	f240 605d 	movw	r0, #1629	@ 0x65d
 80199ce:	4283      	cmp	r3, r0
 80199d0:	d3d2      	bcc.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80199d2:	e7aa      	b.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80199d4:	f240 605f 	movw	r0, #1631	@ 0x65f
 80199d8:	4283      	cmp	r3, r0
 80199da:	d0cd      	beq.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80199dc:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80199e0:	d0a3      	beq.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80199e2:	00cb      	lsls	r3, r1, #3
 80199e4:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80199e8:	7a13      	ldrb	r3, [r2, #8]
 80199ea:	0649      	lsls	r1, r1, #25
 80199ec:	ea43 0300 	orr.w	r3, r3, r0
 80199f0:	bf44      	itt	mi
 80199f2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80199f6:	b21b      	sxthmi	r3, r3
 80199f8:	1b5d      	subs	r5, r3, r5
 80199fa:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80199fe:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8019a02:	7b53      	ldrb	r3, [r2, #13]
 8019a04:	015b      	lsls	r3, r3, #5
 8019a06:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8019a0a:	7993      	ldrb	r3, [r2, #6]
 8019a0c:	430b      	orrs	r3, r1
 8019a0e:	005b      	lsls	r3, r3, #1
 8019a10:	2105      	movs	r1, #5
 8019a12:	fb93 f3f1 	sdiv	r3, r3, r1
 8019a16:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8019a1a:	440b      	add	r3, r1
 8019a1c:	e756      	b.n	80198cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8019a1e:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8019a22:	4283      	cmp	r3, r0
 8019a24:	d809      	bhi.n	8019a3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8019a26:	f240 60df 	movw	r0, #1759	@ 0x6df
 8019a2a:	4283      	cmp	r3, r0
 8019a2c:	f4bf af7d 	bcs.w	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019a30:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8019a34:	2b05      	cmp	r3, #5
 8019a36:	d8d4      	bhi.n	80199e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019a38:	e777      	b.n	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019a3a:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8019a3e:	4283      	cmp	r3, r0
 8019a40:	d09a      	beq.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019a42:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8019a46:	4283      	cmp	r3, r0
 8019a48:	e7ca      	b.n	80199e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8019a4a:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8019a4e:	d22b      	bcs.n	8019aa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8019a50:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8019a54:	4283      	cmp	r3, r0
 8019a56:	d28f      	bcs.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019a58:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8019a5c:	4283      	cmp	r3, r0
 8019a5e:	d816      	bhi.n	8019a8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8019a60:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8019a64:	4283      	cmp	r3, r0
 8019a66:	f4bf af60 	bcs.w	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019a6a:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8019a6e:	4283      	cmp	r3, r0
 8019a70:	d80a      	bhi.n	8019a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8019a72:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8019a76:	4283      	cmp	r3, r0
 8019a78:	f4bf af57 	bcs.w	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019a7c:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8019a80:	4283      	cmp	r3, r0
 8019a82:	f43f af79 	beq.w	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019a86:	e7ac      	b.n	80199e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019a88:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8019a8c:	e7f8      	b.n	8019a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8019a8e:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8019a92:	4283      	cmp	r3, r0
 8019a94:	d802      	bhi.n	8019a9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8019a96:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8019a9a:	e798      	b.n	80199ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8019a9c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8019aa0:	4283      	cmp	r3, r0
 8019aa2:	f47f af42 	bne.w	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019aa6:	e767      	b.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019aa8:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8019aac:	4283      	cmp	r3, r0
 8019aae:	f43f af63 	beq.w	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019ab2:	d802      	bhi.n	8019aba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8019ab4:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8019ab8:	e7f2      	b.n	8019aa0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8019aba:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8019abe:	4283      	cmp	r3, r0
 8019ac0:	d805      	bhi.n	8019ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8019ac2:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8019ac6:	4283      	cmp	r3, r0
 8019ac8:	f4ff af2f 	bcc.w	801992a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019acc:	e754      	b.n	8019978 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019ace:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8019ad2:	4283      	cmp	r3, r0
 8019ad4:	e7af      	b.n	8019a36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8019ad6:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8019ada:	4617      	mov	r7, r2
 8019adc:	f102 0808 	add.w	r8, r2, #8
 8019ae0:	4666      	mov	r6, ip
 8019ae2:	6838      	ldr	r0, [r7, #0]
 8019ae4:	6879      	ldr	r1, [r7, #4]
 8019ae6:	46e6      	mov	lr, ip
 8019ae8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8019aec:	3708      	adds	r7, #8
 8019aee:	4547      	cmp	r7, r8
 8019af0:	46f4      	mov	ip, lr
 8019af2:	d1f6      	bne.n	8019ae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8019af4:	6838      	ldr	r0, [r7, #0]
 8019af6:	f8ce 0000 	str.w	r0, [lr]
 8019afa:	88b9      	ldrh	r1, [r7, #4]
 8019afc:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019b00:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8019b04:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8019b08:	d009      	beq.n	8019b1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8019b0a:	7b51      	ldrb	r1, [r2, #13]
 8019b0c:	7992      	ldrb	r2, [r2, #6]
 8019b0e:	0149      	lsls	r1, r1, #5
 8019b10:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8019b14:	4311      	orrs	r1, r2
 8019b16:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019b1a:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8019b1e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8019b22:	b2ad      	uxth	r5, r5
 8019b24:	d00d      	beq.n	8019b42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8019b26:	442b      	add	r3, r5
 8019b28:	b29b      	uxth	r3, r3
 8019b2a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8019b2e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8019b32:	10db      	asrs	r3, r3, #3
 8019b34:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8019b38:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8019b3c:	4313      	orrs	r3, r2
 8019b3e:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8019b42:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8019b46:	00cb      	lsls	r3, r1, #3
 8019b48:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019b4c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8019b50:	064f      	lsls	r7, r1, #25
 8019b52:	ea43 0302 	orr.w	r3, r3, r2
 8019b56:	bf44      	itt	mi
 8019b58:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8019b5c:	b21b      	sxthmi	r3, r3
 8019b5e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8019b62:	1b5b      	subs	r3, r3, r5
 8019b64:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8019b68:	4632      	mov	r2, r6
 8019b6a:	e6fa      	b.n	8019962 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8019b6c:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8019b70:	4617      	mov	r7, r2
 8019b72:	f102 0908 	add.w	r9, r2, #8
 8019b76:	4666      	mov	r6, ip
 8019b78:	6838      	ldr	r0, [r7, #0]
 8019b7a:	6879      	ldr	r1, [r7, #4]
 8019b7c:	46e0      	mov	r8, ip
 8019b7e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8019b82:	3708      	adds	r7, #8
 8019b84:	454f      	cmp	r7, r9
 8019b86:	46c4      	mov	ip, r8
 8019b88:	d1f6      	bne.n	8019b78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8019b8a:	6838      	ldr	r0, [r7, #0]
 8019b8c:	f8c8 0000 	str.w	r0, [r8]
 8019b90:	88b9      	ldrh	r1, [r7, #4]
 8019b92:	f8a8 1004 	strh.w	r1, [r8, #4]
 8019b96:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8019b9a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8019b9e:	d009      	beq.n	8019bb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8019ba0:	7b51      	ldrb	r1, [r2, #13]
 8019ba2:	7992      	ldrb	r2, [r2, #6]
 8019ba4:	0149      	lsls	r1, r1, #5
 8019ba6:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8019baa:	4311      	orrs	r1, r2
 8019bac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019bb0:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8019bb4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8019bb8:	d00e      	beq.n	8019bd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8019bba:	eba3 030e 	sub.w	r3, r3, lr
 8019bbe:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8019bc2:	b29b      	uxth	r3, r3
 8019bc4:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8019bc8:	10db      	asrs	r3, r3, #3
 8019bca:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8019bce:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8019bd2:	4313      	orrs	r3, r2
 8019bd4:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8019bd8:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8019bdc:	00cb      	lsls	r3, r1, #3
 8019bde:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019be2:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8019be6:	0648      	lsls	r0, r1, #25
 8019be8:	ea43 0302 	orr.w	r3, r3, r2
 8019bec:	bf44      	itt	mi
 8019bee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8019bf2:	b21b      	sxthmi	r3, r3
 8019bf4:	1b5d      	subs	r5, r3, r5
 8019bf6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8019bfa:	e7b5      	b.n	8019b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08019bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8019bfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019c00:	461e      	mov	r6, r3
 8019c02:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8019c04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019c08:	4604      	mov	r4, r0
 8019c0a:	4617      	mov	r7, r2
 8019c0c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8019c10:	f7ed fb52 	bl	80072b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019c14:	4605      	mov	r5, r0
 8019c16:	b918      	cbnz	r0, 8019c20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8019c18:	6030      	str	r0, [r6, #0]
 8019c1a:	4628      	mov	r0, r5
 8019c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019c20:	683b      	ldr	r3, [r7, #0]
 8019c22:	4601      	mov	r1, r0
 8019c24:	68db      	ldr	r3, [r3, #12]
 8019c26:	4638      	mov	r0, r7
 8019c28:	4798      	blx	r3
 8019c2a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8019c2e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8019c32:	4602      	mov	r2, r0
 8019c34:	6030      	str	r0, [r6, #0]
 8019c36:	d213      	bcs.n	8019c60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8019c38:	4643      	mov	r3, r8
 8019c3a:	4639      	mov	r1, r7
 8019c3c:	4620      	mov	r0, r4
 8019c3e:	f7ff fe3b 	bl	80198b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019c42:	6030      	str	r0, [r6, #0]
 8019c44:	6833      	ldr	r3, [r6, #0]
 8019c46:	b143      	cbz	r3, 8019c5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8019c48:	7b5a      	ldrb	r2, [r3, #13]
 8019c4a:	7a9b      	ldrb	r3, [r3, #10]
 8019c4c:	0052      	lsls	r2, r2, #1
 8019c4e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8019c52:	4313      	orrs	r3, r2
 8019c54:	bf0c      	ite	eq
 8019c56:	2301      	moveq	r3, #1
 8019c58:	2300      	movne	r3, #0
 8019c5a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8019c5e:	e7dc      	b.n	8019c1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019c60:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8019c64:	b29b      	uxth	r3, r3
 8019c66:	2b7f      	cmp	r3, #127	@ 0x7f
 8019c68:	d804      	bhi.n	8019c74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8019c6a:	4639      	mov	r1, r7
 8019c6c:	4620      	mov	r0, r4
 8019c6e:	f7ff fced 	bl	801964c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019c72:	e7e6      	b.n	8019c42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8019c74:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8019c78:	2b00      	cmp	r3, #0
 8019c7a:	d0e3      	beq.n	8019c44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019c7c:	f640 1302 	movw	r3, #2306	@ 0x902
 8019c80:	429d      	cmp	r5, r3
 8019c82:	d1df      	bne.n	8019c44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019c84:	4601      	mov	r1, r0
 8019c86:	4620      	mov	r0, r4
 8019c88:	f7ff fcb2 	bl	80195f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019c8c:	e7d9      	b.n	8019c42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08019c8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8019c8e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019c92:	461e      	mov	r6, r3
 8019c94:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8019c96:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019c9a:	4604      	mov	r4, r0
 8019c9c:	4617      	mov	r7, r2
 8019c9e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8019ca2:	f7ed fb09 	bl	80072b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019ca6:	4605      	mov	r5, r0
 8019ca8:	b918      	cbnz	r0, 8019cb2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8019caa:	6030      	str	r0, [r6, #0]
 8019cac:	4628      	mov	r0, r5
 8019cae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019cb2:	683b      	ldr	r3, [r7, #0]
 8019cb4:	4601      	mov	r1, r0
 8019cb6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8019cba:	4638      	mov	r0, r7
 8019cbc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8019cc0:	47c8      	blx	r9
 8019cc2:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8019cc6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8019cca:	4602      	mov	r2, r0
 8019ccc:	6030      	str	r0, [r6, #0]
 8019cce:	d213      	bcs.n	8019cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8019cd0:	4643      	mov	r3, r8
 8019cd2:	4639      	mov	r1, r7
 8019cd4:	4620      	mov	r0, r4
 8019cd6:	f7ff fdef 	bl	80198b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019cda:	6030      	str	r0, [r6, #0]
 8019cdc:	6833      	ldr	r3, [r6, #0]
 8019cde:	b143      	cbz	r3, 8019cf2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8019ce0:	7b5a      	ldrb	r2, [r3, #13]
 8019ce2:	7a9b      	ldrb	r3, [r3, #10]
 8019ce4:	0052      	lsls	r2, r2, #1
 8019ce6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8019cea:	4313      	orrs	r3, r2
 8019cec:	bf0c      	ite	eq
 8019cee:	2301      	moveq	r3, #1
 8019cf0:	2300      	movne	r3, #0
 8019cf2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8019cf6:	e7d9      	b.n	8019cac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8019cf8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8019cfc:	b29b      	uxth	r3, r3
 8019cfe:	2b7f      	cmp	r3, #127	@ 0x7f
 8019d00:	d804      	bhi.n	8019d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8019d02:	4639      	mov	r1, r7
 8019d04:	4620      	mov	r0, r4
 8019d06:	f7ff fca1 	bl	801964c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019d0a:	e7e6      	b.n	8019cda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8019d0c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8019d10:	2b00      	cmp	r3, #0
 8019d12:	d0e3      	beq.n	8019cdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019d14:	f640 1302 	movw	r3, #2306	@ 0x902
 8019d18:	429d      	cmp	r5, r3
 8019d1a:	d1df      	bne.n	8019cdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019d1c:	4601      	mov	r1, r0
 8019d1e:	4620      	mov	r0, r4
 8019d20:	f7ff fc66 	bl	80195f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019d24:	e7d9      	b.n	8019cda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08019d26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8019d26:	b510      	push	{r4, lr}
 8019d28:	4604      	mov	r4, r0
 8019d2a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8019d2e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8019d30:	b1f1      	cbz	r1, 8019d70 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019d32:	2b0a      	cmp	r3, #10
 8019d34:	d02f      	beq.n	8019d96 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019d36:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8019d38:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8019d3c:	3901      	subs	r1, #1
 8019d3e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8019d40:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8019d44:	1c51      	adds	r1, r2, #1
 8019d46:	b289      	uxth	r1, r1
 8019d48:	2901      	cmp	r1, #1
 8019d4a:	bf84      	itt	hi
 8019d4c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8019d50:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8019d52:	f103 0201 	add.w	r2, r3, #1
 8019d56:	8722      	strh	r2, [r4, #56]	@ 0x38
 8019d58:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8019d5a:	bf98      	it	ls
 8019d5c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8019d5e:	4413      	add	r3, r2
 8019d60:	b29b      	uxth	r3, r3
 8019d62:	2b09      	cmp	r3, #9
 8019d64:	bf88      	it	hi
 8019d66:	3b0a      	subhi	r3, #10
 8019d68:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019d6c:	8458      	strh	r0, [r3, #34]	@ 0x22
 8019d6e:	e7dc      	b.n	8019d2a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8019d70:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8019d72:	2b0a      	cmp	r3, #10
 8019d74:	d00f      	beq.n	8019d96 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019d76:	4620      	mov	r0, r4
 8019d78:	f7ff fbe8 	bl	801954c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8019d7c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8019d7e:	1c5a      	adds	r2, r3, #1
 8019d80:	8722      	strh	r2, [r4, #56]	@ 0x38
 8019d82:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8019d84:	4413      	add	r3, r2
 8019d86:	b29b      	uxth	r3, r3
 8019d88:	2b09      	cmp	r3, #9
 8019d8a:	bf88      	it	hi
 8019d8c:	3b0a      	subhi	r3, #10
 8019d8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019d92:	8458      	strh	r0, [r3, #34]	@ 0x22
 8019d94:	e7ec      	b.n	8019d70 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019d96:	bd10      	pop	{r4, pc}

08019d98 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8019d98:	b538      	push	{r3, r4, r5, lr}
 8019d9a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8019d9c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8019da0:	4604      	mov	r4, r0
 8019da2:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8019da4:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8019da6:	3a01      	subs	r2, #1
 8019da8:	8702      	strh	r2, [r0, #56]	@ 0x38
 8019daa:	1c5a      	adds	r2, r3, #1
 8019dac:	b292      	uxth	r2, r2
 8019dae:	2a09      	cmp	r2, #9
 8019db0:	bf86      	itte	hi
 8019db2:	3b09      	subhi	r3, #9
 8019db4:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8019db6:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8019db8:	f7ff ffb5 	bl	8019d26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8019dbc:	8c23      	ldrh	r3, [r4, #32]
 8019dbe:	2b01      	cmp	r3, #1
 8019dc0:	bf9c      	itt	ls
 8019dc2:	3301      	addls	r3, #1
 8019dc4:	8423      	strhls	r3, [r4, #32]
 8019dc6:	8be3      	ldrh	r3, [r4, #30]
 8019dc8:	b90b      	cbnz	r3, 8019dce <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8019dca:	2302      	movs	r3, #2
 8019dcc:	83e3      	strh	r3, [r4, #30]
 8019dce:	8be3      	ldrh	r3, [r4, #30]
 8019dd0:	3b01      	subs	r3, #1
 8019dd2:	b29b      	uxth	r3, r3
 8019dd4:	83e3      	strh	r3, [r4, #30]
 8019dd6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019dda:	4628      	mov	r0, r5
 8019ddc:	8365      	strh	r5, [r4, #26]
 8019dde:	bd38      	pop	{r3, r4, r5, pc}

08019de0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8019de0:	428a      	cmp	r2, r1
 8019de2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019de6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8019de8:	d931      	bls.n	8019e4e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8019dea:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8019dec:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8019df0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8019df4:	19ee      	adds	r6, r5, r7
 8019df6:	1a54      	subs	r4, r2, r1
 8019df8:	3e01      	subs	r6, #1
 8019dfa:	fa1f fe84 	uxth.w	lr, r4
 8019dfe:	b2b4      	uxth	r4, r6
 8019e00:	eba4 090e 	sub.w	r9, r4, lr
 8019e04:	fa1f f989 	uxth.w	r9, r9
 8019e08:	2c09      	cmp	r4, #9
 8019e0a:	4626      	mov	r6, r4
 8019e0c:	bf88      	it	hi
 8019e0e:	f1a4 060a 	subhi.w	r6, r4, #10
 8019e12:	f1bc 0f00 	cmp.w	ip, #0
 8019e16:	bf08      	it	eq
 8019e18:	f04f 0c02 	moveq.w	ip, #2
 8019e1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019e20:	f10c 3cff 	add.w	ip, ip, #4294967295
 8019e24:	fa1f fc8c 	uxth.w	ip, ip
 8019e28:	3c01      	subs	r4, #1
 8019e2a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8019e2e:	b2a4      	uxth	r4, r4
 8019e30:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8019e34:	454c      	cmp	r4, r9
 8019e36:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8019e3a:	d1e5      	bne.n	8019e08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8019e3c:	eba5 050e 	sub.w	r5, r5, lr
 8019e40:	eb0e 0408 	add.w	r4, lr, r8
 8019e44:	8705      	strh	r5, [r0, #56]	@ 0x38
 8019e46:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8019e4a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8019e4e:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8019e50:	1a64      	subs	r4, r4, r1
 8019e52:	4439      	add	r1, r7
 8019e54:	b289      	uxth	r1, r1
 8019e56:	2909      	cmp	r1, #9
 8019e58:	bf88      	it	hi
 8019e5a:	390a      	subhi	r1, #10
 8019e5c:	8704      	strh	r4, [r0, #56]	@ 0x38
 8019e5e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8019e60:	250a      	movs	r5, #10
 8019e62:	b18a      	cbz	r2, 8019e88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8019e64:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8019e66:	3a01      	subs	r2, #1
 8019e68:	b292      	uxth	r2, r2
 8019e6a:	3101      	adds	r1, #1
 8019e6c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8019e70:	8701      	strh	r1, [r0, #56]	@ 0x38
 8019e72:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8019e74:	b901      	cbnz	r1, 8019e78 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8019e76:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8019e78:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8019e7a:	3901      	subs	r1, #1
 8019e7c:	b289      	uxth	r1, r1
 8019e7e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8019e80:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8019e84:	844c      	strh	r4, [r1, #34]	@ 0x22
 8019e86:	e7ec      	b.n	8019e62 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8019e88:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019e8c:	f7ff bf4b 	b.w	8019d26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08019e90 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8019e90:	b570      	push	{r4, r5, r6, lr}
 8019e92:	2500      	movs	r5, #0
 8019e94:	4295      	cmp	r5, r2
 8019e96:	d011      	beq.n	8019ebc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8019e98:	8bc4      	ldrh	r4, [r0, #30]
 8019e9a:	f831 6b02 	ldrh.w	r6, [r1], #2
 8019e9e:	4414      	add	r4, r2
 8019ea0:	3c01      	subs	r4, #1
 8019ea2:	1b64      	subs	r4, r4, r5
 8019ea4:	b2a4      	uxth	r4, r4
 8019ea6:	2c01      	cmp	r4, #1
 8019ea8:	bf88      	it	hi
 8019eaa:	3c02      	subhi	r4, #2
 8019eac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019eb0:	8b64      	ldrh	r4, [r4, #26]
 8019eb2:	42b4      	cmp	r4, r6
 8019eb4:	d117      	bne.n	8019ee6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8019eb6:	3501      	adds	r5, #1
 8019eb8:	b2ad      	uxth	r5, r5
 8019eba:	e7eb      	b.n	8019e94 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8019ebc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019ec0:	2400      	movs	r4, #0
 8019ec2:	4413      	add	r3, r2
 8019ec4:	b2a2      	uxth	r2, r4
 8019ec6:	429a      	cmp	r2, r3
 8019ec8:	da0f      	bge.n	8019eea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8019eca:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8019ecc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8019ed0:	4432      	add	r2, r6
 8019ed2:	b292      	uxth	r2, r2
 8019ed4:	2a09      	cmp	r2, #9
 8019ed6:	bf88      	it	hi
 8019ed8:	3a0a      	subhi	r2, #10
 8019eda:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019ede:	3401      	adds	r4, #1
 8019ee0:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8019ee2:	42aa      	cmp	r2, r5
 8019ee4:	d0ee      	beq.n	8019ec4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8019ee6:	2000      	movs	r0, #0
 8019ee8:	bd70      	pop	{r4, r5, r6, pc}
 8019eea:	2001      	movs	r0, #1
 8019eec:	e7fc      	b.n	8019ee8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08019eee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8019eee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ef2:	4605      	mov	r5, r0
 8019ef4:	4616      	mov	r6, r2
 8019ef6:	1c8c      	adds	r4, r1, #2
 8019ef8:	8809      	ldrh	r1, [r1, #0]
 8019efa:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8019efe:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019f02:	42b3      	cmp	r3, r6
 8019f04:	d124      	bne.n	8019f50 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8019f06:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8019f0a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8019f0e:	f001 070f 	and.w	r7, r1, #15
 8019f12:	f8cd 8000 	str.w	r8, [sp]
 8019f16:	464b      	mov	r3, r9
 8019f18:	4652      	mov	r2, sl
 8019f1a:	4621      	mov	r1, r4
 8019f1c:	4628      	mov	r0, r5
 8019f1e:	f7ff ffb7 	bl	8019e90 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019f22:	4683      	mov	fp, r0
 8019f24:	b168      	cbz	r0, 8019f42 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8019f26:	eb0a 0109 	add.w	r1, sl, r9
 8019f2a:	4441      	add	r1, r8
 8019f2c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019f30:	463a      	mov	r2, r7
 8019f32:	4649      	mov	r1, r9
 8019f34:	4628      	mov	r0, r5
 8019f36:	f7ff ff53 	bl	8019de0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8019f3a:	4658      	mov	r0, fp
 8019f3c:	b003      	add	sp, #12
 8019f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f42:	eb07 010a 	add.w	r1, r7, sl
 8019f46:	4449      	add	r1, r9
 8019f48:	4441      	add	r1, r8
 8019f4a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8019f4e:	e7d2      	b.n	8019ef6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8019f50:	f04f 0b00 	mov.w	fp, #0
 8019f54:	e7f1      	b.n	8019f3a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08019f56 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8019f56:	b570      	push	{r4, r5, r6, lr}
 8019f58:	8810      	ldrh	r0, [r2, #0]
 8019f5a:	4298      	cmp	r0, r3
 8019f5c:	d817      	bhi.n	8019f8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019f5e:	1e48      	subs	r0, r1, #1
 8019f60:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019f64:	4298      	cmp	r0, r3
 8019f66:	d312      	bcc.n	8019f8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019f68:	2400      	movs	r4, #0
 8019f6a:	428c      	cmp	r4, r1
 8019f6c:	d20f      	bcs.n	8019f8e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019f6e:	1860      	adds	r0, r4, r1
 8019f70:	1040      	asrs	r0, r0, #1
 8019f72:	0085      	lsls	r5, r0, #2
 8019f74:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8019f78:	42b3      	cmp	r3, r6
 8019f7a:	d902      	bls.n	8019f82 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8019f7c:	3001      	adds	r0, #1
 8019f7e:	b284      	uxth	r4, r0
 8019f80:	e7f3      	b.n	8019f6a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019f82:	d201      	bcs.n	8019f88 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8019f84:	b281      	uxth	r1, r0
 8019f86:	e7f0      	b.n	8019f6a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019f88:	442a      	add	r2, r5
 8019f8a:	8850      	ldrh	r0, [r2, #2]
 8019f8c:	bd70      	pop	{r4, r5, r6, pc}
 8019f8e:	2000      	movs	r0, #0
 8019f90:	e7fc      	b.n	8019f8c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08019f92 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8019f92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019f96:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8019f98:	886f      	ldrh	r7, [r5, #2]
 8019f9a:	4604      	mov	r4, r0
 8019f9c:	087f      	lsrs	r7, r7, #1
 8019f9e:	260b      	movs	r6, #11
 8019fa0:	3e01      	subs	r6, #1
 8019fa2:	d013      	beq.n	8019fcc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019fa4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8019fa6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019faa:	462a      	mov	r2, r5
 8019fac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8019fb0:	4639      	mov	r1, r7
 8019fb2:	4643      	mov	r3, r8
 8019fb4:	4620      	mov	r0, r4
 8019fb6:	f7ff ffce 	bl	8019f56 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8019fba:	b138      	cbz	r0, 8019fcc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019fbc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8019fc0:	4642      	mov	r2, r8
 8019fc2:	4620      	mov	r0, r4
 8019fc4:	f7ff ff93 	bl	8019eee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8019fc8:	2800      	cmp	r0, #0
 8019fca:	d1e9      	bne.n	8019fa0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8019fcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019fd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8019fd0:	b570      	push	{r4, r5, r6, lr}
 8019fd2:	694a      	ldr	r2, [r1, #20]
 8019fd4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8019fd6:	684b      	ldr	r3, [r1, #4]
 8019fd8:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8019fda:	1b54      	subs	r4, r2, r5
 8019fdc:	f000 8106 	beq.w	801a1ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019fe0:	1b9b      	subs	r3, r3, r6
 8019fe2:	d003      	beq.n	8019fec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019fe4:	4363      	muls	r3, r4
 8019fe6:	2210      	movs	r2, #16
 8019fe8:	fb93 f3f2 	sdiv	r3, r3, r2
 8019fec:	680c      	ldr	r4, [r1, #0]
 8019fee:	698a      	ldr	r2, [r1, #24]
 8019ff0:	1b65      	subs	r5, r4, r5
 8019ff2:	f000 80fd 	beq.w	801a1f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019ff6:	1b92      	subs	r2, r2, r6
 8019ff8:	d003      	beq.n	801a002 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019ffa:	436a      	muls	r2, r5
 8019ffc:	2410      	movs	r4, #16
 8019ffe:	fb92 f2f4 	sdiv	r2, r2, r4
 801a002:	1a9b      	subs	r3, r3, r2
 801a004:	ee07 3a90 	vmov	s15, r3
 801a008:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 801a22c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801a00c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a010:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a014:	ee67 7a84 	vmul.f32	s15, s15, s8
 801a018:	460a      	mov	r2, r1
 801a01a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801a01e:	4603      	mov	r3, r0
 801a020:	f100 040c 	add.w	r4, r0, #12
 801a024:	eeb1 6a43 	vneg.f32	s12, s6
 801a028:	edd2 7a02 	vldr	s15, [r2, #8]
 801a02c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801a030:	3214      	adds	r2, #20
 801a032:	ece3 6a01 	vstmia	r3!, {s13}
 801a036:	ed52 7a02 	vldr	s15, [r2, #-8]
 801a03a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a03e:	429c      	cmp	r4, r3
 801a040:	edc3 7a02 	vstr	s15, [r3, #8]
 801a044:	ed52 7a01 	vldr	s15, [r2, #-4]
 801a048:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a04c:	edc3 7a05 	vstr	s15, [r3, #20]
 801a050:	d1ea      	bne.n	801a028 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801a052:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801a054:	698b      	ldr	r3, [r1, #24]
 801a056:	edd0 4a02 	vldr	s9, [r0, #8]
 801a05a:	edd0 3a00 	vldr	s7, [r0]
 801a05e:	edd0 6a01 	vldr	s13, [r0, #4]
 801a062:	ed90 5a05 	vldr	s10, [r0, #20]
 801a066:	ed90 2a03 	vldr	s4, [r0, #12]
 801a06a:	edd0 5a04 	vldr	s11, [r0, #16]
 801a06e:	ed90 1a07 	vldr	s2, [r0, #28]
 801a072:	edd0 2a06 	vldr	s5, [r0, #24]
 801a076:	1a9b      	subs	r3, r3, r2
 801a078:	ee07 3a90 	vmov	s15, r3
 801a07c:	684b      	ldr	r3, [r1, #4]
 801a07e:	1a9b      	subs	r3, r3, r2
 801a080:	ee07 3a10 	vmov	s14, r3
 801a084:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a088:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801a08c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801a090:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801a094:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a098:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801a09c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a0a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801a0a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 801a0a8:	ee32 5a45 	vsub.f32	s10, s4, s10
 801a0ac:	ee67 7a83 	vmul.f32	s15, s15, s6
 801a0b0:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801a0b4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801a0b6:	694a      	ldr	r2, [r1, #20]
 801a0b8:	1b13      	subs	r3, r2, r4
 801a0ba:	ee07 3a10 	vmov	s14, r3
 801a0be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a0c2:	680b      	ldr	r3, [r1, #0]
 801a0c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a0c8:	1b1b      	subs	r3, r3, r4
 801a0ca:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801a0ce:	ee07 3a10 	vmov	s14, r3
 801a0d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a0d6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a0da:	eee6 4a87 	vfma.f32	s9, s13, s14
 801a0de:	ee64 4a86 	vmul.f32	s9, s9, s12
 801a0e2:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801a0e6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801a0e8:	698b      	ldr	r3, [r1, #24]
 801a0ea:	1a9b      	subs	r3, r3, r2
 801a0ec:	ee06 3a90 	vmov	s13, r3
 801a0f0:	684b      	ldr	r3, [r1, #4]
 801a0f2:	1a9b      	subs	r3, r3, r2
 801a0f4:	ee07 3a10 	vmov	s14, r3
 801a0f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801a0fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a100:	ee66 6a84 	vmul.f32	s13, s13, s8
 801a104:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a108:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801a10c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a110:	ee66 6a83 	vmul.f32	s13, s13, s6
 801a114:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801a118:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801a11a:	694a      	ldr	r2, [r1, #20]
 801a11c:	1b13      	subs	r3, r2, r4
 801a11e:	ee07 3a10 	vmov	s14, r3
 801a122:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a126:	680b      	ldr	r3, [r1, #0]
 801a128:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a12c:	1b1b      	subs	r3, r3, r4
 801a12e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801a132:	ee07 3a10 	vmov	s14, r3
 801a136:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a13a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a13e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801a142:	edd0 5a08 	vldr	s11, [r0, #32]
 801a146:	ee25 5a06 	vmul.f32	s10, s10, s12
 801a14a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801a14e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801a152:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801a154:	698b      	ldr	r3, [r1, #24]
 801a156:	1a9b      	subs	r3, r3, r2
 801a158:	ee07 3a10 	vmov	s14, r3
 801a15c:	684b      	ldr	r3, [r1, #4]
 801a15e:	1a9b      	subs	r3, r3, r2
 801a160:	ee01 3a90 	vmov	s3, r3
 801a164:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a168:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801a16c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a170:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801a174:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801a178:	ee61 1a84 	vmul.f32	s3, s3, s8
 801a17c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801a180:	ee27 7a03 	vmul.f32	s14, s14, s6
 801a184:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801a188:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801a18a:	694a      	ldr	r2, [r1, #20]
 801a18c:	1b13      	subs	r3, r2, r4
 801a18e:	ee03 3a10 	vmov	s6, r3
 801a192:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801a196:	680b      	ldr	r3, [r1, #0]
 801a198:	ee23 3a04 	vmul.f32	s6, s6, s8
 801a19c:	1b1b      	subs	r3, r3, r4
 801a19e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801a1a2:	ee03 3a10 	vmov	s6, r3
 801a1a6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801a1aa:	ee23 4a04 	vmul.f32	s8, s6, s8
 801a1ae:	eee1 5a04 	vfma.f32	s11, s2, s8
 801a1b2:	ee25 6a86 	vmul.f32	s12, s11, s12
 801a1b6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801a1ba:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801a1be:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801a1c2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a1c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1ca:	dd13      	ble.n	801a1f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801a1cc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801a1d0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801a1d4:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801a1d6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801a1da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a1de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1e2:	dd15      	ble.n	801a210 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801a1e4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801a1e8:	6403      	str	r3, [r0, #64]	@ 0x40
 801a1ea:	bd70      	pop	{r4, r5, r6, pc}
 801a1ec:	4623      	mov	r3, r4
 801a1ee:	e6fd      	b.n	8019fec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801a1f0:	462a      	mov	r2, r5
 801a1f2:	e706      	b.n	801a002 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801a1f4:	d502      	bpl.n	801a1fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801a1f6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801a1fa:	e7e9      	b.n	801a1d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801a1fc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801a200:	eea3 2a85 	vfma.f32	s4, s7, s10
 801a204:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801a208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a20c:	dade      	bge.n	801a1cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801a20e:	e7f2      	b.n	801a1f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801a210:	d502      	bpl.n	801a218 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801a212:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801a216:	e7e7      	b.n	801a1e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801a218:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801a21c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801a220:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801a224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a228:	dadc      	bge.n	801a1e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801a22a:	e7f2      	b.n	801a212 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801a22c:	3d800000 	.word	0x3d800000

0801a230 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801a230:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a234:	2714      	movs	r7, #20
 801a236:	435f      	muls	r7, r3
 801a238:	eb02 0c07 	add.w	ip, r2, r7
 801a23c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801a240:	f115 0e0f 	adds.w	lr, r5, #15
 801a244:	f100 80a2 	bmi.w	801a38c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801a248:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801a24c:	9c08      	ldr	r4, [sp, #32]
 801a24e:	f8c0 e014 	str.w	lr, [r0, #20]
 801a252:	2614      	movs	r6, #20
 801a254:	4366      	muls	r6, r4
 801a256:	eb02 0806 	add.w	r8, r2, r6
 801a25a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a25e:	f115 040f 	adds.w	r4, r5, #15
 801a262:	f100 809f 	bmi.w	801a3a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801a266:	1124      	asrs	r4, r4, #4
 801a268:	eba4 040e 	sub.w	r4, r4, lr
 801a26c:	6184      	str	r4, [r0, #24]
 801a26e:	2c00      	cmp	r4, #0
 801a270:	f000 808a 	beq.w	801a388 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801a274:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801a278:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801a27c:	5995      	ldr	r5, [r2, r6]
 801a27e:	eba4 0809 	sub.w	r8, r4, r9
 801a282:	59d4      	ldr	r4, [r2, r7]
 801a284:	eba5 0a04 	sub.w	sl, r5, r4
 801a288:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801a28c:	fb0e fe05 	mul.w	lr, lr, r5
 801a290:	fb0a ee19 	mls	lr, sl, r9, lr
 801a294:	fb08 e404 	mla	r4, r8, r4, lr
 801a298:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801a29c:	3c01      	subs	r4, #1
 801a29e:	19a4      	adds	r4, r4, r6
 801a2a0:	f100 808c 	bmi.w	801a3bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801a2a4:	fb94 fef6 	sdiv	lr, r4, r6
 801a2a8:	f8c0 e000 	str.w	lr, [r0]
 801a2ac:	fb06 441e 	mls	r4, r6, lr, r4
 801a2b0:	6104      	str	r4, [r0, #16]
 801a2b2:	2d00      	cmp	r5, #0
 801a2b4:	f2c0 8095 	blt.w	801a3e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801a2b8:	fb95 f4f6 	sdiv	r4, r5, r6
 801a2bc:	6044      	str	r4, [r0, #4]
 801a2be:	fb06 5514 	mls	r5, r6, r4, r5
 801a2c2:	6085      	str	r5, [r0, #8]
 801a2c4:	60c6      	str	r6, [r0, #12]
 801a2c6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801a2ca:	6945      	ldr	r5, [r0, #20]
 801a2cc:	59d2      	ldr	r2, [r2, r7]
 801a2ce:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 801a404 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801a2d2:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801a2d6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801a2da:	ee07 4a10 	vmov	s14, r4
 801a2de:	6804      	ldr	r4, [r0, #0]
 801a2e0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801a2e4:	ee07 2a90 	vmov	s15, r2
 801a2e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a2ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a2f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a2f4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801a2f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a2fc:	edd3 6a00 	vldr	s13, [r3]
 801a300:	eee6 6a07 	vfma.f32	s13, s12, s14
 801a304:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801a308:	eee6 6a27 	vfma.f32	s13, s12, s15
 801a30c:	edc0 6a07 	vstr	s13, [r0, #28]
 801a310:	edd0 6a01 	vldr	s13, [r0, #4]
 801a314:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801a318:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801a31c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801a320:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801a324:	ed80 6a08 	vstr	s12, [r0, #32]
 801a328:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801a32a:	6242      	str	r2, [r0, #36]	@ 0x24
 801a32c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801a330:	ed93 6a03 	vldr	s12, [r3, #12]
 801a334:	eea5 6a87 	vfma.f32	s12, s11, s14
 801a338:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801a33c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801a340:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801a344:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801a348:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 801a34c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801a350:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801a354:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801a356:	6302      	str	r2, [r0, #48]	@ 0x30
 801a358:	ed93 6a06 	vldr	s12, [r3, #24]
 801a35c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801a360:	eea5 6a87 	vfma.f32	s12, s11, s14
 801a364:	eeb0 7a46 	vmov.f32	s14, s12
 801a368:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 801a36c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801a370:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801a374:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801a378:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 801a37c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801a380:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801a384:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801a386:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801a388:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a38c:	f1c5 0501 	rsb	r5, r5, #1
 801a390:	f015 050f 	ands.w	r5, r5, #15
 801a394:	bf18      	it	ne
 801a396:	2501      	movne	r5, #1
 801a398:	2410      	movs	r4, #16
 801a39a:	fb9e fef4 	sdiv	lr, lr, r4
 801a39e:	ebae 0e05 	sub.w	lr, lr, r5
 801a3a2:	e753      	b.n	801a24c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801a3a4:	f1c5 0501 	rsb	r5, r5, #1
 801a3a8:	f015 050f 	ands.w	r5, r5, #15
 801a3ac:	bf18      	it	ne
 801a3ae:	2501      	movne	r5, #1
 801a3b0:	f04f 0910 	mov.w	r9, #16
 801a3b4:	fb94 f4f9 	sdiv	r4, r4, r9
 801a3b8:	1b64      	subs	r4, r4, r5
 801a3ba:	e755      	b.n	801a268 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801a3bc:	4264      	negs	r4, r4
 801a3be:	fb94 fef6 	sdiv	lr, r4, r6
 801a3c2:	f1ce 0800 	rsb	r8, lr, #0
 801a3c6:	fb06 441e 	mls	r4, r6, lr, r4
 801a3ca:	f8c0 8000 	str.w	r8, [r0]
 801a3ce:	6104      	str	r4, [r0, #16]
 801a3d0:	2c00      	cmp	r4, #0
 801a3d2:	f43f af6e 	beq.w	801a2b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801a3d6:	ea6f 0e0e 	mvn.w	lr, lr
 801a3da:	f8c0 e000 	str.w	lr, [r0]
 801a3de:	1b34      	subs	r4, r6, r4
 801a3e0:	e766      	b.n	801a2b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801a3e2:	426d      	negs	r5, r5
 801a3e4:	fb95 f4f6 	sdiv	r4, r5, r6
 801a3e8:	f1c4 0e00 	rsb	lr, r4, #0
 801a3ec:	fb06 5514 	mls	r5, r6, r4, r5
 801a3f0:	f8c0 e004 	str.w	lr, [r0, #4]
 801a3f4:	6085      	str	r5, [r0, #8]
 801a3f6:	2d00      	cmp	r5, #0
 801a3f8:	f43f af64 	beq.w	801a2c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801a3fc:	43e4      	mvns	r4, r4
 801a3fe:	6044      	str	r4, [r0, #4]
 801a400:	1b75      	subs	r5, r6, r5
 801a402:	e75e      	b.n	801a2c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801a404:	3d800000 	.word	0x3d800000

0801a408 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801a408:	4602      	mov	r2, r0
 801a40a:	b148      	cbz	r0, 801a420 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801a40c:	2300      	movs	r3, #0
 801a40e:	b298      	uxth	r0, r3
 801a410:	3301      	adds	r3, #1
 801a412:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801a416:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801a41a:	2900      	cmp	r1, #0
 801a41c:	d1f7      	bne.n	801a40e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801a41e:	4770      	bx	lr
 801a420:	4770      	bx	lr

0801a422 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801a422:	b530      	push	{r4, r5, lr}
 801a424:	4604      	mov	r4, r0
 801a426:	b159      	cbz	r1, 801a440 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801a428:	b148      	cbz	r0, 801a43e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801a42a:	2300      	movs	r3, #0
 801a42c:	b298      	uxth	r0, r3
 801a42e:	4282      	cmp	r2, r0
 801a430:	d905      	bls.n	801a43e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801a432:	5ccd      	ldrb	r5, [r1, r3]
 801a434:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801a438:	3301      	adds	r3, #1
 801a43a:	2d00      	cmp	r5, #0
 801a43c:	d1f6      	bne.n	801a42c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801a43e:	bd30      	pop	{r4, r5, pc}
 801a440:	4608      	mov	r0, r1
 801a442:	e7fc      	b.n	801a43e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801a444 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801a444:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a446:	b08b      	sub	sp, #44	@ 0x2c
 801a448:	468c      	mov	ip, r1
 801a44a:	2100      	movs	r1, #0
 801a44c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801a450:	4604      	mov	r4, r0
 801a452:	261f      	movs	r6, #31
 801a454:	af01      	add	r7, sp, #4
 801a456:	fb94 fef3 	sdiv	lr, r4, r3
 801a45a:	fb03 441e 	mls	r4, r3, lr, r4
 801a45e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801a462:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801a466:	b2ec      	uxtb	r4, r5
 801a468:	2d09      	cmp	r5, #9
 801a46a:	bfd4      	ite	le
 801a46c:	3430      	addle	r4, #48	@ 0x30
 801a46e:	3457      	addgt	r4, #87	@ 0x57
 801a470:	b2e4      	uxtb	r4, r4
 801a472:	55bc      	strb	r4, [r7, r6]
 801a474:	4674      	mov	r4, lr
 801a476:	1e71      	subs	r1, r6, #1
 801a478:	b974      	cbnz	r4, 801a498 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801a47a:	2800      	cmp	r0, #0
 801a47c:	da05      	bge.n	801a48a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801a47e:	ab0a      	add	r3, sp, #40	@ 0x28
 801a480:	4419      	add	r1, r3
 801a482:	232d      	movs	r3, #45	@ 0x2d
 801a484:	f801 3c24 	strb.w	r3, [r1, #-36]
 801a488:	1eb1      	subs	r1, r6, #2
 801a48a:	3101      	adds	r1, #1
 801a48c:	4439      	add	r1, r7
 801a48e:	4660      	mov	r0, ip
 801a490:	f7ff ffc7 	bl	801a422 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801a494:	b00b      	add	sp, #44	@ 0x2c
 801a496:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a498:	460e      	mov	r6, r1
 801a49a:	e7dc      	b.n	801a456 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801a49c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801a49c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a49e:	b08b      	sub	sp, #44	@ 0x2c
 801a4a0:	468c      	mov	ip, r1
 801a4a2:	2100      	movs	r1, #0
 801a4a4:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 801a4a8:	ae01      	add	r6, sp, #4
 801a4aa:	211f      	movs	r1, #31
 801a4ac:	fbb0 f7f3 	udiv	r7, r0, r3
 801a4b0:	fb03 0517 	mls	r5, r3, r7, r0
 801a4b4:	b2ec      	uxtb	r4, r5
 801a4b6:	2d09      	cmp	r5, #9
 801a4b8:	bfd4      	ite	le
 801a4ba:	3430      	addle	r4, #48	@ 0x30
 801a4bc:	3457      	addgt	r4, #87	@ 0x57
 801a4be:	b2e4      	uxtb	r4, r4
 801a4c0:	558c      	strb	r4, [r1, r6]
 801a4c2:	4638      	mov	r0, r7
 801a4c4:	1e4c      	subs	r4, r1, #1
 801a4c6:	b92f      	cbnz	r7, 801a4d4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801a4c8:	4431      	add	r1, r6
 801a4ca:	4660      	mov	r0, ip
 801a4cc:	f7ff ffa9 	bl	801a422 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801a4d0:	b00b      	add	sp, #44	@ 0x2c
 801a4d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a4d4:	4621      	mov	r1, r4
 801a4d6:	e7e9      	b.n	801a4ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801a4d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801a4d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4dc:	4691      	mov	r9, r2
 801a4de:	b085      	sub	sp, #20
 801a4e0:	6802      	ldr	r2, [r0, #0]
 801a4e2:	9201      	str	r2, [sp, #4]
 801a4e4:	4688      	mov	r8, r1
 801a4e6:	4683      	mov	fp, r0
 801a4e8:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 801a4ec:	9103      	str	r1, [sp, #12]
 801a4ee:	4610      	mov	r0, r2
 801a4f0:	461c      	mov	r4, r3
 801a4f2:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 801a4f6:	9302      	str	r3, [sp, #8]
 801a4f8:	f7ff ff86 	bl	801a408 <_ZN8touchgfx7Unicode6strlenEPKt>
 801a4fc:	f1b8 0f00 	cmp.w	r8, #0
 801a500:	bf0c      	ite	eq
 801a502:	4684      	moveq	ip, r0
 801a504:	f100 0c01 	addne.w	ip, r0, #1
 801a508:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 801a50c:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 801a510:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a512:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a514:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 801a518:	9903      	ldr	r1, [sp, #12]
 801a51a:	fa1f fc8c 	uxth.w	ip, ip
 801a51e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801a522:	d041      	beq.n	801a5a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801a524:	d834      	bhi.n	801a590 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801a526:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 801a52a:	d059      	beq.n	801a5e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801a52c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 801a530:	d03a      	beq.n	801a5a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801a532:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 801a536:	d034      	beq.n	801a5a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801a538:	2400      	movs	r4, #0
 801a53a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801a53e:	3a01      	subs	r2, #1
 801a540:	b169      	cbz	r1, 801a55e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a542:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801a544:	458c      	cmp	ip, r1
 801a546:	da09      	bge.n	801a55c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801a548:	eba1 010c 	sub.w	r1, r1, ip
 801a54c:	b289      	uxth	r1, r1
 801a54e:	b933      	cbnz	r3, 801a55e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a550:	2e00      	cmp	r6, #0
 801a552:	d051      	beq.n	801a5f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801a554:	2800      	cmp	r0, #0
 801a556:	d04f      	beq.n	801a5f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801a558:	440c      	add	r4, r1
 801a55a:	b2a4      	uxth	r4, r4
 801a55c:	2100      	movs	r1, #0
 801a55e:	682b      	ldr	r3, [r5, #0]
 801a560:	4293      	cmp	r3, r2
 801a562:	da07      	bge.n	801a574 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801a564:	f1b8 0f00 	cmp.w	r8, #0
 801a568:	d004      	beq.n	801a574 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801a56a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801a56e:	682b      	ldr	r3, [r5, #0]
 801a570:	3301      	adds	r3, #1
 801a572:	602b      	str	r3, [r5, #0]
 801a574:	2730      	movs	r7, #48	@ 0x30
 801a576:	2c00      	cmp	r4, #0
 801a578:	d04e      	beq.n	801a618 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a57a:	682e      	ldr	r6, [r5, #0]
 801a57c:	3c01      	subs	r4, #1
 801a57e:	42b2      	cmp	r2, r6
 801a580:	b2a4      	uxth	r4, r4
 801a582:	dd49      	ble.n	801a618 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a584:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801a588:	682b      	ldr	r3, [r5, #0]
 801a58a:	3301      	adds	r3, #1
 801a58c:	602b      	str	r3, [r5, #0]
 801a58e:	e7f2      	b.n	801a576 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801a590:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 801a594:	d01d      	beq.n	801a5d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801a596:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 801a59a:	d002      	beq.n	801a5a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801a59c:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 801a5a0:	e7c9      	b.n	801a536 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801a5a2:	4684      	mov	ip, r0
 801a5a4:	f04f 0800 	mov.w	r8, #0
 801a5a8:	2c00      	cmp	r4, #0
 801a5aa:	d0c6      	beq.n	801a53a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a5ac:	b947      	cbnz	r7, 801a5c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801a5ae:	2801      	cmp	r0, #1
 801a5b0:	d106      	bne.n	801a5c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801a5b2:	8814      	ldrh	r4, [r2, #0]
 801a5b4:	2c30      	cmp	r4, #48	@ 0x30
 801a5b6:	bf02      	ittt	eq
 801a5b8:	3202      	addeq	r2, #2
 801a5ba:	f8cb 2000 	streq.w	r2, [fp]
 801a5be:	4638      	moveq	r0, r7
 801a5c0:	45bc      	cmp	ip, r7
 801a5c2:	da14      	bge.n	801a5ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801a5c4:	b2bf      	uxth	r7, r7
 801a5c6:	eba7 040c 	sub.w	r4, r7, ip
 801a5ca:	b2a4      	uxth	r4, r4
 801a5cc:	46bc      	mov	ip, r7
 801a5ce:	2600      	movs	r6, #0
 801a5d0:	e7b3      	b.n	801a53a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a5d2:	4684      	mov	ip, r0
 801a5d4:	b16c      	cbz	r4, 801a5f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801a5d6:	42b8      	cmp	r0, r7
 801a5d8:	dd00      	ble.n	801a5dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801a5da:	b2b8      	uxth	r0, r7
 801a5dc:	2400      	movs	r4, #0
 801a5de:	e003      	b.n	801a5e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801a5e0:	f04f 0c01 	mov.w	ip, #1
 801a5e4:	2400      	movs	r4, #0
 801a5e6:	4660      	mov	r0, ip
 801a5e8:	4626      	mov	r6, r4
 801a5ea:	46a0      	mov	r8, r4
 801a5ec:	e7a5      	b.n	801a53a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a5ee:	2400      	movs	r4, #0
 801a5f0:	e7ed      	b.n	801a5ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801a5f2:	4626      	mov	r6, r4
 801a5f4:	46a0      	mov	r8, r4
 801a5f6:	e7a0      	b.n	801a53a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801a5f8:	2900      	cmp	r1, #0
 801a5fa:	d0b0      	beq.n	801a55e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a5fc:	2720      	movs	r7, #32
 801a5fe:	682e      	ldr	r6, [r5, #0]
 801a600:	2900      	cmp	r1, #0
 801a602:	d0ac      	beq.n	801a55e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801a604:	3901      	subs	r1, #1
 801a606:	4296      	cmp	r6, r2
 801a608:	b289      	uxth	r1, r1
 801a60a:	daa7      	bge.n	801a55c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801a60c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801a610:	682b      	ldr	r3, [r5, #0]
 801a612:	3301      	adds	r3, #1
 801a614:	602b      	str	r3, [r5, #0]
 801a616:	e7f2      	b.n	801a5fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801a618:	b188      	cbz	r0, 801a63e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801a61a:	682b      	ldr	r3, [r5, #0]
 801a61c:	3801      	subs	r0, #1
 801a61e:	429a      	cmp	r2, r3
 801a620:	b280      	uxth	r0, r0
 801a622:	dd0c      	ble.n	801a63e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801a624:	f8db 3000 	ldr.w	r3, [fp]
 801a628:	1c9c      	adds	r4, r3, #2
 801a62a:	f8cb 4000 	str.w	r4, [fp]
 801a62e:	881c      	ldrh	r4, [r3, #0]
 801a630:	682b      	ldr	r3, [r5, #0]
 801a632:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801a636:	682b      	ldr	r3, [r5, #0]
 801a638:	3301      	adds	r3, #1
 801a63a:	602b      	str	r3, [r5, #0]
 801a63c:	e7ec      	b.n	801a618 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801a63e:	2620      	movs	r6, #32
 801a640:	b151      	cbz	r1, 801a658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801a642:	6828      	ldr	r0, [r5, #0]
 801a644:	3901      	subs	r1, #1
 801a646:	4282      	cmp	r2, r0
 801a648:	b289      	uxth	r1, r1
 801a64a:	dd05      	ble.n	801a658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801a64c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801a650:	682b      	ldr	r3, [r5, #0]
 801a652:	3301      	adds	r3, #1
 801a654:	602b      	str	r3, [r5, #0]
 801a656:	e7f3      	b.n	801a640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801a658:	b005      	add	sp, #20
 801a65a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a65e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801a65e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a662:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801a666:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 801a66a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 801a66e:	2400      	movs	r4, #0
 801a670:	8014      	strh	r4, [r2, #0]
 801a672:	701c      	strb	r4, [r3, #0]
 801a674:	f888 4000 	strb.w	r4, [r8]
 801a678:	f88c 4000 	strb.w	r4, [ip]
 801a67c:	f88e 4000 	strb.w	r4, [lr]
 801a680:	703c      	strb	r4, [r7, #0]
 801a682:	6804      	ldr	r4, [r0, #0]
 801a684:	b1a4      	cbz	r4, 801a6b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801a686:	8824      	ldrh	r4, [r4, #0]
 801a688:	f04f 0901 	mov.w	r9, #1
 801a68c:	b314      	cbz	r4, 801a6d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a68e:	2c2b      	cmp	r4, #43	@ 0x2b
 801a690:	d001      	beq.n	801a696 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801a692:	2c20      	cmp	r4, #32
 801a694:	d110      	bne.n	801a6b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801a696:	8014      	strh	r4, [r2, #0]
 801a698:	6804      	ldr	r4, [r0, #0]
 801a69a:	b10c      	cbz	r4, 801a6a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801a69c:	3402      	adds	r4, #2
 801a69e:	6004      	str	r4, [r0, #0]
 801a6a0:	680c      	ldr	r4, [r1, #0]
 801a6a2:	b10c      	cbz	r4, 801a6a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801a6a4:	3401      	adds	r4, #1
 801a6a6:	600c      	str	r4, [r1, #0]
 801a6a8:	6804      	ldr	r4, [r0, #0]
 801a6aa:	b17c      	cbz	r4, 801a6cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801a6ac:	8824      	ldrh	r4, [r4, #0]
 801a6ae:	e7ed      	b.n	801a68c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a6b0:	680c      	ldr	r4, [r1, #0]
 801a6b2:	b17c      	cbz	r4, 801a6d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a6b4:	7824      	ldrb	r4, [r4, #0]
 801a6b6:	e7e7      	b.n	801a688 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801a6b8:	2c2d      	cmp	r4, #45	@ 0x2d
 801a6ba:	d102      	bne.n	801a6c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801a6bc:	f883 9000 	strb.w	r9, [r3]
 801a6c0:	e7ea      	b.n	801a698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a6c2:	2c23      	cmp	r4, #35	@ 0x23
 801a6c4:	d107      	bne.n	801a6d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801a6c6:	f888 9000 	strb.w	r9, [r8]
 801a6ca:	e7e5      	b.n	801a698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a6cc:	680c      	ldr	r4, [r1, #0]
 801a6ce:	b10c      	cbz	r4, 801a6d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a6d0:	7824      	ldrb	r4, [r4, #0]
 801a6d2:	e7db      	b.n	801a68c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a6d4:	2400      	movs	r4, #0
 801a6d6:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 801a6da:	2b09      	cmp	r3, #9
 801a6dc:	d901      	bls.n	801a6e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801a6de:	2c2a      	cmp	r4, #42	@ 0x2a
 801a6e0:	d122      	bne.n	801a728 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a6e2:	2301      	movs	r3, #1
 801a6e4:	2c30      	cmp	r4, #48	@ 0x30
 801a6e6:	f88e 3000 	strb.w	r3, [lr]
 801a6ea:	d10d      	bne.n	801a708 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a6ec:	f88c 3000 	strb.w	r3, [ip]
 801a6f0:	6803      	ldr	r3, [r0, #0]
 801a6f2:	b10b      	cbz	r3, 801a6f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801a6f4:	3302      	adds	r3, #2
 801a6f6:	6003      	str	r3, [r0, #0]
 801a6f8:	680b      	ldr	r3, [r1, #0]
 801a6fa:	b10b      	cbz	r3, 801a700 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801a6fc:	3301      	adds	r3, #1
 801a6fe:	600b      	str	r3, [r1, #0]
 801a700:	6803      	ldr	r3, [r0, #0]
 801a702:	2b00      	cmp	r3, #0
 801a704:	d02f      	beq.n	801a766 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801a706:	881c      	ldrh	r4, [r3, #0]
 801a708:	2c2a      	cmp	r4, #42	@ 0x2a
 801a70a:	d135      	bne.n	801a778 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a70c:	f04f 33ff 	mov.w	r3, #4294967295
 801a710:	6033      	str	r3, [r6, #0]
 801a712:	6803      	ldr	r3, [r0, #0]
 801a714:	b10b      	cbz	r3, 801a71a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801a716:	3302      	adds	r3, #2
 801a718:	6003      	str	r3, [r0, #0]
 801a71a:	680b      	ldr	r3, [r1, #0]
 801a71c:	b10b      	cbz	r3, 801a722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801a71e:	3301      	adds	r3, #1
 801a720:	600b      	str	r3, [r1, #0]
 801a722:	6803      	ldr	r3, [r0, #0]
 801a724:	b31b      	cbz	r3, 801a76e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801a726:	881c      	ldrh	r4, [r3, #0]
 801a728:	2c2e      	cmp	r4, #46	@ 0x2e
 801a72a:	d11a      	bne.n	801a762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a72c:	2301      	movs	r3, #1
 801a72e:	703b      	strb	r3, [r7, #0]
 801a730:	6803      	ldr	r3, [r0, #0]
 801a732:	b10b      	cbz	r3, 801a738 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801a734:	3302      	adds	r3, #2
 801a736:	6003      	str	r3, [r0, #0]
 801a738:	680b      	ldr	r3, [r1, #0]
 801a73a:	b10b      	cbz	r3, 801a740 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801a73c:	3301      	adds	r3, #1
 801a73e:	600b      	str	r3, [r1, #0]
 801a740:	6803      	ldr	r3, [r0, #0]
 801a742:	2b00      	cmp	r3, #0
 801a744:	d036      	beq.n	801a7b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801a746:	881b      	ldrh	r3, [r3, #0]
 801a748:	2b2a      	cmp	r3, #42	@ 0x2a
 801a74a:	d137      	bne.n	801a7bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801a74c:	f04f 33ff 	mov.w	r3, #4294967295
 801a750:	602b      	str	r3, [r5, #0]
 801a752:	6803      	ldr	r3, [r0, #0]
 801a754:	b10b      	cbz	r3, 801a75a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801a756:	3302      	adds	r3, #2
 801a758:	6003      	str	r3, [r0, #0]
 801a75a:	680b      	ldr	r3, [r1, #0]
 801a75c:	b10b      	cbz	r3, 801a762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a75e:	3301      	adds	r3, #1
 801a760:	600b      	str	r3, [r1, #0]
 801a762:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a766:	680c      	ldr	r4, [r1, #0]
 801a768:	b134      	cbz	r4, 801a778 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a76a:	7824      	ldrb	r4, [r4, #0]
 801a76c:	e7cc      	b.n	801a708 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a76e:	680b      	ldr	r3, [r1, #0]
 801a770:	2b00      	cmp	r3, #0
 801a772:	d0f6      	beq.n	801a762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a774:	781c      	ldrb	r4, [r3, #0]
 801a776:	e7d7      	b.n	801a728 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a778:	2300      	movs	r3, #0
 801a77a:	6033      	str	r3, [r6, #0]
 801a77c:	220a      	movs	r2, #10
 801a77e:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 801a782:	fa1f f38c 	uxth.w	r3, ip
 801a786:	2b09      	cmp	r3, #9
 801a788:	d8ce      	bhi.n	801a728 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a78a:	6833      	ldr	r3, [r6, #0]
 801a78c:	fb02 c303 	mla	r3, r2, r3, ip
 801a790:	6033      	str	r3, [r6, #0]
 801a792:	6803      	ldr	r3, [r0, #0]
 801a794:	b10b      	cbz	r3, 801a79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801a796:	3302      	adds	r3, #2
 801a798:	6003      	str	r3, [r0, #0]
 801a79a:	680b      	ldr	r3, [r1, #0]
 801a79c:	b10b      	cbz	r3, 801a7a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801a79e:	3301      	adds	r3, #1
 801a7a0:	600b      	str	r3, [r1, #0]
 801a7a2:	6803      	ldr	r3, [r0, #0]
 801a7a4:	b10b      	cbz	r3, 801a7aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801a7a6:	881c      	ldrh	r4, [r3, #0]
 801a7a8:	e7e9      	b.n	801a77e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a7aa:	680c      	ldr	r4, [r1, #0]
 801a7ac:	2c00      	cmp	r4, #0
 801a7ae:	d0e6      	beq.n	801a77e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a7b0:	7824      	ldrb	r4, [r4, #0]
 801a7b2:	e7e4      	b.n	801a77e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a7b4:	680b      	ldr	r3, [r1, #0]
 801a7b6:	b10b      	cbz	r3, 801a7bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801a7b8:	781b      	ldrb	r3, [r3, #0]
 801a7ba:	e7c5      	b.n	801a748 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801a7bc:	2200      	movs	r2, #0
 801a7be:	602a      	str	r2, [r5, #0]
 801a7c0:	240a      	movs	r4, #10
 801a7c2:	3b30      	subs	r3, #48	@ 0x30
 801a7c4:	b29e      	uxth	r6, r3
 801a7c6:	2e09      	cmp	r6, #9
 801a7c8:	682a      	ldr	r2, [r5, #0]
 801a7ca:	d813      	bhi.n	801a7f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801a7cc:	fb04 3302 	mla	r3, r4, r2, r3
 801a7d0:	602b      	str	r3, [r5, #0]
 801a7d2:	6803      	ldr	r3, [r0, #0]
 801a7d4:	b10b      	cbz	r3, 801a7da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801a7d6:	3302      	adds	r3, #2
 801a7d8:	6003      	str	r3, [r0, #0]
 801a7da:	680b      	ldr	r3, [r1, #0]
 801a7dc:	b10b      	cbz	r3, 801a7e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801a7de:	3301      	adds	r3, #1
 801a7e0:	600b      	str	r3, [r1, #0]
 801a7e2:	6803      	ldr	r3, [r0, #0]
 801a7e4:	b10b      	cbz	r3, 801a7ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801a7e6:	881b      	ldrh	r3, [r3, #0]
 801a7e8:	e7eb      	b.n	801a7c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a7ea:	680b      	ldr	r3, [r1, #0]
 801a7ec:	2b00      	cmp	r3, #0
 801a7ee:	d0e8      	beq.n	801a7c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a7f0:	781b      	ldrb	r3, [r3, #0]
 801a7f2:	e7e6      	b.n	801a7c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a7f4:	2a06      	cmp	r2, #6
 801a7f6:	bfa8      	it	ge
 801a7f8:	2206      	movge	r2, #6
 801a7fa:	602a      	str	r2, [r5, #0]
 801a7fc:	e7b1      	b.n	801a762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801a7fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801a7fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a802:	b0a3      	sub	sp, #140	@ 0x8c
 801a804:	2600      	movs	r6, #0
 801a806:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 801a80a:	4607      	mov	r7, r0
 801a80c:	4688      	mov	r8, r1
 801a80e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a812:	4631      	mov	r1, r6
 801a814:	2242      	movs	r2, #66	@ 0x42
 801a816:	4648      	mov	r0, r9
 801a818:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 801a81a:	960d      	str	r6, [sp, #52]	@ 0x34
 801a81c:	f010 fcbb 	bl	802b196 <memset>
 801a820:	b15f      	cbz	r7, 801a83a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801a822:	f108 3aff 	add.w	sl, r8, #4294967295
 801a826:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a828:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a82a:	b152      	cbz	r2, 801a842 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801a82c:	8812      	ldrh	r2, [r2, #0]
 801a82e:	b10a      	cbz	r2, 801a834 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801a830:	459a      	cmp	sl, r3
 801a832:	dc2e      	bgt.n	801a892 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801a834:	2200      	movs	r2, #0
 801a836:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801a83a:	4638      	mov	r0, r7
 801a83c:	b023      	add	sp, #140	@ 0x8c
 801a83e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a842:	9a08      	ldr	r2, [sp, #32]
 801a844:	2a00      	cmp	r2, #0
 801a846:	d0f5      	beq.n	801a834 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801a848:	7812      	ldrb	r2, [r2, #0]
 801a84a:	e7f0      	b.n	801a82e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801a84c:	2d00      	cmp	r5, #0
 801a84e:	d0ea      	beq.n	801a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a850:	782a      	ldrb	r2, [r5, #0]
 801a852:	b142      	cbz	r2, 801a866 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801a854:	2a25      	cmp	r2, #37	@ 0x25
 801a856:	d001      	beq.n	801a85c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801a858:	459a      	cmp	sl, r3
 801a85a:	dc08      	bgt.n	801a86e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801a85c:	f1bb 0f00 	cmp.w	fp, #0
 801a860:	d121      	bne.n	801a8a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801a862:	2d00      	cmp	r5, #0
 801a864:	d0df      	beq.n	801a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a866:	782a      	ldrb	r2, [r5, #0]
 801a868:	f04f 0b00 	mov.w	fp, #0
 801a86c:	e01d      	b.n	801a8aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801a86e:	f1bb 0f00 	cmp.w	fp, #0
 801a872:	d078      	beq.n	801a966 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801a874:	f8bb 2000 	ldrh.w	r2, [fp]
 801a878:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801a87c:	f1bb 0f00 	cmp.w	fp, #0
 801a880:	d002      	beq.n	801a888 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801a882:	f10b 0202 	add.w	r2, fp, #2
 801a886:	9209      	str	r2, [sp, #36]	@ 0x24
 801a888:	b10d      	cbz	r5, 801a88e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801a88a:	3501      	adds	r5, #1
 801a88c:	9508      	str	r5, [sp, #32]
 801a88e:	3301      	adds	r3, #1
 801a890:	930d      	str	r3, [sp, #52]	@ 0x34
 801a892:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801a896:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a898:	f1bb 0f00 	cmp.w	fp, #0
 801a89c:	d0d6      	beq.n	801a84c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801a89e:	f8bb 2000 	ldrh.w	r2, [fp]
 801a8a2:	2a00      	cmp	r2, #0
 801a8a4:	d1d6      	bne.n	801a854 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801a8a6:	f8bb 2000 	ldrh.w	r2, [fp]
 801a8aa:	2a00      	cmp	r2, #0
 801a8ac:	d0bb      	beq.n	801a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a8ae:	459a      	cmp	sl, r3
 801a8b0:	ddb9      	ble.n	801a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a8b2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 801a8b6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 801a8ba:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 801a8be:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 801a8c2:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 801a8c6:	960e      	str	r6, [sp, #56]	@ 0x38
 801a8c8:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 801a8cc:	960f      	str	r6, [sp, #60]	@ 0x3c
 801a8ce:	f1bb 0f00 	cmp.w	fp, #0
 801a8d2:	d002      	beq.n	801a8da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801a8d4:	f10b 0302 	add.w	r3, fp, #2
 801a8d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801a8da:	b10d      	cbz	r5, 801a8e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801a8dc:	1c6b      	adds	r3, r5, #1
 801a8de:	9308      	str	r3, [sp, #32]
 801a8e0:	ab0f      	add	r3, sp, #60	@ 0x3c
 801a8e2:	9305      	str	r3, [sp, #20]
 801a8e4:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 801a8e8:	9304      	str	r3, [sp, #16]
 801a8ea:	ab0e      	add	r3, sp, #56	@ 0x38
 801a8ec:	9303      	str	r3, [sp, #12]
 801a8ee:	ab0c      	add	r3, sp, #48	@ 0x30
 801a8f0:	9302      	str	r3, [sp, #8]
 801a8f2:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801a8f6:	9301      	str	r3, [sp, #4]
 801a8f8:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 801a8fc:	9300      	str	r3, [sp, #0]
 801a8fe:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 801a902:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801a906:	a908      	add	r1, sp, #32
 801a908:	a809      	add	r0, sp, #36	@ 0x24
 801a90a:	f7ff fea8 	bl	801a65e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a90e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a910:	2b00      	cmp	r3, #0
 801a912:	bfbe      	ittt	lt
 801a914:	6823      	ldrlt	r3, [r4, #0]
 801a916:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801a91a:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801a91c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a91e:	bfb8      	it	lt
 801a920:	3404      	addlt	r4, #4
 801a922:	2b00      	cmp	r3, #0
 801a924:	bfb8      	it	lt
 801a926:	6823      	ldrlt	r3, [r4, #0]
 801a928:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a92c:	bfbe      	ittt	lt
 801a92e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801a932:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 801a934:	3404      	addlt	r4, #4
 801a936:	b1d9      	cbz	r1, 801a970 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801a938:	880b      	ldrh	r3, [r1, #0]
 801a93a:	2b69      	cmp	r3, #105	@ 0x69
 801a93c:	d01f      	beq.n	801a97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a93e:	d82f      	bhi.n	801a9a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801a940:	2b58      	cmp	r3, #88	@ 0x58
 801a942:	d01c      	beq.n	801a97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a944:	d818      	bhi.n	801a978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801a946:	2b25      	cmp	r3, #37	@ 0x25
 801a948:	d034      	beq.n	801a9b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801a94a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801a94e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a950:	f1bb 0f00 	cmp.w	fp, #0
 801a954:	f000 80b8 	beq.w	801aac8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801a958:	f8bb 5000 	ldrh.w	r5, [fp]
 801a95c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801a960:	3301      	adds	r3, #1
 801a962:	930d      	str	r3, [sp, #52]	@ 0x34
 801a964:	e029      	b.n	801a9ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a966:	b10d      	cbz	r5, 801a96c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801a968:	782a      	ldrb	r2, [r5, #0]
 801a96a:	e785      	b.n	801a878 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a96c:	462a      	mov	r2, r5
 801a96e:	e783      	b.n	801a878 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a970:	2a00      	cmp	r2, #0
 801a972:	d0ea      	beq.n	801a94a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a974:	7813      	ldrb	r3, [r2, #0]
 801a976:	e7e0      	b.n	801a93a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801a978:	3b63      	subs	r3, #99	@ 0x63
 801a97a:	2b01      	cmp	r3, #1
 801a97c:	d8e5      	bhi.n	801a94a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a97e:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801a982:	b329      	cbz	r1, 801a9d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801a984:	880b      	ldrh	r3, [r1, #0]
 801a986:	2b69      	cmp	r3, #105	@ 0x69
 801a988:	d063      	beq.n	801aa52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a98a:	d825      	bhi.n	801a9d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801a98c:	2b63      	cmp	r3, #99	@ 0x63
 801a98e:	d038      	beq.n	801aa02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801a990:	2b64      	cmp	r3, #100	@ 0x64
 801a992:	d05e      	beq.n	801aa52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a994:	2b58      	cmp	r3, #88	@ 0x58
 801a996:	d07b      	beq.n	801aa90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801a998:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 801a99c:	4625      	mov	r5, r4
 801a99e:	e036      	b.n	801aa0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a9a0:	2b73      	cmp	r3, #115	@ 0x73
 801a9a2:	d0ec      	beq.n	801a97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a9a4:	d802      	bhi.n	801a9ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801a9a6:	2b6f      	cmp	r3, #111	@ 0x6f
 801a9a8:	d1cf      	bne.n	801a94a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a9aa:	e7e8      	b.n	801a97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a9ac:	2b75      	cmp	r3, #117	@ 0x75
 801a9ae:	d0e6      	beq.n	801a97e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a9b0:	2b78      	cmp	r3, #120	@ 0x78
 801a9b2:	e7f9      	b.n	801a9a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801a9b4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a9b6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801a9ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a9bc:	b10b      	cbz	r3, 801a9c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801a9be:	3302      	adds	r3, #2
 801a9c0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a9c2:	9b08      	ldr	r3, [sp, #32]
 801a9c4:	2b00      	cmp	r3, #0
 801a9c6:	f43f af2e 	beq.w	801a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a9ca:	3301      	adds	r3, #1
 801a9cc:	9308      	str	r3, [sp, #32]
 801a9ce:	e72a      	b.n	801a826 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a9d0:	2a00      	cmp	r2, #0
 801a9d2:	d0e1      	beq.n	801a998 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a9d4:	7813      	ldrb	r3, [r2, #0]
 801a9d6:	e7d6      	b.n	801a986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801a9d8:	2b73      	cmp	r3, #115	@ 0x73
 801a9da:	d036      	beq.n	801aa4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801a9dc:	d807      	bhi.n	801a9ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801a9de:	2b6f      	cmp	r3, #111	@ 0x6f
 801a9e0:	d1da      	bne.n	801a998 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a9e2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a9e4:	1d25      	adds	r5, r4, #4
 801a9e6:	eba8 0202 	sub.w	r2, r8, r2
 801a9ea:	2308      	movs	r3, #8
 801a9ec:	e04a      	b.n	801aa84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a9ee:	2b75      	cmp	r3, #117	@ 0x75
 801a9f0:	d043      	beq.n	801aa7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801a9f2:	2b78      	cmp	r3, #120	@ 0x78
 801a9f4:	d1d0      	bne.n	801a998 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a9f6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a9f8:	1d25      	adds	r5, r4, #4
 801a9fa:	eba8 0202 	sub.w	r2, r8, r2
 801a9fe:	2310      	movs	r3, #16
 801aa00:	e040      	b.n	801aa84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801aa02:	6823      	ldr	r3, [r4, #0]
 801aa04:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 801aa08:	1d25      	adds	r5, r4, #4
 801aa0a:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801aa0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aa10:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 801aa14:	2b00      	cmp	r3, #0
 801aa16:	d052      	beq.n	801aabe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801aa18:	881a      	ldrh	r2, [r3, #0]
 801aa1a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801aa1e:	a80d      	add	r0, sp, #52	@ 0x34
 801aa20:	9005      	str	r0, [sp, #20]
 801aa22:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801aa26:	9004      	str	r0, [sp, #16]
 801aa28:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801aa2a:	9003      	str	r0, [sp, #12]
 801aa2c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 801aa30:	9002      	str	r0, [sp, #8]
 801aa32:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801aa34:	9001      	str	r0, [sp, #4]
 801aa36:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801aa3a:	9000      	str	r0, [sp, #0]
 801aa3c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801aa40:	a810      	add	r0, sp, #64	@ 0x40
 801aa42:	f7ff fd49 	bl	801a4d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801aa46:	462c      	mov	r4, r5
 801aa48:	e7b7      	b.n	801a9ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801aa4a:	6823      	ldr	r3, [r4, #0]
 801aa4c:	1d25      	adds	r5, r4, #4
 801aa4e:	9310      	str	r3, [sp, #64]	@ 0x40
 801aa50:	e7dd      	b.n	801aa0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801aa52:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801aa54:	6820      	ldr	r0, [r4, #0]
 801aa56:	eba8 0202 	sub.w	r2, r8, r2
 801aa5a:	230a      	movs	r3, #10
 801aa5c:	b292      	uxth	r2, r2
 801aa5e:	4649      	mov	r1, r9
 801aa60:	f7ff fcf0 	bl	801a444 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801aa64:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801aa68:	2b2d      	cmp	r3, #45	@ 0x2d
 801aa6a:	f104 0504 	add.w	r5, r4, #4
 801aa6e:	d1ce      	bne.n	801aa0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801aa70:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801aa74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aa76:	3302      	adds	r3, #2
 801aa78:	e7e9      	b.n	801aa4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801aa7a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801aa7c:	1d25      	adds	r5, r4, #4
 801aa7e:	eba8 0202 	sub.w	r2, r8, r2
 801aa82:	230a      	movs	r3, #10
 801aa84:	b292      	uxth	r2, r2
 801aa86:	4649      	mov	r1, r9
 801aa88:	6820      	ldr	r0, [r4, #0]
 801aa8a:	f7ff fd07 	bl	801a49c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801aa8e:	e7be      	b.n	801aa0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801aa90:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801aa92:	6820      	ldr	r0, [r4, #0]
 801aa94:	eba8 0202 	sub.w	r2, r8, r2
 801aa98:	b292      	uxth	r2, r2
 801aa9a:	2310      	movs	r3, #16
 801aa9c:	4649      	mov	r1, r9
 801aa9e:	f7ff fcfd 	bl	801a49c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801aaa2:	1d25      	adds	r5, r4, #4
 801aaa4:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801aaa8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801aaac:	2b00      	cmp	r3, #0
 801aaae:	d0ae      	beq.n	801aa0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801aab0:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 801aab4:	2919      	cmp	r1, #25
 801aab6:	d8f7      	bhi.n	801aaa8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801aab8:	3b20      	subs	r3, #32
 801aaba:	8013      	strh	r3, [r2, #0]
 801aabc:	e7f4      	b.n	801aaa8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801aabe:	9a08      	ldr	r2, [sp, #32]
 801aac0:	2a00      	cmp	r2, #0
 801aac2:	d0aa      	beq.n	801aa1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801aac4:	7812      	ldrb	r2, [r2, #0]
 801aac6:	e7a8      	b.n	801aa1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801aac8:	2d00      	cmp	r5, #0
 801aaca:	f43f af47 	beq.w	801a95c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801aace:	782d      	ldrb	r5, [r5, #0]
 801aad0:	e744      	b.n	801a95c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801aad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801aad2:	b507      	push	{r0, r1, r2, lr}
 801aad4:	9300      	str	r3, [sp, #0]
 801aad6:	4613      	mov	r3, r2
 801aad8:	2200      	movs	r2, #0
 801aada:	f7ff fe90 	bl	801a7fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801aade:	b003      	add	sp, #12
 801aae0:	f85d fb04 	ldr.w	pc, [sp], #4

0801aae4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801aae4:	b40c      	push	{r2, r3}
 801aae6:	b507      	push	{r0, r1, r2, lr}
 801aae8:	ab04      	add	r3, sp, #16
 801aaea:	f853 2b04 	ldr.w	r2, [r3], #4
 801aaee:	9301      	str	r3, [sp, #4]
 801aaf0:	f7ff ffef 	bl	801aad2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801aaf4:	b003      	add	sp, #12
 801aaf6:	f85d eb04 	ldr.w	lr, [sp], #4
 801aafa:	b002      	add	sp, #8
 801aafc:	4770      	bx	lr
	...

0801ab00 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801ab00:	4b01      	ldr	r3, [pc, #4]	@ (801ab08 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801ab02:	6018      	str	r0, [r3, #0]
 801ab04:	4770      	bx	lr
 801ab06:	bf00      	nop
 801ab08:	20013fc8 	.word	0x20013fc8

0801ab0c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801ab0c:	4b06      	ldr	r3, [pc, #24]	@ (801ab28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801ab0e:	881a      	ldrh	r2, [r3, #0]
 801ab10:	4282      	cmp	r2, r0
 801ab12:	d807      	bhi.n	801ab24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801ab14:	4b05      	ldr	r3, [pc, #20]	@ (801ab2c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801ab16:	881b      	ldrh	r3, [r3, #0]
 801ab18:	4413      	add	r3, r2
 801ab1a:	4298      	cmp	r0, r3
 801ab1c:	bfac      	ite	ge
 801ab1e:	2000      	movge	r0, #0
 801ab20:	2001      	movlt	r0, #1
 801ab22:	4770      	bx	lr
 801ab24:	2000      	movs	r0, #0
 801ab26:	4770      	bx	lr
 801ab28:	20013fe8 	.word	0x20013fe8
 801ab2c:	20013fec 	.word	0x20013fec

0801ab30 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801ab30:	b508      	push	{r3, lr}
 801ab32:	4601      	mov	r1, r0
 801ab34:	f7ff ffea 	bl	801ab0c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801ab38:	b118      	cbz	r0, 801ab42 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801ab3a:	4b02      	ldr	r3, [pc, #8]	@ (801ab44 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801ab3c:	681b      	ldr	r3, [r3, #0]
 801ab3e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801ab42:	bd08      	pop	{r3, pc}
 801ab44:	20013fcc 	.word	0x20013fcc

0801ab48 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801ab48:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ab4a:	4c24      	ldr	r4, [pc, #144]	@ (801abdc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801ab4c:	6823      	ldr	r3, [r4, #0]
 801ab4e:	2b00      	cmp	r3, #0
 801ab50:	d042      	beq.n	801abd8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801ab52:	4a23      	ldr	r2, [pc, #140]	@ (801abe0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801ab54:	4d23      	ldr	r5, [pc, #140]	@ (801abe4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801ab56:	8811      	ldrh	r1, [r2, #0]
 801ab58:	f8b5 c000 	ldrh.w	ip, [r5]
 801ab5c:	4822      	ldr	r0, [pc, #136]	@ (801abe8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801ab5e:	4461      	add	r1, ip
 801ab60:	1c4a      	adds	r2, r1, #1
 801ab62:	f022 0201 	bic.w	r2, r2, #1
 801ab66:	008f      	lsls	r7, r1, #2
 801ab68:	0412      	lsls	r2, r2, #16
 801ab6a:	19de      	adds	r6, r3, r7
 801ab6c:	0c12      	lsrs	r2, r2, #16
 801ab6e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801ab72:	6006      	str	r6, [r0, #0]
 801ab74:	4e1d      	ldr	r6, [pc, #116]	@ (801abec <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801ab76:	19da      	adds	r2, r3, r7
 801ab78:	6032      	str	r2, [r6, #0]
 801ab7a:	220e      	movs	r2, #14
 801ab7c:	fb02 f20c 	mul.w	r2, r2, ip
 801ab80:	3203      	adds	r2, #3
 801ab82:	f022 0203 	bic.w	r2, r2, #3
 801ab86:	443a      	add	r2, r7
 801ab88:	4f19      	ldr	r7, [pc, #100]	@ (801abf0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801ab8a:	4413      	add	r3, r2
 801ab8c:	603b      	str	r3, [r7, #0]
 801ab8e:	4f19      	ldr	r7, [pc, #100]	@ (801abf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801ab90:	2300      	movs	r3, #0
 801ab92:	803b      	strh	r3, [r7, #0]
 801ab94:	4f18      	ldr	r7, [pc, #96]	@ (801abf8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801ab96:	683f      	ldr	r7, [r7, #0]
 801ab98:	1aba      	subs	r2, r7, r2
 801ab9a:	4f18      	ldr	r7, [pc, #96]	@ (801abfc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801ab9c:	603a      	str	r2, [r7, #0]
 801ab9e:	4a18      	ldr	r2, [pc, #96]	@ (801ac00 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801aba0:	469c      	mov	ip, r3
 801aba2:	8013      	strh	r3, [r2, #0]
 801aba4:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801aba8:	428b      	cmp	r3, r1
 801abaa:	d10d      	bne.n	801abc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801abac:	882d      	ldrh	r5, [r5, #0]
 801abae:	6830      	ldr	r0, [r6, #0]
 801abb0:	2300      	movs	r3, #0
 801abb2:	240e      	movs	r4, #14
 801abb4:	429d      	cmp	r5, r3
 801abb6:	d90f      	bls.n	801abd8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801abb8:	fb04 0203 	mla	r2, r4, r3, r0
 801abbc:	3301      	adds	r3, #1
 801abbe:	7b11      	ldrb	r1, [r2, #12]
 801abc0:	f36f 1145 	bfc	r1, #5, #1
 801abc4:	7311      	strb	r1, [r2, #12]
 801abc6:	e7f5      	b.n	801abb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801abc8:	6822      	ldr	r2, [r4, #0]
 801abca:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801abce:	6802      	ldr	r2, [r0, #0]
 801abd0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801abd4:	3301      	adds	r3, #1
 801abd6:	e7e7      	b.n	801aba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801abd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801abda:	bf00      	nop
 801abdc:	20013fcc 	.word	0x20013fcc
 801abe0:	20013fe8 	.word	0x20013fe8
 801abe4:	20013fec 	.word	0x20013fec
 801abe8:	20013fe0 	.word	0x20013fe0
 801abec:	20013fd0 	.word	0x20013fd0
 801abf0:	20013fd8 	.word	0x20013fd8
 801abf4:	20013fea 	.word	0x20013fea
 801abf8:	20013fd4 	.word	0x20013fd4
 801abfc:	20013fe4 	.word	0x20013fe4
 801ac00:	20013fdc 	.word	0x20013fdc

0801ac04 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801ac04:	4b06      	ldr	r3, [pc, #24]	@ (801ac20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801ac06:	681b      	ldr	r3, [r3, #0]
 801ac08:	b943      	cbnz	r3, 801ac1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801ac0a:	b139      	cbz	r1, 801ac1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801ac0c:	4b05      	ldr	r3, [pc, #20]	@ (801ac24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801ac0e:	801a      	strh	r2, [r3, #0]
 801ac10:	4b05      	ldr	r3, [pc, #20]	@ (801ac28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801ac12:	6019      	str	r1, [r3, #0]
 801ac14:	4b05      	ldr	r3, [pc, #20]	@ (801ac2c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801ac16:	6018      	str	r0, [r3, #0]
 801ac18:	f7ff bf96 	b.w	801ab48 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801ac1c:	4770      	bx	lr
 801ac1e:	bf00      	nop
 801ac20:	20013fd8 	.word	0x20013fd8
 801ac24:	20013fec 	.word	0x20013fec
 801ac28:	20013fd4 	.word	0x20013fd4
 801ac2c:	20013fcc 	.word	0x20013fcc

0801ac30 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801ac30:	b470      	push	{r4, r5, r6}
 801ac32:	4c07      	ldr	r4, [pc, #28]	@ (801ac50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801ac34:	6826      	ldr	r6, [r4, #0]
 801ac36:	4605      	mov	r5, r0
 801ac38:	4610      	mov	r0, r2
 801ac3a:	9a03      	ldr	r2, [sp, #12]
 801ac3c:	b936      	cbnz	r6, 801ac4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801ac3e:	6025      	str	r5, [r4, #0]
 801ac40:	4c04      	ldr	r4, [pc, #16]	@ (801ac54 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801ac42:	8021      	strh	r1, [r4, #0]
 801ac44:	bc70      	pop	{r4, r5, r6}
 801ac46:	4619      	mov	r1, r3
 801ac48:	f7ff bfdc 	b.w	801ac04 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801ac4c:	bc70      	pop	{r4, r5, r6}
 801ac4e:	4770      	bx	lr
 801ac50:	20013ff0 	.word	0x20013ff0
 801ac54:	20013fe8 	.word	0x20013fe8

0801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801ac58:	4a12      	ldr	r2, [pc, #72]	@ (801aca4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801ac5a:	8803      	ldrh	r3, [r0, #0]
 801ac5c:	8812      	ldrh	r2, [r2, #0]
 801ac5e:	4293      	cmp	r3, r2
 801ac60:	d207      	bcs.n	801ac72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801ac62:	4a11      	ldr	r2, [pc, #68]	@ (801aca8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801ac64:	6812      	ldr	r2, [r2, #0]
 801ac66:	2114      	movs	r1, #20
 801ac68:	fb01 2303 	mla	r3, r1, r3, r2
 801ac6c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801ac70:	4770      	bx	lr
 801ac72:	490e      	ldr	r1, [pc, #56]	@ (801acac <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801ac74:	8809      	ldrh	r1, [r1, #0]
 801ac76:	4411      	add	r1, r2
 801ac78:	428b      	cmp	r3, r1
 801ac7a:	da04      	bge.n	801ac86 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801ac7c:	1a9b      	subs	r3, r3, r2
 801ac7e:	4a0c      	ldr	r2, [pc, #48]	@ (801acb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801ac80:	210e      	movs	r1, #14
 801ac82:	6812      	ldr	r2, [r2, #0]
 801ac84:	e7f0      	b.n	801ac68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801ac86:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801ac8a:	4293      	cmp	r3, r2
 801ac8c:	d108      	bne.n	801aca0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801ac8e:	4b09      	ldr	r3, [pc, #36]	@ (801acb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801ac90:	781b      	ldrb	r3, [r3, #0]
 801ac92:	b91b      	cbnz	r3, 801ac9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801ac94:	4b08      	ldr	r3, [pc, #32]	@ (801acb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801ac96:	f9b3 0000 	ldrsh.w	r0, [r3]
 801ac9a:	4770      	bx	lr
 801ac9c:	4b07      	ldr	r3, [pc, #28]	@ (801acbc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801ac9e:	e7fa      	b.n	801ac96 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801aca0:	2000      	movs	r0, #0
 801aca2:	4770      	bx	lr
 801aca4:	20013fe8 	.word	0x20013fe8
 801aca8:	20013ff0 	.word	0x20013ff0
 801acac:	20013fec 	.word	0x20013fec
 801acb0:	20013fd0 	.word	0x20013fd0
 801acb4:	20013f58 	.word	0x20013f58
 801acb8:	20013f5a 	.word	0x20013f5a
 801acbc:	20013f5c 	.word	0x20013f5c

0801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801acc0:	4a12      	ldr	r2, [pc, #72]	@ (801ad0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801acc2:	8803      	ldrh	r3, [r0, #0]
 801acc4:	8812      	ldrh	r2, [r2, #0]
 801acc6:	4293      	cmp	r3, r2
 801acc8:	d207      	bcs.n	801acda <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801acca:	4a11      	ldr	r2, [pc, #68]	@ (801ad10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801accc:	6812      	ldr	r2, [r2, #0]
 801acce:	2114      	movs	r1, #20
 801acd0:	fb01 2303 	mla	r3, r1, r3, r2
 801acd4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801acd8:	4770      	bx	lr
 801acda:	490e      	ldr	r1, [pc, #56]	@ (801ad14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801acdc:	8809      	ldrh	r1, [r1, #0]
 801acde:	4411      	add	r1, r2
 801ace0:	428b      	cmp	r3, r1
 801ace2:	da04      	bge.n	801acee <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801ace4:	1a9b      	subs	r3, r3, r2
 801ace6:	4a0c      	ldr	r2, [pc, #48]	@ (801ad18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801ace8:	210e      	movs	r1, #14
 801acea:	6812      	ldr	r2, [r2, #0]
 801acec:	e7f0      	b.n	801acd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801acee:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801acf2:	4293      	cmp	r3, r2
 801acf4:	d108      	bne.n	801ad08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801acf6:	4b09      	ldr	r3, [pc, #36]	@ (801ad1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801acf8:	781b      	ldrb	r3, [r3, #0]
 801acfa:	b91b      	cbnz	r3, 801ad04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801acfc:	4b08      	ldr	r3, [pc, #32]	@ (801ad20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801acfe:	f9b3 0000 	ldrsh.w	r0, [r3]
 801ad02:	4770      	bx	lr
 801ad04:	4b07      	ldr	r3, [pc, #28]	@ (801ad24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801ad06:	e7fa      	b.n	801acfe <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801ad08:	2000      	movs	r0, #0
 801ad0a:	4770      	bx	lr
 801ad0c:	20013fe8 	.word	0x20013fe8
 801ad10:	20013ff0 	.word	0x20013ff0
 801ad14:	20013fec 	.word	0x20013fec
 801ad18:	20013fd0 	.word	0x20013fd0
 801ad1c:	20013f58 	.word	0x20013f58
 801ad20:	20013f5c 	.word	0x20013f5c
 801ad24:	20013f5a 	.word	0x20013f5a

0801ad28 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801ad28:	b530      	push	{r4, r5, lr}
 801ad2a:	4a22      	ldr	r2, [pc, #136]	@ (801adb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801ad2c:	880b      	ldrh	r3, [r1, #0]
 801ad2e:	8812      	ldrh	r2, [r2, #0]
 801ad30:	4293      	cmp	r3, r2
 801ad32:	d213      	bcs.n	801ad5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801ad34:	4a20      	ldr	r2, [pc, #128]	@ (801adb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801ad36:	6812      	ldr	r2, [r2, #0]
 801ad38:	2114      	movs	r1, #20
 801ad3a:	fb01 2303 	mla	r3, r1, r3, r2
 801ad3e:	8a1a      	ldrh	r2, [r3, #16]
 801ad40:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801ad44:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801ad48:	8a5b      	ldrh	r3, [r3, #18]
 801ad4a:	8004      	strh	r4, [r0, #0]
 801ad4c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801ad50:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801ad54:	8041      	strh	r1, [r0, #2]
 801ad56:	8082      	strh	r2, [r0, #4]
 801ad58:	80c3      	strh	r3, [r0, #6]
 801ad5a:	e024      	b.n	801ada6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801ad5c:	4917      	ldr	r1, [pc, #92]	@ (801adbc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801ad5e:	8809      	ldrh	r1, [r1, #0]
 801ad60:	4411      	add	r1, r2
 801ad62:	428b      	cmp	r3, r1
 801ad64:	da10      	bge.n	801ad88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801ad66:	1a9b      	subs	r3, r3, r2
 801ad68:	220e      	movs	r2, #14
 801ad6a:	4353      	muls	r3, r2
 801ad6c:	4a14      	ldr	r2, [pc, #80]	@ (801adc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801ad6e:	6811      	ldr	r1, [r2, #0]
 801ad70:	18ca      	adds	r2, r1, r3
 801ad72:	5ecd      	ldrsh	r5, [r1, r3]
 801ad74:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801ad78:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801ad7c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801ad80:	8005      	strh	r5, [r0, #0]
 801ad82:	8044      	strh	r4, [r0, #2]
 801ad84:	8081      	strh	r1, [r0, #4]
 801ad86:	e7e7      	b.n	801ad58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801ad88:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801ad8c:	4293      	cmp	r3, r2
 801ad8e:	d10b      	bne.n	801ada8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801ad90:	4b0c      	ldr	r3, [pc, #48]	@ (801adc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801ad92:	f9b3 1000 	ldrsh.w	r1, [r3]
 801ad96:	4b0c      	ldr	r3, [pc, #48]	@ (801adc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801ad98:	8081      	strh	r1, [r0, #4]
 801ad9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ad9e:	80c2      	strh	r2, [r0, #6]
 801ada0:	2300      	movs	r3, #0
 801ada2:	8003      	strh	r3, [r0, #0]
 801ada4:	8043      	strh	r3, [r0, #2]
 801ada6:	bd30      	pop	{r4, r5, pc}
 801ada8:	2300      	movs	r3, #0
 801adaa:	8003      	strh	r3, [r0, #0]
 801adac:	8043      	strh	r3, [r0, #2]
 801adae:	8083      	strh	r3, [r0, #4]
 801adb0:	e7d2      	b.n	801ad58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801adb2:	bf00      	nop
 801adb4:	20013fe8 	.word	0x20013fe8
 801adb8:	20013ff0 	.word	0x20013ff0
 801adbc:	20013fec 	.word	0x20013fec
 801adc0:	20013fd0 	.word	0x20013fd0
 801adc4:	20013f54 	.word	0x20013f54
 801adc8:	20013f56 	.word	0x20013f56

0801adcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801adcc:	4a17      	ldr	r2, [pc, #92]	@ (801ae2c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801adce:	8803      	ldrh	r3, [r0, #0]
 801add0:	8812      	ldrh	r2, [r2, #0]
 801add2:	4293      	cmp	r3, r2
 801add4:	d213      	bcs.n	801adfe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801add6:	4a16      	ldr	r2, [pc, #88]	@ (801ae30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801add8:	6812      	ldr	r2, [r2, #0]
 801adda:	2114      	movs	r1, #20
 801addc:	fb01 2303 	mla	r3, r1, r3, r2
 801ade0:	8a1a      	ldrh	r2, [r3, #16]
 801ade2:	8919      	ldrh	r1, [r3, #8]
 801ade4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801ade8:	428a      	cmp	r2, r1
 801adea:	db1d      	blt.n	801ae28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801adec:	8a58      	ldrh	r0, [r3, #18]
 801adee:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801adf2:	895b      	ldrh	r3, [r3, #10]
 801adf4:	4298      	cmp	r0, r3
 801adf6:	bfac      	ite	ge
 801adf8:	2000      	movge	r0, #0
 801adfa:	2001      	movlt	r0, #1
 801adfc:	4770      	bx	lr
 801adfe:	490d      	ldr	r1, [pc, #52]	@ (801ae34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801ae00:	8809      	ldrh	r1, [r1, #0]
 801ae02:	4411      	add	r1, r2
 801ae04:	428b      	cmp	r3, r1
 801ae06:	da0d      	bge.n	801ae24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801ae08:	1a9b      	subs	r3, r3, r2
 801ae0a:	4a0b      	ldr	r2, [pc, #44]	@ (801ae38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801ae0c:	6812      	ldr	r2, [r2, #0]
 801ae0e:	210e      	movs	r1, #14
 801ae10:	fb01 2303 	mla	r3, r1, r3, r2
 801ae14:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801ae18:	891a      	ldrh	r2, [r3, #8]
 801ae1a:	4291      	cmp	r1, r2
 801ae1c:	db04      	blt.n	801ae28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801ae1e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801ae22:	e7e6      	b.n	801adf2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801ae24:	2000      	movs	r0, #0
 801ae26:	4770      	bx	lr
 801ae28:	2001      	movs	r0, #1
 801ae2a:	4770      	bx	lr
 801ae2c:	20013fe8 	.word	0x20013fe8
 801ae30:	20013ff0 	.word	0x20013ff0
 801ae34:	20013fec 	.word	0x20013fec
 801ae38:	20013fd0 	.word	0x20013fd0

0801ae3c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801ae3c:	4a12      	ldr	r2, [pc, #72]	@ (801ae88 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801ae3e:	8803      	ldrh	r3, [r0, #0]
 801ae40:	8811      	ldrh	r1, [r2, #0]
 801ae42:	428b      	cmp	r3, r1
 801ae44:	d20b      	bcs.n	801ae5e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801ae46:	4a11      	ldr	r2, [pc, #68]	@ (801ae8c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801ae48:	6812      	ldr	r2, [r2, #0]
 801ae4a:	b112      	cbz	r2, 801ae52 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801ae4c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801ae50:	b9c0      	cbnz	r0, 801ae84 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801ae52:	4a0f      	ldr	r2, [pc, #60]	@ (801ae90 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801ae54:	6811      	ldr	r1, [r2, #0]
 801ae56:	2214      	movs	r2, #20
 801ae58:	4353      	muls	r3, r2
 801ae5a:	58c8      	ldr	r0, [r1, r3]
 801ae5c:	4770      	bx	lr
 801ae5e:	4a0d      	ldr	r2, [pc, #52]	@ (801ae94 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801ae60:	8812      	ldrh	r2, [r2, #0]
 801ae62:	440a      	add	r2, r1
 801ae64:	4293      	cmp	r3, r2
 801ae66:	da04      	bge.n	801ae72 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801ae68:	4a08      	ldr	r2, [pc, #32]	@ (801ae8c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801ae6a:	6812      	ldr	r2, [r2, #0]
 801ae6c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801ae70:	4770      	bx	lr
 801ae72:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801ae76:	4293      	cmp	r3, r2
 801ae78:	d103      	bne.n	801ae82 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801ae7a:	4b07      	ldr	r3, [pc, #28]	@ (801ae98 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801ae7c:	681b      	ldr	r3, [r3, #0]
 801ae7e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801ae80:	4770      	bx	lr
 801ae82:	2000      	movs	r0, #0
 801ae84:	4770      	bx	lr
 801ae86:	bf00      	nop
 801ae88:	20013fe8 	.word	0x20013fe8
 801ae8c:	20013fcc 	.word	0x20013fcc
 801ae90:	20013ff0 	.word	0x20013ff0
 801ae94:	20013fec 	.word	0x20013fec
 801ae98:	20013f60 	.word	0x20013f60

0801ae9c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801ae9c:	4b24      	ldr	r3, [pc, #144]	@ (801af30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801ae9e:	8802      	ldrh	r2, [r0, #0]
 801aea0:	8818      	ldrh	r0, [r3, #0]
 801aea2:	4282      	cmp	r2, r0
 801aea4:	d221      	bcs.n	801aeea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801aea6:	4b23      	ldr	r3, [pc, #140]	@ (801af34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801aea8:	6819      	ldr	r1, [r3, #0]
 801aeaa:	2314      	movs	r3, #20
 801aeac:	fb03 1302 	mla	r3, r3, r2, r1
 801aeb0:	6858      	ldr	r0, [r3, #4]
 801aeb2:	2800      	cmp	r0, #0
 801aeb4:	d03a      	beq.n	801af2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801aeb6:	4920      	ldr	r1, [pc, #128]	@ (801af38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801aeb8:	6809      	ldr	r1, [r1, #0]
 801aeba:	2900      	cmp	r1, #0
 801aebc:	d036      	beq.n	801af2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801aebe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801aec2:	2900      	cmp	r1, #0
 801aec4:	d032      	beq.n	801af2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801aec6:	891a      	ldrh	r2, [r3, #8]
 801aec8:	8958      	ldrh	r0, [r3, #10]
 801aeca:	4350      	muls	r0, r2
 801aecc:	7c5a      	ldrb	r2, [r3, #17]
 801aece:	7cdb      	ldrb	r3, [r3, #19]
 801aed0:	0952      	lsrs	r2, r2, #5
 801aed2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801aed6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801aeda:	2b0b      	cmp	r3, #11
 801aedc:	bf18      	it	ne
 801aede:	0040      	lslne	r0, r0, #1
 801aee0:	3003      	adds	r0, #3
 801aee2:	f020 0003 	bic.w	r0, r0, #3
 801aee6:	4408      	add	r0, r1
 801aee8:	4770      	bx	lr
 801aeea:	4b14      	ldr	r3, [pc, #80]	@ (801af3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801aeec:	881b      	ldrh	r3, [r3, #0]
 801aeee:	4403      	add	r3, r0
 801aef0:	429a      	cmp	r2, r3
 801aef2:	da1a      	bge.n	801af2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801aef4:	4b12      	ldr	r3, [pc, #72]	@ (801af40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801aef6:	681b      	ldr	r3, [r3, #0]
 801aef8:	1a10      	subs	r0, r2, r0
 801aefa:	210e      	movs	r1, #14
 801aefc:	fb01 3000 	mla	r0, r1, r0, r3
 801af00:	7b03      	ldrb	r3, [r0, #12]
 801af02:	f003 031f 	and.w	r3, r3, #31
 801af06:	2b0b      	cmp	r3, #11
 801af08:	d10b      	bne.n	801af22 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801af0a:	8903      	ldrh	r3, [r0, #8]
 801af0c:	8940      	ldrh	r0, [r0, #10]
 801af0e:	4358      	muls	r0, r3
 801af10:	4b09      	ldr	r3, [pc, #36]	@ (801af38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801af12:	6819      	ldr	r1, [r3, #0]
 801af14:	3003      	adds	r0, #3
 801af16:	f020 0303 	bic.w	r3, r0, #3
 801af1a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801af1e:	4418      	add	r0, r3
 801af20:	4770      	bx	lr
 801af22:	2b0d      	cmp	r3, #13
 801af24:	d101      	bne.n	801af2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801af26:	300d      	adds	r0, #13
 801af28:	4770      	bx	lr
 801af2a:	2000      	movs	r0, #0
 801af2c:	4770      	bx	lr
 801af2e:	bf00      	nop
 801af30:	20013fe8 	.word	0x20013fe8
 801af34:	20013ff0 	.word	0x20013ff0
 801af38:	20013fcc 	.word	0x20013fcc
 801af3c:	20013fec 	.word	0x20013fec
 801af40:	20013fd0 	.word	0x20013fd0

0801af44 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801af44:	b510      	push	{r4, lr}
 801af46:	4b1f      	ldr	r3, [pc, #124]	@ (801afc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801af48:	8802      	ldrh	r2, [r0, #0]
 801af4a:	881b      	ldrh	r3, [r3, #0]
 801af4c:	429a      	cmp	r2, r3
 801af4e:	d21a      	bcs.n	801af86 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801af50:	4b1d      	ldr	r3, [pc, #116]	@ (801afc8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801af52:	681b      	ldr	r3, [r3, #0]
 801af54:	2114      	movs	r1, #20
 801af56:	fb01 3102 	mla	r1, r1, r2, r3
 801af5a:	7c4b      	ldrb	r3, [r1, #17]
 801af5c:	0958      	lsrs	r0, r3, #5
 801af5e:	7ccb      	ldrb	r3, [r1, #19]
 801af60:	491a      	ldr	r1, [pc, #104]	@ (801afcc <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801af62:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801af66:	6809      	ldr	r1, [r1, #0]
 801af68:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801af6c:	b2d8      	uxtb	r0, r3
 801af6e:	b149      	cbz	r1, 801af84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801af70:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801af74:	b132      	cbz	r2, 801af84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801af76:	2b0e      	cmp	r3, #14
 801af78:	d021      	beq.n	801afbe <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801af7a:	280f      	cmp	r0, #15
 801af7c:	d01d      	beq.n	801afba <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801af7e:	2810      	cmp	r0, #16
 801af80:	bf08      	it	eq
 801af82:	2002      	moveq	r0, #2
 801af84:	bd10      	pop	{r4, pc}
 801af86:	4912      	ldr	r1, [pc, #72]	@ (801afd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801af88:	8809      	ldrh	r1, [r1, #0]
 801af8a:	4419      	add	r1, r3
 801af8c:	428a      	cmp	r2, r1
 801af8e:	da09      	bge.n	801afa4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 801af90:	1ad3      	subs	r3, r2, r3
 801af92:	4a10      	ldr	r2, [pc, #64]	@ (801afd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801af94:	6812      	ldr	r2, [r2, #0]
 801af96:	210e      	movs	r1, #14
 801af98:	fb01 2303 	mla	r3, r1, r3, r2
 801af9c:	7b18      	ldrb	r0, [r3, #12]
 801af9e:	f000 001f 	and.w	r0, r0, #31
 801afa2:	e7ef      	b.n	801af84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801afa4:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801afa8:	429a      	cmp	r2, r3
 801afaa:	d108      	bne.n	801afbe <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801afac:	f7e9 f874 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 801afb0:	6803      	ldr	r3, [r0, #0]
 801afb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801afb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801afb8:	4718      	bx	r3
 801afba:	2001      	movs	r0, #1
 801afbc:	e7e2      	b.n	801af84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801afbe:	2000      	movs	r0, #0
 801afc0:	e7e0      	b.n	801af84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801afc2:	bf00      	nop
 801afc4:	20013fe8 	.word	0x20013fe8
 801afc8:	20013ff0 	.word	0x20013ff0
 801afcc:	20013fcc 	.word	0x20013fcc
 801afd0:	20013fec 	.word	0x20013fec
 801afd4:	20013fd0 	.word	0x20013fd0

0801afd8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801afd8:	2010      	movs	r0, #16
 801afda:	4770      	bx	lr

0801afdc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801afdc:	2000      	movs	r0, #0
 801afde:	4770      	bx	lr

0801afe0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801afe0:	4b02      	ldr	r3, [pc, #8]	@ (801afec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801afe2:	8818      	ldrh	r0, [r3, #0]
 801afe4:	0040      	lsls	r0, r0, #1
 801afe6:	b280      	uxth	r0, r0
 801afe8:	4770      	bx	lr
 801afea:	bf00      	nop
 801afec:	20013f5a 	.word	0x20013f5a

0801aff0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801aff0:	2bff      	cmp	r3, #255	@ 0xff
 801aff2:	d05e      	beq.n	801b0b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801aff4:	2a0b      	cmp	r2, #11
 801aff6:	d058      	beq.n	801b0aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801aff8:	d80e      	bhi.n	801b018 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801affa:	2a03      	cmp	r2, #3
 801affc:	d04d      	beq.n	801b09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801affe:	d804      	bhi.n	801b00a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801b000:	2a01      	cmp	r2, #1
 801b002:	d04c      	beq.n	801b09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801b004:	d94d      	bls.n	801b0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801b006:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801b008:	e031      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b00a:	2a09      	cmp	r2, #9
 801b00c:	d04d      	beq.n	801b0aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801b00e:	d84a      	bhi.n	801b0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801b010:	2a08      	cmp	r2, #8
 801b012:	d048      	beq.n	801b0a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801b014:	2300      	movs	r3, #0
 801b016:	e02a      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b018:	2a2f      	cmp	r2, #47	@ 0x2f
 801b01a:	d02c      	beq.n	801b076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 801b01c:	d811      	bhi.n	801b042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801b01e:	2a2d      	cmp	r2, #45	@ 0x2d
 801b020:	d018      	beq.n	801b054 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801b022:	d831      	bhi.n	801b088 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801b024:	2a2c      	cmp	r2, #44	@ 0x2c
 801b026:	d1f5      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b028:	684a      	ldr	r2, [r1, #4]
 801b02a:	7813      	ldrb	r3, [r2, #0]
 801b02c:	7852      	ldrb	r2, [r2, #1]
 801b02e:	2a00      	cmp	r2, #0
 801b030:	d1f0      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b032:	2b01      	cmp	r3, #1
 801b034:	d01d      	beq.n	801b072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801b036:	2b00      	cmp	r3, #0
 801b038:	d02d      	beq.n	801b096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801b03a:	2b02      	cmp	r3, #2
 801b03c:	d1ea      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b03e:	68c3      	ldr	r3, [r0, #12]
 801b040:	e015      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b042:	2a31      	cmp	r2, #49	@ 0x31
 801b044:	d004      	beq.n	801b050 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801b046:	d332      	bcc.n	801b0ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801b048:	2a32      	cmp	r2, #50	@ 0x32
 801b04a:	d030      	beq.n	801b0ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801b04c:	2a33      	cmp	r2, #51	@ 0x33
 801b04e:	d1e1      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b050:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801b052:	e00c      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b054:	684a      	ldr	r2, [r1, #4]
 801b056:	7813      	ldrb	r3, [r2, #0]
 801b058:	7852      	ldrb	r2, [r2, #1]
 801b05a:	2a00      	cmp	r2, #0
 801b05c:	d1da      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b05e:	2b01      	cmp	r3, #1
 801b060:	d004      	beq.n	801b06c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801b062:	d30f      	bcc.n	801b084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801b064:	2b02      	cmp	r3, #2
 801b066:	d1d5      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b068:	6943      	ldr	r3, [r0, #20]
 801b06a:	e000      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b06c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801b06e:	4618      	mov	r0, r3
 801b070:	4770      	bx	lr
 801b072:	69c3      	ldr	r3, [r0, #28]
 801b074:	e7fb      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b076:	684b      	ldr	r3, [r1, #4]
 801b078:	781a      	ldrb	r2, [r3, #0]
 801b07a:	785b      	ldrb	r3, [r3, #1]
 801b07c:	2b00      	cmp	r3, #0
 801b07e:	d1c9      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b080:	2a00      	cmp	r2, #0
 801b082:	d1f4      	bne.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b084:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801b086:	e7f2      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b088:	684b      	ldr	r3, [r1, #4]
 801b08a:	781a      	ldrb	r2, [r3, #0]
 801b08c:	785b      	ldrb	r3, [r3, #1]
 801b08e:	2b00      	cmp	r3, #0
 801b090:	d1c0      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b092:	2a00      	cmp	r2, #0
 801b094:	d1eb      	bne.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b096:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801b098:	e7e9      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b09a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801b09c:	e7e7      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b09e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 801b0a0:	e7e5      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0a2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801b0a4:	e7e3      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0a6:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801b0a8:	e7e1      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0aa:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801b0ac:	e7df      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0ae:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801b0b0:	e7dd      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0b2:	2a0b      	cmp	r2, #11
 801b0b4:	d059      	beq.n	801b16a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801b0b6:	d80e      	bhi.n	801b0d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801b0b8:	2a03      	cmp	r2, #3
 801b0ba:	d050      	beq.n	801b15e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801b0bc:	d804      	bhi.n	801b0c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801b0be:	2a01      	cmp	r2, #1
 801b0c0:	d04f      	beq.n	801b162 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801b0c2:	d950      	bls.n	801b166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801b0c4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801b0c6:	e7d2      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0c8:	2a09      	cmp	r2, #9
 801b0ca:	d04e      	beq.n	801b16a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801b0cc:	d801      	bhi.n	801b0d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801b0ce:	2a08      	cmp	r2, #8
 801b0d0:	d1a0      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b0d2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801b0d4:	e7cb      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b0d6:	2a2f      	cmp	r2, #47	@ 0x2f
 801b0d8:	d02d      	beq.n	801b136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801b0da:	d811      	bhi.n	801b100 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801b0dc:	2a2d      	cmp	r2, #45	@ 0x2d
 801b0de:	d018      	beq.n	801b112 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801b0e0:	d833      	bhi.n	801b14a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801b0e2:	2a2c      	cmp	r2, #44	@ 0x2c
 801b0e4:	d196      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b0e6:	684a      	ldr	r2, [r1, #4]
 801b0e8:	7813      	ldrb	r3, [r2, #0]
 801b0ea:	7852      	ldrb	r2, [r2, #1]
 801b0ec:	2a00      	cmp	r2, #0
 801b0ee:	d191      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b0f0:	2b01      	cmp	r3, #1
 801b0f2:	d01e      	beq.n	801b132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801b0f4:	2b00      	cmp	r3, #0
 801b0f6:	d030      	beq.n	801b15a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801b0f8:	2b02      	cmp	r3, #2
 801b0fa:	d18b      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b0fc:	6903      	ldr	r3, [r0, #16]
 801b0fe:	e7b6      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b100:	2a31      	cmp	r2, #49	@ 0x31
 801b102:	d004      	beq.n	801b10e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801b104:	d333      	bcc.n	801b16e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801b106:	2a32      	cmp	r2, #50	@ 0x32
 801b108:	d031      	beq.n	801b16e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801b10a:	2a33      	cmp	r2, #51	@ 0x33
 801b10c:	d182      	bne.n	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b10e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801b110:	e7ad      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b112:	684a      	ldr	r2, [r1, #4]
 801b114:	7813      	ldrb	r3, [r2, #0]
 801b116:	7852      	ldrb	r2, [r2, #1]
 801b118:	2a00      	cmp	r2, #0
 801b11a:	f47f af7b 	bne.w	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b11e:	2b01      	cmp	r3, #1
 801b120:	d005      	beq.n	801b12e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801b122:	d310      	bcc.n	801b146 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801b124:	2b02      	cmp	r3, #2
 801b126:	f47f af75 	bne.w	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b12a:	6983      	ldr	r3, [r0, #24]
 801b12c:	e79f      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b12e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801b130:	e79d      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b132:	6a03      	ldr	r3, [r0, #32]
 801b134:	e79b      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b136:	684b      	ldr	r3, [r1, #4]
 801b138:	781a      	ldrb	r2, [r3, #0]
 801b13a:	785b      	ldrb	r3, [r3, #1]
 801b13c:	2b00      	cmp	r3, #0
 801b13e:	f47f af69 	bne.w	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b142:	2a00      	cmp	r2, #0
 801b144:	d193      	bne.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b146:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801b148:	e791      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b14a:	684b      	ldr	r3, [r1, #4]
 801b14c:	781a      	ldrb	r2, [r3, #0]
 801b14e:	785b      	ldrb	r3, [r3, #1]
 801b150:	2b00      	cmp	r3, #0
 801b152:	f47f af5f 	bne.w	801b014 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801b156:	2a00      	cmp	r2, #0
 801b158:	d189      	bne.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b15a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801b15c:	e787      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b15e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801b160:	e785      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b162:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801b164:	e783      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b166:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801b168:	e781      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b16a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801b16c:	e77f      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801b16e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801b170:	e77d      	b.n	801b06e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801b172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b172:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b176:	b087      	sub	sp, #28
 801b178:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b17a:	9205      	str	r2, [sp, #20]
 801b17c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b180:	9202      	str	r2, [sp, #8]
 801b182:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801b186:	9101      	str	r1, [sp, #4]
 801b188:	6841      	ldr	r1, [r0, #4]
 801b18a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801b18e:	fb01 2404 	mla	r4, r1, r4, r2
 801b192:	6802      	ldr	r2, [r0, #0]
 801b194:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b198:	f8de 2000 	ldr.w	r2, [lr]
 801b19c:	9203      	str	r2, [sp, #12]
 801b19e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b1a2:	3204      	adds	r2, #4
 801b1a4:	9204      	str	r2, [sp, #16]
 801b1a6:	9a02      	ldr	r2, [sp, #8]
 801b1a8:	43d6      	mvns	r6, r2
 801b1aa:	b2f6      	uxtb	r6, r6
 801b1ac:	9a01      	ldr	r2, [sp, #4]
 801b1ae:	2a00      	cmp	r2, #0
 801b1b0:	dc03      	bgt.n	801b1ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b1b2:	9a05      	ldr	r2, [sp, #20]
 801b1b4:	2a00      	cmp	r2, #0
 801b1b6:	f340 8129 	ble.w	801b40c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801b1ba:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b1bc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b1c0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b1c4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b1c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b1ca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b1ce:	2b00      	cmp	r3, #0
 801b1d0:	dd0e      	ble.n	801b1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1d2:	1408      	asrs	r0, r1, #16
 801b1d4:	d405      	bmi.n	801b1e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b1d6:	4560      	cmp	r0, ip
 801b1d8:	da03      	bge.n	801b1e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b1da:	1410      	asrs	r0, r2, #16
 801b1dc:	d401      	bmi.n	801b1e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b1de:	42b8      	cmp	r0, r7
 801b1e0:	db07      	blt.n	801b1f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b1e2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b1e4:	4401      	add	r1, r0
 801b1e6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b1e8:	3b01      	subs	r3, #1
 801b1ea:	4402      	add	r2, r0
 801b1ec:	3402      	adds	r4, #2
 801b1ee:	e7ee      	b.n	801b1ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b1f0:	d071      	beq.n	801b2d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b1f2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b1f4:	1e58      	subs	r0, r3, #1
 801b1f6:	fb05 1500 	mla	r5, r5, r0, r1
 801b1fa:	142d      	asrs	r5, r5, #16
 801b1fc:	d45f      	bmi.n	801b2be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b1fe:	4565      	cmp	r5, ip
 801b200:	da5d      	bge.n	801b2be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b202:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b204:	fb05 2000 	mla	r0, r5, r0, r2
 801b208:	1400      	asrs	r0, r0, #16
 801b20a:	d458      	bmi.n	801b2be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b20c:	42b8      	cmp	r0, r7
 801b20e:	da56      	bge.n	801b2be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801b210:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801b214:	4699      	mov	r9, r3
 801b216:	46a2      	mov	sl, r4
 801b218:	f1b9 0f00 	cmp.w	r9, #0
 801b21c:	dd57      	ble.n	801b2ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801b21e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b222:	9803      	ldr	r0, [sp, #12]
 801b224:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801b228:	140d      	asrs	r5, r1, #16
 801b22a:	fb07 000c 	mla	r0, r7, ip, r0
 801b22e:	f109 39ff 	add.w	r9, r9, #4294967295
 801b232:	5d40      	ldrb	r0, [r0, r5]
 801b234:	9d04      	ldr	r5, [sp, #16]
 801b236:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b23a:	f8ba 5000 	ldrh.w	r5, [sl]
 801b23e:	122f      	asrs	r7, r5, #8
 801b240:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b244:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b248:	fb17 f706 	smulbb	r7, r7, r6
 801b24c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b250:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b254:	00ed      	lsls	r5, r5, #3
 801b256:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b25a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801b25e:	10c7      	asrs	r7, r0, #3
 801b260:	b2ed      	uxtb	r5, r5
 801b262:	00c0      	lsls	r0, r0, #3
 801b264:	fb18 f806 	smulbb	r8, r8, r6
 801b268:	fb15 f506 	smulbb	r5, r5, r6
 801b26c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b270:	b2c0      	uxtb	r0, r0
 801b272:	fa1f fc8c 	uxth.w	ip, ip
 801b276:	fb07 870b 	mla	r7, r7, fp, r8
 801b27a:	fb00 500b 	mla	r0, r0, fp, r5
 801b27e:	b280      	uxth	r0, r0
 801b280:	b2bf      	uxth	r7, r7
 801b282:	f10c 0501 	add.w	r5, ip, #1
 801b286:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b28a:	f107 0801 	add.w	r8, r7, #1
 801b28e:	1c45      	adds	r5, r0, #1
 801b290:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b294:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801b298:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b29a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b29e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b2a2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b2a6:	ea45 0c0c 	orr.w	ip, r5, ip
 801b2aa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b2ae:	4401      	add	r1, r0
 801b2b0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b2b2:	ea4c 0c08 	orr.w	ip, ip, r8
 801b2b6:	f82a cb02 	strh.w	ip, [sl], #2
 801b2ba:	4402      	add	r2, r0
 801b2bc:	e7ac      	b.n	801b218 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b2be:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801b2c2:	f04f 0800 	mov.w	r8, #0
 801b2c6:	eb03 0008 	add.w	r0, r3, r8
 801b2ca:	2800      	cmp	r0, #0
 801b2cc:	dc41      	bgt.n	801b352 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b2ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b2d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2d6:	9b01      	ldr	r3, [sp, #4]
 801b2d8:	2b00      	cmp	r3, #0
 801b2da:	f340 8097 	ble.w	801b40c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801b2de:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b2e2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b2e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b2ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b2ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b2f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b2f8:	eef0 6a62 	vmov.f32	s13, s5
 801b2fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b300:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b304:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b308:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b30c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b310:	eef0 6a43 	vmov.f32	s13, s6
 801b314:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b318:	ee12 2a90 	vmov	r2, s5
 801b31c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b320:	fb92 f3f3 	sdiv	r3, r2, r3
 801b324:	ee13 2a10 	vmov	r2, s6
 801b328:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b32a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b32c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b330:	9314      	str	r3, [sp, #80]	@ 0x50
 801b332:	9b01      	ldr	r3, [sp, #4]
 801b334:	9a05      	ldr	r2, [sp, #20]
 801b336:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b33a:	3b01      	subs	r3, #1
 801b33c:	9301      	str	r3, [sp, #4]
 801b33e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801b342:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b344:	eeb0 3a67 	vmov.f32	s6, s15
 801b348:	bf08      	it	eq
 801b34a:	4613      	moveq	r3, r2
 801b34c:	eef0 2a47 	vmov.f32	s5, s14
 801b350:	e72c      	b.n	801b1ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b352:	140f      	asrs	r7, r1, #16
 801b354:	d453      	bmi.n	801b3fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b356:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b35a:	42bd      	cmp	r5, r7
 801b35c:	dd4f      	ble.n	801b3fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b35e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b362:	d44c      	bmi.n	801b3fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b364:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b368:	4560      	cmp	r0, ip
 801b36a:	dd48      	ble.n	801b3fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b36c:	9803      	ldr	r0, [sp, #12]
 801b36e:	b22d      	sxth	r5, r5
 801b370:	fb0c 0505 	mla	r5, ip, r5, r0
 801b374:	5de8      	ldrb	r0, [r5, r7]
 801b376:	9d04      	ldr	r5, [sp, #16]
 801b378:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b37c:	f06f 0501 	mvn.w	r5, #1
 801b380:	fb05 fb08 	mul.w	fp, r5, r8
 801b384:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b388:	f834 500b 	ldrh.w	r5, [r4, fp]
 801b38c:	122f      	asrs	r7, r5, #8
 801b38e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b392:	fb17 f706 	smulbb	r7, r7, r6
 801b396:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b39a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b39e:	00ed      	lsls	r5, r5, #3
 801b3a0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801b3a4:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b3a8:	10c7      	asrs	r7, r0, #3
 801b3aa:	b2ed      	uxtb	r5, r5
 801b3ac:	00c0      	lsls	r0, r0, #3
 801b3ae:	fb19 f906 	smulbb	r9, r9, r6
 801b3b2:	fb15 f506 	smulbb	r5, r5, r6
 801b3b6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b3ba:	b2c0      	uxtb	r0, r0
 801b3bc:	fa1f fc8c 	uxth.w	ip, ip
 801b3c0:	fb07 970a 	mla	r7, r7, sl, r9
 801b3c4:	fb00 500a 	mla	r0, r0, sl, r5
 801b3c8:	b2bf      	uxth	r7, r7
 801b3ca:	b280      	uxth	r0, r0
 801b3cc:	f10c 0501 	add.w	r5, ip, #1
 801b3d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b3d4:	f107 0901 	add.w	r9, r7, #1
 801b3d8:	1c45      	adds	r5, r0, #1
 801b3da:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801b3de:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801b3e2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b3e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b3ea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b3ee:	ea45 0c0c 	orr.w	ip, r5, ip
 801b3f2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b3f6:	ea4c 0c09 	orr.w	ip, ip, r9
 801b3fa:	f824 c00b 	strh.w	ip, [r4, fp]
 801b3fe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b400:	4401      	add	r1, r0
 801b402:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b404:	f108 38ff 	add.w	r8, r8, #4294967295
 801b408:	4402      	add	r2, r0
 801b40a:	e75c      	b.n	801b2c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801b40c:	b007      	add	sp, #28
 801b40e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b412:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b416:	b085      	sub	sp, #20
 801b418:	4693      	mov	fp, r2
 801b41a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b41c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b41e:	6870      	ldr	r0, [r6, #4]
 801b420:	9100      	str	r1, [sp, #0]
 801b422:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801b426:	fb00 2404 	mla	r4, r0, r4, r2
 801b42a:	6832      	ldr	r2, [r6, #0]
 801b42c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b430:	682a      	ldr	r2, [r5, #0]
 801b432:	9201      	str	r2, [sp, #4]
 801b434:	686a      	ldr	r2, [r5, #4]
 801b436:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801b43a:	3204      	adds	r2, #4
 801b43c:	9202      	str	r2, [sp, #8]
 801b43e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b442:	9a00      	ldr	r2, [sp, #0]
 801b444:	2a00      	cmp	r2, #0
 801b446:	dc03      	bgt.n	801b450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b448:	f1bb 0f00 	cmp.w	fp, #0
 801b44c:	f340 80a0 	ble.w	801b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801b450:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b452:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b456:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b45a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b45e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b460:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b464:	2b00      	cmp	r3, #0
 801b466:	dd0c      	ble.n	801b482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b468:	1406      	asrs	r6, r0, #16
 801b46a:	d405      	bmi.n	801b478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b46c:	454e      	cmp	r6, r9
 801b46e:	da03      	bge.n	801b478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b470:	1416      	asrs	r6, r2, #16
 801b472:	d401      	bmi.n	801b478 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b474:	4546      	cmp	r6, r8
 801b476:	db05      	blt.n	801b484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b478:	4470      	add	r0, lr
 801b47a:	4462      	add	r2, ip
 801b47c:	3b01      	subs	r3, #1
 801b47e:	3402      	adds	r4, #2
 801b480:	e7f0      	b.n	801b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b482:	d00f      	beq.n	801b4a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b484:	1e5e      	subs	r6, r3, #1
 801b486:	fb0e 0706 	mla	r7, lr, r6, r0
 801b48a:	143f      	asrs	r7, r7, #16
 801b48c:	d541      	bpl.n	801b512 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801b48e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801b492:	4698      	mov	r8, r3
 801b494:	9603      	str	r6, [sp, #12]
 801b496:	f1b8 0f00 	cmp.w	r8, #0
 801b49a:	dc59      	bgt.n	801b550 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b49c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b4a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b4a4:	9b00      	ldr	r3, [sp, #0]
 801b4a6:	2b00      	cmp	r3, #0
 801b4a8:	dd72      	ble.n	801b590 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801b4aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b4ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b4b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b4b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b4b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b4bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b4c0:	eeb0 6a62 	vmov.f32	s12, s5
 801b4c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b4c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b4cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b4d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801b4d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b4d8:	eeb0 6a43 	vmov.f32	s12, s6
 801b4dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b4e0:	ee12 2a90 	vmov	r2, s5
 801b4e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b4e8:	fb92 fef3 	sdiv	lr, r2, r3
 801b4ec:	ee13 2a10 	vmov	r2, s6
 801b4f0:	fb92 fcf3 	sdiv	ip, r2, r3
 801b4f4:	9b00      	ldr	r3, [sp, #0]
 801b4f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b4fa:	3b01      	subs	r3, #1
 801b4fc:	9300      	str	r3, [sp, #0]
 801b4fe:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801b502:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b504:	eeb0 3a67 	vmov.f32	s6, s15
 801b508:	bf08      	it	eq
 801b50a:	465b      	moveq	r3, fp
 801b50c:	eef0 2a47 	vmov.f32	s5, s14
 801b510:	e797      	b.n	801b442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b512:	454f      	cmp	r7, r9
 801b514:	dabb      	bge.n	801b48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b516:	fb0c 2606 	mla	r6, ip, r6, r2
 801b51a:	1436      	asrs	r6, r6, #16
 801b51c:	d4b7      	bmi.n	801b48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b51e:	4546      	cmp	r6, r8
 801b520:	dab5      	bge.n	801b48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b522:	461e      	mov	r6, r3
 801b524:	46a0      	mov	r8, r4
 801b526:	2e00      	cmp	r6, #0
 801b528:	ddb8      	ble.n	801b49c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b52a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801b52e:	9901      	ldr	r1, [sp, #4]
 801b530:	1417      	asrs	r7, r2, #16
 801b532:	ea4f 4920 	mov.w	r9, r0, asr #16
 801b536:	fb0a 1707 	mla	r7, sl, r7, r1
 801b53a:	9902      	ldr	r1, [sp, #8]
 801b53c:	f817 7009 	ldrb.w	r7, [r7, r9]
 801b540:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b544:	f828 7b02 	strh.w	r7, [r8], #2
 801b548:	4470      	add	r0, lr
 801b54a:	4462      	add	r2, ip
 801b54c:	3e01      	subs	r6, #1
 801b54e:	e7ea      	b.n	801b526 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801b550:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b554:	d417      	bmi.n	801b586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b556:	68ae      	ldr	r6, [r5, #8]
 801b558:	454e      	cmp	r6, r9
 801b55a:	dd14      	ble.n	801b586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b55c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b560:	d411      	bmi.n	801b586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b562:	68ef      	ldr	r7, [r5, #12]
 801b564:	4557      	cmp	r7, sl
 801b566:	dd0e      	ble.n	801b586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801b568:	9f01      	ldr	r7, [sp, #4]
 801b56a:	b236      	sxth	r6, r6
 801b56c:	fb0a 7606 	mla	r6, sl, r6, r7
 801b570:	9f02      	ldr	r7, [sp, #8]
 801b572:	f816 6009 	ldrb.w	r6, [r6, r9]
 801b576:	f06f 0101 	mvn.w	r1, #1
 801b57a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b57e:	fb01 f608 	mul.w	r6, r1, r8
 801b582:	9903      	ldr	r1, [sp, #12]
 801b584:	538f      	strh	r7, [r1, r6]
 801b586:	4470      	add	r0, lr
 801b588:	4462      	add	r2, ip
 801b58a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b58e:	e782      	b.n	801b496 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b590:	b005      	add	sp, #20
 801b592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b596:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b59a:	b087      	sub	sp, #28
 801b59c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b59e:	9205      	str	r2, [sp, #20]
 801b5a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b5a4:	9203      	str	r2, [sp, #12]
 801b5a6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801b5aa:	9102      	str	r1, [sp, #8]
 801b5ac:	6861      	ldr	r1, [r4, #4]
 801b5ae:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801b5b2:	fb01 2000 	mla	r0, r1, r0, r2
 801b5b6:	6822      	ldr	r2, [r4, #0]
 801b5b8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801b5bc:	9200      	str	r2, [sp, #0]
 801b5be:	f8dc 2000 	ldr.w	r2, [ip]
 801b5c2:	9204      	str	r2, [sp, #16]
 801b5c4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b5c8:	3204      	adds	r2, #4
 801b5ca:	9201      	str	r2, [sp, #4]
 801b5cc:	9a03      	ldr	r2, [sp, #12]
 801b5ce:	43d5      	mvns	r5, r2
 801b5d0:	b2ed      	uxtb	r5, r5
 801b5d2:	9a02      	ldr	r2, [sp, #8]
 801b5d4:	2a00      	cmp	r2, #0
 801b5d6:	dc03      	bgt.n	801b5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b5d8:	9a05      	ldr	r2, [sp, #20]
 801b5da:	2a00      	cmp	r2, #0
 801b5dc:	f340 812c 	ble.w	801b838 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b5e0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b5e2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801b5e6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801b5ea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b5ee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b5f0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b5f4:	2b00      	cmp	r3, #0
 801b5f6:	dd10      	ble.n	801b61a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b5f8:	140c      	asrs	r4, r1, #16
 801b5fa:	d405      	bmi.n	801b608 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b5fc:	4574      	cmp	r4, lr
 801b5fe:	da03      	bge.n	801b608 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b600:	1414      	asrs	r4, r2, #16
 801b602:	d401      	bmi.n	801b608 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b604:	42bc      	cmp	r4, r7
 801b606:	db09      	blt.n	801b61c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b608:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b60a:	9800      	ldr	r0, [sp, #0]
 801b60c:	4421      	add	r1, r4
 801b60e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b610:	3002      	adds	r0, #2
 801b612:	4422      	add	r2, r4
 801b614:	3b01      	subs	r3, #1
 801b616:	9000      	str	r0, [sp, #0]
 801b618:	e7ec      	b.n	801b5f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b61a:	d071      	beq.n	801b700 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801b61c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b61e:	1e5c      	subs	r4, r3, #1
 801b620:	fb06 1604 	mla	r6, r6, r4, r1
 801b624:	1436      	asrs	r6, r6, #16
 801b626:	d45d      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b628:	4576      	cmp	r6, lr
 801b62a:	da5b      	bge.n	801b6e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b62c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801b62e:	fb06 2404 	mla	r4, r6, r4, r2
 801b632:	1424      	asrs	r4, r4, #16
 801b634:	d456      	bmi.n	801b6e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b636:	42bc      	cmp	r4, r7
 801b638:	da54      	bge.n	801b6e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b63a:	f8dd 9000 	ldr.w	r9, [sp]
 801b63e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801b642:	4698      	mov	r8, r3
 801b644:	f1b8 0f00 	cmp.w	r8, #0
 801b648:	dd54      	ble.n	801b6f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b64a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b64e:	9804      	ldr	r0, [sp, #16]
 801b650:	1414      	asrs	r4, r2, #16
 801b652:	fb07 0404 	mla	r4, r7, r4, r0
 801b656:	140e      	asrs	r6, r1, #16
 801b658:	9801      	ldr	r0, [sp, #4]
 801b65a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801b65e:	f8b9 4000 	ldrh.w	r4, [r9]
 801b662:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b666:	eb00 0b0e 	add.w	fp, r0, lr
 801b66a:	1227      	asrs	r7, r4, #8
 801b66c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b670:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b674:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801b678:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b67a:	fb16 f60a 	smulbb	r6, r6, sl
 801b67e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b682:	fb07 6705 	mla	r7, r7, r5, r6
 801b686:	10e6      	asrs	r6, r4, #3
 801b688:	00e4      	lsls	r4, r4, #3
 801b68a:	b2e4      	uxtb	r4, r4
 801b68c:	fb1b fb0a 	smulbb	fp, fp, sl
 801b690:	fb14 f405 	smulbb	r4, r4, r5
 801b694:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b698:	b2bf      	uxth	r7, r7
 801b69a:	fb06 b605 	mla	r6, r6, r5, fp
 801b69e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801b6a2:	b2b6      	uxth	r6, r6
 801b6a4:	fa1f fe8e 	uxth.w	lr, lr
 801b6a8:	1c7c      	adds	r4, r7, #1
 801b6aa:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b6ae:	f106 0b01 	add.w	fp, r6, #1
 801b6b2:	f10e 0401 	add.w	r4, lr, #1
 801b6b6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801b6ba:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b6be:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b6c2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b6c6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b6ca:	4327      	orrs	r7, r4
 801b6cc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b6d0:	4401      	add	r1, r0
 801b6d2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b6d4:	ea47 070b 	orr.w	r7, r7, fp
 801b6d8:	f829 7b02 	strh.w	r7, [r9], #2
 801b6dc:	4402      	add	r2, r0
 801b6de:	f108 38ff 	add.w	r8, r8, #4294967295
 801b6e2:	e7af      	b.n	801b644 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b6e4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801b6e8:	f04f 0e00 	mov.w	lr, #0
 801b6ec:	eb03 040e 	add.w	r4, r3, lr
 801b6f0:	2c00      	cmp	r4, #0
 801b6f2:	dc43      	bgt.n	801b77c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b6f4:	9a00      	ldr	r2, [sp, #0]
 801b6f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b6fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b6fe:	9300      	str	r3, [sp, #0]
 801b700:	9b02      	ldr	r3, [sp, #8]
 801b702:	2b00      	cmp	r3, #0
 801b704:	f340 8098 	ble.w	801b838 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b708:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b70c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b710:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b714:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b716:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b71a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b71e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b722:	eef0 6a62 	vmov.f32	s13, s5
 801b726:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b72a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b72e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b732:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b736:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b73a:	eef0 6a43 	vmov.f32	s13, s6
 801b73e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b742:	ee12 2a90 	vmov	r2, s5
 801b746:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b74a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b74e:	ee13 2a10 	vmov	r2, s6
 801b752:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b754:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b756:	fb92 f3f3 	sdiv	r3, r2, r3
 801b75a:	9314      	str	r3, [sp, #80]	@ 0x50
 801b75c:	9b02      	ldr	r3, [sp, #8]
 801b75e:	9a05      	ldr	r2, [sp, #20]
 801b760:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b764:	3b01      	subs	r3, #1
 801b766:	9302      	str	r3, [sp, #8]
 801b768:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801b76c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b76e:	eeb0 3a67 	vmov.f32	s6, s15
 801b772:	bf08      	it	eq
 801b774:	4613      	moveq	r3, r2
 801b776:	eef0 2a47 	vmov.f32	s5, s14
 801b77a:	e72a      	b.n	801b5d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b77c:	140f      	asrs	r7, r1, #16
 801b77e:	d454      	bmi.n	801b82a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b780:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b784:	42be      	cmp	r6, r7
 801b786:	dd50      	ble.n	801b82a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b788:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b78c:	d44d      	bmi.n	801b82a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b78e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b792:	4544      	cmp	r4, r8
 801b794:	dd49      	ble.n	801b82a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b796:	9c04      	ldr	r4, [sp, #16]
 801b798:	b236      	sxth	r6, r6
 801b79a:	fb08 4606 	mla	r6, r8, r6, r4
 801b79e:	f06f 0001 	mvn.w	r0, #1
 801b7a2:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b7a6:	9c01      	ldr	r4, [sp, #4]
 801b7a8:	fb00 fa0e 	mul.w	sl, r0, lr
 801b7ac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b7b0:	9800      	ldr	r0, [sp, #0]
 801b7b2:	eb04 0b08 	add.w	fp, r4, r8
 801b7b6:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b7ba:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b7be:	9801      	ldr	r0, [sp, #4]
 801b7c0:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b7c4:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b7c8:	9800      	ldr	r0, [sp, #0]
 801b7ca:	1227      	asrs	r7, r4, #8
 801b7cc:	fb16 f609 	smulbb	r6, r6, r9
 801b7d0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b7d4:	fb07 6705 	mla	r7, r7, r5, r6
 801b7d8:	10e6      	asrs	r6, r4, #3
 801b7da:	00e4      	lsls	r4, r4, #3
 801b7dc:	b2e4      	uxtb	r4, r4
 801b7de:	fb1b fb09 	smulbb	fp, fp, r9
 801b7e2:	fb14 f405 	smulbb	r4, r4, r5
 801b7e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b7ea:	b2bf      	uxth	r7, r7
 801b7ec:	fb06 b605 	mla	r6, r6, r5, fp
 801b7f0:	fb08 4809 	mla	r8, r8, r9, r4
 801b7f4:	b2b6      	uxth	r6, r6
 801b7f6:	fa1f f888 	uxth.w	r8, r8
 801b7fa:	1c7c      	adds	r4, r7, #1
 801b7fc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b800:	f106 0b01 	add.w	fp, r6, #1
 801b804:	f108 0401 	add.w	r4, r8, #1
 801b808:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b80c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b810:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b814:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b818:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b81c:	4327      	orrs	r7, r4
 801b81e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b822:	ea47 070b 	orr.w	r7, r7, fp
 801b826:	f820 700a 	strh.w	r7, [r0, sl]
 801b82a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b82c:	4401      	add	r1, r0
 801b82e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b830:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b834:	4402      	add	r2, r0
 801b836:	e759      	b.n	801b6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b838:	b007      	add	sp, #28
 801b83a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b840 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b844:	b085      	sub	sp, #20
 801b846:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b84a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b84c:	9203      	str	r2, [sp, #12]
 801b84e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801b852:	6870      	ldr	r0, [r6, #4]
 801b854:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b856:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801b85a:	686f      	ldr	r7, [r5, #4]
 801b85c:	9101      	str	r1, [sp, #4]
 801b85e:	fb00 2404 	mla	r4, r0, r4, r2
 801b862:	6832      	ldr	r2, [r6, #0]
 801b864:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b868:	682a      	ldr	r2, [r5, #0]
 801b86a:	9202      	str	r2, [sp, #8]
 801b86c:	3704      	adds	r7, #4
 801b86e:	9a01      	ldr	r2, [sp, #4]
 801b870:	2a00      	cmp	r2, #0
 801b872:	dc03      	bgt.n	801b87c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b874:	9a03      	ldr	r2, [sp, #12]
 801b876:	2a00      	cmp	r2, #0
 801b878:	f340 80cc 	ble.w	801ba14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b87c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b87e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b882:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b886:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b88a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b88c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b890:	2b00      	cmp	r3, #0
 801b892:	dd0d      	ble.n	801b8b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b894:	1406      	asrs	r6, r0, #16
 801b896:	d405      	bmi.n	801b8a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b898:	454e      	cmp	r6, r9
 801b89a:	da03      	bge.n	801b8a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b89c:	1416      	asrs	r6, r2, #16
 801b89e:	d401      	bmi.n	801b8a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b8a0:	4546      	cmp	r6, r8
 801b8a2:	db06      	blt.n	801b8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b8a4:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801b8a6:	4460      	add	r0, ip
 801b8a8:	4432      	add	r2, r6
 801b8aa:	3b01      	subs	r3, #1
 801b8ac:	3402      	adds	r4, #2
 801b8ae:	e7ef      	b.n	801b890 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b8b0:	d00f      	beq.n	801b8d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b8b2:	1e5e      	subs	r6, r3, #1
 801b8b4:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b8b8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b8bc:	d543      	bpl.n	801b946 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b8be:	4698      	mov	r8, r3
 801b8c0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b8c4:	f1b8 0f00 	cmp.w	r8, #0
 801b8c8:	dc71      	bgt.n	801b9ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b8ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b8ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b8d2:	9b01      	ldr	r3, [sp, #4]
 801b8d4:	2b00      	cmp	r3, #0
 801b8d6:	f340 809d 	ble.w	801ba14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b8da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b8de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b8e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b8e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b8e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b8ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b8f0:	eeb0 6a62 	vmov.f32	s12, s5
 801b8f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b8f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b8fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b900:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801b904:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b908:	eeb0 6a43 	vmov.f32	s12, s6
 801b90c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b910:	ee12 2a90 	vmov	r2, s5
 801b914:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b918:	fb92 fcf3 	sdiv	ip, r2, r3
 801b91c:	ee13 2a10 	vmov	r2, s6
 801b920:	fb92 f3f3 	sdiv	r3, r2, r3
 801b924:	9312      	str	r3, [sp, #72]	@ 0x48
 801b926:	9b01      	ldr	r3, [sp, #4]
 801b928:	9a03      	ldr	r2, [sp, #12]
 801b92a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b92e:	3b01      	subs	r3, #1
 801b930:	9301      	str	r3, [sp, #4]
 801b932:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801b936:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b938:	eeb0 3a67 	vmov.f32	s6, s15
 801b93c:	bf08      	it	eq
 801b93e:	4613      	moveq	r3, r2
 801b940:	eef0 2a47 	vmov.f32	s5, s14
 801b944:	e793      	b.n	801b86e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b946:	45ce      	cmp	lr, r9
 801b948:	dab9      	bge.n	801b8be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b94a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b94c:	fb01 2606 	mla	r6, r1, r6, r2
 801b950:	1436      	asrs	r6, r6, #16
 801b952:	d4b4      	bmi.n	801b8be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b954:	4546      	cmp	r6, r8
 801b956:	dab2      	bge.n	801b8be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b958:	4698      	mov	r8, r3
 801b95a:	46a2      	mov	sl, r4
 801b95c:	f1b8 0f00 	cmp.w	r8, #0
 801b960:	ddb3      	ble.n	801b8ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b962:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b966:	9902      	ldr	r1, [sp, #8]
 801b968:	1416      	asrs	r6, r2, #16
 801b96a:	fb09 1606 	mla	r6, r9, r6, r1
 801b96e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b972:	492a      	ldr	r1, [pc, #168]	@ (801ba1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b974:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b978:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b97c:	eb07 0b0e 	add.w	fp, r7, lr
 801b980:	4460      	add	r0, ip
 801b982:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b986:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b98a:	00f6      	lsls	r6, r6, #3
 801b98c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b990:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b994:	ea49 0606 	orr.w	r6, r9, r6
 801b998:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b99c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b99e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b9a2:	f82a 6b02 	strh.w	r6, [sl], #2
 801b9a6:	440a      	add	r2, r1
 801b9a8:	f108 38ff 	add.w	r8, r8, #4294967295
 801b9ac:	e7d6      	b.n	801b95c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b9ae:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b9b2:	d429      	bmi.n	801ba08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b9b4:	68ae      	ldr	r6, [r5, #8]
 801b9b6:	454e      	cmp	r6, r9
 801b9b8:	dd26      	ble.n	801ba08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b9ba:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b9be:	d423      	bmi.n	801ba08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b9c0:	68e9      	ldr	r1, [r5, #12]
 801b9c2:	4559      	cmp	r1, fp
 801b9c4:	dd20      	ble.n	801ba08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b9c6:	9902      	ldr	r1, [sp, #8]
 801b9c8:	fa0f fe86 	sxth.w	lr, r6
 801b9cc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b9d0:	f06f 0101 	mvn.w	r1, #1
 801b9d4:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b9d8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b9dc:	eb07 060e 	add.w	r6, r7, lr
 801b9e0:	fb01 f908 	mul.w	r9, r1, r8
 801b9e4:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b9e8:	7876      	ldrb	r6, [r6, #1]
 801b9ea:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801b9ee:	00f6      	lsls	r6, r6, #3
 801b9f0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b9f4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b9f8:	ea4b 0606 	orr.w	r6, fp, r6
 801b9fc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801ba00:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801ba04:	f82a 6009 	strh.w	r6, [sl, r9]
 801ba08:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ba0a:	4460      	add	r0, ip
 801ba0c:	440a      	add	r2, r1
 801ba0e:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba12:	e757      	b.n	801b8c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ba14:	b005      	add	sp, #20
 801ba16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba1a:	bf00      	nop
 801ba1c:	fffff800 	.word	0xfffff800

0801ba20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba24:	b087      	sub	sp, #28
 801ba26:	468b      	mov	fp, r1
 801ba28:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ba2a:	9204      	str	r2, [sp, #16]
 801ba2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ba30:	9205      	str	r2, [sp, #20]
 801ba32:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801ba36:	6841      	ldr	r1, [r0, #4]
 801ba38:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801ba3c:	fb01 2404 	mla	r4, r1, r4, r2
 801ba40:	6802      	ldr	r2, [r0, #0]
 801ba42:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ba46:	f8dc 2000 	ldr.w	r2, [ip]
 801ba4a:	9201      	str	r2, [sp, #4]
 801ba4c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ba50:	3204      	adds	r2, #4
 801ba52:	9202      	str	r2, [sp, #8]
 801ba54:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ba58:	f1bb 0f00 	cmp.w	fp, #0
 801ba5c:	dc03      	bgt.n	801ba66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ba5e:	9a04      	ldr	r2, [sp, #16]
 801ba60:	2a00      	cmp	r2, #0
 801ba62:	f340 8138 	ble.w	801bcd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ba66:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ba68:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ba6c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801ba70:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801ba74:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ba76:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ba7a:	2b00      	cmp	r3, #0
 801ba7c:	dd0e      	ble.n	801ba9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ba7e:	1402      	asrs	r2, r0, #16
 801ba80:	d405      	bmi.n	801ba8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ba82:	42ba      	cmp	r2, r7
 801ba84:	da03      	bge.n	801ba8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ba86:	140a      	asrs	r2, r1, #16
 801ba88:	d401      	bmi.n	801ba8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ba8a:	42b2      	cmp	r2, r6
 801ba8c:	db07      	blt.n	801ba9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ba8e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ba90:	4410      	add	r0, r2
 801ba92:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ba94:	3b01      	subs	r3, #1
 801ba96:	4411      	add	r1, r2
 801ba98:	3402      	adds	r4, #2
 801ba9a:	e7ee      	b.n	801ba7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ba9c:	d019      	beq.n	801bad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ba9e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801baa0:	1e5a      	subs	r2, r3, #1
 801baa2:	fb05 0502 	mla	r5, r5, r2, r0
 801baa6:	142d      	asrs	r5, r5, #16
 801baa8:	d409      	bmi.n	801babe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801baaa:	42bd      	cmp	r5, r7
 801baac:	da07      	bge.n	801babe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801baae:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801bab0:	fb05 1202 	mla	r2, r5, r2, r1
 801bab4:	1412      	asrs	r2, r2, #16
 801bab6:	d402      	bmi.n	801babe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bab8:	42b2      	cmp	r2, r6
 801baba:	f2c0 80ac 	blt.w	801bc16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801babe:	f04f 0e00 	mov.w	lr, #0
 801bac2:	eb03 020e 	add.w	r2, r3, lr
 801bac6:	2a00      	cmp	r2, #0
 801bac8:	dc3e      	bgt.n	801bb48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801baca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bace:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bad2:	f1bb 0f00 	cmp.w	fp, #0
 801bad6:	f340 80fe 	ble.w	801bcd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801bada:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bade:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bae2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bae6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bae8:	f1bb 0b01 	subs.w	fp, fp, #1
 801baec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801baf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801baf4:	eeb0 6a62 	vmov.f32	s12, s5
 801baf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bafc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb00:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb04:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801bb08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb0c:	eeb0 6a43 	vmov.f32	s12, s6
 801bb10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb14:	ee12 2a90 	vmov	r2, s5
 801bb18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb20:	ee13 2a10 	vmov	r2, s6
 801bb24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bb28:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bb2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bb2c:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb30:	9a04      	ldr	r2, [sp, #16]
 801bb32:	9314      	str	r3, [sp, #80]	@ 0x50
 801bb34:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801bb38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bb3a:	eeb0 3a67 	vmov.f32	s6, s15
 801bb3e:	bf08      	it	eq
 801bb40:	4613      	moveq	r3, r2
 801bb42:	eef0 2a47 	vmov.f32	s5, s14
 801bb46:	e787      	b.n	801ba58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bb48:	1406      	asrs	r6, r0, #16
 801bb4a:	d45d      	bmi.n	801bc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801bb4c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801bb50:	42b5      	cmp	r5, r6
 801bb52:	dd59      	ble.n	801bc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801bb54:	140f      	asrs	r7, r1, #16
 801bb56:	d457      	bmi.n	801bc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801bb58:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801bb5c:	42ba      	cmp	r2, r7
 801bb5e:	dd53      	ble.n	801bc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801bb60:	9a01      	ldr	r2, [sp, #4]
 801bb62:	b22d      	sxth	r5, r5
 801bb64:	fb07 2505 	mla	r5, r7, r5, r2
 801bb68:	5daa      	ldrb	r2, [r5, r6]
 801bb6a:	9d02      	ldr	r5, [sp, #8]
 801bb6c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801bb70:	0e2e      	lsrs	r6, r5, #24
 801bb72:	d049      	beq.n	801bc08 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801bb74:	f06f 0201 	mvn.w	r2, #1
 801bb78:	fb02 f20e 	mul.w	r2, r2, lr
 801bb7c:	9203      	str	r2, [sp, #12]
 801bb7e:	f834 8002 	ldrh.w	r8, [r4, r2]
 801bb82:	9a05      	ldr	r2, [sp, #20]
 801bb84:	4356      	muls	r6, r2
 801bb86:	1c72      	adds	r2, r6, #1
 801bb88:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801bb8c:	1212      	asrs	r2, r2, #8
 801bb8e:	fa1f f982 	uxth.w	r9, r2
 801bb92:	ea4f 2728 	mov.w	r7, r8, asr #8
 801bb96:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bb9a:	43d2      	mvns	r2, r2
 801bb9c:	b2d2      	uxtb	r2, r2
 801bb9e:	fb16 f609 	smulbb	r6, r6, r9
 801bba2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bba6:	fb07 6702 	mla	r7, r7, r2, r6
 801bbaa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801bbae:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801bbb2:	b2ed      	uxtb	r5, r5
 801bbb4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bbb8:	fa5f f888 	uxtb.w	r8, r8
 801bbbc:	fb15 f509 	smulbb	r5, r5, r9
 801bbc0:	fb08 5502 	mla	r5, r8, r2, r5
 801bbc4:	b2bf      	uxth	r7, r7
 801bbc6:	fb1a fa09 	smulbb	sl, sl, r9
 801bbca:	b2ad      	uxth	r5, r5
 801bbcc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bbd0:	fb06 a602 	mla	r6, r6, r2, sl
 801bbd4:	1c7a      	adds	r2, r7, #1
 801bbd6:	f105 0a01 	add.w	sl, r5, #1
 801bbda:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bbde:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bbe2:	b2b6      	uxth	r6, r6
 801bbe4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bbe8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801bbec:	ea4a 0707 	orr.w	r7, sl, r7
 801bbf0:	f106 0a01 	add.w	sl, r6, #1
 801bbf4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bbf8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bbfc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bc00:	9a03      	ldr	r2, [sp, #12]
 801bc02:	ea47 070a 	orr.w	r7, r7, sl
 801bc06:	52a7      	strh	r7, [r4, r2]
 801bc08:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bc0a:	4410      	add	r0, r2
 801bc0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bc0e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801bc12:	4411      	add	r1, r2
 801bc14:	e755      	b.n	801bac2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bc16:	f04f 0800 	mov.w	r8, #0
 801bc1a:	eba3 0208 	sub.w	r2, r3, r8
 801bc1e:	2a00      	cmp	r2, #0
 801bc20:	f77f af53 	ble.w	801baca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801bc24:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801bc28:	9f01      	ldr	r7, [sp, #4]
 801bc2a:	140a      	asrs	r2, r1, #16
 801bc2c:	1405      	asrs	r5, r0, #16
 801bc2e:	fb06 7202 	mla	r2, r6, r2, r7
 801bc32:	5d52      	ldrb	r2, [r2, r5]
 801bc34:	9d02      	ldr	r5, [sp, #8]
 801bc36:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801bc3a:	0e2e      	lsrs	r6, r5, #24
 801bc3c:	d044      	beq.n	801bcc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bc3e:	9a05      	ldr	r2, [sp, #20]
 801bc40:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801bc44:	4356      	muls	r6, r2
 801bc46:	1c72      	adds	r2, r6, #1
 801bc48:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801bc4c:	1212      	asrs	r2, r2, #8
 801bc4e:	fa1f f982 	uxth.w	r9, r2
 801bc52:	ea4f 272e 	mov.w	r7, lr, asr #8
 801bc56:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bc5a:	43d2      	mvns	r2, r2
 801bc5c:	b2d2      	uxtb	r2, r2
 801bc5e:	fb16 f609 	smulbb	r6, r6, r9
 801bc62:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bc66:	fb07 6702 	mla	r7, r7, r2, r6
 801bc6a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801bc6e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bc72:	b2ed      	uxtb	r5, r5
 801bc74:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bc78:	fa5f fe8e 	uxtb.w	lr, lr
 801bc7c:	fb15 f509 	smulbb	r5, r5, r9
 801bc80:	fb0e 5502 	mla	r5, lr, r2, r5
 801bc84:	b2bf      	uxth	r7, r7
 801bc86:	fb1a fa09 	smulbb	sl, sl, r9
 801bc8a:	b2ad      	uxth	r5, r5
 801bc8c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bc90:	fb06 a602 	mla	r6, r6, r2, sl
 801bc94:	1c7a      	adds	r2, r7, #1
 801bc96:	f105 0a01 	add.w	sl, r5, #1
 801bc9a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bc9e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bca2:	b2b6      	uxth	r6, r6
 801bca4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bca8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801bcac:	ea4a 0707 	orr.w	r7, sl, r7
 801bcb0:	f106 0a01 	add.w	sl, r6, #1
 801bcb4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bcb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bcbc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bcc0:	ea47 070a 	orr.w	r7, r7, sl
 801bcc4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801bcc8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bcca:	4410      	add	r0, r2
 801bccc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bcce:	f108 0801 	add.w	r8, r8, #1
 801bcd2:	4411      	add	r1, r2
 801bcd4:	e7a1      	b.n	801bc1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801bcd6:	b007      	add	sp, #28
 801bcd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bcdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bcdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bce0:	b085      	sub	sp, #20
 801bce2:	468b      	mov	fp, r1
 801bce4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bce6:	9203      	str	r2, [sp, #12]
 801bce8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801bcec:	6841      	ldr	r1, [r0, #4]
 801bcee:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801bcf2:	fb01 2404 	mla	r4, r1, r4, r2
 801bcf6:	6802      	ldr	r2, [r0, #0]
 801bcf8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bcfc:	f8de 2000 	ldr.w	r2, [lr]
 801bd00:	9200      	str	r2, [sp, #0]
 801bd02:	f8de 2004 	ldr.w	r2, [lr, #4]
 801bd06:	3204      	adds	r2, #4
 801bd08:	9201      	str	r2, [sp, #4]
 801bd0a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801bd0e:	f1bb 0f00 	cmp.w	fp, #0
 801bd12:	dc03      	bgt.n	801bd1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801bd14:	9a03      	ldr	r2, [sp, #12]
 801bd16:	2a00      	cmp	r2, #0
 801bd18:	f340 8153 	ble.w	801bfc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801bd1c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bd1e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801bd22:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801bd26:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801bd2a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bd2c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801bd30:	2b00      	cmp	r3, #0
 801bd32:	dd0e      	ble.n	801bd52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bd34:	1408      	asrs	r0, r1, #16
 801bd36:	d405      	bmi.n	801bd44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bd38:	42b8      	cmp	r0, r7
 801bd3a:	da03      	bge.n	801bd44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bd3c:	1410      	asrs	r0, r2, #16
 801bd3e:	d401      	bmi.n	801bd44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bd40:	42b0      	cmp	r0, r6
 801bd42:	db07      	blt.n	801bd54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd44:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bd46:	4401      	add	r1, r0
 801bd48:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bd4a:	3b01      	subs	r3, #1
 801bd4c:	4402      	add	r2, r0
 801bd4e:	3402      	adds	r4, #2
 801bd50:	e7ee      	b.n	801bd30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801bd52:	d017      	beq.n	801bd84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bd54:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bd56:	1e58      	subs	r0, r3, #1
 801bd58:	fb05 1500 	mla	r5, r5, r0, r1
 801bd5c:	142d      	asrs	r5, r5, #16
 801bd5e:	d409      	bmi.n	801bd74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bd60:	42bd      	cmp	r5, r7
 801bd62:	da07      	bge.n	801bd74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bd64:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bd66:	fb05 2000 	mla	r0, r5, r0, r2
 801bd6a:	1400      	asrs	r0, r0, #16
 801bd6c:	d402      	bmi.n	801bd74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bd6e:	42b0      	cmp	r0, r6
 801bd70:	f2c0 80bc 	blt.w	801beec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801bd74:	2600      	movs	r6, #0
 801bd76:	1998      	adds	r0, r3, r6
 801bd78:	2800      	cmp	r0, #0
 801bd7a:	dc3e      	bgt.n	801bdfa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801bd7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd84:	f1bb 0f00 	cmp.w	fp, #0
 801bd88:	f340 811b 	ble.w	801bfc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801bd8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd98:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bd9a:	f1bb 0b01 	subs.w	fp, fp, #1
 801bd9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bda2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bda6:	eeb0 6a62 	vmov.f32	s12, s5
 801bdaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bdae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bdb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bdb6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801bdba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bdbe:	eeb0 6a43 	vmov.f32	s12, s6
 801bdc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bdc6:	ee12 2a90 	vmov	r2, s5
 801bdca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bdce:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdd2:	ee13 2a10 	vmov	r2, s6
 801bdd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bdda:	9311      	str	r3, [sp, #68]	@ 0x44
 801bddc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bdde:	fb92 f3f3 	sdiv	r3, r2, r3
 801bde2:	9a03      	ldr	r2, [sp, #12]
 801bde4:	9312      	str	r3, [sp, #72]	@ 0x48
 801bde6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801bdea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bdec:	eeb0 3a67 	vmov.f32	s6, s15
 801bdf0:	bf08      	it	eq
 801bdf2:	4613      	moveq	r3, r2
 801bdf4:	eef0 2a47 	vmov.f32	s5, s14
 801bdf8:	e789      	b.n	801bd0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bdfa:	140f      	asrs	r7, r1, #16
 801bdfc:	d426      	bmi.n	801be4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801bdfe:	f8de 5008 	ldr.w	r5, [lr, #8]
 801be02:	42bd      	cmp	r5, r7
 801be04:	dd22      	ble.n	801be4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801be06:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801be0a:	d41f      	bmi.n	801be4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801be0c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801be10:	4560      	cmp	r0, ip
 801be12:	dd1b      	ble.n	801be4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801be14:	9800      	ldr	r0, [sp, #0]
 801be16:	b22d      	sxth	r5, r5
 801be18:	fb0c 0505 	mla	r5, ip, r5, r0
 801be1c:	5de8      	ldrb	r0, [r5, r7]
 801be1e:	9d01      	ldr	r5, [sp, #4]
 801be20:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801be24:	0e07      	lsrs	r7, r0, #24
 801be26:	2fff      	cmp	r7, #255	@ 0xff
 801be28:	d116      	bne.n	801be58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be2a:	f06f 0501 	mvn.w	r5, #1
 801be2e:	fb05 f706 	mul.w	r7, r5, r6
 801be32:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801be36:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801be3a:	0945      	lsrs	r5, r0, #5
 801be3c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801be40:	ea4c 0505 	orr.w	r5, ip, r5
 801be44:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801be48:	4305      	orrs	r5, r0
 801be4a:	53e5      	strh	r5, [r4, r7]
 801be4c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801be4e:	4401      	add	r1, r0
 801be50:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801be52:	3e01      	subs	r6, #1
 801be54:	4402      	add	r2, r0
 801be56:	e78e      	b.n	801bd76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801be58:	b2fd      	uxtb	r5, r7
 801be5a:	2f00      	cmp	r7, #0
 801be5c:	d0f6      	beq.n	801be4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801be5e:	f06f 0701 	mvn.w	r7, #1
 801be62:	4377      	muls	r7, r6
 801be64:	fa1f f985 	uxth.w	r9, r5
 801be68:	f834 8007 	ldrh.w	r8, [r4, r7]
 801be6c:	9702      	str	r7, [sp, #8]
 801be6e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801be72:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801be76:	43ed      	mvns	r5, r5
 801be78:	b2ed      	uxtb	r5, r5
 801be7a:	fb17 f709 	smulbb	r7, r7, r9
 801be7e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801be82:	fb0c 7c05 	mla	ip, ip, r5, r7
 801be86:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801be8a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801be8e:	b2c0      	uxtb	r0, r0
 801be90:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801be94:	fa5f f888 	uxtb.w	r8, r8
 801be98:	fb10 f009 	smulbb	r0, r0, r9
 801be9c:	fb08 0005 	mla	r0, r8, r5, r0
 801bea0:	b280      	uxth	r0, r0
 801bea2:	fa1f fc8c 	uxth.w	ip, ip
 801bea6:	fb1a fa09 	smulbb	sl, sl, r9
 801beaa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801beae:	fb07 a705 	mla	r7, r7, r5, sl
 801beb2:	f100 0a01 	add.w	sl, r0, #1
 801beb6:	f10c 0501 	add.w	r5, ip, #1
 801beba:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801bebe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bec2:	b2bf      	uxth	r7, r7
 801bec4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bec8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801becc:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bed0:	f107 0a01 	add.w	sl, r7, #1
 801bed4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bed8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bedc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bee0:	9802      	ldr	r0, [sp, #8]
 801bee2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bee6:	f824 c000 	strh.w	ip, [r4, r0]
 801beea:	e7af      	b.n	801be4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801beec:	f04f 0800 	mov.w	r8, #0
 801bef0:	eba3 0008 	sub.w	r0, r3, r8
 801bef4:	2800      	cmp	r0, #0
 801bef6:	f77f af41 	ble.w	801bd7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801befa:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801befe:	9f00      	ldr	r7, [sp, #0]
 801bf00:	1410      	asrs	r0, r2, #16
 801bf02:	140d      	asrs	r5, r1, #16
 801bf04:	fb06 7000 	mla	r0, r6, r0, r7
 801bf08:	5d40      	ldrb	r0, [r0, r5]
 801bf0a:	9d01      	ldr	r5, [sp, #4]
 801bf0c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801bf10:	0e2e      	lsrs	r6, r5, #24
 801bf12:	2eff      	cmp	r6, #255	@ 0xff
 801bf14:	d112      	bne.n	801bf3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801bf16:	482c      	ldr	r0, [pc, #176]	@ (801bfc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801bf18:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801bf1c:	0968      	lsrs	r0, r5, #5
 801bf1e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf22:	4330      	orrs	r0, r6
 801bf24:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bf28:	4328      	orrs	r0, r5
 801bf2a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801bf2e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bf30:	4401      	add	r1, r0
 801bf32:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bf34:	f108 0801 	add.w	r8, r8, #1
 801bf38:	4402      	add	r2, r0
 801bf3a:	e7d9      	b.n	801bef0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801bf3c:	b2f0      	uxtb	r0, r6
 801bf3e:	2e00      	cmp	r6, #0
 801bf40:	d0f5      	beq.n	801bf2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801bf42:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801bf46:	fa1f f980 	uxth.w	r9, r0
 801bf4a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bf4e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bf52:	43c0      	mvns	r0, r0
 801bf54:	b2c0      	uxtb	r0, r0
 801bf56:	fb16 f609 	smulbb	r6, r6, r9
 801bf5a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bf5e:	fb07 6700 	mla	r7, r7, r0, r6
 801bf62:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801bf66:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bf6a:	b2ed      	uxtb	r5, r5
 801bf6c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bf70:	fa5f fc8c 	uxtb.w	ip, ip
 801bf74:	fb15 f509 	smulbb	r5, r5, r9
 801bf78:	fb0c 5500 	mla	r5, ip, r0, r5
 801bf7c:	b2bf      	uxth	r7, r7
 801bf7e:	fb1a fa09 	smulbb	sl, sl, r9
 801bf82:	b2ad      	uxth	r5, r5
 801bf84:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bf88:	fb06 a600 	mla	r6, r6, r0, sl
 801bf8c:	1c78      	adds	r0, r7, #1
 801bf8e:	f105 0a01 	add.w	sl, r5, #1
 801bf92:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801bf96:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf9a:	b2b6      	uxth	r6, r6
 801bf9c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bfa0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801bfa4:	ea4a 0707 	orr.w	r7, sl, r7
 801bfa8:	f106 0a01 	add.w	sl, r6, #1
 801bfac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bfb0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bfb4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bfb8:	ea47 070a 	orr.w	r7, r7, sl
 801bfbc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801bfc0:	e7b5      	b.n	801bf2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801bfc2:	b005      	add	sp, #20
 801bfc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfc8:	fffff800 	.word	0xfffff800

0801bfcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bfcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfd0:	b087      	sub	sp, #28
 801bfd2:	468b      	mov	fp, r1
 801bfd4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bfd6:	9204      	str	r2, [sp, #16]
 801bfd8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801bfdc:	9205      	str	r2, [sp, #20]
 801bfde:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801bfe2:	6861      	ldr	r1, [r4, #4]
 801bfe4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801bfe8:	fb01 2000 	mla	r0, r1, r0, r2
 801bfec:	6822      	ldr	r2, [r4, #0]
 801bfee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bff2:	f8de 2000 	ldr.w	r2, [lr]
 801bff6:	9201      	str	r2, [sp, #4]
 801bff8:	f8de 2004 	ldr.w	r2, [lr, #4]
 801bffc:	9202      	str	r2, [sp, #8]
 801bffe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c002:	f1bb 0f00 	cmp.w	fp, #0
 801c006:	dc03      	bgt.n	801c010 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801c008:	9a04      	ldr	r2, [sp, #16]
 801c00a:	2a00      	cmp	r2, #0
 801c00c:	f340 8142 	ble.w	801c294 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801c010:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c012:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c016:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801c01a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c01e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c020:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801c024:	2b00      	cmp	r3, #0
 801c026:	dd0e      	ble.n	801c046 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c028:	140c      	asrs	r4, r1, #16
 801c02a:	d405      	bmi.n	801c038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c02c:	42bc      	cmp	r4, r7
 801c02e:	da03      	bge.n	801c038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c030:	1414      	asrs	r4, r2, #16
 801c032:	d401      	bmi.n	801c038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c034:	42b4      	cmp	r4, r6
 801c036:	db07      	blt.n	801c048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c038:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c03a:	4421      	add	r1, r4
 801c03c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c03e:	3b01      	subs	r3, #1
 801c040:	4422      	add	r2, r4
 801c042:	3002      	adds	r0, #2
 801c044:	e7ee      	b.n	801c024 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c046:	d019      	beq.n	801c07c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c048:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c04a:	1e5c      	subs	r4, r3, #1
 801c04c:	fb05 1504 	mla	r5, r5, r4, r1
 801c050:	142d      	asrs	r5, r5, #16
 801c052:	d409      	bmi.n	801c068 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c054:	42bd      	cmp	r5, r7
 801c056:	da07      	bge.n	801c068 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c058:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c05a:	fb05 2404 	mla	r4, r5, r4, r2
 801c05e:	1424      	asrs	r4, r4, #16
 801c060:	d402      	bmi.n	801c068 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c062:	42b4      	cmp	r4, r6
 801c064:	f2c0 80b1 	blt.w	801c1ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801c068:	f04f 0800 	mov.w	r8, #0
 801c06c:	eb03 0408 	add.w	r4, r3, r8
 801c070:	2c00      	cmp	r4, #0
 801c072:	dc3e      	bgt.n	801c0f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c074:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c078:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c07c:	f1bb 0f00 	cmp.w	fp, #0
 801c080:	f340 8108 	ble.w	801c294 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801c084:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c088:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c08c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c090:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c092:	f1bb 0b01 	subs.w	fp, fp, #1
 801c096:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c09a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c09e:	eeb0 6a62 	vmov.f32	s12, s5
 801c0a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c0a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c0aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c0ae:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801c0b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c0b6:	eeb0 6a43 	vmov.f32	s12, s6
 801c0ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c0be:	ee12 2a90 	vmov	r2, s5
 801c0c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c0c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0ca:	ee13 2a10 	vmov	r2, s6
 801c0ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c0d2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c0d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c0d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0da:	9a04      	ldr	r2, [sp, #16]
 801c0dc:	9314      	str	r3, [sp, #80]	@ 0x50
 801c0de:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801c0e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c0e4:	eeb0 3a67 	vmov.f32	s6, s15
 801c0e8:	bf08      	it	eq
 801c0ea:	4613      	moveq	r3, r2
 801c0ec:	eef0 2a47 	vmov.f32	s5, s14
 801c0f0:	e787      	b.n	801c002 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801c0f2:	140e      	asrs	r6, r1, #16
 801c0f4:	d462      	bmi.n	801c1bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c0f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c0fa:	42b5      	cmp	r5, r6
 801c0fc:	dd5e      	ble.n	801c1bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c0fe:	1417      	asrs	r7, r2, #16
 801c100:	d45c      	bmi.n	801c1bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c102:	f8de 400c 	ldr.w	r4, [lr, #12]
 801c106:	42bc      	cmp	r4, r7
 801c108:	dd58      	ble.n	801c1bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c10a:	b22d      	sxth	r5, r5
 801c10c:	fb07 6505 	mla	r5, r7, r5, r6
 801c110:	9c02      	ldr	r4, [sp, #8]
 801c112:	5d66      	ldrb	r6, [r4, r5]
 801c114:	2e00      	cmp	r6, #0
 801c116:	d051      	beq.n	801c1bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801c118:	9c01      	ldr	r4, [sp, #4]
 801c11a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801c11e:	f06f 0401 	mvn.w	r4, #1
 801c122:	fb04 f408 	mul.w	r4, r4, r8
 801c126:	9403      	str	r4, [sp, #12]
 801c128:	5b05      	ldrh	r5, [r0, r4]
 801c12a:	9c05      	ldr	r4, [sp, #20]
 801c12c:	4366      	muls	r6, r4
 801c12e:	1c74      	adds	r4, r6, #1
 801c130:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801c134:	1224      	asrs	r4, r4, #8
 801c136:	b2a7      	uxth	r7, r4
 801c138:	122e      	asrs	r6, r5, #8
 801c13a:	43e4      	mvns	r4, r4
 801c13c:	b2e4      	uxtb	r4, r4
 801c13e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801c142:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c146:	fb16 f604 	smulbb	r6, r6, r4
 801c14a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c14e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c152:	00ed      	lsls	r5, r5, #3
 801c154:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c158:	b2ed      	uxtb	r5, r5
 801c15a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801c15e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801c162:	fb15 f504 	smulbb	r5, r5, r4
 801c166:	fa5f f989 	uxtb.w	r9, r9
 801c16a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801c16e:	fb09 5507 	mla	r5, r9, r7, r5
 801c172:	fb1a fa04 	smulbb	sl, sl, r4
 801c176:	fa1f fc8c 	uxth.w	ip, ip
 801c17a:	b2ad      	uxth	r5, r5
 801c17c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c180:	fb06 a607 	mla	r6, r6, r7, sl
 801c184:	f10c 0401 	add.w	r4, ip, #1
 801c188:	f105 0a01 	add.w	sl, r5, #1
 801c18c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801c190:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c194:	b2b6      	uxth	r6, r6
 801c196:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c19a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c19e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c1a2:	f106 0a01 	add.w	sl, r6, #1
 801c1a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c1aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c1ae:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c1b2:	9c03      	ldr	r4, [sp, #12]
 801c1b4:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c1b8:	f820 c004 	strh.w	ip, [r0, r4]
 801c1bc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c1be:	4421      	add	r1, r4
 801c1c0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c1c2:	f108 38ff 	add.w	r8, r8, #4294967295
 801c1c6:	4422      	add	r2, r4
 801c1c8:	e750      	b.n	801c06c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c1ca:	f04f 0900 	mov.w	r9, #0
 801c1ce:	eba3 0409 	sub.w	r4, r3, r9
 801c1d2:	2c00      	cmp	r4, #0
 801c1d4:	f77f af4e 	ble.w	801c074 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c1d8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801c1dc:	140d      	asrs	r5, r1, #16
 801c1de:	1414      	asrs	r4, r2, #16
 801c1e0:	fb06 5404 	mla	r4, r6, r4, r5
 801c1e4:	9d02      	ldr	r5, [sp, #8]
 801c1e6:	5d2e      	ldrb	r6, [r5, r4]
 801c1e8:	2e00      	cmp	r6, #0
 801c1ea:	d04c      	beq.n	801c286 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801c1ec:	9d01      	ldr	r5, [sp, #4]
 801c1ee:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801c1f2:	9c05      	ldr	r4, [sp, #20]
 801c1f4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801c1f8:	4366      	muls	r6, r4
 801c1fa:	1c74      	adds	r4, r6, #1
 801c1fc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801c200:	1224      	asrs	r4, r4, #8
 801c202:	b2a7      	uxth	r7, r4
 801c204:	122e      	asrs	r6, r5, #8
 801c206:	43e4      	mvns	r4, r4
 801c208:	b2e4      	uxtb	r4, r4
 801c20a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801c20e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c212:	fb16 f604 	smulbb	r6, r6, r4
 801c216:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c21a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c21e:	00ed      	lsls	r5, r5, #3
 801c220:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c224:	b2ed      	uxtb	r5, r5
 801c226:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801c22a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c22e:	fb15 f504 	smulbb	r5, r5, r4
 801c232:	fa5f f888 	uxtb.w	r8, r8
 801c236:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801c23a:	fb08 5507 	mla	r5, r8, r7, r5
 801c23e:	fb1a fa04 	smulbb	sl, sl, r4
 801c242:	fa1f fc8c 	uxth.w	ip, ip
 801c246:	b2ad      	uxth	r5, r5
 801c248:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c24c:	fb06 a607 	mla	r6, r6, r7, sl
 801c250:	f10c 0401 	add.w	r4, ip, #1
 801c254:	f105 0a01 	add.w	sl, r5, #1
 801c258:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801c25c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c260:	b2b6      	uxth	r6, r6
 801c262:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c266:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c26a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c26e:	f106 0a01 	add.w	sl, r6, #1
 801c272:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c276:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c27a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c27e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c282:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801c286:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c288:	4421      	add	r1, r4
 801c28a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c28c:	f109 0901 	add.w	r9, r9, #1
 801c290:	4422      	add	r2, r4
 801c292:	e79c      	b.n	801c1ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801c294:	b007      	add	sp, #28
 801c296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c29a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c29a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c29e:	b085      	sub	sp, #20
 801c2a0:	468b      	mov	fp, r1
 801c2a2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c2a4:	9203      	str	r2, [sp, #12]
 801c2a6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801c2aa:	6861      	ldr	r1, [r4, #4]
 801c2ac:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801c2b0:	fb01 2000 	mla	r0, r1, r0, r2
 801c2b4:	6822      	ldr	r2, [r4, #0]
 801c2b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801c2ba:	f8d8 2000 	ldr.w	r2, [r8]
 801c2be:	9200      	str	r2, [sp, #0]
 801c2c0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801c2c4:	9201      	str	r2, [sp, #4]
 801c2c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c2ca:	f1bb 0f00 	cmp.w	fp, #0
 801c2ce:	dc03      	bgt.n	801c2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c2d0:	9a03      	ldr	r2, [sp, #12]
 801c2d2:	2a00      	cmp	r2, #0
 801c2d4:	f340 8146 	ble.w	801c564 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801c2d8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c2da:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c2de:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c2e2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c2e6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c2e8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801c2ec:	2b00      	cmp	r3, #0
 801c2ee:	dd0e      	ble.n	801c30e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c2f0:	140c      	asrs	r4, r1, #16
 801c2f2:	d405      	bmi.n	801c300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c2f4:	42bc      	cmp	r4, r7
 801c2f6:	da03      	bge.n	801c300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c2f8:	1414      	asrs	r4, r2, #16
 801c2fa:	d401      	bmi.n	801c300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c2fc:	42b4      	cmp	r4, r6
 801c2fe:	db07      	blt.n	801c310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c300:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c302:	4421      	add	r1, r4
 801c304:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c306:	3b01      	subs	r3, #1
 801c308:	4422      	add	r2, r4
 801c30a:	3002      	adds	r0, #2
 801c30c:	e7ee      	b.n	801c2ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c30e:	d017      	beq.n	801c340 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c310:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c312:	1e5c      	subs	r4, r3, #1
 801c314:	fb05 1504 	mla	r5, r5, r4, r1
 801c318:	142d      	asrs	r5, r5, #16
 801c31a:	d409      	bmi.n	801c330 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c31c:	42bd      	cmp	r5, r7
 801c31e:	da07      	bge.n	801c330 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c320:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c322:	fb05 2404 	mla	r4, r5, r4, r2
 801c326:	1424      	asrs	r4, r4, #16
 801c328:	d402      	bmi.n	801c330 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c32a:	42b4      	cmp	r4, r6
 801c32c:	f2c0 80b3 	blt.w	801c496 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801c330:	2600      	movs	r6, #0
 801c332:	199c      	adds	r4, r3, r6
 801c334:	2c00      	cmp	r4, #0
 801c336:	dc3e      	bgt.n	801c3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c338:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c33c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c340:	f1bb 0f00 	cmp.w	fp, #0
 801c344:	f340 810e 	ble.w	801c564 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801c348:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c34c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c350:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c354:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c356:	f1bb 0b01 	subs.w	fp, fp, #1
 801c35a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c35e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c362:	eeb0 6a62 	vmov.f32	s12, s5
 801c366:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c36a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c36e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c372:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801c376:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c37a:	eeb0 6a43 	vmov.f32	s12, s6
 801c37e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c382:	ee12 2a90 	vmov	r2, s5
 801c386:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c38a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c38e:	ee13 2a10 	vmov	r2, s6
 801c392:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c396:	9311      	str	r3, [sp, #68]	@ 0x44
 801c398:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c39a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c39e:	9a03      	ldr	r2, [sp, #12]
 801c3a0:	9312      	str	r3, [sp, #72]	@ 0x48
 801c3a2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801c3a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c3a8:	eeb0 3a67 	vmov.f32	s6, s15
 801c3ac:	bf08      	it	eq
 801c3ae:	4613      	moveq	r3, r2
 801c3b0:	eef0 2a47 	vmov.f32	s5, s14
 801c3b4:	e789      	b.n	801c2ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c3b6:	140f      	asrs	r7, r1, #16
 801c3b8:	d418      	bmi.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c3ba:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c3be:	42bd      	cmp	r5, r7
 801c3c0:	dd14      	ble.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c3c2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c3c6:	d411      	bmi.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c3c8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801c3cc:	4564      	cmp	r4, ip
 801c3ce:	dd0d      	ble.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c3d0:	b22d      	sxth	r5, r5
 801c3d2:	fb0c 7505 	mla	r5, ip, r5, r7
 801c3d6:	9c01      	ldr	r4, [sp, #4]
 801c3d8:	5d64      	ldrb	r4, [r4, r5]
 801c3da:	2cff      	cmp	r4, #255	@ 0xff
 801c3dc:	d10c      	bne.n	801c3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801c3de:	9c00      	ldr	r4, [sp, #0]
 801c3e0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801c3e4:	f06f 0401 	mvn.w	r4, #1
 801c3e8:	4374      	muls	r4, r6
 801c3ea:	5305      	strh	r5, [r0, r4]
 801c3ec:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3ee:	4421      	add	r1, r4
 801c3f0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c3f2:	3e01      	subs	r6, #1
 801c3f4:	4422      	add	r2, r4
 801c3f6:	e79c      	b.n	801c332 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c3f8:	2c00      	cmp	r4, #0
 801c3fa:	d0f7      	beq.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c3fc:	9f00      	ldr	r7, [sp, #0]
 801c3fe:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801c402:	f06f 0501 	mvn.w	r5, #1
 801c406:	4375      	muls	r5, r6
 801c408:	9502      	str	r5, [sp, #8]
 801c40a:	5b45      	ldrh	r5, [r0, r5]
 801c40c:	fa1f fc84 	uxth.w	ip, r4
 801c410:	122f      	asrs	r7, r5, #8
 801c412:	43e4      	mvns	r4, r4
 801c414:	b2e4      	uxtb	r4, r4
 801c416:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801c41a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c41e:	fb17 f704 	smulbb	r7, r7, r4
 801c422:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c426:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801c42a:	00ed      	lsls	r5, r5, #3
 801c42c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801c430:	b2ed      	uxtb	r5, r5
 801c432:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801c436:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801c43a:	fb15 f504 	smulbb	r5, r5, r4
 801c43e:	fa5f f989 	uxtb.w	r9, r9
 801c442:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801c446:	fb09 550c 	mla	r5, r9, ip, r5
 801c44a:	fb1a fa04 	smulbb	sl, sl, r4
 801c44e:	fa1f fe8e 	uxth.w	lr, lr
 801c452:	b2ad      	uxth	r5, r5
 801c454:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c458:	fb07 a70c 	mla	r7, r7, ip, sl
 801c45c:	f10e 0401 	add.w	r4, lr, #1
 801c460:	f105 0a01 	add.w	sl, r5, #1
 801c464:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801c468:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c46c:	b2bf      	uxth	r7, r7
 801c46e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c472:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801c476:	ea4a 0e0e 	orr.w	lr, sl, lr
 801c47a:	f107 0a01 	add.w	sl, r7, #1
 801c47e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c482:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c486:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c48a:	9c02      	ldr	r4, [sp, #8]
 801c48c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801c490:	f820 e004 	strh.w	lr, [r0, r4]
 801c494:	e7aa      	b.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c496:	f04f 0900 	mov.w	r9, #0
 801c49a:	eba3 0409 	sub.w	r4, r3, r9
 801c49e:	2c00      	cmp	r4, #0
 801c4a0:	f77f af4a 	ble.w	801c338 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c4a4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c4a8:	1414      	asrs	r4, r2, #16
 801c4aa:	140d      	asrs	r5, r1, #16
 801c4ac:	fb06 5504 	mla	r5, r6, r4, r5
 801c4b0:	9c01      	ldr	r4, [sp, #4]
 801c4b2:	5d64      	ldrb	r4, [r4, r5]
 801c4b4:	2cff      	cmp	r4, #255	@ 0xff
 801c4b6:	d10b      	bne.n	801c4d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c4b8:	9c00      	ldr	r4, [sp, #0]
 801c4ba:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801c4be:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801c4c2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c4c4:	4421      	add	r1, r4
 801c4c6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c4c8:	f109 0901 	add.w	r9, r9, #1
 801c4cc:	4422      	add	r2, r4
 801c4ce:	e7e4      	b.n	801c49a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c4d0:	2c00      	cmp	r4, #0
 801c4d2:	d0f6      	beq.n	801c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c4d4:	9e00      	ldr	r6, [sp, #0]
 801c4d6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801c4da:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801c4de:	b2a7      	uxth	r7, r4
 801c4e0:	122e      	asrs	r6, r5, #8
 801c4e2:	43e4      	mvns	r4, r4
 801c4e4:	b2e4      	uxtb	r4, r4
 801c4e6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c4ea:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c4ee:	fb16 f604 	smulbb	r6, r6, r4
 801c4f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c4f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c4fa:	00ed      	lsls	r5, r5, #3
 801c4fc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c500:	b2ed      	uxtb	r5, r5
 801c502:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c506:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c50a:	fb15 f504 	smulbb	r5, r5, r4
 801c50e:	fa5f fe8e 	uxtb.w	lr, lr
 801c512:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801c516:	fb0e 5507 	mla	r5, lr, r7, r5
 801c51a:	fb1a fa04 	smulbb	sl, sl, r4
 801c51e:	fa1f fc8c 	uxth.w	ip, ip
 801c522:	b2ad      	uxth	r5, r5
 801c524:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c528:	fb06 a607 	mla	r6, r6, r7, sl
 801c52c:	f10c 0401 	add.w	r4, ip, #1
 801c530:	f105 0a01 	add.w	sl, r5, #1
 801c534:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801c538:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c53c:	b2b6      	uxth	r6, r6
 801c53e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c542:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c546:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c54a:	f106 0a01 	add.w	sl, r6, #1
 801c54e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c552:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c556:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c55a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c55e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801c562:	e7ae      	b.n	801c4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c564:	b005      	add	sp, #20
 801c566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c56a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c56a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c56e:	b085      	sub	sp, #20
 801c570:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c572:	9203      	str	r2, [sp, #12]
 801c574:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801c578:	9201      	str	r2, [sp, #4]
 801c57a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801c57e:	9100      	str	r1, [sp, #0]
 801c580:	6841      	ldr	r1, [r0, #4]
 801c582:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801c586:	fb01 2404 	mla	r4, r1, r4, r2
 801c58a:	6802      	ldr	r2, [r0, #0]
 801c58c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c590:	f8de 2000 	ldr.w	r2, [lr]
 801c594:	9202      	str	r2, [sp, #8]
 801c596:	9a01      	ldr	r2, [sp, #4]
 801c598:	43d6      	mvns	r6, r2
 801c59a:	b2f6      	uxtb	r6, r6
 801c59c:	9a00      	ldr	r2, [sp, #0]
 801c59e:	2a00      	cmp	r2, #0
 801c5a0:	dc03      	bgt.n	801c5aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c5a2:	9a03      	ldr	r2, [sp, #12]
 801c5a4:	2a00      	cmp	r2, #0
 801c5a6:	f340 8124 	ble.w	801c7f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801c5aa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c5ac:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c5b0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c5b4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c5b8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c5ba:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801c5be:	2b00      	cmp	r3, #0
 801c5c0:	dd0e      	ble.n	801c5e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c5c2:	1408      	asrs	r0, r1, #16
 801c5c4:	d405      	bmi.n	801c5d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c5c6:	4560      	cmp	r0, ip
 801c5c8:	da03      	bge.n	801c5d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c5ca:	1410      	asrs	r0, r2, #16
 801c5cc:	d401      	bmi.n	801c5d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c5ce:	42b8      	cmp	r0, r7
 801c5d0:	db07      	blt.n	801c5e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c5d2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c5d4:	4401      	add	r1, r0
 801c5d6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c5d8:	3b01      	subs	r3, #1
 801c5da:	4402      	add	r2, r0
 801c5dc:	3402      	adds	r4, #2
 801c5de:	e7ee      	b.n	801c5be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c5e0:	d06e      	beq.n	801c6c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801c5e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c5e4:	1e58      	subs	r0, r3, #1
 801c5e6:	fb05 1500 	mla	r5, r5, r0, r1
 801c5ea:	142d      	asrs	r5, r5, #16
 801c5ec:	d45c      	bmi.n	801c6a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c5ee:	4565      	cmp	r5, ip
 801c5f0:	da5a      	bge.n	801c6a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c5f2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c5f4:	fb05 2000 	mla	r0, r5, r0, r2
 801c5f8:	1400      	asrs	r0, r0, #16
 801c5fa:	d455      	bmi.n	801c6a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c5fc:	42b8      	cmp	r0, r7
 801c5fe:	da53      	bge.n	801c6a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c600:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801c604:	4699      	mov	r9, r3
 801c606:	46a2      	mov	sl, r4
 801c608:	f1b9 0f00 	cmp.w	r9, #0
 801c60c:	dd54      	ble.n	801c6b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c60e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c612:	140d      	asrs	r5, r1, #16
 801c614:	1410      	asrs	r0, r2, #16
 801c616:	fb07 5000 	mla	r0, r7, r0, r5
 801c61a:	9d02      	ldr	r5, [sp, #8]
 801c61c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c620:	f8ba 5000 	ldrh.w	r5, [sl]
 801c624:	122f      	asrs	r7, r5, #8
 801c626:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c62a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c62e:	fb17 f706 	smulbb	r7, r7, r6
 801c632:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c636:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c63a:	00ed      	lsls	r5, r5, #3
 801c63c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c640:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801c644:	10c7      	asrs	r7, r0, #3
 801c646:	b2ed      	uxtb	r5, r5
 801c648:	00c0      	lsls	r0, r0, #3
 801c64a:	fb18 f806 	smulbb	r8, r8, r6
 801c64e:	fb15 f506 	smulbb	r5, r5, r6
 801c652:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c656:	b2c0      	uxtb	r0, r0
 801c658:	fa1f fc8c 	uxth.w	ip, ip
 801c65c:	fb07 870b 	mla	r7, r7, fp, r8
 801c660:	fb00 500b 	mla	r0, r0, fp, r5
 801c664:	b280      	uxth	r0, r0
 801c666:	b2bf      	uxth	r7, r7
 801c668:	f10c 0501 	add.w	r5, ip, #1
 801c66c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c670:	f107 0801 	add.w	r8, r7, #1
 801c674:	1c45      	adds	r5, r0, #1
 801c676:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c67a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c67e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c680:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c684:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c688:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c68c:	ea45 0c0c 	orr.w	ip, r5, ip
 801c690:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c694:	4401      	add	r1, r0
 801c696:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c698:	ea4c 0c08 	orr.w	ip, ip, r8
 801c69c:	f82a cb02 	strh.w	ip, [sl], #2
 801c6a0:	4402      	add	r2, r0
 801c6a2:	f109 39ff 	add.w	r9, r9, #4294967295
 801c6a6:	e7af      	b.n	801c608 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c6a8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801c6ac:	f04f 0800 	mov.w	r8, #0
 801c6b0:	eb03 0008 	add.w	r0, r3, r8
 801c6b4:	2800      	cmp	r0, #0
 801c6b6:	dc41      	bgt.n	801c73c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c6b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c6bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c6c0:	9b00      	ldr	r3, [sp, #0]
 801c6c2:	2b00      	cmp	r3, #0
 801c6c4:	f340 8095 	ble.w	801c7f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801c6c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c6cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c6d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c6d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c6d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c6da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c6de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c6e2:	eef0 6a62 	vmov.f32	s13, s5
 801c6e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c6ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c6ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c6f2:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801c6f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c6fa:	eef0 6a43 	vmov.f32	s13, s6
 801c6fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c702:	ee12 2a90 	vmov	r2, s5
 801c706:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c70a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c70e:	ee13 2a10 	vmov	r2, s6
 801c712:	9311      	str	r3, [sp, #68]	@ 0x44
 801c714:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c716:	fb92 f3f3 	sdiv	r3, r2, r3
 801c71a:	9312      	str	r3, [sp, #72]	@ 0x48
 801c71c:	9b00      	ldr	r3, [sp, #0]
 801c71e:	9a03      	ldr	r2, [sp, #12]
 801c720:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c724:	3b01      	subs	r3, #1
 801c726:	9300      	str	r3, [sp, #0]
 801c728:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801c72c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c72e:	eeb0 3a67 	vmov.f32	s6, s15
 801c732:	bf08      	it	eq
 801c734:	4613      	moveq	r3, r2
 801c736:	eef0 2a47 	vmov.f32	s5, s14
 801c73a:	e72f      	b.n	801c59c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c73c:	140f      	asrs	r7, r1, #16
 801c73e:	d451      	bmi.n	801c7e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c740:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c744:	42bd      	cmp	r5, r7
 801c746:	dd4d      	ble.n	801c7e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c748:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c74c:	d44a      	bmi.n	801c7e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c74e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c752:	4560      	cmp	r0, ip
 801c754:	dd46      	ble.n	801c7e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c756:	b22d      	sxth	r5, r5
 801c758:	fb0c 7505 	mla	r5, ip, r5, r7
 801c75c:	9802      	ldr	r0, [sp, #8]
 801c75e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801c762:	f06f 0501 	mvn.w	r5, #1
 801c766:	fb05 fb08 	mul.w	fp, r5, r8
 801c76a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c76e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c772:	122f      	asrs	r7, r5, #8
 801c774:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c778:	fb17 f706 	smulbb	r7, r7, r6
 801c77c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c780:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c784:	00ed      	lsls	r5, r5, #3
 801c786:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c78a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801c78e:	10c7      	asrs	r7, r0, #3
 801c790:	b2ed      	uxtb	r5, r5
 801c792:	00c0      	lsls	r0, r0, #3
 801c794:	fb19 f906 	smulbb	r9, r9, r6
 801c798:	fb15 f506 	smulbb	r5, r5, r6
 801c79c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c7a0:	b2c0      	uxtb	r0, r0
 801c7a2:	fa1f fc8c 	uxth.w	ip, ip
 801c7a6:	fb07 970a 	mla	r7, r7, sl, r9
 801c7aa:	fb00 500a 	mla	r0, r0, sl, r5
 801c7ae:	b2bf      	uxth	r7, r7
 801c7b0:	b280      	uxth	r0, r0
 801c7b2:	f10c 0501 	add.w	r5, ip, #1
 801c7b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c7ba:	f107 0901 	add.w	r9, r7, #1
 801c7be:	1c45      	adds	r5, r0, #1
 801c7c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c7c4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c7c8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c7cc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c7d0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c7d4:	ea45 0c0c 	orr.w	ip, r5, ip
 801c7d8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c7dc:	ea4c 0c09 	orr.w	ip, ip, r9
 801c7e0:	f824 c00b 	strh.w	ip, [r4, fp]
 801c7e4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c7e6:	4401      	add	r1, r0
 801c7e8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c7ea:	f108 38ff 	add.w	r8, r8, #4294967295
 801c7ee:	4402      	add	r2, r0
 801c7f0:	e75e      	b.n	801c6b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c7f2:	b005      	add	sp, #20
 801c7f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7fc:	b085      	sub	sp, #20
 801c7fe:	4693      	mov	fp, r2
 801c800:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801c802:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c804:	6870      	ldr	r0, [r6, #4]
 801c806:	9101      	str	r1, [sp, #4]
 801c808:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801c80c:	fb00 2404 	mla	r4, r0, r4, r2
 801c810:	6832      	ldr	r2, [r6, #0]
 801c812:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801c816:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c81a:	682a      	ldr	r2, [r5, #0]
 801c81c:	9202      	str	r2, [sp, #8]
 801c81e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c822:	9a01      	ldr	r2, [sp, #4]
 801c824:	2a00      	cmp	r2, #0
 801c826:	dc03      	bgt.n	801c830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c828:	f1bb 0f00 	cmp.w	fp, #0
 801c82c:	f340 809a 	ble.w	801c964 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c830:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c832:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c836:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c83a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801c83e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c840:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801c844:	2b00      	cmp	r3, #0
 801c846:	dd0c      	ble.n	801c862 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c848:	1406      	asrs	r6, r0, #16
 801c84a:	d405      	bmi.n	801c858 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c84c:	454e      	cmp	r6, r9
 801c84e:	da03      	bge.n	801c858 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c850:	1416      	asrs	r6, r2, #16
 801c852:	d401      	bmi.n	801c858 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c854:	4546      	cmp	r6, r8
 801c856:	db05      	blt.n	801c864 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c858:	4470      	add	r0, lr
 801c85a:	4462      	add	r2, ip
 801c85c:	3b01      	subs	r3, #1
 801c85e:	3402      	adds	r4, #2
 801c860:	e7f0      	b.n	801c844 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c862:	d00f      	beq.n	801c884 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c864:	1e5e      	subs	r6, r3, #1
 801c866:	fb0e 0706 	mla	r7, lr, r6, r0
 801c86a:	143f      	asrs	r7, r7, #16
 801c86c:	d541      	bpl.n	801c8f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c86e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c872:	4698      	mov	r8, r3
 801c874:	9603      	str	r6, [sp, #12]
 801c876:	f1b8 0f00 	cmp.w	r8, #0
 801c87a:	dc56      	bgt.n	801c92a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c87c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c880:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c884:	9b01      	ldr	r3, [sp, #4]
 801c886:	2b00      	cmp	r3, #0
 801c888:	dd6c      	ble.n	801c964 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c88a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c88e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c892:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c896:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c898:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c89c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c8a0:	eeb0 6a62 	vmov.f32	s12, s5
 801c8a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c8a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8b0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801c8b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8b8:	eeb0 6a43 	vmov.f32	s12, s6
 801c8bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8c0:	ee12 2a90 	vmov	r2, s5
 801c8c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8c8:	fb92 fef3 	sdiv	lr, r2, r3
 801c8cc:	ee13 2a10 	vmov	r2, s6
 801c8d0:	fb92 fcf3 	sdiv	ip, r2, r3
 801c8d4:	9b01      	ldr	r3, [sp, #4]
 801c8d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8da:	3b01      	subs	r3, #1
 801c8dc:	9301      	str	r3, [sp, #4]
 801c8de:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801c8e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c8e4:	eeb0 3a67 	vmov.f32	s6, s15
 801c8e8:	bf08      	it	eq
 801c8ea:	465b      	moveq	r3, fp
 801c8ec:	eef0 2a47 	vmov.f32	s5, s14
 801c8f0:	e797      	b.n	801c822 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c8f2:	454f      	cmp	r7, r9
 801c8f4:	dabb      	bge.n	801c86e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c8f6:	fb0c 2606 	mla	r6, ip, r6, r2
 801c8fa:	1436      	asrs	r6, r6, #16
 801c8fc:	d4b7      	bmi.n	801c86e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c8fe:	4546      	cmp	r6, r8
 801c900:	dab5      	bge.n	801c86e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c902:	461e      	mov	r6, r3
 801c904:	46a0      	mov	r8, r4
 801c906:	2e00      	cmp	r6, #0
 801c908:	ddb8      	ble.n	801c87c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c90a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c90e:	9902      	ldr	r1, [sp, #8]
 801c910:	1417      	asrs	r7, r2, #16
 801c912:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c916:	fb0a 9707 	mla	r7, sl, r7, r9
 801c91a:	4470      	add	r0, lr
 801c91c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c920:	f828 7b02 	strh.w	r7, [r8], #2
 801c924:	4462      	add	r2, ip
 801c926:	3e01      	subs	r6, #1
 801c928:	e7ed      	b.n	801c906 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c92a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c92e:	d414      	bmi.n	801c95a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c930:	68ae      	ldr	r6, [r5, #8]
 801c932:	454e      	cmp	r6, r9
 801c934:	dd11      	ble.n	801c95a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c936:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c93a:	d40e      	bmi.n	801c95a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c93c:	68ef      	ldr	r7, [r5, #12]
 801c93e:	4557      	cmp	r7, sl
 801c940:	dd0b      	ble.n	801c95a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c942:	b236      	sxth	r6, r6
 801c944:	fb0a 9606 	mla	r6, sl, r6, r9
 801c948:	9f02      	ldr	r7, [sp, #8]
 801c94a:	f06f 0101 	mvn.w	r1, #1
 801c94e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c952:	fb01 f608 	mul.w	r6, r1, r8
 801c956:	9903      	ldr	r1, [sp, #12]
 801c958:	538f      	strh	r7, [r1, r6]
 801c95a:	4470      	add	r0, lr
 801c95c:	4462      	add	r2, ip
 801c95e:	f108 38ff 	add.w	r8, r8, #4294967295
 801c962:	e788      	b.n	801c876 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c964:	b005      	add	sp, #20
 801c966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c96a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c96a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c96e:	b087      	sub	sp, #28
 801c970:	468b      	mov	fp, r1
 801c972:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c974:	9203      	str	r2, [sp, #12]
 801c976:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801c97a:	9204      	str	r2, [sp, #16]
 801c97c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801c980:	6841      	ldr	r1, [r0, #4]
 801c982:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801c986:	fb01 2505 	mla	r5, r1, r5, r2
 801c98a:	6802      	ldr	r2, [r0, #0]
 801c98c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c990:	f8d9 2000 	ldr.w	r2, [r9]
 801c994:	9201      	str	r2, [sp, #4]
 801c996:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c99a:	f1bb 0f00 	cmp.w	fp, #0
 801c99e:	dc03      	bgt.n	801c9a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c9a0:	9a03      	ldr	r2, [sp, #12]
 801c9a2:	2a00      	cmp	r2, #0
 801c9a4:	f340 8159 	ble.w	801cc5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c9a8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c9aa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c9ae:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c9b2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801c9b6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c9b8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c9bc:	2b00      	cmp	r3, #0
 801c9be:	dd0e      	ble.n	801c9de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c9c0:	1402      	asrs	r2, r0, #16
 801c9c2:	d405      	bmi.n	801c9d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9c4:	42ba      	cmp	r2, r7
 801c9c6:	da03      	bge.n	801c9d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9c8:	140a      	asrs	r2, r1, #16
 801c9ca:	d401      	bmi.n	801c9d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9cc:	42b2      	cmp	r2, r6
 801c9ce:	db07      	blt.n	801c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c9d0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c9d2:	4410      	add	r0, r2
 801c9d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c9d6:	3b01      	subs	r3, #1
 801c9d8:	4411      	add	r1, r2
 801c9da:	3502      	adds	r5, #2
 801c9dc:	e7ee      	b.n	801c9bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c9de:	d017      	beq.n	801ca10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c9e0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c9e2:	1e5a      	subs	r2, r3, #1
 801c9e4:	fb04 0402 	mla	r4, r4, r2, r0
 801c9e8:	1424      	asrs	r4, r4, #16
 801c9ea:	d409      	bmi.n	801ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c9ec:	42bc      	cmp	r4, r7
 801c9ee:	da07      	bge.n	801ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c9f0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c9f2:	fb04 1202 	mla	r2, r4, r2, r1
 801c9f6:	1412      	asrs	r2, r2, #16
 801c9f8:	d402      	bmi.n	801ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c9fa:	42b2      	cmp	r2, r6
 801c9fc:	f2c0 80bf 	blt.w	801cb7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ca00:	2700      	movs	r7, #0
 801ca02:	19da      	adds	r2, r3, r7
 801ca04:	2a00      	cmp	r2, #0
 801ca06:	dc3e      	bgt.n	801ca86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ca08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca0c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ca10:	f1bb 0f00 	cmp.w	fp, #0
 801ca14:	f340 8121 	ble.w	801cc5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ca18:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca24:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ca26:	f1bb 0b01 	subs.w	fp, fp, #1
 801ca2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca32:	eeb0 6a62 	vmov.f32	s12, s5
 801ca36:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca42:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801ca46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca4a:	eeb0 6a43 	vmov.f32	s12, s6
 801ca4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca52:	ee12 2a90 	vmov	r2, s5
 801ca56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca5e:	ee13 2a10 	vmov	r2, s6
 801ca62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca66:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ca68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ca6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca6e:	9a03      	ldr	r2, [sp, #12]
 801ca70:	9314      	str	r3, [sp, #80]	@ 0x50
 801ca72:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801ca76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ca78:	eeb0 3a67 	vmov.f32	s6, s15
 801ca7c:	bf08      	it	eq
 801ca7e:	4613      	moveq	r3, r2
 801ca80:	eef0 2a47 	vmov.f32	s5, s14
 801ca84:	e789      	b.n	801c99a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ca86:	1406      	asrs	r6, r0, #16
 801ca88:	d42d      	bmi.n	801cae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ca8a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801ca8e:	42b4      	cmp	r4, r6
 801ca90:	dd29      	ble.n	801cae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ca92:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801ca96:	d426      	bmi.n	801cae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ca98:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ca9c:	4562      	cmp	r2, ip
 801ca9e:	dd22      	ble.n	801cae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801caa0:	b224      	sxth	r4, r4
 801caa2:	9a01      	ldr	r2, [sp, #4]
 801caa4:	fb0c 6404 	mla	r4, ip, r4, r6
 801caa8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801caac:	0e22      	lsrs	r2, r4, #24
 801caae:	d01a      	beq.n	801cae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801cab0:	9e04      	ldr	r6, [sp, #16]
 801cab2:	4372      	muls	r2, r6
 801cab4:	1c56      	adds	r6, r2, #1
 801cab6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801caba:	1212      	asrs	r2, r2, #8
 801cabc:	0a26      	lsrs	r6, r4, #8
 801cabe:	2aff      	cmp	r2, #255	@ 0xff
 801cac0:	9605      	str	r6, [sp, #20]
 801cac2:	d116      	bne.n	801caf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801cac4:	f06f 0201 	mvn.w	r2, #1
 801cac8:	fb02 fc07 	mul.w	ip, r2, r7
 801cacc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801cad0:	0962      	lsrs	r2, r4, #5
 801cad2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cad6:	f026 0607 	bic.w	r6, r6, #7
 801cada:	4316      	orrs	r6, r2
 801cadc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cae0:	4326      	orrs	r6, r4
 801cae2:	f825 600c 	strh.w	r6, [r5, ip]
 801cae6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cae8:	4410      	add	r0, r2
 801caea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801caec:	3f01      	subs	r7, #1
 801caee:	4411      	add	r1, r2
 801caf0:	e787      	b.n	801ca02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801caf2:	f06f 0601 	mvn.w	r6, #1
 801caf6:	437e      	muls	r6, r7
 801caf8:	fa1f fa82 	uxth.w	sl, r2
 801cafc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801cb00:	9602      	str	r6, [sp, #8]
 801cb02:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801cb06:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801cb0a:	43d2      	mvns	r2, r2
 801cb0c:	b2d2      	uxtb	r2, r2
 801cb0e:	fb1c fc0a 	smulbb	ip, ip, sl
 801cb12:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801cb16:	fb0e ce02 	mla	lr, lr, r2, ip
 801cb1a:	b2e4      	uxtb	r4, r4
 801cb1c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801cb20:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801cb24:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801cb28:	fa5f f888 	uxtb.w	r8, r8
 801cb2c:	fb14 f40a 	smulbb	r4, r4, sl
 801cb30:	fb08 4402 	mla	r4, r8, r2, r4
 801cb34:	fa1f fe8e 	uxth.w	lr, lr
 801cb38:	fb16 f60a 	smulbb	r6, r6, sl
 801cb3c:	b2a4      	uxth	r4, r4
 801cb3e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801cb42:	fb0c 6c02 	mla	ip, ip, r2, r6
 801cb46:	f10e 0201 	add.w	r2, lr, #1
 801cb4a:	1c66      	adds	r6, r4, #1
 801cb4c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801cb50:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801cb54:	fa1f fc8c 	uxth.w	ip, ip
 801cb58:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cb5c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801cb60:	ea46 0e0e 	orr.w	lr, r6, lr
 801cb64:	f10c 0601 	add.w	r6, ip, #1
 801cb68:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801cb6c:	0976      	lsrs	r6, r6, #5
 801cb6e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801cb72:	9a02      	ldr	r2, [sp, #8]
 801cb74:	ea4e 0e06 	orr.w	lr, lr, r6
 801cb78:	f825 e002 	strh.w	lr, [r5, r2]
 801cb7c:	e7b3      	b.n	801cae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801cb7e:	f04f 0800 	mov.w	r8, #0
 801cb82:	eba3 0208 	sub.w	r2, r3, r8
 801cb86:	2a00      	cmp	r2, #0
 801cb88:	f77f af3e 	ble.w	801ca08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801cb8c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801cb90:	1404      	asrs	r4, r0, #16
 801cb92:	140a      	asrs	r2, r1, #16
 801cb94:	fb06 4202 	mla	r2, r6, r2, r4
 801cb98:	9c01      	ldr	r4, [sp, #4]
 801cb9a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801cb9e:	0e22      	lsrs	r2, r4, #24
 801cba0:	d016      	beq.n	801cbd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801cba2:	9e04      	ldr	r6, [sp, #16]
 801cba4:	4372      	muls	r2, r6
 801cba6:	1c56      	adds	r6, r2, #1
 801cba8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801cbac:	1212      	asrs	r2, r2, #8
 801cbae:	2aff      	cmp	r2, #255	@ 0xff
 801cbb0:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801cbb4:	d113      	bne.n	801cbde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801cbb6:	0962      	lsrs	r2, r4, #5
 801cbb8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801cbbc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cbc0:	f026 0607 	bic.w	r6, r6, #7
 801cbc4:	4316      	orrs	r6, r2
 801cbc6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cbca:	4326      	orrs	r6, r4
 801cbcc:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801cbd0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cbd2:	4410      	add	r0, r2
 801cbd4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cbd6:	f108 0801 	add.w	r8, r8, #1
 801cbda:	4411      	add	r1, r2
 801cbdc:	e7d1      	b.n	801cb82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801cbde:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801cbe2:	fa1f fa82 	uxth.w	sl, r2
 801cbe6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cbea:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801cbee:	43d2      	mvns	r2, r2
 801cbf0:	b2d2      	uxtb	r2, r2
 801cbf2:	fb17 f70a 	smulbb	r7, r7, sl
 801cbf6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cbfa:	fb0c 7c02 	mla	ip, ip, r2, r7
 801cbfe:	b2e4      	uxtb	r4, r4
 801cc00:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801cc04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cc08:	fa5f fe8e 	uxtb.w	lr, lr
 801cc0c:	fb14 f40a 	smulbb	r4, r4, sl
 801cc10:	fb0e 4402 	mla	r4, lr, r2, r4
 801cc14:	b2f6      	uxtb	r6, r6
 801cc16:	fa1f fc8c 	uxth.w	ip, ip
 801cc1a:	fb16 f60a 	smulbb	r6, r6, sl
 801cc1e:	b2a4      	uxth	r4, r4
 801cc20:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cc24:	fb07 6702 	mla	r7, r7, r2, r6
 801cc28:	f10c 0201 	add.w	r2, ip, #1
 801cc2c:	1c66      	adds	r6, r4, #1
 801cc2e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cc32:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801cc36:	b2bf      	uxth	r7, r7
 801cc38:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cc3c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801cc40:	ea46 0c0c 	orr.w	ip, r6, ip
 801cc44:	1c7e      	adds	r6, r7, #1
 801cc46:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cc4a:	0976      	lsrs	r6, r6, #5
 801cc4c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801cc50:	ea4c 0c06 	orr.w	ip, ip, r6
 801cc54:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801cc58:	e7ba      	b.n	801cbd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801cc5a:	b007      	add	sp, #28
 801cc5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc64:	b085      	sub	sp, #20
 801cc66:	468b      	mov	fp, r1
 801cc68:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801cc6a:	9203      	str	r2, [sp, #12]
 801cc6c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801cc70:	6841      	ldr	r1, [r0, #4]
 801cc72:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801cc76:	fb01 2404 	mla	r4, r1, r4, r2
 801cc7a:	6802      	ldr	r2, [r0, #0]
 801cc7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cc80:	f8d8 2000 	ldr.w	r2, [r8]
 801cc84:	9201      	str	r2, [sp, #4]
 801cc86:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cc8a:	f1bb 0f00 	cmp.w	fp, #0
 801cc8e:	dc03      	bgt.n	801cc98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801cc90:	9a03      	ldr	r2, [sp, #12]
 801cc92:	2a00      	cmp	r2, #0
 801cc94:	f340 814f 	ble.w	801cf36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801cc98:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cc9a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801cc9e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801cca2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801cca6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801cca8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ccac:	2b00      	cmp	r3, #0
 801ccae:	dd0e      	ble.n	801ccce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ccb0:	1408      	asrs	r0, r1, #16
 801ccb2:	d405      	bmi.n	801ccc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ccb4:	42b8      	cmp	r0, r7
 801ccb6:	da03      	bge.n	801ccc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ccb8:	1410      	asrs	r0, r2, #16
 801ccba:	d401      	bmi.n	801ccc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ccbc:	42b0      	cmp	r0, r6
 801ccbe:	db07      	blt.n	801ccd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ccc0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ccc2:	4401      	add	r1, r0
 801ccc4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ccc6:	3b01      	subs	r3, #1
 801ccc8:	4402      	add	r2, r0
 801ccca:	3402      	adds	r4, #2
 801cccc:	e7ee      	b.n	801ccac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ccce:	d017      	beq.n	801cd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ccd0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ccd2:	1e58      	subs	r0, r3, #1
 801ccd4:	fb05 1500 	mla	r5, r5, r0, r1
 801ccd8:	142d      	asrs	r5, r5, #16
 801ccda:	d409      	bmi.n	801ccf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ccdc:	42bd      	cmp	r5, r7
 801ccde:	da07      	bge.n	801ccf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cce0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801cce2:	fb05 2000 	mla	r0, r5, r0, r2
 801cce6:	1400      	asrs	r0, r0, #16
 801cce8:	d402      	bmi.n	801ccf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ccea:	42b0      	cmp	r0, r6
 801ccec:	f2c0 80ba 	blt.w	801ce64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ccf0:	2600      	movs	r6, #0
 801ccf2:	1998      	adds	r0, r3, r6
 801ccf4:	2800      	cmp	r0, #0
 801ccf6:	dc3e      	bgt.n	801cd76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ccf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ccfc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cd00:	f1bb 0f00 	cmp.w	fp, #0
 801cd04:	f340 8117 	ble.w	801cf36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801cd08:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd0c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd10:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cd14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cd16:	f1bb 0b01 	subs.w	fp, fp, #1
 801cd1a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd22:	eeb0 6a62 	vmov.f32	s12, s5
 801cd26:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd2e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd32:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801cd36:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd3a:	eeb0 6a43 	vmov.f32	s12, s6
 801cd3e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd42:	ee12 2a90 	vmov	r2, s5
 801cd46:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd4e:	ee13 2a10 	vmov	r2, s6
 801cd52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd56:	9311      	str	r3, [sp, #68]	@ 0x44
 801cd58:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cd5a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd5e:	9a03      	ldr	r2, [sp, #12]
 801cd60:	9312      	str	r3, [sp, #72]	@ 0x48
 801cd62:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801cd66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cd68:	eeb0 3a67 	vmov.f32	s6, s15
 801cd6c:	bf08      	it	eq
 801cd6e:	4613      	moveq	r3, r2
 801cd70:	eef0 2a47 	vmov.f32	s5, s14
 801cd74:	e789      	b.n	801cc8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801cd76:	140f      	asrs	r7, r1, #16
 801cd78:	d424      	bmi.n	801cdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cd7a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801cd7e:	42bd      	cmp	r5, r7
 801cd80:	dd20      	ble.n	801cdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cd82:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cd86:	d41d      	bmi.n	801cdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cd88:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801cd8c:	4560      	cmp	r0, ip
 801cd8e:	dd19      	ble.n	801cdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cd90:	b22d      	sxth	r5, r5
 801cd92:	fb0c 7505 	mla	r5, ip, r5, r7
 801cd96:	9801      	ldr	r0, [sp, #4]
 801cd98:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801cd9c:	0e07      	lsrs	r7, r0, #24
 801cd9e:	2fff      	cmp	r7, #255	@ 0xff
 801cda0:	d116      	bne.n	801cdd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801cda2:	f06f 0501 	mvn.w	r5, #1
 801cda6:	fb05 f706 	mul.w	r7, r5, r6
 801cdaa:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801cdae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801cdb2:	0945      	lsrs	r5, r0, #5
 801cdb4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cdb8:	ea4c 0505 	orr.w	r5, ip, r5
 801cdbc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801cdc0:	4305      	orrs	r5, r0
 801cdc2:	53e5      	strh	r5, [r4, r7]
 801cdc4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801cdc6:	4401      	add	r1, r0
 801cdc8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801cdca:	3e01      	subs	r6, #1
 801cdcc:	4402      	add	r2, r0
 801cdce:	e790      	b.n	801ccf2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cdd0:	b2fd      	uxtb	r5, r7
 801cdd2:	2f00      	cmp	r7, #0
 801cdd4:	d0f6      	beq.n	801cdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801cdd6:	f06f 0701 	mvn.w	r7, #1
 801cdda:	4377      	muls	r7, r6
 801cddc:	fa1f f985 	uxth.w	r9, r5
 801cde0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801cde4:	9702      	str	r7, [sp, #8]
 801cde6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cdea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801cdee:	43ed      	mvns	r5, r5
 801cdf0:	b2ed      	uxtb	r5, r5
 801cdf2:	fb17 f709 	smulbb	r7, r7, r9
 801cdf6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cdfa:	fb0c 7c05 	mla	ip, ip, r5, r7
 801cdfe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ce02:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ce06:	b2c0      	uxtb	r0, r0
 801ce08:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ce0c:	fa5f fe8e 	uxtb.w	lr, lr
 801ce10:	fb10 f009 	smulbb	r0, r0, r9
 801ce14:	fb0e 0005 	mla	r0, lr, r5, r0
 801ce18:	b280      	uxth	r0, r0
 801ce1a:	fa1f fc8c 	uxth.w	ip, ip
 801ce1e:	fb1a fa09 	smulbb	sl, sl, r9
 801ce22:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ce26:	fb07 a705 	mla	r7, r7, r5, sl
 801ce2a:	f100 0a01 	add.w	sl, r0, #1
 801ce2e:	f10c 0501 	add.w	r5, ip, #1
 801ce32:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ce36:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ce3a:	b2bf      	uxth	r7, r7
 801ce3c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ce40:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ce44:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ce48:	f107 0a01 	add.w	sl, r7, #1
 801ce4c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ce50:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ce54:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ce58:	9802      	ldr	r0, [sp, #8]
 801ce5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ce5e:	f824 c000 	strh.w	ip, [r4, r0]
 801ce62:	e7af      	b.n	801cdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ce64:	f04f 0e00 	mov.w	lr, #0
 801ce68:	eba3 000e 	sub.w	r0, r3, lr
 801ce6c:	2800      	cmp	r0, #0
 801ce6e:	f77f af43 	ble.w	801ccf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ce72:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ce76:	140d      	asrs	r5, r1, #16
 801ce78:	1410      	asrs	r0, r2, #16
 801ce7a:	fb06 5000 	mla	r0, r6, r0, r5
 801ce7e:	9d01      	ldr	r5, [sp, #4]
 801ce80:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ce84:	0e2e      	lsrs	r6, r5, #24
 801ce86:	2eff      	cmp	r6, #255	@ 0xff
 801ce88:	d112      	bne.n	801ceb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801ce8a:	482c      	ldr	r0, [pc, #176]	@ (801cf3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801ce8c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ce90:	0968      	lsrs	r0, r5, #5
 801ce92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce96:	4330      	orrs	r0, r6
 801ce98:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ce9c:	4328      	orrs	r0, r5
 801ce9e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801cea2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801cea4:	4401      	add	r1, r0
 801cea6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801cea8:	f10e 0e01 	add.w	lr, lr, #1
 801ceac:	4402      	add	r2, r0
 801ceae:	e7db      	b.n	801ce68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ceb0:	b2f0      	uxtb	r0, r6
 801ceb2:	2e00      	cmp	r6, #0
 801ceb4:	d0f5      	beq.n	801cea2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ceb6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ceba:	fa1f f980 	uxth.w	r9, r0
 801cebe:	ea4f 272c 	mov.w	r7, ip, asr #8
 801cec2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801cec6:	43c0      	mvns	r0, r0
 801cec8:	b2c0      	uxtb	r0, r0
 801ceca:	fb16 f609 	smulbb	r6, r6, r9
 801cece:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ced2:	fb07 6700 	mla	r7, r7, r0, r6
 801ced6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801ceda:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801cede:	b2ed      	uxtb	r5, r5
 801cee0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cee4:	fa5f fc8c 	uxtb.w	ip, ip
 801cee8:	fb15 f509 	smulbb	r5, r5, r9
 801ceec:	fb0c 5500 	mla	r5, ip, r0, r5
 801cef0:	b2bf      	uxth	r7, r7
 801cef2:	fb1a fa09 	smulbb	sl, sl, r9
 801cef6:	b2ad      	uxth	r5, r5
 801cef8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801cefc:	fb06 a600 	mla	r6, r6, r0, sl
 801cf00:	1c78      	adds	r0, r7, #1
 801cf02:	f105 0a01 	add.w	sl, r5, #1
 801cf06:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801cf0a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cf0e:	b2b6      	uxth	r6, r6
 801cf10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cf14:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801cf18:	ea4a 0707 	orr.w	r7, sl, r7
 801cf1c:	f106 0a01 	add.w	sl, r6, #1
 801cf20:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cf24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cf28:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801cf2c:	ea47 070a 	orr.w	r7, r7, sl
 801cf30:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801cf34:	e7b5      	b.n	801cea2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cf36:	b005      	add	sp, #20
 801cf38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf3c:	fffff800 	.word	0xfffff800

0801cf40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf44:	b087      	sub	sp, #28
 801cf46:	468b      	mov	fp, r1
 801cf48:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cf4a:	9203      	str	r2, [sp, #12]
 801cf4c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801cf50:	9204      	str	r2, [sp, #16]
 801cf52:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801cf56:	6841      	ldr	r1, [r0, #4]
 801cf58:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801cf5c:	fb01 2404 	mla	r4, r1, r4, r2
 801cf60:	6802      	ldr	r2, [r0, #0]
 801cf62:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cf66:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801cf6a:	3201      	adds	r2, #1
 801cf6c:	f022 0201 	bic.w	r2, r2, #1
 801cf70:	9200      	str	r2, [sp, #0]
 801cf72:	f8d9 2000 	ldr.w	r2, [r9]
 801cf76:	9201      	str	r2, [sp, #4]
 801cf78:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cf7c:	f1bb 0f00 	cmp.w	fp, #0
 801cf80:	dc03      	bgt.n	801cf8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cf82:	9a03      	ldr	r2, [sp, #12]
 801cf84:	2a00      	cmp	r2, #0
 801cf86:	f340 8169 	ble.w	801d25c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cf8a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801cf8c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801cf90:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801cf94:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801cf98:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801cf9a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801cf9e:	2b00      	cmp	r3, #0
 801cfa0:	dd0e      	ble.n	801cfc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cfa2:	1402      	asrs	r2, r0, #16
 801cfa4:	d405      	bmi.n	801cfb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cfa6:	42ba      	cmp	r2, r7
 801cfa8:	da03      	bge.n	801cfb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cfaa:	140a      	asrs	r2, r1, #16
 801cfac:	d401      	bmi.n	801cfb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cfae:	42b2      	cmp	r2, r6
 801cfb0:	db07      	blt.n	801cfc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801cfb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cfb4:	4410      	add	r0, r2
 801cfb6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cfb8:	3b01      	subs	r3, #1
 801cfba:	4411      	add	r1, r2
 801cfbc:	3402      	adds	r4, #2
 801cfbe:	e7ee      	b.n	801cf9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cfc0:	d017      	beq.n	801cff2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801cfc2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cfc4:	1e5a      	subs	r2, r3, #1
 801cfc6:	fb05 0502 	mla	r5, r5, r2, r0
 801cfca:	142d      	asrs	r5, r5, #16
 801cfcc:	d409      	bmi.n	801cfe2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cfce:	42bd      	cmp	r5, r7
 801cfd0:	da07      	bge.n	801cfe2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cfd2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801cfd4:	fb05 1202 	mla	r2, r5, r2, r1
 801cfd8:	1412      	asrs	r2, r2, #16
 801cfda:	d402      	bmi.n	801cfe2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cfdc:	42b2      	cmp	r2, r6
 801cfde:	f2c0 80c7 	blt.w	801d170 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801cfe2:	2700      	movs	r7, #0
 801cfe4:	19da      	adds	r2, r3, r7
 801cfe6:	2a00      	cmp	r2, #0
 801cfe8:	dc3e      	bgt.n	801d068 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cfea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cfee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cff2:	f1bb 0f00 	cmp.w	fp, #0
 801cff6:	f340 8131 	ble.w	801d25c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cffa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cffe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d002:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d006:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d008:	f1bb 0b01 	subs.w	fp, fp, #1
 801d00c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d010:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d014:	eeb0 6a62 	vmov.f32	s12, s5
 801d018:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d01c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d020:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d024:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801d028:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d02c:	eeb0 6a43 	vmov.f32	s12, s6
 801d030:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d034:	ee12 2a90 	vmov	r2, s5
 801d038:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d03c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d040:	ee13 2a10 	vmov	r2, s6
 801d044:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d048:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d04a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d04c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d050:	9a03      	ldr	r2, [sp, #12]
 801d052:	9314      	str	r3, [sp, #80]	@ 0x50
 801d054:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801d058:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d05a:	eeb0 3a67 	vmov.f32	s6, s15
 801d05e:	bf08      	it	eq
 801d060:	4613      	moveq	r3, r2
 801d062:	eef0 2a47 	vmov.f32	s5, s14
 801d066:	e789      	b.n	801cf7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d068:	1405      	asrs	r5, r0, #16
 801d06a:	d435      	bmi.n	801d0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d06c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801d070:	42aa      	cmp	r2, r5
 801d072:	dd31      	ble.n	801d0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d074:	140e      	asrs	r6, r1, #16
 801d076:	d42f      	bmi.n	801d0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d078:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801d07c:	42b2      	cmp	r2, r6
 801d07e:	dd2b      	ble.n	801d0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d080:	9a00      	ldr	r2, [sp, #0]
 801d082:	fb06 5502 	mla	r5, r6, r2, r5
 801d086:	086a      	lsrs	r2, r5, #1
 801d088:	9e01      	ldr	r6, [sp, #4]
 801d08a:	5cb2      	ldrb	r2, [r6, r2]
 801d08c:	07ee      	lsls	r6, r5, #31
 801d08e:	bf54      	ite	pl
 801d090:	f002 020f 	andpl.w	r2, r2, #15
 801d094:	1112      	asrmi	r2, r2, #4
 801d096:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d09a:	b2d2      	uxtb	r2, r2
 801d09c:	b1e2      	cbz	r2, 801d0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d09e:	9d04      	ldr	r5, [sp, #16]
 801d0a0:	436a      	muls	r2, r5
 801d0a2:	1c55      	adds	r5, r2, #1
 801d0a4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801d0a8:	4d6e      	ldr	r5, [pc, #440]	@ (801d264 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801d0aa:	682d      	ldr	r5, [r5, #0]
 801d0ac:	1212      	asrs	r2, r2, #8
 801d0ae:	0a2e      	lsrs	r6, r5, #8
 801d0b0:	2aff      	cmp	r2, #255	@ 0xff
 801d0b2:	9605      	str	r6, [sp, #20]
 801d0b4:	d116      	bne.n	801d0e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801d0b6:	f06f 0201 	mvn.w	r2, #1
 801d0ba:	fb02 fc07 	mul.w	ip, r2, r7
 801d0be:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801d0c2:	096a      	lsrs	r2, r5, #5
 801d0c4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d0c8:	f026 0607 	bic.w	r6, r6, #7
 801d0cc:	4316      	orrs	r6, r2
 801d0ce:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d0d2:	432e      	orrs	r6, r5
 801d0d4:	f824 600c 	strh.w	r6, [r4, ip]
 801d0d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d0da:	4410      	add	r0, r2
 801d0dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d0de:	3f01      	subs	r7, #1
 801d0e0:	4411      	add	r1, r2
 801d0e2:	e77f      	b.n	801cfe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801d0e4:	f06f 0601 	mvn.w	r6, #1
 801d0e8:	437e      	muls	r6, r7
 801d0ea:	fa1f fa82 	uxth.w	sl, r2
 801d0ee:	f834 8006 	ldrh.w	r8, [r4, r6]
 801d0f2:	9602      	str	r6, [sp, #8]
 801d0f4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801d0f8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801d0fc:	43d2      	mvns	r2, r2
 801d0fe:	b2d2      	uxtb	r2, r2
 801d100:	fb1c fc0a 	smulbb	ip, ip, sl
 801d104:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801d108:	fb0e ce02 	mla	lr, lr, r2, ip
 801d10c:	b2ed      	uxtb	r5, r5
 801d10e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801d112:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d116:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801d11a:	fa5f f888 	uxtb.w	r8, r8
 801d11e:	fb15 f50a 	smulbb	r5, r5, sl
 801d122:	fb08 5502 	mla	r5, r8, r2, r5
 801d126:	fa1f fe8e 	uxth.w	lr, lr
 801d12a:	fb16 f60a 	smulbb	r6, r6, sl
 801d12e:	b2ad      	uxth	r5, r5
 801d130:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801d134:	fb0c 6c02 	mla	ip, ip, r2, r6
 801d138:	f10e 0201 	add.w	r2, lr, #1
 801d13c:	1c6e      	adds	r6, r5, #1
 801d13e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801d142:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801d146:	fa1f fc8c 	uxth.w	ip, ip
 801d14a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d14e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801d152:	ea46 0e0e 	orr.w	lr, r6, lr
 801d156:	f10c 0601 	add.w	r6, ip, #1
 801d15a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801d15e:	0976      	lsrs	r6, r6, #5
 801d160:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d164:	9a02      	ldr	r2, [sp, #8]
 801d166:	ea4e 0e06 	orr.w	lr, lr, r6
 801d16a:	f824 e002 	strh.w	lr, [r4, r2]
 801d16e:	e7b3      	b.n	801d0d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d170:	f04f 0800 	mov.w	r8, #0
 801d174:	eba3 0208 	sub.w	r2, r3, r8
 801d178:	2a00      	cmp	r2, #0
 801d17a:	f77f af36 	ble.w	801cfea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d17e:	9e00      	ldr	r6, [sp, #0]
 801d180:	1402      	asrs	r2, r0, #16
 801d182:	140d      	asrs	r5, r1, #16
 801d184:	fb06 2505 	mla	r5, r6, r5, r2
 801d188:	086a      	lsrs	r2, r5, #1
 801d18a:	9e01      	ldr	r6, [sp, #4]
 801d18c:	5cb2      	ldrb	r2, [r6, r2]
 801d18e:	07ed      	lsls	r5, r5, #31
 801d190:	bf54      	ite	pl
 801d192:	f002 020f 	andpl.w	r2, r2, #15
 801d196:	1112      	asrmi	r2, r2, #4
 801d198:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d19c:	b2d2      	uxtb	r2, r2
 801d19e:	b1c2      	cbz	r2, 801d1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801d1a0:	9d04      	ldr	r5, [sp, #16]
 801d1a2:	436a      	muls	r2, r5
 801d1a4:	1c55      	adds	r5, r2, #1
 801d1a6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801d1aa:	4d2e      	ldr	r5, [pc, #184]	@ (801d264 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801d1ac:	1212      	asrs	r2, r2, #8
 801d1ae:	682e      	ldr	r6, [r5, #0]
 801d1b0:	2aff      	cmp	r2, #255	@ 0xff
 801d1b2:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801d1b6:	d113      	bne.n	801d1e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801d1b8:	0972      	lsrs	r2, r6, #5
 801d1ba:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801d1be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d1c2:	f025 0507 	bic.w	r5, r5, #7
 801d1c6:	4315      	orrs	r5, r2
 801d1c8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d1cc:	4335      	orrs	r5, r6
 801d1ce:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801d1d2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d1d4:	4410      	add	r0, r2
 801d1d6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d1d8:	f108 0801 	add.w	r8, r8, #1
 801d1dc:	4411      	add	r1, r2
 801d1de:	e7c9      	b.n	801d174 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d1e0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d1e4:	fa1f fa82 	uxth.w	sl, r2
 801d1e8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d1ec:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801d1f0:	43d2      	mvns	r2, r2
 801d1f2:	b2d2      	uxtb	r2, r2
 801d1f4:	fb17 f70a 	smulbb	r7, r7, sl
 801d1f8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d1fc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801d200:	b2f6      	uxtb	r6, r6
 801d202:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801d206:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d20a:	fa5f fe8e 	uxtb.w	lr, lr
 801d20e:	fb16 f60a 	smulbb	r6, r6, sl
 801d212:	fb0e 6602 	mla	r6, lr, r2, r6
 801d216:	b2ed      	uxtb	r5, r5
 801d218:	fa1f fc8c 	uxth.w	ip, ip
 801d21c:	fb15 f50a 	smulbb	r5, r5, sl
 801d220:	b2b6      	uxth	r6, r6
 801d222:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d226:	fb07 5702 	mla	r7, r7, r2, r5
 801d22a:	f10c 0201 	add.w	r2, ip, #1
 801d22e:	1c75      	adds	r5, r6, #1
 801d230:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d234:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d238:	b2bf      	uxth	r7, r7
 801d23a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d23e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801d242:	ea45 0c0c 	orr.w	ip, r5, ip
 801d246:	1c7d      	adds	r5, r7, #1
 801d248:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801d24c:	096d      	lsrs	r5, r5, #5
 801d24e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d252:	ea4c 0c05 	orr.w	ip, ip, r5
 801d256:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801d25a:	e7ba      	b.n	801d1d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801d25c:	b007      	add	sp, #28
 801d25e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d262:	bf00      	nop
 801d264:	20013f70 	.word	0x20013f70

0801d268 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d26c:	b087      	sub	sp, #28
 801d26e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801d57c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801d272:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d274:	9205      	str	r2, [sp, #20]
 801d276:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801d27a:	9101      	str	r1, [sp, #4]
 801d27c:	6841      	ldr	r1, [r0, #4]
 801d27e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801d282:	fb01 2404 	mla	r4, r1, r4, r2
 801d286:	6802      	ldr	r2, [r0, #0]
 801d288:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d28c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801d290:	3201      	adds	r2, #1
 801d292:	f022 0201 	bic.w	r2, r2, #1
 801d296:	9202      	str	r2, [sp, #8]
 801d298:	f8db 2000 	ldr.w	r2, [fp]
 801d29c:	9203      	str	r2, [sp, #12]
 801d29e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801d2a2:	9a01      	ldr	r2, [sp, #4]
 801d2a4:	2a00      	cmp	r2, #0
 801d2a6:	dc03      	bgt.n	801d2b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d2a8:	9a05      	ldr	r2, [sp, #20]
 801d2aa:	2a00      	cmp	r2, #0
 801d2ac:	f340 8162 	ble.w	801d574 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d2b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d2b2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801d2b6:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801d2ba:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801d2be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d2c0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801d2c4:	2b00      	cmp	r3, #0
 801d2c6:	dd0e      	ble.n	801d2e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d2c8:	1402      	asrs	r2, r0, #16
 801d2ca:	d405      	bmi.n	801d2d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d2cc:	42ba      	cmp	r2, r7
 801d2ce:	da03      	bge.n	801d2d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d2d0:	140a      	asrs	r2, r1, #16
 801d2d2:	d401      	bmi.n	801d2d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d2d4:	42b2      	cmp	r2, r6
 801d2d6:	db07      	blt.n	801d2e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d2d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d2da:	4410      	add	r0, r2
 801d2dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d2de:	3b01      	subs	r3, #1
 801d2e0:	4411      	add	r1, r2
 801d2e2:	3402      	adds	r4, #2
 801d2e4:	e7ee      	b.n	801d2c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801d2e6:	d017      	beq.n	801d318 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d2e8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d2ea:	1e5a      	subs	r2, r3, #1
 801d2ec:	fb05 0502 	mla	r5, r5, r2, r0
 801d2f0:	142d      	asrs	r5, r5, #16
 801d2f2:	d409      	bmi.n	801d308 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d2f4:	42bd      	cmp	r5, r7
 801d2f6:	da07      	bge.n	801d308 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d2f8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d2fa:	fb05 1202 	mla	r2, r5, r2, r1
 801d2fe:	1412      	asrs	r2, r2, #16
 801d300:	d402      	bmi.n	801d308 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d302:	42b2      	cmp	r2, r6
 801d304:	f2c0 80c3 	blt.w	801d48e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801d308:	2500      	movs	r5, #0
 801d30a:	195a      	adds	r2, r3, r5
 801d30c:	2a00      	cmp	r2, #0
 801d30e:	dc3f      	bgt.n	801d390 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d310:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d314:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d318:	9b01      	ldr	r3, [sp, #4]
 801d31a:	2b00      	cmp	r3, #0
 801d31c:	f340 812a 	ble.w	801d574 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d320:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d324:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d328:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d32c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d32e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d332:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d336:	eeb0 6a62 	vmov.f32	s12, s5
 801d33a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d33e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d342:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d346:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801d34a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d34e:	eeb0 6a43 	vmov.f32	s12, s6
 801d352:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d356:	ee12 2a90 	vmov	r2, s5
 801d35a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d35e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d362:	ee13 2a10 	vmov	r2, s6
 801d366:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d368:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d36a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d36e:	9314      	str	r3, [sp, #80]	@ 0x50
 801d370:	9b01      	ldr	r3, [sp, #4]
 801d372:	9a05      	ldr	r2, [sp, #20]
 801d374:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d378:	3b01      	subs	r3, #1
 801d37a:	9301      	str	r3, [sp, #4]
 801d37c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801d380:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d382:	eeb0 3a67 	vmov.f32	s6, s15
 801d386:	bf08      	it	eq
 801d388:	4613      	moveq	r3, r2
 801d38a:	eef0 2a47 	vmov.f32	s5, s14
 801d38e:	e788      	b.n	801d2a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d390:	1406      	asrs	r6, r0, #16
 801d392:	d42c      	bmi.n	801d3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d394:	f8db 2008 	ldr.w	r2, [fp, #8]
 801d398:	42b2      	cmp	r2, r6
 801d39a:	dd28      	ble.n	801d3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d39c:	140f      	asrs	r7, r1, #16
 801d39e:	d426      	bmi.n	801d3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d3a0:	f8db 200c 	ldr.w	r2, [fp, #12]
 801d3a4:	42ba      	cmp	r2, r7
 801d3a6:	dd22      	ble.n	801d3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d3a8:	9a02      	ldr	r2, [sp, #8]
 801d3aa:	fb07 6602 	mla	r6, r7, r2, r6
 801d3ae:	0872      	lsrs	r2, r6, #1
 801d3b0:	9f03      	ldr	r7, [sp, #12]
 801d3b2:	5cba      	ldrb	r2, [r7, r2]
 801d3b4:	07f6      	lsls	r6, r6, #31
 801d3b6:	bf54      	ite	pl
 801d3b8:	f002 020f 	andpl.w	r2, r2, #15
 801d3bc:	1112      	asrmi	r2, r2, #4
 801d3be:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d3c2:	b2d2      	uxtb	r2, r2
 801d3c4:	2aff      	cmp	r2, #255	@ 0xff
 801d3c6:	d118      	bne.n	801d3fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801d3c8:	f8d8 2000 	ldr.w	r2, [r8]
 801d3cc:	f06f 0601 	mvn.w	r6, #1
 801d3d0:	fb06 f705 	mul.w	r7, r6, r5
 801d3d4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801d3d8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801d3dc:	0956      	lsrs	r6, r2, #5
 801d3de:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d3e2:	ea4c 0606 	orr.w	r6, ip, r6
 801d3e6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d3ea:	4316      	orrs	r6, r2
 801d3ec:	53e6      	strh	r6, [r4, r7]
 801d3ee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d3f0:	4410      	add	r0, r2
 801d3f2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d3f4:	3d01      	subs	r5, #1
 801d3f6:	4411      	add	r1, r2
 801d3f8:	e787      	b.n	801d30a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d3fa:	2a00      	cmp	r2, #0
 801d3fc:	d0f7      	beq.n	801d3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d3fe:	f06f 0601 	mvn.w	r6, #1
 801d402:	436e      	muls	r6, r5
 801d404:	f8d8 c000 	ldr.w	ip, [r8]
 801d408:	f834 e006 	ldrh.w	lr, [r4, r6]
 801d40c:	9604      	str	r6, [sp, #16]
 801d40e:	fa1f f982 	uxth.w	r9, r2
 801d412:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d416:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801d41a:	43d2      	mvns	r2, r2
 801d41c:	b2d2      	uxtb	r2, r2
 801d41e:	fb16 f609 	smulbb	r6, r6, r9
 801d422:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d426:	fb07 6702 	mla	r7, r7, r2, r6
 801d42a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801d42e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d432:	fa5f fc8c 	uxtb.w	ip, ip
 801d436:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d43a:	fa5f fe8e 	uxtb.w	lr, lr
 801d43e:	fb1c fc09 	smulbb	ip, ip, r9
 801d442:	fb0e cc02 	mla	ip, lr, r2, ip
 801d446:	b2bf      	uxth	r7, r7
 801d448:	fb1a fa09 	smulbb	sl, sl, r9
 801d44c:	fa1f fc8c 	uxth.w	ip, ip
 801d450:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d454:	fb06 a602 	mla	r6, r6, r2, sl
 801d458:	1c7a      	adds	r2, r7, #1
 801d45a:	f10c 0a01 	add.w	sl, ip, #1
 801d45e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d462:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801d466:	b2b6      	uxth	r6, r6
 801d468:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d46c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801d470:	ea4a 0707 	orr.w	r7, sl, r7
 801d474:	f106 0a01 	add.w	sl, r6, #1
 801d478:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d47c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d480:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801d484:	9a04      	ldr	r2, [sp, #16]
 801d486:	ea47 070a 	orr.w	r7, r7, sl
 801d48a:	52a7      	strh	r7, [r4, r2]
 801d48c:	e7af      	b.n	801d3ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d48e:	f04f 0e00 	mov.w	lr, #0
 801d492:	eba3 020e 	sub.w	r2, r3, lr
 801d496:	2a00      	cmp	r2, #0
 801d498:	f77f af3a 	ble.w	801d310 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d49c:	9e02      	ldr	r6, [sp, #8]
 801d49e:	1402      	asrs	r2, r0, #16
 801d4a0:	140d      	asrs	r5, r1, #16
 801d4a2:	fb06 2505 	mla	r5, r6, r5, r2
 801d4a6:	086a      	lsrs	r2, r5, #1
 801d4a8:	9e03      	ldr	r6, [sp, #12]
 801d4aa:	5cb2      	ldrb	r2, [r6, r2]
 801d4ac:	07ed      	lsls	r5, r5, #31
 801d4ae:	bf54      	ite	pl
 801d4b0:	f002 020f 	andpl.w	r2, r2, #15
 801d4b4:	1112      	asrmi	r2, r2, #4
 801d4b6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d4ba:	b2d2      	uxtb	r2, r2
 801d4bc:	2aff      	cmp	r2, #255	@ 0xff
 801d4be:	d115      	bne.n	801d4ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801d4c0:	f8d8 5000 	ldr.w	r5, [r8]
 801d4c4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801d4c8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801d4cc:	096a      	lsrs	r2, r5, #5
 801d4ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d4d2:	4332      	orrs	r2, r6
 801d4d4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d4d8:	432a      	orrs	r2, r5
 801d4da:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801d4de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d4e0:	4410      	add	r0, r2
 801d4e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d4e4:	f10e 0e01 	add.w	lr, lr, #1
 801d4e8:	4411      	add	r1, r2
 801d4ea:	e7d2      	b.n	801d492 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d4ec:	2a00      	cmp	r2, #0
 801d4ee:	d0f6      	beq.n	801d4de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d4f0:	f8d8 7000 	ldr.w	r7, [r8]
 801d4f4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801d4f8:	fa1f f982 	uxth.w	r9, r2
 801d4fc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801d500:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801d504:	43d2      	mvns	r2, r2
 801d506:	b2d2      	uxtb	r2, r2
 801d508:	fb15 f509 	smulbb	r5, r5, r9
 801d50c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d510:	fb06 5602 	mla	r6, r6, r2, r5
 801d514:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801d518:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d51c:	b2ff      	uxtb	r7, r7
 801d51e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d522:	fa5f fc8c 	uxtb.w	ip, ip
 801d526:	fb17 f709 	smulbb	r7, r7, r9
 801d52a:	fb0c 7702 	mla	r7, ip, r2, r7
 801d52e:	b2b6      	uxth	r6, r6
 801d530:	fb1a fa09 	smulbb	sl, sl, r9
 801d534:	b2bf      	uxth	r7, r7
 801d536:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d53a:	fb05 a502 	mla	r5, r5, r2, sl
 801d53e:	1c72      	adds	r2, r6, #1
 801d540:	f107 0a01 	add.w	sl, r7, #1
 801d544:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801d548:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d54c:	b2ad      	uxth	r5, r5
 801d54e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d552:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801d556:	ea4a 0606 	orr.w	r6, sl, r6
 801d55a:	f105 0a01 	add.w	sl, r5, #1
 801d55e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d562:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d566:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801d56a:	ea46 060a 	orr.w	r6, r6, sl
 801d56e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801d572:	e7b4      	b.n	801d4de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d574:	b007      	add	sp, #28
 801d576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d57a:	bf00      	nop
 801d57c:	20013f70 	.word	0x20013f70

0801d580 <_ZN8touchgfx8LCD16bppD1Ev>:
 801d580:	4770      	bx	lr

0801d582 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801d582:	4770      	bx	lr

0801d584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801d584:	4770      	bx	lr

0801d586 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801d586:	4770      	bx	lr

0801d588 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801d588:	4770      	bx	lr

0801d58a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801d58a:	4770      	bx	lr

0801d58c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801d58c:	4770      	bx	lr

0801d58e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801d58e:	4770      	bx	lr

0801d590 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801d590:	4770      	bx	lr

0801d592 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801d592:	4770      	bx	lr

0801d594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801d594:	4770      	bx	lr

0801d596 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801d596:	4770      	bx	lr

0801d598 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801d598:	4770      	bx	lr

0801d59a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801d59a:	4770      	bx	lr

0801d59c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801d59c:	4770      	bx	lr

0801d59e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801d59e:	4770      	bx	lr

0801d5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801d5a0:	4770      	bx	lr

0801d5a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801d5a2:	4770      	bx	lr

0801d5a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801d5a4:	4770      	bx	lr

0801d5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801d5a6:	4770      	bx	lr

0801d5a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801d5a8:	4770      	bx	lr

0801d5aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801d5aa:	4770      	bx	lr

0801d5ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801d5ac:	4770      	bx	lr

0801d5ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801d5ae:	4770      	bx	lr

0801d5b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801d5b0:	4770      	bx	lr

0801d5b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801d5b2:	4770      	bx	lr

0801d5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801d5b4:	4770      	bx	lr

0801d5b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801d5b6:	4770      	bx	lr

0801d5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801d5b8:	4770      	bx	lr

0801d5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801d5ba:	4770      	bx	lr

0801d5bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801d5bc:	4770      	bx	lr

0801d5be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801d5be:	4770      	bx	lr

0801d5c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801d5c0:	4770      	bx	lr

0801d5c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801d5c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d5c6:	b088      	sub	sp, #32
 801d5c8:	ac08      	add	r4, sp, #32
 801d5ca:	4606      	mov	r6, r0
 801d5cc:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801d5d0:	4620      	mov	r0, r4
 801d5d2:	4688      	mov	r8, r1
 801d5d4:	4691      	mov	r9, r2
 801d5d6:	f7fd fc31 	bl	801ae3c <_ZNK8touchgfx6Bitmap7getDataEv>
 801d5da:	6833      	ldr	r3, [r6, #0]
 801d5dc:	4605      	mov	r5, r0
 801d5de:	4620      	mov	r0, r4
 801d5e0:	699f      	ldr	r7, [r3, #24]
 801d5e2:	f7fd fb39 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d5e6:	4682      	mov	sl, r0
 801d5e8:	4620      	mov	r0, r4
 801d5ea:	f7fd fb69 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d5ee:	9500      	str	r5, [sp, #0]
 801d5f0:	e9cd a001 	strd	sl, r0, [sp, #4]
 801d5f4:	464b      	mov	r3, r9
 801d5f6:	a806      	add	r0, sp, #24
 801d5f8:	4642      	mov	r2, r8
 801d5fa:	4631      	mov	r1, r6
 801d5fc:	47b8      	blx	r7
 801d5fe:	4628      	mov	r0, r5
 801d600:	b008      	add	sp, #32
 801d602:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801d608 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801d608:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d60c:	2300      	movs	r3, #0
 801d60e:	9300      	str	r3, [sp, #0]
 801d610:	4b3d      	ldr	r3, [pc, #244]	@ (801d708 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801d612:	781b      	ldrb	r3, [r3, #0]
 801d614:	2b00      	cmp	r3, #0
 801d616:	d137      	bne.n	801d688 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801d618:	4a3c      	ldr	r2, [pc, #240]	@ (801d70c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d61a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801d61e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801d622:	2b00      	cmp	r3, #0
 801d624:	d132      	bne.n	801d68c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801d626:	4b3a      	ldr	r3, [pc, #232]	@ (801d710 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d628:	f9b3 3000 	ldrsh.w	r3, [r3]
 801d62c:	6808      	ldr	r0, [r1, #0]
 801d62e:	6849      	ldr	r1, [r1, #4]
 801d630:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d634:	ac02      	add	r4, sp, #8
 801d636:	ab02      	add	r3, sp, #8
 801d638:	c303      	stmia	r3!, {r0, r1}
 801d63a:	4669      	mov	r1, sp
 801d63c:	4620      	mov	r0, r4
 801d63e:	f7f9 fcc9 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d642:	4668      	mov	r0, sp
 801d644:	f7f9 fc9e 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d648:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801d64c:	f8bd 2000 	ldrh.w	r2, [sp]
 801d650:	4d30      	ldr	r5, [pc, #192]	@ (801d714 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801d652:	4413      	add	r3, r2
 801d654:	f8ad 3008 	strh.w	r3, [sp, #8]
 801d658:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d65c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801d660:	6828      	ldr	r0, [r5, #0]
 801d662:	4413      	add	r3, r2
 801d664:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d668:	6803      	ldr	r3, [r0, #0]
 801d66a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d66c:	4798      	blx	r3
 801d66e:	f010 0f01 	tst.w	r0, #1
 801d672:	462f      	mov	r7, r5
 801d674:	d00c      	beq.n	801d690 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801d676:	6828      	ldr	r0, [r5, #0]
 801d678:	6803      	ldr	r3, [r0, #0]
 801d67a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801d67e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801d680:	4798      	blx	r3
 801d682:	b004      	add	sp, #16
 801d684:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d688:	4a21      	ldr	r2, [pc, #132]	@ (801d710 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d68a:	e7c6      	b.n	801d61a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801d68c:	4b1f      	ldr	r3, [pc, #124]	@ (801d70c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d68e:	e7cb      	b.n	801d628 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801d690:	6838      	ldr	r0, [r7, #0]
 801d692:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801d696:	6803      	ldr	r3, [r0, #0]
 801d698:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801d69c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801d69e:	4798      	blx	r3
 801d6a0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801d6a4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d6a8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801d6ac:	fb16 3602 	smlabb	r6, r6, r2, r3
 801d6b0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d6b4:	6838      	ldr	r0, [r7, #0]
 801d6b6:	6803      	ldr	r3, [r0, #0]
 801d6b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d6ba:	4798      	blx	r3
 801d6bc:	4a13      	ldr	r2, [pc, #76]	@ (801d70c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d6be:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801d6c2:	8813      	ldrh	r3, [r2, #0]
 801d6c4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d6c8:	fb03 1404 	mla	r4, r3, r4, r1
 801d6cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d6d0:	435d      	muls	r5, r3
 801d6d2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d6d6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801d6da:	4691      	mov	r9, r2
 801d6dc:	6838      	ldr	r0, [r7, #0]
 801d6de:	42ac      	cmp	r4, r5
 801d6e0:	6803      	ldr	r3, [r0, #0]
 801d6e2:	d20e      	bcs.n	801d702 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801d6e4:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801d6e8:	4632      	mov	r2, r6
 801d6ea:	4643      	mov	r3, r8
 801d6ec:	4621      	mov	r1, r4
 801d6ee:	47d0      	blx	sl
 801d6f0:	f8b9 3000 	ldrh.w	r3, [r9]
 801d6f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d6f8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801d6fc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d700:	e7ec      	b.n	801d6dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801d702:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d704:	4798      	blx	r3
 801d706:	e7bc      	b.n	801d682 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801d708:	20013f58 	.word	0x20013f58
 801d70c:	20013f5a 	.word	0x20013f5a
 801d710:	20013f5c 	.word	0x20013f5c
 801d714:	20013f60 	.word	0x20013f60

0801d718 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801d718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d71c:	b08b      	sub	sp, #44	@ 0x2c
 801d71e:	460f      	mov	r7, r1
 801d720:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801d724:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801d728:	4616      	mov	r6, r2
 801d72a:	f1bb 0f00 	cmp.w	fp, #0
 801d72e:	d04a      	beq.n	801d7c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d730:	6810      	ldr	r0, [r2, #0]
 801d732:	6851      	ldr	r1, [r2, #4]
 801d734:	ad06      	add	r5, sp, #24
 801d736:	c503      	stmia	r5!, {r0, r1}
 801d738:	6818      	ldr	r0, [r3, #0]
 801d73a:	6859      	ldr	r1, [r3, #4]
 801d73c:	ad08      	add	r5, sp, #32
 801d73e:	c503      	stmia	r5!, {r0, r1}
 801d740:	a806      	add	r0, sp, #24
 801d742:	f7f9 fc1f 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d746:	4631      	mov	r1, r6
 801d748:	a808      	add	r0, sp, #32
 801d74a:	f7f9 fc43 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d74e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801d752:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801d756:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801d75a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801d75e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801d762:	fb16 2103 	smlabb	r1, r6, r3, r2
 801d766:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801d76a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801d76e:	4f5f      	ldr	r7, [pc, #380]	@ (801d8ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d770:	440a      	add	r2, r1
 801d772:	f8ad 2020 	strh.w	r2, [sp, #32]
 801d776:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801d77a:	6838      	ldr	r0, [r7, #0]
 801d77c:	4413      	add	r3, r2
 801d77e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801d782:	6803      	ldr	r3, [r0, #0]
 801d784:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d786:	4798      	blx	r3
 801d788:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801d78c:	46b9      	mov	r9, r7
 801d78e:	d11d      	bne.n	801d7cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d790:	b9fc      	cbnz	r4, 801d7d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d792:	f010 0f01 	tst.w	r0, #1
 801d796:	d01c      	beq.n	801d7d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d798:	f8d9 0000 	ldr.w	r0, [r9]
 801d79c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801d7a0:	6801      	ldr	r1, [r0, #0]
 801d7a2:	f8cd b00c 	str.w	fp, [sp, #12]
 801d7a6:	2700      	movs	r7, #0
 801d7a8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d7ac:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d7b0:	9402      	str	r4, [sp, #8]
 801d7b2:	b2ad      	uxth	r5, r5
 801d7b4:	fa1f f488 	uxth.w	r4, r8
 801d7b8:	9501      	str	r5, [sp, #4]
 801d7ba:	9400      	str	r4, [sp, #0]
 801d7bc:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801d7be:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d7c2:	4631      	mov	r1, r6
 801d7c4:	47a0      	blx	r4
 801d7c6:	b00b      	add	sp, #44	@ 0x2c
 801d7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7cc:	f010 0f04 	tst.w	r0, #4
 801d7d0:	e7e1      	b.n	801d796 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d7d2:	f8d9 0000 	ldr.w	r0, [r9]
 801d7d6:	6803      	ldr	r3, [r0, #0]
 801d7d8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d7da:	4798      	blx	r3
 801d7dc:	4b44      	ldr	r3, [pc, #272]	@ (801d8f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d7de:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801d7e2:	881a      	ldrh	r2, [r3, #0]
 801d7e4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d7e8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801d7ec:	fb02 1404 	mla	r4, r2, r4, r1
 801d7f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d7f4:	469a      	mov	sl, r3
 801d7f6:	fb05 f502 	mul.w	r5, r5, r2
 801d7fa:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d7fe:	d059      	beq.n	801d8b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d800:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801d804:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d808:	fa1f f28b 	uxth.w	r2, fp
 801d80c:	fa1f f989 	uxth.w	r9, r9
 801d810:	469e      	mov	lr, r3
 801d812:	42ac      	cmp	r4, r5
 801d814:	d264      	bcs.n	801d8e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d816:	eb04 0a07 	add.w	sl, r4, r7
 801d81a:	4554      	cmp	r4, sl
 801d81c:	d23d      	bcs.n	801d89a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d81e:	8821      	ldrh	r1, [r4, #0]
 801d820:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d824:	1208      	asrs	r0, r1, #8
 801d826:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d82a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d82e:	fb10 f009 	smulbb	r0, r0, r9
 801d832:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d836:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d83a:	00c9      	lsls	r1, r1, #3
 801d83c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d840:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d844:	10d8      	asrs	r0, r3, #3
 801d846:	b2c9      	uxtb	r1, r1
 801d848:	00db      	lsls	r3, r3, #3
 801d84a:	fa1f fc8c 	uxth.w	ip, ip
 801d84e:	fb1b fb09 	smulbb	fp, fp, r9
 801d852:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d856:	b2db      	uxtb	r3, r3
 801d858:	fb11 f109 	smulbb	r1, r1, r9
 801d85c:	fb00 b002 	mla	r0, r0, r2, fp
 801d860:	fb03 1302 	mla	r3, r3, r2, r1
 801d864:	f10c 0b01 	add.w	fp, ip, #1
 801d868:	b29b      	uxth	r3, r3
 801d86a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d86e:	b280      	uxth	r0, r0
 801d870:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801d874:	f103 0c01 	add.w	ip, r3, #1
 801d878:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d87c:	1c43      	adds	r3, r0, #1
 801d87e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d882:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d886:	0940      	lsrs	r0, r0, #5
 801d888:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d88c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d890:	ea4c 0c00 	orr.w	ip, ip, r0
 801d894:	f824 cb02 	strh.w	ip, [r4], #2
 801d898:	e7bf      	b.n	801d81a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d89a:	f8be 3000 	ldrh.w	r3, [lr]
 801d89e:	eba3 0308 	sub.w	r3, r3, r8
 801d8a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d8a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d8aa:	eba3 0308 	sub.w	r3, r3, r8
 801d8ae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d8b2:	e7ae      	b.n	801d812 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d8b4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d8b8:	f8d9 0000 	ldr.w	r0, [r9]
 801d8bc:	42ac      	cmp	r4, r5
 801d8be:	6803      	ldr	r3, [r0, #0]
 801d8c0:	d20e      	bcs.n	801d8e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d8c2:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801d8c6:	4632      	mov	r2, r6
 801d8c8:	463b      	mov	r3, r7
 801d8ca:	4621      	mov	r1, r4
 801d8cc:	47c0      	blx	r8
 801d8ce:	f8ba 3000 	ldrh.w	r3, [sl]
 801d8d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d8d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d8da:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d8de:	e7eb      	b.n	801d8b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d8e0:	4b02      	ldr	r3, [pc, #8]	@ (801d8ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d8e2:	6818      	ldr	r0, [r3, #0]
 801d8e4:	6803      	ldr	r3, [r0, #0]
 801d8e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d8e8:	4798      	blx	r3
 801d8ea:	e76c      	b.n	801d7c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d8ec:	20013f60 	.word	0x20013f60
 801d8f0:	20013f5a 	.word	0x20013f5a

0801d8f4 <_ZN8touchgfx8LCD16bppD0Ev>:
 801d8f4:	b510      	push	{r4, lr}
 801d8f6:	218c      	movs	r1, #140	@ 0x8c
 801d8f8:	4604      	mov	r4, r0
 801d8fa:	f00c f9f5 	bl	8029ce8 <_ZdlPvj>
 801d8fe:	4620      	mov	r0, r4
 801d900:	bd10      	pop	{r4, pc}

0801d902 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d902:	b510      	push	{r4, lr}
 801d904:	2104      	movs	r1, #4
 801d906:	4604      	mov	r4, r0
 801d908:	f00c f9ee 	bl	8029ce8 <_ZdlPvj>
 801d90c:	4620      	mov	r0, r4
 801d90e:	bd10      	pop	{r4, pc}

0801d910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d910:	b510      	push	{r4, lr}
 801d912:	2104      	movs	r1, #4
 801d914:	4604      	mov	r4, r0
 801d916:	f00c f9e7 	bl	8029ce8 <_ZdlPvj>
 801d91a:	4620      	mov	r0, r4
 801d91c:	bd10      	pop	{r4, pc}

0801d91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d91e:	b510      	push	{r4, lr}
 801d920:	f640 0144 	movw	r1, #2116	@ 0x844
 801d924:	4604      	mov	r4, r0
 801d926:	f00c f9df 	bl	8029ce8 <_ZdlPvj>
 801d92a:	4620      	mov	r0, r4
 801d92c:	bd10      	pop	{r4, pc}

0801d92e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801d92e:	b510      	push	{r4, lr}
 801d930:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801d934:	4604      	mov	r4, r0
 801d936:	f00c f9d7 	bl	8029ce8 <_ZdlPvj>
 801d93a:	4620      	mov	r0, r4
 801d93c:	bd10      	pop	{r4, pc}

0801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d93e:	b510      	push	{r4, lr}
 801d940:	2104      	movs	r1, #4
 801d942:	4604      	mov	r4, r0
 801d944:	f00c f9d0 	bl	8029ce8 <_ZdlPvj>
 801d948:	4620      	mov	r0, r4
 801d94a:	bd10      	pop	{r4, pc}

0801d94c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d94c:	b510      	push	{r4, lr}
 801d94e:	2104      	movs	r1, #4
 801d950:	4604      	mov	r4, r0
 801d952:	f00c f9c9 	bl	8029ce8 <_ZdlPvj>
 801d956:	4620      	mov	r0, r4
 801d958:	bd10      	pop	{r4, pc}

0801d95a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d95a:	b510      	push	{r4, lr}
 801d95c:	2104      	movs	r1, #4
 801d95e:	4604      	mov	r4, r0
 801d960:	f00c f9c2 	bl	8029ce8 <_ZdlPvj>
 801d964:	4620      	mov	r0, r4
 801d966:	bd10      	pop	{r4, pc}

0801d968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d968:	b510      	push	{r4, lr}
 801d96a:	2104      	movs	r1, #4
 801d96c:	4604      	mov	r4, r0
 801d96e:	f00c f9bb 	bl	8029ce8 <_ZdlPvj>
 801d972:	4620      	mov	r0, r4
 801d974:	bd10      	pop	{r4, pc}

0801d976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d976:	b510      	push	{r4, lr}
 801d978:	2104      	movs	r1, #4
 801d97a:	4604      	mov	r4, r0
 801d97c:	f00c f9b4 	bl	8029ce8 <_ZdlPvj>
 801d980:	4620      	mov	r0, r4
 801d982:	bd10      	pop	{r4, pc}

0801d984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d984:	b510      	push	{r4, lr}
 801d986:	2104      	movs	r1, #4
 801d988:	4604      	mov	r4, r0
 801d98a:	f00c f9ad 	bl	8029ce8 <_ZdlPvj>
 801d98e:	4620      	mov	r0, r4
 801d990:	bd10      	pop	{r4, pc}

0801d992 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d992:	b510      	push	{r4, lr}
 801d994:	2104      	movs	r1, #4
 801d996:	4604      	mov	r4, r0
 801d998:	f00c f9a6 	bl	8029ce8 <_ZdlPvj>
 801d99c:	4620      	mov	r0, r4
 801d99e:	bd10      	pop	{r4, pc}

0801d9a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d9a0:	b510      	push	{r4, lr}
 801d9a2:	2104      	movs	r1, #4
 801d9a4:	4604      	mov	r4, r0
 801d9a6:	f00c f99f 	bl	8029ce8 <_ZdlPvj>
 801d9aa:	4620      	mov	r0, r4
 801d9ac:	bd10      	pop	{r4, pc}

0801d9ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d9ae:	b510      	push	{r4, lr}
 801d9b0:	2104      	movs	r1, #4
 801d9b2:	4604      	mov	r4, r0
 801d9b4:	f00c f998 	bl	8029ce8 <_ZdlPvj>
 801d9b8:	4620      	mov	r0, r4
 801d9ba:	bd10      	pop	{r4, pc}

0801d9bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d9bc:	b510      	push	{r4, lr}
 801d9be:	2104      	movs	r1, #4
 801d9c0:	4604      	mov	r4, r0
 801d9c2:	f00c f991 	bl	8029ce8 <_ZdlPvj>
 801d9c6:	4620      	mov	r0, r4
 801d9c8:	bd10      	pop	{r4, pc}

0801d9ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d9ca:	b510      	push	{r4, lr}
 801d9cc:	2104      	movs	r1, #4
 801d9ce:	4604      	mov	r4, r0
 801d9d0:	f00c f98a 	bl	8029ce8 <_ZdlPvj>
 801d9d4:	4620      	mov	r0, r4
 801d9d6:	bd10      	pop	{r4, pc}

0801d9d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d9d8:	b510      	push	{r4, lr}
 801d9da:	2104      	movs	r1, #4
 801d9dc:	4604      	mov	r4, r0
 801d9de:	f00c f983 	bl	8029ce8 <_ZdlPvj>
 801d9e2:	4620      	mov	r0, r4
 801d9e4:	bd10      	pop	{r4, pc}

0801d9e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d9e6:	b510      	push	{r4, lr}
 801d9e8:	2104      	movs	r1, #4
 801d9ea:	4604      	mov	r4, r0
 801d9ec:	f00c f97c 	bl	8029ce8 <_ZdlPvj>
 801d9f0:	4620      	mov	r0, r4
 801d9f2:	bd10      	pop	{r4, pc}

0801d9f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d9f4:	b510      	push	{r4, lr}
 801d9f6:	2104      	movs	r1, #4
 801d9f8:	4604      	mov	r4, r0
 801d9fa:	f00c f975 	bl	8029ce8 <_ZdlPvj>
 801d9fe:	4620      	mov	r0, r4
 801da00:	bd10      	pop	{r4, pc}

0801da02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801da02:	b510      	push	{r4, lr}
 801da04:	2104      	movs	r1, #4
 801da06:	4604      	mov	r4, r0
 801da08:	f00c f96e 	bl	8029ce8 <_ZdlPvj>
 801da0c:	4620      	mov	r0, r4
 801da0e:	bd10      	pop	{r4, pc}

0801da10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801da10:	b510      	push	{r4, lr}
 801da12:	2104      	movs	r1, #4
 801da14:	4604      	mov	r4, r0
 801da16:	f00c f967 	bl	8029ce8 <_ZdlPvj>
 801da1a:	4620      	mov	r0, r4
 801da1c:	bd10      	pop	{r4, pc}

0801da1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801da1e:	b510      	push	{r4, lr}
 801da20:	2104      	movs	r1, #4
 801da22:	4604      	mov	r4, r0
 801da24:	f00c f960 	bl	8029ce8 <_ZdlPvj>
 801da28:	4620      	mov	r0, r4
 801da2a:	bd10      	pop	{r4, pc}

0801da2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801da2c:	b510      	push	{r4, lr}
 801da2e:	2104      	movs	r1, #4
 801da30:	4604      	mov	r4, r0
 801da32:	f00c f959 	bl	8029ce8 <_ZdlPvj>
 801da36:	4620      	mov	r0, r4
 801da38:	bd10      	pop	{r4, pc}

0801da3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801da3a:	b510      	push	{r4, lr}
 801da3c:	2104      	movs	r1, #4
 801da3e:	4604      	mov	r4, r0
 801da40:	f00c f952 	bl	8029ce8 <_ZdlPvj>
 801da44:	4620      	mov	r0, r4
 801da46:	bd10      	pop	{r4, pc}

0801da48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801da48:	b510      	push	{r4, lr}
 801da4a:	2104      	movs	r1, #4
 801da4c:	4604      	mov	r4, r0
 801da4e:	f00c f94b 	bl	8029ce8 <_ZdlPvj>
 801da52:	4620      	mov	r0, r4
 801da54:	bd10      	pop	{r4, pc}

0801da56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801da56:	b510      	push	{r4, lr}
 801da58:	2104      	movs	r1, #4
 801da5a:	4604      	mov	r4, r0
 801da5c:	f00c f944 	bl	8029ce8 <_ZdlPvj>
 801da60:	4620      	mov	r0, r4
 801da62:	bd10      	pop	{r4, pc}

0801da64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801da64:	b510      	push	{r4, lr}
 801da66:	2104      	movs	r1, #4
 801da68:	4604      	mov	r4, r0
 801da6a:	f00c f93d 	bl	8029ce8 <_ZdlPvj>
 801da6e:	4620      	mov	r0, r4
 801da70:	bd10      	pop	{r4, pc}

0801da72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801da72:	b510      	push	{r4, lr}
 801da74:	2104      	movs	r1, #4
 801da76:	4604      	mov	r4, r0
 801da78:	f00c f936 	bl	8029ce8 <_ZdlPvj>
 801da7c:	4620      	mov	r0, r4
 801da7e:	bd10      	pop	{r4, pc}

0801da80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801da80:	b510      	push	{r4, lr}
 801da82:	2104      	movs	r1, #4
 801da84:	4604      	mov	r4, r0
 801da86:	f00c f92f 	bl	8029ce8 <_ZdlPvj>
 801da8a:	4620      	mov	r0, r4
 801da8c:	bd10      	pop	{r4, pc}

0801da8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801da8e:	b510      	push	{r4, lr}
 801da90:	2104      	movs	r1, #4
 801da92:	4604      	mov	r4, r0
 801da94:	f00c f928 	bl	8029ce8 <_ZdlPvj>
 801da98:	4620      	mov	r0, r4
 801da9a:	bd10      	pop	{r4, pc}

0801da9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801da9c:	b510      	push	{r4, lr}
 801da9e:	2104      	movs	r1, #4
 801daa0:	4604      	mov	r4, r0
 801daa2:	f00c f921 	bl	8029ce8 <_ZdlPvj>
 801daa6:	4620      	mov	r0, r4
 801daa8:	bd10      	pop	{r4, pc}

0801daaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801daaa:	b510      	push	{r4, lr}
 801daac:	2104      	movs	r1, #4
 801daae:	4604      	mov	r4, r0
 801dab0:	f00c f91a 	bl	8029ce8 <_ZdlPvj>
 801dab4:	4620      	mov	r0, r4
 801dab6:	bd10      	pop	{r4, pc}

0801dab8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801dab8:	b510      	push	{r4, lr}
 801daba:	2104      	movs	r1, #4
 801dabc:	4604      	mov	r4, r0
 801dabe:	f00c f913 	bl	8029ce8 <_ZdlPvj>
 801dac2:	4620      	mov	r0, r4
 801dac4:	bd10      	pop	{r4, pc}
	...

0801dac8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801dac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dacc:	b08f      	sub	sp, #60	@ 0x3c
 801dace:	4616      	mov	r6, r2
 801dad0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801dad4:	9205      	str	r2, [sp, #20]
 801dad6:	4682      	mov	sl, r0
 801dad8:	460d      	mov	r5, r1
 801dada:	2a00      	cmp	r2, #0
 801dadc:	f000 82b7 	beq.w	801e04e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801dae0:	6830      	ldr	r0, [r6, #0]
 801dae2:	6871      	ldr	r1, [r6, #4]
 801dae4:	ac0a      	add	r4, sp, #40	@ 0x28
 801dae6:	c403      	stmia	r4!, {r0, r1}
 801dae8:	6818      	ldr	r0, [r3, #0]
 801daea:	6859      	ldr	r1, [r3, #4]
 801daec:	ac0c      	add	r4, sp, #48	@ 0x30
 801daee:	c403      	stmia	r4!, {r0, r1}
 801daf0:	a80a      	add	r0, sp, #40	@ 0x28
 801daf2:	f7f9 fa47 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801daf6:	4631      	mov	r1, r6
 801daf8:	a80c      	add	r0, sp, #48	@ 0x30
 801dafa:	f7f9 fa6b 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dafe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801db02:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801db06:	bfd7      	itett	le
 801db08:	b293      	uxthle	r3, r2
 801db0a:	2301      	movgt	r3, #1
 801db0c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801db10:	fb91 f3f3 	sdivle	r3, r1, r3
 801db14:	9300      	str	r3, [sp, #0]
 801db16:	f105 0308 	add.w	r3, r5, #8
 801db1a:	9900      	ldr	r1, [sp, #0]
 801db1c:	9306      	str	r3, [sp, #24]
 801db1e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801db22:	440b      	add	r3, r1
 801db24:	3b01      	subs	r3, #1
 801db26:	fb93 f3f1 	sdiv	r3, r3, r1
 801db2a:	9906      	ldr	r1, [sp, #24]
 801db2c:	3b01      	subs	r3, #1
 801db2e:	b29b      	uxth	r3, r3
 801db30:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801db34:	9307      	str	r3, [sp, #28]
 801db36:	9900      	ldr	r1, [sp, #0]
 801db38:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801db3c:	fb93 f0f1 	sdiv	r0, r3, r1
 801db40:	b284      	uxth	r4, r0
 801db42:	9402      	str	r4, [sp, #8]
 801db44:	9d02      	ldr	r5, [sp, #8]
 801db46:	9c00      	ldr	r4, [sp, #0]
 801db48:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801db4c:	fb05 3414 	mls	r4, r5, r4, r3
 801db50:	fb14 f402 	smulbb	r4, r4, r2
 801db54:	440c      	add	r4, r1
 801db56:	b2a4      	uxth	r4, r4
 801db58:	2d00      	cmp	r5, #0
 801db5a:	d06c      	beq.n	801dc36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801db5c:	1e6a      	subs	r2, r5, #1
 801db5e:	9806      	ldr	r0, [sp, #24]
 801db60:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801db64:	9a07      	ldr	r2, [sp, #28]
 801db66:	ba36      	rev	r6, r6
 801db68:	4416      	add	r6, r2
 801db6a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801db6e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801db72:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801dea8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801db76:	4411      	add	r1, r2
 801db78:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801db7c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801db80:	4413      	add	r3, r2
 801db82:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801db86:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801db8a:	9301      	str	r3, [sp, #4]
 801db8c:	4bc4      	ldr	r3, [pc, #784]	@ (801dea0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801db8e:	6818      	ldr	r0, [r3, #0]
 801db90:	6803      	ldr	r3, [r0, #0]
 801db92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801db94:	4798      	blx	r3
 801db96:	4bc3      	ldr	r3, [pc, #780]	@ (801dea4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801db98:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801db9c:	881b      	ldrh	r3, [r3, #0]
 801db9e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801dba2:	fb03 2808 	mla	r8, r3, r8, r2
 801dba6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801dbaa:	436b      	muls	r3, r5
 801dbac:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801dbb0:	9309      	str	r3, [sp, #36]	@ 0x24
 801dbb2:	2500      	movs	r5, #0
 801dbb4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801dbb8:	fb94 f3f3 	sdiv	r3, r4, r3
 801dbbc:	9304      	str	r3, [sp, #16]
 801dbbe:	f10a 0304 	add.w	r3, sl, #4
 801dbc2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801dbc6:	4629      	mov	r1, r5
 801dbc8:	4618      	mov	r0, r3
 801dbca:	9308      	str	r3, [sp, #32]
 801dbcc:	f00d fae3 	bl	802b196 <memset>
 801dbd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dbd2:	4543      	cmp	r3, r8
 801dbd4:	f240 8236 	bls.w	801e044 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801dbd8:	2203      	movs	r2, #3
 801dbda:	2107      	movs	r1, #7
 801dbdc:	200b      	movs	r0, #11
 801dbde:	2c00      	cmp	r4, #0
 801dbe0:	f000 8131 	beq.w	801de46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801dbe4:	7833      	ldrb	r3, [r6, #0]
 801dbe6:	b2db      	uxtb	r3, r3
 801dbe8:	2bfe      	cmp	r3, #254	@ 0xfe
 801dbea:	d126      	bne.n	801dc3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801dbec:	f896 e001 	ldrb.w	lr, [r6, #1]
 801dbf0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801dbf4:	f896 b003 	ldrb.w	fp, [r6, #3]
 801dbf8:	fa5f fe8e 	uxtb.w	lr, lr
 801dbfc:	fa5f fc8c 	uxtb.w	ip, ip
 801dc00:	f36e 0507 	bfi	r5, lr, #0, #8
 801dc04:	f36c 250f 	bfi	r5, ip, #8, #8
 801dc08:	fa5f fb8b 	uxtb.w	fp, fp
 801dc0c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801dc10:	f36b 4517 	bfi	r5, fp, #16, #8
 801dc14:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801dc18:	0e2b      	lsrs	r3, r5, #24
 801dc1a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801dc1e:	fb10 c303 	smlabb	r3, r0, r3, ip
 801dc22:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801dc26:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801dc2a:	3c01      	subs	r4, #1
 801dc2c:	1d37      	adds	r7, r6, #4
 801dc2e:	b2a4      	uxth	r4, r4
 801dc30:	605d      	str	r5, [r3, #4]
 801dc32:	463e      	mov	r6, r7
 801dc34:	e7d3      	b.n	801dbde <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801dc36:	9e07      	ldr	r6, [sp, #28]
 801dc38:	e797      	b.n	801db6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801dc3a:	2bff      	cmp	r3, #255	@ 0xff
 801dc3c:	d127      	bne.n	801dc8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801dc3e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801dc42:	78b3      	ldrb	r3, [r6, #2]
 801dc44:	f896 e003 	ldrb.w	lr, [r6, #3]
 801dc48:	f896 b004 	ldrb.w	fp, [r6, #4]
 801dc4c:	fa5f fc8c 	uxtb.w	ip, ip
 801dc50:	b2db      	uxtb	r3, r3
 801dc52:	f36c 0507 	bfi	r5, ip, #0, #8
 801dc56:	f363 250f 	bfi	r5, r3, #8, #8
 801dc5a:	fa5f fe8e 	uxtb.w	lr, lr
 801dc5e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801dc62:	fb12 330e 	smlabb	r3, r2, lr, r3
 801dc66:	fa5f fb8b 	uxtb.w	fp, fp
 801dc6a:	f36e 4517 	bfi	r5, lr, #16, #8
 801dc6e:	fb11 330c 	smlabb	r3, r1, ip, r3
 801dc72:	f36b 651f 	bfi	r5, fp, #24, #8
 801dc76:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801dc7a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801dc7e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801dc82:	3c01      	subs	r4, #1
 801dc84:	1d77      	adds	r7, r6, #5
 801dc86:	b2a4      	uxth	r4, r4
 801dc88:	f8cb 5004 	str.w	r5, [fp, #4]
 801dc8c:	e7d1      	b.n	801dc32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801dc8e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801dc92:	f106 0701 	add.w	r7, r6, #1
 801dc96:	d107      	bne.n	801dca8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801dc98:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801dc9c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801dca0:	685d      	ldr	r5, [r3, #4]
 801dca2:	3c01      	subs	r4, #1
 801dca4:	b2a4      	uxth	r4, r4
 801dca6:	e7c4      	b.n	801dc32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801dca8:	f1bc 0f01 	cmp.w	ip, #1
 801dcac:	d12c      	bne.n	801dd08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801dcae:	f003 0e03 	and.w	lr, r3, #3
 801dcb2:	f1ae 0e02 	sub.w	lr, lr, #2
 801dcb6:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801dcba:	fa5f fe8e 	uxtb.w	lr, lr
 801dcbe:	f003 0c0c 	and.w	ip, r3, #12
 801dcc2:	f36e 0507 	bfi	r5, lr, #0, #8
 801dcc6:	f1ac 0c08 	sub.w	ip, ip, #8
 801dcca:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801dcce:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801dcd2:	f36c 250f 	bfi	r5, ip, #8, #8
 801dcd6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801dcda:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801dcde:	3b02      	subs	r3, #2
 801dce0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801dce4:	b2db      	uxtb	r3, r3
 801dce6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801dcea:	f363 4517 	bfi	r5, r3, #16, #8
 801dcee:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801dcf2:	0e2e      	lsrs	r6, r5, #24
 801dcf4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801dcf8:	fb10 c606 	smlabb	r6, r0, r6, ip
 801dcfc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801dd00:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801dd04:	6075      	str	r5, [r6, #4]
 801dd06:	e7cc      	b.n	801dca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801dd08:	f1bc 0f02 	cmp.w	ip, #2
 801dd0c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801dd10:	d12a      	bne.n	801dd68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801dd12:	1cb7      	adds	r7, r6, #2
 801dd14:	7876      	ldrb	r6, [r6, #1]
 801dd16:	b2f6      	uxtb	r6, r6
 801dd18:	f006 0c0f 	and.w	ip, r6, #15
 801dd1c:	3b20      	subs	r3, #32
 801dd1e:	f1ac 0c08 	sub.w	ip, ip, #8
 801dd22:	449c      	add	ip, r3
 801dd24:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801dd28:	fa5f fc8c 	uxtb.w	ip, ip
 801dd2c:	f36c 0507 	bfi	r5, ip, #0, #8
 801dd30:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801dd34:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801dd38:	fa5f fe8e 	uxtb.w	lr, lr
 801dd3c:	1136      	asrs	r6, r6, #4
 801dd3e:	f36e 250f 	bfi	r5, lr, #8, #8
 801dd42:	3e08      	subs	r6, #8
 801dd44:	4433      	add	r3, r6
 801dd46:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801dd4a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801dd4e:	b2db      	uxtb	r3, r3
 801dd50:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801dd54:	f363 4517 	bfi	r5, r3, #16, #8
 801dd58:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801dd5c:	0e2e      	lsrs	r6, r5, #24
 801dd5e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801dd62:	fb10 e606 	smlabb	r6, r0, r6, lr
 801dd66:	e7c9      	b.n	801dcfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801dd68:	1c5e      	adds	r6, r3, #1
 801dd6a:	42a6      	cmp	r6, r4
 801dd6c:	dd4e      	ble.n	801de0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801dd6e:	1b36      	subs	r6, r6, r4
 801dd70:	2e00      	cmp	r6, #0
 801dd72:	dc4e      	bgt.n	801de12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801dd74:	f8dd b004 	ldr.w	fp, [sp, #4]
 801dd78:	2400      	movs	r4, #0
 801dd7a:	f1bb 0f00 	cmp.w	fp, #0
 801dd7e:	f340 8122 	ble.w	801dfc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801dd82:	1c7b      	adds	r3, r7, #1
 801dd84:	9303      	str	r3, [sp, #12]
 801dd86:	783b      	ldrb	r3, [r7, #0]
 801dd88:	b2db      	uxtb	r3, r3
 801dd8a:	2bfe      	cmp	r3, #254	@ 0xfe
 801dd8c:	d160      	bne.n	801de50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801dd8e:	7879      	ldrb	r1, [r7, #1]
 801dd90:	78ba      	ldrb	r2, [r7, #2]
 801dd92:	78f8      	ldrb	r0, [r7, #3]
 801dd94:	b2c9      	uxtb	r1, r1
 801dd96:	f361 0507 	bfi	r5, r1, #0, #8
 801dd9a:	b2d2      	uxtb	r2, r2
 801dd9c:	1d3b      	adds	r3, r7, #4
 801dd9e:	f362 250f 	bfi	r5, r2, #8, #8
 801dda2:	b2c0      	uxtb	r0, r0
 801dda4:	9303      	str	r3, [sp, #12]
 801dda6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801ddaa:	2303      	movs	r3, #3
 801ddac:	fb13 2200 	smlabb	r2, r3, r0, r2
 801ddb0:	f360 4517 	bfi	r5, r0, #16, #8
 801ddb4:	2307      	movs	r3, #7
 801ddb6:	fb13 2101 	smlabb	r1, r3, r1, r2
 801ddba:	0e2e      	lsrs	r6, r5, #24
 801ddbc:	230b      	movs	r3, #11
 801ddbe:	fb13 1306 	smlabb	r3, r3, r6, r1
 801ddc2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801ddc6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801ddca:	605d      	str	r5, [r3, #4]
 801ddcc:	2601      	movs	r6, #1
 801ddce:	4637      	mov	r7, r6
 801ddd0:	0e2b      	lsrs	r3, r5, #24
 801ddd2:	ebab 0b07 	sub.w	fp, fp, r7
 801ddd6:	eba6 0607 	sub.w	r6, r6, r7
 801ddda:	f040 80d3 	bne.w	801df84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801ddde:	b18c      	cbz	r4, 801de04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801dde0:	4648      	mov	r0, r9
 801dde2:	00a1      	lsls	r1, r4, #2
 801dde4:	f7e3 fd50 	bl	8001888 <_ZN8touchgfx5paint9flushLineEPmi>
 801dde8:	9b05      	ldr	r3, [sp, #20]
 801ddea:	4622      	mov	r2, r4
 801ddec:	4649      	mov	r1, r9
 801ddee:	4640      	mov	r0, r8
 801ddf0:	f7e3 fd98 	bl	8001924 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801ddf4:	4b2c      	ldr	r3, [pc, #176]	@ (801dea8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801ddf6:	4a2d      	ldr	r2, [pc, #180]	@ (801deac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801ddf8:	4599      	cmp	r9, r3
 801ddfa:	bf08      	it	eq
 801ddfc:	4613      	moveq	r3, r2
 801ddfe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801de02:	4699      	mov	r9, r3
 801de04:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801de08:	2400      	movs	r4, #0
 801de0a:	e0da      	b.n	801dfc2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801de0c:	1ba6      	subs	r6, r4, r6
 801de0e:	b2b4      	uxth	r4, r6
 801de10:	e70f      	b.n	801dc32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801de12:	9b01      	ldr	r3, [sp, #4]
 801de14:	9a01      	ldr	r2, [sp, #4]
 801de16:	42b3      	cmp	r3, r6
 801de18:	bfa8      	it	ge
 801de1a:	4633      	movge	r3, r6
 801de1c:	0e2c      	lsrs	r4, r5, #24
 801de1e:	eba2 0b03 	sub.w	fp, r2, r3
 801de22:	eba6 0603 	sub.w	r6, r6, r3
 801de26:	d00b      	beq.n	801de40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801de28:	f1a9 0104 	sub.w	r1, r9, #4
 801de2c:	461a      	mov	r2, r3
 801de2e:	2a00      	cmp	r2, #0
 801de30:	dc02      	bgt.n	801de38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801de32:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801de36:	e7a0      	b.n	801dd7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801de38:	f841 5f04 	str.w	r5, [r1, #4]!
 801de3c:	3a01      	subs	r2, #1
 801de3e:	e7f6      	b.n	801de2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801de40:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801de44:	e799      	b.n	801dd7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801de46:	4637      	mov	r7, r6
 801de48:	f8dd b004 	ldr.w	fp, [sp, #4]
 801de4c:	4626      	mov	r6, r4
 801de4e:	e794      	b.n	801dd7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801de50:	2bff      	cmp	r3, #255	@ 0xff
 801de52:	d11d      	bne.n	801de90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801de54:	7878      	ldrb	r0, [r7, #1]
 801de56:	78ba      	ldrb	r2, [r7, #2]
 801de58:	78fe      	ldrb	r6, [r7, #3]
 801de5a:	1d7b      	adds	r3, r7, #5
 801de5c:	b2c0      	uxtb	r0, r0
 801de5e:	9303      	str	r3, [sp, #12]
 801de60:	793b      	ldrb	r3, [r7, #4]
 801de62:	f360 0507 	bfi	r5, r0, #0, #8
 801de66:	b2d2      	uxtb	r2, r2
 801de68:	b2d9      	uxtb	r1, r3
 801de6a:	f362 250f 	bfi	r5, r2, #8, #8
 801de6e:	b2f6      	uxtb	r6, r6
 801de70:	2303      	movs	r3, #3
 801de72:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801de76:	fb13 2206 	smlabb	r2, r3, r6, r2
 801de7a:	2307      	movs	r3, #7
 801de7c:	fb13 2000 	smlabb	r0, r3, r0, r2
 801de80:	f366 4517 	bfi	r5, r6, #16, #8
 801de84:	230b      	movs	r3, #11
 801de86:	f361 651f 	bfi	r5, r1, #24, #8
 801de8a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801de8e:	e798      	b.n	801ddc2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801de90:	119e      	asrs	r6, r3, #6
 801de92:	d10d      	bne.n	801deb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801de94:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801de98:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801de9c:	685d      	ldr	r5, [r3, #4]
 801de9e:	e795      	b.n	801ddcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801dea0:	20013f60 	.word	0x20013f60
 801dea4:	20013f5a 	.word	0x20013f5a
 801dea8:	20000180 	.word	0x20000180
 801deac:	20000280 	.word	0x20000280
 801deb0:	2e01      	cmp	r6, #1
 801deb2:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801deb6:	d12b      	bne.n	801df10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801deb8:	f003 0003 	and.w	r0, r3, #3
 801debc:	3802      	subs	r0, #2
 801debe:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801dec2:	b2c0      	uxtb	r0, r0
 801dec4:	f003 020c 	and.w	r2, r3, #12
 801dec8:	f360 0507 	bfi	r5, r0, #0, #8
 801decc:	3a08      	subs	r2, #8
 801dece:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801ded2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801ded6:	f362 250f 	bfi	r5, r2, #8, #8
 801deda:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801dede:	1e9f      	subs	r7, r3, #2
 801dee0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801dee4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801dee8:	b2db      	uxtb	r3, r3
 801deea:	2703      	movs	r7, #3
 801deec:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801def0:	fb17 2203 	smlabb	r2, r7, r3, r2
 801def4:	2707      	movs	r7, #7
 801def6:	f363 4517 	bfi	r5, r3, #16, #8
 801defa:	fb17 2000 	smlabb	r0, r7, r0, r2
 801defe:	230b      	movs	r3, #11
 801df00:	fb13 0101 	smlabb	r1, r3, r1, r0
 801df04:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801df08:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801df0c:	604d      	str	r5, [r1, #4]
 801df0e:	e75e      	b.n	801ddce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801df10:	2e02      	cmp	r6, #2
 801df12:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801df16:	d12f      	bne.n	801df78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801df18:	7878      	ldrb	r0, [r7, #1]
 801df1a:	1cba      	adds	r2, r7, #2
 801df1c:	b2c0      	uxtb	r0, r0
 801df1e:	9203      	str	r2, [sp, #12]
 801df20:	f000 020f 	and.w	r2, r0, #15
 801df24:	3b20      	subs	r3, #32
 801df26:	3a08      	subs	r2, #8
 801df28:	441a      	add	r2, r3
 801df2a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801df2e:	b2d2      	uxtb	r2, r2
 801df30:	f362 0507 	bfi	r5, r2, #0, #8
 801df34:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801df38:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801df3c:	b2f6      	uxtb	r6, r6
 801df3e:	1100      	asrs	r0, r0, #4
 801df40:	f366 250f 	bfi	r5, r6, #8, #8
 801df44:	3808      	subs	r0, #8
 801df46:	4403      	add	r3, r0
 801df48:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801df4c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801df50:	b2db      	uxtb	r3, r3
 801df52:	2003      	movs	r0, #3
 801df54:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801df58:	fb10 6603 	smlabb	r6, r0, r3, r6
 801df5c:	2007      	movs	r0, #7
 801df5e:	f363 4517 	bfi	r5, r3, #16, #8
 801df62:	fb10 6202 	smlabb	r2, r0, r2, r6
 801df66:	230b      	movs	r3, #11
 801df68:	fb13 2101 	smlabb	r1, r3, r1, r2
 801df6c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801df70:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801df74:	604d      	str	r5, [r1, #4]
 801df76:	e729      	b.n	801ddcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801df78:	1c5e      	adds	r6, r3, #1
 801df7a:	45b3      	cmp	fp, r6
 801df7c:	465f      	mov	r7, fp
 801df7e:	bfa8      	it	ge
 801df80:	4637      	movge	r7, r6
 801df82:	e725      	b.n	801ddd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801df84:	193b      	adds	r3, r7, r4
 801df86:	2b40      	cmp	r3, #64	@ 0x40
 801df88:	dd13      	ble.n	801dfb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801df8a:	4648      	mov	r0, r9
 801df8c:	00a1      	lsls	r1, r4, #2
 801df8e:	f7e3 fc7b 	bl	8001888 <_ZN8touchgfx5paint9flushLineEPmi>
 801df92:	4649      	mov	r1, r9
 801df94:	9b05      	ldr	r3, [sp, #20]
 801df96:	4622      	mov	r2, r4
 801df98:	4640      	mov	r0, r8
 801df9a:	f7e3 fcc3 	bl	8001924 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801df9e:	4b2d      	ldr	r3, [pc, #180]	@ (801e054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801dfa0:	4599      	cmp	r9, r3
 801dfa2:	bf0c      	ite	eq
 801dfa4:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801e060 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801dfa8:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801e054 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801dfac:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801dfb0:	2400      	movs	r4, #0
 801dfb2:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801dfb6:	463b      	mov	r3, r7
 801dfb8:	3b01      	subs	r3, #1
 801dfba:	f842 5b04 	str.w	r5, [r2], #4
 801dfbe:	d1fb      	bne.n	801dfb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801dfc0:	443c      	add	r4, r7
 801dfc2:	9f03      	ldr	r7, [sp, #12]
 801dfc4:	e6d9      	b.n	801dd7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801dfc6:	b15c      	cbz	r4, 801dfe0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801dfc8:	00a1      	lsls	r1, r4, #2
 801dfca:	4648      	mov	r0, r9
 801dfcc:	f7e3 fc5c 	bl	8001888 <_ZN8touchgfx5paint9flushLineEPmi>
 801dfd0:	4640      	mov	r0, r8
 801dfd2:	9b05      	ldr	r3, [sp, #20]
 801dfd4:	4622      	mov	r2, r4
 801dfd6:	4649      	mov	r1, r9
 801dfd8:	f7e3 fca4 	bl	8001924 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801dfdc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801dfe0:	4b1d      	ldr	r3, [pc, #116]	@ (801e058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801dfe2:	9a01      	ldr	r2, [sp, #4]
 801dfe4:	881b      	ldrh	r3, [r3, #0]
 801dfe6:	1a9b      	subs	r3, r3, r2
 801dfe8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801dfec:	9b04      	ldr	r3, [sp, #16]
 801dfee:	3301      	adds	r3, #1
 801dff0:	9304      	str	r3, [sp, #16]
 801dff2:	9a04      	ldr	r2, [sp, #16]
 801dff4:	9b00      	ldr	r3, [sp, #0]
 801dff6:	4293      	cmp	r3, r2
 801dff8:	d11d      	bne.n	801e036 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801dffa:	9b02      	ldr	r3, [sp, #8]
 801dffc:	9a02      	ldr	r2, [sp, #8]
 801dffe:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801e002:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801e006:	9808      	ldr	r0, [sp, #32]
 801e008:	f103 0b01 	add.w	fp, r3, #1
 801e00c:	9b06      	ldr	r3, [sp, #24]
 801e00e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801e012:	9b07      	ldr	r3, [sp, #28]
 801e014:	2500      	movs	r5, #0
 801e016:	ba3f      	rev	r7, r7
 801e018:	1ba4      	subs	r4, r4, r6
 801e01a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801e01e:	4629      	mov	r1, r5
 801e020:	441f      	add	r7, r3
 801e022:	b2a4      	uxth	r4, r4
 801e024:	f00d f8b7 	bl	802b196 <memset>
 801e028:	f8cd b008 	str.w	fp, [sp, #8]
 801e02c:	9504      	str	r5, [sp, #16]
 801e02e:	f7e3 fc21 	bl	8001874 <_ZN8touchgfx5paint8tearDownEv>
 801e032:	463e      	mov	r6, r7
 801e034:	e5cc      	b.n	801dbd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801e036:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801e03a:	9b01      	ldr	r3, [sp, #4]
 801e03c:	1ae4      	subs	r4, r4, r3
 801e03e:	1ba4      	subs	r4, r4, r6
 801e040:	b2a4      	uxth	r4, r4
 801e042:	e7f4      	b.n	801e02e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801e044:	4b05      	ldr	r3, [pc, #20]	@ (801e05c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801e046:	6818      	ldr	r0, [r3, #0]
 801e048:	6803      	ldr	r3, [r0, #0]
 801e04a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e04c:	4798      	blx	r3
 801e04e:	b00f      	add	sp, #60	@ 0x3c
 801e050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e054:	20000180 	.word	0x20000180
 801e058:	20013f5a 	.word	0x20013f5a
 801e05c:	20013f60 	.word	0x20013f60
 801e060:	20000280 	.word	0x20000280

0801e064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801e064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e068:	b08f      	sub	sp, #60	@ 0x3c
 801e06a:	461c      	mov	r4, r3
 801e06c:	9205      	str	r2, [sp, #20]
 801e06e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801e072:	9100      	str	r1, [sp, #0]
 801e074:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e076:	9201      	str	r2, [sp, #4]
 801e078:	2a00      	cmp	r2, #0
 801e07a:	f000 8115 	beq.w	801e2a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801e07e:	6820      	ldr	r0, [r4, #0]
 801e080:	6861      	ldr	r1, [r4, #4]
 801e082:	aa0a      	add	r2, sp, #40	@ 0x28
 801e084:	c203      	stmia	r2!, {r0, r1}
 801e086:	6818      	ldr	r0, [r3, #0]
 801e088:	6859      	ldr	r1, [r3, #4]
 801e08a:	aa0c      	add	r2, sp, #48	@ 0x30
 801e08c:	c203      	stmia	r2!, {r0, r1}
 801e08e:	a80a      	add	r0, sp, #40	@ 0x28
 801e090:	f7f8 ff78 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e094:	4621      	mov	r1, r4
 801e096:	a80c      	add	r0, sp, #48	@ 0x30
 801e098:	f7f8 ff9c 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e09c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801e0a0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801e0a4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801e0a8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801e0ac:	bfde      	ittt	le
 801e0ae:	b2b3      	uxthle	r3, r6
 801e0b0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801e0b4:	fb92 f3f3 	sdivle	r3, r2, r3
 801e0b8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801e0bc:	bfc8      	it	gt
 801e0be:	2301      	movgt	r3, #1
 801e0c0:	fb92 f1f3 	sdiv	r1, r2, r3
 801e0c4:	fa1f fc81 	uxth.w	ip, r1
 801e0c8:	fb0c 2413 	mls	r4, ip, r3, r2
 801e0cc:	fb14 f406 	smulbb	r4, r4, r6
 801e0d0:	441d      	add	r5, r3
 801e0d2:	4404      	add	r4, r0
 801e0d4:	4661      	mov	r1, ip
 801e0d6:	3d01      	subs	r5, #1
 801e0d8:	b2a4      	uxth	r4, r4
 801e0da:	fb95 f5f3 	sdiv	r5, r5, r3
 801e0de:	b131      	cbz	r1, 801e0ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801e0e0:	9b05      	ldr	r3, [sp, #20]
 801e0e2:	9900      	ldr	r1, [sp, #0]
 801e0e4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801e0e8:	ba1b      	rev	r3, r3
 801e0ea:	4419      	add	r1, r3
 801e0ec:	9100      	str	r1, [sp, #0]
 801e0ee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e0f2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801e0f6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801e0fa:	4418      	add	r0, r3
 801e0fc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e100:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801e104:	441a      	add	r2, r3
 801e106:	4b6a      	ldr	r3, [pc, #424]	@ (801e2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801e108:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801e10c:	6818      	ldr	r0, [r3, #0]
 801e10e:	6803      	ldr	r3, [r0, #0]
 801e110:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e112:	4798      	blx	r3
 801e114:	4967      	ldr	r1, [pc, #412]	@ (801e2b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801e116:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801e11a:	880b      	ldrh	r3, [r1, #0]
 801e11c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801e120:	9109      	str	r1, [sp, #36]	@ 0x24
 801e122:	fb03 c202 	mla	r2, r3, r2, ip
 801e126:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e12a:	4373      	muls	r3, r6
 801e12c:	b2ad      	uxth	r5, r5
 801e12e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e132:	00ad      	lsls	r5, r5, #2
 801e134:	9306      	str	r3, [sp, #24]
 801e136:	1d2b      	adds	r3, r5, #4
 801e138:	9307      	str	r3, [sp, #28]
 801e13a:	9b01      	ldr	r3, [sp, #4]
 801e13c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e140:	9103      	str	r1, [sp, #12]
 801e142:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801e146:	2c00      	cmp	r4, #0
 801e148:	bf0c      	ite	eq
 801e14a:	46c6      	moveq	lr, r8
 801e14c:	f04f 0e00 	movne.w	lr, #0
 801e150:	2300      	movs	r3, #0
 801e152:	b292      	uxth	r2, r2
 801e154:	fa1f fe8e 	uxth.w	lr, lr
 801e158:	9302      	str	r3, [sp, #8]
 801e15a:	9204      	str	r2, [sp, #16]
 801e15c:	9a06      	ldr	r2, [sp, #24]
 801e15e:	4282      	cmp	r2, r0
 801e160:	f240 809d 	bls.w	801e29e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801e164:	b963      	cbnz	r3, 801e180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801e166:	9b00      	ldr	r3, [sp, #0]
 801e168:	781a      	ldrb	r2, [r3, #0]
 801e16a:	0993      	lsrs	r3, r2, #6
 801e16c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801e170:	9202      	str	r2, [sp, #8]
 801e172:	1e5a      	subs	r2, r3, #1
 801e174:	2a02      	cmp	r2, #2
 801e176:	d815      	bhi.n	801e1a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801e178:	9a00      	ldr	r2, [sp, #0]
 801e17a:	3201      	adds	r2, #1
 801e17c:	9200      	str	r2, [sp, #0]
 801e17e:	b29b      	uxth	r3, r3
 801e180:	b1b4      	cbz	r4, 801e1b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801e182:	429c      	cmp	r4, r3
 801e184:	bf95      	itete	ls
 801e186:	1b1c      	subls	r4, r3, r4
 801e188:	1ae4      	subhi	r4, r4, r3
 801e18a:	fa1f fa84 	uxthls.w	sl, r4
 801e18e:	b2a4      	uxthhi	r4, r4
 801e190:	bf87      	ittee	hi
 801e192:	4671      	movhi	r1, lr
 801e194:	f04f 0a00 	movhi.w	sl, #0
 801e198:	fa1f f188 	uxthls.w	r1, r8
 801e19c:	2400      	movls	r4, #0
 801e19e:	4653      	mov	r3, sl
 801e1a0:	468e      	mov	lr, r1
 801e1a2:	e7db      	b.n	801e15c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801e1a4:	9a00      	ldr	r2, [sp, #0]
 801e1a6:	9b00      	ldr	r3, [sp, #0]
 801e1a8:	3202      	adds	r2, #2
 801e1aa:	785b      	ldrb	r3, [r3, #1]
 801e1ac:	9200      	str	r2, [sp, #0]
 801e1ae:	e7e7      	b.n	801e180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801e1b0:	2202      	movs	r2, #2
 801e1b2:	4615      	mov	r5, r2
 801e1b4:	9907      	ldr	r1, [sp, #28]
 801e1b6:	9a02      	ldr	r2, [sp, #8]
 801e1b8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801e1bc:	9905      	ldr	r1, [sp, #20]
 801e1be:	4573      	cmp	r3, lr
 801e1c0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801e1c4:	9a01      	ldr	r2, [sp, #4]
 801e1c6:	bf2b      	itete	cs
 801e1c8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801e1cc:	ebae 0103 	subcc.w	r1, lr, r3
 801e1d0:	46f1      	movcs	r9, lr
 801e1d2:	4699      	movcc	r9, r3
 801e1d4:	bf27      	ittee	cs
 801e1d6:	fa1f fa8a 	uxthcs.w	sl, sl
 801e1da:	4621      	movcs	r1, r4
 801e1dc:	b289      	uxthcc	r1, r1
 801e1de:	46a2      	movcc	sl, r4
 801e1e0:	2aff      	cmp	r2, #255	@ 0xff
 801e1e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e1e6:	d105      	bne.n	801e1f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801e1e8:	4481      	add	r9, r0
 801e1ea:	4581      	cmp	r9, r0
 801e1ec:	d045      	beq.n	801e27a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801e1ee:	f820 cb02 	strh.w	ip, [r0], #2
 801e1f2:	e7fa      	b.n	801e1ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801e1f4:	9d03      	ldr	r5, [sp, #12]
 801e1f6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801e1fa:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e1fe:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e202:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e206:	436a      	muls	r2, r5
 801e208:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801e20c:	fa5f fc8c 	uxtb.w	ip, ip
 801e210:	9208      	str	r2, [sp, #32]
 801e212:	fb0b fb05 	mul.w	fp, fp, r5
 801e216:	fb0c fc05 	mul.w	ip, ip, r5
 801e21a:	4481      	add	r9, r0
 801e21c:	4581      	cmp	r9, r0
 801e21e:	d02c      	beq.n	801e27a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801e220:	8802      	ldrh	r2, [r0, #0]
 801e222:	9d04      	ldr	r5, [sp, #16]
 801e224:	9f04      	ldr	r7, [sp, #16]
 801e226:	1216      	asrs	r6, r2, #8
 801e228:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e22c:	fb16 f605 	smulbb	r6, r6, r5
 801e230:	9d08      	ldr	r5, [sp, #32]
 801e232:	442e      	add	r6, r5
 801e234:	10d5      	asrs	r5, r2, #3
 801e236:	00d2      	lsls	r2, r2, #3
 801e238:	b2d2      	uxtb	r2, r2
 801e23a:	fb12 f207 	smulbb	r2, r2, r7
 801e23e:	b2b6      	uxth	r6, r6
 801e240:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e244:	4462      	add	r2, ip
 801e246:	fb15 f507 	smulbb	r5, r5, r7
 801e24a:	b292      	uxth	r2, r2
 801e24c:	1c77      	adds	r7, r6, #1
 801e24e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801e252:	1c57      	adds	r7, r2, #1
 801e254:	445d      	add	r5, fp
 801e256:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801e25a:	b2ad      	uxth	r5, r5
 801e25c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e260:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801e264:	4316      	orrs	r6, r2
 801e266:	1c6a      	adds	r2, r5, #1
 801e268:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801e26c:	096d      	lsrs	r5, r5, #5
 801e26e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e272:	432e      	orrs	r6, r5
 801e274:	f820 6b02 	strh.w	r6, [r0], #2
 801e278:	e7d0      	b.n	801e21c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801e27a:	4573      	cmp	r3, lr
 801e27c:	d38f      	bcc.n	801e19e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801e27e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801e282:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e284:	fa1f f188 	uxth.w	r1, r8
 801e288:	1a64      	subs	r4, r4, r1
 801e28a:	881b      	ldrh	r3, [r3, #0]
 801e28c:	b2a4      	uxth	r4, r4
 801e28e:	2c00      	cmp	r4, #0
 801e290:	eba3 0308 	sub.w	r3, r3, r8
 801e294:	bf18      	it	ne
 801e296:	2100      	movne	r1, #0
 801e298:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e29c:	e77f      	b.n	801e19e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801e29e:	4b04      	ldr	r3, [pc, #16]	@ (801e2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801e2a0:	6818      	ldr	r0, [r3, #0]
 801e2a2:	6803      	ldr	r3, [r0, #0]
 801e2a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e2a6:	4798      	blx	r3
 801e2a8:	b00f      	add	sp, #60	@ 0x3c
 801e2aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e2ae:	bf00      	nop
 801e2b0:	20013f60 	.word	0x20013f60
 801e2b4:	20013f5a 	.word	0x20013f5a

0801e2b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801e2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2bc:	b09f      	sub	sp, #124	@ 0x7c
 801e2be:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801e2c2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801e2c6:	9209      	str	r2, [sp, #36]	@ 0x24
 801e2c8:	461d      	mov	r5, r3
 801e2ca:	4604      	mov	r4, r0
 801e2cc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e2ce:	2a00      	cmp	r2, #0
 801e2d0:	f000 81eb 	beq.w	801e6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e2d4:	6828      	ldr	r0, [r5, #0]
 801e2d6:	6869      	ldr	r1, [r5, #4]
 801e2d8:	aa1a      	add	r2, sp, #104	@ 0x68
 801e2da:	c203      	stmia	r2!, {r0, r1}
 801e2dc:	6818      	ldr	r0, [r3, #0]
 801e2de:	6859      	ldr	r1, [r3, #4]
 801e2e0:	aa1c      	add	r2, sp, #112	@ 0x70
 801e2e2:	c203      	stmia	r2!, {r0, r1}
 801e2e4:	a81a      	add	r0, sp, #104	@ 0x68
 801e2e6:	f7f8 fe4d 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2ea:	4629      	mov	r1, r5
 801e2ec:	a81c      	add	r0, sp, #112	@ 0x70
 801e2ee:	f7f8 fe71 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2f2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801e2f6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801e2fa:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801e2fe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801e302:	bfd7      	itett	le
 801e304:	b29a      	uxthle	r2, r3
 801e306:	2201      	movgt	r2, #1
 801e308:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801e30c:	fb91 f2f2 	sdivle	r2, r1, r2
 801e310:	9202      	str	r2, [sp, #8]
 801e312:	9802      	ldr	r0, [sp, #8]
 801e314:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801e318:	fb92 f0f0 	sdiv	r0, r2, r0
 801e31c:	b280      	uxth	r0, r0
 801e31e:	9010      	str	r0, [sp, #64]	@ 0x40
 801e320:	9902      	ldr	r1, [sp, #8]
 801e322:	9802      	ldr	r0, [sp, #8]
 801e324:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e326:	4488      	add	r8, r1
 801e328:	fb05 2510 	mls	r5, r5, r0, r2
 801e32c:	fb15 f503 	smulbb	r5, r5, r3
 801e330:	f108 38ff 	add.w	r8, r8, #4294967295
 801e334:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e338:	fb98 f8f1 	sdiv	r8, r8, r1
 801e33c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801e340:	440d      	add	r5, r1
 801e342:	4419      	add	r1, r3
 801e344:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801e348:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801e34c:	441a      	add	r2, r3
 801e34e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801e352:	9304      	str	r3, [sp, #16]
 801e354:	4b95      	ldr	r3, [pc, #596]	@ (801e5ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e356:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801e35a:	6818      	ldr	r0, [r3, #0]
 801e35c:	6803      	ldr	r3, [r0, #0]
 801e35e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e360:	4798      	blx	r3
 801e362:	4b93      	ldr	r3, [pc, #588]	@ (801e5b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e364:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801e368:	881a      	ldrh	r2, [r3, #0]
 801e36a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801e36e:	9318      	str	r3, [sp, #96]	@ 0x60
 801e370:	fb02 7101 	mla	r1, r2, r1, r7
 801e374:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e378:	4356      	muls	r6, r2
 801e37a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801e37e:	f108 0801 	add.w	r8, r8, #1
 801e382:	920a      	str	r2, [sp, #40]	@ 0x28
 801e384:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e386:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801e38a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e38c:	fa1f f888 	uxth.w	r8, r8
 801e390:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801e394:	f108 0204 	add.w	r2, r8, #4
 801e398:	9211      	str	r2, [sp, #68]	@ 0x44
 801e39a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e39c:	4b85      	ldr	r3, [pc, #532]	@ (801e5b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e39e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801e3a2:	b2ad      	uxth	r5, r5
 801e3a4:	9215      	str	r2, [sp, #84]	@ 0x54
 801e3a6:	2d00      	cmp	r5, #0
 801e3a8:	9a04      	ldr	r2, [sp, #16]
 801e3aa:	f04f 0100 	mov.w	r1, #0
 801e3ae:	bf18      	it	ne
 801e3b0:	2200      	movne	r2, #0
 801e3b2:	1b1b      	subs	r3, r3, r4
 801e3b4:	b292      	uxth	r2, r2
 801e3b6:	910d      	str	r1, [sp, #52]	@ 0x34
 801e3b8:	9319      	str	r3, [sp, #100]	@ 0x64
 801e3ba:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801e3bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e3be:	fa11 f383 	uxtah	r3, r1, r3
 801e3c2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801e3c4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801e3c8:	3304      	adds	r3, #4
 801e3ca:	9306      	str	r3, [sp, #24]
 801e3cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e3ce:	4283      	cmp	r3, r0
 801e3d0:	f240 8166 	bls.w	801e6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801e3d4:	9902      	ldr	r1, [sp, #8]
 801e3d6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801e3da:	fbb5 f3f3 	udiv	r3, r5, r3
 801e3de:	1acb      	subs	r3, r1, r3
 801e3e0:	b29b      	uxth	r3, r3
 801e3e2:	9316      	str	r3, [sp, #88]	@ 0x58
 801e3e4:	9b06      	ldr	r3, [sp, #24]
 801e3e6:	9e06      	ldr	r6, [sp, #24]
 801e3e8:	7859      	ldrb	r1, [r3, #1]
 801e3ea:	789b      	ldrb	r3, [r3, #2]
 801e3ec:	7836      	ldrb	r6, [r6, #0]
 801e3ee:	9612      	str	r6, [sp, #72]	@ 0x48
 801e3f0:	021b      	lsls	r3, r3, #8
 801e3f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801e3f6:	9906      	ldr	r1, [sp, #24]
 801e3f8:	78c9      	ldrb	r1, [r1, #3]
 801e3fa:	430b      	orrs	r3, r1
 801e3fc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801e3fe:	3601      	adds	r6, #1
 801e400:	4419      	add	r1, r3
 801e402:	9605      	str	r6, [sp, #20]
 801e404:	1c4e      	adds	r6, r1, #1
 801e406:	9603      	str	r6, [sp, #12]
 801e408:	7849      	ldrb	r1, [r1, #1]
 801e40a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801e40c:	0209      	lsls	r1, r1, #8
 801e40e:	5cf3      	ldrb	r3, [r6, r3]
 801e410:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801e414:	4319      	orrs	r1, r3
 801e416:	b28b      	uxth	r3, r1
 801e418:	930c      	str	r3, [sp, #48]	@ 0x30
 801e41a:	2300      	movs	r3, #0
 801e41c:	f04f 0a01 	mov.w	sl, #1
 801e420:	9307      	str	r3, [sp, #28]
 801e422:	469c      	mov	ip, r3
 801e424:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801e428:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801e42c:	46d3      	mov	fp, sl
 801e42e:	4657      	mov	r7, sl
 801e430:	930e      	str	r3, [sp, #56]	@ 0x38
 801e432:	2d00      	cmp	r5, #0
 801e434:	d07e      	beq.n	801e534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801e436:	42af      	cmp	r7, r5
 801e438:	d26e      	bcs.n	801e518 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801e43a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e43c:	9201      	str	r2, [sp, #4]
 801e43e:	1bed      	subs	r5, r5, r7
 801e440:	4283      	cmp	r3, r0
 801e442:	b2ad      	uxth	r5, r5
 801e444:	d802      	bhi.n	801e44c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801e446:	e073      	b.n	801e530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801e448:	2b00      	cmp	r3, #0
 801e44a:	d15f      	bne.n	801e50c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801e44c:	9b03      	ldr	r3, [sp, #12]
 801e44e:	785b      	ldrb	r3, [r3, #1]
 801e450:	f1cb 0207 	rsb	r2, fp, #7
 801e454:	4093      	lsls	r3, r2
 801e456:	005b      	lsls	r3, r3, #1
 801e458:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801e45c:	9b03      	ldr	r3, [sp, #12]
 801e45e:	781b      	ldrb	r3, [r3, #0]
 801e460:	fa43 f30b 	asr.w	r3, r3, fp
 801e464:	b2db      	uxtb	r3, r3
 801e466:	4313      	orrs	r3, r2
 801e468:	f10b 0201 	add.w	r2, fp, #1
 801e46c:	fa5f fb82 	uxtb.w	fp, r2
 801e470:	9a03      	ldr	r2, [sp, #12]
 801e472:	f1bb 0f08 	cmp.w	fp, #8
 801e476:	bf15      	itete	ne
 801e478:	3201      	addne	r2, #1
 801e47a:	3202      	addeq	r2, #2
 801e47c:	9203      	strne	r2, [sp, #12]
 801e47e:	9203      	streq	r2, [sp, #12]
 801e480:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e482:	b29f      	uxth	r7, r3
 801e484:	bf08      	it	eq
 801e486:	f04f 0b00 	moveq.w	fp, #0
 801e48a:	42ba      	cmp	r2, r7
 801e48c:	d309      	bcc.n	801e4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e48e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801e492:	2301      	movs	r3, #1
 801e494:	9a05      	ldr	r2, [sp, #20]
 801e496:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801e49a:	d30e      	bcc.n	801e4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801e49c:	469a      	mov	sl, r3
 801e49e:	2600      	movs	r6, #0
 801e4a0:	e035      	b.n	801e50e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801e4a2:	9b05      	ldr	r3, [sp, #20]
 801e4a4:	429f      	cmp	r7, r3
 801e4a6:	d318      	bcc.n	801e4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801e4a8:	eb04 030a 	add.w	r3, r4, sl
 801e4ac:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801e4b0:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801e4b4:	f10a 0301 	add.w	r3, sl, #1
 801e4b8:	b29b      	uxth	r3, r3
 801e4ba:	9a05      	ldr	r2, [sp, #20]
 801e4bc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801e4c0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e4c2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801e4c6:	7116      	strb	r6, [r2, #4]
 801e4c8:	f10a 0601 	add.w	r6, sl, #1
 801e4cc:	80d1      	strh	r1, [r2, #6]
 801e4ce:	7156      	strb	r6, [r2, #5]
 801e4d0:	9a05      	ldr	r2, [sp, #20]
 801e4d2:	3201      	adds	r2, #1
 801e4d4:	b292      	uxth	r2, r2
 801e4d6:	9205      	str	r2, [sp, #20]
 801e4d8:	e7e0      	b.n	801e49c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801e4da:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801e4de:	463a      	mov	r2, r7
 801e4e0:	795b      	ldrb	r3, [r3, #5]
 801e4e2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801e4e6:	4426      	add	r6, r4
 801e4e8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801e4ea:	eb01 0c06 	add.w	ip, r1, r6
 801e4ee:	f1bc 0f00 	cmp.w	ip, #0
 801e4f2:	dd07      	ble.n	801e504 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801e4f4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801e4f8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801e4fc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801e500:	88d2      	ldrh	r2, [r2, #6]
 801e502:	e7f1      	b.n	801e4e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801e504:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801e508:	b29b      	uxth	r3, r3
 801e50a:	e7c3      	b.n	801e494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801e50c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801e50e:	970c      	str	r7, [sp, #48]	@ 0x30
 801e510:	9a01      	ldr	r2, [sp, #4]
 801e512:	46b4      	mov	ip, r6
 801e514:	461f      	mov	r7, r3
 801e516:	e78c      	b.n	801e432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801e518:	1b7b      	subs	r3, r7, r5
 801e51a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e51e:	9201      	str	r2, [sp, #4]
 801e520:	eb0c 0605 	add.w	r6, ip, r5
 801e524:	b29b      	uxth	r3, r3
 801e526:	b2b6      	uxth	r6, r6
 801e528:	2500      	movs	r5, #0
 801e52a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e52c:	4282      	cmp	r2, r0
 801e52e:	d88b      	bhi.n	801e448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801e530:	9a01      	ldr	r2, [sp, #4]
 801e532:	e74b      	b.n	801e3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801e534:	4297      	cmp	r7, r2
 801e536:	d332      	bcc.n	801e59e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801e538:	1abb      	subs	r3, r7, r2
 801e53a:	b29b      	uxth	r3, r3
 801e53c:	9208      	str	r2, [sp, #32]
 801e53e:	9501      	str	r5, [sp, #4]
 801e540:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e542:	29ff      	cmp	r1, #255	@ 0xff
 801e544:	9908      	ldr	r1, [sp, #32]
 801e546:	eb0c 0601 	add.w	r6, ip, r1
 801e54a:	d135      	bne.n	801e5b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801e54c:	f1a0 0e02 	sub.w	lr, r0, #2
 801e550:	b2b6      	uxth	r6, r6
 801e552:	45b4      	cmp	ip, r6
 801e554:	f040 808c 	bne.w	801e670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801e558:	9908      	ldr	r1, [sp, #32]
 801e55a:	4297      	cmp	r7, r2
 801e55c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e560:	d3e2      	bcc.n	801e528 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801e562:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801e564:	9904      	ldr	r1, [sp, #16]
 801e566:	8812      	ldrh	r2, [r2, #0]
 801e568:	1a52      	subs	r2, r2, r1
 801e56a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e56e:	9a07      	ldr	r2, [sp, #28]
 801e570:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801e572:	3201      	adds	r2, #1
 801e574:	428a      	cmp	r2, r1
 801e576:	9207      	str	r2, [sp, #28]
 801e578:	f040 8087 	bne.w	801e68a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801e57c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801e580:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801e584:	9b04      	ldr	r3, [sp, #16]
 801e586:	1bed      	subs	r5, r5, r7
 801e588:	b2ad      	uxth	r5, r5
 801e58a:	2d00      	cmp	r5, #0
 801e58c:	bf08      	it	eq
 801e58e:	461a      	moveq	r2, r3
 801e590:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e592:	bf18      	it	ne
 801e594:	2200      	movne	r2, #0
 801e596:	3301      	adds	r3, #1
 801e598:	930d      	str	r3, [sp, #52]	@ 0x34
 801e59a:	b292      	uxth	r2, r2
 801e59c:	e70d      	b.n	801e3ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801e59e:	1bd1      	subs	r1, r2, r7
 801e5a0:	b28b      	uxth	r3, r1
 801e5a2:	9301      	str	r3, [sp, #4]
 801e5a4:	9708      	str	r7, [sp, #32]
 801e5a6:	462b      	mov	r3, r5
 801e5a8:	e7ca      	b.n	801e540 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801e5aa:	bf00      	nop
 801e5ac:	20013f60 	.word	0x20013f60
 801e5b0:	20013f5a 	.word	0x20013f5a
 801e5b4:	fffff7fb 	.word	0xfffff7fb
 801e5b8:	b2b6      	uxth	r6, r6
 801e5ba:	900b      	str	r0, [sp, #44]	@ 0x2c
 801e5bc:	45b4      	cmp	ip, r6
 801e5be:	d0cb      	beq.n	801e558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801e5c0:	f10c 0101 	add.w	r1, ip, #1
 801e5c4:	44a4      	add	ip, r4
 801e5c6:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e5c8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801e5cc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801e5ce:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801e5d2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801e5d4:	f8b1 c000 	ldrh.w	ip, [r1]
 801e5d8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e5da:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801e5de:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801e5e2:	fb1e fe01 	smulbb	lr, lr, r1
 801e5e6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801e5ea:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801e5ec:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801e5f0:	fb08 e801 	mla	r8, r8, r1, lr
 801e5f4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801e5f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e5fa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801e5fe:	fb19 f901 	smulbb	r9, r9, r1
 801e602:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801e606:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801e608:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e60c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801e610:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e614:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e616:	fa5f fc8c 	uxtb.w	ip, ip
 801e61a:	fb1c fc01 	smulbb	ip, ip, r1
 801e61e:	00ed      	lsls	r5, r5, #3
 801e620:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801e622:	b2ed      	uxtb	r5, r5
 801e624:	fb05 c501 	mla	r5, r5, r1, ip
 801e628:	fa1f f888 	uxth.w	r8, r8
 801e62c:	fa1f fe8e 	uxth.w	lr, lr
 801e630:	b2ad      	uxth	r5, r5
 801e632:	f108 0c01 	add.w	ip, r8, #1
 801e636:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801e63a:	f10e 0901 	add.w	r9, lr, #1
 801e63e:	f105 0c01 	add.w	ip, r5, #1
 801e642:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801e646:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801e64a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e64e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801e652:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e656:	ea4c 0808 	orr.w	r8, ip, r8
 801e65a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801e65c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801e660:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e664:	ea48 0809 	orr.w	r8, r8, r9
 801e668:	f821 8b02 	strh.w	r8, [r1], #2
 801e66c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e66e:	e7a5      	b.n	801e5bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801e670:	f10c 0801 	add.w	r8, ip, #1
 801e674:	44a4      	add	ip, r4
 801e676:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801e678:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801e67c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801e680:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801e684:	fa1f fc88 	uxth.w	ip, r8
 801e688:	e763      	b.n	801e552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801e68a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e68e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801e692:	1aad      	subs	r5, r5, r2
 801e694:	b2ad      	uxth	r5, r5
 801e696:	2d00      	cmp	r5, #0
 801e698:	bf18      	it	ne
 801e69a:	2200      	movne	r2, #0
 801e69c:	9201      	str	r2, [sp, #4]
 801e69e:	e744      	b.n	801e52a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801e6a0:	4b03      	ldr	r3, [pc, #12]	@ (801e6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801e6a2:	6818      	ldr	r0, [r3, #0]
 801e6a4:	6803      	ldr	r3, [r0, #0]
 801e6a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e6a8:	4798      	blx	r3
 801e6aa:	b01f      	add	sp, #124	@ 0x7c
 801e6ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6b0:	20013f60 	.word	0x20013f60

0801e6b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801e6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6b8:	b093      	sub	sp, #76	@ 0x4c
 801e6ba:	4616      	mov	r6, r2
 801e6bc:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801e6c0:	9003      	str	r0, [sp, #12]
 801e6c2:	460d      	mov	r5, r1
 801e6c4:	9201      	str	r2, [sp, #4]
 801e6c6:	2a00      	cmp	r2, #0
 801e6c8:	f000 8304 	beq.w	801ecd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801e6cc:	6830      	ldr	r0, [r6, #0]
 801e6ce:	6871      	ldr	r1, [r6, #4]
 801e6d0:	ac0e      	add	r4, sp, #56	@ 0x38
 801e6d2:	c403      	stmia	r4!, {r0, r1}
 801e6d4:	6818      	ldr	r0, [r3, #0]
 801e6d6:	6859      	ldr	r1, [r3, #4]
 801e6d8:	ac10      	add	r4, sp, #64	@ 0x40
 801e6da:	c403      	stmia	r4!, {r0, r1}
 801e6dc:	a80e      	add	r0, sp, #56	@ 0x38
 801e6de:	f7f8 fc51 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e6e2:	4631      	mov	r1, r6
 801e6e4:	a810      	add	r0, sp, #64	@ 0x40
 801e6e6:	f7f8 fc75 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e6ea:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801e6ee:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801e6f2:	bfd7      	itett	le
 801e6f4:	b293      	uxthle	r3, r2
 801e6f6:	2301      	movgt	r3, #1
 801e6f8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801e6fc:	fb91 f3f3 	sdivle	r3, r1, r3
 801e700:	9304      	str	r3, [sp, #16]
 801e702:	f105 0308 	add.w	r3, r5, #8
 801e706:	9904      	ldr	r1, [sp, #16]
 801e708:	9308      	str	r3, [sp, #32]
 801e70a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801e70e:	440b      	add	r3, r1
 801e710:	3b01      	subs	r3, #1
 801e712:	fb93 f3f1 	sdiv	r3, r3, r1
 801e716:	9908      	ldr	r1, [sp, #32]
 801e718:	3b01      	subs	r3, #1
 801e71a:	b29b      	uxth	r3, r3
 801e71c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801e720:	9309      	str	r3, [sp, #36]	@ 0x24
 801e722:	9904      	ldr	r1, [sp, #16]
 801e724:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801e728:	fb93 f0f1 	sdiv	r0, r3, r1
 801e72c:	b284      	uxth	r4, r0
 801e72e:	9405      	str	r4, [sp, #20]
 801e730:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801e734:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801e738:	fb05 3914 	mls	r9, r5, r4, r3
 801e73c:	fb19 f902 	smulbb	r9, r9, r2
 801e740:	4489      	add	r9, r1
 801e742:	fa1f f989 	uxth.w	r9, r9
 801e746:	2d00      	cmp	r5, #0
 801e748:	d05d      	beq.n	801e806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801e74a:	1e6a      	subs	r2, r5, #1
 801e74c:	9808      	ldr	r0, [sp, #32]
 801e74e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801e752:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e754:	fa9a fa8a 	rev.w	sl, sl
 801e758:	4492      	add	sl, r2
 801e75a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801e75e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801e762:	4411      	add	r1, r2
 801e764:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801e768:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801e76c:	4413      	add	r3, r2
 801e76e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801e772:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801e776:	9302      	str	r3, [sp, #8]
 801e778:	4bcb      	ldr	r3, [pc, #812]	@ (801eaa8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801e77a:	6818      	ldr	r0, [r3, #0]
 801e77c:	6803      	ldr	r3, [r0, #0]
 801e77e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e780:	4798      	blx	r3
 801e782:	4bca      	ldr	r3, [pc, #808]	@ (801eaac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801e784:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801e788:	881b      	ldrh	r3, [r3, #0]
 801e78a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801e78e:	fb03 2404 	mla	r4, r3, r4, r2
 801e792:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e796:	436b      	muls	r3, r5
 801e798:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e79c:	930d      	str	r3, [sp, #52]	@ 0x34
 801e79e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801e7a2:	fb99 f3f3 	sdiv	r3, r9, r3
 801e7a6:	9306      	str	r3, [sp, #24]
 801e7a8:	9b01      	ldr	r3, [sp, #4]
 801e7aa:	43db      	mvns	r3, r3
 801e7ac:	b2db      	uxtb	r3, r3
 801e7ae:	930a      	str	r3, [sp, #40]	@ 0x28
 801e7b0:	9b03      	ldr	r3, [sp, #12]
 801e7b2:	3304      	adds	r3, #4
 801e7b4:	4618      	mov	r0, r3
 801e7b6:	2280      	movs	r2, #128	@ 0x80
 801e7b8:	2100      	movs	r1, #0
 801e7ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e7bc:	f00c fceb 	bl	802b196 <memset>
 801e7c0:	4bbb      	ldr	r3, [pc, #748]	@ (801eab0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801e7c2:	9300      	str	r3, [sp, #0]
 801e7c4:	2300      	movs	r3, #0
 801e7c6:	f04f 0600 	mov.w	r6, #0
 801e7ca:	9307      	str	r3, [sp, #28]
 801e7cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e7ce:	42a3      	cmp	r3, r4
 801e7d0:	f240 827b 	bls.w	801ecca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801e7d4:	f04f 0e07 	mov.w	lr, #7
 801e7d8:	f1b9 0f00 	cmp.w	r9, #0
 801e7dc:	f000 8159 	beq.w	801ea92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801e7e0:	f89a 5000 	ldrb.w	r5, [sl]
 801e7e4:	b2ed      	uxtb	r5, r5
 801e7e6:	11aa      	asrs	r2, r5, #6
 801e7e8:	f10a 0701 	add.w	r7, sl, #1
 801e7ec:	d10e      	bne.n	801e80c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801e7ee:	9b03      	ldr	r3, [sp, #12]
 801e7f0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801e7f4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801e7f8:	88ae      	ldrh	r6, [r5, #4]
 801e7fa:	f109 39ff 	add.w	r9, r9, #4294967295
 801e7fe:	fa1f f989 	uxth.w	r9, r9
 801e802:	46ba      	mov	sl, r7
 801e804:	e7e8      	b.n	801e7d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801e806:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801e80a:	e7a6      	b.n	801e75a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801e80c:	2a01      	cmp	r2, #1
 801e80e:	d129      	bne.n	801e864 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801e810:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801e814:	f005 0203 	and.w	r2, r5, #3
 801e818:	3b02      	subs	r3, #2
 801e81a:	4413      	add	r3, r2
 801e81c:	f003 031f 	and.w	r3, r3, #31
 801e820:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801e824:	f363 0604 	bfi	r6, r3, #0, #5
 801e828:	3a02      	subs	r2, #2
 801e82a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801e82e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801e832:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801e836:	f362 164a 	bfi	r6, r2, #5, #6
 801e83a:	3d02      	subs	r5, #2
 801e83c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801e840:	f005 051f 	and.w	r5, r5, #31
 801e844:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801e848:	2103      	movs	r1, #3
 801e84a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801e84e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801e852:	9a03      	ldr	r2, [sp, #12]
 801e854:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e858:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e85c:	f365 26cf 	bfi	r6, r5, #11, #5
 801e860:	809e      	strh	r6, [r3, #4]
 801e862:	e7ca      	b.n	801e7fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801e864:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801e868:	2a02      	cmp	r2, #2
 801e86a:	b2ab      	uxth	r3, r5
 801e86c:	d136      	bne.n	801e8dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801e86e:	2101      	movs	r1, #1
 801e870:	fb12 1205 	smlabb	r2, r2, r5, r1
 801e874:	4492      	add	sl, r2
 801e876:	463a      	mov	r2, r7
 801e878:	4552      	cmp	r2, sl
 801e87a:	d01c      	beq.n	801e8b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801e87c:	4694      	mov	ip, r2
 801e87e:	f04f 0b03 	mov.w	fp, #3
 801e882:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801e886:	7852      	ldrb	r2, [r2, #1]
 801e888:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801e88c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801e890:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801e894:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801e898:	f001 021f 	and.w	r2, r1, #31
 801e89c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801e8a0:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801e8a4:	9a03      	ldr	r2, [sp, #12]
 801e8a6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801e8aa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801e8ae:	460e      	mov	r6, r1
 801e8b0:	8081      	strh	r1, [r0, #4]
 801e8b2:	4662      	mov	r2, ip
 801e8b4:	e7e0      	b.n	801e878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801e8b6:	4599      	cmp	r9, r3
 801e8b8:	d20b      	bcs.n	801e8d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801e8ba:	eba5 0509 	sub.w	r5, r5, r9
 801e8be:	2d00      	cmp	r5, #0
 801e8c0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801e8c4:	f300 8209 	bgt.w	801ecda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801e8c8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801e8cc:	2301      	movs	r3, #1
 801e8ce:	9307      	str	r3, [sp, #28]
 801e8d0:	e00c      	b.n	801e8ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801e8d2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e8d6:	eba9 0903 	sub.w	r9, r9, r3
 801e8da:	e790      	b.n	801e7fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801e8dc:	4599      	cmp	r9, r3
 801e8de:	d2fa      	bcs.n	801e8d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801e8e0:	eba5 0509 	sub.w	r5, r5, r9
 801e8e4:	2d00      	cmp	r5, #0
 801e8e6:	dc1d      	bgt.n	801e924 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801e8e8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801e8ec:	f04f 0b00 	mov.w	fp, #0
 801e8f0:	f1b8 0f00 	cmp.w	r8, #0
 801e8f4:	f340 81a1 	ble.w	801ec3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801e8f8:	783b      	ldrb	r3, [r7, #0]
 801e8fa:	b2db      	uxtb	r3, r3
 801e8fc:	119a      	asrs	r2, r3, #6
 801e8fe:	f107 0a01 	add.w	sl, r7, #1
 801e902:	f040 80d7 	bne.w	801eab4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801e906:	9a03      	ldr	r2, [sp, #12]
 801e908:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e90c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e910:	889e      	ldrh	r6, [r3, #4]
 801e912:	9b01      	ldr	r3, [sp, #4]
 801e914:	2bff      	cmp	r3, #255	@ 0xff
 801e916:	f040 81e9 	bne.w	801ecec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801e91a:	8026      	strh	r6, [r4, #0]
 801e91c:	f108 38ff 	add.w	r8, r8, #4294967295
 801e920:	3402      	adds	r4, #2
 801e922:	e0be      	b.n	801eaa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801e924:	9b02      	ldr	r3, [sp, #8]
 801e926:	9a02      	ldr	r2, [sp, #8]
 801e928:	42ab      	cmp	r3, r5
 801e92a:	bfa8      	it	ge
 801e92c:	462b      	movge	r3, r5
 801e92e:	eba2 0803 	sub.w	r8, r2, r3
 801e932:	9a07      	ldr	r2, [sp, #28]
 801e934:	1aed      	subs	r5, r5, r3
 801e936:	2a00      	cmp	r2, #0
 801e938:	d05a      	beq.n	801e9f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801e93a:	9a01      	ldr	r2, [sp, #4]
 801e93c:	2aff      	cmp	r2, #255	@ 0xff
 801e93e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e942:	d049      	beq.n	801e9d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801e944:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801e948:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801e94c:	42a3      	cmp	r3, r4
 801e94e:	f240 80a5 	bls.w	801ea9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801e952:	46bc      	mov	ip, r7
 801e954:	8820      	ldrh	r0, [r4, #0]
 801e956:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801e95a:	7879      	ldrb	r1, [r7, #1]
 801e95c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801e960:	b212      	sxth	r2, r2
 801e962:	b291      	uxth	r1, r2
 801e964:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801e968:	120f      	asrs	r7, r1, #8
 801e96a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801e96e:	fb1a fa09 	smulbb	sl, sl, r9
 801e972:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801e976:	fb07 a70e 	mla	r7, r7, lr, sl
 801e97a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801e97e:	00c0      	lsls	r0, r0, #3
 801e980:	10c9      	asrs	r1, r1, #3
 801e982:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801e986:	00d2      	lsls	r2, r2, #3
 801e988:	b2c0      	uxtb	r0, r0
 801e98a:	fb1a fa09 	smulbb	sl, sl, r9
 801e98e:	fb10 f009 	smulbb	r0, r0, r9
 801e992:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e996:	b2d2      	uxtb	r2, r2
 801e998:	b2bf      	uxth	r7, r7
 801e99a:	fb01 a10e 	mla	r1, r1, lr, sl
 801e99e:	fb02 020e 	mla	r2, r2, lr, r0
 801e9a2:	b289      	uxth	r1, r1
 801e9a4:	b292      	uxth	r2, r2
 801e9a6:	1c78      	adds	r0, r7, #1
 801e9a8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e9ac:	f101 0a01 	add.w	sl, r1, #1
 801e9b0:	1c50      	adds	r0, r2, #1
 801e9b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e9b6:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801e9ba:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801e9be:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e9c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e9c6:	4307      	orrs	r7, r0
 801e9c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801e9cc:	ea47 070a 	orr.w	r7, r7, sl
 801e9d0:	f824 7b02 	strh.w	r7, [r4], #2
 801e9d4:	4667      	mov	r7, ip
 801e9d6:	e7b9      	b.n	801e94c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801e9d8:	42a3      	cmp	r3, r4
 801e9da:	d95f      	bls.n	801ea9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801e9dc:	463a      	mov	r2, r7
 801e9de:	f812 1b02 	ldrb.w	r1, [r2], #2
 801e9e2:	7878      	ldrb	r0, [r7, #1]
 801e9e4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801e9e8:	f824 1b02 	strh.w	r1, [r4], #2
 801e9ec:	4617      	mov	r7, r2
 801e9ee:	e7f3      	b.n	801e9d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801e9f0:	9901      	ldr	r1, [sp, #4]
 801e9f2:	29ff      	cmp	r1, #255	@ 0xff
 801e9f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e9f8:	b2b2      	uxth	r2, r6
 801e9fa:	d044      	beq.n	801ea86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801e9fc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ea00:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801ea04:	ea4f 2922 	mov.w	r9, r2, asr #8
 801ea08:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801ea0c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801ea10:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ea14:	4608      	mov	r0, r1
 801ea16:	fb09 f901 	mul.w	r9, r9, r1
 801ea1a:	fb0e fe01 	mul.w	lr, lr, r1
 801ea1e:	00d1      	lsls	r1, r2, #3
 801ea20:	b2c9      	uxtb	r1, r1
 801ea22:	4341      	muls	r1, r0
 801ea24:	429c      	cmp	r4, r3
 801ea26:	f4bf af61 	bcs.w	801e8ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801ea2a:	8822      	ldrh	r2, [r4, #0]
 801ea2c:	1210      	asrs	r0, r2, #8
 801ea2e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801ea32:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ea36:	00d2      	lsls	r2, r2, #3
 801ea38:	fb00 900a 	mla	r0, r0, sl, r9
 801ea3c:	b2d2      	uxtb	r2, r2
 801ea3e:	b280      	uxth	r0, r0
 801ea40:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ea44:	fb02 120a 	mla	r2, r2, sl, r1
 801ea48:	b292      	uxth	r2, r2
 801ea4a:	f100 0b01 	add.w	fp, r0, #1
 801ea4e:	fb0c ec0a 	mla	ip, ip, sl, lr
 801ea52:	fa1f fc8c 	uxth.w	ip, ip
 801ea56:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ea5a:	1c50      	adds	r0, r2, #1
 801ea5c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ea60:	f10c 0201 	add.w	r2, ip, #1
 801ea64:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ea68:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801ea6c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ea70:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ea74:	ea40 0b0b 	orr.w	fp, r0, fp
 801ea78:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ea7c:	ea4b 0b0c 	orr.w	fp, fp, ip
 801ea80:	f824 bb02 	strh.w	fp, [r4], #2
 801ea84:	e7ce      	b.n	801ea24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801ea86:	429c      	cmp	r4, r3
 801ea88:	f4bf af30 	bcs.w	801e8ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801ea8c:	f824 2b02 	strh.w	r2, [r4], #2
 801ea90:	e7f9      	b.n	801ea86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801ea92:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801ea96:	4657      	mov	r7, sl
 801ea98:	464d      	mov	r5, r9
 801ea9a:	e727      	b.n	801e8ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801ea9c:	2300      	movs	r3, #0
 801ea9e:	e716      	b.n	801e8ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801eaa0:	44bb      	add	fp, r7
 801eaa2:	4657      	mov	r7, sl
 801eaa4:	e724      	b.n	801e8f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801eaa6:	bf00      	nop
 801eaa8:	20013f60 	.word	0x20013f60
 801eaac:	20013f5a 	.word	0x20013f5a
 801eab0:	20000180 	.word	0x20000180
 801eab4:	2a01      	cmp	r2, #1
 801eab6:	d12a      	bne.n	801eb0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801eab8:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801eabc:	f003 0203 	and.w	r2, r3, #3
 801eac0:	3902      	subs	r1, #2
 801eac2:	4411      	add	r1, r2
 801eac4:	f001 011f 	and.w	r1, r1, #31
 801eac8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801eacc:	f361 0604 	bfi	r6, r1, #0, #5
 801ead0:	3802      	subs	r0, #2
 801ead2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801ead6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801eada:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801eade:	f360 164a 	bfi	r6, r0, #5, #6
 801eae2:	3b02      	subs	r3, #2
 801eae4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801eae8:	f002 031f 	and.w	r3, r2, #31
 801eaec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801eaf0:	2203      	movs	r2, #3
 801eaf2:	f363 26cf 	bfi	r6, r3, #11, #5
 801eaf6:	fb12 0303 	smlabb	r3, r2, r3, r0
 801eafa:	2207      	movs	r2, #7
 801eafc:	fb12 3301 	smlabb	r3, r2, r1, r3
 801eb00:	9a03      	ldr	r2, [sp, #12]
 801eb02:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801eb06:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eb0a:	809e      	strh	r6, [r3, #4]
 801eb0c:	e701      	b.n	801e912 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801eb0e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801eb12:	45a8      	cmp	r8, r5
 801eb14:	4647      	mov	r7, r8
 801eb16:	bfa8      	it	ge
 801eb18:	462f      	movge	r7, r5
 801eb1a:	2a02      	cmp	r2, #2
 801eb1c:	d154      	bne.n	801ebc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801eb1e:	9b01      	ldr	r3, [sp, #4]
 801eb20:	2bff      	cmp	r3, #255	@ 0xff
 801eb22:	d01a      	beq.n	801eb5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801eb24:	eb0b 0307 	add.w	r3, fp, r7
 801eb28:	2b40      	cmp	r3, #64	@ 0x40
 801eb2a:	dd16      	ble.n	801eb5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801eb2c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801eb30:	4649      	mov	r1, r9
 801eb32:	9800      	ldr	r0, [sp, #0]
 801eb34:	f7e2 fea8 	bl	8001888 <_ZN8touchgfx5paint9flushLineEPmi>
 801eb38:	465a      	mov	r2, fp
 801eb3a:	9b01      	ldr	r3, [sp, #4]
 801eb3c:	9900      	ldr	r1, [sp, #0]
 801eb3e:	4620      	mov	r0, r4
 801eb40:	f7e2 fecc 	bl	80018dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801eb44:	9b00      	ldr	r3, [sp, #0]
 801eb46:	461a      	mov	r2, r3
 801eb48:	4b6c      	ldr	r3, [pc, #432]	@ (801ecfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801eb4a:	429a      	cmp	r2, r3
 801eb4c:	bf0c      	ite	eq
 801eb4e:	4b6c      	ldreq	r3, [pc, #432]	@ (801ed00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801eb50:	4b6a      	ldrne	r3, [pc, #424]	@ (801ecfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801eb52:	9300      	str	r3, [sp, #0]
 801eb54:	444c      	add	r4, r9
 801eb56:	f04f 0b00 	mov.w	fp, #0
 801eb5a:	4652      	mov	r2, sl
 801eb5c:	2100      	movs	r1, #0
 801eb5e:	42a9      	cmp	r1, r5
 801eb60:	da2c      	bge.n	801ebbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801eb62:	4694      	mov	ip, r2
 801eb64:	f04f 0903 	mov.w	r9, #3
 801eb68:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801eb6c:	7852      	ldrb	r2, [r2, #1]
 801eb6e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801eb72:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801eb76:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801eb7a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801eb7e:	f003 021f 	and.w	r2, r3, #31
 801eb82:	fb19 000e 	smlabb	r0, r9, lr, r0
 801eb86:	f04f 0e07 	mov.w	lr, #7
 801eb8a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801eb8e:	9a03      	ldr	r2, [sp, #12]
 801eb90:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801eb94:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801eb98:	42b9      	cmp	r1, r7
 801eb9a:	461e      	mov	r6, r3
 801eb9c:	8083      	strh	r3, [r0, #4]
 801eb9e:	da0a      	bge.n	801ebb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801eba0:	9a01      	ldr	r2, [sp, #4]
 801eba2:	2aff      	cmp	r2, #255	@ 0xff
 801eba4:	bf15      	itete	ne
 801eba6:	9a00      	ldrne	r2, [sp, #0]
 801eba8:	8023      	strheq	r3, [r4, #0]
 801ebaa:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801ebae:	3402      	addeq	r4, #2
 801ebb0:	bf18      	it	ne
 801ebb2:	f10b 0b01 	addne.w	fp, fp, #1
 801ebb6:	3101      	adds	r1, #1
 801ebb8:	4662      	mov	r2, ip
 801ebba:	e7d0      	b.n	801eb5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801ebbc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801ebc0:	eba8 0807 	sub.w	r8, r8, r7
 801ebc4:	1bed      	subs	r5, r5, r7
 801ebc6:	e76c      	b.n	801eaa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801ebc8:	9b01      	ldr	r3, [sp, #4]
 801ebca:	2bff      	cmp	r3, #255	@ 0xff
 801ebcc:	eba8 0807 	sub.w	r8, r8, r7
 801ebd0:	eba5 0507 	sub.w	r5, r5, r7
 801ebd4:	fa1f f986 	uxth.w	r9, r6
 801ebd8:	d027      	beq.n	801ec2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801ebda:	eb0b 0307 	add.w	r3, fp, r7
 801ebde:	2b40      	cmp	r3, #64	@ 0x40
 801ebe0:	dd18      	ble.n	801ec14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801ebe2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801ebe6:	4619      	mov	r1, r3
 801ebe8:	9800      	ldr	r0, [sp, #0]
 801ebea:	930c      	str	r3, [sp, #48]	@ 0x30
 801ebec:	f7e2 fe4c 	bl	8001888 <_ZN8touchgfx5paint9flushLineEPmi>
 801ebf0:	465a      	mov	r2, fp
 801ebf2:	9b01      	ldr	r3, [sp, #4]
 801ebf4:	9900      	ldr	r1, [sp, #0]
 801ebf6:	4620      	mov	r0, r4
 801ebf8:	f7e2 fe70 	bl	80018dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801ebfc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ebfe:	441c      	add	r4, r3
 801ec00:	9b00      	ldr	r3, [sp, #0]
 801ec02:	461a      	mov	r2, r3
 801ec04:	4b3d      	ldr	r3, [pc, #244]	@ (801ecfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801ec06:	429a      	cmp	r2, r3
 801ec08:	bf0c      	ite	eq
 801ec0a:	4b3d      	ldreq	r3, [pc, #244]	@ (801ed00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801ec0c:	4b3b      	ldrne	r3, [pc, #236]	@ (801ecfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801ec0e:	9300      	str	r3, [sp, #0]
 801ec10:	f04f 0b00 	mov.w	fp, #0
 801ec14:	9b00      	ldr	r3, [sp, #0]
 801ec16:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801ec1a:	463b      	mov	r3, r7
 801ec1c:	2b00      	cmp	r3, #0
 801ec1e:	f43f af3f 	beq.w	801eaa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801ec22:	f822 9b02 	strh.w	r9, [r2], #2
 801ec26:	3b01      	subs	r3, #1
 801ec28:	e7f8      	b.n	801ec1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801ec2a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801ec2e:	42a7      	cmp	r7, r4
 801ec30:	f67f af37 	bls.w	801eaa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801ec34:	f824 9b02 	strh.w	r9, [r4], #2
 801ec38:	e7f9      	b.n	801ec2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801ec3a:	f1bb 0f00 	cmp.w	fp, #0
 801ec3e:	d00c      	beq.n	801ec5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801ec40:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801ec44:	4641      	mov	r1, r8
 801ec46:	9800      	ldr	r0, [sp, #0]
 801ec48:	f7e2 fe1e 	bl	8001888 <_ZN8touchgfx5paint9flushLineEPmi>
 801ec4c:	4620      	mov	r0, r4
 801ec4e:	9b01      	ldr	r3, [sp, #4]
 801ec50:	9900      	ldr	r1, [sp, #0]
 801ec52:	465a      	mov	r2, fp
 801ec54:	f7e2 fe42 	bl	80018dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801ec58:	4444      	add	r4, r8
 801ec5a:	4b2a      	ldr	r3, [pc, #168]	@ (801ed04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801ec5c:	9a02      	ldr	r2, [sp, #8]
 801ec5e:	881b      	ldrh	r3, [r3, #0]
 801ec60:	1a9b      	subs	r3, r3, r2
 801ec62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec66:	9b06      	ldr	r3, [sp, #24]
 801ec68:	3301      	adds	r3, #1
 801ec6a:	9306      	str	r3, [sp, #24]
 801ec6c:	9a06      	ldr	r2, [sp, #24]
 801ec6e:	9b04      	ldr	r3, [sp, #16]
 801ec70:	4293      	cmp	r3, r2
 801ec72:	d120      	bne.n	801ecb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801ec74:	9b05      	ldr	r3, [sp, #20]
 801ec76:	9a05      	ldr	r2, [sp, #20]
 801ec78:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801ec7c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801ec80:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801ec82:	f103 0801 	add.w	r8, r3, #1
 801ec86:	9b08      	ldr	r3, [sp, #32]
 801ec88:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801ec8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ec8e:	ba3f      	rev	r7, r7
 801ec90:	2280      	movs	r2, #128	@ 0x80
 801ec92:	2100      	movs	r1, #0
 801ec94:	441f      	add	r7, r3
 801ec96:	eba9 0905 	sub.w	r9, r9, r5
 801ec9a:	f00c fa7c 	bl	802b196 <memset>
 801ec9e:	2300      	movs	r3, #0
 801eca0:	fa1f f989 	uxth.w	r9, r9
 801eca4:	f04f 0600 	mov.w	r6, #0
 801eca8:	f8cd 8014 	str.w	r8, [sp, #20]
 801ecac:	9306      	str	r3, [sp, #24]
 801ecae:	f7e2 fde1 	bl	8001874 <_ZN8touchgfx5paint8tearDownEv>
 801ecb2:	46ba      	mov	sl, r7
 801ecb4:	e58a      	b.n	801e7cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801ecb6:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801ecba:	9b02      	ldr	r3, [sp, #8]
 801ecbc:	eba9 0903 	sub.w	r9, r9, r3
 801ecc0:	eba9 0505 	sub.w	r5, r9, r5
 801ecc4:	fa1f f985 	uxth.w	r9, r5
 801ecc8:	e7f1      	b.n	801ecae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801ecca:	4b0f      	ldr	r3, [pc, #60]	@ (801ed08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801eccc:	6818      	ldr	r0, [r3, #0]
 801ecce:	6803      	ldr	r3, [r0, #0]
 801ecd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ecd2:	4798      	blx	r3
 801ecd4:	b013      	add	sp, #76	@ 0x4c
 801ecd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ecda:	9b02      	ldr	r3, [sp, #8]
 801ecdc:	9a02      	ldr	r2, [sp, #8]
 801ecde:	42ab      	cmp	r3, r5
 801ece0:	bfa8      	it	ge
 801ece2:	462b      	movge	r3, r5
 801ece4:	eba2 0803 	sub.w	r8, r2, r3
 801ece8:	1aed      	subs	r5, r5, r3
 801ecea:	e626      	b.n	801e93a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801ecec:	f108 38ff 	add.w	r8, r8, #4294967295
 801ecf0:	fa1f f986 	uxth.w	r9, r6
 801ecf4:	2500      	movs	r5, #0
 801ecf6:	2701      	movs	r7, #1
 801ecf8:	e76f      	b.n	801ebda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801ecfa:	bf00      	nop
 801ecfc:	20000180 	.word	0x20000180
 801ed00:	20000280 	.word	0x20000280
 801ed04:	20013f5a 	.word	0x20013f5a
 801ed08:	20013f60 	.word	0x20013f60

0801ed0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ed0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed10:	b08f      	sub	sp, #60	@ 0x3c
 801ed12:	461c      	mov	r4, r3
 801ed14:	9203      	str	r2, [sp, #12]
 801ed16:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ed1a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed1c:	9202      	str	r2, [sp, #8]
 801ed1e:	460f      	mov	r7, r1
 801ed20:	2a00      	cmp	r2, #0
 801ed22:	f000 8128 	beq.w	801ef76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801ed26:	6820      	ldr	r0, [r4, #0]
 801ed28:	6861      	ldr	r1, [r4, #4]
 801ed2a:	aa0a      	add	r2, sp, #40	@ 0x28
 801ed2c:	c203      	stmia	r2!, {r0, r1}
 801ed2e:	6818      	ldr	r0, [r3, #0]
 801ed30:	6859      	ldr	r1, [r3, #4]
 801ed32:	aa0c      	add	r2, sp, #48	@ 0x30
 801ed34:	c203      	stmia	r2!, {r0, r1}
 801ed36:	a80a      	add	r0, sp, #40	@ 0x28
 801ed38:	f7f8 f924 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed3c:	4621      	mov	r1, r4
 801ed3e:	a80c      	add	r0, sp, #48	@ 0x30
 801ed40:	f7f8 f948 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed44:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801ed48:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801ed4c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801ed50:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801ed54:	bfde      	ittt	le
 801ed56:	b2b3      	uxthle	r3, r6
 801ed58:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801ed5c:	fb92 f3f3 	sdivle	r3, r2, r3
 801ed60:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801ed64:	bfc8      	it	gt
 801ed66:	2301      	movgt	r3, #1
 801ed68:	fb92 f1f3 	sdiv	r1, r2, r3
 801ed6c:	fa1f fc81 	uxth.w	ip, r1
 801ed70:	fb0c 2413 	mls	r4, ip, r3, r2
 801ed74:	fb14 f406 	smulbb	r4, r4, r6
 801ed78:	441d      	add	r5, r3
 801ed7a:	4404      	add	r4, r0
 801ed7c:	4661      	mov	r1, ip
 801ed7e:	3d01      	subs	r5, #1
 801ed80:	b2a4      	uxth	r4, r4
 801ed82:	fb95 f5f3 	sdiv	r5, r5, r3
 801ed86:	b121      	cbz	r1, 801ed92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801ed88:	9b03      	ldr	r3, [sp, #12]
 801ed8a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ed8e:	ba1b      	rev	r3, r3
 801ed90:	441f      	add	r7, r3
 801ed92:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801ed96:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ed9a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801ed9e:	4418      	add	r0, r3
 801eda0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801eda4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801eda8:	441a      	add	r2, r3
 801edaa:	4b74      	ldr	r3, [pc, #464]	@ (801ef7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801edac:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801edb0:	6818      	ldr	r0, [r3, #0]
 801edb2:	6803      	ldr	r3, [r0, #0]
 801edb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801edb6:	4798      	blx	r3
 801edb8:	4a71      	ldr	r2, [pc, #452]	@ (801ef80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801edba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801edbe:	8813      	ldrh	r3, [r2, #0]
 801edc0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801edc4:	9209      	str	r2, [sp, #36]	@ 0x24
 801edc6:	fb03 c101 	mla	r1, r3, r1, ip
 801edca:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801edce:	4373      	muls	r3, r6
 801edd0:	b2ad      	uxth	r5, r5
 801edd2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801edd6:	00ad      	lsls	r5, r5, #2
 801edd8:	2c00      	cmp	r4, #0
 801edda:	9304      	str	r3, [sp, #16]
 801eddc:	f105 0304 	add.w	r3, r5, #4
 801ede0:	9305      	str	r3, [sp, #20]
 801ede2:	bf0c      	ite	eq
 801ede4:	46c8      	moveq	r8, r9
 801ede6:	f04f 0800 	movne.w	r8, #0
 801edea:	2300      	movs	r3, #0
 801edec:	fa1f f888 	uxth.w	r8, r8
 801edf0:	9301      	str	r3, [sp, #4]
 801edf2:	9a04      	ldr	r2, [sp, #16]
 801edf4:	4282      	cmp	r2, r0
 801edf6:	f240 80b9 	bls.w	801ef6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801edfa:	b95b      	cbnz	r3, 801ee14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801edfc:	783a      	ldrb	r2, [r7, #0]
 801edfe:	0993      	lsrs	r3, r2, #6
 801ee00:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801ee04:	9201      	str	r2, [sp, #4]
 801ee06:	1e5a      	subs	r2, r3, #1
 801ee08:	2a02      	cmp	r2, #2
 801ee0a:	bf8d      	iteet	hi
 801ee0c:	787b      	ldrbhi	r3, [r7, #1]
 801ee0e:	3701      	addls	r7, #1
 801ee10:	b29b      	uxthls	r3, r3
 801ee12:	3702      	addhi	r7, #2
 801ee14:	b184      	cbz	r4, 801ee38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801ee16:	429c      	cmp	r4, r3
 801ee18:	bf95      	itete	ls
 801ee1a:	1b1c      	subls	r4, r3, r4
 801ee1c:	1ae4      	subhi	r4, r4, r3
 801ee1e:	fa1f fa84 	uxthls.w	sl, r4
 801ee22:	b2a4      	uxthhi	r4, r4
 801ee24:	bf87      	ittee	hi
 801ee26:	46c4      	movhi	ip, r8
 801ee28:	f04f 0a00 	movhi.w	sl, #0
 801ee2c:	fa1f fc89 	uxthls.w	ip, r9
 801ee30:	2400      	movls	r4, #0
 801ee32:	4653      	mov	r3, sl
 801ee34:	46e0      	mov	r8, ip
 801ee36:	e7dc      	b.n	801edf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801ee38:	2204      	movs	r2, #4
 801ee3a:	4615      	mov	r5, r2
 801ee3c:	9905      	ldr	r1, [sp, #20]
 801ee3e:	9a01      	ldr	r2, [sp, #4]
 801ee40:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ee44:	9903      	ldr	r1, [sp, #12]
 801ee46:	588a      	ldr	r2, [r1, r2]
 801ee48:	4543      	cmp	r3, r8
 801ee4a:	bf27      	ittee	cs
 801ee4c:	eba3 0a08 	subcs.w	sl, r3, r8
 801ee50:	46c6      	movcs	lr, r8
 801ee52:	eba8 0c03 	subcc.w	ip, r8, r3
 801ee56:	469e      	movcc	lr, r3
 801ee58:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801ee5c:	bf27      	ittee	cs
 801ee5e:	fa1f fa8a 	uxthcs.w	sl, sl
 801ee62:	46a4      	movcs	ip, r4
 801ee64:	fa1f fc8c 	uxthcc.w	ip, ip
 801ee68:	46a2      	movcc	sl, r4
 801ee6a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801ee6e:	2900      	cmp	r1, #0
 801ee70:	d066      	beq.n	801ef40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801ee72:	29ff      	cmp	r1, #255	@ 0xff
 801ee74:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ee78:	d114      	bne.n	801eea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ee7a:	9d02      	ldr	r5, [sp, #8]
 801ee7c:	2dff      	cmp	r5, #255	@ 0xff
 801ee7e:	d111      	bne.n	801eea4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ee80:	0951      	lsrs	r1, r2, #5
 801ee82:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ee86:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ee8a:	f026 0607 	bic.w	r6, r6, #7
 801ee8e:	430e      	orrs	r6, r1
 801ee90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee94:	4316      	orrs	r6, r2
 801ee96:	b2b6      	uxth	r6, r6
 801ee98:	4486      	add	lr, r0
 801ee9a:	4586      	cmp	lr, r0
 801ee9c:	d051      	beq.n	801ef42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ee9e:	f820 6b02 	strh.w	r6, [r0], #2
 801eea2:	e7fa      	b.n	801ee9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801eea4:	9d02      	ldr	r5, [sp, #8]
 801eea6:	4369      	muls	r1, r5
 801eea8:	1c4d      	adds	r5, r1, #1
 801eeaa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801eeae:	122d      	asrs	r5, r5, #8
 801eeb0:	ea6f 0b05 	mvn.w	fp, r5
 801eeb4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801eeb8:	b2ad      	uxth	r5, r5
 801eeba:	b2f6      	uxtb	r6, r6
 801eebc:	b2d2      	uxtb	r2, r2
 801eebe:	fb11 f105 	smulbb	r1, r1, r5
 801eec2:	fb16 f605 	smulbb	r6, r6, r5
 801eec6:	fb12 f205 	smulbb	r2, r2, r5
 801eeca:	b289      	uxth	r1, r1
 801eecc:	b2b6      	uxth	r6, r6
 801eece:	b292      	uxth	r2, r2
 801eed0:	9106      	str	r1, [sp, #24]
 801eed2:	9607      	str	r6, [sp, #28]
 801eed4:	9208      	str	r2, [sp, #32]
 801eed6:	4486      	add	lr, r0
 801eed8:	fa5f fb8b 	uxtb.w	fp, fp
 801eedc:	4586      	cmp	lr, r0
 801eede:	d030      	beq.n	801ef42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801eee0:	8802      	ldrh	r2, [r0, #0]
 801eee2:	9906      	ldr	r1, [sp, #24]
 801eee4:	1216      	asrs	r6, r2, #8
 801eee6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801eeea:	10d5      	asrs	r5, r2, #3
 801eeec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801eef0:	fb06 160b 	mla	r6, r6, fp, r1
 801eef4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801eef8:	9907      	ldr	r1, [sp, #28]
 801eefa:	00d2      	lsls	r2, r2, #3
 801eefc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ef00:	fb05 150b 	mla	r5, r5, fp, r1
 801ef04:	b2d2      	uxtb	r2, r2
 801ef06:	9908      	ldr	r1, [sp, #32]
 801ef08:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ef0c:	b2b6      	uxth	r6, r6
 801ef0e:	fb02 120b 	mla	r2, r2, fp, r1
 801ef12:	b292      	uxth	r2, r2
 801ef14:	1c71      	adds	r1, r6, #1
 801ef16:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801ef1a:	1c51      	adds	r1, r2, #1
 801ef1c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ef20:	b2ad      	uxth	r5, r5
 801ef22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ef26:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ef2a:	4316      	orrs	r6, r2
 801ef2c:	1c6a      	adds	r2, r5, #1
 801ef2e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ef32:	096d      	lsrs	r5, r5, #5
 801ef34:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ef38:	432e      	orrs	r6, r5
 801ef3a:	f820 6b02 	strh.w	r6, [r0], #2
 801ef3e:	e7cd      	b.n	801eedc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ef40:	4470      	add	r0, lr
 801ef42:	4543      	cmp	r3, r8
 801ef44:	f4ff af75 	bcc.w	801ee32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ef48:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801ef4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ef4e:	fa1f fc89 	uxth.w	ip, r9
 801ef52:	eba4 040c 	sub.w	r4, r4, ip
 801ef56:	881b      	ldrh	r3, [r3, #0]
 801ef58:	b2a4      	uxth	r4, r4
 801ef5a:	2c00      	cmp	r4, #0
 801ef5c:	eba3 0309 	sub.w	r3, r3, r9
 801ef60:	bf18      	it	ne
 801ef62:	f04f 0c00 	movne.w	ip, #0
 801ef66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef6a:	e762      	b.n	801ee32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ef6c:	4b03      	ldr	r3, [pc, #12]	@ (801ef7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ef6e:	6818      	ldr	r0, [r3, #0]
 801ef70:	6803      	ldr	r3, [r0, #0]
 801ef72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ef74:	4798      	blx	r3
 801ef76:	b00f      	add	sp, #60	@ 0x3c
 801ef78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef7c:	20013f60 	.word	0x20013f60
 801ef80:	20013f5a 	.word	0x20013f5a

0801ef84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ef84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef88:	b093      	sub	sp, #76	@ 0x4c
 801ef8a:	461c      	mov	r4, r3
 801ef8c:	9205      	str	r2, [sp, #20]
 801ef8e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801ef92:	9101      	str	r1, [sp, #4]
 801ef94:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ef96:	9202      	str	r2, [sp, #8]
 801ef98:	2a00      	cmp	r2, #0
 801ef9a:	f000 812c 	beq.w	801f1f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ef9e:	6820      	ldr	r0, [r4, #0]
 801efa0:	6861      	ldr	r1, [r4, #4]
 801efa2:	aa0e      	add	r2, sp, #56	@ 0x38
 801efa4:	c203      	stmia	r2!, {r0, r1}
 801efa6:	6818      	ldr	r0, [r3, #0]
 801efa8:	6859      	ldr	r1, [r3, #4]
 801efaa:	aa10      	add	r2, sp, #64	@ 0x40
 801efac:	c203      	stmia	r2!, {r0, r1}
 801efae:	a80e      	add	r0, sp, #56	@ 0x38
 801efb0:	f7f7 ffe8 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801efb4:	4621      	mov	r1, r4
 801efb6:	a810      	add	r0, sp, #64	@ 0x40
 801efb8:	f7f8 f80c 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801efbc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801efc0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801efc4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801efc8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801efcc:	bfde      	ittt	le
 801efce:	b2b3      	uxthle	r3, r6
 801efd0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801efd4:	fb92 f3f3 	sdivle	r3, r2, r3
 801efd8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801efdc:	bfc8      	it	gt
 801efde:	2301      	movgt	r3, #1
 801efe0:	fb92 f1f3 	sdiv	r1, r2, r3
 801efe4:	fa1f fc81 	uxth.w	ip, r1
 801efe8:	fb0c 2413 	mls	r4, ip, r3, r2
 801efec:	fb14 f406 	smulbb	r4, r4, r6
 801eff0:	441d      	add	r5, r3
 801eff2:	4404      	add	r4, r0
 801eff4:	4661      	mov	r1, ip
 801eff6:	3d01      	subs	r5, #1
 801eff8:	b2a4      	uxth	r4, r4
 801effa:	fb95 f5f3 	sdiv	r5, r5, r3
 801effe:	b131      	cbz	r1, 801f00e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801f000:	9b05      	ldr	r3, [sp, #20]
 801f002:	9901      	ldr	r1, [sp, #4]
 801f004:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f008:	ba1b      	rev	r3, r3
 801f00a:	4419      	add	r1, r3
 801f00c:	9101      	str	r1, [sp, #4]
 801f00e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801f012:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801f016:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801f01a:	4418      	add	r0, r3
 801f01c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801f020:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801f024:	441a      	add	r2, r3
 801f026:	4b75      	ldr	r3, [pc, #468]	@ (801f1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f028:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801f02c:	6818      	ldr	r0, [r3, #0]
 801f02e:	6803      	ldr	r3, [r0, #0]
 801f030:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f032:	4798      	blx	r3
 801f034:	4972      	ldr	r1, [pc, #456]	@ (801f200 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801f036:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801f03a:	880b      	ldrh	r3, [r1, #0]
 801f03c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801f040:	910d      	str	r1, [sp, #52]	@ 0x34
 801f042:	fb03 c202 	mla	r2, r3, r2, ip
 801f046:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f04a:	4373      	muls	r3, r6
 801f04c:	b2ad      	uxth	r5, r5
 801f04e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f052:	00ad      	lsls	r5, r5, #2
 801f054:	9308      	str	r3, [sp, #32]
 801f056:	1d2b      	adds	r3, r5, #4
 801f058:	9309      	str	r3, [sp, #36]	@ 0x24
 801f05a:	9b02      	ldr	r3, [sp, #8]
 801f05c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f060:	9106      	str	r1, [sp, #24]
 801f062:	43da      	mvns	r2, r3
 801f064:	2c00      	cmp	r4, #0
 801f066:	bf0c      	ite	eq
 801f068:	46dc      	moveq	ip, fp
 801f06a:	f04f 0c00 	movne.w	ip, #0
 801f06e:	2300      	movs	r3, #0
 801f070:	b2d2      	uxtb	r2, r2
 801f072:	fa1f fc8c 	uxth.w	ip, ip
 801f076:	9303      	str	r3, [sp, #12]
 801f078:	9207      	str	r2, [sp, #28]
 801f07a:	9a08      	ldr	r2, [sp, #32]
 801f07c:	4282      	cmp	r2, r0
 801f07e:	f240 80b5 	bls.w	801f1ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f082:	b963      	cbnz	r3, 801f09e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801f084:	9b01      	ldr	r3, [sp, #4]
 801f086:	781a      	ldrb	r2, [r3, #0]
 801f088:	0993      	lsrs	r3, r2, #6
 801f08a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801f08e:	9203      	str	r2, [sp, #12]
 801f090:	1e5a      	subs	r2, r3, #1
 801f092:	2a02      	cmp	r2, #2
 801f094:	d815      	bhi.n	801f0c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801f096:	9a01      	ldr	r2, [sp, #4]
 801f098:	3201      	adds	r2, #1
 801f09a:	9201      	str	r2, [sp, #4]
 801f09c:	b29b      	uxth	r3, r3
 801f09e:	b1b4      	cbz	r4, 801f0ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801f0a0:	429c      	cmp	r4, r3
 801f0a2:	bf95      	itete	ls
 801f0a4:	1b1c      	subls	r4, r3, r4
 801f0a6:	1ae4      	subhi	r4, r4, r3
 801f0a8:	fa1f f884 	uxthls.w	r8, r4
 801f0ac:	b2a4      	uxthhi	r4, r4
 801f0ae:	bf87      	ittee	hi
 801f0b0:	4666      	movhi	r6, ip
 801f0b2:	f04f 0800 	movhi.w	r8, #0
 801f0b6:	fa1f f68b 	uxthls.w	r6, fp
 801f0ba:	2400      	movls	r4, #0
 801f0bc:	4643      	mov	r3, r8
 801f0be:	46b4      	mov	ip, r6
 801f0c0:	e7db      	b.n	801f07a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801f0c2:	9a01      	ldr	r2, [sp, #4]
 801f0c4:	9b01      	ldr	r3, [sp, #4]
 801f0c6:	3202      	adds	r2, #2
 801f0c8:	785b      	ldrb	r3, [r3, #1]
 801f0ca:	9201      	str	r2, [sp, #4]
 801f0cc:	e7e7      	b.n	801f09e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801f0ce:	2203      	movs	r2, #3
 801f0d0:	4615      	mov	r5, r2
 801f0d2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f0d4:	9a03      	ldr	r2, [sp, #12]
 801f0d6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f0da:	9905      	ldr	r1, [sp, #20]
 801f0dc:	4563      	cmp	r3, ip
 801f0de:	eb01 0502 	add.w	r5, r1, r2
 801f0e2:	9902      	ldr	r1, [sp, #8]
 801f0e4:	bf29      	itett	cs
 801f0e6:	eba3 080c 	subcs.w	r8, r3, ip
 801f0ea:	ebac 0603 	subcc.w	r6, ip, r3
 801f0ee:	fa1f f888 	uxthcs.w	r8, r8
 801f0f2:	46e1      	movcs	r9, ip
 801f0f4:	bf2f      	iteee	cs
 801f0f6:	4626      	movcs	r6, r4
 801f0f8:	b2b6      	uxthcc	r6, r6
 801f0fa:	4699      	movcc	r9, r3
 801f0fc:	46a0      	movcc	r8, r4
 801f0fe:	29ff      	cmp	r1, #255	@ 0xff
 801f100:	d04a      	beq.n	801f198 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801f102:	9f06      	ldr	r7, [sp, #24]
 801f104:	78a9      	ldrb	r1, [r5, #2]
 801f106:	9004      	str	r0, [sp, #16]
 801f108:	4379      	muls	r1, r7
 801f10a:	910a      	str	r1, [sp, #40]	@ 0x28
 801f10c:	7869      	ldrb	r1, [r5, #1]
 801f10e:	4379      	muls	r1, r7
 801f110:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f112:	9905      	ldr	r1, [sp, #20]
 801f114:	5c8a      	ldrb	r2, [r1, r2]
 801f116:	437a      	muls	r2, r7
 801f118:	920c      	str	r2, [sp, #48]	@ 0x30
 801f11a:	46ca      	mov	sl, r9
 801f11c:	f1ba 0f00 	cmp.w	sl, #0
 801f120:	d03d      	beq.n	801f19e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801f122:	9a04      	ldr	r2, [sp, #16]
 801f124:	9f07      	ldr	r7, [sp, #28]
 801f126:	8812      	ldrh	r2, [r2, #0]
 801f128:	1215      	asrs	r5, r2, #8
 801f12a:	46be      	mov	lr, r7
 801f12c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f130:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f132:	10d1      	asrs	r1, r2, #3
 801f134:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f138:	fb05 750e 	mla	r5, r5, lr, r7
 801f13c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f140:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801f142:	00d2      	lsls	r2, r2, #3
 801f144:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f148:	fb01 710e 	mla	r1, r1, lr, r7
 801f14c:	b2d2      	uxtb	r2, r2
 801f14e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801f150:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f154:	b2ad      	uxth	r5, r5
 801f156:	fb02 720e 	mla	r2, r2, lr, r7
 801f15a:	b292      	uxth	r2, r2
 801f15c:	f105 0e01 	add.w	lr, r5, #1
 801f160:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f164:	f102 0e01 	add.w	lr, r2, #1
 801f168:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801f16c:	b289      	uxth	r1, r1
 801f16e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f172:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f176:	4315      	orrs	r5, r2
 801f178:	1c4a      	adds	r2, r1, #1
 801f17a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f17e:	0949      	lsrs	r1, r1, #5
 801f180:	9a04      	ldr	r2, [sp, #16]
 801f182:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f186:	430d      	orrs	r5, r1
 801f188:	f822 5b02 	strh.w	r5, [r2], #2
 801f18c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f190:	9204      	str	r2, [sp, #16]
 801f192:	fa1f fa8a 	uxth.w	sl, sl
 801f196:	e7c1      	b.n	801f11c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801f198:	4649      	mov	r1, r9
 801f19a:	4686      	mov	lr, r0
 801f19c:	b999      	cbnz	r1, 801f1c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801f19e:	4563      	cmp	r3, ip
 801f1a0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801f1a4:	d38a      	bcc.n	801f0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801f1a6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801f1aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f1ac:	fa1f f68b 	uxth.w	r6, fp
 801f1b0:	1ba4      	subs	r4, r4, r6
 801f1b2:	881b      	ldrh	r3, [r3, #0]
 801f1b4:	b2a4      	uxth	r4, r4
 801f1b6:	2c00      	cmp	r4, #0
 801f1b8:	eba3 030b 	sub.w	r3, r3, fp
 801f1bc:	bf18      	it	ne
 801f1be:	2600      	movne	r6, #0
 801f1c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f1c4:	e77a      	b.n	801f0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801f1c6:	78aa      	ldrb	r2, [r5, #2]
 801f1c8:	4f0e      	ldr	r7, [pc, #56]	@ (801f204 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801f1ca:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801f1ce:	786a      	ldrb	r2, [r5, #1]
 801f1d0:	00d2      	lsls	r2, r2, #3
 801f1d2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f1d6:	ea4a 0202 	orr.w	r2, sl, r2
 801f1da:	f895 a000 	ldrb.w	sl, [r5]
 801f1de:	3901      	subs	r1, #1
 801f1e0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801f1e4:	f82e 2b02 	strh.w	r2, [lr], #2
 801f1e8:	b289      	uxth	r1, r1
 801f1ea:	e7d7      	b.n	801f19c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801f1ec:	4b03      	ldr	r3, [pc, #12]	@ (801f1fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f1ee:	6818      	ldr	r0, [r3, #0]
 801f1f0:	6803      	ldr	r3, [r0, #0]
 801f1f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f1f4:	4798      	blx	r3
 801f1f6:	b013      	add	sp, #76	@ 0x4c
 801f1f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f1fc:	20013f60 	.word	0x20013f60
 801f200:	20013f5a 	.word	0x20013f5a
 801f204:	fffff800 	.word	0xfffff800

0801f208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f20c:	b09d      	sub	sp, #116	@ 0x74
 801f20e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801f212:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801f216:	920e      	str	r2, [sp, #56]	@ 0x38
 801f218:	461c      	mov	r4, r3
 801f21a:	4683      	mov	fp, r0
 801f21c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f21e:	2a00      	cmp	r2, #0
 801f220:	f000 81e0 	beq.w	801f5e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801f224:	6820      	ldr	r0, [r4, #0]
 801f226:	6861      	ldr	r1, [r4, #4]
 801f228:	aa18      	add	r2, sp, #96	@ 0x60
 801f22a:	c203      	stmia	r2!, {r0, r1}
 801f22c:	6818      	ldr	r0, [r3, #0]
 801f22e:	6859      	ldr	r1, [r3, #4]
 801f230:	aa1a      	add	r2, sp, #104	@ 0x68
 801f232:	c203      	stmia	r2!, {r0, r1}
 801f234:	a818      	add	r0, sp, #96	@ 0x60
 801f236:	f7f7 fea5 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f23a:	4621      	mov	r1, r4
 801f23c:	a81a      	add	r0, sp, #104	@ 0x68
 801f23e:	f7f7 fec9 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f242:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801f246:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801f24a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801f24e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801f252:	bfd7      	itett	le
 801f254:	b29a      	uxthle	r2, r3
 801f256:	2201      	movgt	r2, #1
 801f258:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801f25c:	fb91 f2f2 	sdivle	r2, r1, r2
 801f260:	9202      	str	r2, [sp, #8]
 801f262:	9802      	ldr	r0, [sp, #8]
 801f264:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801f268:	fb92 f0f0 	sdiv	r0, r2, r0
 801f26c:	b280      	uxth	r0, r0
 801f26e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801f270:	9902      	ldr	r1, [sp, #8]
 801f272:	9802      	ldr	r0, [sp, #8]
 801f274:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f276:	440c      	add	r4, r1
 801f278:	fb05 2510 	mls	r5, r5, r0, r2
 801f27c:	fb15 f503 	smulbb	r5, r5, r3
 801f280:	3c01      	subs	r4, #1
 801f282:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801f286:	fb94 f4f1 	sdiv	r4, r4, r1
 801f28a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801f28e:	440d      	add	r5, r1
 801f290:	4419      	add	r1, r3
 801f292:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801f296:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801f29a:	441a      	add	r2, r3
 801f29c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801f2a0:	9306      	str	r3, [sp, #24]
 801f2a2:	4bb3      	ldr	r3, [pc, #716]	@ (801f570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801f2a4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801f2a8:	6818      	ldr	r0, [r3, #0]
 801f2aa:	6803      	ldr	r3, [r0, #0]
 801f2ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f2ae:	4798      	blx	r3
 801f2b0:	4bb0      	ldr	r3, [pc, #704]	@ (801f574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801f2b2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801f2b6:	881a      	ldrh	r2, [r3, #0]
 801f2b8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801f2bc:	9316      	str	r3, [sp, #88]	@ 0x58
 801f2be:	fb02 7101 	mla	r1, r2, r1, r7
 801f2c2:	3401      	adds	r4, #1
 801f2c4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801f2c8:	b2a4      	uxth	r4, r4
 801f2ca:	4356      	muls	r6, r2
 801f2cc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801f2d0:	00a4      	lsls	r4, r4, #2
 801f2d2:	920a      	str	r2, [sp, #40]	@ 0x28
 801f2d4:	1d22      	adds	r2, r4, #4
 801f2d6:	b2ad      	uxth	r5, r5
 801f2d8:	9213      	str	r2, [sp, #76]	@ 0x4c
 801f2da:	4ba7      	ldr	r3, [pc, #668]	@ (801f578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801f2dc:	9a06      	ldr	r2, [sp, #24]
 801f2de:	2d00      	cmp	r5, #0
 801f2e0:	bf0c      	ite	eq
 801f2e2:	4611      	moveq	r1, r2
 801f2e4:	2100      	movne	r1, #0
 801f2e6:	2200      	movs	r2, #0
 801f2e8:	eba3 030b 	sub.w	r3, r3, fp
 801f2ec:	b289      	uxth	r1, r1
 801f2ee:	920d      	str	r2, [sp, #52]	@ 0x34
 801f2f0:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f2f2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f2f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f2f6:	fa12 f383 	uxtah	r3, r2, r3
 801f2fa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f2fc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801f300:	3304      	adds	r3, #4
 801f302:	9308      	str	r3, [sp, #32]
 801f304:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f306:	4543      	cmp	r3, r8
 801f308:	f240 8167 	bls.w	801f5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f30c:	9a02      	ldr	r2, [sp, #8]
 801f30e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801f312:	fbb5 f3f3 	udiv	r3, r5, r3
 801f316:	1ad3      	subs	r3, r2, r3
 801f318:	b29b      	uxth	r3, r3
 801f31a:	9314      	str	r3, [sp, #80]	@ 0x50
 801f31c:	9b08      	ldr	r3, [sp, #32]
 801f31e:	9808      	ldr	r0, [sp, #32]
 801f320:	785a      	ldrb	r2, [r3, #1]
 801f322:	789b      	ldrb	r3, [r3, #2]
 801f324:	7800      	ldrb	r0, [r0, #0]
 801f326:	9010      	str	r0, [sp, #64]	@ 0x40
 801f328:	021b      	lsls	r3, r3, #8
 801f32a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801f32e:	9a08      	ldr	r2, [sp, #32]
 801f330:	78d2      	ldrb	r2, [r2, #3]
 801f332:	4313      	orrs	r3, r2
 801f334:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f336:	3001      	adds	r0, #1
 801f338:	441a      	add	r2, r3
 801f33a:	9007      	str	r0, [sp, #28]
 801f33c:	1c50      	adds	r0, r2, #1
 801f33e:	9005      	str	r0, [sp, #20]
 801f340:	7852      	ldrb	r2, [r2, #1]
 801f342:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f344:	0212      	lsls	r2, r2, #8
 801f346:	5cc3      	ldrb	r3, [r0, r3]
 801f348:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801f34c:	431a      	orrs	r2, r3
 801f34e:	b293      	uxth	r3, r2
 801f350:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f352:	2300      	movs	r3, #0
 801f354:	9309      	str	r3, [sp, #36]	@ 0x24
 801f356:	2301      	movs	r3, #1
 801f358:	9301      	str	r3, [sp, #4]
 801f35a:	9304      	str	r3, [sp, #16]
 801f35c:	2300      	movs	r3, #0
 801f35e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801f362:	9303      	str	r3, [sp, #12]
 801f364:	f04f 0e01 	mov.w	lr, #1
 801f368:	2d00      	cmp	r5, #0
 801f36a:	d07c      	beq.n	801f466 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801f36c:	45ae      	cmp	lr, r5
 801f36e:	d26b      	bcs.n	801f448 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801f370:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f372:	eba5 050e 	sub.w	r5, r5, lr
 801f376:	4543      	cmp	r3, r8
 801f378:	b2ad      	uxth	r5, r5
 801f37a:	460c      	mov	r4, r1
 801f37c:	d802      	bhi.n	801f384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801f37e:	e070      	b.n	801f462 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801f380:	2b00      	cmp	r3, #0
 801f382:	d15c      	bne.n	801f43e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f384:	9b05      	ldr	r3, [sp, #20]
 801f386:	9a04      	ldr	r2, [sp, #16]
 801f388:	785b      	ldrb	r3, [r3, #1]
 801f38a:	9904      	ldr	r1, [sp, #16]
 801f38c:	f1c2 0207 	rsb	r2, r2, #7
 801f390:	4093      	lsls	r3, r2
 801f392:	005b      	lsls	r3, r3, #1
 801f394:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801f398:	9b05      	ldr	r3, [sp, #20]
 801f39a:	781b      	ldrb	r3, [r3, #0]
 801f39c:	410b      	asrs	r3, r1
 801f39e:	3101      	adds	r1, #1
 801f3a0:	b2c9      	uxtb	r1, r1
 801f3a2:	2908      	cmp	r1, #8
 801f3a4:	9104      	str	r1, [sp, #16]
 801f3a6:	9905      	ldr	r1, [sp, #20]
 801f3a8:	bf0a      	itet	eq
 801f3aa:	3102      	addeq	r1, #2
 801f3ac:	3101      	addne	r1, #1
 801f3ae:	9105      	streq	r1, [sp, #20]
 801f3b0:	b2db      	uxtb	r3, r3
 801f3b2:	bf0a      	itet	eq
 801f3b4:	2100      	moveq	r1, #0
 801f3b6:	9105      	strne	r1, [sp, #20]
 801f3b8:	9104      	streq	r1, [sp, #16]
 801f3ba:	4313      	orrs	r3, r2
 801f3bc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801f3be:	b29a      	uxth	r2, r3
 801f3c0:	4291      	cmp	r1, r2
 801f3c2:	d30a      	bcc.n	801f3da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801f3c4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801f3c8:	2301      	movs	r3, #1
 801f3ca:	9907      	ldr	r1, [sp, #28]
 801f3cc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801f3d0:	d30f      	bcc.n	801f3f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f3d2:	2100      	movs	r1, #0
 801f3d4:	9301      	str	r3, [sp, #4]
 801f3d6:	9103      	str	r1, [sp, #12]
 801f3d8:	e032      	b.n	801f440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801f3da:	9b07      	ldr	r3, [sp, #28]
 801f3dc:	429a      	cmp	r2, r3
 801f3de:	d318      	bcc.n	801f412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801f3e0:	9b01      	ldr	r3, [sp, #4]
 801f3e2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801f3e6:	445b      	add	r3, fp
 801f3e8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801f3ec:	9b01      	ldr	r3, [sp, #4]
 801f3ee:	3301      	adds	r3, #1
 801f3f0:	b29b      	uxth	r3, r3
 801f3f2:	9907      	ldr	r1, [sp, #28]
 801f3f4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801f3f8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801f3fc:	7108      	strb	r0, [r1, #4]
 801f3fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801f400:	80c8      	strh	r0, [r1, #6]
 801f402:	9801      	ldr	r0, [sp, #4]
 801f404:	3001      	adds	r0, #1
 801f406:	7148      	strb	r0, [r1, #5]
 801f408:	9907      	ldr	r1, [sp, #28]
 801f40a:	3101      	adds	r1, #1
 801f40c:	b289      	uxth	r1, r1
 801f40e:	9107      	str	r1, [sp, #28]
 801f410:	e7df      	b.n	801f3d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801f412:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801f416:	4611      	mov	r1, r2
 801f418:	795b      	ldrb	r3, [r3, #5]
 801f41a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801f41e:	4458      	add	r0, fp
 801f420:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801f422:	4406      	add	r6, r0
 801f424:	2e00      	cmp	r6, #0
 801f426:	dd06      	ble.n	801f436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801f428:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801f42c:	790e      	ldrb	r6, [r1, #4]
 801f42e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801f432:	88c9      	ldrh	r1, [r1, #6]
 801f434:	e7f4      	b.n	801f420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801f436:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801f43a:	b29b      	uxth	r3, r3
 801f43c:	e7c5      	b.n	801f3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801f43e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f440:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f442:	4621      	mov	r1, r4
 801f444:	469e      	mov	lr, r3
 801f446:	e78f      	b.n	801f368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801f448:	9a03      	ldr	r2, [sp, #12]
 801f44a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801f44e:	442a      	add	r2, r5
 801f450:	ebae 0305 	sub.w	r3, lr, r5
 801f454:	b292      	uxth	r2, r2
 801f456:	b29b      	uxth	r3, r3
 801f458:	9203      	str	r2, [sp, #12]
 801f45a:	2500      	movs	r5, #0
 801f45c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f45e:	4542      	cmp	r2, r8
 801f460:	d88e      	bhi.n	801f380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801f462:	4621      	mov	r1, r4
 801f464:	e74e      	b.n	801f304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801f466:	458e      	cmp	lr, r1
 801f468:	bf29      	itett	cs
 801f46a:	ebae 0301 	subcs.w	r3, lr, r1
 801f46e:	eba1 040e 	subcc.w	r4, r1, lr
 801f472:	b29b      	uxthcs	r3, r3
 801f474:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801f476:	bf2f      	iteee	cs
 801f478:	462c      	movcs	r4, r5
 801f47a:	b2a4      	uxthcc	r4, r4
 801f47c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801f480:	462b      	movcc	r3, r5
 801f482:	f04f 0900 	mov.w	r9, #0
 801f486:	9a03      	ldr	r2, [sp, #12]
 801f488:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801f48a:	444a      	add	r2, r9
 801f48c:	4548      	cmp	r0, r9
 801f48e:	b292      	uxth	r2, r2
 801f490:	d074      	beq.n	801f57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801f492:	445a      	add	r2, fp
 801f494:	2004      	movs	r0, #4
 801f496:	4605      	mov	r5, r0
 801f498:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801f49c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f49e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801f4a2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801f4a4:	5880      	ldr	r0, [r0, r2]
 801f4a6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801f4aa:	d014      	beq.n	801f4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801f4ac:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801f4b0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801f4b4:	d112      	bne.n	801f4dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801f4b6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f4b8:	2aff      	cmp	r2, #255	@ 0xff
 801f4ba:	d10f      	bne.n	801f4dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801f4bc:	0942      	lsrs	r2, r0, #5
 801f4be:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801f4c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f4c6:	f025 0507 	bic.w	r5, r5, #7
 801f4ca:	4315      	orrs	r5, r2
 801f4cc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801f4d0:	4305      	orrs	r5, r0
 801f4d2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801f4d6:	f109 0901 	add.w	r9, r9, #1
 801f4da:	e7d4      	b.n	801f486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801f4dc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801f4e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801f4e4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801f4e8:	9215      	str	r2, [sp, #84]	@ 0x54
 801f4ea:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f4ec:	fb02 fa0a 	mul.w	sl, r2, sl
 801f4f0:	f10a 0201 	add.w	r2, sl, #1
 801f4f4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801f4f8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f4fc:	1212      	asrs	r2, r2, #8
 801f4fe:	fa1f fa82 	uxth.w	sl, r2
 801f502:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801f506:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801f50a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f50e:	43d2      	mvns	r2, r2
 801f510:	b2d2      	uxtb	r2, r2
 801f512:	fb16 f60a 	smulbb	r6, r6, sl
 801f516:	fa5f fc8c 	uxtb.w	ip, ip
 801f51a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801f51e:	b2c0      	uxtb	r0, r0
 801f520:	fb07 6702 	mla	r7, r7, r2, r6
 801f524:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801f528:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801f52a:	fb10 f00a 	smulbb	r0, r0, sl
 801f52e:	fb0c 0002 	mla	r0, ip, r2, r0
 801f532:	b2ed      	uxtb	r5, r5
 801f534:	b2bf      	uxth	r7, r7
 801f536:	fb15 f50a 	smulbb	r5, r5, sl
 801f53a:	b280      	uxth	r0, r0
 801f53c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f540:	fb06 5602 	mla	r6, r6, r2, r5
 801f544:	1c7a      	adds	r2, r7, #1
 801f546:	1c45      	adds	r5, r0, #1
 801f548:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f54c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801f550:	b2b6      	uxth	r6, r6
 801f552:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801f556:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801f55a:	432f      	orrs	r7, r5
 801f55c:	1c75      	adds	r5, r6, #1
 801f55e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801f562:	096d      	lsrs	r5, r5, #5
 801f564:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f568:	432f      	orrs	r7, r5
 801f56a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801f56e:	e7b2      	b.n	801f4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801f570:	20013f60 	.word	0x20013f60
 801f574:	20013f5a 	.word	0x20013f5a
 801f578:	fffff7fb 	.word	0xfffff7fb
 801f57c:	9203      	str	r2, [sp, #12]
 801f57e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f580:	458e      	cmp	lr, r1
 801f582:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801f586:	f4ff af68 	bcc.w	801f45a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801f58a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801f58c:	9906      	ldr	r1, [sp, #24]
 801f58e:	8812      	ldrh	r2, [r2, #0]
 801f590:	1a52      	subs	r2, r2, r1
 801f592:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801f596:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f598:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801f59a:	3201      	adds	r2, #1
 801f59c:	428a      	cmp	r2, r1
 801f59e:	9209      	str	r2, [sp, #36]	@ 0x24
 801f5a0:	d111      	bne.n	801f5c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801f5a2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801f5a6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801f5aa:	9b06      	ldr	r3, [sp, #24]
 801f5ac:	eba5 0509 	sub.w	r5, r5, r9
 801f5b0:	b2ad      	uxth	r5, r5
 801f5b2:	2d00      	cmp	r5, #0
 801f5b4:	bf08      	it	eq
 801f5b6:	4619      	moveq	r1, r3
 801f5b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f5ba:	bf18      	it	ne
 801f5bc:	2100      	movne	r1, #0
 801f5be:	3301      	adds	r3, #1
 801f5c0:	930d      	str	r3, [sp, #52]	@ 0x34
 801f5c2:	b289      	uxth	r1, r1
 801f5c4:	e695      	b.n	801f2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801f5c6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801f5ca:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801f5ce:	1b2d      	subs	r5, r5, r4
 801f5d0:	b2ad      	uxth	r5, r5
 801f5d2:	2d00      	cmp	r5, #0
 801f5d4:	bf18      	it	ne
 801f5d6:	2400      	movne	r4, #0
 801f5d8:	e740      	b.n	801f45c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801f5da:	4b04      	ldr	r3, [pc, #16]	@ (801f5ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801f5dc:	6818      	ldr	r0, [r3, #0]
 801f5de:	6803      	ldr	r3, [r0, #0]
 801f5e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f5e2:	4798      	blx	r3
 801f5e4:	b01d      	add	sp, #116	@ 0x74
 801f5e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5ea:	bf00      	nop
 801f5ec:	20013f60 	.word	0x20013f60

0801f5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f5f4:	b09f      	sub	sp, #124	@ 0x7c
 801f5f6:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801f5fa:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801f5fe:	920a      	str	r2, [sp, #40]	@ 0x28
 801f600:	461d      	mov	r5, r3
 801f602:	4604      	mov	r4, r0
 801f604:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f606:	2a00      	cmp	r2, #0
 801f608:	f000 81fa 	beq.w	801fa00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801f60c:	6828      	ldr	r0, [r5, #0]
 801f60e:	6869      	ldr	r1, [r5, #4]
 801f610:	aa1a      	add	r2, sp, #104	@ 0x68
 801f612:	c203      	stmia	r2!, {r0, r1}
 801f614:	6818      	ldr	r0, [r3, #0]
 801f616:	6859      	ldr	r1, [r3, #4]
 801f618:	aa1c      	add	r2, sp, #112	@ 0x70
 801f61a:	c203      	stmia	r2!, {r0, r1}
 801f61c:	a81a      	add	r0, sp, #104	@ 0x68
 801f61e:	f7f7 fcb1 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f622:	4629      	mov	r1, r5
 801f624:	a81c      	add	r0, sp, #112	@ 0x70
 801f626:	f7f7 fcd5 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f62a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801f62e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801f632:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801f636:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801f63a:	bfd7      	itett	le
 801f63c:	b29a      	uxthle	r2, r3
 801f63e:	2201      	movgt	r2, #1
 801f640:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801f644:	fb91 f2f2 	sdivle	r2, r1, r2
 801f648:	9201      	str	r2, [sp, #4]
 801f64a:	9801      	ldr	r0, [sp, #4]
 801f64c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801f650:	fb92 f0f0 	sdiv	r0, r2, r0
 801f654:	b280      	uxth	r0, r0
 801f656:	9010      	str	r0, [sp, #64]	@ 0x40
 801f658:	9901      	ldr	r1, [sp, #4]
 801f65a:	9801      	ldr	r0, [sp, #4]
 801f65c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f65e:	440e      	add	r6, r1
 801f660:	fb05 2510 	mls	r5, r5, r0, r2
 801f664:	fb15 f503 	smulbb	r5, r5, r3
 801f668:	3e01      	subs	r6, #1
 801f66a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801f66e:	fb96 f6f1 	sdiv	r6, r6, r1
 801f672:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801f676:	440d      	add	r5, r1
 801f678:	4419      	add	r1, r3
 801f67a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801f67e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801f682:	441a      	add	r2, r3
 801f684:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801f688:	9304      	str	r3, [sp, #16]
 801f68a:	4b96      	ldr	r3, [pc, #600]	@ (801f8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f68c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801f690:	6818      	ldr	r0, [r3, #0]
 801f692:	6803      	ldr	r3, [r0, #0]
 801f694:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f696:	4798      	blx	r3
 801f698:	4b93      	ldr	r3, [pc, #588]	@ (801f8e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f69a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801f69e:	881a      	ldrh	r2, [r3, #0]
 801f6a0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801f6a4:	9318      	str	r3, [sp, #96]	@ 0x60
 801f6a6:	fb02 c101 	mla	r1, r2, r1, ip
 801f6aa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801f6ae:	4357      	muls	r7, r2
 801f6b0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801f6b4:	3601      	adds	r6, #1
 801f6b6:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f6b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f6ba:	4b8c      	ldr	r3, [pc, #560]	@ (801f8ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f6bc:	b2b6      	uxth	r6, r6
 801f6be:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801f6c2:	1d32      	adds	r2, r6, #4
 801f6c4:	9206      	str	r2, [sp, #24]
 801f6c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f6c8:	43d2      	mvns	r2, r2
 801f6ca:	b2d2      	uxtb	r2, r2
 801f6cc:	b2ad      	uxth	r5, r5
 801f6ce:	9215      	str	r2, [sp, #84]	@ 0x54
 801f6d0:	9a04      	ldr	r2, [sp, #16]
 801f6d2:	2d00      	cmp	r5, #0
 801f6d4:	bf0c      	ite	eq
 801f6d6:	4611      	moveq	r1, r2
 801f6d8:	2100      	movne	r1, #0
 801f6da:	2200      	movs	r2, #0
 801f6dc:	1b1b      	subs	r3, r3, r4
 801f6de:	b289      	uxth	r1, r1
 801f6e0:	920d      	str	r2, [sp, #52]	@ 0x34
 801f6e2:	9319      	str	r3, [sp, #100]	@ 0x64
 801f6e4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f6e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f6e8:	fa12 f383 	uxtah	r3, r2, r3
 801f6ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f6ee:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801f6f2:	3304      	adds	r3, #4
 801f6f4:	9307      	str	r3, [sp, #28]
 801f6f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f6f8:	455b      	cmp	r3, fp
 801f6fa:	f240 817c 	bls.w	801f9f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801f6fe:	9a01      	ldr	r2, [sp, #4]
 801f700:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801f704:	fbb5 f3f3 	udiv	r3, r5, r3
 801f708:	1ad3      	subs	r3, r2, r3
 801f70a:	b29b      	uxth	r3, r3
 801f70c:	9316      	str	r3, [sp, #88]	@ 0x58
 801f70e:	9b07      	ldr	r3, [sp, #28]
 801f710:	9807      	ldr	r0, [sp, #28]
 801f712:	785a      	ldrb	r2, [r3, #1]
 801f714:	789b      	ldrb	r3, [r3, #2]
 801f716:	7800      	ldrb	r0, [r0, #0]
 801f718:	9011      	str	r0, [sp, #68]	@ 0x44
 801f71a:	021b      	lsls	r3, r3, #8
 801f71c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801f720:	9a07      	ldr	r2, [sp, #28]
 801f722:	78d2      	ldrb	r2, [r2, #3]
 801f724:	4313      	orrs	r3, r2
 801f726:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f728:	3001      	adds	r0, #1
 801f72a:	441a      	add	r2, r3
 801f72c:	9005      	str	r0, [sp, #20]
 801f72e:	1c50      	adds	r0, r2, #1
 801f730:	9003      	str	r0, [sp, #12]
 801f732:	7852      	ldrb	r2, [r2, #1]
 801f734:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f736:	0212      	lsls	r2, r2, #8
 801f738:	5cc3      	ldrb	r3, [r0, r3]
 801f73a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801f73e:	431a      	orrs	r2, r3
 801f740:	b293      	uxth	r3, r2
 801f742:	930c      	str	r3, [sp, #48]	@ 0x30
 801f744:	2300      	movs	r3, #0
 801f746:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801f74a:	9308      	str	r3, [sp, #32]
 801f74c:	461a      	mov	r2, r3
 801f74e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801f752:	930e      	str	r3, [sp, #56]	@ 0x38
 801f754:	f04f 0801 	mov.w	r8, #1
 801f758:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801f75c:	f8cd 8008 	str.w	r8, [sp, #8]
 801f760:	46c4      	mov	ip, r8
 801f762:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f764:	2d00      	cmp	r5, #0
 801f766:	d07c      	beq.n	801f862 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f768:	45ac      	cmp	ip, r5
 801f76a:	d26c      	bcs.n	801f846 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801f76c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f76e:	eba5 050c 	sub.w	r5, r5, ip
 801f772:	455b      	cmp	r3, fp
 801f774:	b2ad      	uxth	r5, r5
 801f776:	4608      	mov	r0, r1
 801f778:	d802      	bhi.n	801f780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801f77a:	e070      	b.n	801f85e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801f77c:	2b00      	cmp	r3, #0
 801f77e:	d15c      	bne.n	801f83a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801f780:	9b03      	ldr	r3, [sp, #12]
 801f782:	9a02      	ldr	r2, [sp, #8]
 801f784:	785b      	ldrb	r3, [r3, #1]
 801f786:	9902      	ldr	r1, [sp, #8]
 801f788:	f1c2 0207 	rsb	r2, r2, #7
 801f78c:	4093      	lsls	r3, r2
 801f78e:	005b      	lsls	r3, r3, #1
 801f790:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801f794:	9b03      	ldr	r3, [sp, #12]
 801f796:	781b      	ldrb	r3, [r3, #0]
 801f798:	410b      	asrs	r3, r1
 801f79a:	3101      	adds	r1, #1
 801f79c:	b2c9      	uxtb	r1, r1
 801f79e:	2908      	cmp	r1, #8
 801f7a0:	9102      	str	r1, [sp, #8]
 801f7a2:	9903      	ldr	r1, [sp, #12]
 801f7a4:	bf0a      	itet	eq
 801f7a6:	3102      	addeq	r1, #2
 801f7a8:	3101      	addne	r1, #1
 801f7aa:	9103      	streq	r1, [sp, #12]
 801f7ac:	b2db      	uxtb	r3, r3
 801f7ae:	bf0a      	itet	eq
 801f7b0:	2100      	moveq	r1, #0
 801f7b2:	9103      	strne	r1, [sp, #12]
 801f7b4:	9102      	streq	r1, [sp, #8]
 801f7b6:	4313      	orrs	r3, r2
 801f7b8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801f7ba:	b29a      	uxth	r2, r3
 801f7bc:	4291      	cmp	r1, r2
 801f7be:	d30a      	bcc.n	801f7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801f7c0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801f7c4:	2301      	movs	r3, #1
 801f7c6:	9905      	ldr	r1, [sp, #20]
 801f7c8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801f7cc:	d30f      	bcc.n	801f7ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801f7ce:	2100      	movs	r1, #0
 801f7d0:	4698      	mov	r8, r3
 801f7d2:	9100      	str	r1, [sp, #0]
 801f7d4:	e032      	b.n	801f83c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801f7d6:	9b05      	ldr	r3, [sp, #20]
 801f7d8:	429a      	cmp	r2, r3
 801f7da:	d318      	bcc.n	801f80e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801f7dc:	eb04 0308 	add.w	r3, r4, r8
 801f7e0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801f7e4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801f7e8:	f108 0301 	add.w	r3, r8, #1
 801f7ec:	b29b      	uxth	r3, r3
 801f7ee:	9905      	ldr	r1, [sp, #20]
 801f7f0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801f7f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801f7f8:	710e      	strb	r6, [r1, #4]
 801f7fa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f7fc:	80ce      	strh	r6, [r1, #6]
 801f7fe:	f108 0601 	add.w	r6, r8, #1
 801f802:	714e      	strb	r6, [r1, #5]
 801f804:	9905      	ldr	r1, [sp, #20]
 801f806:	3101      	adds	r1, #1
 801f808:	b289      	uxth	r1, r1
 801f80a:	9105      	str	r1, [sp, #20]
 801f80c:	e7df      	b.n	801f7ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801f80e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801f812:	4611      	mov	r1, r2
 801f814:	795b      	ldrb	r3, [r3, #5]
 801f816:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801f81a:	4426      	add	r6, r4
 801f81c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801f81e:	4437      	add	r7, r6
 801f820:	2f00      	cmp	r7, #0
 801f822:	dd06      	ble.n	801f832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801f824:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801f828:	790f      	ldrb	r7, [r1, #4]
 801f82a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801f82e:	88c9      	ldrh	r1, [r1, #6]
 801f830:	e7f4      	b.n	801f81c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801f832:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801f836:	b29b      	uxth	r3, r3
 801f838:	e7c5      	b.n	801f7c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801f83a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f83c:	920c      	str	r2, [sp, #48]	@ 0x30
 801f83e:	4601      	mov	r1, r0
 801f840:	9a00      	ldr	r2, [sp, #0]
 801f842:	469c      	mov	ip, r3
 801f844:	e78e      	b.n	801f764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801f846:	1957      	adds	r7, r2, r5
 801f848:	ebac 0305 	sub.w	r3, ip, r5
 801f84c:	b2ba      	uxth	r2, r7
 801f84e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801f852:	9200      	str	r2, [sp, #0]
 801f854:	b29b      	uxth	r3, r3
 801f856:	2500      	movs	r5, #0
 801f858:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f85a:	455a      	cmp	r2, fp
 801f85c:	d88e      	bhi.n	801f77c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801f85e:	4601      	mov	r1, r0
 801f860:	e749      	b.n	801f6f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801f862:	458c      	cmp	ip, r1
 801f864:	bf2c      	ite	cs
 801f866:	4628      	movcs	r0, r5
 801f868:	462b      	movcc	r3, r5
 801f86a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f86c:	bf27      	ittee	cs
 801f86e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801f870:	ebac 0301 	subcs.w	r3, ip, r1
 801f874:	eba1 000c 	subcc.w	r0, r1, ip
 801f878:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801f87c:	bf2c      	ite	cs
 801f87e:	b29b      	uxthcs	r3, r3
 801f880:	b280      	uxthcc	r0, r0
 801f882:	2dff      	cmp	r5, #255	@ 0xff
 801f884:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f886:	eb02 0705 	add.w	r7, r2, r5
 801f88a:	b2bd      	uxth	r5, r7
 801f88c:	9500      	str	r5, [sp, #0]
 801f88e:	d12f      	bne.n	801f8f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801f890:	465e      	mov	r6, fp
 801f892:	9d00      	ldr	r5, [sp, #0]
 801f894:	42aa      	cmp	r2, r5
 801f896:	f040 8084 	bne.w	801f9a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801f89a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f89c:	458c      	cmp	ip, r1
 801f89e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f8a2:	d3d8      	bcc.n	801f856 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801f8a4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f8a6:	9904      	ldr	r1, [sp, #16]
 801f8a8:	8812      	ldrh	r2, [r2, #0]
 801f8aa:	1a52      	subs	r2, r2, r1
 801f8ac:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f8b0:	9a08      	ldr	r2, [sp, #32]
 801f8b2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801f8b4:	3201      	adds	r2, #1
 801f8b6:	428a      	cmp	r2, r1
 801f8b8:	9208      	str	r2, [sp, #32]
 801f8ba:	f040 8092 	bne.w	801f9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f8be:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801f8c2:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801f8c6:	9b04      	ldr	r3, [sp, #16]
 801f8c8:	eba5 050c 	sub.w	r5, r5, ip
 801f8cc:	b2ad      	uxth	r5, r5
 801f8ce:	2d00      	cmp	r5, #0
 801f8d0:	bf08      	it	eq
 801f8d2:	4619      	moveq	r1, r3
 801f8d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f8d6:	bf18      	it	ne
 801f8d8:	2100      	movne	r1, #0
 801f8da:	3301      	adds	r3, #1
 801f8dc:	930d      	str	r3, [sp, #52]	@ 0x34
 801f8de:	b289      	uxth	r1, r1
 801f8e0:	e700      	b.n	801f6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801f8e2:	bf00      	nop
 801f8e4:	20013f60 	.word	0x20013f60
 801f8e8:	20013f5a 	.word	0x20013f5a
 801f8ec:	fffff7fb 	.word	0xfffff7fb
 801f8f0:	46d9      	mov	r9, fp
 801f8f2:	9d00      	ldr	r5, [sp, #0]
 801f8f4:	42aa      	cmp	r2, r5
 801f8f6:	d0d0      	beq.n	801f89a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801f8f8:	1c55      	adds	r5, r2, #1
 801f8fa:	4422      	add	r2, r4
 801f8fc:	9517      	str	r5, [sp, #92]	@ 0x5c
 801f8fe:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801f902:	9a06      	ldr	r2, [sp, #24]
 801f904:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f908:	4472      	add	r2, lr
 801f90a:	9212      	str	r2, [sp, #72]	@ 0x48
 801f90c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801f90e:	f8b9 2000 	ldrh.w	r2, [r9]
 801f912:	f897 a002 	ldrb.w	sl, [r7, #2]
 801f916:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801f918:	1216      	asrs	r6, r2, #8
 801f91a:	fb1a fa07 	smulbb	sl, sl, r7
 801f91e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801f922:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f924:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f928:	fb06 a607 	mla	r6, r6, r7, sl
 801f92c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801f92e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801f932:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801f934:	10d5      	asrs	r5, r2, #3
 801f936:	fb1a fa07 	smulbb	sl, sl, r7
 801f93a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f93e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f940:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f944:	fb05 a507 	mla	r5, r5, r7, sl
 801f948:	9f06      	ldr	r7, [sp, #24]
 801f94a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f94e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801f950:	00d2      	lsls	r2, r2, #3
 801f952:	fb1e fe07 	smulbb	lr, lr, r7
 801f956:	b2d2      	uxtb	r2, r2
 801f958:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f95a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f95e:	b2b6      	uxth	r6, r6
 801f960:	fb02 e207 	mla	r2, r2, r7, lr
 801f964:	b292      	uxth	r2, r2
 801f966:	b2ad      	uxth	r5, r5
 801f968:	f106 0a01 	add.w	sl, r6, #1
 801f96c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f970:	f102 0e01 	add.w	lr, r2, #1
 801f974:	f105 0a01 	add.w	sl, r5, #1
 801f978:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801f97c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f980:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801f984:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f988:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f98c:	ea4e 0606 	orr.w	r6, lr, r6
 801f990:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f994:	ea46 060a 	orr.w	r6, r6, sl
 801f998:	f829 6b02 	strh.w	r6, [r9], #2
 801f99c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801f9a0:	e7a7      	b.n	801f8f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801f9a2:	f102 0e01 	add.w	lr, r2, #1
 801f9a6:	4422      	add	r2, r4
 801f9a8:	9f06      	ldr	r7, [sp, #24]
 801f9aa:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801f9ae:	9a06      	ldr	r2, [sp, #24]
 801f9b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f9b4:	eb02 0a05 	add.w	sl, r2, r5
 801f9b8:	4a13      	ldr	r2, [pc, #76]	@ (801fa08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801f9ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801f9be:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801f9c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f9c6:	00d2      	lsls	r2, r2, #3
 801f9c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f9cc:	ea49 0202 	orr.w	r2, r9, r2
 801f9d0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801f9d4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801f9d8:	f826 2b02 	strh.w	r2, [r6], #2
 801f9dc:	fa1f f28e 	uxth.w	r2, lr
 801f9e0:	e757      	b.n	801f892 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801f9e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801f9e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801f9ea:	1a2d      	subs	r5, r5, r0
 801f9ec:	b2ad      	uxth	r5, r5
 801f9ee:	2d00      	cmp	r5, #0
 801f9f0:	bf18      	it	ne
 801f9f2:	2000      	movne	r0, #0
 801f9f4:	e730      	b.n	801f858 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f9f6:	4b05      	ldr	r3, [pc, #20]	@ (801fa0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801f9f8:	6818      	ldr	r0, [r3, #0]
 801f9fa:	6803      	ldr	r3, [r0, #0]
 801f9fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f9fe:	4798      	blx	r3
 801fa00:	b01f      	add	sp, #124	@ 0x7c
 801fa02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa06:	bf00      	nop
 801fa08:	fffff800 	.word	0xfffff800
 801fa0c:	20013f60 	.word	0x20013f60

0801fa10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801fa10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa14:	b091      	sub	sp, #68	@ 0x44
 801fa16:	469b      	mov	fp, r3
 801fa18:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801fa1c:	4616      	mov	r6, r2
 801fa1e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801fa22:	f9b3 2000 	ldrsh.w	r2, [r3]
 801fa26:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801fa2a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801fa2e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801fa32:	4604      	mov	r4, r0
 801fa34:	460d      	mov	r5, r1
 801fa36:	4640      	mov	r0, r8
 801fa38:	4659      	mov	r1, fp
 801fa3a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801fa3e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801fa42:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801fa46:	f7f0 fd31 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 801fa4a:	4631      	mov	r1, r6
 801fa4c:	4640      	mov	r0, r8
 801fa4e:	f7f0 fd2d 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 801fa52:	4b74      	ldr	r3, [pc, #464]	@ (801fc24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801fa54:	8818      	ldrh	r0, [r3, #0]
 801fa56:	4b74      	ldr	r3, [pc, #464]	@ (801fc28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801fa58:	8819      	ldrh	r1, [r3, #0]
 801fa5a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fa5e:	2b00      	cmp	r3, #0
 801fa60:	b202      	sxth	r2, r0
 801fa62:	b20e      	sxth	r6, r1
 801fa64:	da07      	bge.n	801fa76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801fa66:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801fa6a:	4463      	add	r3, ip
 801fa6c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801fa70:	2300      	movs	r3, #0
 801fa72:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801fa76:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fa7a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801fa7e:	1ad2      	subs	r2, r2, r3
 801fa80:	4594      	cmp	ip, r2
 801fa82:	bfc4      	itt	gt
 801fa84:	1ac2      	subgt	r2, r0, r3
 801fa86:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801fa8a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801fa8e:	2a00      	cmp	r2, #0
 801fa90:	da07      	bge.n	801faa2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801fa92:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801fa96:	4462      	add	r2, ip
 801fa98:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801fa9c:	2200      	movs	r2, #0
 801fa9e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801faa2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801faa6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801faaa:	eba6 060a 	sub.w	r6, r6, sl
 801faae:	42b2      	cmp	r2, r6
 801fab0:	bfc4      	itt	gt
 801fab2:	eba1 020a 	subgt.w	r2, r1, sl
 801fab6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801faba:	4a5c      	ldr	r2, [pc, #368]	@ (801fc2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801fabc:	7812      	ldrb	r2, [r2, #0]
 801fabe:	b9a2      	cbnz	r2, 801faea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801fac0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801fac4:	4286      	cmp	r6, r0
 801fac6:	4640      	mov	r0, r8
 801fac8:	9303      	str	r3, [sp, #12]
 801faca:	bf14      	ite	ne
 801facc:	2600      	movne	r6, #0
 801face:	2601      	moveq	r6, #1
 801fad0:	f7f0 fd2f 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fad4:	9b03      	ldr	r3, [sp, #12]
 801fad6:	b160      	cbz	r0, 801faf2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801fad8:	2300      	movs	r3, #0
 801fada:	8023      	strh	r3, [r4, #0]
 801fadc:	8063      	strh	r3, [r4, #2]
 801fade:	80a3      	strh	r3, [r4, #4]
 801fae0:	4620      	mov	r0, r4
 801fae2:	80e3      	strh	r3, [r4, #6]
 801fae4:	b011      	add	sp, #68	@ 0x44
 801fae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801faea:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801faee:	428e      	cmp	r6, r1
 801faf0:	e7e9      	b.n	801fac6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801faf2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801faf6:	9205      	str	r2, [sp, #20]
 801faf8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801fafc:	9206      	str	r2, [sp, #24]
 801fafe:	f8bb 2000 	ldrh.w	r2, [fp]
 801fb02:	900e      	str	r0, [sp, #56]	@ 0x38
 801fb04:	1a9b      	subs	r3, r3, r2
 801fb06:	b21b      	sxth	r3, r3
 801fb08:	9303      	str	r3, [sp, #12]
 801fb0a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801fb0e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801fb12:	ebaa 0a03 	sub.w	sl, sl, r3
 801fb16:	fa0f f38a 	sxth.w	r3, sl
 801fb1a:	9304      	str	r3, [sp, #16]
 801fb1c:	9b03      	ldr	r3, [sp, #12]
 801fb1e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801fb22:	9b04      	ldr	r3, [sp, #16]
 801fb24:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801fb28:	9b05      	ldr	r3, [sp, #20]
 801fb2a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801fb2e:	a90e      	add	r1, sp, #56	@ 0x38
 801fb30:	9b06      	ldr	r3, [sp, #24]
 801fb32:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801fb36:	a80c      	add	r0, sp, #48	@ 0x30
 801fb38:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801fb3c:	f7f7 fa4a 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fb40:	4640      	mov	r0, r8
 801fb42:	f7f7 fa1f 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fb46:	a80e      	add	r0, sp, #56	@ 0x38
 801fb48:	f7f7 fa1c 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fb4c:	4b38      	ldr	r3, [pc, #224]	@ (801fc30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801fb4e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801fb52:	881b      	ldrh	r3, [r3, #0]
 801fb54:	9307      	str	r3, [sp, #28]
 801fb56:	682b      	ldr	r3, [r5, #0]
 801fb58:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801fc34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801fb5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801fb5e:	4628      	mov	r0, r5
 801fb60:	4798      	blx	r3
 801fb62:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801fb66:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801fb6a:	4681      	mov	r9, r0
 801fb6c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801fb70:	f8db 0000 	ldr.w	r0, [fp]
 801fb74:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801fb76:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801fb7a:	6803      	ldr	r3, [r0, #0]
 801fb7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801fb7e:	4798      	blx	r3
 801fb80:	4607      	mov	r7, r0
 801fb82:	f8db 0000 	ldr.w	r0, [fp]
 801fb86:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801fb8a:	6803      	ldr	r3, [r0, #0]
 801fb8c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801fb90:	9109      	str	r1, [sp, #36]	@ 0x24
 801fb92:	9208      	str	r2, [sp, #32]
 801fb94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801fb96:	4798      	blx	r3
 801fb98:	f010 0f01 	tst.w	r0, #1
 801fb9c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fba0:	d012      	beq.n	801fbc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801fba2:	f8db 0000 	ldr.w	r0, [fp]
 801fba6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801fbaa:	6803      	ldr	r3, [r0, #0]
 801fbac:	9200      	str	r2, [sp, #0]
 801fbae:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801fbb0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801fbb4:	462b      	mov	r3, r5
 801fbb6:	47b0      	blx	r6
 801fbb8:	9b03      	ldr	r3, [sp, #12]
 801fbba:	8023      	strh	r3, [r4, #0]
 801fbbc:	9b04      	ldr	r3, [sp, #16]
 801fbbe:	8063      	strh	r3, [r4, #2]
 801fbc0:	9b05      	ldr	r3, [sp, #20]
 801fbc2:	80a3      	strh	r3, [r4, #4]
 801fbc4:	9b06      	ldr	r3, [sp, #24]
 801fbc6:	e78b      	b.n	801fae0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801fbc8:	fb09 f202 	mul.w	r2, r9, r2
 801fbcc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801fbd0:	440f      	add	r7, r1
 801fbd2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801fbd6:	b166      	cbz	r6, 801fbf2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801fbd8:	9a07      	ldr	r2, [sp, #28]
 801fbda:	4592      	cmp	sl, r2
 801fbdc:	d109      	bne.n	801fbf2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801fbde:	f8db 0000 	ldr.w	r0, [fp]
 801fbe2:	6802      	ldr	r2, [r0, #0]
 801fbe4:	fb09 f303 	mul.w	r3, r9, r3
 801fbe8:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801fbea:	4629      	mov	r1, r5
 801fbec:	463a      	mov	r2, r7
 801fbee:	47b0      	blx	r6
 801fbf0:	e7e2      	b.n	801fbb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801fbf2:	fb0a f303 	mul.w	r3, sl, r3
 801fbf6:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801fc34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801fbfa:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801fbfe:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801fc02:	4545      	cmp	r5, r8
 801fc04:	d2d8      	bcs.n	801fbb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801fc06:	f8db 0000 	ldr.w	r0, [fp]
 801fc0a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801fc0e:	6802      	ldr	r2, [r0, #0]
 801fc10:	4629      	mov	r1, r5
 801fc12:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801fc16:	005b      	lsls	r3, r3, #1
 801fc18:	463a      	mov	r2, r7
 801fc1a:	47d0      	blx	sl
 801fc1c:	444f      	add	r7, r9
 801fc1e:	4435      	add	r5, r6
 801fc20:	e7ef      	b.n	801fc02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801fc22:	bf00      	nop
 801fc24:	20013f54 	.word	0x20013f54
 801fc28:	20013f56 	.word	0x20013f56
 801fc2c:	20013f58 	.word	0x20013f58
 801fc30:	20013f5a 	.word	0x20013f5a
 801fc34:	20013f60 	.word	0x20013f60

0801fc38 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801fc38:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fc3a:	4606      	mov	r6, r0
 801fc3c:	b087      	sub	sp, #28
 801fc3e:	460c      	mov	r4, r1
 801fc40:	4617      	mov	r7, r2
 801fc42:	461d      	mov	r5, r3
 801fc44:	b333      	cbz	r3, 801fc94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801fc46:	4608      	mov	r0, r1
 801fc48:	f7f0 fc73 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fc4c:	bb10      	cbnz	r0, 801fc94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801fc4e:	6820      	ldr	r0, [r4, #0]
 801fc50:	6861      	ldr	r1, [r4, #4]
 801fc52:	4c1c      	ldr	r4, [pc, #112]	@ (801fcc4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801fc54:	ab04      	add	r3, sp, #16
 801fc56:	c303      	stmia	r3!, {r0, r1}
 801fc58:	a804      	add	r0, sp, #16
 801fc5a:	f7f7 f993 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fc5e:	6820      	ldr	r0, [r4, #0]
 801fc60:	6803      	ldr	r3, [r0, #0]
 801fc62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801fc64:	4798      	blx	r3
 801fc66:	2dff      	cmp	r5, #255	@ 0xff
 801fc68:	d016      	beq.n	801fc98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801fc6a:	f010 0f08 	tst.w	r0, #8
 801fc6e:	6820      	ldr	r0, [r4, #0]
 801fc70:	d015      	beq.n	801fc9e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801fc72:	2400      	movs	r4, #0
 801fc74:	6801      	ldr	r1, [r0, #0]
 801fc76:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801fc7a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fc7e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801fc82:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801fc86:	9401      	str	r4, [sp, #4]
 801fc88:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801fc8c:	9400      	str	r4, [sp, #0]
 801fc8e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801fc90:	4639      	mov	r1, r7
 801fc92:	47a0      	blx	r4
 801fc94:	b007      	add	sp, #28
 801fc96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fc98:	f010 0f02 	tst.w	r0, #2
 801fc9c:	e7e7      	b.n	801fc6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801fc9e:	6803      	ldr	r3, [r0, #0]
 801fca0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801fca2:	4798      	blx	r3
 801fca4:	4b08      	ldr	r3, [pc, #32]	@ (801fcc8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801fca6:	881a      	ldrh	r2, [r3, #0]
 801fca8:	6833      	ldr	r3, [r6, #0]
 801fcaa:	e9cd 7500 	strd	r7, r5, [sp]
 801fcae:	4601      	mov	r1, r0
 801fcb0:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801fcb2:	4630      	mov	r0, r6
 801fcb4:	ab04      	add	r3, sp, #16
 801fcb6:	47a8      	blx	r5
 801fcb8:	6820      	ldr	r0, [r4, #0]
 801fcba:	6803      	ldr	r3, [r0, #0]
 801fcbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801fcbe:	4798      	blx	r3
 801fcc0:	e7e8      	b.n	801fc94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801fcc2:	bf00      	nop
 801fcc4:	20013f60 	.word	0x20013f60
 801fcc8:	20013f5a 	.word	0x20013f5a

0801fccc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801fccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fcd0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801fcd4:	9e08      	ldr	r6, [sp, #32]
 801fcd6:	4688      	mov	r8, r1
 801fcd8:	4614      	mov	r4, r2
 801fcda:	461d      	mov	r5, r3
 801fcdc:	2f00      	cmp	r7, #0
 801fcde:	f000 80a9 	beq.w	801fe34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801fce2:	4618      	mov	r0, r3
 801fce4:	f7f0 fc25 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fce8:	2800      	cmp	r0, #0
 801fcea:	f040 80a3 	bne.w	801fe34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801fcee:	f9b5 1000 	ldrsh.w	r1, [r5]
 801fcf2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801fcf6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801fcfa:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801fcfe:	fb04 1303 	mla	r3, r4, r3, r1
 801fd02:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801fd06:	4365      	muls	r5, r4
 801fd08:	2fff      	cmp	r7, #255	@ 0xff
 801fd0a:	eba4 0200 	sub.w	r2, r4, r0
 801fd0e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801fd12:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801fd16:	d04a      	beq.n	801fdae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801fd18:	b2bc      	uxth	r4, r7
 801fd1a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801fd1e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801fd22:	fa5f f788 	uxtb.w	r7, r8
 801fd26:	b2f3      	uxtb	r3, r6
 801fd28:	0040      	lsls	r0, r0, #1
 801fd2a:	fb0e fe04 	mul.w	lr, lr, r4
 801fd2e:	4367      	muls	r7, r4
 801fd30:	4363      	muls	r3, r4
 801fd32:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801fd36:	fa1f fc8c 	uxth.w	ip, ip
 801fd3a:	42a9      	cmp	r1, r5
 801fd3c:	d27a      	bcs.n	801fe34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801fd3e:	eb01 0900 	add.w	r9, r1, r0
 801fd42:	4549      	cmp	r1, r9
 801fd44:	d231      	bcs.n	801fdaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801fd46:	880a      	ldrh	r2, [r1, #0]
 801fd48:	1214      	asrs	r4, r2, #8
 801fd4a:	10d6      	asrs	r6, r2, #3
 801fd4c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801fd50:	00d2      	lsls	r2, r2, #3
 801fd52:	b2d2      	uxtb	r2, r2
 801fd54:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fd58:	fb14 f40c 	smulbb	r4, r4, ip
 801fd5c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fd60:	4474      	add	r4, lr
 801fd62:	fb12 f20c 	smulbb	r2, r2, ip
 801fd66:	b2a4      	uxth	r4, r4
 801fd68:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801fd6c:	441a      	add	r2, r3
 801fd6e:	b292      	uxth	r2, r2
 801fd70:	f104 0a01 	add.w	sl, r4, #1
 801fd74:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801fd78:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801fd7c:	fb16 f60c 	smulbb	r6, r6, ip
 801fd80:	f102 0a01 	add.w	sl, r2, #1
 801fd84:	443e      	add	r6, r7
 801fd86:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801fd8a:	b2b6      	uxth	r6, r6
 801fd8c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801fd90:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fd94:	4322      	orrs	r2, r4
 801fd96:	1c74      	adds	r4, r6, #1
 801fd98:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801fd9c:	0976      	lsrs	r6, r6, #5
 801fd9e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801fda2:	4332      	orrs	r2, r6
 801fda4:	f821 2b02 	strh.w	r2, [r1], #2
 801fda8:	e7cb      	b.n	801fd42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801fdaa:	4441      	add	r1, r8
 801fdac:	e7c5      	b.n	801fd3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801fdae:	4f22      	ldr	r7, [pc, #136]	@ (801fe38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801fdb0:	0973      	lsrs	r3, r6, #5
 801fdb2:	ea08 0707 	and.w	r7, r8, r7
 801fdb6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fdba:	433b      	orrs	r3, r7
 801fdbc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801fdc0:	4333      	orrs	r3, r6
 801fdc2:	07e7      	lsls	r7, r4, #31
 801fdc4:	b29b      	uxth	r3, r3
 801fdc6:	d50b      	bpl.n	801fde0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801fdc8:	0040      	lsls	r0, r0, #1
 801fdca:	0052      	lsls	r2, r2, #1
 801fdcc:	42a9      	cmp	r1, r5
 801fdce:	d231      	bcs.n	801fe34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801fdd0:	180c      	adds	r4, r1, r0
 801fdd2:	42a1      	cmp	r1, r4
 801fdd4:	d202      	bcs.n	801fddc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801fdd6:	f821 3b02 	strh.w	r3, [r1], #2
 801fdda:	e7fa      	b.n	801fdd2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801fddc:	4411      	add	r1, r2
 801fdde:	e7f5      	b.n	801fdcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801fde0:	078e      	lsls	r6, r1, #30
 801fde2:	d008      	beq.n	801fdf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801fde4:	0066      	lsls	r6, r4, #1
 801fde6:	460a      	mov	r2, r1
 801fde8:	42aa      	cmp	r2, r5
 801fdea:	d202      	bcs.n	801fdf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801fdec:	8013      	strh	r3, [r2, #0]
 801fdee:	4432      	add	r2, r6
 801fdf0:	e7fa      	b.n	801fde8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801fdf2:	3102      	adds	r1, #2
 801fdf4:	3801      	subs	r0, #1
 801fdf6:	07c2      	lsls	r2, r0, #31
 801fdf8:	d50b      	bpl.n	801fe12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801fdfa:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801fdfe:	3a01      	subs	r2, #1
 801fe00:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801fe04:	0066      	lsls	r6, r4, #1
 801fe06:	42aa      	cmp	r2, r5
 801fe08:	d202      	bcs.n	801fe10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801fe0a:	8013      	strh	r3, [r2, #0]
 801fe0c:	4432      	add	r2, r6
 801fe0e:	e7fa      	b.n	801fe06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801fe10:	3801      	subs	r0, #1
 801fe12:	b178      	cbz	r0, 801fe34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801fe14:	1040      	asrs	r0, r0, #1
 801fe16:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801fe1a:	0080      	lsls	r0, r0, #2
 801fe1c:	0064      	lsls	r4, r4, #1
 801fe1e:	42a9      	cmp	r1, r5
 801fe20:	d208      	bcs.n	801fe34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801fe22:	180e      	adds	r6, r1, r0
 801fe24:	460a      	mov	r2, r1
 801fe26:	42b2      	cmp	r2, r6
 801fe28:	d202      	bcs.n	801fe30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801fe2a:	f842 3b04 	str.w	r3, [r2], #4
 801fe2e:	e7fa      	b.n	801fe26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801fe30:	4421      	add	r1, r4
 801fe32:	e7f4      	b.n	801fe1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801fe34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fe38:	00fff800 	.word	0x00fff800

0801fe3c <_ZN8touchgfx8LCD16bppC1Ev>:
 801fe3c:	2200      	movs	r2, #0
 801fe3e:	4912      	ldr	r1, [pc, #72]	@ (801fe88 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801fe40:	6001      	str	r1, [r0, #0]
 801fe42:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801fe46:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801fe4a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801fe4e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801fe52:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801fe56:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801fe5a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801fe5e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801fe62:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801fe66:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801fe6a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801fe6e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801fe72:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801fe76:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801fe7a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801fe7e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801fe82:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801fe86:	4770      	bx	lr
 801fe88:	0802e788 	.word	0x0802e788

0801fe8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801fe8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe90:	460d      	mov	r5, r1
 801fe92:	b08d      	sub	sp, #52	@ 0x34
 801fe94:	4604      	mov	r4, r0
 801fe96:	6808      	ldr	r0, [r1, #0]
 801fe98:	6849      	ldr	r1, [r1, #4]
 801fe9a:	4699      	mov	r9, r3
 801fe9c:	ab08      	add	r3, sp, #32
 801fe9e:	c303      	stmia	r3!, {r0, r1}
 801fea0:	6810      	ldr	r0, [r2, #0]
 801fea2:	6851      	ldr	r1, [r2, #4]
 801fea4:	ab0a      	add	r3, sp, #40	@ 0x28
 801fea6:	c303      	stmia	r3!, {r0, r1}
 801fea8:	a808      	add	r0, sp, #32
 801feaa:	f7f7 f86b 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801feae:	4629      	mov	r1, r5
 801feb0:	a80a      	add	r0, sp, #40	@ 0x28
 801feb2:	f7f7 f88f 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801feb6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801feba:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801febe:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801fec2:	4d63      	ldr	r5, [pc, #396]	@ (8020050 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801fec4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801fec8:	6828      	ldr	r0, [r5, #0]
 801feca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801fece:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fed2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801fed6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801feda:	440a      	add	r2, r1
 801fedc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801fee0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801fee4:	4413      	add	r3, r2
 801fee6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801feea:	6803      	ldr	r3, [r0, #0]
 801feec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801feee:	4798      	blx	r3
 801fef0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801fef4:	d119      	bne.n	801ff2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801fef6:	f010 0f20 	tst.w	r0, #32
 801fefa:	6828      	ldr	r0, [r5, #0]
 801fefc:	d018      	beq.n	801ff30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801fefe:	2500      	movs	r5, #0
 801ff00:	6801      	ldr	r1, [r0, #0]
 801ff02:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801ff06:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801ff0a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ff0e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801ff12:	9502      	str	r5, [sp, #8]
 801ff14:	b2b6      	uxth	r6, r6
 801ff16:	fa1f f588 	uxth.w	r5, r8
 801ff1a:	9601      	str	r6, [sp, #4]
 801ff1c:	9500      	str	r5, [sp, #0]
 801ff1e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801ff20:	4621      	mov	r1, r4
 801ff22:	47a8      	blx	r5
 801ff24:	b00d      	add	sp, #52	@ 0x34
 801ff26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff2a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801ff2e:	e7e4      	b.n	801fefa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ff30:	6803      	ldr	r3, [r0, #0]
 801ff32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ff34:	4798      	blx	r3
 801ff36:	4947      	ldr	r1, [pc, #284]	@ (8020054 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ff38:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ff3c:	880b      	ldrh	r3, [r1, #0]
 801ff3e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801ff42:	fb03 5202 	mla	r2, r3, r2, r5
 801ff46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ff4a:	4373      	muls	r3, r6
 801ff4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ff50:	9307      	str	r3, [sp, #28]
 801ff52:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ff56:	9306      	str	r3, [sp, #24]
 801ff58:	468a      	mov	sl, r1
 801ff5a:	9b07      	ldr	r3, [sp, #28]
 801ff5c:	4298      	cmp	r0, r3
 801ff5e:	d270      	bcs.n	8020042 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ff60:	9b06      	ldr	r3, [sp, #24]
 801ff62:	4621      	mov	r1, r4
 801ff64:	eb00 0b03 	add.w	fp, r0, r3
 801ff68:	4558      	cmp	r0, fp
 801ff6a:	d25d      	bcs.n	8020028 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ff6c:	f851 4b04 	ldr.w	r4, [r1], #4
 801ff70:	0e23      	lsrs	r3, r4, #24
 801ff72:	d014      	beq.n	801ff9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ff74:	2bff      	cmp	r3, #255	@ 0xff
 801ff76:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ff7a:	d112      	bne.n	801ffa2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ff7c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ff80:	d10f      	bne.n	801ffa2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ff82:	0963      	lsrs	r3, r4, #5
 801ff84:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801ff88:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ff8c:	f02c 0c07 	bic.w	ip, ip, #7
 801ff90:	ea43 0c0c 	orr.w	ip, r3, ip
 801ff94:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ff98:	ea4c 0404 	orr.w	r4, ip, r4
 801ff9c:	8004      	strh	r4, [r0, #0]
 801ff9e:	3002      	adds	r0, #2
 801ffa0:	e7e2      	b.n	801ff68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ffa2:	fb09 f303 	mul.w	r3, r9, r3
 801ffa6:	8807      	ldrh	r7, [r0, #0]
 801ffa8:	1c5a      	adds	r2, r3, #1
 801ffaa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ffae:	1212      	asrs	r2, r2, #8
 801ffb0:	123e      	asrs	r6, r7, #8
 801ffb2:	b293      	uxth	r3, r2
 801ffb4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ffb8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ffbc:	43d2      	mvns	r2, r2
 801ffbe:	b2d2      	uxtb	r2, r2
 801ffc0:	10fd      	asrs	r5, r7, #3
 801ffc2:	fb1e fe03 	smulbb	lr, lr, r3
 801ffc6:	00ff      	lsls	r7, r7, #3
 801ffc8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ffcc:	fb06 e602 	mla	r6, r6, r2, lr
 801ffd0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ffd4:	b2ff      	uxtb	r7, r7
 801ffd6:	fa5f fc8c 	uxtb.w	ip, ip
 801ffda:	b2e4      	uxtb	r4, r4
 801ffdc:	b2b6      	uxth	r6, r6
 801ffde:	fb1c fc03 	smulbb	ip, ip, r3
 801ffe2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ffe6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ffea:	fb14 f403 	smulbb	r4, r4, r3
 801ffee:	fb05 c502 	mla	r5, r5, r2, ip
 801fff2:	f106 0e01 	add.w	lr, r6, #1
 801fff6:	fb07 4702 	mla	r7, r7, r2, r4
 801fffa:	b2ad      	uxth	r5, r5
 801fffc:	b2bf      	uxth	r7, r7
 801fffe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020002:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8020006:	f105 0c01 	add.w	ip, r5, #1
 802000a:	1c7e      	adds	r6, r7, #1
 802000c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020010:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020014:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020018:	096d      	lsrs	r5, r5, #5
 802001a:	ea46 060e 	orr.w	r6, r6, lr
 802001e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020022:	432e      	orrs	r6, r5
 8020024:	8006      	strh	r6, [r0, #0]
 8020026:	e7ba      	b.n	801ff9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020028:	f8ba 3000 	ldrh.w	r3, [sl]
 802002c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8020030:	eba3 0308 	sub.w	r3, r3, r8
 8020034:	eba4 0408 	sub.w	r4, r4, r8
 8020038:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802003c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020040:	e78b      	b.n	801ff5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020042:	4b03      	ldr	r3, [pc, #12]	@ (8020050 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020044:	6818      	ldr	r0, [r3, #0]
 8020046:	6803      	ldr	r3, [r0, #0]
 8020048:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802004a:	4798      	blx	r3
 802004c:	e76a      	b.n	801ff24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 802004e:	bf00      	nop
 8020050:	20013f60 	.word	0x20013f60
 8020054:	20013f5a 	.word	0x20013f5a

08020058 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8020058:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802005c:	460c      	mov	r4, r1
 802005e:	b085      	sub	sp, #20
 8020060:	6810      	ldr	r0, [r2, #0]
 8020062:	6851      	ldr	r1, [r2, #4]
 8020064:	466d      	mov	r5, sp
 8020066:	c503      	stmia	r5!, {r0, r1}
 8020068:	6818      	ldr	r0, [r3, #0]
 802006a:	6859      	ldr	r1, [r3, #4]
 802006c:	4616      	mov	r6, r2
 802006e:	c503      	stmia	r5!, {r0, r1}
 8020070:	4668      	mov	r0, sp
 8020072:	f7f6 ff87 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020076:	4631      	mov	r1, r6
 8020078:	a802      	add	r0, sp, #8
 802007a:	f7f6 ffab 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802007e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020082:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020086:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 802008a:	4d28      	ldr	r5, [pc, #160]	@ (802012c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 802008c:	4e28      	ldr	r6, [pc, #160]	@ (8020130 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 802008e:	6828      	ldr	r0, [r5, #0]
 8020090:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020094:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020098:	fb11 2103 	smlabb	r1, r1, r3, r2
 802009c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80200a0:	f8bd 1000 	ldrh.w	r1, [sp]
 80200a4:	440a      	add	r2, r1
 80200a6:	f8ad 2008 	strh.w	r2, [sp, #8]
 80200aa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80200ae:	4413      	add	r3, r2
 80200b0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80200b4:	6803      	ldr	r3, [r0, #0]
 80200b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80200b8:	4798      	blx	r3
 80200ba:	8833      	ldrh	r3, [r6, #0]
 80200bc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80200c0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80200c4:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8020134 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80200c8:	fb03 1202 	mla	r2, r3, r2, r1
 80200cc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80200d0:	fb08 f303 	mul.w	r3, r8, r3
 80200d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80200d8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80200dc:	4298      	cmp	r0, r3
 80200de:	d21d      	bcs.n	802011c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80200e0:	eb00 080c 	add.w	r8, r0, ip
 80200e4:	4540      	cmp	r0, r8
 80200e6:	d20f      	bcs.n	8020108 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80200e8:	f854 1b04 	ldr.w	r1, [r4], #4
 80200ec:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80200f0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80200f4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80200f8:	ea42 0209 	orr.w	r2, r2, r9
 80200fc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020100:	430a      	orrs	r2, r1
 8020102:	f820 2b02 	strh.w	r2, [r0], #2
 8020106:	e7ed      	b.n	80200e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020108:	8832      	ldrh	r2, [r6, #0]
 802010a:	1bd2      	subs	r2, r2, r7
 802010c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020110:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020114:	1bd2      	subs	r2, r2, r7
 8020116:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 802011a:	e7df      	b.n	80200dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 802011c:	6828      	ldr	r0, [r5, #0]
 802011e:	6803      	ldr	r3, [r0, #0]
 8020120:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020122:	4798      	blx	r3
 8020124:	b005      	add	sp, #20
 8020126:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802012a:	bf00      	nop
 802012c:	20013f60 	.word	0x20013f60
 8020130:	20013f5a 	.word	0x20013f5a
 8020134:	fffff800 	.word	0xfffff800

08020138 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020138:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802013c:	460e      	mov	r6, r1
 802013e:	b08e      	sub	sp, #56	@ 0x38
 8020140:	4604      	mov	r4, r0
 8020142:	6808      	ldr	r0, [r1, #0]
 8020144:	6849      	ldr	r1, [r1, #4]
 8020146:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8020320 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 802014a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8020324 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 802014e:	461d      	mov	r5, r3
 8020150:	ab0a      	add	r3, sp, #40	@ 0x28
 8020152:	c303      	stmia	r3!, {r0, r1}
 8020154:	6810      	ldr	r0, [r2, #0]
 8020156:	6851      	ldr	r1, [r2, #4]
 8020158:	ab0c      	add	r3, sp, #48	@ 0x30
 802015a:	c303      	stmia	r3!, {r0, r1}
 802015c:	a80a      	add	r0, sp, #40	@ 0x28
 802015e:	f7f6 ff11 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020162:	4631      	mov	r1, r6
 8020164:	a80c      	add	r0, sp, #48	@ 0x30
 8020166:	f7f6 ff35 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802016a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802016e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8020172:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8020176:	f8d8 0000 	ldr.w	r0, [r8]
 802017a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 802017e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8020182:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020186:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802018a:	440c      	add	r4, r1
 802018c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8020190:	440a      	add	r2, r1
 8020192:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020196:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 802019a:	4413      	add	r3, r2
 802019c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80201a0:	6803      	ldr	r3, [r0, #0]
 80201a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80201a4:	4798      	blx	r3
 80201a6:	2dff      	cmp	r5, #255	@ 0xff
 80201a8:	d124      	bne.n	80201f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80201aa:	f010 0f01 	tst.w	r0, #1
 80201ae:	f8d8 0000 	ldr.w	r0, [r8]
 80201b2:	d022      	beq.n	80201fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80201b4:	2100      	movs	r1, #0
 80201b6:	f8d0 c000 	ldr.w	ip, [r0]
 80201ba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80201be:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80201c2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80201c6:	f04f 0e01 	mov.w	lr, #1
 80201ca:	f8cd e018 	str.w	lr, [sp, #24]
 80201ce:	f8b9 e000 	ldrh.w	lr, [r9]
 80201d2:	9503      	str	r5, [sp, #12]
 80201d4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80201d8:	b2b6      	uxth	r6, r6
 80201da:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80201de:	9102      	str	r1, [sp, #8]
 80201e0:	b2bf      	uxth	r7, r7
 80201e2:	9601      	str	r6, [sp, #4]
 80201e4:	9700      	str	r7, [sp, #0]
 80201e6:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 80201ea:	4621      	mov	r1, r4
 80201ec:	47a8      	blx	r5
 80201ee:	b00e      	add	sp, #56	@ 0x38
 80201f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80201f4:	f010 0f04 	tst.w	r0, #4
 80201f8:	e7d9      	b.n	80201ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80201fa:	6803      	ldr	r3, [r0, #0]
 80201fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80201fe:	4798      	blx	r3
 8020200:	f8b9 3000 	ldrh.w	r3, [r9]
 8020204:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8020208:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 802020c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8020210:	fb03 1202 	mla	r2, r3, r2, r1
 8020214:	ebac 0c07 	sub.w	ip, ip, r7
 8020218:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802021c:	435e      	muls	r6, r3
 802021e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020222:	2dff      	cmp	r5, #255	@ 0xff
 8020224:	eba3 0707 	sub.w	r7, r3, r7
 8020228:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 802022c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020230:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020234:	d049      	beq.n	80202ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020236:	43eb      	mvns	r3, r5
 8020238:	fa1f f985 	uxth.w	r9, r5
 802023c:	b2db      	uxtb	r3, r3
 802023e:	42b0      	cmp	r0, r6
 8020240:	d266      	bcs.n	8020310 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020242:	eb00 0a0e 	add.w	sl, r0, lr
 8020246:	4550      	cmp	r0, sl
 8020248:	4621      	mov	r1, r4
 802024a:	f104 0403 	add.w	r4, r4, #3
 802024e:	d25b      	bcs.n	8020308 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020250:	8802      	ldrh	r2, [r0, #0]
 8020252:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020256:	ea4f 2822 	mov.w	r8, r2, asr #8
 802025a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 802025e:	fb11 f109 	smulbb	r1, r1, r9
 8020262:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020266:	10d5      	asrs	r5, r2, #3
 8020268:	fb08 1803 	mla	r8, r8, r3, r1
 802026c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020270:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8020274:	fb11 f109 	smulbb	r1, r1, r9
 8020278:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802027c:	fb05 1503 	mla	r5, r5, r3, r1
 8020280:	00d2      	lsls	r2, r2, #3
 8020282:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020286:	b2d2      	uxtb	r2, r2
 8020288:	fb11 f109 	smulbb	r1, r1, r9
 802028c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020290:	fa1f f888 	uxth.w	r8, r8
 8020294:	fb02 1203 	mla	r2, r2, r3, r1
 8020298:	b292      	uxth	r2, r2
 802029a:	f108 0101 	add.w	r1, r8, #1
 802029e:	b2ad      	uxth	r5, r5
 80202a0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80202a4:	1c51      	adds	r1, r2, #1
 80202a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80202aa:	1c69      	adds	r1, r5, #1
 80202ac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80202b0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80202b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80202b8:	096d      	lsrs	r5, r5, #5
 80202ba:	ea42 0208 	orr.w	r2, r2, r8
 80202be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80202c2:	432a      	orrs	r2, r5
 80202c4:	f820 2b02 	strh.w	r2, [r0], #2
 80202c8:	e7bd      	b.n	8020246 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80202ca:	4a14      	ldr	r2, [pc, #80]	@ (802031c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80202cc:	42b0      	cmp	r0, r6
 80202ce:	d21f      	bcs.n	8020310 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80202d0:	eb00 050e 	add.w	r5, r0, lr
 80202d4:	42a8      	cmp	r0, r5
 80202d6:	4621      	mov	r1, r4
 80202d8:	f104 0403 	add.w	r4, r4, #3
 80202dc:	d210      	bcs.n	8020300 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80202de:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80202e2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80202e6:	00db      	lsls	r3, r3, #3
 80202e8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80202ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80202f0:	430b      	orrs	r3, r1
 80202f2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80202f6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80202fa:	f820 3b02 	strh.w	r3, [r0], #2
 80202fe:	e7e9      	b.n	80202d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020300:	4438      	add	r0, r7
 8020302:	eb01 040c 	add.w	r4, r1, ip
 8020306:	e7e1      	b.n	80202cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020308:	4438      	add	r0, r7
 802030a:	eb01 040c 	add.w	r4, r1, ip
 802030e:	e796      	b.n	802023e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020310:	4b03      	ldr	r3, [pc, #12]	@ (8020320 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020312:	6818      	ldr	r0, [r3, #0]
 8020314:	6803      	ldr	r3, [r0, #0]
 8020316:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020318:	4798      	blx	r3
 802031a:	e768      	b.n	80201ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 802031c:	fffff800 	.word	0xfffff800
 8020320:	20013f60 	.word	0x20013f60
 8020324:	20013f5a 	.word	0x20013f5a

08020328 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020328:	b4f0      	push	{r4, r5, r6, r7}
 802032a:	4616      	mov	r6, r2
 802032c:	2e01      	cmp	r6, #1
 802032e:	461c      	mov	r4, r3
 8020330:	460d      	mov	r5, r1
 8020332:	9a04      	ldr	r2, [sp, #16]
 8020334:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020338:	f89d 7018 	ldrb.w	r7, [sp, #24]
 802033c:	d012      	beq.n	8020364 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 802033e:	d303      	bcc.n	8020348 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020340:	2e02      	cmp	r6, #2
 8020342:	d00a      	beq.n	802035a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020344:	bcf0      	pop	{r4, r5, r6, r7}
 8020346:	4770      	bx	lr
 8020348:	6805      	ldr	r5, [r0, #0]
 802034a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 802034e:	68ed      	ldr	r5, [r5, #12]
 8020350:	4613      	mov	r3, r2
 8020352:	46ac      	mov	ip, r5
 8020354:	4622      	mov	r2, r4
 8020356:	bcf0      	pop	{r4, r5, r6, r7}
 8020358:	4760      	bx	ip
 802035a:	4621      	mov	r1, r4
 802035c:	4628      	mov	r0, r5
 802035e:	bcf0      	pop	{r4, r5, r6, r7}
 8020360:	f7ff bd94 	b.w	801fe8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020364:	4621      	mov	r1, r4
 8020366:	4628      	mov	r0, r5
 8020368:	bcf0      	pop	{r4, r5, r6, r7}
 802036a:	f7ff bee5 	b.w	8020138 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020370 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020374:	4681      	mov	r9, r0
 8020376:	b093      	sub	sp, #76	@ 0x4c
 8020378:	6810      	ldr	r0, [r2, #0]
 802037a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 802037e:	4f6d      	ldr	r7, [pc, #436]	@ (8020534 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020380:	4688      	mov	r8, r1
 8020382:	6851      	ldr	r1, [r2, #4]
 8020384:	ac0e      	add	r4, sp, #56	@ 0x38
 8020386:	c403      	stmia	r4!, {r0, r1}
 8020388:	6818      	ldr	r0, [r3, #0]
 802038a:	6859      	ldr	r1, [r3, #4]
 802038c:	ac10      	add	r4, sp, #64	@ 0x40
 802038e:	4616      	mov	r6, r2
 8020390:	c403      	stmia	r4!, {r0, r1}
 8020392:	a80e      	add	r0, sp, #56	@ 0x38
 8020394:	f7f6 fdf6 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020398:	4631      	mov	r1, r6
 802039a:	a810      	add	r0, sp, #64	@ 0x40
 802039c:	f7f6 fe1a 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80203a0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 80203a4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80203a8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 80203ac:	4e62      	ldr	r6, [pc, #392]	@ (8020538 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80203ae:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 80203b2:	6830      	ldr	r0, [r6, #0]
 80203b4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80203b8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80203bc:	4489      	add	r9, r1
 80203be:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 80203c2:	440a      	add	r2, r1
 80203c4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80203c8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80203cc:	4413      	add	r3, r2
 80203ce:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80203d2:	6803      	ldr	r3, [r0, #0]
 80203d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80203d6:	4798      	blx	r3
 80203d8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80203dc:	6830      	ldr	r0, [r6, #0]
 80203de:	d01d      	beq.n	802041c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80203e0:	2200      	movs	r2, #0
 80203e2:	6801      	ldr	r1, [r0, #0]
 80203e4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80203e8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80203ec:	220b      	movs	r2, #11
 80203ee:	9207      	str	r2, [sp, #28]
 80203f0:	883a      	ldrh	r2, [r7, #0]
 80203f2:	9206      	str	r2, [sp, #24]
 80203f4:	2201      	movs	r2, #1
 80203f6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80203fa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 80203fe:	9203      	str	r2, [sp, #12]
 8020400:	b2a4      	uxth	r4, r4
 8020402:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8020406:	9200      	str	r2, [sp, #0]
 8020408:	b2ad      	uxth	r5, r5
 802040a:	9502      	str	r5, [sp, #8]
 802040c:	9401      	str	r4, [sp, #4]
 802040e:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8020410:	4642      	mov	r2, r8
 8020412:	4649      	mov	r1, r9
 8020414:	47a0      	blx	r4
 8020416:	b013      	add	sp, #76	@ 0x4c
 8020418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802041c:	6803      	ldr	r3, [r0, #0]
 802041e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020420:	4798      	blx	r3
 8020422:	883b      	ldrh	r3, [r7, #0]
 8020424:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8020428:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 802042c:	fb03 1202 	mla	r2, r3, r2, r1
 8020430:	435d      	muls	r5, r3
 8020432:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020436:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 802043a:	920c      	str	r2, [sp, #48]	@ 0x30
 802043c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8020440:	1b12      	subs	r2, r2, r4
 8020442:	920d      	str	r2, [sp, #52]	@ 0x34
 8020444:	0062      	lsls	r2, r4, #1
 8020446:	1b1c      	subs	r4, r3, r4
 8020448:	0063      	lsls	r3, r4, #1
 802044a:	920a      	str	r2, [sp, #40]	@ 0x28
 802044c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802044e:	f04f 0e04 	mov.w	lr, #4
 8020452:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020454:	4298      	cmp	r0, r3
 8020456:	d266      	bcs.n	8020526 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020458:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802045a:	eb00 0b03 	add.w	fp, r0, r3
 802045e:	4558      	cmp	r0, fp
 8020460:	d25c      	bcs.n	802051c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020462:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020466:	fb1e e303 	smlabb	r3, lr, r3, lr
 802046a:	f858 2003 	ldr.w	r2, [r8, r3]
 802046e:	0e11      	lsrs	r1, r2, #24
 8020470:	d012      	beq.n	8020498 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020472:	29ff      	cmp	r1, #255	@ 0xff
 8020474:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020478:	d110      	bne.n	802049c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 802047a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 802047e:	d10d      	bne.n	802049c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020480:	0953      	lsrs	r3, r2, #5
 8020482:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8020486:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802048a:	f027 0707 	bic.w	r7, r7, #7
 802048e:	431f      	orrs	r7, r3
 8020490:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020494:	433a      	orrs	r2, r7
 8020496:	8002      	strh	r2, [r0, #0]
 8020498:	3002      	adds	r0, #2
 802049a:	e7e0      	b.n	802045e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 802049c:	fb0a f101 	mul.w	r1, sl, r1
 80204a0:	8806      	ldrh	r6, [r0, #0]
 80204a2:	1c4b      	adds	r3, r1, #1
 80204a4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80204a8:	1235      	asrs	r5, r6, #8
 80204aa:	10f4      	asrs	r4, r6, #3
 80204ac:	121b      	asrs	r3, r3, #8
 80204ae:	00f6      	lsls	r6, r6, #3
 80204b0:	b299      	uxth	r1, r3
 80204b2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80204b6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80204ba:	b2f6      	uxtb	r6, r6
 80204bc:	43db      	mvns	r3, r3
 80204be:	b2d2      	uxtb	r2, r2
 80204c0:	b2db      	uxtb	r3, r3
 80204c2:	fb1c fc01 	smulbb	ip, ip, r1
 80204c6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80204ca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80204ce:	fb12 f201 	smulbb	r2, r2, r1
 80204d2:	fb05 c503 	mla	r5, r5, r3, ip
 80204d6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80204da:	b2ff      	uxtb	r7, r7
 80204dc:	fb06 2203 	mla	r2, r6, r3, r2
 80204e0:	b2ad      	uxth	r5, r5
 80204e2:	fb17 f701 	smulbb	r7, r7, r1
 80204e6:	b292      	uxth	r2, r2
 80204e8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80204ec:	fb04 7403 	mla	r4, r4, r3, r7
 80204f0:	f105 0c01 	add.w	ip, r5, #1
 80204f4:	1c57      	adds	r7, r2, #1
 80204f6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80204fa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80204fe:	b2a4      	uxth	r4, r4
 8020500:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020504:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020508:	433d      	orrs	r5, r7
 802050a:	1c67      	adds	r7, r4, #1
 802050c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020510:	0964      	lsrs	r4, r4, #5
 8020512:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020516:	4325      	orrs	r5, r4
 8020518:	8005      	strh	r5, [r0, #0]
 802051a:	e7bd      	b.n	8020498 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 802051c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802051e:	4418      	add	r0, r3
 8020520:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020522:	4499      	add	r9, r3
 8020524:	e795      	b.n	8020452 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020526:	4b04      	ldr	r3, [pc, #16]	@ (8020538 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020528:	6818      	ldr	r0, [r3, #0]
 802052a:	6803      	ldr	r3, [r0, #0]
 802052c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802052e:	4798      	blx	r3
 8020530:	e771      	b.n	8020416 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020532:	bf00      	nop
 8020534:	20013f5a 	.word	0x20013f5a
 8020538:	20013f60 	.word	0x20013f60

0802053c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 802053c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020540:	b087      	sub	sp, #28
 8020542:	4680      	mov	r8, r0
 8020544:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8020548:	460d      	mov	r5, r1
 802054a:	4614      	mov	r4, r2
 802054c:	2e00      	cmp	r6, #0
 802054e:	f000 80b9 	beq.w	80206c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020552:	6810      	ldr	r0, [r2, #0]
 8020554:	6851      	ldr	r1, [r2, #4]
 8020556:	af02      	add	r7, sp, #8
 8020558:	c703      	stmia	r7!, {r0, r1}
 802055a:	6818      	ldr	r0, [r3, #0]
 802055c:	6859      	ldr	r1, [r3, #4]
 802055e:	af04      	add	r7, sp, #16
 8020560:	c703      	stmia	r7!, {r0, r1}
 8020562:	a802      	add	r0, sp, #8
 8020564:	f7f6 fd0e 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020568:	4621      	mov	r1, r4
 802056a:	a804      	add	r0, sp, #16
 802056c:	f7f6 fd32 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020570:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020574:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020578:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 802057c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020580:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020584:	eb08 0401 	add.w	r4, r8, r1
 8020588:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 802058c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020590:	440a      	add	r2, r1
 8020592:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020596:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802059a:	4413      	add	r3, r2
 802059c:	f8ad 3012 	strh.w	r3, [sp, #18]
 80205a0:	4b4a      	ldr	r3, [pc, #296]	@ (80206cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80205a2:	6818      	ldr	r0, [r3, #0]
 80205a4:	6803      	ldr	r3, [r0, #0]
 80205a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80205a8:	4798      	blx	r3
 80205aa:	4b49      	ldr	r3, [pc, #292]	@ (80206d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80205ac:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80205b0:	881a      	ldrh	r2, [r3, #0]
 80205b2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80205b6:	2eff      	cmp	r6, #255	@ 0xff
 80205b8:	fb02 c101 	mla	r1, r2, r1, ip
 80205bc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80205c0:	fb02 f207 	mul.w	r2, r2, r7
 80205c4:	f105 0104 	add.w	r1, r5, #4
 80205c8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80205cc:	461d      	mov	r5, r3
 80205ce:	d05a      	beq.n	8020686 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80205d0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80205d4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80205d8:	b2b6      	uxth	r6, r6
 80205da:	fa1f fe8e 	uxth.w	lr, lr
 80205de:	9301      	str	r3, [sp, #4]
 80205e0:	4282      	cmp	r2, r0
 80205e2:	d96a      	bls.n	80206ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80205e4:	eb00 0b0a 	add.w	fp, r0, sl
 80205e8:	4583      	cmp	fp, r0
 80205ea:	d940      	bls.n	802066e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80205ec:	f814 3b01 	ldrb.w	r3, [r4], #1
 80205f0:	8805      	ldrh	r5, [r0, #0]
 80205f2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80205f6:	122f      	asrs	r7, r5, #8
 80205f8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80205fc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020600:	fb17 f70e 	smulbb	r7, r7, lr
 8020604:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020608:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802060c:	00ed      	lsls	r5, r5, #3
 802060e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020612:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8020616:	10df      	asrs	r7, r3, #3
 8020618:	b2ed      	uxtb	r5, r5
 802061a:	00db      	lsls	r3, r3, #3
 802061c:	fa1f fc8c 	uxth.w	ip, ip
 8020620:	fb19 f90e 	smulbb	r9, r9, lr
 8020624:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020628:	b2db      	uxtb	r3, r3
 802062a:	fb15 f50e 	smulbb	r5, r5, lr
 802062e:	fb07 9706 	mla	r7, r7, r6, r9
 8020632:	fb03 5306 	mla	r3, r3, r6, r5
 8020636:	f10c 0901 	add.w	r9, ip, #1
 802063a:	b29b      	uxth	r3, r3
 802063c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020640:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8020644:	f103 0c01 	add.w	ip, r3, #1
 8020648:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802064c:	b2bf      	uxth	r7, r7
 802064e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020652:	ea4c 0c09 	orr.w	ip, ip, r9
 8020656:	f107 0901 	add.w	r9, r7, #1
 802065a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 802065e:	097f      	lsrs	r7, r7, #5
 8020660:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8020664:	ea4c 0c07 	orr.w	ip, ip, r7
 8020668:	f820 cb02 	strh.w	ip, [r0], #2
 802066c:	e7bc      	b.n	80205e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 802066e:	9b01      	ldr	r3, [sp, #4]
 8020670:	881b      	ldrh	r3, [r3, #0]
 8020672:	eba3 0308 	sub.w	r3, r3, r8
 8020676:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802067a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802067e:	eba3 0308 	sub.w	r3, r3, r8
 8020682:	441c      	add	r4, r3
 8020684:	e7ac      	b.n	80205e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8020686:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802068a:	4282      	cmp	r2, r0
 802068c:	d915      	bls.n	80206ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802068e:	eb00 060a 	add.w	r6, r0, sl
 8020692:	4286      	cmp	r6, r0
 8020694:	d906      	bls.n	80206a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8020696:	f814 3b01 	ldrb.w	r3, [r4], #1
 802069a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802069e:	f820 3b02 	strh.w	r3, [r0], #2
 80206a2:	e7f6      	b.n	8020692 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80206a4:	882b      	ldrh	r3, [r5, #0]
 80206a6:	eba3 0308 	sub.w	r3, r3, r8
 80206aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80206ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80206b2:	eba3 0308 	sub.w	r3, r3, r8
 80206b6:	441c      	add	r4, r3
 80206b8:	e7e7      	b.n	802068a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80206ba:	4b04      	ldr	r3, [pc, #16]	@ (80206cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80206bc:	6818      	ldr	r0, [r3, #0]
 80206be:	6803      	ldr	r3, [r0, #0]
 80206c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80206c2:	4798      	blx	r3
 80206c4:	b007      	add	sp, #28
 80206c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80206ca:	bf00      	nop
 80206cc:	20013f60 	.word	0x20013f60
 80206d0:	20013f5a 	.word	0x20013f5a

080206d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80206d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80206d8:	b091      	sub	sp, #68	@ 0x44
 80206da:	4680      	mov	r8, r0
 80206dc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80206e0:	460f      	mov	r7, r1
 80206e2:	4614      	mov	r4, r2
 80206e4:	2d00      	cmp	r5, #0
 80206e6:	d051      	beq.n	802078c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80206e8:	6810      	ldr	r0, [r2, #0]
 80206ea:	6851      	ldr	r1, [r2, #4]
 80206ec:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80208f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80206f0:	ae0c      	add	r6, sp, #48	@ 0x30
 80206f2:	c603      	stmia	r6!, {r0, r1}
 80206f4:	6818      	ldr	r0, [r3, #0]
 80206f6:	6859      	ldr	r1, [r3, #4]
 80206f8:	ae0e      	add	r6, sp, #56	@ 0x38
 80206fa:	c603      	stmia	r6!, {r0, r1}
 80206fc:	a80c      	add	r0, sp, #48	@ 0x30
 80206fe:	f7f6 fc41 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020702:	4621      	mov	r1, r4
 8020704:	a80e      	add	r0, sp, #56	@ 0x38
 8020706:	f7f6 fc65 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802070a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 802070e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8020712:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8020716:	f8d9 0000 	ldr.w	r0, [r9]
 802071a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 802071e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8020722:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020726:	eb08 0401 	add.w	r4, r8, r1
 802072a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 802072e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 80208f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8020732:	440a      	add	r2, r1
 8020734:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8020738:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 802073c:	4413      	add	r3, r2
 802073e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8020742:	6803      	ldr	r3, [r0, #0]
 8020744:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8020746:	4798      	blx	r3
 8020748:	f010 0f80 	tst.w	r0, #128	@ 0x80
 802074c:	f8d9 0000 	ldr.w	r0, [r9]
 8020750:	d01f      	beq.n	8020792 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8020752:	2200      	movs	r2, #0
 8020754:	6801      	ldr	r1, [r0, #0]
 8020756:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 802075a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802075e:	220b      	movs	r2, #11
 8020760:	9207      	str	r2, [sp, #28]
 8020762:	f8b8 2000 	ldrh.w	r2, [r8]
 8020766:	9206      	str	r2, [sp, #24]
 8020768:	2201      	movs	r2, #1
 802076a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 802076e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8020772:	9203      	str	r2, [sp, #12]
 8020774:	fa1f f28a 	uxth.w	r2, sl
 8020778:	9202      	str	r2, [sp, #8]
 802077a:	b2b6      	uxth	r6, r6
 802077c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8020780:	9200      	str	r2, [sp, #0]
 8020782:	9601      	str	r6, [sp, #4]
 8020784:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8020786:	463a      	mov	r2, r7
 8020788:	4621      	mov	r1, r4
 802078a:	47a8      	blx	r5
 802078c:	b011      	add	sp, #68	@ 0x44
 802078e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020792:	6803      	ldr	r3, [r0, #0]
 8020794:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020796:	4798      	blx	r3
 8020798:	f8b8 2000 	ldrh.w	r2, [r8]
 802079c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80207a0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80207a4:	2dff      	cmp	r5, #255	@ 0xff
 80207a6:	fb02 1303 	mla	r3, r2, r3, r1
 80207aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80207ae:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80207b2:	fb0a fa02 	mul.w	sl, sl, r2
 80207b6:	d062      	beq.n	802087e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80207b8:	ea6f 0c05 	mvn.w	ip, r5
 80207bc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80207c0:	930a      	str	r3, [sp, #40]	@ 0x28
 80207c2:	b2ad      	uxth	r5, r5
 80207c4:	fa5f fc8c 	uxtb.w	ip, ip
 80207c8:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80207cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80207ce:	4298      	cmp	r0, r3
 80207d0:	f080 8085 	bcs.w	80208de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80207d4:	eb00 0b09 	add.w	fp, r0, r9
 80207d8:	4558      	cmp	r0, fp
 80207da:	d246      	bcs.n	802086a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80207dc:	f814 eb01 	ldrb.w	lr, [r4], #1
 80207e0:	2303      	movs	r3, #3
 80207e2:	2204      	movs	r2, #4
 80207e4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80207e8:	eb07 0a0e 	add.w	sl, r7, lr
 80207ec:	8803      	ldrh	r3, [r0, #0]
 80207ee:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80207f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80207f6:	1219      	asrs	r1, r3, #8
 80207f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80207fc:	fb18 f805 	smulbb	r8, r8, r5
 8020800:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020804:	10da      	asrs	r2, r3, #3
 8020806:	fb01 810c 	mla	r1, r1, ip, r8
 802080a:	00db      	lsls	r3, r3, #3
 802080c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020810:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020814:	b2db      	uxtb	r3, r3
 8020816:	fb18 f805 	smulbb	r8, r8, r5
 802081a:	fb1e fe05 	smulbb	lr, lr, r5
 802081e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8020822:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8020826:	b289      	uxth	r1, r1
 8020828:	fb02 820c 	mla	r2, r2, ip, r8
 802082c:	fb03 e30c 	mla	r3, r3, ip, lr
 8020830:	b292      	uxth	r2, r2
 8020832:	b29b      	uxth	r3, r3
 8020834:	f101 0801 	add.w	r8, r1, #1
 8020838:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 802083c:	f103 0e01 	add.w	lr, r3, #1
 8020840:	f102 0801 	add.w	r8, r2, #1
 8020844:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8020848:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 802084c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020850:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020854:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8020858:	ea4e 0101 	orr.w	r1, lr, r1
 802085c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8020860:	ea41 0108 	orr.w	r1, r1, r8
 8020864:	f820 1b02 	strh.w	r1, [r0], #2
 8020868:	e7b6      	b.n	80207d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 802086a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802086c:	881b      	ldrh	r3, [r3, #0]
 802086e:	1b9b      	subs	r3, r3, r6
 8020870:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020874:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020878:	1b9b      	subs	r3, r3, r6
 802087a:	441c      	add	r4, r3
 802087c:	e7a6      	b.n	80207cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 802087e:	491b      	ldr	r1, [pc, #108]	@ (80208ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8020880:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8020884:	2203      	movs	r2, #3
 8020886:	2504      	movs	r5, #4
 8020888:	4550      	cmp	r0, sl
 802088a:	d228      	bcs.n	80208de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 802088c:	eb00 0c09 	add.w	ip, r0, r9
 8020890:	4560      	cmp	r0, ip
 8020892:	4623      	mov	r3, r4
 8020894:	d219      	bcs.n	80208ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8020896:	f893 e000 	ldrb.w	lr, [r3]
 802089a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 802089e:	eb07 0b0e 	add.w	fp, r7, lr
 80208a2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80208a6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80208aa:	f89b b001 	ldrb.w	fp, [fp, #1]
 80208ae:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80208b2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80208b6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80208ba:	ea43 030b 	orr.w	r3, r3, fp
 80208be:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80208c2:	3401      	adds	r4, #1
 80208c4:	f820 3b02 	strh.w	r3, [r0], #2
 80208c8:	e7e2      	b.n	8020890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80208ca:	f8b8 3000 	ldrh.w	r3, [r8]
 80208ce:	1b9b      	subs	r3, r3, r6
 80208d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80208d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80208d8:	1b9b      	subs	r3, r3, r6
 80208da:	441c      	add	r4, r3
 80208dc:	e7d4      	b.n	8020888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80208de:	4b04      	ldr	r3, [pc, #16]	@ (80208f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80208e0:	6818      	ldr	r0, [r3, #0]
 80208e2:	6803      	ldr	r3, [r0, #0]
 80208e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80208e6:	4798      	blx	r3
 80208e8:	e750      	b.n	802078c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80208ea:	bf00      	nop
 80208ec:	fffff800 	.word	0xfffff800
 80208f0:	20013f60 	.word	0x20013f60
 80208f4:	20013f5a 	.word	0x20013f5a

080208f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80208f8:	b4f0      	push	{r4, r5, r6, r7}
 80208fa:	460c      	mov	r4, r1
 80208fc:	4611      	mov	r1, r2
 80208fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020902:	780f      	ldrb	r7, [r1, #0]
 8020904:	784e      	ldrb	r6, [r1, #1]
 8020906:	2f01      	cmp	r7, #1
 8020908:	461a      	mov	r2, r3
 802090a:	9b04      	ldr	r3, [sp, #16]
 802090c:	d038      	beq.n	8020980 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 802090e:	d31f      	bcc.n	8020950 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8020910:	2f02      	cmp	r7, #2
 8020912:	d14d      	bne.n	80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020914:	2e03      	cmp	r6, #3
 8020916:	d84b      	bhi.n	80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020918:	e8df f006 	tbb	[pc, r6]
 802091c:	17140702 	.word	0x17140702
 8020920:	9504      	str	r5, [sp, #16]
 8020922:	4620      	mov	r0, r4
 8020924:	bcf0      	pop	{r4, r5, r6, r7}
 8020926:	f7ff be09 	b.w	802053c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802092a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 802092c:	2800      	cmp	r0, #0
 802092e:	d03f      	beq.n	80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020930:	6806      	ldr	r6, [r0, #0]
 8020932:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8020936:	68b5      	ldr	r5, [r6, #8]
 8020938:	4613      	mov	r3, r2
 802093a:	46ac      	mov	ip, r5
 802093c:	460a      	mov	r2, r1
 802093e:	4621      	mov	r1, r4
 8020940:	bcf0      	pop	{r4, r5, r6, r7}
 8020942:	4760      	bx	ip
 8020944:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8020948:	e7f0      	b.n	802092c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802094a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 802094e:	e7ed      	b.n	802092c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8020950:	2e03      	cmp	r6, #3
 8020952:	d82d      	bhi.n	80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020954:	e8df f006 	tbb	[pc, r6]
 8020958:	110e0702 	.word	0x110e0702
 802095c:	9504      	str	r5, [sp, #16]
 802095e:	4620      	mov	r0, r4
 8020960:	bcf0      	pop	{r4, r5, r6, r7}
 8020962:	f7ff bd05 	b.w	8020370 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8020966:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8020968:	b310      	cbz	r0, 80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802096a:	6806      	ldr	r6, [r0, #0]
 802096c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8020970:	68f5      	ldr	r5, [r6, #12]
 8020972:	e7e1      	b.n	8020938 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8020974:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8020978:	e7f6      	b.n	8020968 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 802097a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 802097e:	e7f3      	b.n	8020968 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8020980:	2e03      	cmp	r6, #3
 8020982:	d815      	bhi.n	80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020984:	e8df f006 	tbb	[pc, r6]
 8020988:	110e0702 	.word	0x110e0702
 802098c:	9504      	str	r5, [sp, #16]
 802098e:	4620      	mov	r0, r4
 8020990:	bcf0      	pop	{r4, r5, r6, r7}
 8020992:	f7ff be9f 	b.w	80206d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8020996:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8020998:	b150      	cbz	r0, 80209b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802099a:	6806      	ldr	r6, [r0, #0]
 802099c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80209a0:	6935      	ldr	r5, [r6, #16]
 80209a2:	e7c9      	b.n	8020938 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80209a4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80209a8:	e7f6      	b.n	8020998 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80209aa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80209ae:	e7f3      	b.n	8020998 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80209b0:	bcf0      	pop	{r4, r5, r6, r7}
 80209b2:	4770      	bx	lr

080209b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80209b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209b8:	4604      	mov	r4, r0
 80209ba:	b087      	sub	sp, #28
 80209bc:	6810      	ldr	r0, [r2, #0]
 80209be:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80209c2:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8020bfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80209c6:	460e      	mov	r6, r1
 80209c8:	6851      	ldr	r1, [r2, #4]
 80209ca:	ad02      	add	r5, sp, #8
 80209cc:	c503      	stmia	r5!, {r0, r1}
 80209ce:	6818      	ldr	r0, [r3, #0]
 80209d0:	6859      	ldr	r1, [r3, #4]
 80209d2:	ad04      	add	r5, sp, #16
 80209d4:	4617      	mov	r7, r2
 80209d6:	c503      	stmia	r5!, {r0, r1}
 80209d8:	a802      	add	r0, sp, #8
 80209da:	f7f6 fad3 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80209de:	4639      	mov	r1, r7
 80209e0:	a804      	add	r0, sp, #16
 80209e2:	f7f6 faf7 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80209e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80209ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80209ee:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80209f2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80209f6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80209fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80209fe:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8020a02:	440e      	add	r6, r1
 8020a04:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020a08:	440a      	add	r2, r1
 8020a0a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020a0e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020a12:	4413      	add	r3, r2
 8020a14:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020a18:	4b77      	ldr	r3, [pc, #476]	@ (8020bf8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8020a1a:	6818      	ldr	r0, [r3, #0]
 8020a1c:	6803      	ldr	r3, [r0, #0]
 8020a1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020a20:	4798      	blx	r3
 8020a22:	f8b9 b000 	ldrh.w	fp, [r9]
 8020a26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020a2a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020a2e:	fb0b 2303 	mla	r3, fp, r3, r2
 8020a32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020a36:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8020a3a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8020a3e:	fb05 f50b 	mul.w	r5, r5, fp
 8020a42:	9300      	str	r3, [sp, #0]
 8020a44:	d069      	beq.n	8020b1a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8020a46:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8020a4a:	4558      	cmp	r0, fp
 8020a4c:	f080 80cc 	bcs.w	8020be8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8020a50:	9b00      	ldr	r3, [sp, #0]
 8020a52:	18c3      	adds	r3, r0, r3
 8020a54:	9301      	str	r3, [sp, #4]
 8020a56:	4631      	mov	r1, r6
 8020a58:	9b01      	ldr	r3, [sp, #4]
 8020a5a:	4298      	cmp	r0, r3
 8020a5c:	d24f      	bcs.n	8020afe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8020a5e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8020a62:	2a00      	cmp	r2, #0
 8020a64:	d048      	beq.n	8020af8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8020a66:	fb0a f202 	mul.w	r2, sl, r2
 8020a6a:	1c53      	adds	r3, r2, #1
 8020a6c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020a70:	121b      	asrs	r3, r3, #8
 8020a72:	d041      	beq.n	8020af8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8020a74:	8802      	ldrh	r2, [r0, #0]
 8020a76:	f8b4 c000 	ldrh.w	ip, [r4]
 8020a7a:	b29e      	uxth	r6, r3
 8020a7c:	1215      	asrs	r5, r2, #8
 8020a7e:	43db      	mvns	r3, r3
 8020a80:	b2db      	uxtb	r3, r3
 8020a82:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020a86:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020a8a:	fb15 f503 	smulbb	r5, r5, r3
 8020a8e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8020a92:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020a96:	00d2      	lsls	r2, r2, #3
 8020a98:	fb07 5706 	mla	r7, r7, r6, r5
 8020a9c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8020aa0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020aa4:	b2d2      	uxtb	r2, r2
 8020aa6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020aaa:	b2bf      	uxth	r7, r7
 8020aac:	fb1e fe03 	smulbb	lr, lr, r3
 8020ab0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8020ab4:	fa5f fc8c 	uxtb.w	ip, ip
 8020ab8:	fb12 f203 	smulbb	r2, r2, r3
 8020abc:	fb05 e506 	mla	r5, r5, r6, lr
 8020ac0:	fb0c 2c06 	mla	ip, ip, r6, r2
 8020ac4:	f107 0e01 	add.w	lr, r7, #1
 8020ac8:	fa1f fc8c 	uxth.w	ip, ip
 8020acc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8020ad0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8020ad4:	f10c 0701 	add.w	r7, ip, #1
 8020ad8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020adc:	b2ad      	uxth	r5, r5
 8020ade:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020ae2:	ea47 070e 	orr.w	r7, r7, lr
 8020ae6:	f105 0e01 	add.w	lr, r5, #1
 8020aea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8020aee:	096d      	lsrs	r5, r5, #5
 8020af0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020af4:	432f      	orrs	r7, r5
 8020af6:	8007      	strh	r7, [r0, #0]
 8020af8:	3002      	adds	r0, #2
 8020afa:	3402      	adds	r4, #2
 8020afc:	e7ac      	b.n	8020a58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8020afe:	f8b9 3000 	ldrh.w	r3, [r9]
 8020b02:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8020b06:	eba3 0308 	sub.w	r3, r3, r8
 8020b0a:	eba6 0608 	sub.w	r6, r6, r8
 8020b0e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020b12:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020b16:	440e      	add	r6, r1
 8020b18:	e797      	b.n	8020a4a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8020b1a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8020b1e:	42a8      	cmp	r0, r5
 8020b20:	d262      	bcs.n	8020be8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8020b22:	9b00      	ldr	r3, [sp, #0]
 8020b24:	4631      	mov	r1, r6
 8020b26:	eb00 0b03 	add.w	fp, r0, r3
 8020b2a:	4558      	cmp	r0, fp
 8020b2c:	d24e      	bcs.n	8020bcc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8020b2e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020b32:	b12b      	cbz	r3, 8020b40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8020b34:	2bff      	cmp	r3, #255	@ 0xff
 8020b36:	f8b4 e000 	ldrh.w	lr, [r4]
 8020b3a:	d104      	bne.n	8020b46 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8020b3c:	f8a0 e000 	strh.w	lr, [r0]
 8020b40:	3002      	adds	r0, #2
 8020b42:	3402      	adds	r4, #2
 8020b44:	e7f1      	b.n	8020b2a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8020b46:	8802      	ldrh	r2, [r0, #0]
 8020b48:	b29f      	uxth	r7, r3
 8020b4a:	1216      	asrs	r6, r2, #8
 8020b4c:	43db      	mvns	r3, r3
 8020b4e:	b2db      	uxtb	r3, r3
 8020b50:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020b54:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020b58:	fb16 f603 	smulbb	r6, r6, r3
 8020b5c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8020b60:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020b64:	00d2      	lsls	r2, r2, #3
 8020b66:	fb0c 6c07 	mla	ip, ip, r7, r6
 8020b6a:	b2d2      	uxtb	r2, r2
 8020b6c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8020b70:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8020b74:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020b78:	fb1a fa03 	smulbb	sl, sl, r3
 8020b7c:	fa1f fc8c 	uxth.w	ip, ip
 8020b80:	fb12 f303 	smulbb	r3, r2, r3
 8020b84:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020b88:	fa5f fe8e 	uxtb.w	lr, lr
 8020b8c:	fb06 a607 	mla	r6, r6, r7, sl
 8020b90:	f10c 0201 	add.w	r2, ip, #1
 8020b94:	fb0e 3307 	mla	r3, lr, r7, r3
 8020b98:	b2b6      	uxth	r6, r6
 8020b9a:	b29b      	uxth	r3, r3
 8020b9c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020ba0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8020ba4:	f106 0a01 	add.w	sl, r6, #1
 8020ba8:	f103 0c01 	add.w	ip, r3, #1
 8020bac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020bb0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020bb4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020bb8:	0976      	lsrs	r6, r6, #5
 8020bba:	ea4c 0c02 	orr.w	ip, ip, r2
 8020bbe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020bc2:	ea4c 0c06 	orr.w	ip, ip, r6
 8020bc6:	f8a0 c000 	strh.w	ip, [r0]
 8020bca:	e7b9      	b.n	8020b40 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8020bcc:	f8b9 3000 	ldrh.w	r3, [r9]
 8020bd0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8020bd4:	eba3 0308 	sub.w	r3, r3, r8
 8020bd8:	eba6 0608 	sub.w	r6, r6, r8
 8020bdc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020be0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020be4:	440e      	add	r6, r1
 8020be6:	e79a      	b.n	8020b1e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8020be8:	4b03      	ldr	r3, [pc, #12]	@ (8020bf8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8020bea:	6818      	ldr	r0, [r3, #0]
 8020bec:	6803      	ldr	r3, [r0, #0]
 8020bee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020bf0:	4798      	blx	r3
 8020bf2:	b007      	add	sp, #28
 8020bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020bf8:	20013f60 	.word	0x20013f60
 8020bfc:	20013f5a 	.word	0x20013f5a

08020c00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8020c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c04:	b089      	sub	sp, #36	@ 0x24
 8020c06:	4607      	mov	r7, r0
 8020c08:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8020c0c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020c0e:	4688      	mov	r8, r1
 8020c10:	4692      	mov	sl, r2
 8020c12:	4699      	mov	r9, r3
 8020c14:	2e00      	cmp	r6, #0
 8020c16:	d048      	beq.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020c18:	4608      	mov	r0, r1
 8020c1a:	f7fa f81d 	bl	801ac58 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8020c1e:	4605      	mov	r5, r0
 8020c20:	4640      	mov	r0, r8
 8020c22:	f7fa f84d 	bl	801acc0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8020c26:	f8ad 000e 	strh.w	r0, [sp, #14]
 8020c2a:	4640      	mov	r0, r8
 8020c2c:	f8ad a008 	strh.w	sl, [sp, #8]
 8020c30:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020c34:	f8ad 900a 	strh.w	r9, [sp, #10]
 8020c38:	f7fa f900 	bl	801ae3c <_ZNK8touchgfx6Bitmap7getDataEv>
 8020c3c:	4605      	mov	r5, r0
 8020c3e:	4640      	mov	r0, r8
 8020c40:	f7fa f92c 	bl	801ae9c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8020c44:	4682      	mov	sl, r0
 8020c46:	4640      	mov	r0, r8
 8020c48:	f7fa f97c 	bl	801af44 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8020c4c:	2810      	cmp	r0, #16
 8020c4e:	d82c      	bhi.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020c50:	e8df f010 	tbh	[pc, r0, lsl #1]
 8020c54:	00ba00ca 	.word	0x00ba00ca
 8020c58:	002b0011 	.word	0x002b0011
 8020c5c:	002b002b 	.word	0x002b002b
 8020c60:	002b002b 	.word	0x002b002b
 8020c64:	002b002b 	.word	0x002b002b
 8020c68:	00c1002b 	.word	0x00c1002b
 8020c6c:	002b002b 	.word	0x002b002b
 8020c70:	002b0180 	.word	0x002b0180
 8020c74:	0173      	.short	0x0173
 8020c76:	4bbc      	ldr	r3, [pc, #752]	@ (8020f68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8020c78:	6818      	ldr	r0, [r3, #0]
 8020c7a:	6803      	ldr	r3, [r0, #0]
 8020c7c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8020c7e:	4798      	blx	r3
 8020c80:	2eff      	cmp	r6, #255	@ 0xff
 8020c82:	d101      	bne.n	8020c88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8020c84:	0683      	lsls	r3, r0, #26
 8020c86:	d506      	bpl.n	8020c96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8020c88:	4633      	mov	r3, r6
 8020c8a:	4622      	mov	r2, r4
 8020c8c:	a902      	add	r1, sp, #8
 8020c8e:	4628      	mov	r0, r5
 8020c90:	f7ff f8fc 	bl	801fe8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020c94:	e009      	b.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020c96:	4640      	mov	r0, r8
 8020c98:	f7fa f898 	bl	801adcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8020c9c:	b940      	cbnz	r0, 8020cb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8020c9e:	4623      	mov	r3, r4
 8020ca0:	aa02      	add	r2, sp, #8
 8020ca2:	4629      	mov	r1, r5
 8020ca4:	4638      	mov	r0, r7
 8020ca6:	f7ff f9d7 	bl	8020058 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8020caa:	b009      	add	sp, #36	@ 0x24
 8020cac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cb0:	f10d 0918 	add.w	r9, sp, #24
 8020cb4:	4641      	mov	r1, r8
 8020cb6:	4648      	mov	r0, r9
 8020cb8:	f7fa f836 	bl	801ad28 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8020cbc:	e899 0003 	ldmia.w	r9, {r0, r1}
 8020cc0:	f10d 0810 	add.w	r8, sp, #16
 8020cc4:	e888 0003 	stmia.w	r8, {r0, r1}
 8020cc8:	4640      	mov	r0, r8
 8020cca:	4621      	mov	r1, r4
 8020ccc:	f7ef fbee 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8020cd0:	4640      	mov	r0, r8
 8020cd2:	f7ef fc2e 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020cd6:	2800      	cmp	r0, #0
 8020cd8:	d1d6      	bne.n	8020c88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8020cda:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020cde:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8020ce2:	4293      	cmp	r3, r2
 8020ce4:	dd12      	ble.n	8020d0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8020ce6:	1a9b      	subs	r3, r3, r2
 8020ce8:	f9b4 0000 	ldrsh.w	r0, [r4]
 8020cec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020cf0:	f8ad 0018 	strh.w	r0, [sp, #24]
 8020cf4:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020cf8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8020cfc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020d00:	464a      	mov	r2, r9
 8020d02:	4633      	mov	r3, r6
 8020d04:	a902      	add	r1, sp, #8
 8020d06:	4628      	mov	r0, r5
 8020d08:	f7ff f8c0 	bl	801fe8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020d0c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020d10:	f9b4 2000 	ldrsh.w	r2, [r4]
 8020d14:	4293      	cmp	r3, r2
 8020d16:	dd12      	ble.n	8020d3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8020d18:	1a9b      	subs	r3, r3, r2
 8020d1a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8020d1e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8020d22:	f8ad 2018 	strh.w	r2, [sp, #24]
 8020d26:	f8ad 001a 	strh.w	r0, [sp, #26]
 8020d2a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020d2e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8020d32:	23ff      	movs	r3, #255	@ 0xff
 8020d34:	464a      	mov	r2, r9
 8020d36:	a902      	add	r1, sp, #8
 8020d38:	4628      	mov	r0, r5
 8020d3a:	f7ff f8a7 	bl	801fe8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020d3e:	4643      	mov	r3, r8
 8020d40:	aa02      	add	r2, sp, #8
 8020d42:	4629      	mov	r1, r5
 8020d44:	4638      	mov	r0, r7
 8020d46:	f7ff f987 	bl	8020058 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8020d4a:	88a2      	ldrh	r2, [r4, #4]
 8020d4c:	8823      	ldrh	r3, [r4, #0]
 8020d4e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8020d52:	4413      	add	r3, r2
 8020d54:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020d58:	440a      	add	r2, r1
 8020d5a:	b29b      	uxth	r3, r3
 8020d5c:	b292      	uxth	r2, r2
 8020d5e:	b211      	sxth	r1, r2
 8020d60:	b218      	sxth	r0, r3
 8020d62:	4288      	cmp	r0, r1
 8020d64:	dd12      	ble.n	8020d8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8020d66:	1a9b      	subs	r3, r3, r2
 8020d68:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020d6c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8020d70:	f8ad 1018 	strh.w	r1, [sp, #24]
 8020d74:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020d78:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020d7c:	23ff      	movs	r3, #255	@ 0xff
 8020d7e:	464a      	mov	r2, r9
 8020d80:	a902      	add	r1, sp, #8
 8020d82:	4628      	mov	r0, r5
 8020d84:	f8ad 601a 	strh.w	r6, [sp, #26]
 8020d88:	f7ff f880 	bl	801fe8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020d8c:	88e2      	ldrh	r2, [r4, #6]
 8020d8e:	8863      	ldrh	r3, [r4, #2]
 8020d90:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8020d94:	4413      	add	r3, r2
 8020d96:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020d9a:	440a      	add	r2, r1
 8020d9c:	b29b      	uxth	r3, r3
 8020d9e:	b292      	uxth	r2, r2
 8020da0:	b211      	sxth	r1, r2
 8020da2:	b218      	sxth	r0, r3
 8020da4:	4288      	cmp	r0, r1
 8020da6:	dd80      	ble.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020da8:	1a9b      	subs	r3, r3, r2
 8020daa:	f9b4 6000 	ldrsh.w	r6, [r4]
 8020dae:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020db2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020db6:	f8ad 6018 	strh.w	r6, [sp, #24]
 8020dba:	f8ad 101a 	strh.w	r1, [sp, #26]
 8020dbe:	f8ad 001c 	strh.w	r0, [sp, #28]
 8020dc2:	23ff      	movs	r3, #255	@ 0xff
 8020dc4:	464a      	mov	r2, r9
 8020dc6:	e761      	b.n	8020c8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8020dc8:	4633      	mov	r3, r6
 8020dca:	4622      	mov	r2, r4
 8020dcc:	a902      	add	r1, sp, #8
 8020dce:	4628      	mov	r0, r5
 8020dd0:	f7ff f9b2 	bl	8020138 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8020dd4:	e769      	b.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020dd6:	e9cd 4600 	strd	r4, r6, [sp]
 8020dda:	ab02      	add	r3, sp, #8
 8020ddc:	4652      	mov	r2, sl
 8020dde:	4629      	mov	r1, r5
 8020de0:	4638      	mov	r0, r7
 8020de2:	f7ff fd89 	bl	80208f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8020de6:	e760      	b.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020de8:	4640      	mov	r0, r8
 8020dea:	f7f9 ffef 	bl	801adcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8020dee:	b948      	cbnz	r0, 8020e04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8020df0:	683b      	ldr	r3, [r7, #0]
 8020df2:	e9cd 6000 	strd	r6, r0, [sp]
 8020df6:	aa02      	add	r2, sp, #8
 8020df8:	68de      	ldr	r6, [r3, #12]
 8020dfa:	4629      	mov	r1, r5
 8020dfc:	4623      	mov	r3, r4
 8020dfe:	4638      	mov	r0, r7
 8020e00:	47b0      	blx	r6
 8020e02:	e752      	b.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020e04:	f10d 0918 	add.w	r9, sp, #24
 8020e08:	4641      	mov	r1, r8
 8020e0a:	4648      	mov	r0, r9
 8020e0c:	f7f9 ff8c 	bl	801ad28 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8020e10:	e899 0003 	ldmia.w	r9, {r0, r1}
 8020e14:	f10d 0810 	add.w	r8, sp, #16
 8020e18:	e888 0003 	stmia.w	r8, {r0, r1}
 8020e1c:	4640      	mov	r0, r8
 8020e1e:	4621      	mov	r1, r4
 8020e20:	f7ef fb44 	bl	80104ac <_ZN8touchgfx4RectaNERKS0_>
 8020e24:	4640      	mov	r0, r8
 8020e26:	f7ef fb84 	bl	8010532 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020e2a:	b138      	cbz	r0, 8020e3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8020e2c:	9600      	str	r6, [sp, #0]
 8020e2e:	4623      	mov	r3, r4
 8020e30:	aa02      	add	r2, sp, #8
 8020e32:	4651      	mov	r1, sl
 8020e34:	4628      	mov	r0, r5
 8020e36:	f7ff fdbd 	bl	80209b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020e3a:	e736      	b.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020e3c:	683b      	ldr	r3, [r7, #0]
 8020e3e:	e9cd 6000 	strd	r6, r0, [sp]
 8020e42:	aa02      	add	r2, sp, #8
 8020e44:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8020e48:	4629      	mov	r1, r5
 8020e4a:	4643      	mov	r3, r8
 8020e4c:	4638      	mov	r0, r7
 8020e4e:	47d8      	blx	fp
 8020e50:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020e54:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8020e58:	4293      	cmp	r3, r2
 8020e5a:	dd13      	ble.n	8020e84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8020e5c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8020e60:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020e64:	f8ad 0018 	strh.w	r0, [sp, #24]
 8020e68:	1a9b      	subs	r3, r3, r2
 8020e6a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020e6e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8020e72:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020e76:	9600      	str	r6, [sp, #0]
 8020e78:	464b      	mov	r3, r9
 8020e7a:	aa02      	add	r2, sp, #8
 8020e7c:	4651      	mov	r1, sl
 8020e7e:	4628      	mov	r0, r5
 8020e80:	f7ff fd98 	bl	80209b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020e84:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020e88:	f9b4 2000 	ldrsh.w	r2, [r4]
 8020e8c:	4293      	cmp	r3, r2
 8020e8e:	dd13      	ble.n	8020eb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8020e90:	1a9b      	subs	r3, r3, r2
 8020e92:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8020e96:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8020e9a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8020e9e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8020ea2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020ea6:	f8ad 101e 	strh.w	r1, [sp, #30]
 8020eaa:	9600      	str	r6, [sp, #0]
 8020eac:	464b      	mov	r3, r9
 8020eae:	aa02      	add	r2, sp, #8
 8020eb0:	4651      	mov	r1, sl
 8020eb2:	4628      	mov	r0, r5
 8020eb4:	f7ff fd7e 	bl	80209b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020eb8:	88a2      	ldrh	r2, [r4, #4]
 8020eba:	8823      	ldrh	r3, [r4, #0]
 8020ebc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8020ec0:	4413      	add	r3, r2
 8020ec2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020ec6:	440a      	add	r2, r1
 8020ec8:	b29b      	uxth	r3, r3
 8020eca:	b292      	uxth	r2, r2
 8020ecc:	b211      	sxth	r1, r2
 8020ece:	b218      	sxth	r0, r3
 8020ed0:	4288      	cmp	r0, r1
 8020ed2:	dd13      	ble.n	8020efc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8020ed4:	1a9b      	subs	r3, r3, r2
 8020ed6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8020eda:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8020ede:	f8ad 1018 	strh.w	r1, [sp, #24]
 8020ee2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020ee6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8020eea:	9600      	str	r6, [sp, #0]
 8020eec:	464b      	mov	r3, r9
 8020eee:	aa02      	add	r2, sp, #8
 8020ef0:	4651      	mov	r1, sl
 8020ef2:	4628      	mov	r0, r5
 8020ef4:	f8ad 701a 	strh.w	r7, [sp, #26]
 8020ef8:	f7ff fd5c 	bl	80209b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020efc:	88e2      	ldrh	r2, [r4, #6]
 8020efe:	8863      	ldrh	r3, [r4, #2]
 8020f00:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8020f04:	4413      	add	r3, r2
 8020f06:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8020f0a:	440a      	add	r2, r1
 8020f0c:	b29b      	uxth	r3, r3
 8020f0e:	b292      	uxth	r2, r2
 8020f10:	b211      	sxth	r1, r2
 8020f12:	b218      	sxth	r0, r3
 8020f14:	4288      	cmp	r0, r1
 8020f16:	f77f aec8 	ble.w	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020f1a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020f1e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020f22:	f8ad 7018 	strh.w	r7, [sp, #24]
 8020f26:	1a9b      	subs	r3, r3, r2
 8020f28:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020f2c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8020f30:	f8ad 001c 	strh.w	r0, [sp, #28]
 8020f34:	9600      	str	r6, [sp, #0]
 8020f36:	464b      	mov	r3, r9
 8020f38:	e77a      	b.n	8020e30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8020f3a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8020f3e:	2800      	cmp	r0, #0
 8020f40:	f43f aeb3 	beq.w	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020f44:	6803      	ldr	r3, [r0, #0]
 8020f46:	9600      	str	r6, [sp, #0]
 8020f48:	68de      	ldr	r6, [r3, #12]
 8020f4a:	4623      	mov	r3, r4
 8020f4c:	aa02      	add	r2, sp, #8
 8020f4e:	4629      	mov	r1, r5
 8020f50:	47b0      	blx	r6
 8020f52:	e6aa      	b.n	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020f54:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8020f58:	2800      	cmp	r0, #0
 8020f5a:	f43f aea6 	beq.w	8020caa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020f5e:	6803      	ldr	r3, [r0, #0]
 8020f60:	9600      	str	r6, [sp, #0]
 8020f62:	689e      	ldr	r6, [r3, #8]
 8020f64:	e7f1      	b.n	8020f4a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8020f66:	bf00      	nop
 8020f68:	20013f60 	.word	0x20013f60

08020f6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8020f6c:	b180      	cbz	r0, 8020f90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8020f6e:	2903      	cmp	r1, #3
 8020f70:	d81c      	bhi.n	8020fac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8020f72:	e8df f001 	tbb	[pc, r1]
 8020f76:	1d02      	.short	0x1d02
 8020f78:	1f08      	.short	0x1f08
 8020f7a:	4b10      	ldr	r3, [pc, #64]	@ (8020fbc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020f7c:	8818      	ldrh	r0, [r3, #0]
 8020f7e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020f82:	4240      	negs	r0, r0
 8020f84:	4770      	bx	lr
 8020f86:	4b0d      	ldr	r3, [pc, #52]	@ (8020fbc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020f88:	8818      	ldrh	r0, [r3, #0]
 8020f8a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020f8e:	4770      	bx	lr
 8020f90:	2903      	cmp	r1, #3
 8020f92:	d80b      	bhi.n	8020fac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8020f94:	a301      	add	r3, pc, #4	@ (adr r3, 8020f9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8020f96:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8020f9a:	bf00      	nop
 8020f9c:	08020fb1 	.word	0x08020fb1
 8020fa0:	08020f87 	.word	0x08020f87
 8020fa4:	08020fb5 	.word	0x08020fb5
 8020fa8:	08020f7b 	.word	0x08020f7b
 8020fac:	2000      	movs	r0, #0
 8020fae:	4770      	bx	lr
 8020fb0:	2001      	movs	r0, #1
 8020fb2:	4770      	bx	lr
 8020fb4:	f04f 30ff 	mov.w	r0, #4294967295
 8020fb8:	4770      	bx	lr
 8020fba:	bf00      	nop
 8020fbc:	20013f5a 	.word	0x20013f5a

08020fc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8020fc0:	b180      	cbz	r0, 8020fe4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8020fc2:	2903      	cmp	r1, #3
 8020fc4:	d81c      	bhi.n	8021000 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8020fc6:	e8df f001 	tbb	[pc, r1]
 8020fca:	021d      	.short	0x021d
 8020fcc:	071f      	.short	0x071f
 8020fce:	4b10      	ldr	r3, [pc, #64]	@ (8021010 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020fd0:	8818      	ldrh	r0, [r3, #0]
 8020fd2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020fd6:	4770      	bx	lr
 8020fd8:	4b0d      	ldr	r3, [pc, #52]	@ (8021010 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020fda:	8818      	ldrh	r0, [r3, #0]
 8020fdc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020fe0:	4240      	negs	r0, r0
 8020fe2:	4770      	bx	lr
 8020fe4:	2903      	cmp	r1, #3
 8020fe6:	d80b      	bhi.n	8021000 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8020fe8:	a301      	add	r3, pc, #4	@ (adr r3, 8020ff0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8020fea:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8020fee:	bf00      	nop
 8020ff0:	08020fcf 	.word	0x08020fcf
 8020ff4:	08021009 	.word	0x08021009
 8020ff8:	08020fd9 	.word	0x08020fd9
 8020ffc:	08021005 	.word	0x08021005
 8021000:	2000      	movs	r0, #0
 8021002:	4770      	bx	lr
 8021004:	2001      	movs	r0, #1
 8021006:	4770      	bx	lr
 8021008:	f04f 30ff 	mov.w	r0, #4294967295
 802100c:	4770      	bx	lr
 802100e:	bf00      	nop
 8021010:	20013f5a 	.word	0x20013f5a

08021014 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021018:	b099      	sub	sp, #100	@ 0x64
 802101a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802101c:	a914      	add	r1, sp, #80	@ 0x50
 802101e:	e881 000c 	stmia.w	r1, {r2, r3}
 8021022:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8021026:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 802102a:	f891 900d 	ldrb.w	r9, [r1, #13]
 802102e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021030:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8021034:	9310      	str	r3, [sp, #64]	@ 0x40
 8021036:	ea4f 1749 	mov.w	r7, r9, lsl #5
 802103a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 802103e:	930c      	str	r3, [sp, #48]	@ 0x30
 8021040:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8021044:	798f      	ldrb	r7, [r1, #6]
 8021046:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 802104a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 802104e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8021052:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 8021056:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 802105a:	431f      	orrs	r7, r3
 802105c:	f000 8195 	beq.w	802138a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021060:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021064:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8021068:	f891 9007 	ldrb.w	r9, [r1, #7]
 802106c:	ea59 0903 	orrs.w	r9, r9, r3
 8021070:	f000 818b 	beq.w	802138a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021074:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021078:	b29b      	uxth	r3, r3
 802107a:	2d00      	cmp	r5, #0
 802107c:	f000 812e 	beq.w	80212dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8021080:	1aed      	subs	r5, r5, r3
 8021082:	b2ad      	uxth	r5, r5
 8021084:	042b      	lsls	r3, r5, #16
 8021086:	d502      	bpl.n	802108e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021088:	1b64      	subs	r4, r4, r5
 802108a:	b224      	sxth	r4, r4
 802108c:	2500      	movs	r5, #0
 802108e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8021092:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8021096:	428c      	cmp	r4, r1
 8021098:	b28b      	uxth	r3, r1
 802109a:	bfbf      	itttt	lt
 802109c:	18ed      	addlt	r5, r5, r3
 802109e:	1b2c      	sublt	r4, r5, r4
 80210a0:	b2a5      	uxthlt	r5, r4
 80210a2:	460c      	movlt	r4, r1
 80210a4:	8891      	ldrh	r1, [r2, #4]
 80210a6:	440b      	add	r3, r1
 80210a8:	b21b      	sxth	r3, r3
 80210aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80210ac:	88d3      	ldrh	r3, [r2, #6]
 80210ae:	8852      	ldrh	r2, [r2, #2]
 80210b0:	4413      	add	r3, r2
 80210b2:	b21b      	sxth	r3, r3
 80210b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80210b6:	4bbe      	ldr	r3, [pc, #760]	@ (80213b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80210b8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80210ba:	f893 b000 	ldrb.w	fp, [r3]
 80210be:	f10b 3cff 	add.w	ip, fp, #4294967295
 80210c2:	f1dc 0300 	rsbs	r3, ip, #0
 80210c6:	eb43 030c 	adc.w	r3, r3, ip
 80210ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80210cc:	4621      	mov	r1, r4
 80210ce:	4653      	mov	r3, sl
 80210d0:	a814      	add	r0, sp, #80	@ 0x50
 80210d2:	f7f5 fdcc 	bl	8016c6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80210d6:	4621      	mov	r1, r4
 80210d8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80210dc:	4653      	mov	r3, sl
 80210de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80210e0:	a814      	add	r0, sp, #80	@ 0x50
 80210e2:	f7f5 fde1 	bl	8016ca8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80210e6:	a918      	add	r1, sp, #96	@ 0x60
 80210e8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80210ec:	a817      	add	r0, sp, #92	@ 0x5c
 80210ee:	f7f5 ff07 	bl	8016f00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80210f2:	f1ba 0f00 	cmp.w	sl, #0
 80210f6:	f040 80f4 	bne.w	80212e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80210fa:	f1bb 0f01 	cmp.w	fp, #1
 80210fe:	f040 80f8 	bne.w	80212f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021102:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021104:	2b00      	cmp	r3, #0
 8021106:	f040 8145 	bne.w	8021394 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 802110a:	b2ba      	uxth	r2, r7
 802110c:	b905      	cbnz	r5, 8021110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 802110e:	b16e      	cbz	r6, 802112c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021110:	fb06 5302 	mla	r3, r6, r2, r5
 8021114:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8021116:	fb08 f303 	mul.w	r3, r8, r3
 802111a:	4631      	mov	r1, r6
 802111c:	f003 0607 	and.w	r6, r3, #7
 8021120:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021124:	9328      	str	r3, [sp, #160]	@ 0xa0
 8021126:	eba9 0301 	sub.w	r3, r9, r1
 802112a:	930a      	str	r3, [sp, #40]	@ 0x28
 802112c:	4651      	mov	r1, sl
 802112e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8021130:	f7ff ff1c 	bl	8020f6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021134:	4681      	mov	r9, r0
 8021136:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8021138:	f7ff ff42 	bl	8020fc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 802113c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802113e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021140:	eba3 0a01 	sub.w	sl, r3, r1
 8021144:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021146:	459a      	cmp	sl, r3
 8021148:	bfa8      	it	ge
 802114a:	469a      	movge	sl, r3
 802114c:	f1ba 0f00 	cmp.w	sl, #0
 8021150:	4683      	mov	fp, r0
 8021152:	f340 811a 	ble.w	802138a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021156:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021158:	1b64      	subs	r4, r4, r5
 802115a:	1b1c      	subs	r4, r3, r4
 802115c:	42bc      	cmp	r4, r7
 802115e:	bfd4      	ite	le
 8021160:	ebc5 0504 	rsble	r5, r5, r4
 8021164:	ebc5 0507 	rsbgt	r5, r5, r7
 8021168:	2d00      	cmp	r5, #0
 802116a:	f340 810e 	ble.w	802138a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802116e:	1b52      	subs	r2, r2, r5
 8021170:	fb08 f302 	mul.w	r3, r8, r2
 8021174:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021176:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021178:	2b00      	cmp	r3, #0
 802117a:	f040 8116 	bne.w	80213aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 802117e:	4b8d      	ldr	r3, [pc, #564]	@ (80213b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021180:	6818      	ldr	r0, [r3, #0]
 8021182:	6803      	ldr	r3, [r0, #0]
 8021184:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021186:	4798      	blx	r3
 8021188:	2301      	movs	r3, #1
 802118a:	fa03 f308 	lsl.w	r3, r3, r8
 802118e:	4a8a      	ldr	r2, [pc, #552]	@ (80213b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021190:	3b01      	subs	r3, #1
 8021192:	b2db      	uxtb	r3, r3
 8021194:	8811      	ldrh	r1, [r2, #0]
 8021196:	930e      	str	r3, [sp, #56]	@ 0x38
 8021198:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 802119c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 80211a0:	fb01 2303 	mla	r3, r1, r3, r2
 80211a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80211a8:	930a      	str	r3, [sp, #40]	@ 0x28
 80211aa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80211ac:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80211b0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80211b2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80211b4:	0a19      	lsrs	r1, r3, #8
 80211b6:	b2cb      	uxtb	r3, r1
 80211b8:	9312      	str	r3, [sp, #72]	@ 0x48
 80211ba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80211bc:	b2db      	uxtb	r3, r3
 80211be:	9311      	str	r3, [sp, #68]	@ 0x44
 80211c0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80211c2:	095a      	lsrs	r2, r3, #5
 80211c4:	4b7d      	ldr	r3, [pc, #500]	@ (80213bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80211c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80211ca:	400b      	ands	r3, r1
 80211cc:	4313      	orrs	r3, r2
 80211ce:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80211d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80211d4:	4313      	orrs	r3, r2
 80211d6:	b29b      	uxth	r3, r3
 80211d8:	9310      	str	r3, [sp, #64]	@ 0x40
 80211da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80211dc:	781a      	ldrb	r2, [r3, #0]
 80211de:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80211e2:	4132      	asrs	r2, r6
 80211e4:	fb05 b919 	mls	r9, r5, r9, fp
 80211e8:	fb03 fb05 	mul.w	fp, r3, r5
 80211ec:	b2d2      	uxtb	r2, r2
 80211ee:	930d      	str	r3, [sp, #52]	@ 0x34
 80211f0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80211f4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80211f8:	f0c0 80f5 	bcc.w	80213e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80211fc:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8021200:	46ae      	mov	lr, r5
 8021202:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021206:	f0c0 80dd 	bcc.w	80213c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 802120a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802120c:	4013      	ands	r3, r2
 802120e:	d055      	beq.n	80212bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021210:	20ff      	movs	r0, #255	@ 0xff
 8021212:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8021214:	fb90 f1f1 	sdiv	r1, r0, r1
 8021218:	434b      	muls	r3, r1
 802121a:	2bfe      	cmp	r3, #254	@ 0xfe
 802121c:	dd03      	ble.n	8021226 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 802121e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8021220:	4281      	cmp	r1, r0
 8021222:	f000 80cd 	beq.w	80213c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021226:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8021228:	f8bc 4000 	ldrh.w	r4, [ip]
 802122c:	fb11 f303 	smulbb	r3, r1, r3
 8021230:	b29b      	uxth	r3, r3
 8021232:	1c59      	adds	r1, r3, #1
 8021234:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021238:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802123c:	b29f      	uxth	r7, r3
 802123e:	43db      	mvns	r3, r3
 8021240:	b2db      	uxtb	r3, r3
 8021242:	9309      	str	r3, [sp, #36]	@ 0x24
 8021244:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021246:	1220      	asrs	r0, r4, #8
 8021248:	fb13 f907 	smulbb	r9, r3, r7
 802124c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021250:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021252:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021256:	fb00 9003 	mla	r0, r0, r3, r9
 802125a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802125c:	10e1      	asrs	r1, r4, #3
 802125e:	fb13 f907 	smulbb	r9, r3, r7
 8021262:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021266:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021268:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 802126c:	fb01 9103 	mla	r1, r1, r3, r9
 8021270:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021272:	00e4      	lsls	r4, r4, #3
 8021274:	fb13 f707 	smulbb	r7, r3, r7
 8021278:	b2e4      	uxtb	r4, r4
 802127a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802127c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021280:	fb04 7403 	mla	r4, r4, r3, r7
 8021284:	b280      	uxth	r0, r0
 8021286:	b2a4      	uxth	r4, r4
 8021288:	1c43      	adds	r3, r0, #1
 802128a:	f104 0901 	add.w	r9, r4, #1
 802128e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021292:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021296:	b289      	uxth	r1, r1
 8021298:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 802129c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80212a0:	ea49 0000 	orr.w	r0, r9, r0
 80212a4:	f101 0901 	add.w	r9, r1, #1
 80212a8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80212ac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80212b0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80212b4:	ea40 0009 	orr.w	r0, r0, r9
 80212b8:	f8ac 0000 	strh.w	r0, [ip]
 80212bc:	4446      	add	r6, r8
 80212be:	b2b6      	uxth	r6, r6
 80212c0:	2e07      	cmp	r6, #7
 80212c2:	bf81      	itttt	hi
 80212c4:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 80212c6:	785a      	ldrbhi	r2, [r3, #1]
 80212c8:	3301      	addhi	r3, #1
 80212ca:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 80212cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80212ce:	bf9a      	itte	ls
 80212d0:	fa42 f208 	asrls.w	r2, r2, r8
 80212d4:	b2d2      	uxtbls	r2, r2
 80212d6:	2600      	movhi	r6, #0
 80212d8:	449c      	add	ip, r3
 80212da:	e792      	b.n	8021202 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80212dc:	441c      	add	r4, r3
 80212de:	b224      	sxth	r4, r4
 80212e0:	e6d5      	b.n	802108e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80212e2:	f1ba 0f01 	cmp.w	sl, #1
 80212e6:	f47f af0c 	bne.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80212ea:	f1bb 0f01 	cmp.w	fp, #1
 80212ee:	f47f af08 	bne.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80212f2:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 80213b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80212f6:	f8db 0000 	ldr.w	r0, [fp]
 80212fa:	6803      	ldr	r3, [r0, #0]
 80212fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80212fe:	4798      	blx	r3
 8021300:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8021304:	465a      	mov	r2, fp
 8021306:	d006      	beq.n	8021316 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021308:	f1b8 0f04 	cmp.w	r8, #4
 802130c:	d140      	bne.n	8021390 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 802130e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021310:	3300      	adds	r3, #0
 8021312:	bf18      	it	ne
 8021314:	2301      	movne	r3, #1
 8021316:	0580      	lsls	r0, r0, #22
 8021318:	d56e      	bpl.n	80213f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 802131a:	f1b8 0f08 	cmp.w	r8, #8
 802131e:	d16b      	bne.n	80213f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021320:	2b00      	cmp	r3, #0
 8021322:	bf0c      	ite	eq
 8021324:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8021328:	f44f 7180 	movne.w	r1, #256	@ 0x100
 802132c:	2d00      	cmp	r5, #0
 802132e:	f47f aee8 	bne.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021332:	2e00      	cmp	r6, #0
 8021334:	f47f aee5 	bne.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021338:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802133a:	19e3      	adds	r3, r4, r7
 802133c:	4283      	cmp	r3, r0
 802133e:	f73f aee0 	bgt.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021342:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021344:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8021346:	444b      	add	r3, r9
 8021348:	4283      	cmp	r3, r0
 802134a:	f73f aeda 	bgt.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802134e:	6810      	ldr	r0, [r2, #0]
 8021350:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8021354:	6804      	ldr	r4, [r0, #0]
 8021356:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 802135a:	b2bf      	uxth	r7, r7
 802135c:	f1b8 0f08 	cmp.w	r8, #8
 8021360:	f04f 0500 	mov.w	r5, #0
 8021364:	bf18      	it	ne
 8021366:	3701      	addne	r7, #1
 8021368:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802136c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802136e:	9104      	str	r1, [sp, #16]
 8021370:	bf18      	it	ne
 8021372:	f027 0701 	bicne.w	r7, r7, #1
 8021376:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8021378:	bf18      	it	ne
 802137a:	b2bf      	uxthne	r7, r7
 802137c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021380:	e9cd 7900 	strd	r7, r9, [sp]
 8021384:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8021386:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8021388:	47a0      	blx	r4
 802138a:	b019      	add	sp, #100	@ 0x64
 802138c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021390:	2300      	movs	r3, #0
 8021392:	e7c0      	b.n	8021316 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021394:	2208      	movs	r2, #8
 8021396:	fb92 f3f8 	sdiv	r3, r2, r8
 802139a:	1e5a      	subs	r2, r3, #1
 802139c:	443a      	add	r2, r7
 802139e:	fb92 f2f3 	sdiv	r2, r2, r3
 80213a2:	fb12 f203 	smulbb	r2, r2, r3
 80213a6:	b292      	uxth	r2, r2
 80213a8:	e6b0      	b.n	802110c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80213aa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80213ac:	e6ec      	b.n	8021188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80213ae:	bf00      	nop
 80213b0:	20013f58 	.word	0x20013f58
 80213b4:	20013f60 	.word	0x20013f60
 80213b8:	20013f5a 	.word	0x20013f5a
 80213bc:	00fff800 	.word	0x00fff800
 80213c0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80213c2:	e779      	b.n	80212b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80213c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80213c6:	b153      	cbz	r3, 80213de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80213c8:	441e      	add	r6, r3
 80213ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80213cc:	b2b6      	uxth	r6, r6
 80213ce:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80213d2:	f006 0607 	and.w	r6, r6, #7
 80213d6:	781a      	ldrb	r2, [r3, #0]
 80213d8:	9328      	str	r3, [sp, #160]	@ 0xa0
 80213da:	4132      	asrs	r2, r6
 80213dc:	b2d2      	uxtb	r2, r2
 80213de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80213e0:	445b      	add	r3, fp
 80213e2:	930a      	str	r3, [sp, #40]	@ 0x28
 80213e4:	e706      	b.n	80211f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80213e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80213e8:	2b00      	cmp	r3, #0
 80213ea:	d1ce      	bne.n	802138a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80213ec:	4b05      	ldr	r3, [pc, #20]	@ (8021404 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80213ee:	6818      	ldr	r0, [r3, #0]
 80213f0:	6803      	ldr	r3, [r0, #0]
 80213f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80213f4:	4798      	blx	r3
 80213f6:	e7c8      	b.n	802138a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80213f8:	2b00      	cmp	r3, #0
 80213fa:	f43f ae82 	beq.w	8021102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80213fe:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8021402:	e793      	b.n	802132c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021404:	20013f60 	.word	0x20013f60

08021408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021408:	b538      	push	{r3, r4, r5, lr}
 802140a:	4c15      	ldr	r4, [pc, #84]	@ (8021460 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 802140c:	7823      	ldrb	r3, [r4, #0]
 802140e:	f3bf 8f5b 	dmb	ish
 8021412:	07da      	lsls	r2, r3, #31
 8021414:	4605      	mov	r5, r0
 8021416:	d40b      	bmi.n	8021430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021418:	4620      	mov	r0, r4
 802141a:	f008 fc67 	bl	8029cec <__cxa_guard_acquire>
 802141e:	b138      	cbz	r0, 8021430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021420:	4620      	mov	r0, r4
 8021422:	f008 fc6f 	bl	8029d04 <__cxa_guard_release>
 8021426:	4a0f      	ldr	r2, [pc, #60]	@ (8021464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021428:	490f      	ldr	r1, [pc, #60]	@ (8021468 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 802142a:	4810      	ldr	r0, [pc, #64]	@ (802146c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 802142c:	f008 fc57 	bl	8029cde <__aeabi_atexit>
 8021430:	4c0f      	ldr	r4, [pc, #60]	@ (8021470 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021432:	7823      	ldrb	r3, [r4, #0]
 8021434:	f3bf 8f5b 	dmb	ish
 8021438:	07db      	lsls	r3, r3, #31
 802143a:	d40b      	bmi.n	8021454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 802143c:	4620      	mov	r0, r4
 802143e:	f008 fc55 	bl	8029cec <__cxa_guard_acquire>
 8021442:	b138      	cbz	r0, 8021454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021444:	4620      	mov	r0, r4
 8021446:	f008 fc5d 	bl	8029d04 <__cxa_guard_release>
 802144a:	4a06      	ldr	r2, [pc, #24]	@ (8021464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 802144c:	4909      	ldr	r1, [pc, #36]	@ (8021474 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802144e:	480a      	ldr	r0, [pc, #40]	@ (8021478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021450:	f008 fc45 	bl	8029cde <__aeabi_atexit>
 8021454:	4b05      	ldr	r3, [pc, #20]	@ (802146c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021456:	616b      	str	r3, [r5, #20]
 8021458:	4b07      	ldr	r3, [pc, #28]	@ (8021478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802145a:	61ab      	str	r3, [r5, #24]
 802145c:	bd38      	pop	{r3, r4, r5, pc}
 802145e:	bf00      	nop
 8021460:	20014044 	.word	0x20014044
 8021464:	20000000 	.word	0x20000000
 8021468:	0801d5bd 	.word	0x0801d5bd
 802146c:	200000d0 	.word	0x200000d0
 8021470:	20014048 	.word	0x20014048
 8021474:	0801d5bb 	.word	0x0801d5bb
 8021478:	200000d4 	.word	0x200000d4

0802147c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 802147c:	b538      	push	{r3, r4, r5, lr}
 802147e:	4c15      	ldr	r4, [pc, #84]	@ (80214d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021480:	7823      	ldrb	r3, [r4, #0]
 8021482:	f3bf 8f5b 	dmb	ish
 8021486:	07da      	lsls	r2, r3, #31
 8021488:	4605      	mov	r5, r0
 802148a:	d40b      	bmi.n	80214a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 802148c:	4620      	mov	r0, r4
 802148e:	f008 fc2d 	bl	8029cec <__cxa_guard_acquire>
 8021492:	b138      	cbz	r0, 80214a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021494:	4620      	mov	r0, r4
 8021496:	f008 fc35 	bl	8029d04 <__cxa_guard_release>
 802149a:	4a0f      	ldr	r2, [pc, #60]	@ (80214d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802149c:	490f      	ldr	r1, [pc, #60]	@ (80214dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 802149e:	4810      	ldr	r0, [pc, #64]	@ (80214e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80214a0:	f008 fc1d 	bl	8029cde <__aeabi_atexit>
 80214a4:	4c0f      	ldr	r4, [pc, #60]	@ (80214e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80214a6:	7823      	ldrb	r3, [r4, #0]
 80214a8:	f3bf 8f5b 	dmb	ish
 80214ac:	07db      	lsls	r3, r3, #31
 80214ae:	d40b      	bmi.n	80214c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80214b0:	4620      	mov	r0, r4
 80214b2:	f008 fc1b 	bl	8029cec <__cxa_guard_acquire>
 80214b6:	b138      	cbz	r0, 80214c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80214b8:	4620      	mov	r0, r4
 80214ba:	f008 fc23 	bl	8029d04 <__cxa_guard_release>
 80214be:	4a06      	ldr	r2, [pc, #24]	@ (80214d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80214c0:	4909      	ldr	r1, [pc, #36]	@ (80214e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80214c2:	480a      	ldr	r0, [pc, #40]	@ (80214ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80214c4:	f008 fc0b 	bl	8029cde <__aeabi_atexit>
 80214c8:	4b05      	ldr	r3, [pc, #20]	@ (80214e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80214ca:	60eb      	str	r3, [r5, #12]
 80214cc:	4b07      	ldr	r3, [pc, #28]	@ (80214ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80214ce:	612b      	str	r3, [r5, #16]
 80214d0:	bd38      	pop	{r3, r4, r5, pc}
 80214d2:	bf00      	nop
 80214d4:	2001401c 	.word	0x2001401c
 80214d8:	20000000 	.word	0x20000000
 80214dc:	0801d5c1 	.word	0x0801d5c1
 80214e0:	200000a8 	.word	0x200000a8
 80214e4:	20014020 	.word	0x20014020
 80214e8:	0801d5bf 	.word	0x0801d5bf
 80214ec:	200000ac 	.word	0x200000ac

080214f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80214f0:	b510      	push	{r4, lr}
 80214f2:	4604      	mov	r4, r0
 80214f4:	f7ff ff88 	bl	8021408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80214f8:	4620      	mov	r0, r4
 80214fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80214fe:	f7ff bfbd 	b.w	802147c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021504 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021504:	b538      	push	{r3, r4, r5, lr}
 8021506:	4c15      	ldr	r4, [pc, #84]	@ (802155c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021508:	7823      	ldrb	r3, [r4, #0]
 802150a:	f3bf 8f5b 	dmb	ish
 802150e:	07da      	lsls	r2, r3, #31
 8021510:	4605      	mov	r5, r0
 8021512:	d40b      	bmi.n	802152c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021514:	4620      	mov	r0, r4
 8021516:	f008 fbe9 	bl	8029cec <__cxa_guard_acquire>
 802151a:	b138      	cbz	r0, 802152c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 802151c:	4620      	mov	r0, r4
 802151e:	f008 fbf1 	bl	8029d04 <__cxa_guard_release>
 8021522:	4a0f      	ldr	r2, [pc, #60]	@ (8021560 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021524:	490f      	ldr	r1, [pc, #60]	@ (8021564 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021526:	4810      	ldr	r0, [pc, #64]	@ (8021568 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021528:	f008 fbd9 	bl	8029cde <__aeabi_atexit>
 802152c:	4c0f      	ldr	r4, [pc, #60]	@ (802156c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 802152e:	7823      	ldrb	r3, [r4, #0]
 8021530:	f3bf 8f5b 	dmb	ish
 8021534:	07db      	lsls	r3, r3, #31
 8021536:	d40b      	bmi.n	8021550 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021538:	4620      	mov	r0, r4
 802153a:	f008 fbd7 	bl	8029cec <__cxa_guard_acquire>
 802153e:	b138      	cbz	r0, 8021550 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021540:	4620      	mov	r0, r4
 8021542:	f008 fbdf 	bl	8029d04 <__cxa_guard_release>
 8021546:	4a06      	ldr	r2, [pc, #24]	@ (8021560 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021548:	4909      	ldr	r1, [pc, #36]	@ (8021570 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 802154a:	480a      	ldr	r0, [pc, #40]	@ (8021574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 802154c:	f008 fbc7 	bl	8029cde <__aeabi_atexit>
 8021550:	4b05      	ldr	r3, [pc, #20]	@ (8021568 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021552:	626b      	str	r3, [r5, #36]	@ 0x24
 8021554:	4b07      	ldr	r3, [pc, #28]	@ (8021574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021556:	62ab      	str	r3, [r5, #40]	@ 0x28
 8021558:	bd38      	pop	{r3, r4, r5, pc}
 802155a:	bf00      	nop
 802155c:	2001404c 	.word	0x2001404c
 8021560:	20000000 	.word	0x20000000
 8021564:	0801d5b5 	.word	0x0801d5b5
 8021568:	200000d8 	.word	0x200000d8
 802156c:	20014050 	.word	0x20014050
 8021570:	0801d5b3 	.word	0x0801d5b3
 8021574:	200000dc 	.word	0x200000dc

08021578 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021578:	b538      	push	{r3, r4, r5, lr}
 802157a:	4c15      	ldr	r4, [pc, #84]	@ (80215d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 802157c:	7823      	ldrb	r3, [r4, #0]
 802157e:	f3bf 8f5b 	dmb	ish
 8021582:	07da      	lsls	r2, r3, #31
 8021584:	4605      	mov	r5, r0
 8021586:	d40b      	bmi.n	80215a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021588:	4620      	mov	r0, r4
 802158a:	f008 fbaf 	bl	8029cec <__cxa_guard_acquire>
 802158e:	b138      	cbz	r0, 80215a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021590:	4620      	mov	r0, r4
 8021592:	f008 fbb7 	bl	8029d04 <__cxa_guard_release>
 8021596:	4a0f      	ldr	r2, [pc, #60]	@ (80215d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021598:	490f      	ldr	r1, [pc, #60]	@ (80215d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 802159a:	4810      	ldr	r0, [pc, #64]	@ (80215dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 802159c:	f008 fb9f 	bl	8029cde <__aeabi_atexit>
 80215a0:	4c0f      	ldr	r4, [pc, #60]	@ (80215e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80215a2:	7823      	ldrb	r3, [r4, #0]
 80215a4:	f3bf 8f5b 	dmb	ish
 80215a8:	07db      	lsls	r3, r3, #31
 80215aa:	d40b      	bmi.n	80215c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80215ac:	4620      	mov	r0, r4
 80215ae:	f008 fb9d 	bl	8029cec <__cxa_guard_acquire>
 80215b2:	b138      	cbz	r0, 80215c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80215b4:	4620      	mov	r0, r4
 80215b6:	f008 fba5 	bl	8029d04 <__cxa_guard_release>
 80215ba:	4a06      	ldr	r2, [pc, #24]	@ (80215d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80215bc:	4909      	ldr	r1, [pc, #36]	@ (80215e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80215be:	480a      	ldr	r0, [pc, #40]	@ (80215e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80215c0:	f008 fb8d 	bl	8029cde <__aeabi_atexit>
 80215c4:	4b05      	ldr	r3, [pc, #20]	@ (80215dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80215c6:	61eb      	str	r3, [r5, #28]
 80215c8:	4b07      	ldr	r3, [pc, #28]	@ (80215e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80215ca:	622b      	str	r3, [r5, #32]
 80215cc:	bd38      	pop	{r3, r4, r5, pc}
 80215ce:	bf00      	nop
 80215d0:	20014024 	.word	0x20014024
 80215d4:	20000000 	.word	0x20000000
 80215d8:	0801d5b9 	.word	0x0801d5b9
 80215dc:	200000b0 	.word	0x200000b0
 80215e0:	20014028 	.word	0x20014028
 80215e4:	0801d5b7 	.word	0x0801d5b7
 80215e8:	200000b4 	.word	0x200000b4

080215ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80215ec:	b510      	push	{r4, lr}
 80215ee:	4604      	mov	r4, r0
 80215f0:	f7ff ff88 	bl	8021504 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80215f4:	4620      	mov	r0, r4
 80215f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80215fa:	f7ff bfbd 	b.w	8021578 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021600 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021600:	b538      	push	{r3, r4, r5, lr}
 8021602:	4c15      	ldr	r4, [pc, #84]	@ (8021658 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021604:	7823      	ldrb	r3, [r4, #0]
 8021606:	f3bf 8f5b 	dmb	ish
 802160a:	07da      	lsls	r2, r3, #31
 802160c:	4605      	mov	r5, r0
 802160e:	d40b      	bmi.n	8021628 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021610:	4620      	mov	r0, r4
 8021612:	f008 fb6b 	bl	8029cec <__cxa_guard_acquire>
 8021616:	b138      	cbz	r0, 8021628 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021618:	4620      	mov	r0, r4
 802161a:	f008 fb73 	bl	8029d04 <__cxa_guard_release>
 802161e:	4a0f      	ldr	r2, [pc, #60]	@ (802165c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021620:	490f      	ldr	r1, [pc, #60]	@ (8021660 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8021622:	4810      	ldr	r0, [pc, #64]	@ (8021664 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021624:	f008 fb5b 	bl	8029cde <__aeabi_atexit>
 8021628:	4c0f      	ldr	r4, [pc, #60]	@ (8021668 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 802162a:	7823      	ldrb	r3, [r4, #0]
 802162c:	f3bf 8f5b 	dmb	ish
 8021630:	07db      	lsls	r3, r3, #31
 8021632:	d40b      	bmi.n	802164c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021634:	4620      	mov	r0, r4
 8021636:	f008 fb59 	bl	8029cec <__cxa_guard_acquire>
 802163a:	b138      	cbz	r0, 802164c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 802163c:	4620      	mov	r0, r4
 802163e:	f008 fb61 	bl	8029d04 <__cxa_guard_release>
 8021642:	4a06      	ldr	r2, [pc, #24]	@ (802165c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021644:	4909      	ldr	r1, [pc, #36]	@ (802166c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021646:	480a      	ldr	r0, [pc, #40]	@ (8021670 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021648:	f008 fb49 	bl	8029cde <__aeabi_atexit>
 802164c:	4b05      	ldr	r3, [pc, #20]	@ (8021664 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802164e:	636b      	str	r3, [r5, #52]	@ 0x34
 8021650:	4b07      	ldr	r3, [pc, #28]	@ (8021670 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021652:	63ab      	str	r3, [r5, #56]	@ 0x38
 8021654:	bd38      	pop	{r3, r4, r5, pc}
 8021656:	bf00      	nop
 8021658:	2001405c 	.word	0x2001405c
 802165c:	20000000 	.word	0x20000000
 8021660:	0801d5ad 	.word	0x0801d5ad
 8021664:	200000e8 	.word	0x200000e8
 8021668:	20014060 	.word	0x20014060
 802166c:	0801d5ab 	.word	0x0801d5ab
 8021670:	200000ec 	.word	0x200000ec

08021674 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021674:	b538      	push	{r3, r4, r5, lr}
 8021676:	4c15      	ldr	r4, [pc, #84]	@ (80216cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021678:	7823      	ldrb	r3, [r4, #0]
 802167a:	f3bf 8f5b 	dmb	ish
 802167e:	07da      	lsls	r2, r3, #31
 8021680:	4605      	mov	r5, r0
 8021682:	d40b      	bmi.n	802169c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021684:	4620      	mov	r0, r4
 8021686:	f008 fb31 	bl	8029cec <__cxa_guard_acquire>
 802168a:	b138      	cbz	r0, 802169c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802168c:	4620      	mov	r0, r4
 802168e:	f008 fb39 	bl	8029d04 <__cxa_guard_release>
 8021692:	4a0f      	ldr	r2, [pc, #60]	@ (80216d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021694:	490f      	ldr	r1, [pc, #60]	@ (80216d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021696:	4810      	ldr	r0, [pc, #64]	@ (80216d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021698:	f008 fb21 	bl	8029cde <__aeabi_atexit>
 802169c:	4c0f      	ldr	r4, [pc, #60]	@ (80216dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802169e:	7823      	ldrb	r3, [r4, #0]
 80216a0:	f3bf 8f5b 	dmb	ish
 80216a4:	07db      	lsls	r3, r3, #31
 80216a6:	d40b      	bmi.n	80216c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80216a8:	4620      	mov	r0, r4
 80216aa:	f008 fb1f 	bl	8029cec <__cxa_guard_acquire>
 80216ae:	b138      	cbz	r0, 80216c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80216b0:	4620      	mov	r0, r4
 80216b2:	f008 fb27 	bl	8029d04 <__cxa_guard_release>
 80216b6:	4a06      	ldr	r2, [pc, #24]	@ (80216d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80216b8:	4909      	ldr	r1, [pc, #36]	@ (80216e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80216ba:	480a      	ldr	r0, [pc, #40]	@ (80216e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80216bc:	f008 fb0f 	bl	8029cde <__aeabi_atexit>
 80216c0:	4b05      	ldr	r3, [pc, #20]	@ (80216d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80216c2:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80216c4:	4b07      	ldr	r3, [pc, #28]	@ (80216e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80216c6:	632b      	str	r3, [r5, #48]	@ 0x30
 80216c8:	bd38      	pop	{r3, r4, r5, pc}
 80216ca:	bf00      	nop
 80216cc:	2001402c 	.word	0x2001402c
 80216d0:	20000000 	.word	0x20000000
 80216d4:	0801d5b1 	.word	0x0801d5b1
 80216d8:	200000b8 	.word	0x200000b8
 80216dc:	20014030 	.word	0x20014030
 80216e0:	0801d5af 	.word	0x0801d5af
 80216e4:	200000bc 	.word	0x200000bc

080216e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80216e8:	b510      	push	{r4, lr}
 80216ea:	4604      	mov	r4, r0
 80216ec:	f7ff ff88 	bl	8021600 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80216f0:	4620      	mov	r0, r4
 80216f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80216f6:	f7ff bfbd 	b.w	8021674 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080216fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80216fc:	b538      	push	{r3, r4, r5, lr}
 80216fe:	4c15      	ldr	r4, [pc, #84]	@ (8021754 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8021700:	7823      	ldrb	r3, [r4, #0]
 8021702:	f3bf 8f5b 	dmb	ish
 8021706:	07da      	lsls	r2, r3, #31
 8021708:	4605      	mov	r5, r0
 802170a:	d40b      	bmi.n	8021724 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 802170c:	4620      	mov	r0, r4
 802170e:	f008 faed 	bl	8029cec <__cxa_guard_acquire>
 8021712:	b138      	cbz	r0, 8021724 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8021714:	4620      	mov	r0, r4
 8021716:	f008 faf5 	bl	8029d04 <__cxa_guard_release>
 802171a:	4a0f      	ldr	r2, [pc, #60]	@ (8021758 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802171c:	490f      	ldr	r1, [pc, #60]	@ (802175c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802171e:	4810      	ldr	r0, [pc, #64]	@ (8021760 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8021720:	f008 fadd 	bl	8029cde <__aeabi_atexit>
 8021724:	4c0f      	ldr	r4, [pc, #60]	@ (8021764 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8021726:	7823      	ldrb	r3, [r4, #0]
 8021728:	f3bf 8f5b 	dmb	ish
 802172c:	07db      	lsls	r3, r3, #31
 802172e:	d40b      	bmi.n	8021748 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021730:	4620      	mov	r0, r4
 8021732:	f008 fadb 	bl	8029cec <__cxa_guard_acquire>
 8021736:	b138      	cbz	r0, 8021748 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021738:	4620      	mov	r0, r4
 802173a:	f008 fae3 	bl	8029d04 <__cxa_guard_release>
 802173e:	4a06      	ldr	r2, [pc, #24]	@ (8021758 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8021740:	4909      	ldr	r1, [pc, #36]	@ (8021768 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8021742:	480a      	ldr	r0, [pc, #40]	@ (802176c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8021744:	f008 facb 	bl	8029cde <__aeabi_atexit>
 8021748:	4b05      	ldr	r3, [pc, #20]	@ (8021760 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802174a:	656b      	str	r3, [r5, #84]	@ 0x54
 802174c:	4b07      	ldr	r3, [pc, #28]	@ (802176c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802174e:	65ab      	str	r3, [r5, #88]	@ 0x58
 8021750:	bd38      	pop	{r3, r4, r5, pc}
 8021752:	bf00      	nop
 8021754:	20014064 	.word	0x20014064
 8021758:	20000000 	.word	0x20000000
 802175c:	0801d59d 	.word	0x0801d59d
 8021760:	200000f0 	.word	0x200000f0
 8021764:	20014068 	.word	0x20014068
 8021768:	0801d59b 	.word	0x0801d59b
 802176c:	200000f4 	.word	0x200000f4

08021770 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8021770:	b538      	push	{r3, r4, r5, lr}
 8021772:	4c15      	ldr	r4, [pc, #84]	@ (80217c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8021774:	7823      	ldrb	r3, [r4, #0]
 8021776:	f3bf 8f5b 	dmb	ish
 802177a:	07da      	lsls	r2, r3, #31
 802177c:	4605      	mov	r5, r0
 802177e:	d40b      	bmi.n	8021798 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021780:	4620      	mov	r0, r4
 8021782:	f008 fab3 	bl	8029cec <__cxa_guard_acquire>
 8021786:	b138      	cbz	r0, 8021798 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021788:	4620      	mov	r0, r4
 802178a:	f008 fabb 	bl	8029d04 <__cxa_guard_release>
 802178e:	4a0f      	ldr	r2, [pc, #60]	@ (80217cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021790:	490f      	ldr	r1, [pc, #60]	@ (80217d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8021792:	4810      	ldr	r0, [pc, #64]	@ (80217d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8021794:	f008 faa3 	bl	8029cde <__aeabi_atexit>
 8021798:	4c0f      	ldr	r4, [pc, #60]	@ (80217d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 802179a:	7823      	ldrb	r3, [r4, #0]
 802179c:	f3bf 8f5b 	dmb	ish
 80217a0:	07db      	lsls	r3, r3, #31
 80217a2:	d40b      	bmi.n	80217bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80217a4:	4620      	mov	r0, r4
 80217a6:	f008 faa1 	bl	8029cec <__cxa_guard_acquire>
 80217aa:	b138      	cbz	r0, 80217bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80217ac:	4620      	mov	r0, r4
 80217ae:	f008 faa9 	bl	8029d04 <__cxa_guard_release>
 80217b2:	4a06      	ldr	r2, [pc, #24]	@ (80217cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80217b4:	4909      	ldr	r1, [pc, #36]	@ (80217dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80217b6:	480a      	ldr	r0, [pc, #40]	@ (80217e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80217b8:	f008 fa91 	bl	8029cde <__aeabi_atexit>
 80217bc:	4b05      	ldr	r3, [pc, #20]	@ (80217d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80217be:	64eb      	str	r3, [r5, #76]	@ 0x4c
 80217c0:	4b07      	ldr	r3, [pc, #28]	@ (80217e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80217c2:	652b      	str	r3, [r5, #80]	@ 0x50
 80217c4:	bd38      	pop	{r3, r4, r5, pc}
 80217c6:	bf00      	nop
 80217c8:	2001406c 	.word	0x2001406c
 80217cc:	20000000 	.word	0x20000000
 80217d0:	0801d5a1 	.word	0x0801d5a1
 80217d4:	200000f8 	.word	0x200000f8
 80217d8:	20014070 	.word	0x20014070
 80217dc:	0801d59f 	.word	0x0801d59f
 80217e0:	200000fc 	.word	0x200000fc

080217e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80217e4:	b538      	push	{r3, r4, r5, lr}
 80217e6:	4c15      	ldr	r4, [pc, #84]	@ (802183c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80217e8:	7823      	ldrb	r3, [r4, #0]
 80217ea:	f3bf 8f5b 	dmb	ish
 80217ee:	07da      	lsls	r2, r3, #31
 80217f0:	4605      	mov	r5, r0
 80217f2:	d40b      	bmi.n	802180c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80217f4:	4620      	mov	r0, r4
 80217f6:	f008 fa79 	bl	8029cec <__cxa_guard_acquire>
 80217fa:	b138      	cbz	r0, 802180c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80217fc:	4620      	mov	r0, r4
 80217fe:	f008 fa81 	bl	8029d04 <__cxa_guard_release>
 8021802:	4a0f      	ldr	r2, [pc, #60]	@ (8021840 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021804:	490f      	ldr	r1, [pc, #60]	@ (8021844 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8021806:	4810      	ldr	r0, [pc, #64]	@ (8021848 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8021808:	f008 fa69 	bl	8029cde <__aeabi_atexit>
 802180c:	4c0f      	ldr	r4, [pc, #60]	@ (802184c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802180e:	7823      	ldrb	r3, [r4, #0]
 8021810:	f3bf 8f5b 	dmb	ish
 8021814:	07db      	lsls	r3, r3, #31
 8021816:	d40b      	bmi.n	8021830 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8021818:	4620      	mov	r0, r4
 802181a:	f008 fa67 	bl	8029cec <__cxa_guard_acquire>
 802181e:	b138      	cbz	r0, 8021830 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8021820:	4620      	mov	r0, r4
 8021822:	f008 fa6f 	bl	8029d04 <__cxa_guard_release>
 8021826:	4a06      	ldr	r2, [pc, #24]	@ (8021840 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021828:	4909      	ldr	r1, [pc, #36]	@ (8021850 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 802182a:	480a      	ldr	r0, [pc, #40]	@ (8021854 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 802182c:	f008 fa57 	bl	8029cde <__aeabi_atexit>
 8021830:	4b05      	ldr	r3, [pc, #20]	@ (8021848 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8021832:	646b      	str	r3, [r5, #68]	@ 0x44
 8021834:	4b07      	ldr	r3, [pc, #28]	@ (8021854 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021836:	64ab      	str	r3, [r5, #72]	@ 0x48
 8021838:	bd38      	pop	{r3, r4, r5, pc}
 802183a:	bf00      	nop
 802183c:	20014034 	.word	0x20014034
 8021840:	20000000 	.word	0x20000000
 8021844:	0801d5a5 	.word	0x0801d5a5
 8021848:	200000c0 	.word	0x200000c0
 802184c:	20014038 	.word	0x20014038
 8021850:	0801d5a3 	.word	0x0801d5a3
 8021854:	200000c4 	.word	0x200000c4

08021858 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8021858:	b538      	push	{r3, r4, r5, lr}
 802185a:	4c15      	ldr	r4, [pc, #84]	@ (80218b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 802185c:	7823      	ldrb	r3, [r4, #0]
 802185e:	f3bf 8f5b 	dmb	ish
 8021862:	07da      	lsls	r2, r3, #31
 8021864:	4605      	mov	r5, r0
 8021866:	d40b      	bmi.n	8021880 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021868:	4620      	mov	r0, r4
 802186a:	f008 fa3f 	bl	8029cec <__cxa_guard_acquire>
 802186e:	b138      	cbz	r0, 8021880 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021870:	4620      	mov	r0, r4
 8021872:	f008 fa47 	bl	8029d04 <__cxa_guard_release>
 8021876:	4a0f      	ldr	r2, [pc, #60]	@ (80218b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8021878:	490f      	ldr	r1, [pc, #60]	@ (80218b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 802187a:	4810      	ldr	r0, [pc, #64]	@ (80218bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802187c:	f008 fa2f 	bl	8029cde <__aeabi_atexit>
 8021880:	4c0f      	ldr	r4, [pc, #60]	@ (80218c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8021882:	7823      	ldrb	r3, [r4, #0]
 8021884:	f3bf 8f5b 	dmb	ish
 8021888:	07db      	lsls	r3, r3, #31
 802188a:	d40b      	bmi.n	80218a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802188c:	4620      	mov	r0, r4
 802188e:	f008 fa2d 	bl	8029cec <__cxa_guard_acquire>
 8021892:	b138      	cbz	r0, 80218a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8021894:	4620      	mov	r0, r4
 8021896:	f008 fa35 	bl	8029d04 <__cxa_guard_release>
 802189a:	4a06      	ldr	r2, [pc, #24]	@ (80218b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 802189c:	4909      	ldr	r1, [pc, #36]	@ (80218c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802189e:	480a      	ldr	r0, [pc, #40]	@ (80218c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80218a0:	f008 fa1d 	bl	8029cde <__aeabi_atexit>
 80218a4:	4b05      	ldr	r3, [pc, #20]	@ (80218bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80218a6:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80218a8:	4b07      	ldr	r3, [pc, #28]	@ (80218c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80218aa:	642b      	str	r3, [r5, #64]	@ 0x40
 80218ac:	bd38      	pop	{r3, r4, r5, pc}
 80218ae:	bf00      	nop
 80218b0:	20014054 	.word	0x20014054
 80218b4:	20000000 	.word	0x20000000
 80218b8:	0801d5a9 	.word	0x0801d5a9
 80218bc:	200000e0 	.word	0x200000e0
 80218c0:	20014058 	.word	0x20014058
 80218c4:	0801d5a7 	.word	0x0801d5a7
 80218c8:	200000e4 	.word	0x200000e4

080218cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80218cc:	b510      	push	{r4, lr}
 80218ce:	4604      	mov	r4, r0
 80218d0:	f7ff ff14 	bl	80216fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80218d4:	4620      	mov	r0, r4
 80218d6:	f7ff ff85 	bl	80217e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80218da:	4620      	mov	r0, r4
 80218dc:	f7ff ff48 	bl	8021770 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80218e0:	4620      	mov	r0, r4
 80218e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80218e6:	f7ff bfb7 	b.w	8021858 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080218ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80218ec:	b538      	push	{r3, r4, r5, lr}
 80218ee:	4c15      	ldr	r4, [pc, #84]	@ (8021944 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80218f0:	7823      	ldrb	r3, [r4, #0]
 80218f2:	f3bf 8f5b 	dmb	ish
 80218f6:	07da      	lsls	r2, r3, #31
 80218f8:	4605      	mov	r5, r0
 80218fa:	d40b      	bmi.n	8021914 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80218fc:	4620      	mov	r0, r4
 80218fe:	f008 f9f5 	bl	8029cec <__cxa_guard_acquire>
 8021902:	b138      	cbz	r0, 8021914 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8021904:	4620      	mov	r0, r4
 8021906:	f008 f9fd 	bl	8029d04 <__cxa_guard_release>
 802190a:	4a0f      	ldr	r2, [pc, #60]	@ (8021948 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802190c:	490f      	ldr	r1, [pc, #60]	@ (802194c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802190e:	4810      	ldr	r0, [pc, #64]	@ (8021950 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8021910:	f008 f9e5 	bl	8029cde <__aeabi_atexit>
 8021914:	4c0f      	ldr	r4, [pc, #60]	@ (8021954 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8021916:	7823      	ldrb	r3, [r4, #0]
 8021918:	f3bf 8f5b 	dmb	ish
 802191c:	07db      	lsls	r3, r3, #31
 802191e:	d40b      	bmi.n	8021938 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8021920:	4620      	mov	r0, r4
 8021922:	f008 f9e3 	bl	8029cec <__cxa_guard_acquire>
 8021926:	b138      	cbz	r0, 8021938 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8021928:	4620      	mov	r0, r4
 802192a:	f008 f9eb 	bl	8029d04 <__cxa_guard_release>
 802192e:	4a06      	ldr	r2, [pc, #24]	@ (8021948 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8021930:	4909      	ldr	r1, [pc, #36]	@ (8021958 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8021932:	480a      	ldr	r0, [pc, #40]	@ (802195c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8021934:	f008 f9d3 	bl	8029cde <__aeabi_atexit>
 8021938:	4b05      	ldr	r3, [pc, #20]	@ (8021950 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802193a:	666b      	str	r3, [r5, #100]	@ 0x64
 802193c:	4b07      	ldr	r3, [pc, #28]	@ (802195c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802193e:	66ab      	str	r3, [r5, #104]	@ 0x68
 8021940:	bd38      	pop	{r3, r4, r5, pc}
 8021942:	bf00      	nop
 8021944:	2001403c 	.word	0x2001403c
 8021948:	20000000 	.word	0x20000000
 802194c:	0801d595 	.word	0x0801d595
 8021950:	200000c8 	.word	0x200000c8
 8021954:	20014040 	.word	0x20014040
 8021958:	0801d593 	.word	0x0801d593
 802195c:	200000cc 	.word	0x200000cc

08021960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8021960:	b538      	push	{r3, r4, r5, lr}
 8021962:	4c15      	ldr	r4, [pc, #84]	@ (80219b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8021964:	7823      	ldrb	r3, [r4, #0]
 8021966:	f3bf 8f5b 	dmb	ish
 802196a:	07da      	lsls	r2, r3, #31
 802196c:	4605      	mov	r5, r0
 802196e:	d40b      	bmi.n	8021988 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021970:	4620      	mov	r0, r4
 8021972:	f008 f9bb 	bl	8029cec <__cxa_guard_acquire>
 8021976:	b138      	cbz	r0, 8021988 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8021978:	4620      	mov	r0, r4
 802197a:	f008 f9c3 	bl	8029d04 <__cxa_guard_release>
 802197e:	4a0f      	ldr	r2, [pc, #60]	@ (80219bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8021980:	490f      	ldr	r1, [pc, #60]	@ (80219c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8021982:	4810      	ldr	r0, [pc, #64]	@ (80219c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8021984:	f008 f9ab 	bl	8029cde <__aeabi_atexit>
 8021988:	4c0f      	ldr	r4, [pc, #60]	@ (80219c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 802198a:	7823      	ldrb	r3, [r4, #0]
 802198c:	f3bf 8f5b 	dmb	ish
 8021990:	07db      	lsls	r3, r3, #31
 8021992:	d40b      	bmi.n	80219ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8021994:	4620      	mov	r0, r4
 8021996:	f008 f9a9 	bl	8029cec <__cxa_guard_acquire>
 802199a:	b138      	cbz	r0, 80219ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802199c:	4620      	mov	r0, r4
 802199e:	f008 f9b1 	bl	8029d04 <__cxa_guard_release>
 80219a2:	4a06      	ldr	r2, [pc, #24]	@ (80219bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80219a4:	4909      	ldr	r1, [pc, #36]	@ (80219cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80219a6:	480a      	ldr	r0, [pc, #40]	@ (80219d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80219a8:	f008 f999 	bl	8029cde <__aeabi_atexit>
 80219ac:	4b05      	ldr	r3, [pc, #20]	@ (80219c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80219ae:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80219b0:	4b07      	ldr	r3, [pc, #28]	@ (80219d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80219b2:	662b      	str	r3, [r5, #96]	@ 0x60
 80219b4:	bd38      	pop	{r3, r4, r5, pc}
 80219b6:	bf00      	nop
 80219b8:	20014014 	.word	0x20014014
 80219bc:	20000000 	.word	0x20000000
 80219c0:	0801d599 	.word	0x0801d599
 80219c4:	200000a0 	.word	0x200000a0
 80219c8:	20014018 	.word	0x20014018
 80219cc:	0801d597 	.word	0x0801d597
 80219d0:	200000a4 	.word	0x200000a4

080219d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80219d4:	b510      	push	{r4, lr}
 80219d6:	4604      	mov	r4, r0
 80219d8:	f7ff ff88 	bl	80218ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80219dc:	4620      	mov	r0, r4
 80219de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80219e2:	f7ff bfbd 	b.w	8021960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080219e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80219e8:	b538      	push	{r3, r4, r5, lr}
 80219ea:	4c15      	ldr	r4, [pc, #84]	@ (8021a40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80219ec:	7823      	ldrb	r3, [r4, #0]
 80219ee:	f3bf 8f5b 	dmb	ish
 80219f2:	07da      	lsls	r2, r3, #31
 80219f4:	4605      	mov	r5, r0
 80219f6:	d40b      	bmi.n	8021a10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80219f8:	4620      	mov	r0, r4
 80219fa:	f008 f977 	bl	8029cec <__cxa_guard_acquire>
 80219fe:	b138      	cbz	r0, 8021a10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8021a00:	4620      	mov	r0, r4
 8021a02:	f008 f97f 	bl	8029d04 <__cxa_guard_release>
 8021a06:	4a0f      	ldr	r2, [pc, #60]	@ (8021a44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8021a08:	490f      	ldr	r1, [pc, #60]	@ (8021a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8021a0a:	4810      	ldr	r0, [pc, #64]	@ (8021a4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8021a0c:	f008 f967 	bl	8029cde <__aeabi_atexit>
 8021a10:	4c0f      	ldr	r4, [pc, #60]	@ (8021a50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8021a12:	7823      	ldrb	r3, [r4, #0]
 8021a14:	f3bf 8f5b 	dmb	ish
 8021a18:	07db      	lsls	r3, r3, #31
 8021a1a:	d40b      	bmi.n	8021a34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8021a1c:	4620      	mov	r0, r4
 8021a1e:	f008 f965 	bl	8029cec <__cxa_guard_acquire>
 8021a22:	b138      	cbz	r0, 8021a34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8021a24:	4620      	mov	r0, r4
 8021a26:	f008 f96d 	bl	8029d04 <__cxa_guard_release>
 8021a2a:	4a06      	ldr	r2, [pc, #24]	@ (8021a44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8021a2c:	4909      	ldr	r1, [pc, #36]	@ (8021a54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8021a2e:	480a      	ldr	r0, [pc, #40]	@ (8021a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8021a30:	f008 f955 	bl	8029cde <__aeabi_atexit>
 8021a34:	4b05      	ldr	r3, [pc, #20]	@ (8021a4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8021a36:	676b      	str	r3, [r5, #116]	@ 0x74
 8021a38:	4b07      	ldr	r3, [pc, #28]	@ (8021a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8021a3a:	67ab      	str	r3, [r5, #120]	@ 0x78
 8021a3c:	bd38      	pop	{r3, r4, r5, pc}
 8021a3e:	bf00      	nop
 8021a40:	2001400c 	.word	0x2001400c
 8021a44:	20000000 	.word	0x20000000
 8021a48:	0801d58d 	.word	0x0801d58d
 8021a4c:	20000098 	.word	0x20000098
 8021a50:	20014010 	.word	0x20014010
 8021a54:	0801d58b 	.word	0x0801d58b
 8021a58:	2000009c 	.word	0x2000009c

08021a5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8021a5c:	b538      	push	{r3, r4, r5, lr}
 8021a5e:	4c15      	ldr	r4, [pc, #84]	@ (8021ab4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8021a60:	7823      	ldrb	r3, [r4, #0]
 8021a62:	f3bf 8f5b 	dmb	ish
 8021a66:	07da      	lsls	r2, r3, #31
 8021a68:	4605      	mov	r5, r0
 8021a6a:	d40b      	bmi.n	8021a84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021a6c:	4620      	mov	r0, r4
 8021a6e:	f008 f93d 	bl	8029cec <__cxa_guard_acquire>
 8021a72:	b138      	cbz	r0, 8021a84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021a74:	4620      	mov	r0, r4
 8021a76:	f008 f945 	bl	8029d04 <__cxa_guard_release>
 8021a7a:	4a0f      	ldr	r2, [pc, #60]	@ (8021ab8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8021a7c:	490f      	ldr	r1, [pc, #60]	@ (8021abc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8021a7e:	4810      	ldr	r0, [pc, #64]	@ (8021ac0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8021a80:	f008 f92d 	bl	8029cde <__aeabi_atexit>
 8021a84:	4c0f      	ldr	r4, [pc, #60]	@ (8021ac4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8021a86:	7823      	ldrb	r3, [r4, #0]
 8021a88:	f3bf 8f5b 	dmb	ish
 8021a8c:	07db      	lsls	r3, r3, #31
 8021a8e:	d40b      	bmi.n	8021aa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021a90:	4620      	mov	r0, r4
 8021a92:	f008 f92b 	bl	8029cec <__cxa_guard_acquire>
 8021a96:	b138      	cbz	r0, 8021aa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8021a98:	4620      	mov	r0, r4
 8021a9a:	f008 f933 	bl	8029d04 <__cxa_guard_release>
 8021a9e:	4a06      	ldr	r2, [pc, #24]	@ (8021ab8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8021aa0:	4909      	ldr	r1, [pc, #36]	@ (8021ac8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8021aa2:	480a      	ldr	r0, [pc, #40]	@ (8021acc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8021aa4:	f008 f91b 	bl	8029cde <__aeabi_atexit>
 8021aa8:	4b05      	ldr	r3, [pc, #20]	@ (8021ac0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8021aaa:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8021aac:	4b07      	ldr	r3, [pc, #28]	@ (8021acc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8021aae:	672b      	str	r3, [r5, #112]	@ 0x70
 8021ab0:	bd38      	pop	{r3, r4, r5, pc}
 8021ab2:	bf00      	nop
 8021ab4:	20014004 	.word	0x20014004
 8021ab8:	20000000 	.word	0x20000000
 8021abc:	0801d591 	.word	0x0801d591
 8021ac0:	20000090 	.word	0x20000090
 8021ac4:	20014008 	.word	0x20014008
 8021ac8:	0801d58f 	.word	0x0801d58f
 8021acc:	20000094 	.word	0x20000094

08021ad0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8021ad0:	b510      	push	{r4, lr}
 8021ad2:	4604      	mov	r4, r0
 8021ad4:	f7ff ff88 	bl	80219e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8021ad8:	4620      	mov	r0, r4
 8021ada:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021ade:	f7ff bfbd 	b.w	8021a5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08021ae2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8021ae2:	b510      	push	{r4, lr}
 8021ae4:	4604      	mov	r4, r0
 8021ae6:	f7ff fff3 	bl	8021ad0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8021aea:	4620      	mov	r0, r4
 8021aec:	f7ff ff72 	bl	80219d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8021af0:	4620      	mov	r0, r4
 8021af2:	f7ff fdf9 	bl	80216e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8021af6:	4620      	mov	r0, r4
 8021af8:	f7ff fcfa 	bl	80214f0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8021afc:	4620      	mov	r0, r4
 8021afe:	f7ff fd75 	bl	80215ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8021b02:	4620      	mov	r0, r4
 8021b04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021b08:	f7ff bee0 	b.w	80218cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08021b0c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8021b0c:	b538      	push	{r3, r4, r5, lr}
 8021b0e:	4c0b      	ldr	r4, [pc, #44]	@ (8021b3c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8021b10:	7823      	ldrb	r3, [r4, #0]
 8021b12:	f3bf 8f5b 	dmb	ish
 8021b16:	07db      	lsls	r3, r3, #31
 8021b18:	4605      	mov	r5, r0
 8021b1a:	d40b      	bmi.n	8021b34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8021b1c:	4620      	mov	r0, r4
 8021b1e:	f008 f8e5 	bl	8029cec <__cxa_guard_acquire>
 8021b22:	b138      	cbz	r0, 8021b34 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8021b24:	4620      	mov	r0, r4
 8021b26:	f008 f8ed 	bl	8029d04 <__cxa_guard_release>
 8021b2a:	4a05      	ldr	r2, [pc, #20]	@ (8021b40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8021b2c:	4905      	ldr	r1, [pc, #20]	@ (8021b44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8021b2e:	4806      	ldr	r0, [pc, #24]	@ (8021b48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8021b30:	f008 f8d5 	bl	8029cde <__aeabi_atexit>
 8021b34:	4b04      	ldr	r3, [pc, #16]	@ (8021b48 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8021b36:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8021b38:	bd38      	pop	{r3, r4, r5, pc}
 8021b3a:	bf00      	nop
 8021b3c:	20013ff8 	.word	0x20013ff8
 8021b40:	20000000 	.word	0x20000000
 8021b44:	0801d589 	.word	0x0801d589
 8021b48:	20000088 	.word	0x20000088

08021b4c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8021b4c:	b538      	push	{r3, r4, r5, lr}
 8021b4e:	4c0b      	ldr	r4, [pc, #44]	@ (8021b7c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8021b50:	7823      	ldrb	r3, [r4, #0]
 8021b52:	f3bf 8f5b 	dmb	ish
 8021b56:	07db      	lsls	r3, r3, #31
 8021b58:	4605      	mov	r5, r0
 8021b5a:	d40b      	bmi.n	8021b74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8021b5c:	4620      	mov	r0, r4
 8021b5e:	f008 f8c5 	bl	8029cec <__cxa_guard_acquire>
 8021b62:	b138      	cbz	r0, 8021b74 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8021b64:	4620      	mov	r0, r4
 8021b66:	f008 f8cd 	bl	8029d04 <__cxa_guard_release>
 8021b6a:	4a05      	ldr	r2, [pc, #20]	@ (8021b80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8021b6c:	4905      	ldr	r1, [pc, #20]	@ (8021b84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8021b6e:	4806      	ldr	r0, [pc, #24]	@ (8021b88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8021b70:	f008 f8b5 	bl	8029cde <__aeabi_atexit>
 8021b74:	4b04      	ldr	r3, [pc, #16]	@ (8021b88 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8021b76:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8021b7a:	bd38      	pop	{r3, r4, r5, pc}
 8021b7c:	20013ffc 	.word	0x20013ffc
 8021b80:	20000000 	.word	0x20000000
 8021b84:	0801d587 	.word	0x0801d587
 8021b88:	2000008c 	.word	0x2000008c

08021b8c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8021b8c:	b570      	push	{r4, r5, r6, lr}
 8021b8e:	4d0d      	ldr	r5, [pc, #52]	@ (8021bc4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8021b90:	4c0d      	ldr	r4, [pc, #52]	@ (8021bc8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8021b92:	782b      	ldrb	r3, [r5, #0]
 8021b94:	f3bf 8f5b 	dmb	ish
 8021b98:	f013 0f01 	tst.w	r3, #1
 8021b9c:	4606      	mov	r6, r0
 8021b9e:	d10d      	bne.n	8021bbc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8021ba0:	4628      	mov	r0, r5
 8021ba2:	f008 f8a3 	bl	8029cec <__cxa_guard_acquire>
 8021ba6:	b148      	cbz	r0, 8021bbc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8021ba8:	4b08      	ldr	r3, [pc, #32]	@ (8021bcc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8021baa:	6023      	str	r3, [r4, #0]
 8021bac:	4628      	mov	r0, r5
 8021bae:	f008 f8a9 	bl	8029d04 <__cxa_guard_release>
 8021bb2:	4a07      	ldr	r2, [pc, #28]	@ (8021bd0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8021bb4:	4907      	ldr	r1, [pc, #28]	@ (8021bd4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8021bb6:	4620      	mov	r0, r4
 8021bb8:	f008 f891 	bl	8029cde <__aeabi_atexit>
 8021bbc:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8021bc0:	bd70      	pop	{r4, r5, r6, pc}
 8021bc2:	bf00      	nop
 8021bc4:	20014000 	.word	0x20014000
 8021bc8:	20014178 	.word	0x20014178
 8021bcc:	0802e524 	.word	0x0802e524
 8021bd0:	20000000 	.word	0x20000000
 8021bd4:	0801d585 	.word	0x0801d585

08021bd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8021bd8:	b510      	push	{r4, lr}
 8021bda:	4604      	mov	r4, r0
 8021bdc:	f7ff ff96 	bl	8021b0c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8021be0:	4620      	mov	r0, r4
 8021be2:	f7ff ffb3 	bl	8021b4c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8021be6:	4620      	mov	r0, r4
 8021be8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021bec:	f7ff bfce 	b.w	8021b8c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08021bf0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8021bf0:	b570      	push	{r4, r5, r6, lr}
 8021bf2:	4d0d      	ldr	r5, [pc, #52]	@ (8021c28 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8021bf4:	4c0d      	ldr	r4, [pc, #52]	@ (8021c2c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8021bf6:	782b      	ldrb	r3, [r5, #0]
 8021bf8:	f3bf 8f5b 	dmb	ish
 8021bfc:	f013 0f01 	tst.w	r3, #1
 8021c00:	4606      	mov	r6, r0
 8021c02:	d10d      	bne.n	8021c20 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8021c04:	4628      	mov	r0, r5
 8021c06:	f008 f871 	bl	8029cec <__cxa_guard_acquire>
 8021c0a:	b148      	cbz	r0, 8021c20 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8021c0c:	4b08      	ldr	r3, [pc, #32]	@ (8021c30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8021c0e:	6023      	str	r3, [r4, #0]
 8021c10:	4628      	mov	r0, r5
 8021c12:	f008 f877 	bl	8029d04 <__cxa_guard_release>
 8021c16:	4a07      	ldr	r2, [pc, #28]	@ (8021c34 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8021c18:	4907      	ldr	r1, [pc, #28]	@ (8021c38 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8021c1a:	4620      	mov	r0, r4
 8021c1c:	f008 f85f 	bl	8029cde <__aeabi_atexit>
 8021c20:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8021c24:	bd70      	pop	{r4, r5, r6, pc}
 8021c26:	bf00      	nop
 8021c28:	20013ff4 	.word	0x20013ff4
 8021c2c:	20014074 	.word	0x20014074
 8021c30:	0802e540 	.word	0x0802e540
 8021c34:	20000000 	.word	0x20000000
 8021c38:	0801d583 	.word	0x0801d583

08021c3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8021c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c40:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8021c44:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8021c48:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8021c4c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8021c50:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8021c54:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8021c58:	8808      	ldrh	r0, [r1, #0]
 8021c5a:	fb05 4c0e 	mla	ip, r5, lr, r4
 8021c5e:	2d00      	cmp	r5, #0
 8021c60:	eb02 0a0c 	add.w	sl, r2, ip
 8021c64:	f2c0 80b0 	blt.w	8021dc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8021c68:	45ab      	cmp	fp, r5
 8021c6a:	f340 80ad 	ble.w	8021dc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8021c6e:	2c00      	cmp	r4, #0
 8021c70:	f2c0 80a8 	blt.w	8021dc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8021c74:	45a6      	cmp	lr, r4
 8021c76:	f340 80a5 	ble.w	8021dc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8021c7a:	f812 200c 	ldrb.w	r2, [r2, ip]
 8021c7e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8021c82:	1c62      	adds	r2, r4, #1
 8021c84:	f100 80a3 	bmi.w	8021dce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8021c88:	4596      	cmp	lr, r2
 8021c8a:	f340 80a0 	ble.w	8021dce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8021c8e:	f1b9 0f00 	cmp.w	r9, #0
 8021c92:	f000 809c 	beq.w	8021dce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8021c96:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021c9a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8021c9e:	3501      	adds	r5, #1
 8021ca0:	f100 8099 	bmi.w	8021dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8021ca4:	45ab      	cmp	fp, r5
 8021ca6:	f340 8096 	ble.w	8021dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8021caa:	2f00      	cmp	r7, #0
 8021cac:	f000 8093 	beq.w	8021dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8021cb0:	2c00      	cmp	r4, #0
 8021cb2:	f2c0 808e 	blt.w	8021dd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8021cb6:	45a6      	cmp	lr, r4
 8021cb8:	f340 808b 	ble.w	8021dd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8021cbc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8021cc0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8021cc4:	3401      	adds	r4, #1
 8021cc6:	f100 8089 	bmi.w	8021ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8021cca:	45a6      	cmp	lr, r4
 8021ccc:	f340 8086 	ble.w	8021ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8021cd0:	f1b9 0f00 	cmp.w	r9, #0
 8021cd4:	f000 8082 	beq.w	8021ddc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8021cd8:	44d6      	add	lr, sl
 8021cda:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021cde:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8021ce2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8021ce6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021cea:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8021cee:	fb19 fe07 	smulbb	lr, r9, r7
 8021cf2:	ea44 0808 	orr.w	r8, r4, r8
 8021cf6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8021cfa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8021cfe:	f1c7 0210 	rsb	r2, r7, #16
 8021d02:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021d06:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021d0a:	ea44 0c0c 	orr.w	ip, r4, ip
 8021d0e:	eba2 0209 	sub.w	r2, r2, r9
 8021d12:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8021d16:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8021d1a:	fb04 f40c 	mul.w	r4, r4, ip
 8021d1e:	fb02 4808 	mla	r8, r2, r8, r4
 8021d22:	041a      	lsls	r2, r3, #16
 8021d24:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8021d28:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021d2c:	4313      	orrs	r3, r2
 8021d2e:	042a      	lsls	r2, r5, #16
 8021d30:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8021d34:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021d38:	fb0e 8303 	mla	r3, lr, r3, r8
 8021d3c:	432a      	orrs	r2, r5
 8021d3e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8021d42:	fb07 3202 	mla	r2, r7, r2, r3
 8021d46:	0d53      	lsrs	r3, r2, #21
 8021d48:	0952      	lsrs	r2, r2, #5
 8021d4a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021d4e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021d52:	431a      	orrs	r2, r3
 8021d54:	b293      	uxth	r3, r2
 8021d56:	b2b4      	uxth	r4, r6
 8021d58:	1202      	asrs	r2, r0, #8
 8021d5a:	43f6      	mvns	r6, r6
 8021d5c:	b2f6      	uxtb	r6, r6
 8021d5e:	121d      	asrs	r5, r3, #8
 8021d60:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021d64:	fb12 f206 	smulbb	r2, r2, r6
 8021d68:	10c7      	asrs	r7, r0, #3
 8021d6a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021d6e:	00c0      	lsls	r0, r0, #3
 8021d70:	fb05 2504 	mla	r5, r5, r4, r2
 8021d74:	b2c0      	uxtb	r0, r0
 8021d76:	10da      	asrs	r2, r3, #3
 8021d78:	00db      	lsls	r3, r3, #3
 8021d7a:	b2db      	uxtb	r3, r3
 8021d7c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8021d80:	fb10 f006 	smulbb	r0, r0, r6
 8021d84:	b2ad      	uxth	r5, r5
 8021d86:	fb03 0004 	mla	r0, r3, r4, r0
 8021d8a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8021d8e:	fb17 f706 	smulbb	r7, r7, r6
 8021d92:	b280      	uxth	r0, r0
 8021d94:	1c6b      	adds	r3, r5, #1
 8021d96:	fb02 7204 	mla	r2, r2, r4, r7
 8021d9a:	b292      	uxth	r2, r2
 8021d9c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021da0:	1c43      	adds	r3, r0, #1
 8021da2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021da6:	1c50      	adds	r0, r2, #1
 8021da8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8021dac:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021db0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021db4:	0952      	lsrs	r2, r2, #5
 8021db6:	432b      	orrs	r3, r5
 8021db8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021dbc:	4313      	orrs	r3, r2
 8021dbe:	800b      	strh	r3, [r1, #0]
 8021dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021dc4:	4680      	mov	r8, r0
 8021dc6:	e75c      	b.n	8021c82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8021dc8:	4684      	mov	ip, r0
 8021dca:	4680      	mov	r8, r0
 8021dcc:	e767      	b.n	8021c9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8021dce:	4684      	mov	ip, r0
 8021dd0:	e765      	b.n	8021c9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8021dd2:	4605      	mov	r5, r0
 8021dd4:	e776      	b.n	8021cc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8021dd6:	4603      	mov	r3, r0
 8021dd8:	4605      	mov	r5, r0
 8021dda:	e782      	b.n	8021ce2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8021ddc:	4603      	mov	r3, r0
 8021dde:	e780      	b.n	8021ce2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08021de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021de4:	b099      	sub	sp, #100	@ 0x64
 8021de6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8021dea:	9215      	str	r2, [sp, #84]	@ 0x54
 8021dec:	9309      	str	r3, [sp, #36]	@ 0x24
 8021dee:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8021df0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8021df4:	930d      	str	r3, [sp, #52]	@ 0x34
 8021df6:	910c      	str	r1, [sp, #48]	@ 0x30
 8021df8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8021dfc:	9016      	str	r0, [sp, #88]	@ 0x58
 8021dfe:	6850      	ldr	r0, [r2, #4]
 8021e00:	6812      	ldr	r2, [r2, #0]
 8021e02:	fb00 1303 	mla	r3, r0, r3, r1
 8021e06:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8021e0a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021e0c:	681b      	ldr	r3, [r3, #0]
 8021e0e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021e10:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021e12:	685e      	ldr	r6, [r3, #4]
 8021e14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021e16:	43db      	mvns	r3, r3
 8021e18:	b2db      	uxtb	r3, r3
 8021e1a:	3604      	adds	r6, #4
 8021e1c:	930a      	str	r3, [sp, #40]	@ 0x28
 8021e1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021e20:	2b00      	cmp	r3, #0
 8021e22:	dc03      	bgt.n	8021e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021e24:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8021e26:	2b00      	cmp	r3, #0
 8021e28:	f340 8225 	ble.w	8022276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8021e2c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021e2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021e36:	1e48      	subs	r0, r1, #1
 8021e38:	1e57      	subs	r7, r2, #1
 8021e3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021e3c:	2b00      	cmp	r3, #0
 8021e3e:	f340 80e3 	ble.w	8022008 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8021e42:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8021e46:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021e4a:	d406      	bmi.n	8021e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021e4c:	4584      	cmp	ip, r0
 8021e4e:	da04      	bge.n	8021e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021e50:	2b00      	cmp	r3, #0
 8021e52:	db02      	blt.n	8021e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021e54:	42bb      	cmp	r3, r7
 8021e56:	f2c0 80d8 	blt.w	802200a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8021e5a:	f11c 0c01 	adds.w	ip, ip, #1
 8021e5e:	f100 80c9 	bmi.w	8021ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021e62:	4561      	cmp	r1, ip
 8021e64:	f2c0 80c6 	blt.w	8021ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021e68:	3301      	adds	r3, #1
 8021e6a:	f100 80c3 	bmi.w	8021ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021e6e:	429a      	cmp	r2, r3
 8021e70:	f2c0 80c0 	blt.w	8021ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021e74:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8021e78:	4647      	mov	r7, r8
 8021e7a:	f1bb 0f00 	cmp.w	fp, #0
 8021e7e:	f340 80e3 	ble.w	8022048 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8021e82:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8021e84:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021e86:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021e8a:	689b      	ldr	r3, [r3, #8]
 8021e8c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8021e90:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021e94:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8021e98:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021e9c:	f100 8121 	bmi.w	80220e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021ea0:	f103 39ff 	add.w	r9, r3, #4294967295
 8021ea4:	454a      	cmp	r2, r9
 8021ea6:	f280 811c 	bge.w	80220e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021eaa:	f1bc 0f00 	cmp.w	ip, #0
 8021eae:	f2c0 8118 	blt.w	80220e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021eb2:	f10e 39ff 	add.w	r9, lr, #4294967295
 8021eb6:	45cc      	cmp	ip, r9
 8021eb8:	f280 8113 	bge.w	80220e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021ebc:	b21b      	sxth	r3, r3
 8021ebe:	fb0c 2203 	mla	r2, ip, r3, r2
 8021ec2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021ec4:	eb04 0902 	add.w	r9, r4, r2
 8021ec8:	5ca2      	ldrb	r2, [r4, r2]
 8021eca:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8021ece:	2800      	cmp	r0, #0
 8021ed0:	f000 80fe 	beq.w	80220d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021ed4:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021ed8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8021edc:	9211      	str	r2, [sp, #68]	@ 0x44
 8021ede:	b151      	cbz	r1, 8021ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021ee0:	eb09 0203 	add.w	r2, r9, r3
 8021ee4:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021ee8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021eec:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021eee:	7853      	ldrb	r3, [r2, #1]
 8021ef0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021ef4:	9312      	str	r3, [sp, #72]	@ 0x48
 8021ef6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021ef8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021efa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021efe:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021f02:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021f06:	ea4c 0c03 	orr.w	ip, ip, r3
 8021f0a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021f0c:	041b      	lsls	r3, r3, #16
 8021f0e:	fb10 f201 	smulbb	r2, r0, r1
 8021f12:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021f16:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021f1a:	10d2      	asrs	r2, r2, #3
 8021f1c:	4323      	orrs	r3, r4
 8021f1e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8021f22:	4353      	muls	r3, r2
 8021f24:	fb09 330c 	mla	r3, r9, ip, r3
 8021f28:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021f2c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021f30:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021f34:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021f38:	f1c1 0c10 	rsb	ip, r1, #16
 8021f3c:	ebac 0c00 	sub.w	ip, ip, r0
 8021f40:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021f44:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021f48:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021f4a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021f4c:	0418      	lsls	r0, r3, #16
 8021f4e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8021f52:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021f56:	4318      	orrs	r0, r3
 8021f58:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021f5c:	fb02 c200 	mla	r2, r2, r0, ip
 8021f60:	0d53      	lsrs	r3, r2, #21
 8021f62:	0952      	lsrs	r2, r2, #5
 8021f64:	8838      	ldrh	r0, [r7, #0]
 8021f66:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021f6a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021f6e:	431a      	orrs	r2, r3
 8021f70:	b292      	uxth	r2, r2
 8021f72:	1201      	asrs	r1, r0, #8
 8021f74:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8021f78:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8021f7c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021f80:	fb11 f104 	smulbb	r1, r1, r4
 8021f84:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8021f88:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8021f8c:	00c0      	lsls	r0, r0, #3
 8021f8e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8021f92:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8021f96:	10d1      	asrs	r1, r2, #3
 8021f98:	b2c0      	uxtb	r0, r0
 8021f9a:	00d2      	lsls	r2, r2, #3
 8021f9c:	b2d2      	uxtb	r2, r2
 8021f9e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021fa2:	fb1e fe04 	smulbb	lr, lr, r4
 8021fa6:	fb10 f004 	smulbb	r0, r0, r4
 8021faa:	fa1f fc8c 	uxth.w	ip, ip
 8021fae:	fb01 e103 	mla	r1, r1, r3, lr
 8021fb2:	fb02 0303 	mla	r3, r2, r3, r0
 8021fb6:	b29a      	uxth	r2, r3
 8021fb8:	f10c 0301 	add.w	r3, ip, #1
 8021fbc:	b289      	uxth	r1, r1
 8021fbe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8021fc2:	1c53      	adds	r3, r2, #1
 8021fc4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021fc8:	1c4a      	adds	r2, r1, #1
 8021fca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021fce:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8021fd2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021fd6:	0949      	lsrs	r1, r1, #5
 8021fd8:	ea43 030c 	orr.w	r3, r3, ip
 8021fdc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021fe0:	430b      	orrs	r3, r1
 8021fe2:	803b      	strh	r3, [r7, #0]
 8021fe4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021fe6:	449a      	add	sl, r3
 8021fe8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021fea:	3702      	adds	r7, #2
 8021fec:	441d      	add	r5, r3
 8021fee:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021ff2:	e742      	b.n	8021e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021ff4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021ff6:	449a      	add	sl, r3
 8021ff8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021ffa:	441d      	add	r5, r3
 8021ffc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021ffe:	3b01      	subs	r3, #1
 8022000:	9309      	str	r3, [sp, #36]	@ 0x24
 8022002:	f108 0802 	add.w	r8, r8, #2
 8022006:	e718      	b.n	8021e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022008:	d023      	beq.n	8022052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802200a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802200c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 802200e:	3b01      	subs	r3, #1
 8022010:	fb00 a003 	mla	r0, r0, r3, sl
 8022014:	1400      	asrs	r0, r0, #16
 8022016:	f53f af2d 	bmi.w	8021e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802201a:	3901      	subs	r1, #1
 802201c:	4288      	cmp	r0, r1
 802201e:	f6bf af29 	bge.w	8021e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022022:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8022024:	fb01 5303 	mla	r3, r1, r3, r5
 8022028:	141b      	asrs	r3, r3, #16
 802202a:	f53f af23 	bmi.w	8021e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802202e:	3a01      	subs	r2, #1
 8022030:	4293      	cmp	r3, r2
 8022032:	f6bf af1f 	bge.w	8021e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022036:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 802203a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 802203e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8022042:	f1be 0f00 	cmp.w	lr, #0
 8022046:	dc6c      	bgt.n	8022122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022048:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802204a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802204e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022052:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022054:	2b00      	cmp	r3, #0
 8022056:	f340 810e 	ble.w	8022276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802205a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802205e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022062:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022066:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802206c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022070:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022074:	eef0 6a62 	vmov.f32	s13, s5
 8022078:	ee61 7a27 	vmul.f32	s15, s2, s15
 802207c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022080:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022084:	ee16 aa90 	vmov	sl, s13
 8022088:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802208c:	eef0 6a43 	vmov.f32	s13, s6
 8022090:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022094:	ee12 2a90 	vmov	r2, s5
 8022098:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802209c:	fb92 f3f3 	sdiv	r3, r2, r3
 80220a0:	ee13 2a10 	vmov	r2, s6
 80220a4:	9325      	str	r3, [sp, #148]	@ 0x94
 80220a6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80220a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80220ac:	9326      	str	r3, [sp, #152]	@ 0x98
 80220ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80220b0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80220b2:	3b01      	subs	r3, #1
 80220b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220b8:	930c      	str	r3, [sp, #48]	@ 0x30
 80220ba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80220bc:	bf08      	it	eq
 80220be:	4613      	moveq	r3, r2
 80220c0:	ee16 5a90 	vmov	r5, s13
 80220c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80220c6:	eeb0 3a67 	vmov.f32	s6, s15
 80220ca:	eef0 2a47 	vmov.f32	s5, s14
 80220ce:	e6a6      	b.n	8021e1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80220d0:	2900      	cmp	r1, #0
 80220d2:	f43f af10 	beq.w	8021ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80220d6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80220da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80220de:	930f      	str	r3, [sp, #60]	@ 0x3c
 80220e0:	e709      	b.n	8021ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80220e2:	f112 0901 	adds.w	r9, r2, #1
 80220e6:	f53f af7d 	bmi.w	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80220ea:	454b      	cmp	r3, r9
 80220ec:	f6ff af7a 	blt.w	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80220f0:	f11c 0901 	adds.w	r9, ip, #1
 80220f4:	f53f af76 	bmi.w	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80220f8:	45ce      	cmp	lr, r9
 80220fa:	f6ff af73 	blt.w	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80220fe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022100:	9202      	str	r2, [sp, #8]
 8022102:	b21b      	sxth	r3, r3
 8022104:	fa0f f28e 	sxth.w	r2, lr
 8022108:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802210c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022110:	9201      	str	r2, [sp, #4]
 8022112:	9300      	str	r3, [sp, #0]
 8022114:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022116:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8022118:	4633      	mov	r3, r6
 802211a:	4639      	mov	r1, r7
 802211c:	f7ff fd8e 	bl	8021c3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022120:	e760      	b.n	8021fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022122:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8022124:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8022126:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802212a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802212e:	1429      	asrs	r1, r5, #16
 8022130:	fb03 2101 	mla	r1, r3, r1, r2
 8022134:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022136:	440a      	add	r2, r1
 8022138:	5c61      	ldrb	r1, [r4, r1]
 802213a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802213e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022142:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022146:	f1bc 0f00 	cmp.w	ip, #0
 802214a:	f000 808c 	beq.w	8022266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802214e:	7857      	ldrb	r7, [r2, #1]
 8022150:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022154:	9413      	str	r4, [sp, #76]	@ 0x4c
 8022156:	b140      	cbz	r0, 802216a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022158:	18d7      	adds	r7, r2, r3
 802215a:	5cd3      	ldrb	r3, [r2, r3]
 802215c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022160:	9310      	str	r3, [sp, #64]	@ 0x40
 8022162:	787b      	ldrb	r3, [r7, #1]
 8022164:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022168:	9314      	str	r3, [sp, #80]	@ 0x50
 802216a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802216c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802216e:	fb1c f200 	smulbb	r2, ip, r0
 8022172:	041f      	lsls	r7, r3, #16
 8022174:	10d2      	asrs	r2, r2, #3
 8022176:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802217a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 802217e:	431f      	orrs	r7, r3
 8022180:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022184:	9317      	str	r3, [sp, #92]	@ 0x5c
 8022186:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022188:	041b      	lsls	r3, r3, #16
 802218a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 802218e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022192:	ea43 030b 	orr.w	r3, r3, fp
 8022196:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8022198:	4353      	muls	r3, r2
 802219a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802219e:	fb04 3707 	mla	r7, r4, r7, r3
 80221a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80221a6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80221aa:	ea43 0b01 	orr.w	fp, r3, r1
 80221ae:	f1c0 0110 	rsb	r1, r0, #16
 80221b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80221b4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80221b6:	eba1 0c0c 	sub.w	ip, r1, ip
 80221ba:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80221be:	fb0c 770b 	mla	r7, ip, fp, r7
 80221c2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80221c6:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 80221ca:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80221ce:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80221d2:	ea4c 0c0b 	orr.w	ip, ip, fp
 80221d6:	fb02 770c 	mla	r7, r2, ip, r7
 80221da:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80221dc:	0d79      	lsrs	r1, r7, #21
 80221de:	097f      	lsrs	r7, r7, #5
 80221e0:	8812      	ldrh	r2, [r2, #0]
 80221e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80221e6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80221ea:	430f      	orrs	r7, r1
 80221ec:	b2bb      	uxth	r3, r7
 80221ee:	1211      	asrs	r1, r2, #8
 80221f0:	1218      	asrs	r0, r3, #8
 80221f2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80221f6:	fb11 f104 	smulbb	r1, r1, r4
 80221fa:	10d7      	asrs	r7, r2, #3
 80221fc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022200:	00d2      	lsls	r2, r2, #3
 8022202:	fb00 1009 	mla	r0, r0, r9, r1
 8022206:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802220a:	10d9      	asrs	r1, r3, #3
 802220c:	b2d2      	uxtb	r2, r2
 802220e:	00db      	lsls	r3, r3, #3
 8022210:	fb17 f704 	smulbb	r7, r7, r4
 8022214:	fb12 f204 	smulbb	r2, r2, r4
 8022218:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802221c:	b2db      	uxtb	r3, r3
 802221e:	b280      	uxth	r0, r0
 8022220:	fb01 7109 	mla	r1, r1, r9, r7
 8022224:	fb03 2309 	mla	r3, r3, r9, r2
 8022228:	b29b      	uxth	r3, r3
 802222a:	b289      	uxth	r1, r1
 802222c:	1c42      	adds	r2, r0, #1
 802222e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022232:	1c4f      	adds	r7, r1, #1
 8022234:	1c5a      	adds	r2, r3, #1
 8022236:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802223a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802223e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022242:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022246:	0949      	lsrs	r1, r1, #5
 8022248:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802224a:	4310      	orrs	r0, r2
 802224c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022250:	4308      	orrs	r0, r1
 8022252:	f823 0b02 	strh.w	r0, [r3], #2
 8022256:	930e      	str	r3, [sp, #56]	@ 0x38
 8022258:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802225a:	449a      	add	sl, r3
 802225c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802225e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022262:	441d      	add	r5, r3
 8022264:	e6ed      	b.n	8022042 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022266:	2800      	cmp	r0, #0
 8022268:	f43f af7f 	beq.w	802216a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802226c:	5cd3      	ldrb	r3, [r2, r3]
 802226e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022272:	9310      	str	r3, [sp, #64]	@ 0x40
 8022274:	e779      	b.n	802216a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022276:	b019      	add	sp, #100	@ 0x64
 8022278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802227c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802227c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022280:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8022284:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022288:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 802228c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8022290:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8022294:	8808      	ldrh	r0, [r1, #0]
 8022296:	fb08 470e 	mla	r7, r8, lr, r4
 802229a:	f1b8 0f00 	cmp.w	r8, #0
 802229e:	eb02 0907 	add.w	r9, r2, r7
 80222a2:	db67      	blt.n	8022374 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80222a4:	45c2      	cmp	sl, r8
 80222a6:	dd65      	ble.n	8022374 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80222a8:	2c00      	cmp	r4, #0
 80222aa:	db61      	blt.n	8022370 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80222ac:	45a6      	cmp	lr, r4
 80222ae:	dd5f      	ble.n	8022370 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80222b0:	5dd2      	ldrb	r2, [r2, r7]
 80222b2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80222b6:	1c62      	adds	r2, r4, #1
 80222b8:	d45f      	bmi.n	802237a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80222ba:	4596      	cmp	lr, r2
 80222bc:	dd5d      	ble.n	802237a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80222be:	2d00      	cmp	r5, #0
 80222c0:	d05b      	beq.n	802237a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80222c2:	f899 2001 	ldrb.w	r2, [r9, #1]
 80222c6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80222ca:	f118 0801 	adds.w	r8, r8, #1
 80222ce:	d458      	bmi.n	8022382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80222d0:	45c2      	cmp	sl, r8
 80222d2:	dd56      	ble.n	8022382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80222d4:	2e00      	cmp	r6, #0
 80222d6:	d054      	beq.n	8022382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80222d8:	2c00      	cmp	r4, #0
 80222da:	db50      	blt.n	802237e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80222dc:	45a6      	cmp	lr, r4
 80222de:	dd4e      	ble.n	802237e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80222e0:	f819 200e 	ldrb.w	r2, [r9, lr]
 80222e4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80222e8:	3401      	adds	r4, #1
 80222ea:	d407      	bmi.n	80222fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80222ec:	45a6      	cmp	lr, r4
 80222ee:	dd05      	ble.n	80222fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80222f0:	b125      	cbz	r5, 80222fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80222f2:	44ce      	add	lr, r9
 80222f4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80222f8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80222fc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022300:	fb15 f406 	smulbb	r4, r5, r6
 8022304:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022308:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802230c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022310:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022314:	ea43 0c0c 	orr.w	ip, r3, ip
 8022318:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802231c:	f1c6 0310 	rsb	r3, r6, #16
 8022320:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022324:	1b5b      	subs	r3, r3, r5
 8022326:	ea4e 0707 	orr.w	r7, lr, r7
 802232a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802232e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022332:	437d      	muls	r5, r7
 8022334:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022338:	0403      	lsls	r3, r0, #16
 802233a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802233e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022342:	4318      	orrs	r0, r3
 8022344:	0413      	lsls	r3, r2, #16
 8022346:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802234a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802234e:	4313      	orrs	r3, r2
 8022350:	fb04 c000 	mla	r0, r4, r0, ip
 8022354:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022358:	fb06 0003 	mla	r0, r6, r3, r0
 802235c:	0d43      	lsrs	r3, r0, #21
 802235e:	0940      	lsrs	r0, r0, #5
 8022360:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022364:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022368:	4318      	orrs	r0, r3
 802236a:	8008      	strh	r0, [r1, #0]
 802236c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022370:	4684      	mov	ip, r0
 8022372:	e7a0      	b.n	80222b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022374:	4607      	mov	r7, r0
 8022376:	4684      	mov	ip, r0
 8022378:	e7a7      	b.n	80222ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802237a:	4607      	mov	r7, r0
 802237c:	e7a5      	b.n	80222ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802237e:	4602      	mov	r2, r0
 8022380:	e7b2      	b.n	80222e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022382:	4602      	mov	r2, r0
 8022384:	e7ba      	b.n	80222fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022386:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802238a:	b093      	sub	sp, #76	@ 0x4c
 802238c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8022390:	920f      	str	r2, [sp, #60]	@ 0x3c
 8022392:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022394:	9108      	str	r1, [sp, #32]
 8022396:	9306      	str	r3, [sp, #24]
 8022398:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802239c:	9010      	str	r0, [sp, #64]	@ 0x40
 802239e:	6850      	ldr	r0, [r2, #4]
 80223a0:	6812      	ldr	r2, [r2, #0]
 80223a2:	fb00 1303 	mla	r3, r0, r3, r1
 80223a6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80223aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80223ac:	681b      	ldr	r3, [r3, #0]
 80223ae:	9307      	str	r3, [sp, #28]
 80223b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80223b2:	685f      	ldr	r7, [r3, #4]
 80223b4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80223b8:	3704      	adds	r7, #4
 80223ba:	9b08      	ldr	r3, [sp, #32]
 80223bc:	2b00      	cmp	r3, #0
 80223be:	dc03      	bgt.n	80223c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80223c0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80223c2:	2b00      	cmp	r3, #0
 80223c4:	f340 81b2 	ble.w	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80223c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80223ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223d2:	1e48      	subs	r0, r1, #1
 80223d4:	f102 3cff 	add.w	ip, r2, #4294967295
 80223d8:	9b06      	ldr	r3, [sp, #24]
 80223da:	2b00      	cmp	r3, #0
 80223dc:	f340 80a9 	ble.w	8022532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80223e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80223e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80223e8:	d406      	bmi.n	80223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80223ea:	4586      	cmp	lr, r0
 80223ec:	da04      	bge.n	80223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80223ee:	2b00      	cmp	r3, #0
 80223f0:	db02      	blt.n	80223f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80223f2:	4563      	cmp	r3, ip
 80223f4:	f2c0 809e 	blt.w	8022534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80223f8:	f11e 0e01 	adds.w	lr, lr, #1
 80223fc:	f100 808f 	bmi.w	802251e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022400:	4571      	cmp	r1, lr
 8022402:	f2c0 808c 	blt.w	802251e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022406:	3301      	adds	r3, #1
 8022408:	f100 8089 	bmi.w	802251e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802240c:	429a      	cmp	r2, r3
 802240e:	f2c0 8086 	blt.w	802251e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022412:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022416:	46c8      	mov	r8, r9
 8022418:	f1bb 0f00 	cmp.w	fp, #0
 802241c:	f340 80a6 	ble.w	802256c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022420:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8022422:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022424:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022428:	689b      	ldr	r3, [r3, #8]
 802242a:	1422      	asrs	r2, r4, #16
 802242c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022430:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022434:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022438:	f100 80e3 	bmi.w	8022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802243c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022440:	4552      	cmp	r2, sl
 8022442:	f280 80de 	bge.w	8022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022446:	f1bc 0f00 	cmp.w	ip, #0
 802244a:	f2c0 80da 	blt.w	8022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802244e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022452:	45d4      	cmp	ip, sl
 8022454:	f280 80d5 	bge.w	8022602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022458:	b21b      	sxth	r3, r3
 802245a:	fb0c 2203 	mla	r2, ip, r3, r2
 802245e:	9d07      	ldr	r5, [sp, #28]
 8022460:	eb05 0a02 	add.w	sl, r5, r2
 8022464:	5caa      	ldrb	r2, [r5, r2]
 8022466:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802246a:	2800      	cmp	r0, #0
 802246c:	f000 80c0 	beq.w	80225f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022470:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022474:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022478:	920b      	str	r2, [sp, #44]	@ 0x2c
 802247a:	b151      	cbz	r1, 8022492 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802247c:	eb0a 0203 	add.w	r2, sl, r3
 8022480:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022484:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022488:	9309      	str	r3, [sp, #36]	@ 0x24
 802248a:	7853      	ldrb	r3, [r2, #1]
 802248c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022490:	930c      	str	r3, [sp, #48]	@ 0x30
 8022492:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022494:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8022496:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802249a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802249e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80224a2:	ea4c 0c03 	orr.w	ip, ip, r3
 80224a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80224a8:	041b      	lsls	r3, r3, #16
 80224aa:	fb10 f201 	smulbb	r2, r0, r1
 80224ae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80224b2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80224b6:	10d2      	asrs	r2, r2, #3
 80224b8:	432b      	orrs	r3, r5
 80224ba:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80224be:	4353      	muls	r3, r2
 80224c0:	fb0a 330c 	mla	r3, sl, ip, r3
 80224c4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80224c8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80224cc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80224d0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80224d4:	f1c1 0c10 	rsb	ip, r1, #16
 80224d8:	ebac 0c00 	sub.w	ip, ip, r0
 80224dc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80224e0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80224e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80224e6:	0418      	lsls	r0, r3, #16
 80224e8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80224ec:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80224f0:	4318      	orrs	r0, r3
 80224f2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80224f6:	fb02 c200 	mla	r2, r2, r0, ip
 80224fa:	0d53      	lsrs	r3, r2, #21
 80224fc:	0952      	lsrs	r2, r2, #5
 80224fe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022502:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022506:	431a      	orrs	r2, r3
 8022508:	f8a8 2000 	strh.w	r2, [r8]
 802250c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802250e:	441c      	add	r4, r3
 8022510:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022512:	f108 0802 	add.w	r8, r8, #2
 8022516:	441e      	add	r6, r3
 8022518:	f10b 3bff 	add.w	fp, fp, #4294967295
 802251c:	e77c      	b.n	8022418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802251e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022520:	441c      	add	r4, r3
 8022522:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022524:	441e      	add	r6, r3
 8022526:	9b06      	ldr	r3, [sp, #24]
 8022528:	3b01      	subs	r3, #1
 802252a:	9306      	str	r3, [sp, #24]
 802252c:	f109 0902 	add.w	r9, r9, #2
 8022530:	e752      	b.n	80223d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022532:	d020      	beq.n	8022576 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022534:	9b06      	ldr	r3, [sp, #24]
 8022536:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022538:	3b01      	subs	r3, #1
 802253a:	fb00 4003 	mla	r0, r0, r3, r4
 802253e:	1400      	asrs	r0, r0, #16
 8022540:	f53f af67 	bmi.w	8022412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022544:	3901      	subs	r1, #1
 8022546:	4288      	cmp	r0, r1
 8022548:	f6bf af63 	bge.w	8022412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802254c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802254e:	fb01 6303 	mla	r3, r1, r3, r6
 8022552:	141b      	asrs	r3, r3, #16
 8022554:	f53f af5d 	bmi.w	8022412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022558:	3a01      	subs	r2, #1
 802255a:	4293      	cmp	r3, r2
 802255c:	f6bf af59 	bge.w	8022412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022560:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022564:	46ca      	mov	sl, r9
 8022566:	f1b8 0f00 	cmp.w	r8, #0
 802256a:	dc67      	bgt.n	802263c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802256c:	9b06      	ldr	r3, [sp, #24]
 802256e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022572:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022576:	9b08      	ldr	r3, [sp, #32]
 8022578:	2b00      	cmp	r3, #0
 802257a:	f340 80d7 	ble.w	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802257e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022582:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022586:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802258a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802258c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022590:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022594:	eeb0 6a62 	vmov.f32	s12, s5
 8022598:	ee61 7a27 	vmul.f32	s15, s2, s15
 802259c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80225a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225a4:	ee16 4a10 	vmov	r4, s12
 80225a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225ac:	eeb0 6a43 	vmov.f32	s12, s6
 80225b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225b4:	ee12 2a90 	vmov	r2, s5
 80225b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80225c0:	ee13 2a10 	vmov	r2, s6
 80225c4:	931f      	str	r3, [sp, #124]	@ 0x7c
 80225c6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80225c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80225cc:	9320      	str	r3, [sp, #128]	@ 0x80
 80225ce:	9b08      	ldr	r3, [sp, #32]
 80225d0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80225d2:	3b01      	subs	r3, #1
 80225d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80225d8:	9308      	str	r3, [sp, #32]
 80225da:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80225dc:	bf08      	it	eq
 80225de:	4613      	moveq	r3, r2
 80225e0:	ee16 6a10 	vmov	r6, s12
 80225e4:	9306      	str	r3, [sp, #24]
 80225e6:	eeb0 3a67 	vmov.f32	s6, s15
 80225ea:	eef0 2a47 	vmov.f32	s5, s14
 80225ee:	e6e4      	b.n	80223ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80225f0:	2900      	cmp	r1, #0
 80225f2:	f43f af4e 	beq.w	8022492 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80225f6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80225fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80225fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8022600:	e747      	b.n	8022492 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022602:	f112 0a01 	adds.w	sl, r2, #1
 8022606:	d481      	bmi.n	802250c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022608:	4553      	cmp	r3, sl
 802260a:	f6ff af7f 	blt.w	802250c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802260e:	f11c 0a01 	adds.w	sl, ip, #1
 8022612:	f53f af7b 	bmi.w	802250c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022616:	45d6      	cmp	lr, sl
 8022618:	f6ff af78 	blt.w	802250c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802261c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022620:	b21b      	sxth	r3, r3
 8022622:	fa0f f28e 	sxth.w	r2, lr
 8022626:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802262a:	9201      	str	r2, [sp, #4]
 802262c:	9300      	str	r3, [sp, #0]
 802262e:	9a07      	ldr	r2, [sp, #28]
 8022630:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8022632:	463b      	mov	r3, r7
 8022634:	4641      	mov	r1, r8
 8022636:	f7ff fe21 	bl	802227c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802263a:	e767      	b.n	802250c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802263c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802263e:	9d07      	ldr	r5, [sp, #28]
 8022640:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022644:	1422      	asrs	r2, r4, #16
 8022646:	1431      	asrs	r1, r6, #16
 8022648:	fb03 2101 	mla	r1, r3, r1, r2
 802264c:	9a07      	ldr	r2, [sp, #28]
 802264e:	440a      	add	r2, r1
 8022650:	5c69      	ldrb	r1, [r5, r1]
 8022652:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022656:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802265a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802265e:	f1be 0f00 	cmp.w	lr, #0
 8022662:	d05c      	beq.n	802271e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022664:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022668:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 802266c:	950d      	str	r5, [sp, #52]	@ 0x34
 802266e:	b150      	cbz	r0, 8022686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022670:	eb02 0c03 	add.w	ip, r2, r3
 8022674:	5cd3      	ldrb	r3, [r2, r3]
 8022676:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802267a:	930a      	str	r3, [sp, #40]	@ 0x28
 802267c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022680:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022684:	930e      	str	r3, [sp, #56]	@ 0x38
 8022686:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022688:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802268a:	fb1e f200 	smulbb	r2, lr, r0
 802268e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022692:	10d2      	asrs	r2, r2, #3
 8022694:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022698:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802269c:	ea4c 0c03 	orr.w	ip, ip, r3
 80226a0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80226a4:	9311      	str	r3, [sp, #68]	@ 0x44
 80226a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80226a8:	041b      	lsls	r3, r3, #16
 80226aa:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 80226ae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80226b2:	ea43 030b 	orr.w	r3, r3, fp
 80226b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80226b8:	4353      	muls	r3, r2
 80226ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80226be:	fb05 3c0c 	mla	ip, r5, ip, r3
 80226c2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80226c6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80226ca:	ea43 0b01 	orr.w	fp, r3, r1
 80226ce:	f1c0 0110 	rsb	r1, r0, #16
 80226d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80226d4:	eba1 0e0e 	sub.w	lr, r1, lr
 80226d8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80226dc:	fb0e cc0b 	mla	ip, lr, fp, ip
 80226e0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80226e4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 80226e8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80226ec:	ea4b 0e0e 	orr.w	lr, fp, lr
 80226f0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80226f4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80226f8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80226fc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022700:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022704:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022708:	ea43 0c0c 	orr.w	ip, r3, ip
 802270c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802270e:	f82a cb02 	strh.w	ip, [sl], #2
 8022712:	441c      	add	r4, r3
 8022714:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022716:	f108 38ff 	add.w	r8, r8, #4294967295
 802271a:	441e      	add	r6, r3
 802271c:	e723      	b.n	8022566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802271e:	2800      	cmp	r0, #0
 8022720:	d0b1      	beq.n	8022686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022722:	5cd3      	ldrb	r3, [r2, r3]
 8022724:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022728:	930a      	str	r3, [sp, #40]	@ 0x28
 802272a:	e7ac      	b.n	8022686 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802272c:	b013      	add	sp, #76	@ 0x4c
 802272e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8022732:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022736:	880d      	ldrh	r5, [r1, #0]
 8022738:	b087      	sub	sp, #28
 802273a:	10ef      	asrs	r7, r5, #3
 802273c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8022740:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8022744:	00ed      	lsls	r5, r5, #3
 8022746:	9701      	str	r7, [sp, #4]
 8022748:	b2ed      	uxtb	r5, r5
 802274a:	9502      	str	r5, [sp, #8]
 802274c:	9d01      	ldr	r5, [sp, #4]
 802274e:	9103      	str	r1, [sp, #12]
 8022750:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8022754:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8022758:	9902      	ldr	r1, [sp, #8]
 802275a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 802275e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8022762:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8022766:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 802276a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 802276e:	022d      	lsls	r5, r5, #8
 8022770:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8022774:	fb06 0709 	mla	r7, r6, r9, r0
 8022778:	430d      	orrs	r5, r1
 802277a:	2e00      	cmp	r6, #0
 802277c:	eb02 0c07 	add.w	ip, r2, r7
 8022780:	9505      	str	r5, [sp, #20]
 8022782:	f2c0 80b6 	blt.w	80228f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8022786:	45b3      	cmp	fp, r6
 8022788:	f340 80b3 	ble.w	80228f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802278c:	2800      	cmp	r0, #0
 802278e:	f2c0 80ae 	blt.w	80228ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8022792:	4581      	cmp	r9, r0
 8022794:	f340 80ab 	ble.w	80228ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8022798:	5dd7      	ldrb	r7, [r2, r7]
 802279a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802279e:	441f      	add	r7, r3
 80227a0:	1c42      	adds	r2, r0, #1
 80227a2:	f100 80a9 	bmi.w	80228f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80227a6:	4591      	cmp	r9, r2
 80227a8:	f340 80a6 	ble.w	80228f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80227ac:	2c00      	cmp	r4, #0
 80227ae:	f000 80a3 	beq.w	80228f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80227b2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80227b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80227ba:	441d      	add	r5, r3
 80227bc:	3601      	adds	r6, #1
 80227be:	f100 809f 	bmi.w	8022900 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80227c2:	45b3      	cmp	fp, r6
 80227c4:	f340 809c 	ble.w	8022900 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80227c8:	f1be 0f00 	cmp.w	lr, #0
 80227cc:	f000 8098 	beq.w	8022900 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80227d0:	2800      	cmp	r0, #0
 80227d2:	f2c0 8093 	blt.w	80228fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80227d6:	4581      	cmp	r9, r0
 80227d8:	f340 8090 	ble.w	80228fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80227dc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80227e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80227e4:	441e      	add	r6, r3
 80227e6:	3001      	adds	r0, #1
 80227e8:	f100 808d 	bmi.w	8022906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80227ec:	4581      	cmp	r9, r0
 80227ee:	f340 808a 	ble.w	8022906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80227f2:	2c00      	cmp	r4, #0
 80227f4:	f000 8087 	beq.w	8022906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80227f8:	44e1      	add	r9, ip
 80227fa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80227fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022802:	4413      	add	r3, r2
 8022804:	b2a4      	uxth	r4, r4
 8022806:	fa1f fe8e 	uxth.w	lr, lr
 802280a:	fb04 fb0e 	mul.w	fp, r4, lr
 802280e:	0124      	lsls	r4, r4, #4
 8022810:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8022814:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8022818:	eba4 040b 	sub.w	r4, r4, fp
 802281c:	fa1f f08e 	uxth.w	r0, lr
 8022820:	b2a2      	uxth	r2, r4
 8022822:	78ac      	ldrb	r4, [r5, #2]
 8022824:	f897 c002 	ldrb.w	ip, [r7, #2]
 8022828:	9901      	ldr	r1, [sp, #4]
 802282a:	eba9 0900 	sub.w	r9, r9, r0
 802282e:	fa1f f989 	uxth.w	r9, r9
 8022832:	4354      	muls	r4, r2
 8022834:	fb09 440c 	mla	r4, r9, ip, r4
 8022838:	f896 c002 	ldrb.w	ip, [r6, #2]
 802283c:	fb00 440c 	mla	r4, r0, ip, r4
 8022840:	f893 c002 	ldrb.w	ip, [r3, #2]
 8022844:	fa1f fe88 	uxth.w	lr, r8
 8022848:	ea6f 0808 	mvn.w	r8, r8
 802284c:	fa5f f888 	uxtb.w	r8, r8
 8022850:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8022854:	fb1a fa08 	smulbb	sl, sl, r8
 8022858:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802285c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8022860:	f895 a001 	ldrb.w	sl, [r5, #1]
 8022864:	787c      	ldrb	r4, [r7, #1]
 8022866:	782d      	ldrb	r5, [r5, #0]
 8022868:	783f      	ldrb	r7, [r7, #0]
 802286a:	fb02 fa0a 	mul.w	sl, r2, sl
 802286e:	fb09 aa04 	mla	sl, r9, r4, sl
 8022872:	7874      	ldrb	r4, [r6, #1]
 8022874:	436a      	muls	r2, r5
 8022876:	7835      	ldrb	r5, [r6, #0]
 8022878:	fb00 aa04 	mla	sl, r0, r4, sl
 802287c:	fb09 2207 	mla	r2, r9, r7, r2
 8022880:	785c      	ldrb	r4, [r3, #1]
 8022882:	781b      	ldrb	r3, [r3, #0]
 8022884:	fb00 2005 	mla	r0, r0, r5, r2
 8022888:	fb0b a404 	mla	r4, fp, r4, sl
 802288c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8022890:	9b02      	ldr	r3, [sp, #8]
 8022892:	fb11 fa08 	smulbb	sl, r1, r8
 8022896:	fa1f fc8c 	uxth.w	ip, ip
 802289a:	fb13 f808 	smulbb	r8, r3, r8
 802289e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80228a2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80228a6:	fb04 a40e 	mla	r4, r4, lr, sl
 80228aa:	f10c 0301 	add.w	r3, ip, #1
 80228ae:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80228b2:	fa1f fe8e 	uxth.w	lr, lr
 80228b6:	b2a4      	uxth	r4, r4
 80228b8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80228bc:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 80228c0:	f104 0a01 	add.w	sl, r4, #1
 80228c4:	f10e 0c01 	add.w	ip, lr, #1
 80228c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80228cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80228d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80228d4:	0964      	lsrs	r4, r4, #5
 80228d6:	ea4c 0c03 	orr.w	ip, ip, r3
 80228da:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80228de:	9b03      	ldr	r3, [sp, #12]
 80228e0:	ea4c 0c04 	orr.w	ip, ip, r4
 80228e4:	f8a3 c000 	strh.w	ip, [r3]
 80228e8:	b007      	add	sp, #28
 80228ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80228ee:	af05      	add	r7, sp, #20
 80228f0:	e756      	b.n	80227a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80228f2:	ad05      	add	r5, sp, #20
 80228f4:	462f      	mov	r7, r5
 80228f6:	e761      	b.n	80227bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80228f8:	ad05      	add	r5, sp, #20
 80228fa:	e75f      	b.n	80227bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80228fc:	ae05      	add	r6, sp, #20
 80228fe:	e772      	b.n	80227e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8022900:	ab05      	add	r3, sp, #20
 8022902:	461e      	mov	r6, r3
 8022904:	e77e      	b.n	8022804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8022906:	ab05      	add	r3, sp, #20
 8022908:	e77c      	b.n	8022804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802290a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802290a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802290e:	b095      	sub	sp, #84	@ 0x54
 8022910:	9212      	str	r2, [sp, #72]	@ 0x48
 8022912:	9309      	str	r3, [sp, #36]	@ 0x24
 8022914:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8022916:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 802291a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802291c:	910e      	str	r1, [sp, #56]	@ 0x38
 802291e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8022922:	9013      	str	r0, [sp, #76]	@ 0x4c
 8022924:	6850      	ldr	r0, [r2, #4]
 8022926:	6812      	ldr	r2, [r2, #0]
 8022928:	fb00 1303 	mla	r3, r0, r3, r1
 802292c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022930:	930a      	str	r3, [sp, #40]	@ 0x28
 8022932:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022934:	681b      	ldr	r3, [r3, #0]
 8022936:	930d      	str	r3, [sp, #52]	@ 0x34
 8022938:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802293a:	685c      	ldr	r4, [r3, #4]
 802293c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802293e:	43db      	mvns	r3, r3
 8022940:	b2db      	uxtb	r3, r3
 8022942:	3404      	adds	r4, #4
 8022944:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022946:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022948:	2b00      	cmp	r3, #0
 802294a:	dc03      	bgt.n	8022954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802294c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802294e:	2b00      	cmp	r3, #0
 8022950:	f340 8255 	ble.w	8022dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8022954:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022956:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802295a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802295e:	1e48      	subs	r0, r1, #1
 8022960:	1e55      	subs	r5, r2, #1
 8022962:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022964:	2b00      	cmp	r3, #0
 8022966:	f340 80f9 	ble.w	8022b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802296a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 802296c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802296e:	1436      	asrs	r6, r6, #16
 8022970:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022974:	d406      	bmi.n	8022984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022976:	4286      	cmp	r6, r0
 8022978:	da04      	bge.n	8022984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802297a:	2b00      	cmp	r3, #0
 802297c:	db02      	blt.n	8022984 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802297e:	42ab      	cmp	r3, r5
 8022980:	f2c0 80ed 	blt.w	8022b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8022984:	3601      	adds	r6, #1
 8022986:	f100 80da 	bmi.w	8022b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802298a:	42b1      	cmp	r1, r6
 802298c:	f2c0 80d7 	blt.w	8022b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8022990:	3301      	adds	r3, #1
 8022992:	f100 80d4 	bmi.w	8022b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8022996:	429a      	cmp	r2, r3
 8022998:	f2c0 80d1 	blt.w	8022b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802299c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802299e:	9311      	str	r3, [sp, #68]	@ 0x44
 80229a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80229a2:	930c      	str	r3, [sp, #48]	@ 0x30
 80229a4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80229a6:	2b00      	cmp	r3, #0
 80229a8:	f340 80fa 	ble.w	8022ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80229ac:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80229ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80229b0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80229b2:	68c6      	ldr	r6, [r0, #12]
 80229b4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80229b6:	141d      	asrs	r5, r3, #16
 80229b8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80229bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80229be:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80229c0:	1400      	asrs	r0, r0, #16
 80229c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80229c6:	6892      	ldr	r2, [r2, #8]
 80229c8:	f100 813e 	bmi.w	8022c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80229cc:	1e57      	subs	r7, r2, #1
 80229ce:	42b8      	cmp	r0, r7
 80229d0:	f280 813a 	bge.w	8022c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80229d4:	2d00      	cmp	r5, #0
 80229d6:	f2c0 8137 	blt.w	8022c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80229da:	1e77      	subs	r7, r6, #1
 80229dc:	42bd      	cmp	r5, r7
 80229de:	f280 8133 	bge.w	8022c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80229e2:	b212      	sxth	r2, r2
 80229e4:	fb05 0002 	mla	r0, r5, r2, r0
 80229e8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80229ea:	f815 a000 	ldrb.w	sl, [r5, r0]
 80229ee:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80229f2:	182e      	adds	r6, r5, r0
 80229f4:	eb04 050a 	add.w	r5, r4, sl
 80229f8:	2b00      	cmp	r3, #0
 80229fa:	f000 8117 	beq.w	8022c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80229fe:	f896 c001 	ldrb.w	ip, [r6, #1]
 8022a02:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8022a06:	44a4      	add	ip, r4
 8022a08:	2900      	cmp	r1, #0
 8022a0a:	f000 8117 	beq.w	8022c3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8022a0e:	18b0      	adds	r0, r6, r2
 8022a10:	5cb2      	ldrb	r2, [r6, r2]
 8022a12:	7840      	ldrb	r0, [r0, #1]
 8022a14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022a18:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022a1c:	4422      	add	r2, r4
 8022a1e:	4420      	add	r0, r4
 8022a20:	b29b      	uxth	r3, r3
 8022a22:	b289      	uxth	r1, r1
 8022a24:	fb03 f901 	mul.w	r9, r3, r1
 8022a28:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022a2c:	011b      	lsls	r3, r3, #4
 8022a2e:	b289      	uxth	r1, r1
 8022a30:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8022a34:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022a38:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022a3a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8022a3e:	f8b6 e000 	ldrh.w	lr, [r6]
 8022a42:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8022a46:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8022a4a:	eba3 0309 	sub.w	r3, r3, r9
 8022a4e:	b29b      	uxth	r3, r3
 8022a50:	eba8 0801 	sub.w	r8, r8, r1
 8022a54:	fa1f f888 	uxth.w	r8, r8
 8022a58:	435f      	muls	r7, r3
 8022a5a:	fb08 770b 	mla	r7, r8, fp, r7
 8022a5e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8022a62:	9310      	str	r3, [sp, #64]	@ 0x40
 8022a64:	fb01 770b 	mla	r7, r1, fp, r7
 8022a68:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022a6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022a6e:	fb09 770b 	mla	r7, r9, fp, r7
 8022a72:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8022a76:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8022a7a:	fb1b fb03 	smulbb	fp, fp, r3
 8022a7e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022a82:	fb07 b706 	mla	r7, r7, r6, fp
 8022a86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022a88:	f895 b001 	ldrb.w	fp, [r5, #1]
 8022a8c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8022a90:	f89c c000 	ldrb.w	ip, [ip]
 8022a94:	435d      	muls	r5, r3
 8022a96:	fb08 550b 	mla	r5, r8, fp, r5
 8022a9a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8022a9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022aa0:	fb01 550b 	mla	r5, r1, fp, r5
 8022aa4:	f890 b001 	ldrb.w	fp, [r0, #1]
 8022aa8:	fb09 550b 	mla	r5, r9, fp, r5
 8022aac:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8022ab0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8022ab4:	fb1b fb03 	smulbb	fp, fp, r3
 8022ab8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022aba:	fb03 f30c 	mul.w	r3, r3, ip
 8022abe:	f892 c000 	ldrb.w	ip, [r2]
 8022ac2:	fb08 330a 	mla	r3, r8, sl, r3
 8022ac6:	fb01 330c 	mla	r3, r1, ip, r3
 8022aca:	f890 c000 	ldrb.w	ip, [r0]
 8022ace:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022ad2:	fb09 3c0c 	mla	ip, r9, ip, r3
 8022ad6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022ad8:	fa5f fe8e 	uxtb.w	lr, lr
 8022adc:	b2bf      	uxth	r7, r7
 8022ade:	fb1e fe03 	smulbb	lr, lr, r3
 8022ae2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022ae6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8022aea:	fb05 b506 	mla	r5, r5, r6, fp
 8022aee:	1c7b      	adds	r3, r7, #1
 8022af0:	fb0c e606 	mla	r6, ip, r6, lr
 8022af4:	b2ad      	uxth	r5, r5
 8022af6:	b2b6      	uxth	r6, r6
 8022af8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022afc:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8022b00:	f105 0b01 	add.w	fp, r5, #1
 8022b04:	1c77      	adds	r7, r6, #1
 8022b06:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8022b0a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8022b0e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022b12:	096d      	lsrs	r5, r5, #5
 8022b14:	431f      	orrs	r7, r3
 8022b16:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022b1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022b1c:	433d      	orrs	r5, r7
 8022b1e:	801d      	strh	r5, [r3, #0]
 8022b20:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022b22:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022b24:	3302      	adds	r3, #2
 8022b26:	930c      	str	r3, [sp, #48]	@ 0x30
 8022b28:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022b2a:	4413      	add	r3, r2
 8022b2c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022b2e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8022b30:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022b32:	4413      	add	r3, r2
 8022b34:	9320      	str	r3, [sp, #128]	@ 0x80
 8022b36:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022b38:	3b01      	subs	r3, #1
 8022b3a:	9311      	str	r3, [sp, #68]	@ 0x44
 8022b3c:	e732      	b.n	80229a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022b3e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022b40:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8022b42:	4433      	add	r3, r6
 8022b44:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022b46:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8022b48:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022b4a:	4433      	add	r3, r6
 8022b4c:	9320      	str	r3, [sp, #128]	@ 0x80
 8022b4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b50:	3b01      	subs	r3, #1
 8022b52:	9309      	str	r3, [sp, #36]	@ 0x24
 8022b54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022b56:	3302      	adds	r3, #2
 8022b58:	930a      	str	r3, [sp, #40]	@ 0x28
 8022b5a:	e702      	b.n	8022962 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022b5c:	d027      	beq.n	8022bae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8022b5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b60:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8022b62:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8022b64:	3b01      	subs	r3, #1
 8022b66:	fb00 5003 	mla	r0, r0, r3, r5
 8022b6a:	1400      	asrs	r0, r0, #16
 8022b6c:	f53f af16 	bmi.w	802299c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b70:	3901      	subs	r1, #1
 8022b72:	4288      	cmp	r0, r1
 8022b74:	f6bf af12 	bge.w	802299c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b78:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8022b7a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022b7c:	fb01 0303 	mla	r3, r1, r3, r0
 8022b80:	141b      	asrs	r3, r3, #16
 8022b82:	f53f af0b 	bmi.w	802299c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b86:	3a01      	subs	r2, #1
 8022b88:	4293      	cmp	r3, r2
 8022b8a:	f6bf af07 	bge.w	802299c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022b8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b90:	9311      	str	r3, [sp, #68]	@ 0x44
 8022b92:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8022b96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022b98:	930c      	str	r3, [sp, #48]	@ 0x30
 8022b9a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022b9c:	2b00      	cmp	r3, #0
 8022b9e:	dc70      	bgt.n	8022c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022ba0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022ba2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022ba4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022ba8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022bac:	930a      	str	r3, [sp, #40]	@ 0x28
 8022bae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022bb0:	2b00      	cmp	r3, #0
 8022bb2:	f340 8124 	ble.w	8022dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8022bb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022bba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022bbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022bc2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022bc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022bc8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022bcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022bd0:	eef0 6a62 	vmov.f32	s13, s5
 8022bd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022bd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022bdc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022be0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8022be4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022be8:	eef0 6a43 	vmov.f32	s13, s6
 8022bec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022bf0:	ee12 2a90 	vmov	r2, s5
 8022bf4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022bf8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bfc:	ee13 2a10 	vmov	r2, s6
 8022c00:	9321      	str	r3, [sp, #132]	@ 0x84
 8022c02:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c04:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c08:	9322      	str	r3, [sp, #136]	@ 0x88
 8022c0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022c0c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8022c0e:	3b01      	subs	r3, #1
 8022c10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022c14:	930e      	str	r3, [sp, #56]	@ 0x38
 8022c16:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022c18:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8022c1c:	bf08      	it	eq
 8022c1e:	4613      	moveq	r3, r2
 8022c20:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c22:	eeb0 3a67 	vmov.f32	s6, s15
 8022c26:	eef0 2a47 	vmov.f32	s5, s14
 8022c2a:	e68c      	b.n	8022946 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022c2c:	b149      	cbz	r1, 8022c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8022c2e:	5cb2      	ldrb	r2, [r6, r2]
 8022c30:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022c34:	4422      	add	r2, r4
 8022c36:	4628      	mov	r0, r5
 8022c38:	46ac      	mov	ip, r5
 8022c3a:	e6f1      	b.n	8022a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022c3c:	4628      	mov	r0, r5
 8022c3e:	462a      	mov	r2, r5
 8022c40:	e6ee      	b.n	8022a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022c42:	4628      	mov	r0, r5
 8022c44:	462a      	mov	r2, r5
 8022c46:	e7f7      	b.n	8022c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8022c48:	1c47      	adds	r7, r0, #1
 8022c4a:	f53f af69 	bmi.w	8022b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022c4e:	42ba      	cmp	r2, r7
 8022c50:	f6ff af66 	blt.w	8022b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022c54:	1c6f      	adds	r7, r5, #1
 8022c56:	f53f af63 	bmi.w	8022b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022c5a:	42be      	cmp	r6, r7
 8022c5c:	f6ff af60 	blt.w	8022b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022c60:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8022c62:	9002      	str	r0, [sp, #8]
 8022c64:	b236      	sxth	r6, r6
 8022c66:	b212      	sxth	r2, r2
 8022c68:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8022c6c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8022c70:	9200      	str	r2, [sp, #0]
 8022c72:	9601      	str	r6, [sp, #4]
 8022c74:	4623      	mov	r3, r4
 8022c76:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 8022c7a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8022c7c:	f7ff fd59 	bl	8022732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8022c80:	e74e      	b.n	8022b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022c82:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8022c84:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022c86:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8022c88:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022c8a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8022c8e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8022c90:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022c94:	142d      	asrs	r5, r5, #16
 8022c96:	1400      	asrs	r0, r0, #16
 8022c98:	fb02 5000 	mla	r0, r2, r0, r5
 8022c9c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022c9e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8022ca2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8022ca6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8022caa:	182e      	adds	r6, r5, r0
 8022cac:	eb04 0509 	add.w	r5, r4, r9
 8022cb0:	2b00      	cmp	r3, #0
 8022cb2:	f000 8096 	beq.w	8022de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8022cb6:	7877      	ldrb	r7, [r6, #1]
 8022cb8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8022cbc:	4427      	add	r7, r4
 8022cbe:	2900      	cmp	r1, #0
 8022cc0:	f000 8097 	beq.w	8022df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8022cc4:	18b0      	adds	r0, r6, r2
 8022cc6:	5cb2      	ldrb	r2, [r6, r2]
 8022cc8:	7840      	ldrb	r0, [r0, #1]
 8022cca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022cce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022cd2:	4422      	add	r2, r4
 8022cd4:	4420      	add	r0, r4
 8022cd6:	b29b      	uxth	r3, r3
 8022cd8:	b289      	uxth	r1, r1
 8022cda:	fb03 f801 	mul.w	r8, r3, r1
 8022cde:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022ce0:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022ce4:	f8b6 c000 	ldrh.w	ip, [r6]
 8022ce8:	78be      	ldrb	r6, [r7, #2]
 8022cea:	f814 9009 	ldrb.w	r9, [r4, r9]
 8022cee:	011b      	lsls	r3, r3, #4
 8022cf0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8022cf4:	b289      	uxth	r1, r1
 8022cf6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8022cfa:	eba3 0308 	sub.w	r3, r3, r8
 8022cfe:	b29b      	uxth	r3, r3
 8022d00:	ebae 0e01 	sub.w	lr, lr, r1
 8022d04:	fa1f fe8e 	uxth.w	lr, lr
 8022d08:	435e      	muls	r6, r3
 8022d0a:	fb0e 660b 	mla	r6, lr, fp, r6
 8022d0e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8022d12:	9310      	str	r3, [sp, #64]	@ 0x40
 8022d14:	fb01 660b 	mla	r6, r1, fp, r6
 8022d18:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022d1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022d1e:	fb08 660b 	mla	r6, r8, fp, r6
 8022d22:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8022d26:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8022d2a:	fb1b fb03 	smulbb	fp, fp, r3
 8022d2e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022d32:	fb06 b60a 	mla	r6, r6, sl, fp
 8022d36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022d38:	f895 b001 	ldrb.w	fp, [r5, #1]
 8022d3c:	787d      	ldrb	r5, [r7, #1]
 8022d3e:	783f      	ldrb	r7, [r7, #0]
 8022d40:	435d      	muls	r5, r3
 8022d42:	fb0e 550b 	mla	r5, lr, fp, r5
 8022d46:	f892 b001 	ldrb.w	fp, [r2, #1]
 8022d4a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022d4c:	fb01 550b 	mla	r5, r1, fp, r5
 8022d50:	f890 b001 	ldrb.w	fp, [r0, #1]
 8022d54:	fb08 550b 	mla	r5, r8, fp, r5
 8022d58:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8022d5c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8022d60:	fb1b fb03 	smulbb	fp, fp, r3
 8022d64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022d66:	437b      	muls	r3, r7
 8022d68:	7817      	ldrb	r7, [r2, #0]
 8022d6a:	fb0e 3309 	mla	r3, lr, r9, r3
 8022d6e:	fb01 3307 	mla	r3, r1, r7, r3
 8022d72:	7807      	ldrb	r7, [r0, #0]
 8022d74:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022d78:	fb08 3707 	mla	r7, r8, r7, r3
 8022d7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022d7e:	fa5f fc8c 	uxtb.w	ip, ip
 8022d82:	fb1c fc03 	smulbb	ip, ip, r3
 8022d86:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022d8a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022d8e:	fb05 b50a 	mla	r5, r5, sl, fp
 8022d92:	fb07 c70a 	mla	r7, r7, sl, ip
 8022d96:	b2b6      	uxth	r6, r6
 8022d98:	b2ad      	uxth	r5, r5
 8022d9a:	b2bf      	uxth	r7, r7
 8022d9c:	1c73      	adds	r3, r6, #1
 8022d9e:	1c7a      	adds	r2, r7, #1
 8022da0:	f105 0b01 	add.w	fp, r5, #1
 8022da4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022da8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8022dac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8022db0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022db4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8022db8:	096d      	lsrs	r5, r5, #5
 8022dba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022dbc:	4316      	orrs	r6, r2
 8022dbe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022dc2:	432e      	orrs	r6, r5
 8022dc4:	f823 6b02 	strh.w	r6, [r3], #2
 8022dc8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022dca:	930c      	str	r3, [sp, #48]	@ 0x30
 8022dcc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022dce:	4413      	add	r3, r2
 8022dd0:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022dd2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8022dd4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022dd6:	4413      	add	r3, r2
 8022dd8:	9320      	str	r3, [sp, #128]	@ 0x80
 8022dda:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022ddc:	3b01      	subs	r3, #1
 8022dde:	9311      	str	r3, [sp, #68]	@ 0x44
 8022de0:	e6db      	b.n	8022b9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8022de2:	b149      	cbz	r1, 8022df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022de4:	5cb2      	ldrb	r2, [r6, r2]
 8022de6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022dea:	4422      	add	r2, r4
 8022dec:	4628      	mov	r0, r5
 8022dee:	462f      	mov	r7, r5
 8022df0:	e771      	b.n	8022cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8022df2:	4628      	mov	r0, r5
 8022df4:	462a      	mov	r2, r5
 8022df6:	e76e      	b.n	8022cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8022df8:	4628      	mov	r0, r5
 8022dfa:	462a      	mov	r2, r5
 8022dfc:	e7f7      	b.n	8022dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022dfe:	b015      	add	sp, #84	@ 0x54
 8022e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8022e04:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e08:	880f      	ldrh	r7, [r1, #0]
 8022e0a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8022e0e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8022e12:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8022e16:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8022e1a:	023c      	lsls	r4, r7, #8
 8022e1c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8022e20:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8022e24:	017c      	lsls	r4, r7, #5
 8022e26:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8022e2a:	00ff      	lsls	r7, r7, #3
 8022e2c:	ea4b 0404 	orr.w	r4, fp, r4
 8022e30:	b2ff      	uxtb	r7, r7
 8022e32:	fb05 ca0e 	mla	sl, r5, lr, ip
 8022e36:	4327      	orrs	r7, r4
 8022e38:	2d00      	cmp	r5, #0
 8022e3a:	eb02 080a 	add.w	r8, r2, sl
 8022e3e:	9701      	str	r7, [sp, #4]
 8022e40:	db7e      	blt.n	8022f40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8022e42:	45a9      	cmp	r9, r5
 8022e44:	dd7c      	ble.n	8022f40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8022e46:	f1bc 0f00 	cmp.w	ip, #0
 8022e4a:	db77      	blt.n	8022f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8022e4c:	45e6      	cmp	lr, ip
 8022e4e:	dd75      	ble.n	8022f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8022e50:	f812 700a 	ldrb.w	r7, [r2, sl]
 8022e54:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8022e58:	441f      	add	r7, r3
 8022e5a:	f11c 0201 	adds.w	r2, ip, #1
 8022e5e:	d472      	bmi.n	8022f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8022e60:	4596      	cmp	lr, r2
 8022e62:	dd70      	ble.n	8022f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8022e64:	2800      	cmp	r0, #0
 8022e66:	d06e      	beq.n	8022f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8022e68:	f898 4001 	ldrb.w	r4, [r8, #1]
 8022e6c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8022e70:	441c      	add	r4, r3
 8022e72:	3501      	adds	r5, #1
 8022e74:	d46b      	bmi.n	8022f4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8022e76:	45a9      	cmp	r9, r5
 8022e78:	dd69      	ble.n	8022f4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8022e7a:	2e00      	cmp	r6, #0
 8022e7c:	d067      	beq.n	8022f4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8022e7e:	f1bc 0f00 	cmp.w	ip, #0
 8022e82:	db62      	blt.n	8022f4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8022e84:	45e6      	cmp	lr, ip
 8022e86:	dd60      	ble.n	8022f4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8022e88:	f818 500e 	ldrb.w	r5, [r8, lr]
 8022e8c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8022e90:	441d      	add	r5, r3
 8022e92:	f11c 0201 	adds.w	r2, ip, #1
 8022e96:	d45d      	bmi.n	8022f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8022e98:	4596      	cmp	lr, r2
 8022e9a:	dd5b      	ble.n	8022f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8022e9c:	2800      	cmp	r0, #0
 8022e9e:	d059      	beq.n	8022f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8022ea0:	44c6      	add	lr, r8
 8022ea2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022ea6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022eaa:	4413      	add	r3, r2
 8022eac:	b280      	uxth	r0, r0
 8022eae:	b2b2      	uxth	r2, r6
 8022eb0:	fb00 f602 	mul.w	r6, r0, r2
 8022eb4:	0100      	lsls	r0, r0, #4
 8022eb6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8022eba:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8022ebe:	1b80      	subs	r0, r0, r6
 8022ec0:	fa1f fc82 	uxth.w	ip, r2
 8022ec4:	b282      	uxth	r2, r0
 8022ec6:	78a0      	ldrb	r0, [r4, #2]
 8022ec8:	f897 e002 	ldrb.w	lr, [r7, #2]
 8022ecc:	f897 9000 	ldrb.w	r9, [r7]
 8022ed0:	787f      	ldrb	r7, [r7, #1]
 8022ed2:	eba8 080c 	sub.w	r8, r8, ip
 8022ed6:	fa1f f888 	uxth.w	r8, r8
 8022eda:	4350      	muls	r0, r2
 8022edc:	fb08 0e0e 	mla	lr, r8, lr, r0
 8022ee0:	78a8      	ldrb	r0, [r5, #2]
 8022ee2:	fb0c e000 	mla	r0, ip, r0, lr
 8022ee6:	f893 e002 	ldrb.w	lr, [r3, #2]
 8022eea:	fb06 0e0e 	mla	lr, r6, lr, r0
 8022eee:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8022ef2:	f894 e000 	ldrb.w	lr, [r4]
 8022ef6:	fb02 fe0e 	mul.w	lr, r2, lr
 8022efa:	fb08 e909 	mla	r9, r8, r9, lr
 8022efe:	f895 e000 	ldrb.w	lr, [r5]
 8022f02:	fb0c 990e 	mla	r9, ip, lr, r9
 8022f06:	f893 e000 	ldrb.w	lr, [r3]
 8022f0a:	785b      	ldrb	r3, [r3, #1]
 8022f0c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8022f10:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8022f14:	ea4e 0e00 	orr.w	lr, lr, r0
 8022f18:	7860      	ldrb	r0, [r4, #1]
 8022f1a:	4350      	muls	r0, r2
 8022f1c:	786a      	ldrb	r2, [r5, #1]
 8022f1e:	fb08 0007 	mla	r0, r8, r7, r0
 8022f22:	fb0c 0202 	mla	r2, ip, r2, r0
 8022f26:	fb06 2303 	mla	r3, r6, r3, r2
 8022f2a:	095b      	lsrs	r3, r3, #5
 8022f2c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022f30:	ea4e 0303 	orr.w	r3, lr, r3
 8022f34:	800b      	strh	r3, [r1, #0]
 8022f36:	b003      	add	sp, #12
 8022f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f3c:	af01      	add	r7, sp, #4
 8022f3e:	e78c      	b.n	8022e5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8022f40:	ac01      	add	r4, sp, #4
 8022f42:	4627      	mov	r7, r4
 8022f44:	e795      	b.n	8022e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8022f46:	ac01      	add	r4, sp, #4
 8022f48:	e793      	b.n	8022e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8022f4a:	ad01      	add	r5, sp, #4
 8022f4c:	e7a1      	b.n	8022e92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8022f4e:	ab01      	add	r3, sp, #4
 8022f50:	461d      	mov	r5, r3
 8022f52:	e7ab      	b.n	8022eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8022f54:	ab01      	add	r3, sp, #4
 8022f56:	e7a9      	b.n	8022eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08022f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f5c:	b08f      	sub	sp, #60	@ 0x3c
 8022f5e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8022f62:	920c      	str	r2, [sp, #48]	@ 0x30
 8022f64:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8022f66:	910a      	str	r1, [sp, #40]	@ 0x28
 8022f68:	9306      	str	r3, [sp, #24]
 8022f6a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8022f6e:	900d      	str	r0, [sp, #52]	@ 0x34
 8022f70:	6850      	ldr	r0, [r2, #4]
 8022f72:	6812      	ldr	r2, [r2, #0]
 8022f74:	fb00 1303 	mla	r3, r0, r3, r1
 8022f78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022f7c:	9307      	str	r3, [sp, #28]
 8022f7e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022f80:	681b      	ldr	r3, [r3, #0]
 8022f82:	9308      	str	r3, [sp, #32]
 8022f84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022f86:	685c      	ldr	r4, [r3, #4]
 8022f88:	3404      	adds	r4, #4
 8022f8a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022f8c:	2b00      	cmp	r3, #0
 8022f8e:	dc03      	bgt.n	8022f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8022f90:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022f92:	2b00      	cmp	r3, #0
 8022f94:	f340 81d6 	ble.w	8023344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8022f98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022f9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022fa2:	1e48      	subs	r0, r1, #1
 8022fa4:	1e56      	subs	r6, r2, #1
 8022fa6:	9b06      	ldr	r3, [sp, #24]
 8022fa8:	2b00      	cmp	r3, #0
 8022faa:	f340 80b7 	ble.w	802311c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8022fae:	ea5f 472b 	movs.w	r7, fp, asr #16
 8022fb2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022fb6:	d406      	bmi.n	8022fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022fb8:	4287      	cmp	r7, r0
 8022fba:	da04      	bge.n	8022fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022fbc:	2b00      	cmp	r3, #0
 8022fbe:	db02      	blt.n	8022fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022fc0:	42b3      	cmp	r3, r6
 8022fc2:	f2c0 80ac 	blt.w	802311e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022fc6:	3701      	adds	r7, #1
 8022fc8:	f100 809d 	bmi.w	8023106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022fcc:	42b9      	cmp	r1, r7
 8022fce:	f2c0 809a 	blt.w	8023106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022fd2:	3301      	adds	r3, #1
 8022fd4:	f100 8097 	bmi.w	8023106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022fd8:	429a      	cmp	r2, r3
 8022fda:	f2c0 8094 	blt.w	8023106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022fde:	9b06      	ldr	r3, [sp, #24]
 8022fe0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022fe2:	9b07      	ldr	r3, [sp, #28]
 8022fe4:	9309      	str	r3, [sp, #36]	@ 0x24
 8022fe6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022fe8:	2b00      	cmp	r3, #0
 8022fea:	f340 80b5 	ble.w	8023158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022fee:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022ff0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8022ff2:	68c7      	ldr	r7, [r0, #12]
 8022ff4:	6892      	ldr	r2, [r2, #8]
 8022ff6:	ea5f 402b 	movs.w	r0, fp, asr #16
 8022ffa:	ea4f 4625 	mov.w	r6, r5, asr #16
 8022ffe:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023002:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023006:	f100 80fb 	bmi.w	8023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802300a:	f102 3cff 	add.w	ip, r2, #4294967295
 802300e:	4560      	cmp	r0, ip
 8023010:	f280 80f6 	bge.w	8023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023014:	2e00      	cmp	r6, #0
 8023016:	f2c0 80f3 	blt.w	8023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802301a:	f107 3cff 	add.w	ip, r7, #4294967295
 802301e:	4566      	cmp	r6, ip
 8023020:	f280 80ee 	bge.w	8023200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023024:	b212      	sxth	r2, r2
 8023026:	fb06 0002 	mla	r0, r6, r2, r0
 802302a:	9e08      	ldr	r6, [sp, #32]
 802302c:	1837      	adds	r7, r6, r0
 802302e:	5c30      	ldrb	r0, [r6, r0]
 8023030:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023034:	eb04 0c08 	add.w	ip, r4, r8
 8023038:	2b00      	cmp	r3, #0
 802303a:	f000 80d3 	beq.w	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802303e:	787e      	ldrb	r6, [r7, #1]
 8023040:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023044:	4426      	add	r6, r4
 8023046:	2900      	cmp	r1, #0
 8023048:	f000 80d4 	beq.w	80231f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802304c:	18b8      	adds	r0, r7, r2
 802304e:	5cba      	ldrb	r2, [r7, r2]
 8023050:	7840      	ldrb	r0, [r0, #1]
 8023052:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023056:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802305a:	4422      	add	r2, r4
 802305c:	4420      	add	r0, r4
 802305e:	b29b      	uxth	r3, r3
 8023060:	b289      	uxth	r1, r1
 8023062:	fb03 f901 	mul.w	r9, r3, r1
 8023066:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802306a:	011b      	lsls	r3, r3, #4
 802306c:	b289      	uxth	r1, r1
 802306e:	78b7      	ldrb	r7, [r6, #2]
 8023070:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023074:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023078:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 802307c:	eba3 0309 	sub.w	r3, r3, r9
 8023080:	b29b      	uxth	r3, r3
 8023082:	ebae 0e01 	sub.w	lr, lr, r1
 8023086:	fa1f fe8e 	uxth.w	lr, lr
 802308a:	435f      	muls	r7, r3
 802308c:	fb0e 770a 	mla	r7, lr, sl, r7
 8023090:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023094:	fb01 770a 	mla	r7, r1, sl, r7
 8023098:	f890 a002 	ldrb.w	sl, [r0, #2]
 802309c:	fb09 7a0a 	mla	sl, r9, sl, r7
 80230a0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80230a4:	f896 8000 	ldrb.w	r8, [r6]
 80230a8:	7876      	ldrb	r6, [r6, #1]
 80230aa:	fb03 f808 	mul.w	r8, r3, r8
 80230ae:	fb0e 8807 	mla	r8, lr, r7, r8
 80230b2:	7817      	ldrb	r7, [r2, #0]
 80230b4:	fb01 8807 	mla	r8, r1, r7, r8
 80230b8:	7807      	ldrb	r7, [r0, #0]
 80230ba:	fb09 8707 	mla	r7, r9, r7, r8
 80230be:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 80230c2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80230c6:	ea47 070a 	orr.w	r7, r7, sl
 80230ca:	4373      	muls	r3, r6
 80230cc:	f892 a001 	ldrb.w	sl, [r2, #1]
 80230d0:	fb0e 330c 	mla	r3, lr, ip, r3
 80230d4:	fb01 310a 	mla	r1, r1, sl, r3
 80230d8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80230dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80230de:	fb09 1a0a 	mla	sl, r9, sl, r1
 80230e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80230e6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80230ea:	ea47 070a 	orr.w	r7, r7, sl
 80230ee:	801f      	strh	r7, [r3, #0]
 80230f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80230f2:	3302      	adds	r3, #2
 80230f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80230f6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80230f8:	449b      	add	fp, r3
 80230fa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80230fc:	441d      	add	r5, r3
 80230fe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8023100:	3b01      	subs	r3, #1
 8023102:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023104:	e76f      	b.n	8022fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023106:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8023108:	449b      	add	fp, r3
 802310a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802310c:	441d      	add	r5, r3
 802310e:	9b06      	ldr	r3, [sp, #24]
 8023110:	3b01      	subs	r3, #1
 8023112:	9306      	str	r3, [sp, #24]
 8023114:	9b07      	ldr	r3, [sp, #28]
 8023116:	3302      	adds	r3, #2
 8023118:	9307      	str	r3, [sp, #28]
 802311a:	e744      	b.n	8022fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802311c:	d023      	beq.n	8023166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802311e:	9b06      	ldr	r3, [sp, #24]
 8023120:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8023122:	3b01      	subs	r3, #1
 8023124:	fb00 b003 	mla	r0, r0, r3, fp
 8023128:	1400      	asrs	r0, r0, #16
 802312a:	f53f af58 	bmi.w	8022fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802312e:	3901      	subs	r1, #1
 8023130:	4288      	cmp	r0, r1
 8023132:	f6bf af54 	bge.w	8022fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023136:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8023138:	fb01 5303 	mla	r3, r1, r3, r5
 802313c:	141b      	asrs	r3, r3, #16
 802313e:	f53f af4e 	bmi.w	8022fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023142:	3a01      	subs	r2, #1
 8023144:	4293      	cmp	r3, r2
 8023146:	f6bf af4a 	bge.w	8022fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802314a:	9b06      	ldr	r3, [sp, #24]
 802314c:	9309      	str	r3, [sp, #36]	@ 0x24
 802314e:	9b07      	ldr	r3, [sp, #28]
 8023150:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023152:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023154:	2b00      	cmp	r3, #0
 8023156:	dc70      	bgt.n	802323a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023158:	9b06      	ldr	r3, [sp, #24]
 802315a:	9a07      	ldr	r2, [sp, #28]
 802315c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023160:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023164:	9307      	str	r3, [sp, #28]
 8023166:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023168:	2b00      	cmp	r3, #0
 802316a:	f340 80eb 	ble.w	8023344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802316e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023172:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023176:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802317a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802317c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023180:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023184:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023188:	eef0 6a62 	vmov.f32	s13, s5
 802318c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023190:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023194:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023198:	ee16 ba90 	vmov	fp, s13
 802319c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80231a0:	eef0 6a43 	vmov.f32	s13, s6
 80231a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80231a8:	ee12 2a90 	vmov	r2, s5
 80231ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80231b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80231b4:	ee13 2a10 	vmov	r2, s6
 80231b8:	931b      	str	r3, [sp, #108]	@ 0x6c
 80231ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80231bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80231c0:	931c      	str	r3, [sp, #112]	@ 0x70
 80231c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80231c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80231c6:	3b01      	subs	r3, #1
 80231c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80231cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80231ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80231d0:	bf08      	it	eq
 80231d2:	4613      	moveq	r3, r2
 80231d4:	ee16 5a90 	vmov	r5, s13
 80231d8:	9306      	str	r3, [sp, #24]
 80231da:	eeb0 3a67 	vmov.f32	s6, s15
 80231de:	eef0 2a47 	vmov.f32	s5, s14
 80231e2:	e6d2      	b.n	8022f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80231e4:	b149      	cbz	r1, 80231fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80231e6:	5cba      	ldrb	r2, [r7, r2]
 80231e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80231ec:	4422      	add	r2, r4
 80231ee:	4660      	mov	r0, ip
 80231f0:	4666      	mov	r6, ip
 80231f2:	e734      	b.n	802305e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80231f4:	4660      	mov	r0, ip
 80231f6:	4662      	mov	r2, ip
 80231f8:	e731      	b.n	802305e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80231fa:	4660      	mov	r0, ip
 80231fc:	4662      	mov	r2, ip
 80231fe:	e7f7      	b.n	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023200:	f110 0c01 	adds.w	ip, r0, #1
 8023204:	f53f af74 	bmi.w	80230f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023208:	4562      	cmp	r2, ip
 802320a:	f6ff af71 	blt.w	80230f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802320e:	f116 0c01 	adds.w	ip, r6, #1
 8023212:	f53f af6d 	bmi.w	80230f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023216:	4567      	cmp	r7, ip
 8023218:	f6ff af6a 	blt.w	80230f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802321c:	b23f      	sxth	r7, r7
 802321e:	b212      	sxth	r2, r2
 8023220:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023224:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023228:	9200      	str	r2, [sp, #0]
 802322a:	9701      	str	r7, [sp, #4]
 802322c:	4623      	mov	r3, r4
 802322e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023232:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8023234:	f7ff fde6 	bl	8022e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023238:	e75a      	b.n	80230f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802323a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 802323c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023240:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023244:	1428      	asrs	r0, r5, #16
 8023246:	fb02 6000 	mla	r0, r2, r0, r6
 802324a:	9e08      	ldr	r6, [sp, #32]
 802324c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023250:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023254:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023258:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802325c:	1837      	adds	r7, r6, r0
 802325e:	eb04 0c08 	add.w	ip, r4, r8
 8023262:	2b00      	cmp	r3, #0
 8023264:	d060      	beq.n	8023328 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023266:	787e      	ldrb	r6, [r7, #1]
 8023268:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802326c:	4426      	add	r6, r4
 802326e:	2900      	cmp	r1, #0
 8023270:	d062      	beq.n	8023338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023272:	18b8      	adds	r0, r7, r2
 8023274:	5cba      	ldrb	r2, [r7, r2]
 8023276:	7840      	ldrb	r0, [r0, #1]
 8023278:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802327c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023280:	4422      	add	r2, r4
 8023282:	4420      	add	r0, r4
 8023284:	b29b      	uxth	r3, r3
 8023286:	b289      	uxth	r1, r1
 8023288:	fb03 f901 	mul.w	r9, r3, r1
 802328c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023290:	011b      	lsls	r3, r3, #4
 8023292:	b289      	uxth	r1, r1
 8023294:	78b7      	ldrb	r7, [r6, #2]
 8023296:	f89c a002 	ldrb.w	sl, [ip, #2]
 802329a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802329e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80232a2:	eba3 0309 	sub.w	r3, r3, r9
 80232a6:	b29b      	uxth	r3, r3
 80232a8:	ebae 0e01 	sub.w	lr, lr, r1
 80232ac:	fa1f fe8e 	uxth.w	lr, lr
 80232b0:	435f      	muls	r7, r3
 80232b2:	fb0e 770a 	mla	r7, lr, sl, r7
 80232b6:	f892 a002 	ldrb.w	sl, [r2, #2]
 80232ba:	fb01 770a 	mla	r7, r1, sl, r7
 80232be:	f890 a002 	ldrb.w	sl, [r0, #2]
 80232c2:	fb09 7a0a 	mla	sl, r9, sl, r7
 80232c6:	f814 7008 	ldrb.w	r7, [r4, r8]
 80232ca:	f896 8000 	ldrb.w	r8, [r6]
 80232ce:	7876      	ldrb	r6, [r6, #1]
 80232d0:	fb03 f808 	mul.w	r8, r3, r8
 80232d4:	fb0e 8807 	mla	r8, lr, r7, r8
 80232d8:	7817      	ldrb	r7, [r2, #0]
 80232da:	fb01 8807 	mla	r8, r1, r7, r8
 80232de:	7807      	ldrb	r7, [r0, #0]
 80232e0:	fb09 8707 	mla	r7, r9, r7, r8
 80232e4:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 80232e8:	4373      	muls	r3, r6
 80232ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80232ee:	7856      	ldrb	r6, [r2, #1]
 80232f0:	ea47 070a 	orr.w	r7, r7, sl
 80232f4:	fb0e 330c 	mla	r3, lr, ip, r3
 80232f8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80232fc:	fb01 3306 	mla	r3, r1, r6, r3
 8023300:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023304:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023308:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802330a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 802330e:	ea47 070a 	orr.w	r7, r7, sl
 8023312:	f823 7b02 	strh.w	r7, [r3], #2
 8023316:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023318:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802331a:	449b      	add	fp, r3
 802331c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802331e:	441d      	add	r5, r3
 8023320:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023322:	3b01      	subs	r3, #1
 8023324:	9309      	str	r3, [sp, #36]	@ 0x24
 8023326:	e714      	b.n	8023152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023328:	b149      	cbz	r1, 802333e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802332a:	5cba      	ldrb	r2, [r7, r2]
 802332c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023330:	4422      	add	r2, r4
 8023332:	4660      	mov	r0, ip
 8023334:	4666      	mov	r6, ip
 8023336:	e7a5      	b.n	8023284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023338:	4660      	mov	r0, ip
 802333a:	4662      	mov	r2, ip
 802333c:	e7a2      	b.n	8023284 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802333e:	4660      	mov	r0, ip
 8023340:	4662      	mov	r2, ip
 8023342:	e7f7      	b.n	8023334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023344:	b00f      	add	sp, #60	@ 0x3c
 8023346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802334a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802334a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802334e:	b085      	sub	sp, #20
 8023350:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8023354:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8023358:	9102      	str	r1, [sp, #8]
 802335a:	2c00      	cmp	r4, #0
 802335c:	fb04 710c 	mla	r1, r4, ip, r7
 8023360:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8023364:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8023368:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 802336c:	eb02 0e01 	add.w	lr, r2, r1
 8023370:	f2c0 8122 	blt.w	80235b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023374:	45a0      	cmp	r8, r4
 8023376:	f340 811f 	ble.w	80235b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 802337a:	2f00      	cmp	r7, #0
 802337c:	f2c0 811a 	blt.w	80235b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023380:	45bc      	cmp	ip, r7
 8023382:	f340 8117 	ble.w	80235b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023386:	5c52      	ldrb	r2, [r2, r1]
 8023388:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802338c:	1c7a      	adds	r2, r7, #1
 802338e:	f100 8116 	bmi.w	80235be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023392:	4594      	cmp	ip, r2
 8023394:	f340 8113 	ble.w	80235be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023398:	2e00      	cmp	r6, #0
 802339a:	f000 8112 	beq.w	80235c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802339e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80233a2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80233a6:	3401      	adds	r4, #1
 80233a8:	f100 810f 	bmi.w	80235ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80233ac:	45a0      	cmp	r8, r4
 80233ae:	f340 810c 	ble.w	80235ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80233b2:	2800      	cmp	r0, #0
 80233b4:	f000 810c 	beq.w	80235d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80233b8:	2f00      	cmp	r7, #0
 80233ba:	f2c0 8104 	blt.w	80235c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80233be:	45bc      	cmp	ip, r7
 80233c0:	f340 8101 	ble.w	80235c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80233c4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80233c8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80233cc:	3701      	adds	r7, #1
 80233ce:	f100 8102 	bmi.w	80235d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80233d2:	45bc      	cmp	ip, r7
 80233d4:	f340 80ff 	ble.w	80235d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80233d8:	2e00      	cmp	r6, #0
 80233da:	f000 80fe 	beq.w	80235da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80233de:	44f4      	add	ip, lr
 80233e0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80233e4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80233e8:	b2b6      	uxth	r6, r6
 80233ea:	b280      	uxth	r0, r0
 80233ec:	fb00 fe06 	mul.w	lr, r0, r6
 80233f0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80233f4:	0136      	lsls	r6, r6, #4
 80233f6:	eba6 070e 	sub.w	r7, r6, lr
 80233fa:	b280      	uxth	r0, r0
 80233fc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8023400:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023404:	b2bf      	uxth	r7, r7
 8023406:	1a1b      	subs	r3, r3, r0
 8023408:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802340c:	b29b      	uxth	r3, r3
 802340e:	fb0a f607 	mul.w	r6, sl, r7
 8023412:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023416:	fb0b 6603 	mla	r6, fp, r3, r6
 802341a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802341e:	fb00 6609 	mla	r6, r0, r9, r6
 8023422:	fb0e 6608 	mla	r6, lr, r8, r6
 8023426:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802342a:	9600      	str	r6, [sp, #0]
 802342c:	2e00      	cmp	r6, #0
 802342e:	f000 80be 	beq.w	80235ae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023432:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023436:	fb0b fc0c 	mul.w	ip, fp, ip
 802343a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 802343e:	fb0b f505 	mul.w	r5, fp, r5
 8023442:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023446:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802344a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802344e:	44dc      	add	ip, fp
 8023450:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023454:	9501      	str	r5, [sp, #4]
 8023456:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802345a:	9503      	str	r5, [sp, #12]
 802345c:	9d01      	ldr	r5, [sp, #4]
 802345e:	9e02      	ldr	r6, [sp, #8]
 8023460:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8023464:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023468:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802346c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023470:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023474:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023478:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802347c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023480:	4465      	add	r5, ip
 8023482:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023486:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802348a:	fb09 fc0c 	mul.w	ip, r9, ip
 802348e:	fb09 f904 	mul.w	r9, r9, r4
 8023492:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8023496:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802349a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802349e:	fb08 f404 	mul.w	r4, r8, r4
 80234a2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80234a6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80234aa:	fb08 f802 	mul.w	r8, r8, r2
 80234ae:	fb0a fa01 	mul.w	sl, sl, r1
 80234b2:	0a22      	lsrs	r2, r4, #8
 80234b4:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80234b8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80234bc:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80234c0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80234c4:	4414      	add	r4, r2
 80234c6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80234ca:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80234ce:	0a2d      	lsrs	r5, r5, #8
 80234d0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80234d4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80234d8:	9a03      	ldr	r2, [sp, #12]
 80234da:	8836      	ldrh	r6, [r6, #0]
 80234dc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80234e0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80234e4:	437d      	muls	r5, r7
 80234e6:	4461      	add	r1, ip
 80234e8:	0a24      	lsrs	r4, r4, #8
 80234ea:	fb02 5503 	mla	r5, r2, r3, r5
 80234ee:	0a09      	lsrs	r1, r1, #8
 80234f0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80234f4:	fb04 540e 	mla	r4, r4, lr, r5
 80234f8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80234fc:	fb01 4100 	mla	r1, r1, r0, r4
 8023500:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023504:	0a09      	lsrs	r1, r1, #8
 8023506:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802350a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 802350e:	fb07 f70a 	mul.w	r7, r7, sl
 8023512:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023516:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802351a:	fb03 7101 	mla	r1, r3, r1, r7
 802351e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023522:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023526:	fb0e 1e08 	mla	lr, lr, r8, r1
 802352a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802352e:	fb00 e101 	mla	r1, r0, r1, lr
 8023532:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8023536:	9a00      	ldr	r2, [sp, #0]
 8023538:	b287      	uxth	r7, r0
 802353a:	437a      	muls	r2, r7
 802353c:	0a09      	lsrs	r1, r1, #8
 802353e:	1c53      	adds	r3, r2, #1
 8023540:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023544:	4321      	orrs	r1, r4
 8023546:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802354a:	1235      	asrs	r5, r6, #8
 802354c:	0c0a      	lsrs	r2, r1, #16
 802354e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023552:	b2db      	uxtb	r3, r3
 8023554:	fb12 f207 	smulbb	r2, r2, r7
 8023558:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802355c:	fb05 2503 	mla	r5, r5, r3, r2
 8023560:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023564:	10f2      	asrs	r2, r6, #3
 8023566:	b2c8      	uxtb	r0, r1
 8023568:	00f6      	lsls	r6, r6, #3
 802356a:	fb14 f407 	smulbb	r4, r4, r7
 802356e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023572:	b2f6      	uxtb	r6, r6
 8023574:	fb10 f007 	smulbb	r0, r0, r7
 8023578:	fb02 4203 	mla	r2, r2, r3, r4
 802357c:	b2ad      	uxth	r5, r5
 802357e:	fb06 0303 	mla	r3, r6, r3, r0
 8023582:	b299      	uxth	r1, r3
 8023584:	b294      	uxth	r4, r2
 8023586:	1c6b      	adds	r3, r5, #1
 8023588:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802358c:	1c62      	adds	r2, r4, #1
 802358e:	1c4b      	adds	r3, r1, #1
 8023590:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023594:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023598:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802359c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80235a0:	0952      	lsrs	r2, r2, #5
 80235a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80235a6:	432b      	orrs	r3, r5
 80235a8:	4313      	orrs	r3, r2
 80235aa:	9a02      	ldr	r2, [sp, #8]
 80235ac:	8013      	strh	r3, [r2, #0]
 80235ae:	b005      	add	sp, #20
 80235b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80235b4:	2500      	movs	r5, #0
 80235b6:	e6e9      	b.n	802338c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80235b8:	2100      	movs	r1, #0
 80235ba:	460d      	mov	r5, r1
 80235bc:	e6f3      	b.n	80233a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80235be:	2100      	movs	r1, #0
 80235c0:	e6f1      	b.n	80233a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80235c2:	4631      	mov	r1, r6
 80235c4:	e6ef      	b.n	80233a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80235c6:	2400      	movs	r4, #0
 80235c8:	e700      	b.n	80233cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80235ca:	2200      	movs	r2, #0
 80235cc:	4614      	mov	r4, r2
 80235ce:	e70b      	b.n	80233e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80235d0:	4602      	mov	r2, r0
 80235d2:	4604      	mov	r4, r0
 80235d4:	e708      	b.n	80233e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80235d6:	2200      	movs	r2, #0
 80235d8:	e706      	b.n	80233e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80235da:	4632      	mov	r2, r6
 80235dc:	e704      	b.n	80233e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080235de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80235de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235e2:	b09f      	sub	sp, #124	@ 0x7c
 80235e4:	921b      	str	r2, [sp, #108]	@ 0x6c
 80235e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80235e8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80235ea:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 80235ee:	931c      	str	r3, [sp, #112]	@ 0x70
 80235f0:	9119      	str	r1, [sp, #100]	@ 0x64
 80235f2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 80235f6:	901d      	str	r0, [sp, #116]	@ 0x74
 80235f8:	6850      	ldr	r0, [r2, #4]
 80235fa:	6812      	ldr	r2, [r2, #0]
 80235fc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80235fe:	fb00 1303 	mla	r3, r0, r3, r1
 8023602:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023606:	930c      	str	r3, [sp, #48]	@ 0x30
 8023608:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802360a:	681b      	ldr	r3, [r3, #0]
 802360c:	9312      	str	r3, [sp, #72]	@ 0x48
 802360e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8023610:	685e      	ldr	r6, [r3, #4]
 8023612:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8023616:	930d      	str	r3, [sp, #52]	@ 0x34
 8023618:	3604      	adds	r6, #4
 802361a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802361c:	2b00      	cmp	r3, #0
 802361e:	dc03      	bgt.n	8023628 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023620:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8023622:	2b00      	cmp	r3, #0
 8023624:	f340 8388 	ble.w	8023d38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023628:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802362a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802362e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023632:	1e48      	subs	r0, r1, #1
 8023634:	1e57      	subs	r7, r2, #1
 8023636:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023638:	2b00      	cmp	r3, #0
 802363a:	f340 8195 	ble.w	8023968 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802363e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8023640:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023644:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023648:	d406      	bmi.n	8023658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802364a:	4584      	cmp	ip, r0
 802364c:	da04      	bge.n	8023658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802364e:	2b00      	cmp	r3, #0
 8023650:	db02      	blt.n	8023658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023652:	42bb      	cmp	r3, r7
 8023654:	f2c0 8189 	blt.w	802396a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023658:	f11c 0c01 	adds.w	ip, ip, #1
 802365c:	f100 8177 	bmi.w	802394e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023660:	4561      	cmp	r1, ip
 8023662:	f2c0 8174 	blt.w	802394e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023666:	3301      	adds	r3, #1
 8023668:	f100 8171 	bmi.w	802394e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802366c:	429a      	cmp	r2, r3
 802366e:	f2c0 816e 	blt.w	802394e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023672:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023674:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8023676:	931a      	str	r3, [sp, #104]	@ 0x68
 8023678:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802367a:	2b00      	cmp	r3, #0
 802367c:	f340 8193 	ble.w	80239a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023680:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023682:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023686:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8023688:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802368c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802368e:	141b      	asrs	r3, r3, #16
 8023690:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023694:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023698:	f100 81d6 	bmi.w	8023a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802369c:	f100 38ff 	add.w	r8, r0, #4294967295
 80236a0:	4543      	cmp	r3, r8
 80236a2:	f280 81d1 	bge.w	8023a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80236a6:	f1bc 0f00 	cmp.w	ip, #0
 80236aa:	f2c0 81cd 	blt.w	8023a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80236ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 80236b2:	45c4      	cmp	ip, r8
 80236b4:	f280 81c8 	bge.w	8023a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80236b8:	b200      	sxth	r0, r0
 80236ba:	fb0c 3300 	mla	r3, ip, r0, r3
 80236be:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80236c0:	eb04 0803 	add.w	r8, r4, r3
 80236c4:	5ce3      	ldrb	r3, [r4, r3]
 80236c6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80236ca:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80236ce:	2a00      	cmp	r2, #0
 80236d0:	f000 81af 	beq.w	8023a32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80236d4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80236d8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80236dc:	940e      	str	r4, [sp, #56]	@ 0x38
 80236de:	0e24      	lsrs	r4, r4, #24
 80236e0:	9415      	str	r4, [sp, #84]	@ 0x54
 80236e2:	b179      	cbz	r1, 8023704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80236e4:	eb08 0c00 	add.w	ip, r8, r0
 80236e8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80236ec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80236f0:	900a      	str	r0, [sp, #40]	@ 0x28
 80236f2:	0e00      	lsrs	r0, r0, #24
 80236f4:	9013      	str	r0, [sp, #76]	@ 0x4c
 80236f6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80236fa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80236fe:	900f      	str	r0, [sp, #60]	@ 0x3c
 8023700:	0e00      	lsrs	r0, r0, #24
 8023702:	9016      	str	r0, [sp, #88]	@ 0x58
 8023704:	b292      	uxth	r2, r2
 8023706:	b289      	uxth	r1, r1
 8023708:	fb02 f901 	mul.w	r9, r2, r1
 802370c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023710:	0112      	lsls	r2, r2, #4
 8023712:	eba2 0809 	sub.w	r8, r2, r9
 8023716:	b289      	uxth	r1, r1
 8023718:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802371c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802371e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023720:	fa1f f888 	uxth.w	r8, r8
 8023724:	1a52      	subs	r2, r2, r1
 8023726:	b292      	uxth	r2, r2
 8023728:	fb08 f000 	mul.w	r0, r8, r0
 802372c:	fb02 000e 	mla	r0, r2, lr, r0
 8023730:	fb01 0004 	mla	r0, r1, r4, r0
 8023734:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023736:	fb09 0004 	mla	r0, r9, r4, r0
 802373a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802373e:	2800      	cmp	r0, #0
 8023740:	f000 80fa 	beq.w	8023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023744:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023748:	d01b      	beq.n	8023782 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802374a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802374e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023752:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023756:	fb0e fe03 	mul.w	lr, lr, r3
 802375a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802375e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023762:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023766:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802376a:	4453      	add	r3, sl
 802376c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023770:	0a1b      	lsrs	r3, r3, #8
 8023772:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023776:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802377a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802377e:	ea43 030c 	orr.w	r3, r3, ip
 8023782:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023784:	2cff      	cmp	r4, #255	@ 0xff
 8023786:	d021      	beq.n	80237cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023788:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802378a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802378e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023790:	fb04 fb0b 	mul.w	fp, r4, fp
 8023794:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023796:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802379a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802379c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80237a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80237a4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80237a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80237ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80237b0:	44de      	add	lr, fp
 80237b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80237b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80237ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80237be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80237c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80237c6:	ea4e 040a 	orr.w	r4, lr, sl
 80237ca:	940e      	str	r4, [sp, #56]	@ 0x38
 80237cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80237ce:	2cff      	cmp	r4, #255	@ 0xff
 80237d0:	d021      	beq.n	8023816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80237d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80237d4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80237d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80237da:	fb04 fb0b 	mul.w	fp, r4, fp
 80237de:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80237e0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80237e4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80237e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80237ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80237ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80237f2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80237f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80237fa:	44de      	add	lr, fp
 80237fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023800:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023804:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023808:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802380c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023810:	ea4e 040a 	orr.w	r4, lr, sl
 8023814:	940a      	str	r4, [sp, #40]	@ 0x28
 8023816:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023818:	2cff      	cmp	r4, #255	@ 0xff
 802381a:	d021      	beq.n	8023860 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802381c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802381e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8023822:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023824:	fb04 fb0b 	mul.w	fp, r4, fp
 8023828:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802382a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802382e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023830:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023834:	fb04 fa0a 	mul.w	sl, r4, sl
 8023838:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802383c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023840:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023844:	44de      	add	lr, fp
 8023846:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802384a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802384e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023852:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023856:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802385a:	ea4e 040a 	orr.w	r4, lr, sl
 802385e:	940f      	str	r4, [sp, #60]	@ 0x3c
 8023860:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023862:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023866:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8023868:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802386c:	fb08 fc0c 	mul.w	ip, r8, ip
 8023870:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023874:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8023878:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802387a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802387e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8023882:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023884:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023888:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802388c:	fb08 f80e 	mul.w	r8, r8, lr
 8023890:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023894:	fb02 8303 	mla	r3, r2, r3, r8
 8023898:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802389a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802389c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80238a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80238a2:	fb01 330a 	mla	r3, r1, sl, r3
 80238a6:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 80238aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80238ac:	fb09 3901 	mla	r9, r9, r1, r3
 80238b0:	4342      	muls	r2, r0
 80238b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80238ba:	883b      	ldrh	r3, [r7, #0]
 80238bc:	1c50      	adds	r0, r2, #1
 80238be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80238c2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80238c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80238ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80238ce:	1219      	asrs	r1, r3, #8
 80238d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80238d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80238d8:	b2c0      	uxtb	r0, r0
 80238da:	fb12 f204 	smulbb	r2, r2, r4
 80238de:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80238e2:	fb01 2100 	mla	r1, r1, r0, r2
 80238e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80238ea:	10da      	asrs	r2, r3, #3
 80238ec:	fa5f fc8c 	uxtb.w	ip, ip
 80238f0:	00db      	lsls	r3, r3, #3
 80238f2:	fb1c fc04 	smulbb	ip, ip, r4
 80238f6:	b2db      	uxtb	r3, r3
 80238f8:	b289      	uxth	r1, r1
 80238fa:	fb03 c300 	mla	r3, r3, r0, ip
 80238fe:	fa1f fc83 	uxth.w	ip, r3
 8023902:	1c4b      	adds	r3, r1, #1
 8023904:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023908:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802390c:	fb1e fe04 	smulbb	lr, lr, r4
 8023910:	f10c 0301 	add.w	r3, ip, #1
 8023914:	fb02 e200 	mla	r2, r2, r0, lr
 8023918:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802391c:	b292      	uxth	r2, r2
 802391e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023922:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023926:	430b      	orrs	r3, r1
 8023928:	1c51      	adds	r1, r2, #1
 802392a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802392e:	0952      	lsrs	r2, r2, #5
 8023930:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023934:	4313      	orrs	r3, r2
 8023936:	803b      	strh	r3, [r7, #0]
 8023938:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802393a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802393c:	441a      	add	r2, r3
 802393e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023940:	9229      	str	r2, [sp, #164]	@ 0xa4
 8023942:	441d      	add	r5, r3
 8023944:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8023946:	3b01      	subs	r3, #1
 8023948:	3702      	adds	r7, #2
 802394a:	931a      	str	r3, [sp, #104]	@ 0x68
 802394c:	e694      	b.n	8023678 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802394e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8023950:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8023952:	441c      	add	r4, r3
 8023954:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023956:	9429      	str	r4, [sp, #164]	@ 0xa4
 8023958:	441d      	add	r5, r3
 802395a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802395c:	3b01      	subs	r3, #1
 802395e:	9309      	str	r3, [sp, #36]	@ 0x24
 8023960:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8023962:	3302      	adds	r3, #2
 8023964:	930c      	str	r3, [sp, #48]	@ 0x30
 8023966:	e666      	b.n	8023636 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023968:	d024      	beq.n	80239b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802396a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802396c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 802396e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8023970:	3b01      	subs	r3, #1
 8023972:	fb00 4003 	mla	r0, r0, r3, r4
 8023976:	1400      	asrs	r0, r0, #16
 8023978:	f53f ae7b 	bmi.w	8023672 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802397c:	3901      	subs	r1, #1
 802397e:	4288      	cmp	r0, r1
 8023980:	f6bf ae77 	bge.w	8023672 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023984:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8023986:	fb01 5303 	mla	r3, r1, r3, r5
 802398a:	141b      	asrs	r3, r3, #16
 802398c:	f53f ae71 	bmi.w	8023672 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023990:	3a01      	subs	r2, #1
 8023992:	4293      	cmp	r3, r2
 8023994:	f6bf ae6d 	bge.w	8023672 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023998:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802399c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 80239a0:	f1bb 0f00 	cmp.w	fp, #0
 80239a4:	dc70      	bgt.n	8023a88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80239a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80239a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80239ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80239ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80239b2:	930c      	str	r3, [sp, #48]	@ 0x30
 80239b4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80239b6:	2b00      	cmp	r3, #0
 80239b8:	f340 81be 	ble.w	8023d38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80239bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80239c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80239c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80239c8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80239ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80239ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80239d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80239d6:	eef0 6a62 	vmov.f32	s13, s5
 80239da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80239de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80239e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80239e6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 80239ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80239ee:	eef0 6a43 	vmov.f32	s13, s6
 80239f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80239f6:	ee12 2a90 	vmov	r2, s5
 80239fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80239fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a02:	ee13 2a10 	vmov	r2, s6
 8023a06:	932b      	str	r3, [sp, #172]	@ 0xac
 8023a08:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023a0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a0e:	932c      	str	r3, [sp, #176]	@ 0xb0
 8023a10:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8023a12:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8023a14:	3b01      	subs	r3, #1
 8023a16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a1a:	9319      	str	r3, [sp, #100]	@ 0x64
 8023a1c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023a1e:	bf08      	it	eq
 8023a20:	4613      	moveq	r3, r2
 8023a22:	ee16 5a90 	vmov	r5, s13
 8023a26:	9309      	str	r3, [sp, #36]	@ 0x24
 8023a28:	eeb0 3a67 	vmov.f32	s6, s15
 8023a2c:	eef0 2a47 	vmov.f32	s5, s14
 8023a30:	e5f3      	b.n	802361a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023a32:	2900      	cmp	r1, #0
 8023a34:	f43f ae66 	beq.w	8023704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023a38:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023a3c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023a40:	900a      	str	r0, [sp, #40]	@ 0x28
 8023a42:	0e00      	lsrs	r0, r0, #24
 8023a44:	9013      	str	r0, [sp, #76]	@ 0x4c
 8023a46:	e65d      	b.n	8023704 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023a48:	f113 0801 	adds.w	r8, r3, #1
 8023a4c:	f53f af74 	bmi.w	8023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a50:	4540      	cmp	r0, r8
 8023a52:	f6ff af71 	blt.w	8023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a56:	f11c 0801 	adds.w	r8, ip, #1
 8023a5a:	f53f af6d 	bmi.w	8023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a5e:	45c6      	cmp	lr, r8
 8023a60:	f6ff af6a 	blt.w	8023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a64:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8023a66:	9302      	str	r3, [sp, #8]
 8023a68:	b200      	sxth	r0, r0
 8023a6a:	fa0f f38e 	sxth.w	r3, lr
 8023a6e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8023a72:	e9cd c203 	strd	ip, r2, [sp, #12]
 8023a76:	9301      	str	r3, [sp, #4]
 8023a78:	9000      	str	r0, [sp, #0]
 8023a7a:	4633      	mov	r3, r6
 8023a7c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8023a7e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8023a80:	4639      	mov	r1, r7
 8023a82:	f7ff fc62 	bl	802334a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8023a86:	e757      	b.n	8023938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a88:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023a8a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8023a8c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023a90:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8023a92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a96:	1427      	asrs	r7, r4, #16
 8023a98:	142b      	asrs	r3, r5, #16
 8023a9a:	fb01 7303 	mla	r3, r1, r3, r7
 8023a9e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8023aa0:	18e7      	adds	r7, r4, r3
 8023aa2:	5ce3      	ldrb	r3, [r4, r3]
 8023aa4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023aa8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023aac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023ab0:	2a00      	cmp	r2, #0
 8023ab2:	f000 8137 	beq.w	8023d24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023ab6:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023aba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023abe:	9410      	str	r4, [sp, #64]	@ 0x40
 8023ac0:	0e24      	lsrs	r4, r4, #24
 8023ac2:	9417      	str	r4, [sp, #92]	@ 0x5c
 8023ac4:	b170      	cbz	r0, 8023ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023ac6:	eb07 0e01 	add.w	lr, r7, r1
 8023aca:	5c79      	ldrb	r1, [r7, r1]
 8023acc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023ad0:	910b      	str	r1, [sp, #44]	@ 0x2c
 8023ad2:	0e09      	lsrs	r1, r1, #24
 8023ad4:	9114      	str	r1, [sp, #80]	@ 0x50
 8023ad6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8023ada:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023ade:	9111      	str	r1, [sp, #68]	@ 0x44
 8023ae0:	0e09      	lsrs	r1, r1, #24
 8023ae2:	9118      	str	r1, [sp, #96]	@ 0x60
 8023ae4:	b292      	uxth	r2, r2
 8023ae6:	b280      	uxth	r0, r0
 8023ae8:	fb02 f800 	mul.w	r8, r2, r0
 8023aec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023af0:	0112      	lsls	r2, r2, #4
 8023af2:	eba2 0e08 	sub.w	lr, r2, r8
 8023af6:	b280      	uxth	r0, r0
 8023af8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023afc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8023afe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023b00:	fa1f fe8e 	uxth.w	lr, lr
 8023b04:	1a12      	subs	r2, r2, r0
 8023b06:	b292      	uxth	r2, r2
 8023b08:	fb0e f101 	mul.w	r1, lr, r1
 8023b0c:	fb02 110c 	mla	r1, r2, ip, r1
 8023b10:	fb00 1104 	mla	r1, r0, r4, r1
 8023b14:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023b16:	fb08 1104 	mla	r1, r8, r4, r1
 8023b1a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023b1e:	2900      	cmp	r1, #0
 8023b20:	f000 80f5 	beq.w	8023d0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023b24:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023b28:	d019      	beq.n	8023b5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8023b2a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023b2e:	fb0c fa0a 	mul.w	sl, ip, sl
 8023b32:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023b36:	fb0c fc03 	mul.w	ip, ip, r3
 8023b3a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023b3e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023b42:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023b46:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023b4a:	4453      	add	r3, sl
 8023b4c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023b50:	0a1b      	lsrs	r3, r3, #8
 8023b52:	0a3f      	lsrs	r7, r7, #8
 8023b54:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023b58:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023b5c:	433b      	orrs	r3, r7
 8023b5e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8023b60:	2cff      	cmp	r4, #255	@ 0xff
 8023b62:	d020      	beq.n	8023ba6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8023b64:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023b66:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023b6a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8023b6c:	4367      	muls	r7, r4
 8023b6e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023b70:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023b74:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8023b76:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023b7a:	fb04 fa0a 	mul.w	sl, r4, sl
 8023b7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023b82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023b86:	44bc      	add	ip, r7
 8023b88:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023b8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023b90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023b9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023ba0:	ea4c 040a 	orr.w	r4, ip, sl
 8023ba4:	9410      	str	r4, [sp, #64]	@ 0x40
 8023ba6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023ba8:	2cff      	cmp	r4, #255	@ 0xff
 8023baa:	d020      	beq.n	8023bee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8023bac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023bae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023bb2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023bb4:	4367      	muls	r7, r4
 8023bb6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023bb8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023bbc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023bbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023bc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8023bc6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023bca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023bce:	44bc      	add	ip, r7
 8023bd0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023bd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023bd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023bdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023be0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023be4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023be8:	ea4c 040a 	orr.w	r4, ip, sl
 8023bec:	940b      	str	r4, [sp, #44]	@ 0x2c
 8023bee:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023bf0:	2cff      	cmp	r4, #255	@ 0xff
 8023bf2:	d020      	beq.n	8023c36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8023bf4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023bf6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023bfa:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023bfc:	4367      	muls	r7, r4
 8023bfe:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023c00:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023c04:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023c06:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c0a:	fb04 fa0a 	mul.w	sl, r4, sl
 8023c0e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023c12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023c16:	44bc      	add	ip, r7
 8023c18:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023c1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023c2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023c30:	ea4c 040a 	orr.w	r4, ip, sl
 8023c34:	9411      	str	r4, [sp, #68]	@ 0x44
 8023c36:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023c38:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023c3c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023c3e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8023c42:	fb0e f707 	mul.w	r7, lr, r7
 8023c46:	fb02 770c 	mla	r7, r2, ip, r7
 8023c4a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023c4e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023c50:	fb00 770c 	mla	r7, r0, ip, r7
 8023c54:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023c58:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023c5a:	fb08 770c 	mla	r7, r8, ip, r7
 8023c5e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8023c62:	fb0e fe0c 	mul.w	lr, lr, ip
 8023c66:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023c6a:	fb02 e303 	mla	r3, r2, r3, lr
 8023c6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023c70:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023c72:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8023c76:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8023c78:	fb00 330a 	mla	r3, r0, sl, r3
 8023c7c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8023c80:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023c84:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023c86:	f8b9 0000 	ldrh.w	r0, [r9]
 8023c8a:	434b      	muls	r3, r1
 8023c8c:	0a3f      	lsrs	r7, r7, #8
 8023c8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c92:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023c96:	1c59      	adds	r1, r3, #1
 8023c98:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8023c9c:	ea47 070c 	orr.w	r7, r7, ip
 8023ca0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023ca4:	1202      	asrs	r2, r0, #8
 8023ca6:	0c3b      	lsrs	r3, r7, #16
 8023ca8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023cac:	b2c9      	uxtb	r1, r1
 8023cae:	fb13 f304 	smulbb	r3, r3, r4
 8023cb2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8023cb6:	fb02 3201 	mla	r2, r2, r1, r3
 8023cba:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023cbe:	10c3      	asrs	r3, r0, #3
 8023cc0:	b2ff      	uxtb	r7, r7
 8023cc2:	00c0      	lsls	r0, r0, #3
 8023cc4:	b292      	uxth	r2, r2
 8023cc6:	fb1c fc04 	smulbb	ip, ip, r4
 8023cca:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023cce:	b2c0      	uxtb	r0, r0
 8023cd0:	fb17 f704 	smulbb	r7, r7, r4
 8023cd4:	fb03 c301 	mla	r3, r3, r1, ip
 8023cd8:	fb00 7001 	mla	r0, r0, r1, r7
 8023cdc:	f102 0c01 	add.w	ip, r2, #1
 8023ce0:	b280      	uxth	r0, r0
 8023ce2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8023ce6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8023cea:	1c42      	adds	r2, r0, #1
 8023cec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023cf0:	b29b      	uxth	r3, r3
 8023cf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023cf6:	ea42 020c 	orr.w	r2, r2, ip
 8023cfa:	f103 0c01 	add.w	ip, r3, #1
 8023cfe:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023d02:	095b      	lsrs	r3, r3, #5
 8023d04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023d08:	431a      	orrs	r2, r3
 8023d0a:	f8a9 2000 	strh.w	r2, [r9]
 8023d0e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8023d10:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023d12:	441a      	add	r2, r3
 8023d14:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023d16:	9229      	str	r2, [sp, #164]	@ 0xa4
 8023d18:	f109 0902 	add.w	r9, r9, #2
 8023d1c:	441d      	add	r5, r3
 8023d1e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023d22:	e63d      	b.n	80239a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023d24:	2800      	cmp	r0, #0
 8023d26:	f43f aedd 	beq.w	8023ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023d2a:	5c79      	ldrb	r1, [r7, r1]
 8023d2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023d30:	910b      	str	r1, [sp, #44]	@ 0x2c
 8023d32:	0e09      	lsrs	r1, r1, #24
 8023d34:	9114      	str	r1, [sp, #80]	@ 0x50
 8023d36:	e6d5      	b.n	8023ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023d38:	b01f      	add	sp, #124	@ 0x7c
 8023d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023d3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8023d3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d42:	b089      	sub	sp, #36	@ 0x24
 8023d44:	9101      	str	r1, [sp, #4]
 8023d46:	9801      	ldr	r0, [sp, #4]
 8023d48:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8023d4c:	8800      	ldrh	r0, [r0, #0]
 8023d4e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8023d52:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8023d56:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8023d5a:	1206      	asrs	r6, r0, #8
 8023d5c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8023d60:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8023d64:	9602      	str	r6, [sp, #8]
 8023d66:	10c6      	asrs	r6, r0, #3
 8023d68:	00c0      	lsls	r0, r0, #3
 8023d6a:	b2c0      	uxtb	r0, r0
 8023d6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8023d70:	9004      	str	r0, [sp, #16]
 8023d72:	2f00      	cmp	r7, #0
 8023d74:	fb07 100c 	mla	r0, r7, ip, r1
 8023d78:	9603      	str	r6, [sp, #12]
 8023d7a:	eb02 0e00 	add.w	lr, r2, r0
 8023d7e:	f2c0 810a 	blt.w	8023f96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8023d82:	45b8      	cmp	r8, r7
 8023d84:	f340 8107 	ble.w	8023f96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8023d88:	2900      	cmp	r1, #0
 8023d8a:	f2c0 8102 	blt.w	8023f92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8023d8e:	458c      	cmp	ip, r1
 8023d90:	f340 80ff 	ble.w	8023f92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8023d94:	5c12      	ldrb	r2, [r2, r0]
 8023d96:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8023d9a:	1c4a      	adds	r2, r1, #1
 8023d9c:	f100 80fe 	bmi.w	8023f9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8023da0:	4594      	cmp	ip, r2
 8023da2:	f340 80fb 	ble.w	8023f9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8023da6:	2d00      	cmp	r5, #0
 8023da8:	f000 80fa 	beq.w	8023fa0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8023dac:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023db0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8023db4:	3701      	adds	r7, #1
 8023db6:	f100 80f7 	bmi.w	8023fa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8023dba:	45b8      	cmp	r8, r7
 8023dbc:	f340 80f4 	ble.w	8023fa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8023dc0:	2c00      	cmp	r4, #0
 8023dc2:	f000 80f4 	beq.w	8023fae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8023dc6:	2900      	cmp	r1, #0
 8023dc8:	eb0e 020c 	add.w	r2, lr, ip
 8023dcc:	f2c0 80ea 	blt.w	8023fa4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8023dd0:	458c      	cmp	ip, r1
 8023dd2:	f340 80e7 	ble.w	8023fa4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8023dd6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8023dda:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8023dde:	3101      	adds	r1, #1
 8023de0:	f100 80e8 	bmi.w	8023fb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8023de4:	458c      	cmp	ip, r1
 8023de6:	f340 80e5 	ble.w	8023fb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8023dea:	2d00      	cmp	r5, #0
 8023dec:	f000 80e4 	beq.w	8023fb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8023df0:	7852      	ldrb	r2, [r2, #1]
 8023df2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023df6:	0e0b      	lsrs	r3, r1, #24
 8023df8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8023dfc:	9300      	str	r3, [sp, #0]
 8023dfe:	b2a4      	uxth	r4, r4
 8023e00:	b2ab      	uxth	r3, r5
 8023e02:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8023e06:	fb03 f904 	mul.w	r9, r3, r4
 8023e0a:	fb0a f505 	mul.w	r5, sl, r5
 8023e0e:	011b      	lsls	r3, r3, #4
 8023e10:	eba3 0e09 	sub.w	lr, r3, r9
 8023e14:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8023e18:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8023e1c:	0a28      	lsrs	r0, r5, #8
 8023e1e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8023e22:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8023e26:	4405      	add	r5, r0
 8023e28:	0a2d      	lsrs	r5, r5, #8
 8023e2a:	fb0a f303 	mul.w	r3, sl, r3
 8023e2e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8023e32:	9005      	str	r0, [sp, #20]
 8023e34:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8023e38:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023e3c:	0a1b      	lsrs	r3, r3, #8
 8023e3e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8023e42:	9306      	str	r3, [sp, #24]
 8023e44:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8023e48:	fb0b f303 	mul.w	r3, fp, r3
 8023e4c:	0a1d      	lsrs	r5, r3, #8
 8023e4e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8023e52:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8023e56:	fb0b f606 	mul.w	r6, fp, r6
 8023e5a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8023e5e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8023e62:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023e66:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023e6a:	fb08 f707 	mul.w	r7, r8, r7
 8023e6e:	441d      	add	r5, r3
 8023e70:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8023e74:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023e78:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 8023e7c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8023e80:	fb08 fc0c 	mul.w	ip, r8, ip
 8023e84:	0a1b      	lsrs	r3, r3, #8
 8023e86:	9307      	str	r3, [sp, #28]
 8023e88:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8023e8c:	0e0b      	lsrs	r3, r1, #24
 8023e8e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8023e92:	435f      	muls	r7, r3
 8023e94:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023e98:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8023e9c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8023ea0:	4460      	add	r0, ip
 8023ea2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ea6:	b2a4      	uxth	r4, r4
 8023ea8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023eac:	0a2d      	lsrs	r5, r5, #8
 8023eae:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023eb2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023eb6:	fa1f fe8e 	uxth.w	lr, lr
 8023eba:	4359      	muls	r1, r3
 8023ebc:	1b12      	subs	r2, r2, r4
 8023ebe:	9b05      	ldr	r3, [sp, #20]
 8023ec0:	44bc      	add	ip, r7
 8023ec2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023ec6:	b292      	uxth	r2, r2
 8023ec8:	fb05 f50e 	mul.w	r5, r5, lr
 8023ecc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ed0:	fb03 5502 	mla	r5, r3, r2, r5
 8023ed4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023ed8:	9b06      	ldr	r3, [sp, #24]
 8023eda:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8023ede:	0a36      	lsrs	r6, r6, #8
 8023ee0:	0a00      	lsrs	r0, r0, #8
 8023ee2:	fb0c 5509 	mla	r5, ip, r9, r5
 8023ee6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8023eea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8023eee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8023ef2:	fb00 5504 	mla	r5, r0, r4, r5
 8023ef6:	fb0e f606 	mul.w	r6, lr, r6
 8023efa:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8023efe:	0a09      	lsrs	r1, r1, #8
 8023f00:	9b07      	ldr	r3, [sp, #28]
 8023f02:	fb02 6000 	mla	r0, r2, r0, r6
 8023f06:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023f0a:	fb09 0001 	mla	r0, r9, r1, r0
 8023f0e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023f12:	fb0e fe0b 	mul.w	lr, lr, fp
 8023f16:	fb04 0003 	mla	r0, r4, r3, r0
 8023f1a:	fb02 e20a 	mla	r2, r2, sl, lr
 8023f1e:	9b00      	ldr	r3, [sp, #0]
 8023f20:	fb04 2408 	mla	r4, r4, r8, r2
 8023f24:	fb09 4903 	mla	r9, r9, r3, r4
 8023f28:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8023f2c:	9b02      	ldr	r3, [sp, #8]
 8023f2e:	9a04      	ldr	r2, [sp, #16]
 8023f30:	fa5f f989 	uxtb.w	r9, r9
 8023f34:	fb03 f109 	mul.w	r1, r3, r9
 8023f38:	9b03      	ldr	r3, [sp, #12]
 8023f3a:	0a2d      	lsrs	r5, r5, #8
 8023f3c:	0a00      	lsrs	r0, r0, #8
 8023f3e:	fb03 f309 	mul.w	r3, r3, r9
 8023f42:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8023f46:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023f4a:	4305      	orrs	r5, r0
 8023f4c:	fb02 f909 	mul.w	r9, r2, r9
 8023f50:	1c58      	adds	r0, r3, #1
 8023f52:	1c4a      	adds	r2, r1, #1
 8023f54:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023f58:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023f5c:	0a2b      	lsrs	r3, r5, #8
 8023f5e:	0c2a      	lsrs	r2, r5, #16
 8023f60:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023f64:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8023f68:	00db      	lsls	r3, r3, #3
 8023f6a:	0212      	lsls	r2, r2, #8
 8023f6c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8023f70:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023f74:	4313      	orrs	r3, r2
 8023f76:	f109 0201 	add.w	r2, r9, #1
 8023f7a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8023f7e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8023f82:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8023f86:	431d      	orrs	r5, r3
 8023f88:	9b01      	ldr	r3, [sp, #4]
 8023f8a:	801d      	strh	r5, [r3, #0]
 8023f8c:	b009      	add	sp, #36	@ 0x24
 8023f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f92:	2000      	movs	r0, #0
 8023f94:	e701      	b.n	8023d9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8023f96:	2600      	movs	r6, #0
 8023f98:	4630      	mov	r0, r6
 8023f9a:	e70b      	b.n	8023db4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8023f9c:	2600      	movs	r6, #0
 8023f9e:	e709      	b.n	8023db4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8023fa0:	462e      	mov	r6, r5
 8023fa2:	e707      	b.n	8023db4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8023fa4:	2700      	movs	r7, #0
 8023fa6:	e71a      	b.n	8023dde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8023fa8:	2100      	movs	r1, #0
 8023faa:	460f      	mov	r7, r1
 8023fac:	e723      	b.n	8023df6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8023fae:	4621      	mov	r1, r4
 8023fb0:	4627      	mov	r7, r4
 8023fb2:	e720      	b.n	8023df6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8023fb4:	2100      	movs	r1, #0
 8023fb6:	e71e      	b.n	8023df6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8023fb8:	4629      	mov	r1, r5
 8023fba:	e71c      	b.n	8023df6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08023fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023fc0:	b09b      	sub	sp, #108	@ 0x6c
 8023fc2:	9218      	str	r2, [sp, #96]	@ 0x60
 8023fc4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023fc6:	9116      	str	r1, [sp, #88]	@ 0x58
 8023fc8:	9307      	str	r3, [sp, #28]
 8023fca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8023fce:	9019      	str	r0, [sp, #100]	@ 0x64
 8023fd0:	6850      	ldr	r0, [r2, #4]
 8023fd2:	6812      	ldr	r2, [r2, #0]
 8023fd4:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8023fd6:	fb00 1303 	mla	r3, r0, r3, r1
 8023fda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023fde:	930a      	str	r3, [sp, #40]	@ 0x28
 8023fe0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023fe2:	681b      	ldr	r3, [r3, #0]
 8023fe4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023fe6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023fe8:	685e      	ldr	r6, [r3, #4]
 8023fea:	3604      	adds	r6, #4
 8023fec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023fee:	2b00      	cmp	r3, #0
 8023ff0:	dc03      	bgt.n	8023ffa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8023ff2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023ff4:	2b00      	cmp	r3, #0
 8023ff6:	f340 8373 	ble.w	80246e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8023ffa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023ffc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024000:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024004:	1e48      	subs	r0, r1, #1
 8024006:	1e57      	subs	r7, r2, #1
 8024008:	9b07      	ldr	r3, [sp, #28]
 802400a:	2b00      	cmp	r3, #0
 802400c:	f340 8190 	ble.w	8024330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024010:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8024012:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024016:	ea4f 4325 	mov.w	r3, r5, asr #16
 802401a:	d406      	bmi.n	802402a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802401c:	4584      	cmp	ip, r0
 802401e:	da04      	bge.n	802402a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024020:	2b00      	cmp	r3, #0
 8024022:	db02      	blt.n	802402a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024024:	42bb      	cmp	r3, r7
 8024026:	f2c0 8184 	blt.w	8024332 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802402a:	f11c 0c01 	adds.w	ip, ip, #1
 802402e:	f100 8172 	bmi.w	8024316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024032:	4561      	cmp	r1, ip
 8024034:	f2c0 816f 	blt.w	8024316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024038:	3301      	adds	r3, #1
 802403a:	f100 816c 	bmi.w	8024316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802403e:	429a      	cmp	r2, r3
 8024040:	f2c0 8169 	blt.w	8024316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024044:	9b07      	ldr	r3, [sp, #28]
 8024046:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8024048:	9317      	str	r3, [sp, #92]	@ 0x5c
 802404a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802404c:	2b00      	cmp	r3, #0
 802404e:	f340 818e 	ble.w	802436e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024052:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8024054:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024058:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802405a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802405e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8024060:	141b      	asrs	r3, r3, #16
 8024062:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024066:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802406a:	f100 81d1 	bmi.w	8024410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802406e:	f101 38ff 	add.w	r8, r1, #4294967295
 8024072:	4543      	cmp	r3, r8
 8024074:	f280 81cc 	bge.w	8024410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024078:	f1bc 0f00 	cmp.w	ip, #0
 802407c:	f2c0 81c8 	blt.w	8024410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024080:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024084:	45c4      	cmp	ip, r8
 8024086:	f280 81c3 	bge.w	8024410 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802408a:	b209      	sxth	r1, r1
 802408c:	fb0c 3301 	mla	r3, ip, r1, r3
 8024090:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8024092:	eb04 0803 	add.w	r8, r4, r3
 8024096:	5ce3      	ldrb	r3, [r4, r3]
 8024098:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802409c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80240a0:	2a00      	cmp	r2, #0
 80240a2:	f000 81aa 	beq.w	80243fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80240a6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80240aa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80240ae:	940b      	str	r4, [sp, #44]	@ 0x2c
 80240b0:	0e24      	lsrs	r4, r4, #24
 80240b2:	9412      	str	r4, [sp, #72]	@ 0x48
 80240b4:	b178      	cbz	r0, 80240d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80240b6:	eb08 0c01 	add.w	ip, r8, r1
 80240ba:	f818 1001 	ldrb.w	r1, [r8, r1]
 80240be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80240c2:	9108      	str	r1, [sp, #32]
 80240c4:	0e09      	lsrs	r1, r1, #24
 80240c6:	9110      	str	r1, [sp, #64]	@ 0x40
 80240c8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80240cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80240d0:	910c      	str	r1, [sp, #48]	@ 0x30
 80240d2:	0e09      	lsrs	r1, r1, #24
 80240d4:	9113      	str	r1, [sp, #76]	@ 0x4c
 80240d6:	b292      	uxth	r2, r2
 80240d8:	b280      	uxth	r0, r0
 80240da:	fb02 f900 	mul.w	r9, r2, r0
 80240de:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80240e2:	0112      	lsls	r2, r2, #4
 80240e4:	eba2 0809 	sub.w	r8, r2, r9
 80240e8:	b280      	uxth	r0, r0
 80240ea:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80240ee:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80240f0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80240f2:	fa1f f888 	uxth.w	r8, r8
 80240f6:	1a12      	subs	r2, r2, r0
 80240f8:	b292      	uxth	r2, r2
 80240fa:	fb08 f101 	mul.w	r1, r8, r1
 80240fe:	fb02 110e 	mla	r1, r2, lr, r1
 8024102:	fb00 1104 	mla	r1, r0, r4, r1
 8024106:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8024108:	fb09 1104 	mla	r1, r9, r4, r1
 802410c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024110:	2900      	cmp	r1, #0
 8024112:	f000 80f5 	beq.w	8024300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024116:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802411a:	d01b      	beq.n	8024154 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802411c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8024120:	fb0e fa0a 	mul.w	sl, lr, sl
 8024124:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024128:	fb0e fe03 	mul.w	lr, lr, r3
 802412c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024130:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024134:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024138:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802413c:	4453      	add	r3, sl
 802413e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024142:	0a1b      	lsrs	r3, r3, #8
 8024144:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024148:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802414c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024150:	ea43 030c 	orr.w	r3, r3, ip
 8024154:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8024156:	2cff      	cmp	r4, #255	@ 0xff
 8024158:	d021      	beq.n	802419e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802415a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802415c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8024160:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8024162:	fb04 fb0b 	mul.w	fp, r4, fp
 8024166:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024168:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802416c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802416e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024172:	fb04 fa0a 	mul.w	sl, r4, sl
 8024176:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802417a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802417e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8024182:	44de      	add	lr, fp
 8024184:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024188:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802418c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024190:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024194:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024198:	ea4e 040a 	orr.w	r4, lr, sl
 802419c:	940b      	str	r4, [sp, #44]	@ 0x2c
 802419e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80241a0:	2cff      	cmp	r4, #255	@ 0xff
 80241a2:	d021      	beq.n	80241e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80241a4:	9c08      	ldr	r4, [sp, #32]
 80241a6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80241aa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80241ac:	fb04 fb0b 	mul.w	fp, r4, fp
 80241b0:	9c08      	ldr	r4, [sp, #32]
 80241b2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80241b6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80241b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241bc:	fb04 fa0a 	mul.w	sl, r4, sl
 80241c0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80241c4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80241c8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80241cc:	44de      	add	lr, fp
 80241ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80241de:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80241e2:	ea4e 040a 	orr.w	r4, lr, sl
 80241e6:	9408      	str	r4, [sp, #32]
 80241e8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80241ea:	2cff      	cmp	r4, #255	@ 0xff
 80241ec:	d021      	beq.n	8024232 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80241ee:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80241f0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80241f4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80241f6:	fb04 fb0b 	mul.w	fp, r4, fp
 80241fa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80241fc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8024200:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8024202:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024206:	fb04 fa0a 	mul.w	sl, r4, sl
 802420a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802420e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024212:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8024216:	44de      	add	lr, fp
 8024218:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802421c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024220:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024224:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024228:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802422c:	ea4e 040a 	orr.w	r4, lr, sl
 8024230:	940c      	str	r4, [sp, #48]	@ 0x30
 8024232:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024234:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8024238:	9c08      	ldr	r4, [sp, #32]
 802423a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802423e:	fb08 fc0c 	mul.w	ip, r8, ip
 8024242:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024246:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 802424a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802424c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024250:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8024254:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024256:	fb09 cc0e 	mla	ip, r9, lr, ip
 802425a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802425e:	fb08 f80e 	mul.w	r8, r8, lr
 8024262:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024266:	fb02 8303 	mla	r3, r2, r3, r8
 802426a:	9a08      	ldr	r2, [sp, #32]
 802426c:	f8b7 8000 	ldrh.w	r8, [r7]
 8024270:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8024274:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8024276:	fb00 330a 	mla	r3, r0, sl, r3
 802427a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 802427e:	fb09 3900 	mla	r9, r9, r0, r3
 8024282:	43c9      	mvns	r1, r1
 8024284:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024288:	fa5f fe81 	uxtb.w	lr, r1
 802428c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024290:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024294:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8024298:	fb02 f20e 	mul.w	r2, r2, lr
 802429c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80242a0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80242a4:	ea4c 0c09 	orr.w	ip, ip, r9
 80242a8:	1c53      	adds	r3, r2, #1
 80242aa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80242ae:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80242b2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80242b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80242ba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80242be:	4a63      	ldr	r2, [pc, #396]	@ (802444c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80242c0:	fb00 f00e 	mul.w	r0, r0, lr
 80242c4:	b2db      	uxtb	r3, r3
 80242c6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80242ca:	1c43      	adds	r3, r0, #1
 80242cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80242d0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80242d4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80242d8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80242dc:	b2c9      	uxtb	r1, r1
 80242de:	00db      	lsls	r3, r3, #3
 80242e0:	fb01 f10e 	mul.w	r1, r1, lr
 80242e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80242e8:	4313      	orrs	r3, r2
 80242ea:	1c4a      	adds	r2, r1, #1
 80242ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80242f0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80242f4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80242f8:	ea4c 0c03 	orr.w	ip, ip, r3
 80242fc:	f8a7 c000 	strh.w	ip, [r7]
 8024300:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8024302:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024304:	441a      	add	r2, r3
 8024306:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024308:	9225      	str	r2, [sp, #148]	@ 0x94
 802430a:	441d      	add	r5, r3
 802430c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802430e:	3b01      	subs	r3, #1
 8024310:	3702      	adds	r7, #2
 8024312:	9317      	str	r3, [sp, #92]	@ 0x5c
 8024314:	e699      	b.n	802404a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024316:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8024318:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 802431a:	441c      	add	r4, r3
 802431c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802431e:	9425      	str	r4, [sp, #148]	@ 0x94
 8024320:	441d      	add	r5, r3
 8024322:	9b07      	ldr	r3, [sp, #28]
 8024324:	3b01      	subs	r3, #1
 8024326:	9307      	str	r3, [sp, #28]
 8024328:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802432a:	3302      	adds	r3, #2
 802432c:	930a      	str	r3, [sp, #40]	@ 0x28
 802432e:	e66b      	b.n	8024008 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024330:	d024      	beq.n	802437c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024332:	9b07      	ldr	r3, [sp, #28]
 8024334:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8024336:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8024338:	3b01      	subs	r3, #1
 802433a:	fb00 4003 	mla	r0, r0, r3, r4
 802433e:	1400      	asrs	r0, r0, #16
 8024340:	f53f ae80 	bmi.w	8024044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024344:	3901      	subs	r1, #1
 8024346:	4288      	cmp	r0, r1
 8024348:	f6bf ae7c 	bge.w	8024044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802434c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 802434e:	fb01 5303 	mla	r3, r1, r3, r5
 8024352:	141b      	asrs	r3, r3, #16
 8024354:	f53f ae76 	bmi.w	8024044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024358:	3a01      	subs	r2, #1
 802435a:	4293      	cmp	r3, r2
 802435c:	f6bf ae72 	bge.w	8024044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024360:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024364:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8024368:	f1bb 0f00 	cmp.w	fp, #0
 802436c:	dc70      	bgt.n	8024450 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802436e:	9b07      	ldr	r3, [sp, #28]
 8024370:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024374:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024376:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802437a:	930a      	str	r3, [sp, #40]	@ 0x28
 802437c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802437e:	2b00      	cmp	r3, #0
 8024380:	f340 81ae 	ble.w	80246e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024384:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024388:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802438c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024390:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024392:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024396:	ee31 1a05 	vadd.f32	s2, s2, s10
 802439a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802439e:	eef0 6a62 	vmov.f32	s13, s5
 80243a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243ae:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 80243b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243b6:	eef0 6a43 	vmov.f32	s13, s6
 80243ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243be:	ee12 2a90 	vmov	r2, s5
 80243c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80243ca:	ee13 2a10 	vmov	r2, s6
 80243ce:	9327      	str	r3, [sp, #156]	@ 0x9c
 80243d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80243d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80243d6:	9328      	str	r3, [sp, #160]	@ 0xa0
 80243d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80243da:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80243dc:	3b01      	subs	r3, #1
 80243de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243e2:	9316      	str	r3, [sp, #88]	@ 0x58
 80243e4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80243e6:	bf08      	it	eq
 80243e8:	4613      	moveq	r3, r2
 80243ea:	ee16 5a90 	vmov	r5, s13
 80243ee:	9307      	str	r3, [sp, #28]
 80243f0:	eeb0 3a67 	vmov.f32	s6, s15
 80243f4:	eef0 2a47 	vmov.f32	s5, s14
 80243f8:	e5f8      	b.n	8023fec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80243fa:	2800      	cmp	r0, #0
 80243fc:	f43f ae6b 	beq.w	80240d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024400:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024404:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024408:	9108      	str	r1, [sp, #32]
 802440a:	0e09      	lsrs	r1, r1, #24
 802440c:	9110      	str	r1, [sp, #64]	@ 0x40
 802440e:	e662      	b.n	80240d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024410:	f113 0801 	adds.w	r8, r3, #1
 8024414:	f53f af74 	bmi.w	8024300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024418:	4541      	cmp	r1, r8
 802441a:	f6ff af71 	blt.w	8024300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802441e:	f11c 0801 	adds.w	r8, ip, #1
 8024422:	f53f af6d 	bmi.w	8024300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024426:	45c6      	cmp	lr, r8
 8024428:	f6ff af6a 	blt.w	8024300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802442c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024430:	b209      	sxth	r1, r1
 8024432:	fa0f f38e 	sxth.w	r3, lr
 8024436:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802443a:	9301      	str	r3, [sp, #4]
 802443c:	9100      	str	r1, [sp, #0]
 802443e:	4633      	mov	r3, r6
 8024440:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024442:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8024444:	4639      	mov	r1, r7
 8024446:	f7ff fc7a 	bl	8023d3e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802444a:	e759      	b.n	8024300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802444c:	fffff800 	.word	0xfffff800
 8024450:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8024452:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8024454:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024458:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802445a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802445e:	1427      	asrs	r7, r4, #16
 8024460:	142b      	asrs	r3, r5, #16
 8024462:	fb01 7303 	mla	r3, r1, r3, r7
 8024466:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8024468:	18e7      	adds	r7, r4, r3
 802446a:	5ce3      	ldrb	r3, [r4, r3]
 802446c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024470:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024474:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024478:	2a00      	cmp	r2, #0
 802447a:	f000 8127 	beq.w	80246cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802447e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024482:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024486:	940d      	str	r4, [sp, #52]	@ 0x34
 8024488:	0e24      	lsrs	r4, r4, #24
 802448a:	9414      	str	r4, [sp, #80]	@ 0x50
 802448c:	b170      	cbz	r0, 80244ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802448e:	eb07 0e01 	add.w	lr, r7, r1
 8024492:	5c79      	ldrb	r1, [r7, r1]
 8024494:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024498:	9109      	str	r1, [sp, #36]	@ 0x24
 802449a:	0e09      	lsrs	r1, r1, #24
 802449c:	9111      	str	r1, [sp, #68]	@ 0x44
 802449e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80244a2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80244a6:	910e      	str	r1, [sp, #56]	@ 0x38
 80244a8:	0e09      	lsrs	r1, r1, #24
 80244aa:	9115      	str	r1, [sp, #84]	@ 0x54
 80244ac:	b292      	uxth	r2, r2
 80244ae:	b280      	uxth	r0, r0
 80244b0:	fb02 f800 	mul.w	r8, r2, r0
 80244b4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80244b8:	0112      	lsls	r2, r2, #4
 80244ba:	eba2 0e08 	sub.w	lr, r2, r8
 80244be:	b280      	uxth	r0, r0
 80244c0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80244c4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80244c6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80244c8:	fa1f fe8e 	uxth.w	lr, lr
 80244cc:	1a09      	subs	r1, r1, r0
 80244ce:	b289      	uxth	r1, r1
 80244d0:	fb0e f202 	mul.w	r2, lr, r2
 80244d4:	fb01 220c 	mla	r2, r1, ip, r2
 80244d8:	fb00 2204 	mla	r2, r0, r4, r2
 80244dc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80244de:	fb08 2204 	mla	r2, r8, r4, r2
 80244e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80244e6:	2a00      	cmp	r2, #0
 80244e8:	f000 80e5 	beq.w	80246b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80244ec:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80244f0:	d019      	beq.n	8024526 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80244f2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80244f6:	fb0c fa0a 	mul.w	sl, ip, sl
 80244fa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80244fe:	fb0c fc03 	mul.w	ip, ip, r3
 8024502:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024506:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802450a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802450e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8024512:	4453      	add	r3, sl
 8024514:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024518:	0a1b      	lsrs	r3, r3, #8
 802451a:	0a3f      	lsrs	r7, r7, #8
 802451c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024520:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8024524:	433b      	orrs	r3, r7
 8024526:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8024528:	2cff      	cmp	r4, #255	@ 0xff
 802452a:	d020      	beq.n	802456e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802452c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802452e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8024532:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8024534:	4367      	muls	r7, r4
 8024536:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024538:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802453c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802453e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024542:	fb04 fa0a 	mul.w	sl, r4, sl
 8024546:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802454a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802454e:	44bc      	add	ip, r7
 8024550:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024554:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024558:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802455c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024560:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024564:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024568:	ea4c 040a 	orr.w	r4, ip, sl
 802456c:	940d      	str	r4, [sp, #52]	@ 0x34
 802456e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8024570:	2cff      	cmp	r4, #255	@ 0xff
 8024572:	d020      	beq.n	80245b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024574:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8024576:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802457a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802457c:	4367      	muls	r7, r4
 802457e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8024580:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8024584:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8024586:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802458a:	fb04 fa0a 	mul.w	sl, r4, sl
 802458e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024592:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024596:	44bc      	add	ip, r7
 8024598:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802459c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80245ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80245b0:	ea4c 040a 	orr.w	r4, ip, sl
 80245b4:	9409      	str	r4, [sp, #36]	@ 0x24
 80245b6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80245b8:	2cff      	cmp	r4, #255	@ 0xff
 80245ba:	d020      	beq.n	80245fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80245bc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80245be:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80245c2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80245c4:	4367      	muls	r7, r4
 80245c6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80245c8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80245cc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80245ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80245d6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80245da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80245de:	44bc      	add	ip, r7
 80245e0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80245e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80245f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80245f8:	ea4c 040a 	orr.w	r4, ip, sl
 80245fc:	940e      	str	r4, [sp, #56]	@ 0x38
 80245fe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024600:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8024604:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8024606:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802460a:	fb0e f707 	mul.w	r7, lr, r7
 802460e:	fb01 770c 	mla	r7, r1, ip, r7
 8024612:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8024616:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024618:	fb00 770c 	mla	r7, r0, ip, r7
 802461c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8024620:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024622:	fb08 770c 	mla	r7, r8, ip, r7
 8024626:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802462a:	fb0e fe0c 	mul.w	lr, lr, ip
 802462e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8024632:	fb01 e303 	mla	r3, r1, r3, lr
 8024636:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024638:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802463c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802463e:	fb00 330a 	mla	r3, r0, sl, r3
 8024642:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8024646:	fb08 3c0c 	mla	ip, r8, ip, r3
 802464a:	f8b9 3000 	ldrh.w	r3, [r9]
 802464e:	43d2      	mvns	r2, r2
 8024650:	1218      	asrs	r0, r3, #8
 8024652:	b2d2      	uxtb	r2, r2
 8024654:	10d9      	asrs	r1, r3, #3
 8024656:	0a3f      	lsrs	r7, r7, #8
 8024658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802465c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024660:	00db      	lsls	r3, r3, #3
 8024662:	4350      	muls	r0, r2
 8024664:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8024668:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802466c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024670:	b2db      	uxtb	r3, r3
 8024672:	ea47 070c 	orr.w	r7, r7, ip
 8024676:	4351      	muls	r1, r2
 8024678:	4353      	muls	r3, r2
 802467a:	1c42      	adds	r2, r0, #1
 802467c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024680:	0c3a      	lsrs	r2, r7, #16
 8024682:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024686:	4a18      	ldr	r2, [pc, #96]	@ (80246e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024688:	b2c0      	uxtb	r0, r0
 802468a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802468e:	1c4a      	adds	r2, r1, #1
 8024690:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024694:	0a3a      	lsrs	r2, r7, #8
 8024696:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802469a:	00c9      	lsls	r1, r1, #3
 802469c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80246a0:	4301      	orrs	r1, r0
 80246a2:	1c58      	adds	r0, r3, #1
 80246a4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80246a8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80246ac:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80246b0:	4308      	orrs	r0, r1
 80246b2:	f8a9 0000 	strh.w	r0, [r9]
 80246b6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80246b8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80246ba:	441a      	add	r2, r3
 80246bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80246be:	9225      	str	r2, [sp, #148]	@ 0x94
 80246c0:	f109 0902 	add.w	r9, r9, #2
 80246c4:	441d      	add	r5, r3
 80246c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80246ca:	e64d      	b.n	8024368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80246cc:	2800      	cmp	r0, #0
 80246ce:	f43f aeed 	beq.w	80244ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80246d2:	5c79      	ldrb	r1, [r7, r1]
 80246d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80246d8:	9109      	str	r1, [sp, #36]	@ 0x24
 80246da:	0e09      	lsrs	r1, r1, #24
 80246dc:	9111      	str	r1, [sp, #68]	@ 0x44
 80246de:	e6e5      	b.n	80244ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80246e0:	b01b      	add	sp, #108	@ 0x6c
 80246e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80246e6:	bf00      	nop
 80246e8:	fffff800 	.word	0xfffff800

080246ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80246ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80246f0:	b085      	sub	sp, #20
 80246f2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80246f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80246fa:	9103      	str	r1, [sp, #12]
 80246fc:	fb00 7406 	mla	r4, r0, r6, r7
 8024700:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024704:	2800      	cmp	r0, #0
 8024706:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 802470a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802470e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8024712:	9501      	str	r5, [sp, #4]
 8024714:	eb03 0904 	add.w	r9, r3, r4
 8024718:	f2c0 8150 	blt.w	80249bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802471c:	4583      	cmp	fp, r0
 802471e:	f340 814d 	ble.w	80249bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024722:	2f00      	cmp	r7, #0
 8024724:	f2c0 8146 	blt.w	80249b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8024728:	42be      	cmp	r6, r7
 802472a:	f340 8143 	ble.w	80249b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802472e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8024732:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8024736:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802473a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802473e:	4355      	muls	r5, r2
 8024740:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024744:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8024748:	fb0c f203 	mul.w	r2, ip, r3
 802474c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8024750:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8024754:	441d      	add	r5, r3
 8024756:	f102 0320 	add.w	r3, r2, #32
 802475a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802475e:	0a1b      	lsrs	r3, r3, #8
 8024760:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8024764:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024768:	431c      	orrs	r4, r3
 802476a:	1c7b      	adds	r3, r7, #1
 802476c:	f100 812b 	bmi.w	80249c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8024770:	429e      	cmp	r6, r3
 8024772:	f340 8128 	ble.w	80249c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8024776:	2900      	cmp	r1, #0
 8024778:	f000 8128 	beq.w	80249cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802477c:	9a01      	ldr	r2, [sp, #4]
 802477e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8024782:	8855      	ldrh	r5, [r2, #2]
 8024784:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8024788:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 802478c:	fb08 f802 	mul.w	r8, r8, r2
 8024790:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024794:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8024798:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802479c:	435d      	muls	r5, r3
 802479e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80247a2:	44d0      	add	r8, sl
 80247a4:	f105 0a20 	add.w	sl, r5, #32
 80247a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80247ac:	0a2d      	lsrs	r5, r5, #8
 80247ae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80247b2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80247b6:	432a      	orrs	r2, r5
 80247b8:	3001      	adds	r0, #1
 80247ba:	f100 810d 	bmi.w	80249d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80247be:	4583      	cmp	fp, r0
 80247c0:	f340 810a 	ble.w	80249d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80247c4:	f1be 0f00 	cmp.w	lr, #0
 80247c8:	f000 810b 	beq.w	80249e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80247cc:	2f00      	cmp	r7, #0
 80247ce:	f2c0 8100 	blt.w	80249d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80247d2:	42be      	cmp	r6, r7
 80247d4:	f340 80fd 	ble.w	80249d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80247d8:	9801      	ldr	r0, [sp, #4]
 80247da:	f819 5006 	ldrb.w	r5, [r9, r6]
 80247de:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80247e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80247e6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 80247ea:	fb0a fa00 	mul.w	sl, sl, r0
 80247ee:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80247f2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80247f6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80247fa:	fb05 f808 	mul.w	r8, r5, r8
 80247fe:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8024802:	4482      	add	sl, r0
 8024804:	f108 0020 	add.w	r0, r8, #32
 8024808:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802480c:	0a00      	lsrs	r0, r0, #8
 802480e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8024812:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024816:	ea4b 0b00 	orr.w	fp, fp, r0
 802481a:	3701      	adds	r7, #1
 802481c:	f100 80e6 	bmi.w	80249ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8024820:	42be      	cmp	r6, r7
 8024822:	f340 80e3 	ble.w	80249ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8024826:	2900      	cmp	r1, #0
 8024828:	f000 80e3 	beq.w	80249f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802482c:	3601      	adds	r6, #1
 802482e:	9801      	ldr	r0, [sp, #4]
 8024830:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024834:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8024838:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802483c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8024840:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024844:	fb09 f906 	mul.w	r9, r9, r6
 8024848:	fb07 f800 	mul.w	r8, r7, r0
 802484c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8024850:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8024854:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8024858:	44d1      	add	r9, sl
 802485a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802485e:	f108 0020 	add.w	r0, r8, #32
 8024862:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024866:	0a00      	lsrs	r0, r0, #8
 8024868:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802486c:	4330      	orrs	r0, r6
 802486e:	b28e      	uxth	r6, r1
 8024870:	fa1f f98e 	uxth.w	r9, lr
 8024874:	fb06 f809 	mul.w	r8, r6, r9
 8024878:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802487c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024880:	0136      	lsls	r6, r6, #4
 8024882:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024886:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 802488a:	9601      	str	r6, [sp, #4]
 802488c:	ea4a 0404 	orr.w	r4, sl, r4
 8024890:	fa1f f689 	uxth.w	r6, r9
 8024894:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024898:	fb11 f90e 	smulbb	r9, r1, lr
 802489c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80248a0:	9602      	str	r6, [sp, #8]
 80248a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80248a6:	4626      	mov	r6, r4
 80248a8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80248ac:	f1ce 0410 	rsb	r4, lr, #16
 80248b0:	1a64      	subs	r4, r4, r1
 80248b2:	ea4a 0202 	orr.w	r2, sl, r2
 80248b6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80248ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80248be:	434a      	muls	r2, r1
 80248c0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80248c4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80248c8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80248cc:	fb04 2406 	mla	r4, r4, r6, r2
 80248d0:	ea4a 0000 	orr.w	r0, sl, r0
 80248d4:	fb09 4200 	mla	r2, r9, r0, r4
 80248d8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80248dc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80248e0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80248e4:	ea44 0b0b 	orr.w	fp, r4, fp
 80248e8:	9c01      	ldr	r4, [sp, #4]
 80248ea:	9e02      	ldr	r6, [sp, #8]
 80248ec:	9903      	ldr	r1, [sp, #12]
 80248ee:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 80248f2:	1ba4      	subs	r4, r4, r6
 80248f4:	9e01      	ldr	r6, [sp, #4]
 80248f6:	8808      	ldrh	r0, [r1, #0]
 80248f8:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 80248fc:	eba6 0608 	sub.w	r6, r6, r8
 8024900:	b2b6      	uxth	r6, r6
 8024902:	b2a4      	uxth	r4, r4
 8024904:	4373      	muls	r3, r6
 8024906:	fb0c 3304 	mla	r3, ip, r4, r3
 802490a:	9c02      	ldr	r4, [sp, #8]
 802490c:	fb04 3505 	mla	r5, r4, r5, r3
 8024910:	fb08 5707 	mla	r7, r8, r7, r5
 8024914:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8024918:	b289      	uxth	r1, r1
 802491a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802491e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8024922:	434f      	muls	r7, r1
 8024924:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024928:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802492c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024930:	1c7b      	adds	r3, r7, #1
 8024932:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024936:	ea42 0e0e 	orr.w	lr, r2, lr
 802493a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802493e:	fa1f f28e 	uxth.w	r2, lr
 8024942:	1203      	asrs	r3, r0, #8
 8024944:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8024948:	b2ff      	uxtb	r7, r7
 802494a:	1215      	asrs	r5, r2, #8
 802494c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024950:	fb13 f307 	smulbb	r3, r3, r7
 8024954:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024958:	fb05 3501 	mla	r5, r5, r1, r3
 802495c:	10c3      	asrs	r3, r0, #3
 802495e:	10d4      	asrs	r4, r2, #3
 8024960:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8024964:	fb13 f307 	smulbb	r3, r3, r7
 8024968:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802496c:	fb04 3401 	mla	r4, r4, r1, r3
 8024970:	00c3      	lsls	r3, r0, #3
 8024972:	00d2      	lsls	r2, r2, #3
 8024974:	b2db      	uxtb	r3, r3
 8024976:	fb13 f307 	smulbb	r3, r3, r7
 802497a:	b2d2      	uxtb	r2, r2
 802497c:	fb02 3101 	mla	r1, r2, r1, r3
 8024980:	b2ad      	uxth	r5, r5
 8024982:	b289      	uxth	r1, r1
 8024984:	b2a4      	uxth	r4, r4
 8024986:	1c6b      	adds	r3, r5, #1
 8024988:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802498c:	1c62      	adds	r2, r4, #1
 802498e:	1c4b      	adds	r3, r1, #1
 8024990:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024994:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024998:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802499c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249a0:	0964      	lsrs	r4, r4, #5
 80249a2:	432b      	orrs	r3, r5
 80249a4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80249a8:	9a03      	ldr	r2, [sp, #12]
 80249aa:	4323      	orrs	r3, r4
 80249ac:	8013      	strh	r3, [r2, #0]
 80249ae:	b005      	add	sp, #20
 80249b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80249b4:	f04f 0c00 	mov.w	ip, #0
 80249b8:	4664      	mov	r4, ip
 80249ba:	e6d6      	b.n	802476a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80249bc:	2300      	movs	r3, #0
 80249be:	469c      	mov	ip, r3
 80249c0:	461a      	mov	r2, r3
 80249c2:	461c      	mov	r4, r3
 80249c4:	e6f8      	b.n	80247b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80249c6:	2300      	movs	r3, #0
 80249c8:	461a      	mov	r2, r3
 80249ca:	e6f5      	b.n	80247b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80249cc:	460b      	mov	r3, r1
 80249ce:	460a      	mov	r2, r1
 80249d0:	e6f2      	b.n	80247b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80249d2:	2500      	movs	r5, #0
 80249d4:	46ab      	mov	fp, r5
 80249d6:	e720      	b.n	802481a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80249d8:	2700      	movs	r7, #0
 80249da:	463d      	mov	r5, r7
 80249dc:	4638      	mov	r0, r7
 80249de:	46bb      	mov	fp, r7
 80249e0:	e745      	b.n	802486e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80249e2:	4677      	mov	r7, lr
 80249e4:	4675      	mov	r5, lr
 80249e6:	4670      	mov	r0, lr
 80249e8:	46f3      	mov	fp, lr
 80249ea:	e740      	b.n	802486e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80249ec:	2700      	movs	r7, #0
 80249ee:	4638      	mov	r0, r7
 80249f0:	e73d      	b.n	802486e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80249f2:	460f      	mov	r7, r1
 80249f4:	4608      	mov	r0, r1
 80249f6:	e73a      	b.n	802486e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080249f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80249f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80249fc:	b097      	sub	sp, #92	@ 0x5c
 80249fe:	9214      	str	r2, [sp, #80]	@ 0x50
 8024a00:	9308      	str	r3, [sp, #32]
 8024a02:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024a04:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024a08:	9312      	str	r3, [sp, #72]	@ 0x48
 8024a0a:	9111      	str	r1, [sp, #68]	@ 0x44
 8024a0c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8024a10:	9015      	str	r0, [sp, #84]	@ 0x54
 8024a12:	6850      	ldr	r0, [r2, #4]
 8024a14:	6812      	ldr	r2, [r2, #0]
 8024a16:	fb00 1303 	mla	r3, r0, r3, r1
 8024a1a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024a1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8024a20:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024a22:	681b      	ldr	r3, [r3, #0]
 8024a24:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024a26:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024a28:	685b      	ldr	r3, [r3, #4]
 8024a2a:	930c      	str	r3, [sp, #48]	@ 0x30
 8024a2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8024a30:	930a      	str	r3, [sp, #40]	@ 0x28
 8024a32:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8024a34:	2b00      	cmp	r3, #0
 8024a36:	dc03      	bgt.n	8024a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024a38:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024a3a:	2b00      	cmp	r3, #0
 8024a3c:	f340 83cb 	ble.w	80251d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8024a40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024a42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a4a:	1e48      	subs	r0, r1, #1
 8024a4c:	1e55      	subs	r5, r2, #1
 8024a4e:	9b08      	ldr	r3, [sp, #32]
 8024a50:	2b00      	cmp	r3, #0
 8024a52:	f340 81a3 	ble.w	8024d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8024a56:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8024a58:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024a5a:	1436      	asrs	r6, r6, #16
 8024a5c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024a60:	d406      	bmi.n	8024a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024a62:	4286      	cmp	r6, r0
 8024a64:	da04      	bge.n	8024a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024a66:	2b00      	cmp	r3, #0
 8024a68:	db02      	blt.n	8024a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024a6a:	42ab      	cmp	r3, r5
 8024a6c:	f2c0 8197 	blt.w	8024d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8024a70:	3601      	adds	r6, #1
 8024a72:	f100 8184 	bmi.w	8024d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024a76:	42b1      	cmp	r1, r6
 8024a78:	f2c0 8181 	blt.w	8024d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024a7c:	3301      	adds	r3, #1
 8024a7e:	f100 817e 	bmi.w	8024d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024a82:	429a      	cmp	r2, r3
 8024a84:	f2c0 817b 	blt.w	8024d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8024a88:	9b08      	ldr	r3, [sp, #32]
 8024a8a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8024a8c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024a8e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8024a92:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024a94:	2b00      	cmp	r3, #0
 8024a96:	f340 81a4 	ble.w	8024de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8024a9a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024a9c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8024a9e:	1418      	asrs	r0, r3, #16
 8024aa0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024aa2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8024aa6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024aa8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024aac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024aae:	142d      	asrs	r5, r5, #16
 8024ab0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024ab4:	f100 81f8 	bmi.w	8024ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024ab8:	f102 3eff 	add.w	lr, r2, #4294967295
 8024abc:	4575      	cmp	r5, lr
 8024abe:	f280 81f3 	bge.w	8024ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024ac2:	2800      	cmp	r0, #0
 8024ac4:	f2c0 81f0 	blt.w	8024ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024ac8:	f103 3eff 	add.w	lr, r3, #4294967295
 8024acc:	4570      	cmp	r0, lr
 8024ace:	f280 81eb 	bge.w	8024ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024ad2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024ad4:	b212      	sxth	r2, r2
 8024ad6:	fb00 5002 	mla	r0, r0, r2, r5
 8024ada:	fa1f fe81 	uxth.w	lr, r1
 8024ade:	eb03 0a00 	add.w	sl, r3, r0
 8024ae2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8024ae6:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024aea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024aee:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8024af2:	b29b      	uxth	r3, r3
 8024af4:	f1bc 0f00 	cmp.w	ip, #0
 8024af8:	f000 81b9 	beq.w	8024e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8024afc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024b00:	940d      	str	r4, [sp, #52]	@ 0x34
 8024b02:	eb0a 0b02 	add.w	fp, sl, r2
 8024b06:	fa1f fa8c 	uxth.w	sl, ip
 8024b0a:	fb0a fe0e 	mul.w	lr, sl, lr
 8024b0e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8024b12:	fa1f fa8a 	uxth.w	sl, sl
 8024b16:	eba5 050e 	sub.w	r5, r5, lr
 8024b1a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024b1e:	940e      	str	r4, [sp, #56]	@ 0x38
 8024b20:	eba3 030a 	sub.w	r3, r3, sl
 8024b24:	b2ad      	uxth	r5, r5
 8024b26:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024b28:	b29b      	uxth	r3, r3
 8024b2a:	fb08 f505 	mul.w	r5, r8, r5
 8024b2e:	fb09 5303 	mla	r3, r9, r3, r5
 8024b32:	fb0a 3304 	mla	r3, sl, r4, r3
 8024b36:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024b38:	fb0e 3304 	mla	r3, lr, r4, r3
 8024b3c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b40:	2b00      	cmp	r3, #0
 8024b42:	f000 810f 	beq.w	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024b46:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024b48:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8024b4c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024b50:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8024b54:	f000 8190 	beq.w	8024e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8024b58:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8024b5c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024b60:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024b64:	fb09 f000 	mul.w	r0, r9, r0
 8024b68:	fb0a fe0e 	mul.w	lr, sl, lr
 8024b6c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024b70:	f100 0b20 	add.w	fp, r0, #32
 8024b74:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8024b78:	44ce      	add	lr, r9
 8024b7a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024b7e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024b82:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024b86:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8024b8a:	ea4e 0909 	orr.w	r9, lr, r9
 8024b8e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8024b92:	8868      	ldrh	r0, [r5, #2]
 8024b94:	d019      	beq.n	8024bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8024b96:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8024b9a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024b9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024ba2:	fb08 f800 	mul.w	r8, r8, r0
 8024ba6:	fb0a fe0e 	mul.w	lr, sl, lr
 8024baa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024bae:	f108 0b20 	add.w	fp, r8, #32
 8024bb2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8024bb6:	4486      	add	lr, r0
 8024bb8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024bbc:	0a00      	lsrs	r0, r0, #8
 8024bbe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8024bc2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024bc6:	ea4e 0000 	orr.w	r0, lr, r0
 8024bca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024bce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024bd2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8024bd6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8024bda:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024bde:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024be2:	ea4e 0909 	orr.w	r9, lr, r9
 8024be6:	ea4a 0000 	orr.w	r0, sl, r0
 8024bea:	f1bc 0f00 	cmp.w	ip, #0
 8024bee:	f000 8145 	beq.w	8024e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8024bf2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8024bf6:	3a01      	subs	r2, #1
 8024bf8:	0052      	lsls	r2, r2, #1
 8024bfa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024bfc:	3202      	adds	r2, #2
 8024bfe:	2cff      	cmp	r4, #255	@ 0xff
 8024c00:	eb05 0e02 	add.w	lr, r5, r2
 8024c04:	5aaa      	ldrh	r2, [r5, r2]
 8024c06:	d018      	beq.n	8024c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8024c08:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8024c0c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024c10:	fb04 fa02 	mul.w	sl, r4, r2
 8024c14:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024c18:	fb08 f805 	mul.w	r8, r8, r5
 8024c1c:	f10a 0520 	add.w	r5, sl, #32
 8024c20:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8024c24:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8024c28:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024c2c:	4442      	add	r2, r8
 8024c2e:	0a2d      	lsrs	r5, r5, #8
 8024c30:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8024c34:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024c38:	432a      	orrs	r2, r5
 8024c3a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024c3c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8024c40:	2cff      	cmp	r4, #255	@ 0xff
 8024c42:	d01a      	beq.n	8024c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8024c44:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8024c48:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024c4c:	fb04 fa05 	mul.w	sl, r4, r5
 8024c50:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024c54:	fb08 f80e 	mul.w	r8, r8, lr
 8024c58:	f10a 0e20 	add.w	lr, sl, #32
 8024c5c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024c60:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8024c64:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024c68:	4445      	add	r5, r8
 8024c6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024c6e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8024c72:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8024c76:	ea45 050e 	orr.w	r5, r5, lr
 8024c7a:	fb1c fe01 	smulbb	lr, ip, r1
 8024c7e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8024c82:	f1cc 0810 	rsb	r8, ip, #16
 8024c86:	eba8 0801 	sub.w	r8, r8, r1
 8024c8a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024c8e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8024c92:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8024c96:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8024c9a:	4341      	muls	r1, r0
 8024c9c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024ca0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024ca4:	ea4a 0202 	orr.w	r2, sl, r2
 8024ca8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024cac:	fb09 1108 	mla	r1, r9, r8, r1
 8024cb0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8024cb4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8024cb8:	fb0c 1102 	mla	r1, ip, r2, r1
 8024cbc:	ea4b 0505 	orr.w	r5, fp, r5
 8024cc0:	fb0e 1e05 	mla	lr, lr, r5, r1
 8024cc4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024cc8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024ccc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024cd0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024cd4:	ea42 0e0e 	orr.w	lr, r2, lr
 8024cd8:	fa1f f28e 	uxth.w	r2, lr
 8024cdc:	2bff      	cmp	r3, #255	@ 0xff
 8024cde:	d103      	bne.n	8024ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8024ce0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8024ce2:	29ff      	cmp	r1, #255	@ 0xff
 8024ce4:	f000 80de 	beq.w	8024ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8024ce8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8024cea:	8838      	ldrh	r0, [r7, #0]
 8024cec:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8024cee:	434b      	muls	r3, r1
 8024cf0:	f103 0c01 	add.w	ip, r3, #1
 8024cf4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8024cf8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024cfc:	fa5f fc83 	uxtb.w	ip, r3
 8024d00:	1203      	asrs	r3, r0, #8
 8024d02:	1215      	asrs	r5, r2, #8
 8024d04:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024d08:	fb13 f30c 	smulbb	r3, r3, ip
 8024d0c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024d10:	fb05 3501 	mla	r5, r5, r1, r3
 8024d14:	10c3      	asrs	r3, r0, #3
 8024d16:	10d1      	asrs	r1, r2, #3
 8024d18:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8024d1c:	fb13 f30c 	smulbb	r3, r3, ip
 8024d20:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024d24:	fb01 3104 	mla	r1, r1, r4, r3
 8024d28:	00c3      	lsls	r3, r0, #3
 8024d2a:	00d2      	lsls	r2, r2, #3
 8024d2c:	b2db      	uxtb	r3, r3
 8024d2e:	b2d2      	uxtb	r2, r2
 8024d30:	fb13 f30c 	smulbb	r3, r3, ip
 8024d34:	b2ad      	uxth	r5, r5
 8024d36:	fb02 3304 	mla	r3, r2, r4, r3
 8024d3a:	b29a      	uxth	r2, r3
 8024d3c:	1c6b      	adds	r3, r5, #1
 8024d3e:	b289      	uxth	r1, r1
 8024d40:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024d44:	1c53      	adds	r3, r2, #1
 8024d46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d4a:	1c4a      	adds	r2, r1, #1
 8024d4c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024d50:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024d54:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d58:	0949      	lsrs	r1, r1, #5
 8024d5a:	432b      	orrs	r3, r5
 8024d5c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024d60:	430b      	orrs	r3, r1
 8024d62:	803b      	strh	r3, [r7, #0]
 8024d64:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024d66:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8024d68:	4413      	add	r3, r2
 8024d6a:	9321      	str	r3, [sp, #132]	@ 0x84
 8024d6c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8024d6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024d70:	441a      	add	r2, r3
 8024d72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024d74:	9222      	str	r2, [sp, #136]	@ 0x88
 8024d76:	3b01      	subs	r3, #1
 8024d78:	3702      	adds	r7, #2
 8024d7a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024d7c:	e689      	b.n	8024a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8024d7e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024d80:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8024d82:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8024d84:	4433      	add	r3, r6
 8024d86:	9321      	str	r3, [sp, #132]	@ 0x84
 8024d88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024d8a:	441c      	add	r4, r3
 8024d8c:	9b08      	ldr	r3, [sp, #32]
 8024d8e:	9422      	str	r4, [sp, #136]	@ 0x88
 8024d90:	3b01      	subs	r3, #1
 8024d92:	9308      	str	r3, [sp, #32]
 8024d94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024d96:	3302      	adds	r3, #2
 8024d98:	9309      	str	r3, [sp, #36]	@ 0x24
 8024d9a:	e658      	b.n	8024a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8024d9c:	d028      	beq.n	8024df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8024d9e:	9b08      	ldr	r3, [sp, #32]
 8024da0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8024da2:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8024da4:	3b01      	subs	r3, #1
 8024da6:	fb00 5003 	mla	r0, r0, r3, r5
 8024daa:	1400      	asrs	r0, r0, #16
 8024dac:	f53f ae6c 	bmi.w	8024a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024db0:	3901      	subs	r1, #1
 8024db2:	4288      	cmp	r0, r1
 8024db4:	f6bf ae68 	bge.w	8024a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024db8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8024dba:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8024dbc:	fb01 0303 	mla	r3, r1, r3, r0
 8024dc0:	141b      	asrs	r3, r3, #16
 8024dc2:	f53f ae61 	bmi.w	8024a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024dc6:	3a01      	subs	r2, #1
 8024dc8:	4293      	cmp	r3, r2
 8024dca:	f6bf ae5d 	bge.w	8024a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024dce:	9b08      	ldr	r3, [sp, #32]
 8024dd0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8024dd4:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024dd6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8024dda:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024ddc:	2b00      	cmp	r3, #0
 8024dde:	f300 8082 	bgt.w	8024ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8024de2:	9b08      	ldr	r3, [sp, #32]
 8024de4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024de8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024dea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024dee:	9309      	str	r3, [sp, #36]	@ 0x24
 8024df0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8024df2:	2b00      	cmp	r3, #0
 8024df4:	f340 81ef 	ble.w	80251d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8024df8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024dfc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024e00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024e04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024e06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024e0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024e0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024e12:	eef0 6a62 	vmov.f32	s13, s5
 8024e16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024e1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024e22:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8024e26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024e2a:	eef0 6a43 	vmov.f32	s13, s6
 8024e2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024e32:	ee12 2a90 	vmov	r2, s5
 8024e36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e3e:	ee13 2a10 	vmov	r2, s6
 8024e42:	9323      	str	r3, [sp, #140]	@ 0x8c
 8024e44:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024e46:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e4a:	9324      	str	r3, [sp, #144]	@ 0x90
 8024e4c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8024e4e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024e50:	3b01      	subs	r3, #1
 8024e52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e56:	9311      	str	r3, [sp, #68]	@ 0x44
 8024e58:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024e5a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8024e5e:	bf08      	it	eq
 8024e60:	4613      	moveq	r3, r2
 8024e62:	9308      	str	r3, [sp, #32]
 8024e64:	eeb0 3a67 	vmov.f32	s6, s15
 8024e68:	eef0 2a47 	vmov.f32	s5, s14
 8024e6c:	e5e1      	b.n	8024a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024e6e:	fb08 f505 	mul.w	r5, r8, r5
 8024e72:	fb09 5303 	mla	r3, r9, r3, r5
 8024e76:	e661      	b.n	8024b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8024e78:	4681      	mov	r9, r0
 8024e7a:	e688      	b.n	8024b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8024e7c:	f1c1 0210 	rsb	r2, r1, #16
 8024e80:	4341      	muls	r1, r0
 8024e82:	fb09 1902 	mla	r9, r9, r2, r1
 8024e86:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024e8a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8024e8e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8024e92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024e96:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8024e9a:	ea42 0909 	orr.w	r9, r2, r9
 8024e9e:	fa1f f289 	uxth.w	r2, r9
 8024ea2:	e71b      	b.n	8024cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8024ea4:	803a      	strh	r2, [r7, #0]
 8024ea6:	e75d      	b.n	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024ea8:	f115 0e01 	adds.w	lr, r5, #1
 8024eac:	f53f af5a 	bmi.w	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024eb0:	4572      	cmp	r2, lr
 8024eb2:	f6ff af57 	blt.w	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024eb6:	f110 0e01 	adds.w	lr, r0, #1
 8024eba:	f53f af53 	bmi.w	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024ebe:	4573      	cmp	r3, lr
 8024ec0:	f6ff af50 	blt.w	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024ec4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8024ec6:	9502      	str	r5, [sp, #8]
 8024ec8:	b21b      	sxth	r3, r3
 8024eca:	b212      	sxth	r2, r2
 8024ecc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8024ed0:	9301      	str	r3, [sp, #4]
 8024ed2:	9200      	str	r2, [sp, #0]
 8024ed4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8024ed8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8024edc:	4639      	mov	r1, r7
 8024ede:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8024ee0:	f7ff fc04 	bl	80246ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8024ee4:	e73e      	b.n	8024d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024ee6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024ee8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024eec:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024eee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024ef2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024ef4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024ef8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024efa:	141f      	asrs	r7, r3, #16
 8024efc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024efe:	141b      	asrs	r3, r3, #16
 8024f00:	fb01 3707 	mla	r7, r1, r7, r3
 8024f04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024f06:	fa1f fc82 	uxth.w	ip, r2
 8024f0a:	eb03 0a07 	add.w	sl, r3, r7
 8024f0e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8024f12:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024f16:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024f1a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8024f1e:	b29b      	uxth	r3, r3
 8024f20:	2d00      	cmp	r5, #0
 8024f22:	f000 813d 	beq.w	80251a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8024f26:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8024f2a:	940f      	str	r4, [sp, #60]	@ 0x3c
 8024f2c:	eb0a 0b01 	add.w	fp, sl, r1
 8024f30:	fa1f fa85 	uxth.w	sl, r5
 8024f34:	fb0a fc0c 	mul.w	ip, sl, ip
 8024f38:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8024f3c:	fa1f fa8a 	uxth.w	sl, sl
 8024f40:	eba0 000c 	sub.w	r0, r0, ip
 8024f44:	eba3 030a 	sub.w	r3, r3, sl
 8024f48:	b280      	uxth	r0, r0
 8024f4a:	fb08 f000 	mul.w	r0, r8, r0
 8024f4e:	b29b      	uxth	r3, r3
 8024f50:	fb09 0303 	mla	r3, r9, r3, r0
 8024f54:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8024f56:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024f5a:	9410      	str	r4, [sp, #64]	@ 0x40
 8024f5c:	fb0a 3300 	mla	r3, sl, r0, r3
 8024f60:	fb0c 3304 	mla	r3, ip, r4, r3
 8024f64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f68:	2b00      	cmp	r3, #0
 8024f6a:	f000 810b 	beq.w	8025184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8024f6e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8024f70:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024f72:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8024f76:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8024f7a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8024f7e:	f000 8114 	beq.w	80251aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8024f82:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8024f86:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024f8a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024f8e:	fb09 f707 	mul.w	r7, r9, r7
 8024f92:	fb0a fc0c 	mul.w	ip, sl, ip
 8024f96:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8024f9a:	f107 0b20 	add.w	fp, r7, #32
 8024f9e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8024fa2:	44cc      	add	ip, r9
 8024fa4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024fa8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024fac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024fb0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8024fb4:	ea4c 0909 	orr.w	r9, ip, r9
 8024fb8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8024fbc:	8847      	ldrh	r7, [r0, #2]
 8024fbe:	d019      	beq.n	8024ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8024fc0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8024fc4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024fc8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024fcc:	fb08 f807 	mul.w	r8, r8, r7
 8024fd0:	fb0a fc0c 	mul.w	ip, sl, ip
 8024fd4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024fd8:	f108 0b20 	add.w	fp, r8, #32
 8024fdc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8024fe0:	44bc      	add	ip, r7
 8024fe2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024fe6:	0a3f      	lsrs	r7, r7, #8
 8024fe8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024fec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024ff0:	ea4c 0707 	orr.w	r7, ip, r7
 8024ff4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024ff8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8024ffc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025000:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8025004:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025008:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802500c:	ea4c 0909 	orr.w	r9, ip, r9
 8025010:	ea4a 0707 	orr.w	r7, sl, r7
 8025014:	2d00      	cmp	r5, #0
 8025016:	f000 80ca 	beq.w	80251ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802501a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802501e:	3901      	subs	r1, #1
 8025020:	0049      	lsls	r1, r1, #1
 8025022:	3102      	adds	r1, #2
 8025024:	eb00 0c01 	add.w	ip, r0, r1
 8025028:	5a41      	ldrh	r1, [r0, r1]
 802502a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802502c:	28ff      	cmp	r0, #255	@ 0xff
 802502e:	d019      	beq.n	8025064 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025030:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8025032:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8025036:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802503a:	fb04 fa01 	mul.w	sl, r4, r1
 802503e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025042:	fb08 f800 	mul.w	r8, r8, r0
 8025046:	f10a 0020 	add.w	r0, sl, #32
 802504a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802504e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025052:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025056:	4441      	add	r1, r8
 8025058:	0a00      	lsrs	r0, r0, #8
 802505a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802505e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025062:	4301      	orrs	r1, r0
 8025064:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8025066:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802506a:	2cff      	cmp	r4, #255	@ 0xff
 802506c:	d01a      	beq.n	80250a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802506e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8025072:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025076:	fb04 fa00 	mul.w	sl, r4, r0
 802507a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802507e:	fb08 f80c 	mul.w	r8, r8, ip
 8025082:	f10a 0c20 	add.w	ip, sl, #32
 8025086:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802508a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802508e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025092:	4440      	add	r0, r8
 8025094:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025098:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802509c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80250a0:	ea40 000c 	orr.w	r0, r0, ip
 80250a4:	fb15 fc02 	smulbb	ip, r5, r2
 80250a8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80250ac:	f1c5 0810 	rsb	r8, r5, #16
 80250b0:	eba8 0802 	sub.w	r8, r8, r2
 80250b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80250b8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80250bc:	437a      	muls	r2, r7
 80250be:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80250c2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80250c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80250ca:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80250ce:	fb09 2208 	mla	r2, r9, r8, r2
 80250d2:	ea4a 0101 	orr.w	r1, sl, r1
 80250d6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80250da:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80250de:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80250e2:	fb05 2201 	mla	r2, r5, r1, r2
 80250e6:	ea4b 0000 	orr.w	r0, fp, r0
 80250ea:	fb0c 2200 	mla	r2, ip, r0, r2
 80250ee:	0d57      	lsrs	r7, r2, #21
 80250f0:	0952      	lsrs	r2, r2, #5
 80250f2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80250f6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80250fa:	433a      	orrs	r2, r7
 80250fc:	2bff      	cmp	r3, #255	@ 0xff
 80250fe:	b292      	uxth	r2, r2
 8025100:	d102      	bne.n	8025108 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025102:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8025104:	29ff      	cmp	r1, #255	@ 0xff
 8025106:	d063      	beq.n	80251d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025108:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802510a:	f8be 1000 	ldrh.w	r1, [lr]
 802510e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8025110:	4343      	muls	r3, r0
 8025112:	1c58      	adds	r0, r3, #1
 8025114:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025118:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802511c:	1208      	asrs	r0, r1, #8
 802511e:	b2db      	uxtb	r3, r3
 8025120:	1215      	asrs	r5, r2, #8
 8025122:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025126:	fb10 f003 	smulbb	r0, r0, r3
 802512a:	10cf      	asrs	r7, r1, #3
 802512c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025130:	00c9      	lsls	r1, r1, #3
 8025132:	fb05 0504 	mla	r5, r5, r4, r0
 8025136:	b2c9      	uxtb	r1, r1
 8025138:	10d0      	asrs	r0, r2, #3
 802513a:	00d2      	lsls	r2, r2, #3
 802513c:	fb11 f103 	smulbb	r1, r1, r3
 8025140:	b2d2      	uxtb	r2, r2
 8025142:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025146:	fb02 1204 	mla	r2, r2, r4, r1
 802514a:	fb17 f703 	smulbb	r7, r7, r3
 802514e:	b2ad      	uxth	r5, r5
 8025150:	b292      	uxth	r2, r2
 8025152:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8025156:	fb00 7004 	mla	r0, r0, r4, r7
 802515a:	1c6b      	adds	r3, r5, #1
 802515c:	1c57      	adds	r7, r2, #1
 802515e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025162:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025166:	b280      	uxth	r0, r0
 8025168:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802516c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025170:	433d      	orrs	r5, r7
 8025172:	1c47      	adds	r7, r0, #1
 8025174:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025178:	097f      	lsrs	r7, r7, #5
 802517a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802517e:	433d      	orrs	r5, r7
 8025180:	f8ae 5000 	strh.w	r5, [lr]
 8025184:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8025186:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8025188:	4413      	add	r3, r2
 802518a:	9321      	str	r3, [sp, #132]	@ 0x84
 802518c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802518e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025190:	441a      	add	r2, r3
 8025192:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8025194:	9222      	str	r2, [sp, #136]	@ 0x88
 8025196:	3b01      	subs	r3, #1
 8025198:	f10e 0e02 	add.w	lr, lr, #2
 802519c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802519e:	e61c      	b.n	8024dda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80251a0:	fb08 f000 	mul.w	r0, r8, r0
 80251a4:	fb09 0303 	mla	r3, r9, r3, r0
 80251a8:	e6dc      	b.n	8024f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80251aa:	46b9      	mov	r9, r7
 80251ac:	e704      	b.n	8024fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80251ae:	f1c2 0110 	rsb	r1, r2, #16
 80251b2:	437a      	muls	r2, r7
 80251b4:	fb09 2901 	mla	r9, r9, r1, r2
 80251b8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80251bc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80251c0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80251c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80251c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80251cc:	4302      	orrs	r2, r0
 80251ce:	e795      	b.n	80250fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80251d0:	f8ae 2000 	strh.w	r2, [lr]
 80251d4:	e7d6      	b.n	8025184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80251d6:	b017      	add	sp, #92	@ 0x5c
 80251d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080251dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80251dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80251e0:	b085      	sub	sp, #20
 80251e2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80251e6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80251ea:	9103      	str	r1, [sp, #12]
 80251ec:	fb00 7406 	mla	r4, r0, r6, r7
 80251f0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80251f4:	2800      	cmp	r0, #0
 80251f6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80251fa:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80251fe:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8025202:	9501      	str	r5, [sp, #4]
 8025204:	eb02 0904 	add.w	r9, r2, r4
 8025208:	f2c0 8141 	blt.w	802548e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802520c:	4583      	cmp	fp, r0
 802520e:	f340 813e 	ble.w	802548e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025212:	2f00      	cmp	r7, #0
 8025214:	f2c0 8137 	blt.w	8025486 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025218:	42be      	cmp	r6, r7
 802521a:	f340 8134 	ble.w	8025486 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802521e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025222:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025226:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802522a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802522e:	4355      	muls	r5, r2
 8025230:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025234:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8025238:	fb0c f203 	mul.w	r2, ip, r3
 802523c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025240:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8025244:	441d      	add	r5, r3
 8025246:	f102 0320 	add.w	r3, r2, #32
 802524a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802524e:	0a1b      	lsrs	r3, r3, #8
 8025250:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025254:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025258:	431c      	orrs	r4, r3
 802525a:	1c7b      	adds	r3, r7, #1
 802525c:	f100 811c 	bmi.w	8025498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025260:	429e      	cmp	r6, r3
 8025262:	f340 8119 	ble.w	8025498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025266:	2900      	cmp	r1, #0
 8025268:	f000 8119 	beq.w	802549e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 802526c:	9a01      	ldr	r2, [sp, #4]
 802526e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025272:	8855      	ldrh	r5, [r2, #2]
 8025274:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025278:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 802527c:	fb08 f802 	mul.w	r8, r8, r2
 8025280:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025284:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8025288:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802528c:	435d      	muls	r5, r3
 802528e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025292:	44d0      	add	r8, sl
 8025294:	f105 0a20 	add.w	sl, r5, #32
 8025298:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802529c:	0a2d      	lsrs	r5, r5, #8
 802529e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80252a2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80252a6:	432a      	orrs	r2, r5
 80252a8:	3001      	adds	r0, #1
 80252aa:	f100 80fe 	bmi.w	80254aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80252ae:	4583      	cmp	fp, r0
 80252b0:	f340 80fb 	ble.w	80254aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80252b4:	f1be 0f00 	cmp.w	lr, #0
 80252b8:	f000 80fc 	beq.w	80254b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80252bc:	2f00      	cmp	r7, #0
 80252be:	f2c0 80f1 	blt.w	80254a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80252c2:	42be      	cmp	r6, r7
 80252c4:	f340 80ee 	ble.w	80254a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80252c8:	9801      	ldr	r0, [sp, #4]
 80252ca:	f819 5006 	ldrb.w	r5, [r9, r6]
 80252ce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80252d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80252d6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 80252da:	fb0a fa00 	mul.w	sl, sl, r0
 80252de:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80252e2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80252e6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80252ea:	fb05 f808 	mul.w	r8, r5, r8
 80252ee:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 80252f2:	4482      	add	sl, r0
 80252f4:	f108 0020 	add.w	r0, r8, #32
 80252f8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80252fc:	0a00      	lsrs	r0, r0, #8
 80252fe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025302:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025306:	ea4b 0b00 	orr.w	fp, fp, r0
 802530a:	3701      	adds	r7, #1
 802530c:	f100 80d7 	bmi.w	80254be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025310:	42be      	cmp	r6, r7
 8025312:	f340 80d4 	ble.w	80254be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025316:	2900      	cmp	r1, #0
 8025318:	f000 80d4 	beq.w	80254c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 802531c:	3601      	adds	r6, #1
 802531e:	9801      	ldr	r0, [sp, #4]
 8025320:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025324:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025328:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802532c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8025330:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025334:	fb09 f906 	mul.w	r9, r9, r6
 8025338:	fb07 f800 	mul.w	r8, r7, r0
 802533c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8025340:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025344:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8025348:	44d1      	add	r9, sl
 802534a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802534e:	f108 0020 	add.w	r0, r8, #32
 8025352:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025356:	0a00      	lsrs	r0, r0, #8
 8025358:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802535c:	4330      	orrs	r0, r6
 802535e:	b28e      	uxth	r6, r1
 8025360:	fa1f f98e 	uxth.w	r9, lr
 8025364:	fb06 f809 	mul.w	r8, r6, r9
 8025368:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802536c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025370:	0136      	lsls	r6, r6, #4
 8025372:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025376:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 802537a:	9601      	str	r6, [sp, #4]
 802537c:	ea4a 0404 	orr.w	r4, sl, r4
 8025380:	fa1f f689 	uxth.w	r6, r9
 8025384:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025388:	fb11 f90e 	smulbb	r9, r1, lr
 802538c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025390:	9602      	str	r6, [sp, #8]
 8025392:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025396:	4626      	mov	r6, r4
 8025398:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802539c:	f1ce 0410 	rsb	r4, lr, #16
 80253a0:	1a64      	subs	r4, r4, r1
 80253a2:	ea4a 0202 	orr.w	r2, sl, r2
 80253a6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80253aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80253ae:	434a      	muls	r2, r1
 80253b0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80253b4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80253b8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80253bc:	fb04 2406 	mla	r4, r4, r6, r2
 80253c0:	ea4a 0000 	orr.w	r0, sl, r0
 80253c4:	fb09 4200 	mla	r2, r9, r0, r4
 80253c8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80253cc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80253d0:	9801      	ldr	r0, [sp, #4]
 80253d2:	9903      	ldr	r1, [sp, #12]
 80253d4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80253d8:	ea44 0b0b 	orr.w	fp, r4, fp
 80253dc:	9c02      	ldr	r4, [sp, #8]
 80253de:	8809      	ldrh	r1, [r1, #0]
 80253e0:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 80253e4:	1b00      	subs	r0, r0, r4
 80253e6:	9c01      	ldr	r4, [sp, #4]
 80253e8:	eba4 0608 	sub.w	r6, r4, r8
 80253ec:	b2b6      	uxth	r6, r6
 80253ee:	b280      	uxth	r0, r0
 80253f0:	4373      	muls	r3, r6
 80253f2:	fb0c 3300 	mla	r3, ip, r0, r3
 80253f6:	9802      	ldr	r0, [sp, #8]
 80253f8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80253fc:	fb00 3505 	mla	r5, r0, r5, r3
 8025400:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025404:	fb08 5707 	mla	r7, r8, r7, r5
 8025408:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802540c:	120b      	asrs	r3, r1, #8
 802540e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025412:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025416:	b2ff      	uxtb	r7, r7
 8025418:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802541c:	10c8      	asrs	r0, r1, #3
 802541e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8025422:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8025426:	00c9      	lsls	r1, r1, #3
 8025428:	437b      	muls	r3, r7
 802542a:	ea42 0e0e 	orr.w	lr, r2, lr
 802542e:	b2c9      	uxtb	r1, r1
 8025430:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8025434:	fa1f f28e 	uxth.w	r2, lr
 8025438:	4378      	muls	r0, r7
 802543a:	434f      	muls	r7, r1
 802543c:	1c59      	adds	r1, r3, #1
 802543e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025442:	1213      	asrs	r3, r2, #8
 8025444:	f023 0307 	bic.w	r3, r3, #7
 8025448:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802544c:	1c41      	adds	r1, r0, #1
 802544e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025452:	10d1      	asrs	r1, r2, #3
 8025454:	f021 0103 	bic.w	r1, r1, #3
 8025458:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802545c:	021b      	lsls	r3, r3, #8
 802545e:	00c9      	lsls	r1, r1, #3
 8025460:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025464:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8025468:	430b      	orrs	r3, r1
 802546a:	1c79      	adds	r1, r7, #1
 802546c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025470:	00d2      	lsls	r2, r2, #3
 8025472:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025476:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802547a:	431a      	orrs	r2, r3
 802547c:	9b03      	ldr	r3, [sp, #12]
 802547e:	801a      	strh	r2, [r3, #0]
 8025480:	b005      	add	sp, #20
 8025482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025486:	f04f 0c00 	mov.w	ip, #0
 802548a:	4664      	mov	r4, ip
 802548c:	e6e5      	b.n	802525a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802548e:	2300      	movs	r3, #0
 8025490:	469c      	mov	ip, r3
 8025492:	461a      	mov	r2, r3
 8025494:	461c      	mov	r4, r3
 8025496:	e707      	b.n	80252a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025498:	2300      	movs	r3, #0
 802549a:	461a      	mov	r2, r3
 802549c:	e704      	b.n	80252a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802549e:	460b      	mov	r3, r1
 80254a0:	460a      	mov	r2, r1
 80254a2:	e701      	b.n	80252a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80254a4:	2500      	movs	r5, #0
 80254a6:	46ab      	mov	fp, r5
 80254a8:	e72f      	b.n	802530a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80254aa:	2700      	movs	r7, #0
 80254ac:	463d      	mov	r5, r7
 80254ae:	4638      	mov	r0, r7
 80254b0:	46bb      	mov	fp, r7
 80254b2:	e754      	b.n	802535e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80254b4:	4677      	mov	r7, lr
 80254b6:	4675      	mov	r5, lr
 80254b8:	4670      	mov	r0, lr
 80254ba:	46f3      	mov	fp, lr
 80254bc:	e74f      	b.n	802535e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80254be:	2700      	movs	r7, #0
 80254c0:	4638      	mov	r0, r7
 80254c2:	e74c      	b.n	802535e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80254c4:	460f      	mov	r7, r1
 80254c6:	4608      	mov	r0, r1
 80254c8:	e749      	b.n	802535e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80254cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254d0:	b093      	sub	sp, #76	@ 0x4c
 80254d2:	9210      	str	r2, [sp, #64]	@ 0x40
 80254d4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80254d6:	910e      	str	r1, [sp, #56]	@ 0x38
 80254d8:	9306      	str	r3, [sp, #24]
 80254da:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80254de:	9011      	str	r0, [sp, #68]	@ 0x44
 80254e0:	6850      	ldr	r0, [r2, #4]
 80254e2:	6812      	ldr	r2, [r2, #0]
 80254e4:	fb00 1303 	mla	r3, r0, r3, r1
 80254e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80254ec:	9307      	str	r3, [sp, #28]
 80254ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80254f0:	681b      	ldr	r3, [r3, #0]
 80254f2:	9308      	str	r3, [sp, #32]
 80254f4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80254f6:	685b      	ldr	r3, [r3, #4]
 80254f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80254fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80254fc:	2b00      	cmp	r3, #0
 80254fe:	dc03      	bgt.n	8025508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025500:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025502:	2b00      	cmp	r3, #0
 8025504:	f340 83b4 	ble.w	8025c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025508:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802550a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802550e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025512:	1e48      	subs	r0, r1, #1
 8025514:	1e55      	subs	r5, r2, #1
 8025516:	9b06      	ldr	r3, [sp, #24]
 8025518:	2b00      	cmp	r3, #0
 802551a:	f340 8163 	ble.w	80257e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802551e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8025520:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8025522:	1436      	asrs	r6, r6, #16
 8025524:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025528:	d406      	bmi.n	8025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802552a:	4286      	cmp	r6, r0
 802552c:	da04      	bge.n	8025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802552e:	2b00      	cmp	r3, #0
 8025530:	db02      	blt.n	8025538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025532:	42ab      	cmp	r3, r5
 8025534:	f2c0 8157 	blt.w	80257e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025538:	3601      	adds	r6, #1
 802553a:	f100 8144 	bmi.w	80257c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802553e:	42b1      	cmp	r1, r6
 8025540:	f2c0 8141 	blt.w	80257c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025544:	3301      	adds	r3, #1
 8025546:	f100 813e 	bmi.w	80257c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802554a:	429a      	cmp	r2, r3
 802554c:	f2c0 813b 	blt.w	80257c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025550:	9b06      	ldr	r3, [sp, #24]
 8025552:	9f07      	ldr	r7, [sp, #28]
 8025554:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025556:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802555a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802555c:	2b00      	cmp	r3, #0
 802555e:	f340 8164 	ble.w	802582a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025562:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8025564:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8025566:	1418      	asrs	r0, r3, #16
 8025568:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802556a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802556e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8025570:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025574:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025576:	142d      	asrs	r5, r5, #16
 8025578:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802557c:	f100 81ee 	bmi.w	802595c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025580:	f102 3eff 	add.w	lr, r2, #4294967295
 8025584:	4575      	cmp	r5, lr
 8025586:	f280 81e9 	bge.w	802595c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802558a:	2800      	cmp	r0, #0
 802558c:	f2c0 81e6 	blt.w	802595c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025590:	f103 3eff 	add.w	lr, r3, #4294967295
 8025594:	4570      	cmp	r0, lr
 8025596:	f280 81e1 	bge.w	802595c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802559a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802559c:	b212      	sxth	r2, r2
 802559e:	fb00 5002 	mla	r0, r0, r2, r5
 80255a2:	fa1f fe81 	uxth.w	lr, r1
 80255a6:	eb03 0a00 	add.w	sl, r3, r0
 80255aa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80255ae:	f813 9000 	ldrb.w	r9, [r3, r0]
 80255b2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80255b6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80255ba:	b29b      	uxth	r3, r3
 80255bc:	f1bc 0f00 	cmp.w	ip, #0
 80255c0:	f000 8179 	beq.w	80258b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80255c4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80255c8:	940a      	str	r4, [sp, #40]	@ 0x28
 80255ca:	eb0a 0b02 	add.w	fp, sl, r2
 80255ce:	fa1f fa8c 	uxth.w	sl, ip
 80255d2:	fb0a fe0e 	mul.w	lr, sl, lr
 80255d6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80255da:	fa1f fa8a 	uxth.w	sl, sl
 80255de:	eba5 050e 	sub.w	r5, r5, lr
 80255e2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80255e6:	940b      	str	r4, [sp, #44]	@ 0x2c
 80255e8:	eba3 030a 	sub.w	r3, r3, sl
 80255ec:	b2ad      	uxth	r5, r5
 80255ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80255f0:	b29b      	uxth	r3, r3
 80255f2:	fb08 f505 	mul.w	r5, r8, r5
 80255f6:	fb09 5303 	mla	r3, r9, r3, r5
 80255fa:	fb0a 3304 	mla	r3, sl, r4, r3
 80255fe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025600:	fb0e 3304 	mla	r3, lr, r4, r3
 8025604:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025608:	2b00      	cmp	r3, #0
 802560a:	f000 80cf 	beq.w	80257ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802560e:	9c08      	ldr	r4, [sp, #32]
 8025610:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8025614:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025618:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802561c:	f000 8150 	beq.w	80258c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025620:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8025624:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025628:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802562c:	fb09 f000 	mul.w	r0, r9, r0
 8025630:	fb0a fe0e 	mul.w	lr, sl, lr
 8025634:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025638:	f100 0b20 	add.w	fp, r0, #32
 802563c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8025640:	44ce      	add	lr, r9
 8025642:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025646:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802564a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802564e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8025652:	ea4e 0909 	orr.w	r9, lr, r9
 8025656:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802565a:	8868      	ldrh	r0, [r5, #2]
 802565c:	d019      	beq.n	8025692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802565e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8025662:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025666:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802566a:	fb08 f800 	mul.w	r8, r8, r0
 802566e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025672:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025676:	f108 0b20 	add.w	fp, r8, #32
 802567a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802567e:	4486      	add	lr, r0
 8025680:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025684:	0a00      	lsrs	r0, r0, #8
 8025686:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802568a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802568e:	ea4e 0000 	orr.w	r0, lr, r0
 8025692:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025696:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802569a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802569e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80256a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80256a6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80256aa:	ea4e 0909 	orr.w	r9, lr, r9
 80256ae:	ea4a 0000 	orr.w	r0, sl, r0
 80256b2:	f1bc 0f00 	cmp.w	ip, #0
 80256b6:	f000 8105 	beq.w	80258c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80256ba:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80256be:	3a01      	subs	r2, #1
 80256c0:	0052      	lsls	r2, r2, #1
 80256c2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80256c4:	3202      	adds	r2, #2
 80256c6:	2cff      	cmp	r4, #255	@ 0xff
 80256c8:	eb05 0e02 	add.w	lr, r5, r2
 80256cc:	5aaa      	ldrh	r2, [r5, r2]
 80256ce:	d018      	beq.n	8025702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80256d0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80256d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80256d8:	fb04 fa02 	mul.w	sl, r4, r2
 80256dc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80256e0:	fb08 f805 	mul.w	r8, r8, r5
 80256e4:	f10a 0520 	add.w	r5, sl, #32
 80256e8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80256ec:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80256f0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80256f4:	4442      	add	r2, r8
 80256f6:	0a2d      	lsrs	r5, r5, #8
 80256f8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80256fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025700:	432a      	orrs	r2, r5
 8025702:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025704:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025708:	2cff      	cmp	r4, #255	@ 0xff
 802570a:	d01a      	beq.n	8025742 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802570c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8025710:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025714:	fb04 fa05 	mul.w	sl, r4, r5
 8025718:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802571c:	fb08 f80e 	mul.w	r8, r8, lr
 8025720:	f10a 0e20 	add.w	lr, sl, #32
 8025724:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025728:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802572c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025730:	4445      	add	r5, r8
 8025732:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025736:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802573a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802573e:	ea45 050e 	orr.w	r5, r5, lr
 8025742:	fb1c fe01 	smulbb	lr, ip, r1
 8025746:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802574a:	f1cc 0810 	rsb	r8, ip, #16
 802574e:	eba8 0801 	sub.w	r8, r8, r1
 8025752:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025756:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802575a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802575e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8025762:	4341      	muls	r1, r0
 8025764:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025768:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802576c:	ea4a 0202 	orr.w	r2, sl, r2
 8025770:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025774:	fb09 1108 	mla	r1, r9, r8, r1
 8025778:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802577c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8025780:	fb0c 1102 	mla	r1, ip, r2, r1
 8025784:	ea4b 0505 	orr.w	r5, fp, r5
 8025788:	fb0e 1e05 	mla	lr, lr, r5, r1
 802578c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025790:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025794:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025798:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802579c:	ea42 0e0e 	orr.w	lr, r2, lr
 80257a0:	fa1f f28e 	uxth.w	r2, lr
 80257a4:	2bff      	cmp	r3, #255	@ 0xff
 80257a6:	f040 80a1 	bne.w	80258ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80257aa:	803a      	strh	r2, [r7, #0]
 80257ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80257ae:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80257b0:	4413      	add	r3, r2
 80257b2:	931d      	str	r3, [sp, #116]	@ 0x74
 80257b4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80257b6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80257b8:	441a      	add	r2, r3
 80257ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80257bc:	921e      	str	r2, [sp, #120]	@ 0x78
 80257be:	3b01      	subs	r3, #1
 80257c0:	3702      	adds	r7, #2
 80257c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80257c4:	e6c9      	b.n	802555a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80257c6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80257c8:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80257ca:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80257cc:	4433      	add	r3, r6
 80257ce:	931d      	str	r3, [sp, #116]	@ 0x74
 80257d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80257d2:	441c      	add	r4, r3
 80257d4:	9b06      	ldr	r3, [sp, #24]
 80257d6:	941e      	str	r4, [sp, #120]	@ 0x78
 80257d8:	3b01      	subs	r3, #1
 80257da:	9306      	str	r3, [sp, #24]
 80257dc:	9b07      	ldr	r3, [sp, #28]
 80257de:	3302      	adds	r3, #2
 80257e0:	9307      	str	r3, [sp, #28]
 80257e2:	e698      	b.n	8025516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80257e4:	d028      	beq.n	8025838 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257e6:	9b06      	ldr	r3, [sp, #24]
 80257e8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80257ea:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80257ec:	3b01      	subs	r3, #1
 80257ee:	fb00 5003 	mla	r0, r0, r3, r5
 80257f2:	1400      	asrs	r0, r0, #16
 80257f4:	f53f aeac 	bmi.w	8025550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80257f8:	3901      	subs	r1, #1
 80257fa:	4288      	cmp	r0, r1
 80257fc:	f6bf aea8 	bge.w	8025550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025800:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8025802:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8025804:	fb01 0303 	mla	r3, r1, r3, r0
 8025808:	141b      	asrs	r3, r3, #16
 802580a:	f53f aea1 	bmi.w	8025550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802580e:	3a01      	subs	r2, #1
 8025810:	4293      	cmp	r3, r2
 8025812:	f6bf ae9d 	bge.w	8025550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025816:	9b06      	ldr	r3, [sp, #24]
 8025818:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802581c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802581e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8025822:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025824:	2b00      	cmp	r3, #0
 8025826:	f300 80b6 	bgt.w	8025996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802582a:	9b06      	ldr	r3, [sp, #24]
 802582c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025830:	9b07      	ldr	r3, [sp, #28]
 8025832:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8025836:	9307      	str	r3, [sp, #28]
 8025838:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802583a:	2b00      	cmp	r3, #0
 802583c:	f340 8218 	ble.w	8025c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025840:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025844:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025848:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802584c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802584e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025852:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025856:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802585a:	eef0 6a62 	vmov.f32	s13, s5
 802585e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025862:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025866:	ee77 2a62 	vsub.f32	s5, s14, s5
 802586a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 802586e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025872:	eef0 6a43 	vmov.f32	s13, s6
 8025876:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802587a:	ee12 2a90 	vmov	r2, s5
 802587e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025882:	fb92 f3f3 	sdiv	r3, r2, r3
 8025886:	ee13 2a10 	vmov	r2, s6
 802588a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802588c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802588e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025892:	9320      	str	r3, [sp, #128]	@ 0x80
 8025894:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025896:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8025898:	3b01      	subs	r3, #1
 802589a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802589e:	930e      	str	r3, [sp, #56]	@ 0x38
 80258a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80258a2:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80258a6:	bf08      	it	eq
 80258a8:	4613      	moveq	r3, r2
 80258aa:	9306      	str	r3, [sp, #24]
 80258ac:	eeb0 3a67 	vmov.f32	s6, s15
 80258b0:	eef0 2a47 	vmov.f32	s5, s14
 80258b4:	e621      	b.n	80254fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80258b6:	fb08 f505 	mul.w	r5, r8, r5
 80258ba:	fb09 5303 	mla	r3, r9, r3, r5
 80258be:	e6a1      	b.n	8025604 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80258c0:	4681      	mov	r9, r0
 80258c2:	e6c8      	b.n	8025656 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80258c4:	f1c1 0210 	rsb	r2, r1, #16
 80258c8:	4341      	muls	r1, r0
 80258ca:	fb09 1902 	mla	r9, r9, r2, r1
 80258ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80258d2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80258d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80258da:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80258de:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80258e2:	ea42 0909 	orr.w	r9, r2, r9
 80258e6:	fa1f f289 	uxth.w	r2, r9
 80258ea:	e75b      	b.n	80257a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80258ec:	f8b7 c000 	ldrh.w	ip, [r7]
 80258f0:	43db      	mvns	r3, r3
 80258f2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80258f6:	fa5f fe83 	uxtb.w	lr, r3
 80258fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80258fe:	fb00 f00e 	mul.w	r0, r0, lr
 8025902:	1c41      	adds	r1, r0, #1
 8025904:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025908:	1211      	asrs	r1, r2, #8
 802590a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802590e:	f021 0107 	bic.w	r1, r1, #7
 8025912:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025916:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802591a:	48d7      	ldr	r0, [pc, #860]	@ (8025c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802591c:	fb05 f50e 	mul.w	r5, r5, lr
 8025920:	b2c9      	uxtb	r1, r1
 8025922:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8025926:	1c69      	adds	r1, r5, #1
 8025928:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802592c:	10d1      	asrs	r1, r2, #3
 802592e:	f021 0103 	bic.w	r1, r1, #3
 8025932:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8025936:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802593a:	b2db      	uxtb	r3, r3
 802593c:	00c9      	lsls	r1, r1, #3
 802593e:	fb03 f30e 	mul.w	r3, r3, lr
 8025942:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025946:	4301      	orrs	r1, r0
 8025948:	1c58      	adds	r0, r3, #1
 802594a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802594e:	00d2      	lsls	r2, r2, #3
 8025950:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025954:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025958:	430a      	orrs	r2, r1
 802595a:	e726      	b.n	80257aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802595c:	f115 0e01 	adds.w	lr, r5, #1
 8025960:	f53f af24 	bmi.w	80257ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025964:	4572      	cmp	r2, lr
 8025966:	f6ff af21 	blt.w	80257ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802596a:	f110 0e01 	adds.w	lr, r0, #1
 802596e:	f53f af1d 	bmi.w	80257ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025972:	4573      	cmp	r3, lr
 8025974:	f6ff af1a 	blt.w	80257ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025978:	b21b      	sxth	r3, r3
 802597a:	b212      	sxth	r2, r2
 802597c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8025980:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8025984:	9301      	str	r3, [sp, #4]
 8025986:	9200      	str	r2, [sp, #0]
 8025988:	4639      	mov	r1, r7
 802598a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802598e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8025990:	f7ff fc24 	bl	80251dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8025994:	e70a      	b.n	80257ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025996:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8025998:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802599c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802599e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80259a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80259a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80259a8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80259aa:	141f      	asrs	r7, r3, #16
 80259ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80259ae:	141b      	asrs	r3, r3, #16
 80259b0:	fb01 3707 	mla	r7, r1, r7, r3
 80259b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80259b6:	fa1f fc82 	uxth.w	ip, r2
 80259ba:	eb03 0a07 	add.w	sl, r3, r7
 80259be:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80259c2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80259c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80259ca:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80259ce:	b29b      	uxth	r3, r3
 80259d0:	2d00      	cmp	r5, #0
 80259d2:	f000 80fe 	beq.w	8025bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80259d6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80259da:	940c      	str	r4, [sp, #48]	@ 0x30
 80259dc:	eb0a 0b01 	add.w	fp, sl, r1
 80259e0:	fa1f fa85 	uxth.w	sl, r5
 80259e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80259e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80259ec:	fa1f fa8a 	uxth.w	sl, sl
 80259f0:	eba0 000c 	sub.w	r0, r0, ip
 80259f4:	eba3 030a 	sub.w	r3, r3, sl
 80259f8:	b280      	uxth	r0, r0
 80259fa:	fb08 f000 	mul.w	r0, r8, r0
 80259fe:	b29b      	uxth	r3, r3
 8025a00:	fb09 0303 	mla	r3, r9, r3, r0
 8025a04:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8025a06:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025a0a:	940d      	str	r4, [sp, #52]	@ 0x34
 8025a0c:	fb0a 3300 	mla	r3, sl, r0, r3
 8025a10:	fb0c 3304 	mla	r3, ip, r4, r3
 8025a14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025a18:	2b00      	cmp	r3, #0
 8025a1a:	f000 80cc 	beq.w	8025bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8025a1e:	9808      	ldr	r0, [sp, #32]
 8025a20:	9c08      	ldr	r4, [sp, #32]
 8025a22:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8025a26:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025a2a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8025a2e:	f000 80d5 	beq.w	8025bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025a32:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8025a36:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025a3a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025a3e:	fb09 f707 	mul.w	r7, r9, r7
 8025a42:	fb0a fc0c 	mul.w	ip, sl, ip
 8025a46:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025a4a:	f107 0b20 	add.w	fp, r7, #32
 8025a4e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8025a52:	44cc      	add	ip, r9
 8025a54:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025a58:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025a5c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025a60:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8025a64:	ea4c 0909 	orr.w	r9, ip, r9
 8025a68:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8025a6c:	8847      	ldrh	r7, [r0, #2]
 8025a6e:	d019      	beq.n	8025aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8025a70:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8025a74:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025a78:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025a7c:	fb08 f807 	mul.w	r8, r8, r7
 8025a80:	fb0a fc0c 	mul.w	ip, sl, ip
 8025a84:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025a88:	f108 0b20 	add.w	fp, r8, #32
 8025a8c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8025a90:	44bc      	add	ip, r7
 8025a92:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025a96:	0a3f      	lsrs	r7, r7, #8
 8025a98:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025a9c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025aa0:	ea4c 0707 	orr.w	r7, ip, r7
 8025aa4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025aa8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8025aac:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8025ab0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8025ab4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025ab8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025abc:	ea4c 0909 	orr.w	r9, ip, r9
 8025ac0:	ea4a 0707 	orr.w	r7, sl, r7
 8025ac4:	2d00      	cmp	r5, #0
 8025ac6:	f000 808b 	beq.w	8025be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8025aca:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8025ace:	3901      	subs	r1, #1
 8025ad0:	0049      	lsls	r1, r1, #1
 8025ad2:	3102      	adds	r1, #2
 8025ad4:	eb00 0c01 	add.w	ip, r0, r1
 8025ad8:	5a41      	ldrh	r1, [r0, r1]
 8025ada:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8025adc:	28ff      	cmp	r0, #255	@ 0xff
 8025ade:	d019      	beq.n	8025b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8025ae0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8025ae2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8025ae6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025aea:	fb04 fa01 	mul.w	sl, r4, r1
 8025aee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025af2:	fb08 f800 	mul.w	r8, r8, r0
 8025af6:	f10a 0020 	add.w	r0, sl, #32
 8025afa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8025afe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025b02:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025b06:	4441      	add	r1, r8
 8025b08:	0a00      	lsrs	r0, r0, #8
 8025b0a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025b0e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025b12:	4301      	orrs	r1, r0
 8025b14:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8025b16:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025b1a:	2cff      	cmp	r4, #255	@ 0xff
 8025b1c:	d01a      	beq.n	8025b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8025b1e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8025b22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025b26:	fb04 fa00 	mul.w	sl, r4, r0
 8025b2a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025b2e:	fb08 f80c 	mul.w	r8, r8, ip
 8025b32:	f10a 0c20 	add.w	ip, sl, #32
 8025b36:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025b3a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025b3e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025b42:	4440      	add	r0, r8
 8025b44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b48:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025b4c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8025b50:	ea40 000c 	orr.w	r0, r0, ip
 8025b54:	fb15 fc02 	smulbb	ip, r5, r2
 8025b58:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025b5c:	f1c5 0810 	rsb	r8, r5, #16
 8025b60:	eba8 0802 	sub.w	r8, r8, r2
 8025b64:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025b68:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025b6c:	437a      	muls	r2, r7
 8025b6e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025b72:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025b76:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025b7a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025b7e:	fb09 2208 	mla	r2, r9, r8, r2
 8025b82:	ea4a 0101 	orr.w	r1, sl, r1
 8025b86:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8025b8a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8025b8e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025b92:	fb05 2201 	mla	r2, r5, r1, r2
 8025b96:	ea4b 0000 	orr.w	r0, fp, r0
 8025b9a:	fb0c 2200 	mla	r2, ip, r0, r2
 8025b9e:	0d57      	lsrs	r7, r2, #21
 8025ba0:	0952      	lsrs	r2, r2, #5
 8025ba2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8025ba6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025baa:	433a      	orrs	r2, r7
 8025bac:	2bff      	cmp	r3, #255	@ 0xff
 8025bae:	b292      	uxth	r2, r2
 8025bb0:	d127      	bne.n	8025c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8025bb2:	f8ae 2000 	strh.w	r2, [lr]
 8025bb6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8025bb8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8025bba:	4413      	add	r3, r2
 8025bbc:	931d      	str	r3, [sp, #116]	@ 0x74
 8025bbe:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8025bc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025bc2:	441a      	add	r2, r3
 8025bc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025bc6:	921e      	str	r2, [sp, #120]	@ 0x78
 8025bc8:	3b01      	subs	r3, #1
 8025bca:	f10e 0e02 	add.w	lr, lr, #2
 8025bce:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025bd0:	e627      	b.n	8025822 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025bd2:	fb08 f000 	mul.w	r0, r8, r0
 8025bd6:	fb09 0303 	mla	r3, r9, r3, r0
 8025bda:	e71b      	b.n	8025a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8025bdc:	46b9      	mov	r9, r7
 8025bde:	e743      	b.n	8025a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8025be0:	f1c2 0110 	rsb	r1, r2, #16
 8025be4:	437a      	muls	r2, r7
 8025be6:	fb09 2901 	mla	r9, r9, r1, r2
 8025bea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025bee:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025bf2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025bf6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025bfa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025bfe:	4302      	orrs	r2, r0
 8025c00:	e7d4      	b.n	8025bac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8025c02:	f8be 7000 	ldrh.w	r7, [lr]
 8025c06:	4c1c      	ldr	r4, [pc, #112]	@ (8025c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8025c08:	43db      	mvns	r3, r3
 8025c0a:	1238      	asrs	r0, r7, #8
 8025c0c:	fa5f fc83 	uxtb.w	ip, r3
 8025c10:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025c14:	10fd      	asrs	r5, r7, #3
 8025c16:	fb00 f00c 	mul.w	r0, r0, ip
 8025c1a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8025c1e:	fb05 f10c 	mul.w	r1, r5, ip
 8025c22:	1c45      	adds	r5, r0, #1
 8025c24:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8025c28:	1215      	asrs	r5, r2, #8
 8025c2a:	f025 0507 	bic.w	r5, r5, #7
 8025c2e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8025c32:	1c4d      	adds	r5, r1, #1
 8025c34:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025c38:	10d1      	asrs	r1, r2, #3
 8025c3a:	f021 0103 	bic.w	r1, r1, #3
 8025c3e:	00fb      	lsls	r3, r7, #3
 8025c40:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025c44:	b2db      	uxtb	r3, r3
 8025c46:	b2c0      	uxtb	r0, r0
 8025c48:	00c9      	lsls	r1, r1, #3
 8025c4a:	fb03 f30c 	mul.w	r3, r3, ip
 8025c4e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025c52:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8025c56:	4308      	orrs	r0, r1
 8025c58:	1c59      	adds	r1, r3, #1
 8025c5a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025c5e:	00d2      	lsls	r2, r2, #3
 8025c60:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025c64:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8025c68:	4318      	orrs	r0, r3
 8025c6a:	f8ae 0000 	strh.w	r0, [lr]
 8025c6e:	e7a2      	b.n	8025bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8025c70:	b013      	add	sp, #76	@ 0x4c
 8025c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c76:	bf00      	nop
 8025c78:	fffff800 	.word	0xfffff800

08025c7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8025c7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025c80:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8025c84:	fb05 4c03 	mla	ip, r5, r3, r4
 8025c88:	2d00      	cmp	r5, #0
 8025c8a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8025c8e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8025c92:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8025c96:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8025c9a:	8808      	ldrh	r0, [r1, #0]
 8025c9c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8025ca0:	f2c0 80a7 	blt.w	8025df2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8025ca4:	45aa      	cmp	sl, r5
 8025ca6:	f340 80a4 	ble.w	8025df2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8025caa:	2c00      	cmp	r4, #0
 8025cac:	f2c0 809f 	blt.w	8025dee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8025cb0:	42a3      	cmp	r3, r4
 8025cb2:	f340 809c 	ble.w	8025dee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8025cb6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8025cba:	1c62      	adds	r2, r4, #1
 8025cbc:	f100 809c 	bmi.w	8025df8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8025cc0:	4293      	cmp	r3, r2
 8025cc2:	f340 8099 	ble.w	8025df8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8025cc6:	f1b9 0f00 	cmp.w	r9, #0
 8025cca:	f000 8095 	beq.w	8025df8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8025cce:	f8be c002 	ldrh.w	ip, [lr, #2]
 8025cd2:	3501      	adds	r5, #1
 8025cd4:	f100 8094 	bmi.w	8025e00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025cd8:	45aa      	cmp	sl, r5
 8025cda:	f340 8091 	ble.w	8025e00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025cde:	2f00      	cmp	r7, #0
 8025ce0:	f000 808e 	beq.w	8025e00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025ce4:	2c00      	cmp	r4, #0
 8025ce6:	f2c0 8089 	blt.w	8025dfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8025cea:	42a3      	cmp	r3, r4
 8025cec:	f340 8086 	ble.w	8025dfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8025cf0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8025cf4:	3401      	adds	r4, #1
 8025cf6:	f100 8086 	bmi.w	8025e06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025cfa:	42a3      	cmp	r3, r4
 8025cfc:	f340 8083 	ble.w	8025e06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025d00:	f1b9 0f00 	cmp.w	r9, #0
 8025d04:	d07f      	beq.n	8025e06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025d06:	3301      	adds	r3, #1
 8025d08:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8025d0c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8025d10:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025d14:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8025d18:	fb19 fe07 	smulbb	lr, r9, r7
 8025d1c:	ea44 0808 	orr.w	r8, r4, r8
 8025d20:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8025d24:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8025d28:	f1c7 0210 	rsb	r2, r7, #16
 8025d2c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025d30:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025d34:	ea44 0c0c 	orr.w	ip, r4, ip
 8025d38:	eba2 0209 	sub.w	r2, r2, r9
 8025d3c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8025d40:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8025d44:	fb04 f40c 	mul.w	r4, r4, ip
 8025d48:	fb02 4808 	mla	r8, r2, r8, r4
 8025d4c:	041a      	lsls	r2, r3, #16
 8025d4e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025d52:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025d56:	4313      	orrs	r3, r2
 8025d58:	042a      	lsls	r2, r5, #16
 8025d5a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025d5e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8025d62:	fb0e 8303 	mla	r3, lr, r3, r8
 8025d66:	432a      	orrs	r2, r5
 8025d68:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8025d6c:	fb07 3202 	mla	r2, r7, r2, r3
 8025d70:	0d53      	lsrs	r3, r2, #21
 8025d72:	0952      	lsrs	r2, r2, #5
 8025d74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025d78:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025d7c:	431a      	orrs	r2, r3
 8025d7e:	b293      	uxth	r3, r2
 8025d80:	b2b4      	uxth	r4, r6
 8025d82:	1202      	asrs	r2, r0, #8
 8025d84:	43f6      	mvns	r6, r6
 8025d86:	b2f6      	uxtb	r6, r6
 8025d88:	121d      	asrs	r5, r3, #8
 8025d8a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025d8e:	fb12 f206 	smulbb	r2, r2, r6
 8025d92:	10c7      	asrs	r7, r0, #3
 8025d94:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8025d98:	00c0      	lsls	r0, r0, #3
 8025d9a:	fb05 2504 	mla	r5, r5, r4, r2
 8025d9e:	b2c0      	uxtb	r0, r0
 8025da0:	10da      	asrs	r2, r3, #3
 8025da2:	00db      	lsls	r3, r3, #3
 8025da4:	b2db      	uxtb	r3, r3
 8025da6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8025daa:	fb10 f006 	smulbb	r0, r0, r6
 8025dae:	b2ad      	uxth	r5, r5
 8025db0:	fb03 0004 	mla	r0, r3, r4, r0
 8025db4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025db8:	fb17 f706 	smulbb	r7, r7, r6
 8025dbc:	b280      	uxth	r0, r0
 8025dbe:	1c6b      	adds	r3, r5, #1
 8025dc0:	fb02 7204 	mla	r2, r2, r4, r7
 8025dc4:	b292      	uxth	r2, r2
 8025dc6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025dca:	1c43      	adds	r3, r0, #1
 8025dcc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8025dd0:	1c50      	adds	r0, r2, #1
 8025dd2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8025dd6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025dda:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025dde:	0952      	lsrs	r2, r2, #5
 8025de0:	432b      	orrs	r3, r5
 8025de2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025de6:	4313      	orrs	r3, r2
 8025de8:	800b      	strh	r3, [r1, #0]
 8025dea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025dee:	4680      	mov	r8, r0
 8025df0:	e763      	b.n	8025cba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8025df2:	4684      	mov	ip, r0
 8025df4:	4680      	mov	r8, r0
 8025df6:	e76c      	b.n	8025cd2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8025df8:	4684      	mov	ip, r0
 8025dfa:	e76a      	b.n	8025cd2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8025dfc:	4605      	mov	r5, r0
 8025dfe:	e779      	b.n	8025cf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8025e00:	4603      	mov	r3, r0
 8025e02:	4605      	mov	r5, r0
 8025e04:	e782      	b.n	8025d0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8025e06:	4603      	mov	r3, r0
 8025e08:	e780      	b.n	8025d0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08025e0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e0e:	b093      	sub	sp, #76	@ 0x4c
 8025e10:	461d      	mov	r5, r3
 8025e12:	9210      	str	r2, [sp, #64]	@ 0x40
 8025e14:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8025e16:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8025e1a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8025e1c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8025e20:	910a      	str	r1, [sp, #40]	@ 0x28
 8025e22:	6859      	ldr	r1, [r3, #4]
 8025e24:	681b      	ldr	r3, [r3, #0]
 8025e26:	9011      	str	r0, [sp, #68]	@ 0x44
 8025e28:	fb01 2707 	mla	r7, r1, r7, r2
 8025e2c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8025e30:	9307      	str	r3, [sp, #28]
 8025e32:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025e34:	681b      	ldr	r3, [r3, #0]
 8025e36:	9309      	str	r3, [sp, #36]	@ 0x24
 8025e38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025e3a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8025e3e:	43db      	mvns	r3, r3
 8025e40:	b2db      	uxtb	r3, r3
 8025e42:	9308      	str	r3, [sp, #32]
 8025e44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025e46:	2b00      	cmp	r3, #0
 8025e48:	dc03      	bgt.n	8025e52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025e4a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025e4c:	2b00      	cmp	r3, #0
 8025e4e:	f340 8203 	ble.w	8026258 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025e52:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025e54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025e5c:	1e48      	subs	r0, r1, #1
 8025e5e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025e62:	2d00      	cmp	r5, #0
 8025e64:	f340 80da 	ble.w	802601c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025e68:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025e6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025e70:	d406      	bmi.n	8025e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8025e72:	4586      	cmp	lr, r0
 8025e74:	da04      	bge.n	8025e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8025e76:	2b00      	cmp	r3, #0
 8025e78:	db02      	blt.n	8025e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8025e7a:	4563      	cmp	r3, ip
 8025e7c:	f2c0 80cf 	blt.w	802601e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8025e80:	f11e 0e01 	adds.w	lr, lr, #1
 8025e84:	f100 80c1 	bmi.w	802600a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8025e88:	4571      	cmp	r1, lr
 8025e8a:	f2c0 80be 	blt.w	802600a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8025e8e:	3301      	adds	r3, #1
 8025e90:	f100 80bb 	bmi.w	802600a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8025e94:	429a      	cmp	r2, r3
 8025e96:	f2c0 80b8 	blt.w	802600a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8025e9a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8025e9e:	46a9      	mov	r9, r5
 8025ea0:	f1b9 0f00 	cmp.w	r9, #0
 8025ea4:	f340 80d8 	ble.w	8026058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8025ea8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025eaa:	1421      	asrs	r1, r4, #16
 8025eac:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025eb0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025eb4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025eb8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025ebc:	f100 8111 	bmi.w	80260e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025ec0:	f10e 3aff 	add.w	sl, lr, #4294967295
 8025ec4:	4551      	cmp	r1, sl
 8025ec6:	f280 810c 	bge.w	80260e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025eca:	2800      	cmp	r0, #0
 8025ecc:	f2c0 8109 	blt.w	80260e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025ed0:	f103 3aff 	add.w	sl, r3, #4294967295
 8025ed4:	4550      	cmp	r0, sl
 8025ed6:	f280 8104 	bge.w	80260e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025eda:	fa0f f38e 	sxth.w	r3, lr
 8025ede:	fb00 1103 	mla	r1, r0, r3, r1
 8025ee2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8025ee4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8025ee8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8025eec:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8025ef0:	f1bc 0f00 	cmp.w	ip, #0
 8025ef4:	d007      	beq.n	8025f06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8025ef6:	005b      	lsls	r3, r3, #1
 8025ef8:	eb0a 0003 	add.w	r0, sl, r3
 8025efc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8025f00:	930c      	str	r3, [sp, #48]	@ 0x30
 8025f02:	8843      	ldrh	r3, [r0, #2]
 8025f04:	930d      	str	r3, [sp, #52]	@ 0x34
 8025f06:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8025f0a:	fb12 f30c 	smulbb	r3, r2, ip
 8025f0e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8025f12:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025f16:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025f1a:	10db      	asrs	r3, r3, #3
 8025f1c:	ea40 000e 	orr.w	r0, r0, lr
 8025f20:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025f24:	f1cc 0e10 	rsb	lr, ip, #16
 8025f28:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025f2c:	ebae 0e02 	sub.w	lr, lr, r2
 8025f30:	ea4a 0101 	orr.w	r1, sl, r1
 8025f34:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025f38:	4351      	muls	r1, r2
 8025f3a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8025f3c:	9f08      	ldr	r7, [sp, #32]
 8025f3e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8025f42:	fb0e 1e00 	mla	lr, lr, r0, r1
 8025f46:	0410      	lsls	r0, r2, #16
 8025f48:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025f4c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025f50:	4310      	orrs	r0, r2
 8025f52:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8025f54:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025f56:	0412      	lsls	r2, r2, #16
 8025f58:	fb03 e000 	mla	r0, r3, r0, lr
 8025f5c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025f60:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8025f64:	ea42 020e 	orr.w	r2, r2, lr
 8025f68:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025f6c:	fb03 0302 	mla	r3, r3, r2, r0
 8025f70:	0d5a      	lsrs	r2, r3, #21
 8025f72:	095b      	lsrs	r3, r3, #5
 8025f74:	f8b8 0000 	ldrh.w	r0, [r8]
 8025f78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025f7c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025f80:	4313      	orrs	r3, r2
 8025f82:	b29b      	uxth	r3, r3
 8025f84:	1201      	asrs	r1, r0, #8
 8025f86:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8025f8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8025f8e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025f92:	fb11 f107 	smulbb	r1, r1, r7
 8025f96:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8025f9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8025f9e:	00c0      	lsls	r0, r0, #3
 8025fa0:	fb0c 1c02 	mla	ip, ip, r2, r1
 8025fa4:	b2c0      	uxtb	r0, r0
 8025fa6:	10d9      	asrs	r1, r3, #3
 8025fa8:	00db      	lsls	r3, r3, #3
 8025faa:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8025fae:	b2db      	uxtb	r3, r3
 8025fb0:	fb10 f007 	smulbb	r0, r0, r7
 8025fb4:	fa1f fc8c 	uxth.w	ip, ip
 8025fb8:	fb03 0302 	mla	r3, r3, r2, r0
 8025fbc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025fc0:	fb1e fe07 	smulbb	lr, lr, r7
 8025fc4:	fb01 e102 	mla	r1, r1, r2, lr
 8025fc8:	b29a      	uxth	r2, r3
 8025fca:	f10c 0301 	add.w	r3, ip, #1
 8025fce:	b289      	uxth	r1, r1
 8025fd0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025fd4:	1c53      	adds	r3, r2, #1
 8025fd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025fda:	1c4a      	adds	r2, r1, #1
 8025fdc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025fe0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8025fe4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025fe8:	0949      	lsrs	r1, r1, #5
 8025fea:	ea43 030c 	orr.w	r3, r3, ip
 8025fee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025ff2:	430b      	orrs	r3, r1
 8025ff4:	f8a8 3000 	strh.w	r3, [r8]
 8025ff8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025ffa:	441c      	add	r4, r3
 8025ffc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025ffe:	f108 0802 	add.w	r8, r8, #2
 8026002:	441e      	add	r6, r3
 8026004:	f109 39ff 	add.w	r9, r9, #4294967295
 8026008:	e74a      	b.n	8025ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802600a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802600c:	441c      	add	r4, r3
 802600e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026010:	441e      	add	r6, r3
 8026012:	9b07      	ldr	r3, [sp, #28]
 8026014:	3302      	adds	r3, #2
 8026016:	3d01      	subs	r5, #1
 8026018:	9307      	str	r3, [sp, #28]
 802601a:	e722      	b.n	8025e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802601c:	d022      	beq.n	8026064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802601e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8026020:	1e6b      	subs	r3, r5, #1
 8026022:	fb00 4003 	mla	r0, r0, r3, r4
 8026026:	1400      	asrs	r0, r0, #16
 8026028:	f53f af37 	bmi.w	8025e9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802602c:	3901      	subs	r1, #1
 802602e:	4288      	cmp	r0, r1
 8026030:	f6bf af33 	bge.w	8025e9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026034:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8026036:	fb01 6303 	mla	r3, r1, r3, r6
 802603a:	141b      	asrs	r3, r3, #16
 802603c:	f53f af2d 	bmi.w	8025e9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026040:	3a01      	subs	r2, #1
 8026042:	4293      	cmp	r3, r2
 8026044:	f6bf af29 	bge.w	8025e9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026048:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802604c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8026050:	46a8      	mov	r8, r5
 8026052:	f1b8 0f00 	cmp.w	r8, #0
 8026056:	dc5e      	bgt.n	8026116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026058:	9b07      	ldr	r3, [sp, #28]
 802605a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802605e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026062:	9307      	str	r3, [sp, #28]
 8026064:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026066:	2b00      	cmp	r3, #0
 8026068:	f340 80f6 	ble.w	8026258 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802606c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026070:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026074:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026078:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802607a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802607e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026082:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026086:	eef0 6a62 	vmov.f32	s13, s5
 802608a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802608e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026092:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026096:	ee16 4a90 	vmov	r4, s13
 802609a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802609e:	eef0 6a43 	vmov.f32	s13, s6
 80260a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80260a6:	ee12 2a90 	vmov	r2, s5
 80260aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80260ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80260b2:	ee13 2a10 	vmov	r2, s6
 80260b6:	931f      	str	r3, [sp, #124]	@ 0x7c
 80260b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80260ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80260be:	9320      	str	r3, [sp, #128]	@ 0x80
 80260c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80260c2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80260c4:	3b01      	subs	r3, #1
 80260c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80260ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80260cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80260ce:	ee16 6a90 	vmov	r6, s13
 80260d2:	bf14      	ite	ne
 80260d4:	461d      	movne	r5, r3
 80260d6:	4615      	moveq	r5, r2
 80260d8:	eeb0 3a67 	vmov.f32	s6, s15
 80260dc:	eef0 2a47 	vmov.f32	s5, s14
 80260e0:	e6b0      	b.n	8025e44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80260e2:	f111 0a01 	adds.w	sl, r1, #1
 80260e6:	d487      	bmi.n	8025ff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80260e8:	45d6      	cmp	lr, sl
 80260ea:	db85      	blt.n	8025ff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80260ec:	f110 0a01 	adds.w	sl, r0, #1
 80260f0:	d482      	bmi.n	8025ff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80260f2:	4553      	cmp	r3, sl
 80260f4:	db80      	blt.n	8025ff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80260f6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80260f8:	9101      	str	r1, [sp, #4]
 80260fa:	b21b      	sxth	r3, r3
 80260fc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026100:	9300      	str	r3, [sp, #0]
 8026102:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026106:	fa0f f38e 	sxth.w	r3, lr
 802610a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802610c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802610e:	4641      	mov	r1, r8
 8026110:	f7ff fdb4 	bl	8025c7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026114:	e770      	b.n	8025ff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026116:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026118:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802611a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802611e:	1430      	asrs	r0, r6, #16
 8026120:	1423      	asrs	r3, r4, #16
 8026122:	fb01 3000 	mla	r0, r1, r0, r3
 8026126:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026128:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802612c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026130:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026134:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026138:	8858      	ldrh	r0, [r3, #2]
 802613a:	f1be 0f00 	cmp.w	lr, #0
 802613e:	d00b      	beq.n	8026158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026140:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8026144:	3901      	subs	r1, #1
 8026146:	0049      	lsls	r1, r1, #1
 8026148:	3102      	adds	r1, #2
 802614a:	eb03 0b01 	add.w	fp, r3, r1
 802614e:	5a5b      	ldrh	r3, [r3, r1]
 8026150:	930e      	str	r3, [sp, #56]	@ 0x38
 8026152:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026156:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026158:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802615c:	fb12 f30e 	smulbb	r3, r2, lr
 8026160:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8026164:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026168:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 802616c:	10db      	asrs	r3, r3, #3
 802616e:	ea41 010c 	orr.w	r1, r1, ip
 8026172:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8026176:	f1ce 0c10 	rsb	ip, lr, #16
 802617a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802617e:	ebac 0c02 	sub.w	ip, ip, r2
 8026182:	ea4b 0000 	orr.w	r0, fp, r0
 8026186:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802618a:	4350      	muls	r0, r2
 802618c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802618e:	9f08      	ldr	r7, [sp, #32]
 8026190:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026194:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026198:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802619c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 80261a0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80261a2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80261a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80261a8:	0412      	lsls	r2, r2, #16
 80261aa:	ea4b 0101 	orr.w	r1, fp, r1
 80261ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80261b2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80261b6:	fb03 c101 	mla	r1, r3, r1, ip
 80261ba:	4302      	orrs	r2, r0
 80261bc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80261c0:	fb03 1202 	mla	r2, r3, r2, r1
 80261c4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80261c8:	0952      	lsrs	r2, r2, #5
 80261ca:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 80261ce:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80261d2:	f8b9 2000 	ldrh.w	r2, [r9]
 80261d6:	ea4b 0303 	orr.w	r3, fp, r3
 80261da:	b29b      	uxth	r3, r3
 80261dc:	1211      	asrs	r1, r2, #8
 80261de:	1218      	asrs	r0, r3, #8
 80261e0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80261e4:	fb11 f107 	smulbb	r1, r1, r7
 80261e8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80261ec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80261f0:	00d2      	lsls	r2, r2, #3
 80261f2:	fb00 100a 	mla	r0, r0, sl, r1
 80261f6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80261fa:	10d9      	asrs	r1, r3, #3
 80261fc:	b2d2      	uxtb	r2, r2
 80261fe:	00db      	lsls	r3, r3, #3
 8026200:	fb1c fc07 	smulbb	ip, ip, r7
 8026204:	fb12 f207 	smulbb	r2, r2, r7
 8026208:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802620c:	b2db      	uxtb	r3, r3
 802620e:	b280      	uxth	r0, r0
 8026210:	fb01 c10a 	mla	r1, r1, sl, ip
 8026214:	fb03 230a 	mla	r3, r3, sl, r2
 8026218:	b29b      	uxth	r3, r3
 802621a:	b289      	uxth	r1, r1
 802621c:	1c42      	adds	r2, r0, #1
 802621e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026222:	f101 0c01 	add.w	ip, r1, #1
 8026226:	1c5a      	adds	r2, r3, #1
 8026228:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802622c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026230:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026232:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8026236:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802623a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802623e:	4310      	orrs	r0, r2
 8026240:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8026244:	441c      	add	r4, r3
 8026246:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026248:	ea40 000c 	orr.w	r0, r0, ip
 802624c:	f829 0b02 	strh.w	r0, [r9], #2
 8026250:	441e      	add	r6, r3
 8026252:	f108 38ff 	add.w	r8, r8, #4294967295
 8026256:	e6fc      	b.n	8026052 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026258:	b013      	add	sp, #76	@ 0x4c
 802625a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802625e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802625e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026262:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026266:	fb0e 4703 	mla	r7, lr, r3, r4
 802626a:	f1be 0f00 	cmp.w	lr, #0
 802626e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026272:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8026276:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 802627a:	8808      	ldrh	r0, [r1, #0]
 802627c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026280:	db60      	blt.n	8026344 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026282:	45f1      	cmp	r9, lr
 8026284:	dd5e      	ble.n	8026344 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026286:	2c00      	cmp	r4, #0
 8026288:	db5a      	blt.n	8026340 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802628a:	42a3      	cmp	r3, r4
 802628c:	dd58      	ble.n	8026340 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802628e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026292:	1c62      	adds	r2, r4, #1
 8026294:	d459      	bmi.n	802634a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026296:	4293      	cmp	r3, r2
 8026298:	dd57      	ble.n	802634a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802629a:	2d00      	cmp	r5, #0
 802629c:	d055      	beq.n	802634a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802629e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80262a2:	f11e 0e01 	adds.w	lr, lr, #1
 80262a6:	d454      	bmi.n	8026352 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80262a8:	45f1      	cmp	r9, lr
 80262aa:	dd52      	ble.n	8026352 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80262ac:	2e00      	cmp	r6, #0
 80262ae:	d050      	beq.n	8026352 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80262b0:	2c00      	cmp	r4, #0
 80262b2:	db4c      	blt.n	802634e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80262b4:	42a3      	cmp	r3, r4
 80262b6:	dd4a      	ble.n	802634e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80262b8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80262bc:	3401      	adds	r4, #1
 80262be:	d405      	bmi.n	80262cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80262c0:	42a3      	cmp	r3, r4
 80262c2:	dd03      	ble.n	80262cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80262c4:	b115      	cbz	r5, 80262cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80262c6:	3301      	adds	r3, #1
 80262c8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80262cc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80262d0:	fb15 f406 	smulbb	r4, r5, r6
 80262d4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80262d8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80262dc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80262e0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80262e4:	ea43 0c0c 	orr.w	ip, r3, ip
 80262e8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80262ec:	f1c6 0310 	rsb	r3, r6, #16
 80262f0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80262f4:	1b5b      	subs	r3, r3, r5
 80262f6:	ea4e 0707 	orr.w	r7, lr, r7
 80262fa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80262fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026302:	437d      	muls	r5, r7
 8026304:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026308:	0403      	lsls	r3, r0, #16
 802630a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802630e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8026312:	4318      	orrs	r0, r3
 8026314:	0413      	lsls	r3, r2, #16
 8026316:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802631a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802631e:	4313      	orrs	r3, r2
 8026320:	fb04 c000 	mla	r0, r4, r0, ip
 8026324:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026328:	fb06 0003 	mla	r0, r6, r3, r0
 802632c:	0d43      	lsrs	r3, r0, #21
 802632e:	0940      	lsrs	r0, r0, #5
 8026330:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026334:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8026338:	4318      	orrs	r0, r3
 802633a:	8008      	strh	r0, [r1, #0]
 802633c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026340:	4684      	mov	ip, r0
 8026342:	e7a6      	b.n	8026292 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026344:	4607      	mov	r7, r0
 8026346:	4684      	mov	ip, r0
 8026348:	e7ab      	b.n	80262a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802634a:	4607      	mov	r7, r0
 802634c:	e7a9      	b.n	80262a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802634e:	4602      	mov	r2, r0
 8026350:	e7b4      	b.n	80262bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026352:	4602      	mov	r2, r0
 8026354:	e7ba      	b.n	80262cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026356 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026356:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802635a:	b08f      	sub	sp, #60	@ 0x3c
 802635c:	461d      	mov	r5, r3
 802635e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8026360:	920c      	str	r2, [sp, #48]	@ 0x30
 8026362:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8026366:	9107      	str	r1, [sp, #28]
 8026368:	6859      	ldr	r1, [r3, #4]
 802636a:	681b      	ldr	r3, [r3, #0]
 802636c:	900d      	str	r0, [sp, #52]	@ 0x34
 802636e:	fb01 2707 	mla	r7, r1, r7, r2
 8026372:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026376:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026378:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 802637c:	f8d3 8000 	ldr.w	r8, [r3]
 8026380:	9b07      	ldr	r3, [sp, #28]
 8026382:	2b00      	cmp	r3, #0
 8026384:	dc03      	bgt.n	802638e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026386:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026388:	2b00      	cmp	r3, #0
 802638a:	f340 8181 	ble.w	8026690 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802638e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026390:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026394:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026398:	1e48      	subs	r0, r1, #1
 802639a:	f102 3cff 	add.w	ip, r2, #4294967295
 802639e:	2d00      	cmp	r5, #0
 80263a0:	f340 809b 	ble.w	80264da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80263a4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80263a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80263ac:	d406      	bmi.n	80263bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80263ae:	4586      	cmp	lr, r0
 80263b0:	da04      	bge.n	80263bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80263b2:	2b00      	cmp	r3, #0
 80263b4:	db02      	blt.n	80263bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80263b6:	4563      	cmp	r3, ip
 80263b8:	f2c0 8090 	blt.w	80264dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80263bc:	f11e 0e01 	adds.w	lr, lr, #1
 80263c0:	f100 8084 	bmi.w	80264cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80263c4:	4571      	cmp	r1, lr
 80263c6:	f2c0 8081 	blt.w	80264cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80263ca:	3301      	adds	r3, #1
 80263cc:	d47e      	bmi.n	80264cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80263ce:	429a      	cmp	r2, r3
 80263d0:	db7c      	blt.n	80264cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80263d2:	46aa      	mov	sl, r5
 80263d4:	46b9      	mov	r9, r7
 80263d6:	f1ba 0f00 	cmp.w	sl, #0
 80263da:	f340 8099 	ble.w	8026510 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80263de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80263e0:	1421      	asrs	r1, r4, #16
 80263e2:	ea4f 4026 	mov.w	r0, r6, asr #16
 80263e6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80263ea:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80263ee:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80263f2:	f100 80d0 	bmi.w	8026596 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80263f6:	f10e 3bff 	add.w	fp, lr, #4294967295
 80263fa:	4559      	cmp	r1, fp
 80263fc:	f280 80cb 	bge.w	8026596 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026400:	2800      	cmp	r0, #0
 8026402:	f2c0 80c8 	blt.w	8026596 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026406:	f103 3bff 	add.w	fp, r3, #4294967295
 802640a:	4558      	cmp	r0, fp
 802640c:	f280 80c3 	bge.w	8026596 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026410:	fa0f fe8e 	sxth.w	lr, lr
 8026414:	fb00 110e 	mla	r1, r0, lr, r1
 8026418:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802641c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026420:	8841      	ldrh	r1, [r0, #2]
 8026422:	f1bc 0f00 	cmp.w	ip, #0
 8026426:	d00b      	beq.n	8026440 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026428:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 802642c:	3b01      	subs	r3, #1
 802642e:	005b      	lsls	r3, r3, #1
 8026430:	3302      	adds	r3, #2
 8026432:	eb00 0e03 	add.w	lr, r0, r3
 8026436:	5ac3      	ldrh	r3, [r0, r3]
 8026438:	9308      	str	r3, [sp, #32]
 802643a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802643e:	9309      	str	r3, [sp, #36]	@ 0x24
 8026440:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026444:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8026448:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 802644c:	ea40 000b 	orr.w	r0, r0, fp
 8026450:	fb12 f30c 	smulbb	r3, r2, ip
 8026454:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026458:	10db      	asrs	r3, r3, #3
 802645a:	f1cc 0e10 	rsb	lr, ip, #16
 802645e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8026462:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8026466:	ebae 0e02 	sub.w	lr, lr, r2
 802646a:	ea4b 0101 	orr.w	r1, fp, r1
 802646e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026472:	4351      	muls	r1, r2
 8026474:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026476:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802647a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802647e:	0410      	lsls	r0, r2, #16
 8026480:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8026484:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8026488:	4310      	orrs	r0, r2
 802648a:	9a08      	ldr	r2, [sp, #32]
 802648c:	9908      	ldr	r1, [sp, #32]
 802648e:	0412      	lsls	r2, r2, #16
 8026490:	fb03 e000 	mla	r0, r3, r0, lr
 8026494:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8026498:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 802649c:	ea42 020e 	orr.w	r2, r2, lr
 80264a0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80264a4:	fb03 0302 	mla	r3, r3, r2, r0
 80264a8:	0d5a      	lsrs	r2, r3, #21
 80264aa:	095b      	lsrs	r3, r3, #5
 80264ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80264b0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80264b4:	4313      	orrs	r3, r2
 80264b6:	f8a9 3000 	strh.w	r3, [r9]
 80264ba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80264bc:	441c      	add	r4, r3
 80264be:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80264c0:	f109 0902 	add.w	r9, r9, #2
 80264c4:	441e      	add	r6, r3
 80264c6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80264ca:	e784      	b.n	80263d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80264cc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80264ce:	441c      	add	r4, r3
 80264d0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80264d2:	3d01      	subs	r5, #1
 80264d4:	441e      	add	r6, r3
 80264d6:	3702      	adds	r7, #2
 80264d8:	e761      	b.n	802639e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80264da:	d01d      	beq.n	8026518 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80264dc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80264de:	1e6b      	subs	r3, r5, #1
 80264e0:	fb00 4003 	mla	r0, r0, r3, r4
 80264e4:	1400      	asrs	r0, r0, #16
 80264e6:	f53f af74 	bmi.w	80263d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80264ea:	3901      	subs	r1, #1
 80264ec:	4288      	cmp	r0, r1
 80264ee:	f6bf af70 	bge.w	80263d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80264f2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80264f4:	fb01 6303 	mla	r3, r1, r3, r6
 80264f8:	141b      	asrs	r3, r3, #16
 80264fa:	f53f af6a 	bmi.w	80263d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80264fe:	3a01      	subs	r2, #1
 8026500:	4293      	cmp	r3, r2
 8026502:	f6bf af66 	bge.w	80263d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026506:	46a9      	mov	r9, r5
 8026508:	46ba      	mov	sl, r7
 802650a:	f1b9 0f00 	cmp.w	r9, #0
 802650e:	dc5a      	bgt.n	80265c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026510:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026514:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026518:	9b07      	ldr	r3, [sp, #28]
 802651a:	2b00      	cmp	r3, #0
 802651c:	f340 80b8 	ble.w	8026690 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026520:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026524:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026528:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802652c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802652e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026532:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026536:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802653a:	eef0 6a62 	vmov.f32	s13, s5
 802653e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026542:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026546:	ee77 2a62 	vsub.f32	s5, s14, s5
 802654a:	ee16 4a90 	vmov	r4, s13
 802654e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026552:	eef0 6a43 	vmov.f32	s13, s6
 8026556:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802655a:	ee12 2a90 	vmov	r2, s5
 802655e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026562:	fb92 f3f3 	sdiv	r3, r2, r3
 8026566:	ee13 2a10 	vmov	r2, s6
 802656a:	931b      	str	r3, [sp, #108]	@ 0x6c
 802656c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802656e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026572:	931c      	str	r3, [sp, #112]	@ 0x70
 8026574:	9b07      	ldr	r3, [sp, #28]
 8026576:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8026578:	3b01      	subs	r3, #1
 802657a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802657e:	9307      	str	r3, [sp, #28]
 8026580:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026582:	ee16 6a90 	vmov	r6, s13
 8026586:	bf14      	ite	ne
 8026588:	461d      	movne	r5, r3
 802658a:	4615      	moveq	r5, r2
 802658c:	eeb0 3a67 	vmov.f32	s6, s15
 8026590:	eef0 2a47 	vmov.f32	s5, s14
 8026594:	e6f4      	b.n	8026380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026596:	f111 0b01 	adds.w	fp, r1, #1
 802659a:	d48e      	bmi.n	80264ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802659c:	45de      	cmp	lr, fp
 802659e:	db8c      	blt.n	80264ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80265a0:	f110 0b01 	adds.w	fp, r0, #1
 80265a4:	d489      	bmi.n	80264ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80265a6:	455b      	cmp	r3, fp
 80265a8:	db87      	blt.n	80264ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80265aa:	b21b      	sxth	r3, r3
 80265ac:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80265b0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80265b4:	9300      	str	r3, [sp, #0]
 80265b6:	4642      	mov	r2, r8
 80265b8:	fa0f f38e 	sxth.w	r3, lr
 80265bc:	4649      	mov	r1, r9
 80265be:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80265c0:	f7ff fe4d 	bl	802625e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80265c4:	e779      	b.n	80264ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80265c6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80265c8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80265cc:	1420      	asrs	r0, r4, #16
 80265ce:	1431      	asrs	r1, r6, #16
 80265d0:	fb03 0101 	mla	r1, r3, r1, r0
 80265d4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80265d8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80265dc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80265e0:	8841      	ldrh	r1, [r0, #2]
 80265e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80265e6:	f1be 0f00 	cmp.w	lr, #0
 80265ea:	d00b      	beq.n	8026604 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80265ec:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80265f0:	3b01      	subs	r3, #1
 80265f2:	005b      	lsls	r3, r3, #1
 80265f4:	3302      	adds	r3, #2
 80265f6:	eb00 0b03 	add.w	fp, r0, r3
 80265fa:	5ac3      	ldrh	r3, [r0, r3]
 80265fc:	930a      	str	r3, [sp, #40]	@ 0x28
 80265fe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026602:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026604:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026608:	fb12 f30e 	smulbb	r3, r2, lr
 802660c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8026610:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026614:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8026618:	10db      	asrs	r3, r3, #3
 802661a:	ea40 000c 	orr.w	r0, r0, ip
 802661e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8026622:	f1ce 0c10 	rsb	ip, lr, #16
 8026626:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802662a:	ebac 0c02 	sub.w	ip, ip, r2
 802662e:	ea4b 0101 	orr.w	r1, fp, r1
 8026632:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026636:	4351      	muls	r1, r2
 8026638:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802663a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802663e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026642:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026646:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802664a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802664c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802664e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8026652:	0412      	lsls	r2, r2, #16
 8026654:	ea4b 0000 	orr.w	r0, fp, r0
 8026658:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802665c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8026660:	fb03 c000 	mla	r0, r3, r0, ip
 8026664:	ea42 0b0b 	orr.w	fp, r2, fp
 8026668:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802666c:	fb03 000b 	mla	r0, r3, fp, r0
 8026670:	0d43      	lsrs	r3, r0, #21
 8026672:	0940      	lsrs	r0, r0, #5
 8026674:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026678:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802667c:	4318      	orrs	r0, r3
 802667e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8026680:	f82a 0b02 	strh.w	r0, [sl], #2
 8026684:	441c      	add	r4, r3
 8026686:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026688:	f109 39ff 	add.w	r9, r9, #4294967295
 802668c:	441e      	add	r6, r3
 802668e:	e73c      	b.n	802650a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026690:	b00f      	add	sp, #60	@ 0x3c
 8026692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026696 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802669a:	b085      	sub	sp, #20
 802669c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80266a0:	9102      	str	r1, [sp, #8]
 80266a2:	2c00      	cmp	r4, #0
 80266a4:	fb04 7103 	mla	r1, r4, r3, r7
 80266a8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80266ac:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80266b0:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80266b4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80266b8:	f2c0 811b 	blt.w	80268f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80266bc:	45a6      	cmp	lr, r4
 80266be:	f340 8118 	ble.w	80268f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80266c2:	2f00      	cmp	r7, #0
 80266c4:	f2c0 8113 	blt.w	80268ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80266c8:	42bb      	cmp	r3, r7
 80266ca:	f340 8110 	ble.w	80268ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80266ce:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80266d2:	1c7a      	adds	r2, r7, #1
 80266d4:	f100 8110 	bmi.w	80268f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80266d8:	4293      	cmp	r3, r2
 80266da:	f340 810d 	ble.w	80268f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80266de:	2e00      	cmp	r6, #0
 80266e0:	f000 810c 	beq.w	80268fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80266e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80266e8:	3401      	adds	r4, #1
 80266ea:	f100 810b 	bmi.w	8026904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80266ee:	45a6      	cmp	lr, r4
 80266f0:	f340 8108 	ble.w	8026904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80266f4:	2800      	cmp	r0, #0
 80266f6:	f000 8108 	beq.w	802690a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80266fa:	2f00      	cmp	r7, #0
 80266fc:	f2c0 8100 	blt.w	8026900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026700:	42bb      	cmp	r3, r7
 8026702:	f340 80fd 	ble.w	8026900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026706:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802670a:	3701      	adds	r7, #1
 802670c:	f100 8100 	bmi.w	8026910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026710:	42bb      	cmp	r3, r7
 8026712:	f340 80fd 	ble.w	8026910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026716:	2e00      	cmp	r6, #0
 8026718:	f000 80fc 	beq.w	8026914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802671c:	3301      	adds	r3, #1
 802671e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8026722:	b2b6      	uxth	r6, r6
 8026724:	b280      	uxth	r0, r0
 8026726:	fb00 fe06 	mul.w	lr, r0, r6
 802672a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802672e:	0136      	lsls	r6, r6, #4
 8026730:	eba6 070e 	sub.w	r7, r6, lr
 8026734:	b280      	uxth	r0, r0
 8026736:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802673a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802673e:	b2bf      	uxth	r7, r7
 8026740:	1a1b      	subs	r3, r3, r0
 8026742:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8026746:	b29b      	uxth	r3, r3
 8026748:	fb0a f607 	mul.w	r6, sl, r7
 802674c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026750:	fb0b 6603 	mla	r6, fp, r3, r6
 8026754:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8026758:	fb00 6609 	mla	r6, r0, r9, r6
 802675c:	fb0e 6608 	mla	r6, lr, r8, r6
 8026760:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026764:	9600      	str	r6, [sp, #0]
 8026766:	2e00      	cmp	r6, #0
 8026768:	f000 80be 	beq.w	80268e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802676c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026770:	fb0b fc0c 	mul.w	ip, fp, ip
 8026774:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8026778:	fb0b f505 	mul.w	r5, fp, r5
 802677c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026780:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8026784:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026788:	44dc      	add	ip, fp
 802678a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802678e:	9501      	str	r5, [sp, #4]
 8026790:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8026794:	9503      	str	r5, [sp, #12]
 8026796:	9d01      	ldr	r5, [sp, #4]
 8026798:	9e02      	ldr	r6, [sp, #8]
 802679a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802679e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80267a2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80267a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80267aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80267ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80267b2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80267b6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80267ba:	4465      	add	r5, ip
 80267bc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80267c0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80267c4:	fb09 fc0c 	mul.w	ip, r9, ip
 80267c8:	fb09 f904 	mul.w	r9, r9, r4
 80267cc:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80267d0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80267d4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80267d8:	fb08 f404 	mul.w	r4, r8, r4
 80267dc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80267e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80267e4:	fb08 f802 	mul.w	r8, r8, r2
 80267e8:	fb0a fa01 	mul.w	sl, sl, r1
 80267ec:	0a22      	lsrs	r2, r4, #8
 80267ee:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80267f2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80267f6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80267fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80267fe:	4414      	add	r4, r2
 8026800:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026804:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8026808:	0a2d      	lsrs	r5, r5, #8
 802680a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802680e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8026812:	9a03      	ldr	r2, [sp, #12]
 8026814:	8836      	ldrh	r6, [r6, #0]
 8026816:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802681a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802681e:	437d      	muls	r5, r7
 8026820:	4461      	add	r1, ip
 8026822:	0a24      	lsrs	r4, r4, #8
 8026824:	fb02 5503 	mla	r5, r2, r3, r5
 8026828:	0a09      	lsrs	r1, r1, #8
 802682a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802682e:	fb04 540e 	mla	r4, r4, lr, r5
 8026832:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026836:	fb01 4100 	mla	r1, r1, r0, r4
 802683a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802683e:	0a09      	lsrs	r1, r1, #8
 8026840:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026844:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8026848:	fb07 f70a 	mul.w	r7, r7, sl
 802684c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026850:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8026854:	fb03 7101 	mla	r1, r3, r1, r7
 8026858:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802685c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8026860:	fb0e 1e08 	mla	lr, lr, r8, r1
 8026864:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8026868:	fb00 e101 	mla	r1, r0, r1, lr
 802686c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8026870:	9a00      	ldr	r2, [sp, #0]
 8026872:	b287      	uxth	r7, r0
 8026874:	437a      	muls	r2, r7
 8026876:	0a09      	lsrs	r1, r1, #8
 8026878:	1c53      	adds	r3, r2, #1
 802687a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802687e:	4321      	orrs	r1, r4
 8026880:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026884:	1235      	asrs	r5, r6, #8
 8026886:	0c0a      	lsrs	r2, r1, #16
 8026888:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802688c:	b2db      	uxtb	r3, r3
 802688e:	fb12 f207 	smulbb	r2, r2, r7
 8026892:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8026896:	fb05 2503 	mla	r5, r5, r3, r2
 802689a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802689e:	10f2      	asrs	r2, r6, #3
 80268a0:	b2c8      	uxtb	r0, r1
 80268a2:	00f6      	lsls	r6, r6, #3
 80268a4:	fb14 f407 	smulbb	r4, r4, r7
 80268a8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80268ac:	b2f6      	uxtb	r6, r6
 80268ae:	fb10 f007 	smulbb	r0, r0, r7
 80268b2:	fb02 4203 	mla	r2, r2, r3, r4
 80268b6:	b2ad      	uxth	r5, r5
 80268b8:	fb06 0303 	mla	r3, r6, r3, r0
 80268bc:	b299      	uxth	r1, r3
 80268be:	b294      	uxth	r4, r2
 80268c0:	1c6b      	adds	r3, r5, #1
 80268c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80268c6:	1c62      	adds	r2, r4, #1
 80268c8:	1c4b      	adds	r3, r1, #1
 80268ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80268ce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80268d2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80268d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80268da:	0952      	lsrs	r2, r2, #5
 80268dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80268e0:	432b      	orrs	r3, r5
 80268e2:	4313      	orrs	r3, r2
 80268e4:	9a02      	ldr	r2, [sp, #8]
 80268e6:	8013      	strh	r3, [r2, #0]
 80268e8:	b005      	add	sp, #20
 80268ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268ee:	2500      	movs	r5, #0
 80268f0:	e6ef      	b.n	80266d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80268f2:	2100      	movs	r1, #0
 80268f4:	460d      	mov	r5, r1
 80268f6:	e6f7      	b.n	80266e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80268f8:	2100      	movs	r1, #0
 80268fa:	e6f5      	b.n	80266e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80268fc:	4631      	mov	r1, r6
 80268fe:	e6f3      	b.n	80266e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8026900:	2400      	movs	r4, #0
 8026902:	e702      	b.n	802670a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8026904:	2200      	movs	r2, #0
 8026906:	4614      	mov	r4, r2
 8026908:	e70b      	b.n	8026722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802690a:	4602      	mov	r2, r0
 802690c:	4604      	mov	r4, r0
 802690e:	e708      	b.n	8026722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8026910:	2200      	movs	r2, #0
 8026912:	e706      	b.n	8026722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8026914:	4632      	mov	r2, r6
 8026916:	e704      	b.n	8026722 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08026918 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802691c:	b09d      	sub	sp, #116	@ 0x74
 802691e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8026922:	9219      	str	r2, [sp, #100]	@ 0x64
 8026924:	9307      	str	r3, [sp, #28]
 8026926:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8026928:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802692c:	931a      	str	r3, [sp, #104]	@ 0x68
 802692e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8026930:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8026934:	901b      	str	r0, [sp, #108]	@ 0x6c
 8026936:	6850      	ldr	r0, [r2, #4]
 8026938:	6812      	ldr	r2, [r2, #0]
 802693a:	fb00 1303 	mla	r3, r0, r3, r1
 802693e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026942:	930a      	str	r3, [sp, #40]	@ 0x28
 8026944:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8026946:	681b      	ldr	r3, [r3, #0]
 8026948:	9310      	str	r3, [sp, #64]	@ 0x40
 802694a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802694e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026950:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026952:	2b00      	cmp	r3, #0
 8026954:	dc03      	bgt.n	802695e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8026956:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8026958:	2b00      	cmp	r3, #0
 802695a:	f340 8375 	ble.w	8027048 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802695e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8026960:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026964:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026968:	1e48      	subs	r0, r1, #1
 802696a:	1e57      	subs	r7, r2, #1
 802696c:	9b07      	ldr	r3, [sp, #28]
 802696e:	2b00      	cmp	r3, #0
 8026970:	f340 818e 	ble.w	8026c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8026974:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026978:	ea4f 4326 	mov.w	r3, r6, asr #16
 802697c:	d406      	bmi.n	802698c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802697e:	4584      	cmp	ip, r0
 8026980:	da04      	bge.n	802698c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8026982:	2b00      	cmp	r3, #0
 8026984:	db02      	blt.n	802698c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8026986:	42bb      	cmp	r3, r7
 8026988:	f2c0 8183 	blt.w	8026c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802698c:	f11c 0c01 	adds.w	ip, ip, #1
 8026990:	f100 8173 	bmi.w	8026c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8026994:	4561      	cmp	r1, ip
 8026996:	f2c0 8170 	blt.w	8026c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802699a:	3301      	adds	r3, #1
 802699c:	f100 816d 	bmi.w	8026c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80269a0:	429a      	cmp	r2, r3
 80269a2:	f2c0 816a 	blt.w	8026c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80269a6:	9b07      	ldr	r3, [sp, #28]
 80269a8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80269aa:	9318      	str	r3, [sp, #96]	@ 0x60
 80269ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80269ae:	2b00      	cmp	r3, #0
 80269b0:	f340 818c 	ble.w	8026ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80269b4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 80269b6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80269b8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80269bc:	689b      	ldr	r3, [r3, #8]
 80269be:	1422      	asrs	r2, r4, #16
 80269c0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80269c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80269c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80269cc:	f100 81cd 	bmi.w	8026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80269d0:	f103 38ff 	add.w	r8, r3, #4294967295
 80269d4:	4542      	cmp	r2, r8
 80269d6:	f280 81c8 	bge.w	8026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80269da:	f1bc 0f00 	cmp.w	ip, #0
 80269de:	f2c0 81c4 	blt.w	8026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80269e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80269e6:	45c4      	cmp	ip, r8
 80269e8:	f280 81bf 	bge.w	8026d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80269ec:	b21b      	sxth	r3, r3
 80269ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80269f2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80269f4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80269f8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80269fc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8026a00:	2800      	cmp	r0, #0
 8026a02:	f000 81a9 	beq.w	8026d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8026a06:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8026a0a:	950c      	str	r5, [sp, #48]	@ 0x30
 8026a0c:	0e2d      	lsrs	r5, r5, #24
 8026a0e:	9513      	str	r5, [sp, #76]	@ 0x4c
 8026a10:	b181      	cbz	r1, 8026a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8026a12:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8026a16:	3b01      	subs	r3, #1
 8026a18:	009b      	lsls	r3, r3, #2
 8026a1a:	3304      	adds	r3, #4
 8026a1c:	eb08 0c03 	add.w	ip, r8, r3
 8026a20:	f858 3003 	ldr.w	r3, [r8, r3]
 8026a24:	9308      	str	r3, [sp, #32]
 8026a26:	0e1b      	lsrs	r3, r3, #24
 8026a28:	9311      	str	r3, [sp, #68]	@ 0x44
 8026a2a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8026a2e:	930d      	str	r3, [sp, #52]	@ 0x34
 8026a30:	0e1b      	lsrs	r3, r3, #24
 8026a32:	9314      	str	r3, [sp, #80]	@ 0x50
 8026a34:	b280      	uxth	r0, r0
 8026a36:	b289      	uxth	r1, r1
 8026a38:	fb00 f901 	mul.w	r9, r0, r1
 8026a3c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8026a40:	0100      	lsls	r0, r0, #4
 8026a42:	eba0 0809 	sub.w	r8, r0, r9
 8026a46:	b289      	uxth	r1, r1
 8026a48:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8026a4c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8026a4e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026a50:	fa1f f888 	uxth.w	r8, r8
 8026a54:	1a5b      	subs	r3, r3, r1
 8026a56:	b29b      	uxth	r3, r3
 8026a58:	fb08 f000 	mul.w	r0, r8, r0
 8026a5c:	fb03 000e 	mla	r0, r3, lr, r0
 8026a60:	fb01 0005 	mla	r0, r1, r5, r0
 8026a64:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026a66:	fb09 0005 	mla	r0, r9, r5, r0
 8026a6a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8026a6e:	2800      	cmp	r0, #0
 8026a70:	f000 80fa 	beq.w	8026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026a74:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8026a78:	d01b      	beq.n	8026ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8026a7a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8026a7e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026a82:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026a86:	fb0e fe02 	mul.w	lr, lr, r2
 8026a8a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8026a8e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026a92:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8026a96:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8026a9a:	4452      	add	r2, sl
 8026a9c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026aa0:	0a12      	lsrs	r2, r2, #8
 8026aa2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026aa6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026aaa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8026aae:	ea42 020c 	orr.w	r2, r2, ip
 8026ab2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026ab4:	2dff      	cmp	r5, #255	@ 0xff
 8026ab6:	d021      	beq.n	8026afc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026ab8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026aba:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026abe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026ac0:	fb05 fb0b 	mul.w	fp, r5, fp
 8026ac4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026ac6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026aca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026acc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026ad0:	fb05 fa0a 	mul.w	sl, r5, sl
 8026ad4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026ad8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026adc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026ae0:	44de      	add	lr, fp
 8026ae2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026ae6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026aea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026aee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026af2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026af6:	ea4e 050a 	orr.w	r5, lr, sl
 8026afa:	950c      	str	r5, [sp, #48]	@ 0x30
 8026afc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026afe:	2dff      	cmp	r5, #255	@ 0xff
 8026b00:	d021      	beq.n	8026b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8026b02:	9d08      	ldr	r5, [sp, #32]
 8026b04:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026b08:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026b0a:	fb05 fb0b 	mul.w	fp, r5, fp
 8026b0e:	9d08      	ldr	r5, [sp, #32]
 8026b10:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026b14:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026b16:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026b1a:	fb05 fa0a 	mul.w	sl, r5, sl
 8026b1e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026b22:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026b26:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026b2a:	44de      	add	lr, fp
 8026b2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026b30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026b34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026b38:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026b3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026b40:	ea4e 050a 	orr.w	r5, lr, sl
 8026b44:	9508      	str	r5, [sp, #32]
 8026b46:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026b48:	2dff      	cmp	r5, #255	@ 0xff
 8026b4a:	d021      	beq.n	8026b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8026b4c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026b4e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026b52:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026b54:	fb05 fb0b 	mul.w	fp, r5, fp
 8026b58:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026b5a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026b5e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026b60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026b64:	fb05 fa0a 	mul.w	sl, r5, sl
 8026b68:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026b6c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026b70:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026b74:	44de      	add	lr, fp
 8026b76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026b7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026b7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026b82:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026b86:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026b8a:	ea4e 050a 	orr.w	r5, lr, sl
 8026b8e:	950d      	str	r5, [sp, #52]	@ 0x34
 8026b90:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026b92:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026b96:	9d08      	ldr	r5, [sp, #32]
 8026b98:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8026b9c:	fb08 fc0c 	mul.w	ip, r8, ip
 8026ba0:	fb03 cc0e 	mla	ip, r3, lr, ip
 8026ba4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8026ba8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026baa:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026bae:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8026bb2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026bb4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026bb8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8026bbc:	fb08 f80e 	mul.w	r8, r8, lr
 8026bc0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026bc4:	fb03 8202 	mla	r2, r3, r2, r8
 8026bc8:	9b08      	ldr	r3, [sp, #32]
 8026bca:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026bcc:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8026bd0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026bd2:	fb01 220a 	mla	r2, r1, sl, r2
 8026bd6:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8026bda:	fb09 2901 	mla	r9, r9, r1, r2
 8026bde:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8026be0:	883b      	ldrh	r3, [r7, #0]
 8026be2:	4342      	muls	r2, r0
 8026be4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026be8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026bec:	1c50      	adds	r0, r2, #1
 8026bee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026bf2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8026bf6:	ea4c 0c09 	orr.w	ip, ip, r9
 8026bfa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8026bfe:	1219      	asrs	r1, r3, #8
 8026c00:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8026c04:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8026c08:	b2c0      	uxtb	r0, r0
 8026c0a:	fb12 f205 	smulbb	r2, r2, r5
 8026c0e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8026c12:	fb01 2100 	mla	r1, r1, r0, r2
 8026c16:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8026c1a:	10da      	asrs	r2, r3, #3
 8026c1c:	fa5f fc8c 	uxtb.w	ip, ip
 8026c20:	00db      	lsls	r3, r3, #3
 8026c22:	fb1c fc05 	smulbb	ip, ip, r5
 8026c26:	b2db      	uxtb	r3, r3
 8026c28:	b289      	uxth	r1, r1
 8026c2a:	fb03 c300 	mla	r3, r3, r0, ip
 8026c2e:	fa1f fc83 	uxth.w	ip, r3
 8026c32:	1c4b      	adds	r3, r1, #1
 8026c34:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026c38:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026c3c:	fb1e fe05 	smulbb	lr, lr, r5
 8026c40:	f10c 0301 	add.w	r3, ip, #1
 8026c44:	fb02 e200 	mla	r2, r2, r0, lr
 8026c48:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8026c4c:	b292      	uxth	r2, r2
 8026c4e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8026c52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026c56:	430b      	orrs	r3, r1
 8026c58:	1c51      	adds	r1, r2, #1
 8026c5a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026c5e:	0952      	lsrs	r2, r2, #5
 8026c60:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026c64:	4313      	orrs	r3, r2
 8026c66:	803b      	strh	r3, [r7, #0]
 8026c68:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026c6a:	441c      	add	r4, r3
 8026c6c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8026c6e:	441e      	add	r6, r3
 8026c70:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026c72:	3b01      	subs	r3, #1
 8026c74:	3702      	adds	r7, #2
 8026c76:	9318      	str	r3, [sp, #96]	@ 0x60
 8026c78:	e698      	b.n	80269ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026c7a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026c7c:	441c      	add	r4, r3
 8026c7e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8026c80:	441e      	add	r6, r3
 8026c82:	9b07      	ldr	r3, [sp, #28]
 8026c84:	3b01      	subs	r3, #1
 8026c86:	9307      	str	r3, [sp, #28]
 8026c88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026c8a:	3302      	adds	r3, #2
 8026c8c:	930a      	str	r3, [sp, #40]	@ 0x28
 8026c8e:	e66d      	b.n	802696c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8026c90:	d023      	beq.n	8026cda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8026c92:	9b07      	ldr	r3, [sp, #28]
 8026c94:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8026c96:	3b01      	subs	r3, #1
 8026c98:	fb00 4003 	mla	r0, r0, r3, r4
 8026c9c:	1400      	asrs	r0, r0, #16
 8026c9e:	f53f ae82 	bmi.w	80269a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026ca2:	3901      	subs	r1, #1
 8026ca4:	4288      	cmp	r0, r1
 8026ca6:	f6bf ae7e 	bge.w	80269a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026caa:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8026cac:	fb01 6303 	mla	r3, r1, r3, r6
 8026cb0:	141b      	asrs	r3, r3, #16
 8026cb2:	f53f ae78 	bmi.w	80269a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026cb6:	3a01      	subs	r2, #1
 8026cb8:	4293      	cmp	r3, r2
 8026cba:	f6bf ae74 	bge.w	80269a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026cbe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026cc2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8026cc6:	f1bb 0f00 	cmp.w	fp, #0
 8026cca:	dc6c      	bgt.n	8026da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8026ccc:	9b07      	ldr	r3, [sp, #28]
 8026cce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026cd2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026cd4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026cd8:	930a      	str	r3, [sp, #40]	@ 0x28
 8026cda:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026cdc:	2b00      	cmp	r3, #0
 8026cde:	f340 81b3 	ble.w	8027048 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8026ce2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026ce6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026cea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026cee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026cf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026cf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026cf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026cfc:	eef0 6a62 	vmov.f32	s13, s5
 8026d00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026d04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026d0c:	ee16 4a90 	vmov	r4, s13
 8026d10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026d14:	eef0 6a43 	vmov.f32	s13, s6
 8026d18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026d1c:	ee12 2a90 	vmov	r2, s5
 8026d20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d28:	ee13 2a10 	vmov	r2, s6
 8026d2c:	9329      	str	r3, [sp, #164]	@ 0xa4
 8026d2e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026d30:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d34:	932a      	str	r3, [sp, #168]	@ 0xa8
 8026d36:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026d38:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8026d3a:	3b01      	subs	r3, #1
 8026d3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d40:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026d42:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026d44:	bf08      	it	eq
 8026d46:	4613      	moveq	r3, r2
 8026d48:	ee16 6a90 	vmov	r6, s13
 8026d4c:	9307      	str	r3, [sp, #28]
 8026d4e:	eeb0 3a67 	vmov.f32	s6, s15
 8026d52:	eef0 2a47 	vmov.f32	s5, s14
 8026d56:	e5fb      	b.n	8026950 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026d58:	2900      	cmp	r1, #0
 8026d5a:	f43f ae6b 	beq.w	8026a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8026d5e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8026d62:	9308      	str	r3, [sp, #32]
 8026d64:	0e1b      	lsrs	r3, r3, #24
 8026d66:	9311      	str	r3, [sp, #68]	@ 0x44
 8026d68:	e664      	b.n	8026a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8026d6a:	f112 0801 	adds.w	r8, r2, #1
 8026d6e:	f53f af7b 	bmi.w	8026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026d72:	4543      	cmp	r3, r8
 8026d74:	f6ff af78 	blt.w	8026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026d78:	f11c 0801 	adds.w	r8, ip, #1
 8026d7c:	f53f af74 	bmi.w	8026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026d80:	45c6      	cmp	lr, r8
 8026d82:	f6ff af71 	blt.w	8026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026d86:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8026d88:	9201      	str	r2, [sp, #4]
 8026d8a:	fa0f f28e 	sxth.w	r2, lr
 8026d8e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8026d92:	e9cd c002 	strd	ip, r0, [sp, #8]
 8026d96:	9200      	str	r2, [sp, #0]
 8026d98:	b21b      	sxth	r3, r3
 8026d9a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8026d9c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8026d9e:	4639      	mov	r1, r7
 8026da0:	f7ff fc79 	bl	8026696 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8026da4:	e760      	b.n	8026c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8026da6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8026da8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026daa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026dae:	1427      	asrs	r7, r4, #16
 8026db0:	1433      	asrs	r3, r6, #16
 8026db2:	fb01 7303 	mla	r3, r1, r3, r7
 8026db6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8026dba:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8026dbe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026dc2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026dc6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026dca:	2a00      	cmp	r2, #0
 8026dcc:	f000 8133 	beq.w	8027036 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8026dd0:	687d      	ldr	r5, [r7, #4]
 8026dd2:	950e      	str	r5, [sp, #56]	@ 0x38
 8026dd4:	0e2d      	lsrs	r5, r5, #24
 8026dd6:	9515      	str	r5, [sp, #84]	@ 0x54
 8026dd8:	b178      	cbz	r0, 8026dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8026dda:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8026dde:	3901      	subs	r1, #1
 8026de0:	0089      	lsls	r1, r1, #2
 8026de2:	3104      	adds	r1, #4
 8026de4:	eb07 0e01 	add.w	lr, r7, r1
 8026de8:	5879      	ldr	r1, [r7, r1]
 8026dea:	9109      	str	r1, [sp, #36]	@ 0x24
 8026dec:	0e09      	lsrs	r1, r1, #24
 8026dee:	9112      	str	r1, [sp, #72]	@ 0x48
 8026df0:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026df4:	910f      	str	r1, [sp, #60]	@ 0x3c
 8026df6:	0e09      	lsrs	r1, r1, #24
 8026df8:	9116      	str	r1, [sp, #88]	@ 0x58
 8026dfa:	b292      	uxth	r2, r2
 8026dfc:	b280      	uxth	r0, r0
 8026dfe:	fb02 f800 	mul.w	r8, r2, r0
 8026e02:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8026e06:	0112      	lsls	r2, r2, #4
 8026e08:	eba2 0e08 	sub.w	lr, r2, r8
 8026e0c:	b280      	uxth	r0, r0
 8026e0e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8026e12:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8026e14:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026e16:	fa1f fe8e 	uxth.w	lr, lr
 8026e1a:	1a12      	subs	r2, r2, r0
 8026e1c:	b292      	uxth	r2, r2
 8026e1e:	fb0e f101 	mul.w	r1, lr, r1
 8026e22:	fb02 110c 	mla	r1, r2, ip, r1
 8026e26:	fb00 1105 	mla	r1, r0, r5, r1
 8026e2a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026e2c:	fb08 1105 	mla	r1, r8, r5, r1
 8026e30:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8026e34:	2900      	cmp	r1, #0
 8026e36:	f000 80f5 	beq.w	8027024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8026e3a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8026e3e:	d019      	beq.n	8026e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8026e40:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8026e44:	fb0c fa0a 	mul.w	sl, ip, sl
 8026e48:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8026e4c:	fb0c fc03 	mul.w	ip, ip, r3
 8026e50:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026e54:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8026e58:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8026e5c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8026e60:	4453      	add	r3, sl
 8026e62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026e66:	0a1b      	lsrs	r3, r3, #8
 8026e68:	0a3f      	lsrs	r7, r7, #8
 8026e6a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8026e6e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8026e72:	433b      	orrs	r3, r7
 8026e74:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8026e76:	2dff      	cmp	r5, #255	@ 0xff
 8026e78:	d020      	beq.n	8026ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8026e7a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026e7c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8026e80:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8026e82:	436f      	muls	r7, r5
 8026e84:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026e86:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026e8a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8026e8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026e90:	fb05 fa0a 	mul.w	sl, r5, sl
 8026e94:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8026e98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026e9c:	44bc      	add	ip, r7
 8026e9e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8026ea2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026ea6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026eaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026eae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026eb2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026eb6:	ea4c 050a 	orr.w	r5, ip, sl
 8026eba:	950e      	str	r5, [sp, #56]	@ 0x38
 8026ebc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026ebe:	2dff      	cmp	r5, #255	@ 0xff
 8026ec0:	d020      	beq.n	8026f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8026ec2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026ec4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8026ec8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026eca:	436f      	muls	r7, r5
 8026ecc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026ece:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026ed2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026ed4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026ed8:	fb05 fa0a 	mul.w	sl, r5, sl
 8026edc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8026ee0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026ee4:	44bc      	add	ip, r7
 8026ee6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8026eea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026eee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026ef2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026ef6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026efa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026efe:	ea4c 050a 	orr.w	r5, ip, sl
 8026f02:	9509      	str	r5, [sp, #36]	@ 0x24
 8026f04:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026f06:	2dff      	cmp	r5, #255	@ 0xff
 8026f08:	d020      	beq.n	8026f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8026f0a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026f0c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8026f10:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026f12:	436f      	muls	r7, r5
 8026f14:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026f16:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026f1a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026f1c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026f20:	fb05 fa0a 	mul.w	sl, r5, sl
 8026f24:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8026f28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026f2c:	44bc      	add	ip, r7
 8026f2e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8026f32:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026f36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026f3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026f3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026f42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026f46:	ea4c 050a 	orr.w	r5, ip, sl
 8026f4a:	950f      	str	r5, [sp, #60]	@ 0x3c
 8026f4c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026f4e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8026f52:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026f54:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8026f58:	fb0e f707 	mul.w	r7, lr, r7
 8026f5c:	fb02 770c 	mla	r7, r2, ip, r7
 8026f60:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026f64:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026f66:	fb00 770c 	mla	r7, r0, ip, r7
 8026f6a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026f6e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026f70:	fb08 770c 	mla	r7, r8, ip, r7
 8026f74:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8026f78:	fb0e fe0c 	mul.w	lr, lr, ip
 8026f7c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8026f80:	fb02 e303 	mla	r3, r2, r3, lr
 8026f84:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026f86:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026f88:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8026f8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8026f8e:	fb00 330a 	mla	r3, r0, sl, r3
 8026f92:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8026f96:	fb08 3c0c 	mla	ip, r8, ip, r3
 8026f9a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8026f9c:	f8b9 0000 	ldrh.w	r0, [r9]
 8026fa0:	4359      	muls	r1, r3
 8026fa2:	0a3f      	lsrs	r7, r7, #8
 8026fa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026fa8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8026fac:	1c4b      	adds	r3, r1, #1
 8026fae:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8026fb2:	ea47 070c 	orr.w	r7, r7, ip
 8026fb6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026fba:	1202      	asrs	r2, r0, #8
 8026fbc:	0c3b      	lsrs	r3, r7, #16
 8026fbe:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8026fc2:	b2c9      	uxtb	r1, r1
 8026fc4:	fb13 f305 	smulbb	r3, r3, r5
 8026fc8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8026fcc:	fb02 3201 	mla	r2, r2, r1, r3
 8026fd0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8026fd4:	10c3      	asrs	r3, r0, #3
 8026fd6:	b2ff      	uxtb	r7, r7
 8026fd8:	00c0      	lsls	r0, r0, #3
 8026fda:	b2c0      	uxtb	r0, r0
 8026fdc:	fb17 f705 	smulbb	r7, r7, r5
 8026fe0:	fb00 7001 	mla	r0, r0, r1, r7
 8026fe4:	b292      	uxth	r2, r2
 8026fe6:	fb1c fc05 	smulbb	ip, ip, r5
 8026fea:	b280      	uxth	r0, r0
 8026fec:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026ff0:	fb03 c301 	mla	r3, r3, r1, ip
 8026ff4:	1c51      	adds	r1, r2, #1
 8026ff6:	f100 0c01 	add.w	ip, r0, #1
 8026ffa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026ffe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027002:	b29b      	uxth	r3, r3
 8027004:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027008:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802700c:	ea4c 0202 	orr.w	r2, ip, r2
 8027010:	f103 0c01 	add.w	ip, r3, #1
 8027014:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027018:	095b      	lsrs	r3, r3, #5
 802701a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802701e:	431a      	orrs	r2, r3
 8027020:	f8a9 2000 	strh.w	r2, [r9]
 8027024:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8027026:	441c      	add	r4, r3
 8027028:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802702a:	f109 0902 	add.w	r9, r9, #2
 802702e:	441e      	add	r6, r3
 8027030:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027034:	e647      	b.n	8026cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027036:	2800      	cmp	r0, #0
 8027038:	f43f aedf 	beq.w	8026dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802703c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027040:	9109      	str	r1, [sp, #36]	@ 0x24
 8027042:	0e09      	lsrs	r1, r1, #24
 8027044:	9112      	str	r1, [sp, #72]	@ 0x48
 8027046:	e6d8      	b.n	8026dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027048:	b01d      	add	sp, #116	@ 0x74
 802704a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802704e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802704e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027052:	b085      	sub	sp, #20
 8027054:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8027058:	9102      	str	r1, [sp, #8]
 802705a:	2c00      	cmp	r4, #0
 802705c:	fb04 7103 	mla	r1, r4, r3, r7
 8027060:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8027064:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8027068:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802706c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027070:	f2c0 810c 	blt.w	802728c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027074:	45a6      	cmp	lr, r4
 8027076:	f340 8109 	ble.w	802728c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802707a:	2f00      	cmp	r7, #0
 802707c:	f2c0 8104 	blt.w	8027288 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027080:	42bb      	cmp	r3, r7
 8027082:	f340 8101 	ble.w	8027288 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027086:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802708a:	1c7a      	adds	r2, r7, #1
 802708c:	f100 8101 	bmi.w	8027292 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027090:	4293      	cmp	r3, r2
 8027092:	f340 80fe 	ble.w	8027292 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027096:	2e00      	cmp	r6, #0
 8027098:	f000 80fd 	beq.w	8027296 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802709c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80270a0:	3401      	adds	r4, #1
 80270a2:	f100 80fc 	bmi.w	802729e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80270a6:	45a6      	cmp	lr, r4
 80270a8:	f340 80f9 	ble.w	802729e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80270ac:	2800      	cmp	r0, #0
 80270ae:	f000 80f9 	beq.w	80272a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80270b2:	2f00      	cmp	r7, #0
 80270b4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80270b8:	f2c0 80ef 	blt.w	802729a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80270bc:	42bb      	cmp	r3, r7
 80270be:	f340 80ec 	ble.w	802729a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80270c2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80270c6:	3701      	adds	r7, #1
 80270c8:	f100 80ef 	bmi.w	80272aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80270cc:	42bb      	cmp	r3, r7
 80270ce:	f340 80ec 	ble.w	80272aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80270d2:	2e00      	cmp	r6, #0
 80270d4:	f000 80eb 	beq.w	80272ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80270d8:	6852      	ldr	r2, [r2, #4]
 80270da:	b2b6      	uxth	r6, r6
 80270dc:	b280      	uxth	r0, r0
 80270de:	fb00 fe06 	mul.w	lr, r0, r6
 80270e2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80270e6:	0136      	lsls	r6, r6, #4
 80270e8:	eba6 070e 	sub.w	r7, r6, lr
 80270ec:	b280      	uxth	r0, r0
 80270ee:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80270f2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80270f6:	b2bf      	uxth	r7, r7
 80270f8:	1a1b      	subs	r3, r3, r0
 80270fa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80270fe:	b29b      	uxth	r3, r3
 8027100:	fb07 f60a 	mul.w	r6, r7, sl
 8027104:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027108:	fb0b 6603 	mla	r6, fp, r3, r6
 802710c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027110:	fb00 6609 	mla	r6, r0, r9, r6
 8027114:	fb0e 6608 	mla	r6, lr, r8, r6
 8027118:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802711c:	9600      	str	r6, [sp, #0]
 802711e:	2e00      	cmp	r6, #0
 8027120:	f000 80af 	beq.w	8027282 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027124:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8027128:	fb0b fc0c 	mul.w	ip, fp, ip
 802712c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8027130:	fb0b f505 	mul.w	r5, fp, r5
 8027134:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027138:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802713c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027140:	44dc      	add	ip, fp
 8027142:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027146:	9501      	str	r5, [sp, #4]
 8027148:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802714c:	9503      	str	r5, [sp, #12]
 802714e:	9d01      	ldr	r5, [sp, #4]
 8027150:	9e02      	ldr	r6, [sp, #8]
 8027152:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8027156:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802715a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802715e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027162:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027166:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802716a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802716e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8027172:	4465      	add	r5, ip
 8027174:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8027178:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802717c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027180:	fb09 f904 	mul.w	r9, r9, r4
 8027184:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8027188:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802718c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8027190:	fb08 f404 	mul.w	r4, r8, r4
 8027194:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8027198:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802719c:	fb08 f802 	mul.w	r8, r8, r2
 80271a0:	fb0a fa01 	mul.w	sl, sl, r1
 80271a4:	0a22      	lsrs	r2, r4, #8
 80271a6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80271aa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80271ae:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80271b2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80271b6:	4414      	add	r4, r2
 80271b8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80271bc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80271c0:	0a2d      	lsrs	r5, r5, #8
 80271c2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80271c6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80271ca:	9a03      	ldr	r2, [sp, #12]
 80271cc:	8836      	ldrh	r6, [r6, #0]
 80271ce:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80271d2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80271d6:	437d      	muls	r5, r7
 80271d8:	4461      	add	r1, ip
 80271da:	0a24      	lsrs	r4, r4, #8
 80271dc:	fb02 5503 	mla	r5, r2, r3, r5
 80271e0:	0a09      	lsrs	r1, r1, #8
 80271e2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80271e6:	fb04 540e 	mla	r4, r4, lr, r5
 80271ea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80271ee:	fb01 4100 	mla	r1, r1, r0, r4
 80271f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80271f6:	0a09      	lsrs	r1, r1, #8
 80271f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80271fc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8027200:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027204:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8027208:	fb07 f70a 	mul.w	r7, r7, sl
 802720c:	fb03 7101 	mla	r1, r3, r1, r7
 8027210:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027214:	9b00      	ldr	r3, [sp, #0]
 8027216:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802721a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802721e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8027222:	fb00 e101 	mla	r1, r0, r1, lr
 8027226:	43da      	mvns	r2, r3
 8027228:	1233      	asrs	r3, r6, #8
 802722a:	b2d2      	uxtb	r2, r2
 802722c:	10f0      	asrs	r0, r6, #3
 802722e:	0a09      	lsrs	r1, r1, #8
 8027230:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8027234:	00f6      	lsls	r6, r6, #3
 8027236:	4353      	muls	r3, r2
 8027238:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802723c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8027240:	b2f6      	uxtb	r6, r6
 8027242:	4321      	orrs	r1, r4
 8027244:	4350      	muls	r0, r2
 8027246:	4356      	muls	r6, r2
 8027248:	1c5a      	adds	r2, r3, #1
 802724a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802724e:	0c0b      	lsrs	r3, r1, #16
 8027250:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027254:	1c42      	adds	r2, r0, #1
 8027256:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802725a:	0a0a      	lsrs	r2, r1, #8
 802725c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027260:	021b      	lsls	r3, r3, #8
 8027262:	00d2      	lsls	r2, r2, #3
 8027264:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027268:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802726c:	4313      	orrs	r3, r2
 802726e:	1c72      	adds	r2, r6, #1
 8027270:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027274:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027278:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802727c:	4319      	orrs	r1, r3
 802727e:	9b02      	ldr	r3, [sp, #8]
 8027280:	8019      	strh	r1, [r3, #0]
 8027282:	b005      	add	sp, #20
 8027284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027288:	2500      	movs	r5, #0
 802728a:	e6fe      	b.n	802708a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802728c:	2100      	movs	r1, #0
 802728e:	460d      	mov	r5, r1
 8027290:	e706      	b.n	80270a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027292:	2100      	movs	r1, #0
 8027294:	e704      	b.n	80270a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027296:	4631      	mov	r1, r6
 8027298:	e702      	b.n	80270a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802729a:	2400      	movs	r4, #0
 802729c:	e713      	b.n	80270c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802729e:	2200      	movs	r2, #0
 80272a0:	4614      	mov	r4, r2
 80272a2:	e71a      	b.n	80270da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80272a4:	4602      	mov	r2, r0
 80272a6:	4604      	mov	r4, r0
 80272a8:	e717      	b.n	80270da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80272aa:	2200      	movs	r2, #0
 80272ac:	e715      	b.n	80270da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80272ae:	4632      	mov	r2, r6
 80272b0:	e713      	b.n	80270da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080272b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80272b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80272b8:	b09b      	sub	sp, #108	@ 0x6c
 80272ba:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 80272be:	9218      	str	r2, [sp, #96]	@ 0x60
 80272c0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80272c2:	9116      	str	r1, [sp, #88]	@ 0x58
 80272c4:	9307      	str	r3, [sp, #28]
 80272c6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80272ca:	9019      	str	r0, [sp, #100]	@ 0x64
 80272cc:	6850      	ldr	r0, [r2, #4]
 80272ce:	6812      	ldr	r2, [r2, #0]
 80272d0:	fb00 1303 	mla	r3, r0, r3, r1
 80272d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80272d8:	930a      	str	r3, [sp, #40]	@ 0x28
 80272da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80272dc:	681b      	ldr	r3, [r3, #0]
 80272de:	930f      	str	r3, [sp, #60]	@ 0x3c
 80272e0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80272e2:	2b00      	cmp	r3, #0
 80272e4:	dc03      	bgt.n	80272ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80272e6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80272e8:	2b00      	cmp	r3, #0
 80272ea:	f340 8386 	ble.w	80279fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80272ee:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80272f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80272f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80272f8:	1e48      	subs	r0, r1, #1
 80272fa:	1e57      	subs	r7, r2, #1
 80272fc:	9b07      	ldr	r3, [sp, #28]
 80272fe:	2b00      	cmp	r3, #0
 8027300:	f340 8166 	ble.w	80275d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027304:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027308:	ea4f 4326 	mov.w	r3, r6, asr #16
 802730c:	d406      	bmi.n	802731c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802730e:	4584      	cmp	ip, r0
 8027310:	da04      	bge.n	802731c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027312:	2b00      	cmp	r3, #0
 8027314:	db02      	blt.n	802731c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027316:	42bb      	cmp	r3, r7
 8027318:	f2c0 815b 	blt.w	80275d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802731c:	f11c 0c01 	adds.w	ip, ip, #1
 8027320:	f100 814b 	bmi.w	80275ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027324:	4561      	cmp	r1, ip
 8027326:	f2c0 8148 	blt.w	80275ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802732a:	3301      	adds	r3, #1
 802732c:	f100 8145 	bmi.w	80275ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027330:	429a      	cmp	r2, r3
 8027332:	f2c0 8142 	blt.w	80275ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027336:	9b07      	ldr	r3, [sp, #28]
 8027338:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802733a:	9317      	str	r3, [sp, #92]	@ 0x5c
 802733c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802733e:	2b00      	cmp	r3, #0
 8027340:	f340 8165 	ble.w	802760e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027344:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8027346:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027348:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802734c:	689b      	ldr	r3, [r3, #8]
 802734e:	1422      	asrs	r2, r4, #16
 8027350:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027354:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027358:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802735c:	f100 81d5 	bmi.w	802770a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027360:	f103 38ff 	add.w	r8, r3, #4294967295
 8027364:	4542      	cmp	r2, r8
 8027366:	f280 81d0 	bge.w	802770a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802736a:	f1bc 0f00 	cmp.w	ip, #0
 802736e:	f2c0 81cc 	blt.w	802770a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027372:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027376:	45c4      	cmp	ip, r8
 8027378:	f280 81c7 	bge.w	802770a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802737c:	b21b      	sxth	r3, r3
 802737e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027382:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8027384:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027388:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802738c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027390:	2900      	cmp	r1, #0
 8027392:	f000 8182 	beq.w	802769a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027396:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802739a:	950b      	str	r5, [sp, #44]	@ 0x2c
 802739c:	0e2d      	lsrs	r5, r5, #24
 802739e:	9512      	str	r5, [sp, #72]	@ 0x48
 80273a0:	b180      	cbz	r0, 80273c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80273a2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80273a6:	3b01      	subs	r3, #1
 80273a8:	009b      	lsls	r3, r3, #2
 80273aa:	3304      	adds	r3, #4
 80273ac:	eb08 0c03 	add.w	ip, r8, r3
 80273b0:	f858 3003 	ldr.w	r3, [r8, r3]
 80273b4:	9308      	str	r3, [sp, #32]
 80273b6:	0e1b      	lsrs	r3, r3, #24
 80273b8:	9310      	str	r3, [sp, #64]	@ 0x40
 80273ba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80273be:	930c      	str	r3, [sp, #48]	@ 0x30
 80273c0:	0e1b      	lsrs	r3, r3, #24
 80273c2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80273c4:	b289      	uxth	r1, r1
 80273c6:	b280      	uxth	r0, r0
 80273c8:	fb01 f900 	mul.w	r9, r1, r0
 80273cc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80273d0:	0109      	lsls	r1, r1, #4
 80273d2:	eba1 0809 	sub.w	r8, r1, r9
 80273d6:	b280      	uxth	r0, r0
 80273d8:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80273dc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80273de:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80273e0:	fa1f f888 	uxth.w	r8, r8
 80273e4:	1a09      	subs	r1, r1, r0
 80273e6:	b289      	uxth	r1, r1
 80273e8:	fb08 f303 	mul.w	r3, r8, r3
 80273ec:	fb01 330e 	mla	r3, r1, lr, r3
 80273f0:	fb00 3305 	mla	r3, r0, r5, r3
 80273f4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80273f6:	fb09 3305 	mla	r3, r9, r5, r3
 80273fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80273fe:	2b00      	cmp	r3, #0
 8027400:	f000 80d2 	beq.w	80275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027404:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8027408:	d01b      	beq.n	8027442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802740a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802740e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027412:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8027416:	fb0e fe02 	mul.w	lr, lr, r2
 802741a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802741e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8027422:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027426:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802742a:	4452      	add	r2, sl
 802742c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027430:	0a12      	lsrs	r2, r2, #8
 8027432:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027436:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802743a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802743e:	ea42 020c 	orr.w	r2, r2, ip
 8027442:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8027444:	2dff      	cmp	r5, #255	@ 0xff
 8027446:	d021      	beq.n	802748c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027448:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 802744a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802744e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8027450:	fb05 fb0b 	mul.w	fp, r5, fp
 8027454:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8027456:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802745a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802745c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027460:	fb05 fa0a 	mul.w	sl, r5, sl
 8027464:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027468:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802746c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027470:	44de      	add	lr, fp
 8027472:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027476:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802747a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802747e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027482:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027486:	ea4e 050a 	orr.w	r5, lr, sl
 802748a:	950b      	str	r5, [sp, #44]	@ 0x2c
 802748c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802748e:	2dff      	cmp	r5, #255	@ 0xff
 8027490:	d021      	beq.n	80274d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027492:	9d08      	ldr	r5, [sp, #32]
 8027494:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8027498:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802749a:	fb05 fb0b 	mul.w	fp, r5, fp
 802749e:	9d08      	ldr	r5, [sp, #32]
 80274a0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80274a4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80274a6:	fb05 fa0e 	mul.w	sl, r5, lr
 80274aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80274ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80274b2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80274b6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80274ba:	44de      	add	lr, fp
 80274bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80274c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80274c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80274c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80274cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80274d0:	ea4e 050a 	orr.w	r5, lr, sl
 80274d4:	9508      	str	r5, [sp, #32]
 80274d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80274d8:	2dff      	cmp	r5, #255	@ 0xff
 80274da:	d021      	beq.n	8027520 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80274dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80274de:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80274e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80274e4:	fb05 fb0b 	mul.w	fp, r5, fp
 80274e8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80274ea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80274ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80274f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80274f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80274f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80274fc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8027500:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8027504:	44de      	add	lr, fp
 8027506:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802750a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802750e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027512:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8027516:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802751a:	ea4e 050a 	orr.w	r5, lr, sl
 802751e:	950c      	str	r5, [sp, #48]	@ 0x30
 8027520:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8027522:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8027526:	9d08      	ldr	r5, [sp, #32]
 8027528:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802752c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027530:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027534:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8027538:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802753a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802753e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8027542:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8027544:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027548:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802754c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8027550:	fb08 f80e 	mul.w	r8, r8, lr
 8027554:	fb01 8202 	mla	r2, r1, r2, r8
 8027558:	9908      	ldr	r1, [sp, #32]
 802755a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802755e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8027560:	fb00 220a 	mla	r2, r0, sl, r2
 8027564:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8027568:	fb09 2900 	mla	r9, r9, r0, r2
 802756c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027570:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027574:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027578:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802757c:	ea4c 0c09 	orr.w	ip, ip, r9
 8027580:	2bff      	cmp	r3, #255	@ 0xff
 8027582:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027586:	f040 8091 	bne.w	80276ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802758a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802758e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8027592:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027596:	f022 0207 	bic.w	r2, r2, #7
 802759a:	431a      	orrs	r2, r3
 802759c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80275a0:	ea4c 0c02 	orr.w	ip, ip, r2
 80275a4:	f8a7 c000 	strh.w	ip, [r7]
 80275a8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80275aa:	441c      	add	r4, r3
 80275ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80275ae:	441e      	add	r6, r3
 80275b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80275b2:	3b01      	subs	r3, #1
 80275b4:	3702      	adds	r7, #2
 80275b6:	9317      	str	r3, [sp, #92]	@ 0x5c
 80275b8:	e6c0      	b.n	802733c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80275ba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80275bc:	441c      	add	r4, r3
 80275be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80275c0:	441e      	add	r6, r3
 80275c2:	9b07      	ldr	r3, [sp, #28]
 80275c4:	3b01      	subs	r3, #1
 80275c6:	9307      	str	r3, [sp, #28]
 80275c8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80275ca:	3302      	adds	r3, #2
 80275cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80275ce:	e695      	b.n	80272fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80275d0:	d024      	beq.n	802761c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80275d2:	9b07      	ldr	r3, [sp, #28]
 80275d4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80275d6:	3b01      	subs	r3, #1
 80275d8:	fb00 4003 	mla	r0, r0, r3, r4
 80275dc:	1400      	asrs	r0, r0, #16
 80275de:	f53f aeaa 	bmi.w	8027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80275e2:	3901      	subs	r1, #1
 80275e4:	4288      	cmp	r0, r1
 80275e6:	f6bf aea6 	bge.w	8027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80275ea:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80275ec:	fb01 6303 	mla	r3, r1, r3, r6
 80275f0:	141b      	asrs	r3, r3, #16
 80275f2:	f53f aea0 	bmi.w	8027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80275f6:	3a01      	subs	r2, #1
 80275f8:	4293      	cmp	r3, r2
 80275fa:	f6bf ae9c 	bge.w	8027336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80275fe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027602:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8027606:	f1bb 0f00 	cmp.w	fp, #0
 802760a:	f300 809a 	bgt.w	8027742 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802760e:	9b07      	ldr	r3, [sp, #28]
 8027610:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027614:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027616:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802761a:	930a      	str	r3, [sp, #40]	@ 0x28
 802761c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802761e:	2b00      	cmp	r3, #0
 8027620:	f340 81eb 	ble.w	80279fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027624:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027628:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802762c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027630:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027632:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027636:	ee31 1a05 	vadd.f32	s2, s2, s10
 802763a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802763e:	eef0 6a62 	vmov.f32	s13, s5
 8027642:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027646:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802764a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802764e:	ee16 4a90 	vmov	r4, s13
 8027652:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027656:	eef0 6a43 	vmov.f32	s13, s6
 802765a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802765e:	ee12 2a90 	vmov	r2, s5
 8027662:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027666:	fb92 f3f3 	sdiv	r3, r2, r3
 802766a:	ee13 2a10 	vmov	r2, s6
 802766e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8027670:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027672:	fb92 f3f3 	sdiv	r3, r2, r3
 8027676:	9328      	str	r3, [sp, #160]	@ 0xa0
 8027678:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802767a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802767c:	3b01      	subs	r3, #1
 802767e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027682:	9316      	str	r3, [sp, #88]	@ 0x58
 8027684:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027686:	bf08      	it	eq
 8027688:	4613      	moveq	r3, r2
 802768a:	ee16 6a90 	vmov	r6, s13
 802768e:	9307      	str	r3, [sp, #28]
 8027690:	eeb0 3a67 	vmov.f32	s6, s15
 8027694:	eef0 2a47 	vmov.f32	s5, s14
 8027698:	e622      	b.n	80272e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802769a:	2800      	cmp	r0, #0
 802769c:	f43f ae92 	beq.w	80273c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80276a0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80276a4:	9308      	str	r3, [sp, #32]
 80276a6:	0e1b      	lsrs	r3, r3, #24
 80276a8:	9310      	str	r3, [sp, #64]	@ 0x40
 80276aa:	e68b      	b.n	80273c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80276ac:	8839      	ldrh	r1, [r7, #0]
 80276ae:	4dd4      	ldr	r5, [pc, #848]	@ (8027a00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80276b0:	43db      	mvns	r3, r3
 80276b2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80276b6:	fa5f f883 	uxtb.w	r8, r3
 80276ba:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80276be:	fb0e fe08 	mul.w	lr, lr, r8
 80276c2:	10c8      	asrs	r0, r1, #3
 80276c4:	00cb      	lsls	r3, r1, #3
 80276c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80276ca:	f10e 0101 	add.w	r1, lr, #1
 80276ce:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80276d2:	fb00 f008 	mul.w	r0, r0, r8
 80276d6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80276da:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80276de:	f100 0e01 	add.w	lr, r0, #1
 80276e2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80276e6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80276ea:	b2db      	uxtb	r3, r3
 80276ec:	b2c9      	uxtb	r1, r1
 80276ee:	00d2      	lsls	r2, r2, #3
 80276f0:	fb03 f308 	mul.w	r3, r3, r8
 80276f4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80276f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80276fc:	430a      	orrs	r2, r1
 80276fe:	1c59      	adds	r1, r3, #1
 8027700:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027704:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027708:	e748      	b.n	802759c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802770a:	f112 0801 	adds.w	r8, r2, #1
 802770e:	f53f af4b 	bmi.w	80275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027712:	4543      	cmp	r3, r8
 8027714:	f6ff af48 	blt.w	80275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027718:	f11c 0801 	adds.w	r8, ip, #1
 802771c:	f53f af44 	bmi.w	80275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027720:	45c6      	cmp	lr, r8
 8027722:	f6ff af41 	blt.w	80275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027726:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802772a:	fa0f f28e 	sxth.w	r2, lr
 802772e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8027732:	9200      	str	r2, [sp, #0]
 8027734:	b21b      	sxth	r3, r3
 8027736:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8027738:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802773a:	4639      	mov	r1, r7
 802773c:	f7ff fc87 	bl	802704e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8027740:	e732      	b.n	80275a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027742:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027744:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8027746:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802774a:	1421      	asrs	r1, r4, #16
 802774c:	1433      	asrs	r3, r6, #16
 802774e:	fb07 1303 	mla	r3, r7, r3, r1
 8027752:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8027754:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8027758:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802775c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027760:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027764:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8027768:	2a00      	cmp	r2, #0
 802776a:	f000 8107 	beq.w	802797c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802776e:	684d      	ldr	r5, [r1, #4]
 8027770:	950d      	str	r5, [sp, #52]	@ 0x34
 8027772:	0e2d      	lsrs	r5, r5, #24
 8027774:	9514      	str	r5, [sp, #80]	@ 0x50
 8027776:	b178      	cbz	r0, 8027798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8027778:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 802777c:	3f01      	subs	r7, #1
 802777e:	00bf      	lsls	r7, r7, #2
 8027780:	3704      	adds	r7, #4
 8027782:	eb01 0e07 	add.w	lr, r1, r7
 8027786:	59c9      	ldr	r1, [r1, r7]
 8027788:	9109      	str	r1, [sp, #36]	@ 0x24
 802778a:	0e09      	lsrs	r1, r1, #24
 802778c:	9111      	str	r1, [sp, #68]	@ 0x44
 802778e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027792:	910e      	str	r1, [sp, #56]	@ 0x38
 8027794:	0e09      	lsrs	r1, r1, #24
 8027796:	9115      	str	r1, [sp, #84]	@ 0x54
 8027798:	b292      	uxth	r2, r2
 802779a:	b280      	uxth	r0, r0
 802779c:	fb02 f900 	mul.w	r9, r2, r0
 80277a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80277a4:	0112      	lsls	r2, r2, #4
 80277a6:	eba2 0e09 	sub.w	lr, r2, r9
 80277aa:	b280      	uxth	r0, r0
 80277ac:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80277b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80277b2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80277b4:	fa1f fe8e 	uxth.w	lr, lr
 80277b8:	1a09      	subs	r1, r1, r0
 80277ba:	b289      	uxth	r1, r1
 80277bc:	fb0e f202 	mul.w	r2, lr, r2
 80277c0:	fb01 220c 	mla	r2, r1, ip, r2
 80277c4:	fb00 2205 	mla	r2, r0, r5, r2
 80277c8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80277ca:	fb09 2205 	mla	r2, r9, r5, r2
 80277ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80277d2:	2a00      	cmp	r2, #0
 80277d4:	f000 80c9 	beq.w	802796a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80277d8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80277dc:	d019      	beq.n	8027812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80277de:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80277e2:	fb0c fa0a 	mul.w	sl, ip, sl
 80277e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80277ea:	fb0c fc03 	mul.w	ip, ip, r3
 80277ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80277f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80277f6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80277fa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80277fe:	4453      	add	r3, sl
 8027800:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027804:	0a1b      	lsrs	r3, r3, #8
 8027806:	0a3f      	lsrs	r7, r7, #8
 8027808:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802780c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8027810:	433b      	orrs	r3, r7
 8027812:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027814:	2dff      	cmp	r5, #255	@ 0xff
 8027816:	d020      	beq.n	802785a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8027818:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802781a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802781e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027820:	436f      	muls	r7, r5
 8027822:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027824:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8027828:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802782a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802782e:	fb05 fa0a 	mul.w	sl, r5, sl
 8027832:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027836:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802783a:	44bc      	add	ip, r7
 802783c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027840:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027844:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027848:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802784c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027850:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027854:	ea4c 050a 	orr.w	r5, ip, sl
 8027858:	950d      	str	r5, [sp, #52]	@ 0x34
 802785a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802785c:	2dff      	cmp	r5, #255	@ 0xff
 802785e:	d020      	beq.n	80278a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8027860:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8027862:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8027866:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8027868:	436f      	muls	r7, r5
 802786a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802786c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8027870:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8027872:	fb05 fa0c 	mul.w	sl, r5, ip
 8027876:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802787a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802787e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027882:	44bc      	add	ip, r7
 8027884:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8027888:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802788c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027894:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027898:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802789c:	ea4c 050a 	orr.w	r5, ip, sl
 80278a0:	9509      	str	r5, [sp, #36]	@ 0x24
 80278a2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80278a4:	2dff      	cmp	r5, #255	@ 0xff
 80278a6:	d020      	beq.n	80278ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80278a8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80278aa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80278ae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80278b0:	436f      	muls	r7, r5
 80278b2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80278b4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80278b8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80278ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80278be:	fb05 fa0a 	mul.w	sl, r5, sl
 80278c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80278c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80278ca:	44bc      	add	ip, r7
 80278cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80278d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80278d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80278dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80278e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80278e4:	ea4c 050a 	orr.w	r5, ip, sl
 80278e8:	950e      	str	r5, [sp, #56]	@ 0x38
 80278ea:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80278ec:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80278f0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80278f2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80278f6:	fb0e f707 	mul.w	r7, lr, r7
 80278fa:	fb01 770c 	mla	r7, r1, ip, r7
 80278fe:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8027902:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027904:	fb00 770c 	mla	r7, r0, ip, r7
 8027908:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802790c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802790e:	fb09 770c 	mla	r7, r9, ip, r7
 8027912:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8027916:	fb0e fe0c 	mul.w	lr, lr, ip
 802791a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802791e:	fb01 e303 	mla	r3, r1, r3, lr
 8027922:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027924:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8027928:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802792a:	fb00 330a 	mla	r3, r0, sl, r3
 802792e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8027932:	fb09 3c0c 	mla	ip, r9, ip, r3
 8027936:	0a3f      	lsrs	r7, r7, #8
 8027938:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802793c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8027940:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027944:	ea47 070c 	orr.w	r7, r7, ip
 8027948:	2aff      	cmp	r2, #255	@ 0xff
 802794a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802794e:	d11e      	bne.n	802798e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8027950:	097a      	lsrs	r2, r7, #5
 8027952:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8027956:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802795a:	f023 0307 	bic.w	r3, r3, #7
 802795e:	4313      	orrs	r3, r2
 8027960:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8027964:	431f      	orrs	r7, r3
 8027966:	f8a8 7000 	strh.w	r7, [r8]
 802796a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802796c:	441c      	add	r4, r3
 802796e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027970:	f108 0802 	add.w	r8, r8, #2
 8027974:	441e      	add	r6, r3
 8027976:	f10b 3bff 	add.w	fp, fp, #4294967295
 802797a:	e644      	b.n	8027606 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802797c:	2800      	cmp	r0, #0
 802797e:	f43f af0b 	beq.w	8027798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8027982:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8027986:	9109      	str	r1, [sp, #36]	@ 0x24
 8027988:	0e09      	lsrs	r1, r1, #24
 802798a:	9111      	str	r1, [sp, #68]	@ 0x44
 802798c:	e704      	b.n	8027798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802798e:	f8b8 1000 	ldrh.w	r1, [r8]
 8027992:	43d2      	mvns	r2, r2
 8027994:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8027998:	fa5f fe82 	uxtb.w	lr, r2
 802799c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80279a0:	fb0c fc0e 	mul.w	ip, ip, lr
 80279a4:	10c8      	asrs	r0, r1, #3
 80279a6:	00ca      	lsls	r2, r1, #3
 80279a8:	f10c 0101 	add.w	r1, ip, #1
 80279ac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80279b0:	0c39      	lsrs	r1, r7, #16
 80279b2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80279b6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80279ba:	4911      	ldr	r1, [pc, #68]	@ (8027a00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80279bc:	fb00 f00e 	mul.w	r0, r0, lr
 80279c0:	fa5f fc8c 	uxtb.w	ip, ip
 80279c4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80279c8:	b2d2      	uxtb	r2, r2
 80279ca:	1c41      	adds	r1, r0, #1
 80279cc:	fb02 f20e 	mul.w	r2, r2, lr
 80279d0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80279d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80279d8:	1c51      	adds	r1, r2, #1
 80279da:	00c0      	lsls	r0, r0, #3
 80279dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80279e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80279e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80279e8:	ea4c 0c00 	orr.w	ip, ip, r0
 80279ec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80279f0:	ea47 0c0c 	orr.w	ip, r7, ip
 80279f4:	f8a8 c000 	strh.w	ip, [r8]
 80279f8:	e7b7      	b.n	802796a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80279fa:	b01b      	add	sp, #108	@ 0x6c
 80279fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a00:	fffff800 	.word	0xfffff800

08027a04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8027a04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027a08:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8027a0c:	2d00      	cmp	r5, #0
 8027a0e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8027a12:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8027a16:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8027a1a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8027a1e:	fb05 0e03 	mla	lr, r5, r3, r0
 8027a22:	f2c0 808c 	blt.w	8027b3e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8027a26:	45a9      	cmp	r9, r5
 8027a28:	f340 8089 	ble.w	8027b3e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8027a2c:	2800      	cmp	r0, #0
 8027a2e:	f2c0 8084 	blt.w	8027b3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8027a32:	4580      	cmp	r8, r0
 8027a34:	f340 8081 	ble.w	8027b3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8027a38:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8027a3c:	f01e 0f01 	tst.w	lr, #1
 8027a40:	5d16      	ldrb	r6, [r2, r4]
 8027a42:	bf0c      	ite	eq
 8027a44:	f006 060f 	andeq.w	r6, r6, #15
 8027a48:	1136      	asrne	r6, r6, #4
 8027a4a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8027a4e:	b2f6      	uxtb	r6, r6
 8027a50:	1c44      	adds	r4, r0, #1
 8027a52:	d477      	bmi.n	8027b44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8027a54:	45a0      	cmp	r8, r4
 8027a56:	dd75      	ble.n	8027b44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8027a58:	2f00      	cmp	r7, #0
 8027a5a:	d075      	beq.n	8027b48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8027a5c:	f10e 0a01 	add.w	sl, lr, #1
 8027a60:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8027a64:	f01a 0f01 	tst.w	sl, #1
 8027a68:	5d14      	ldrb	r4, [r2, r4]
 8027a6a:	bf0c      	ite	eq
 8027a6c:	f004 040f 	andeq.w	r4, r4, #15
 8027a70:	1124      	asrne	r4, r4, #4
 8027a72:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8027a76:	b2e4      	uxtb	r4, r4
 8027a78:	3501      	adds	r5, #1
 8027a7a:	d469      	bmi.n	8027b50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8027a7c:	45a9      	cmp	r9, r5
 8027a7e:	dd67      	ble.n	8027b50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8027a80:	f1bc 0f00 	cmp.w	ip, #0
 8027a84:	d067      	beq.n	8027b56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8027a86:	2800      	cmp	r0, #0
 8027a88:	db60      	blt.n	8027b4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8027a8a:	4580      	cmp	r8, r0
 8027a8c:	dd5e      	ble.n	8027b4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8027a8e:	eb03 090e 	add.w	r9, r3, lr
 8027a92:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8027a96:	f019 0f01 	tst.w	r9, #1
 8027a9a:	5d55      	ldrb	r5, [r2, r5]
 8027a9c:	bf0c      	ite	eq
 8027a9e:	f005 050f 	andeq.w	r5, r5, #15
 8027aa2:	112d      	asrne	r5, r5, #4
 8027aa4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8027aa8:	b2ed      	uxtb	r5, r5
 8027aaa:	3001      	adds	r0, #1
 8027aac:	d456      	bmi.n	8027b5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8027aae:	4580      	cmp	r8, r0
 8027ab0:	dd54      	ble.n	8027b5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8027ab2:	2f00      	cmp	r7, #0
 8027ab4:	d054      	beq.n	8027b60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8027ab6:	3301      	adds	r3, #1
 8027ab8:	449e      	add	lr, r3
 8027aba:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8027abe:	f01e 0f01 	tst.w	lr, #1
 8027ac2:	5cd0      	ldrb	r0, [r2, r3]
 8027ac4:	bf0c      	ite	eq
 8027ac6:	f000 000f 	andeq.w	r0, r0, #15
 8027aca:	1100      	asrne	r0, r0, #4
 8027acc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027ad0:	b2c3      	uxtb	r3, r0
 8027ad2:	b2ba      	uxth	r2, r7
 8027ad4:	fa1f fc8c 	uxth.w	ip, ip
 8027ad8:	fb02 f00c 	mul.w	r0, r2, ip
 8027adc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8027ae0:	0112      	lsls	r2, r2, #4
 8027ae2:	fa1f fc8c 	uxth.w	ip, ip
 8027ae6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8027aea:	1a12      	subs	r2, r2, r0
 8027aec:	eba7 070c 	sub.w	r7, r7, ip
 8027af0:	b292      	uxth	r2, r2
 8027af2:	b2bf      	uxth	r7, r7
 8027af4:	4362      	muls	r2, r4
 8027af6:	fb06 2207 	mla	r2, r6, r7, r2
 8027afa:	fb0c 2505 	mla	r5, ip, r5, r2
 8027afe:	fb00 5303 	mla	r3, r0, r3, r5
 8027b02:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027b06:	b1b3      	cbz	r3, 8027b36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8027b08:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8027b0c:	435a      	muls	r2, r3
 8027b0e:	1c53      	adds	r3, r2, #1
 8027b10:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027b14:	4a2d      	ldr	r2, [pc, #180]	@ (8027bcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8027b16:	121b      	asrs	r3, r3, #8
 8027b18:	6812      	ldr	r2, [r2, #0]
 8027b1a:	2bff      	cmp	r3, #255	@ 0xff
 8027b1c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8027b20:	d120      	bne.n	8027b64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8027b22:	4b2b      	ldr	r3, [pc, #172]	@ (8027bd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8027b24:	0950      	lsrs	r0, r2, #5
 8027b26:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027b2a:	4033      	ands	r3, r6
 8027b2c:	4318      	orrs	r0, r3
 8027b2e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027b32:	4302      	orrs	r2, r0
 8027b34:	800a      	strh	r2, [r1, #0]
 8027b36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027b3a:	2600      	movs	r6, #0
 8027b3c:	e788      	b.n	8027a50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8027b3e:	2400      	movs	r4, #0
 8027b40:	4626      	mov	r6, r4
 8027b42:	e799      	b.n	8027a78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8027b44:	2400      	movs	r4, #0
 8027b46:	e797      	b.n	8027a78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8027b48:	463c      	mov	r4, r7
 8027b4a:	e795      	b.n	8027a78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8027b4c:	2500      	movs	r5, #0
 8027b4e:	e7ac      	b.n	8027aaa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8027b50:	2300      	movs	r3, #0
 8027b52:	461d      	mov	r5, r3
 8027b54:	e7bd      	b.n	8027ad2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027b56:	4663      	mov	r3, ip
 8027b58:	4665      	mov	r5, ip
 8027b5a:	e7ba      	b.n	8027ad2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027b5c:	2300      	movs	r3, #0
 8027b5e:	e7b8      	b.n	8027ad2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027b60:	463b      	mov	r3, r7
 8027b62:	e7b6      	b.n	8027ad2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027b64:	880d      	ldrh	r5, [r1, #0]
 8027b66:	b29f      	uxth	r7, r3
 8027b68:	122c      	asrs	r4, r5, #8
 8027b6a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8027b6e:	43db      	mvns	r3, r3
 8027b70:	b2db      	uxtb	r3, r3
 8027b72:	fb10 f007 	smulbb	r0, r0, r7
 8027b76:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8027b7a:	fb04 0403 	mla	r4, r4, r3, r0
 8027b7e:	b2f6      	uxtb	r6, r6
 8027b80:	10e8      	asrs	r0, r5, #3
 8027b82:	b2d2      	uxtb	r2, r2
 8027b84:	00ed      	lsls	r5, r5, #3
 8027b86:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8027b8a:	fb12 f207 	smulbb	r2, r2, r7
 8027b8e:	fb16 f607 	smulbb	r6, r6, r7
 8027b92:	b2ed      	uxtb	r5, r5
 8027b94:	b2a4      	uxth	r4, r4
 8027b96:	fb00 6603 	mla	r6, r0, r3, r6
 8027b9a:	fb05 2303 	mla	r3, r5, r3, r2
 8027b9e:	b29a      	uxth	r2, r3
 8027ba0:	1c63      	adds	r3, r4, #1
 8027ba2:	b2b0      	uxth	r0, r6
 8027ba4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027ba8:	1c53      	adds	r3, r2, #1
 8027baa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027bae:	1c42      	adds	r2, r0, #1
 8027bb0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027bb4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8027bb8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027bbc:	0940      	lsrs	r0, r0, #5
 8027bbe:	4323      	orrs	r3, r4
 8027bc0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027bc4:	4303      	orrs	r3, r0
 8027bc6:	800b      	strh	r3, [r1, #0]
 8027bc8:	e7b5      	b.n	8027b36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8027bca:	bf00      	nop
 8027bcc:	20013f70 	.word	0x20013f70
 8027bd0:	00fff800 	.word	0x00fff800

08027bd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027bd8:	b097      	sub	sp, #92	@ 0x5c
 8027bda:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8027bde:	9214      	str	r2, [sp, #80]	@ 0x50
 8027be0:	9309      	str	r3, [sp, #36]	@ 0x24
 8027be2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027be4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8027be8:	910d      	str	r1, [sp, #52]	@ 0x34
 8027bea:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027bec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8027bf0:	9015      	str	r0, [sp, #84]	@ 0x54
 8027bf2:	6850      	ldr	r0, [r2, #4]
 8027bf4:	6812      	ldr	r2, [r2, #0]
 8027bf6:	fb00 1303 	mla	r3, r0, r3, r1
 8027bfa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8027bfe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027c00:	689b      	ldr	r3, [r3, #8]
 8027c02:	3301      	adds	r3, #1
 8027c04:	f023 0301 	bic.w	r3, r3, #1
 8027c08:	930a      	str	r3, [sp, #40]	@ 0x28
 8027c0a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027c0c:	681f      	ldr	r7, [r3, #0]
 8027c0e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027c10:	2b00      	cmp	r3, #0
 8027c12:	dc03      	bgt.n	8027c1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027c14:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027c16:	2b00      	cmp	r3, #0
 8027c18:	f340 8287 	ble.w	802812a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8027c1c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027c1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027c22:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027c26:	1e48      	subs	r0, r1, #1
 8027c28:	f102 3cff 	add.w	ip, r2, #4294967295
 8027c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027c2e:	2b00      	cmp	r3, #0
 8027c30:	f340 80c4 	ble.w	8027dbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8027c34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027c38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027c3c:	d406      	bmi.n	8027c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027c3e:	4586      	cmp	lr, r0
 8027c40:	da04      	bge.n	8027c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027c42:	2b00      	cmp	r3, #0
 8027c44:	db02      	blt.n	8027c4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027c46:	4563      	cmp	r3, ip
 8027c48:	f2c0 80b9 	blt.w	8027dbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8027c4c:	f11e 0e01 	adds.w	lr, lr, #1
 8027c50:	f100 80aa 	bmi.w	8027da8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027c54:	4571      	cmp	r1, lr
 8027c56:	f2c0 80a7 	blt.w	8027da8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027c5a:	3301      	adds	r3, #1
 8027c5c:	f100 80a4 	bmi.w	8027da8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027c60:	429a      	cmp	r2, r3
 8027c62:	f2c0 80a1 	blt.w	8027da8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027c66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027c68:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8027c6c:	930e      	str	r3, [sp, #56]	@ 0x38
 8027c6e:	46c8      	mov	r8, r9
 8027c70:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027c72:	2b00      	cmp	r3, #0
 8027c74:	f340 80c3 	ble.w	8027dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8027c78:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027c7a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027c7e:	1423      	asrs	r3, r4, #16
 8027c80:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027c84:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027c88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027c8c:	f100 814d 	bmi.w	8027f2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8027c90:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027c94:	455b      	cmp	r3, fp
 8027c96:	f280 8148 	bge.w	8027f2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8027c9a:	2800      	cmp	r0, #0
 8027c9c:	f2c0 8145 	blt.w	8027f2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8027ca0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027ca4:	4558      	cmp	r0, fp
 8027ca6:	f280 8140 	bge.w	8027f2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8027caa:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8027cac:	fb00 3305 	mla	r3, r0, r5, r3
 8027cb0:	0858      	lsrs	r0, r3, #1
 8027cb2:	07dd      	lsls	r5, r3, #31
 8027cb4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027cb8:	bf54      	ite	pl
 8027cba:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027cbe:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027cc2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027cc6:	fa5f fc8c 	uxtb.w	ip, ip
 8027cca:	2a00      	cmp	r2, #0
 8027ccc:	f000 80db 	beq.w	8027e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8027cd0:	1c58      	adds	r0, r3, #1
 8027cd2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027cd6:	07c0      	lsls	r0, r0, #31
 8027cd8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8027cdc:	bf54      	ite	pl
 8027cde:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027ce2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027ce6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027cea:	fa5f f08e 	uxtb.w	r0, lr
 8027cee:	9010      	str	r0, [sp, #64]	@ 0x40
 8027cf0:	b1c9      	cbz	r1, 8027d26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8027cf2:	4453      	add	r3, sl
 8027cf4:	0858      	lsrs	r0, r3, #1
 8027cf6:	07dd      	lsls	r5, r3, #31
 8027cf8:	5c38      	ldrb	r0, [r7, r0]
 8027cfa:	bf54      	ite	pl
 8027cfc:	f000 000f 	andpl.w	r0, r0, #15
 8027d00:	1100      	asrmi	r0, r0, #4
 8027d02:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027d06:	3301      	adds	r3, #1
 8027d08:	b2c0      	uxtb	r0, r0
 8027d0a:	900b      	str	r0, [sp, #44]	@ 0x2c
 8027d0c:	0858      	lsrs	r0, r3, #1
 8027d0e:	07dd      	lsls	r5, r3, #31
 8027d10:	f817 e000 	ldrb.w	lr, [r7, r0]
 8027d14:	bf54      	ite	pl
 8027d16:	f00e 030f 	andpl.w	r3, lr, #15
 8027d1a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8027d1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027d22:	b2db      	uxtb	r3, r3
 8027d24:	9311      	str	r3, [sp, #68]	@ 0x44
 8027d26:	b292      	uxth	r2, r2
 8027d28:	b289      	uxth	r1, r1
 8027d2a:	fb02 f301 	mul.w	r3, r2, r1
 8027d2e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027d32:	0112      	lsls	r2, r2, #4
 8027d34:	b289      	uxth	r1, r1
 8027d36:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8027d3a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8027d3c:	1ad2      	subs	r2, r2, r3
 8027d3e:	1a40      	subs	r0, r0, r1
 8027d40:	b292      	uxth	r2, r2
 8027d42:	436a      	muls	r2, r5
 8027d44:	b280      	uxth	r0, r0
 8027d46:	fb0c 2c00 	mla	ip, ip, r0, r2
 8027d4a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8027d4c:	fb01 c102 	mla	r1, r1, r2, ip
 8027d50:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8027d52:	fb03 1302 	mla	r3, r3, r2, r1
 8027d56:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027d5a:	b1db      	cbz	r3, 8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027d5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8027d5e:	4353      	muls	r3, r2
 8027d60:	1c5a      	adds	r2, r3, #1
 8027d62:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027d66:	4ac6      	ldr	r2, [pc, #792]	@ (8028080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8027d68:	121b      	asrs	r3, r3, #8
 8027d6a:	6812      	ldr	r2, [r2, #0]
 8027d6c:	2bff      	cmp	r3, #255	@ 0xff
 8027d6e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027d72:	f040 8099 	bne.w	8027ea8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8027d76:	0953      	lsrs	r3, r2, #5
 8027d78:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8027d7c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027d80:	f02c 0c07 	bic.w	ip, ip, #7
 8027d84:	ea43 0c0c 	orr.w	ip, r3, ip
 8027d88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027d8c:	ea4c 0202 	orr.w	r2, ip, r2
 8027d90:	f8a8 2000 	strh.w	r2, [r8]
 8027d94:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8027d96:	441c      	add	r4, r3
 8027d98:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027d9a:	441e      	add	r6, r3
 8027d9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8027d9e:	3b01      	subs	r3, #1
 8027da0:	f108 0802 	add.w	r8, r8, #2
 8027da4:	930e      	str	r3, [sp, #56]	@ 0x38
 8027da6:	e763      	b.n	8027c70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8027da8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8027daa:	441c      	add	r4, r3
 8027dac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027dae:	441e      	add	r6, r3
 8027db0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027db2:	3b01      	subs	r3, #1
 8027db4:	9309      	str	r3, [sp, #36]	@ 0x24
 8027db6:	f109 0902 	add.w	r9, r9, #2
 8027dba:	e737      	b.n	8027c2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8027dbc:	d024      	beq.n	8027e08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8027dbe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027dc0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8027dc2:	3b01      	subs	r3, #1
 8027dc4:	fb00 4003 	mla	r0, r0, r3, r4
 8027dc8:	1400      	asrs	r0, r0, #16
 8027dca:	f53f af4c 	bmi.w	8027c66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027dce:	3901      	subs	r1, #1
 8027dd0:	4288      	cmp	r0, r1
 8027dd2:	f6bf af48 	bge.w	8027c66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027dd6:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8027dd8:	fb01 6303 	mla	r3, r1, r3, r6
 8027ddc:	141b      	asrs	r3, r3, #16
 8027dde:	f53f af42 	bmi.w	8027c66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027de2:	3a01      	subs	r2, #1
 8027de4:	4293      	cmp	r3, r2
 8027de6:	f6bf af3e 	bge.w	8027c66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027dea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8027dee:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8027df2:	930e      	str	r3, [sp, #56]	@ 0x38
 8027df4:	46c8      	mov	r8, r9
 8027df6:	f1bb 0f00 	cmp.w	fp, #0
 8027dfa:	f300 80b7 	bgt.w	8027f6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8027dfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027e00:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027e04:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027e08:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027e0a:	2b00      	cmp	r3, #0
 8027e0c:	f340 818d 	ble.w	802812a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8027e10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027e14:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027e18:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027e1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027e1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027e22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027e26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027e2a:	eef0 6a62 	vmov.f32	s13, s5
 8027e2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027e32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027e36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027e3a:	ee16 4a90 	vmov	r4, s13
 8027e3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027e42:	eef0 6a43 	vmov.f32	s13, s6
 8027e46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027e4a:	ee12 2a90 	vmov	r2, s5
 8027e4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8027e56:	ee13 2a10 	vmov	r2, s6
 8027e5a:	9323      	str	r3, [sp, #140]	@ 0x8c
 8027e5c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8027e62:	9324      	str	r3, [sp, #144]	@ 0x90
 8027e64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027e66:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8027e68:	3b01      	subs	r3, #1
 8027e6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027e6e:	930d      	str	r3, [sp, #52]	@ 0x34
 8027e70:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027e72:	bf08      	it	eq
 8027e74:	4613      	moveq	r3, r2
 8027e76:	ee16 6a90 	vmov	r6, s13
 8027e7a:	9309      	str	r3, [sp, #36]	@ 0x24
 8027e7c:	eeb0 3a67 	vmov.f32	s6, s15
 8027e80:	eef0 2a47 	vmov.f32	s5, s14
 8027e84:	e6c3      	b.n	8027c0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027e86:	2900      	cmp	r1, #0
 8027e88:	f43f af4d 	beq.w	8027d26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8027e8c:	eb0a 0003 	add.w	r0, sl, r3
 8027e90:	0843      	lsrs	r3, r0, #1
 8027e92:	07c0      	lsls	r0, r0, #31
 8027e94:	5cfb      	ldrb	r3, [r7, r3]
 8027e96:	bf54      	ite	pl
 8027e98:	f003 030f 	andpl.w	r3, r3, #15
 8027e9c:	111b      	asrmi	r3, r3, #4
 8027e9e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027ea2:	b2db      	uxtb	r3, r3
 8027ea4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8027ea6:	e73e      	b.n	8027d26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8027ea8:	f8b8 e000 	ldrh.w	lr, [r8]
 8027eac:	fa1f fb83 	uxth.w	fp, r3
 8027eb0:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027eb4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027eb8:	43db      	mvns	r3, r3
 8027eba:	b2db      	uxtb	r3, r3
 8027ebc:	fb11 f10b 	smulbb	r1, r1, fp
 8027ec0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8027ec4:	fb00 1003 	mla	r0, r0, r3, r1
 8027ec8:	fa5f fc8c 	uxtb.w	ip, ip
 8027ecc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027ed0:	b2d2      	uxtb	r2, r2
 8027ed2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027ed6:	b280      	uxth	r0, r0
 8027ed8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8027edc:	fb1c fc0b 	smulbb	ip, ip, fp
 8027ee0:	fa5f fe8e 	uxtb.w	lr, lr
 8027ee4:	fb12 fb0b 	smulbb	fp, r2, fp
 8027ee8:	fb01 cc03 	mla	ip, r1, r3, ip
 8027eec:	fb0e bb03 	mla	fp, lr, r3, fp
 8027ef0:	1c43      	adds	r3, r0, #1
 8027ef2:	fa1f fc8c 	uxth.w	ip, ip
 8027ef6:	fa1f fb8b 	uxth.w	fp, fp
 8027efa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027efe:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8027f02:	f10c 0101 	add.w	r1, ip, #1
 8027f06:	f10b 0001 	add.w	r0, fp, #1
 8027f0a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8027f0e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027f12:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027f16:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027f1a:	4318      	orrs	r0, r3
 8027f1c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8027f20:	ea40 000c 	orr.w	r0, r0, ip
 8027f24:	f8a8 0000 	strh.w	r0, [r8]
 8027f28:	e734      	b.n	8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027f2a:	f113 0b01 	adds.w	fp, r3, #1
 8027f2e:	f53f af31 	bmi.w	8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027f32:	45dc      	cmp	ip, fp
 8027f34:	f6ff af2e 	blt.w	8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027f38:	f110 0b01 	adds.w	fp, r0, #1
 8027f3c:	f53f af2a 	bmi.w	8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027f40:	45de      	cmp	lr, fp
 8027f42:	f6ff af27 	blt.w	8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027f46:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8027f48:	9302      	str	r3, [sp, #8]
 8027f4a:	fa0f f38e 	sxth.w	r3, lr
 8027f4e:	9301      	str	r3, [sp, #4]
 8027f50:	fa0f f38c 	sxth.w	r3, ip
 8027f54:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8027f58:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8027f5c:	9300      	str	r3, [sp, #0]
 8027f5e:	463a      	mov	r2, r7
 8027f60:	4653      	mov	r3, sl
 8027f62:	4641      	mov	r1, r8
 8027f64:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8027f66:	f7ff fd4d 	bl	8027a04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8027f6a:	e713      	b.n	8027d94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027f6c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8027f6e:	1422      	asrs	r2, r4, #16
 8027f70:	1433      	asrs	r3, r6, #16
 8027f72:	fb05 2303 	mla	r3, r5, r3, r2
 8027f76:	085a      	lsrs	r2, r3, #1
 8027f78:	07dd      	lsls	r5, r3, #31
 8027f7a:	5cba      	ldrb	r2, [r7, r2]
 8027f7c:	bf54      	ite	pl
 8027f7e:	f002 020f 	andpl.w	r2, r2, #15
 8027f82:	1112      	asrmi	r2, r2, #4
 8027f84:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027f88:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027f8c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027f90:	b2d2      	uxtb	r2, r2
 8027f92:	2900      	cmp	r1, #0
 8027f94:	d076      	beq.n	8028084 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8027f96:	f103 0e01 	add.w	lr, r3, #1
 8027f9a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8027f9e:	f01e 0f01 	tst.w	lr, #1
 8027fa2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027fa6:	bf0c      	ite	eq
 8027fa8:	f00c 0c0f 	andeq.w	ip, ip, #15
 8027fac:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8027fb0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027fb4:	fa5f f58c 	uxtb.w	r5, ip
 8027fb8:	9512      	str	r5, [sp, #72]	@ 0x48
 8027fba:	b300      	cbz	r0, 8027ffe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8027fbc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027fbe:	442b      	add	r3, r5
 8027fc0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027fc4:	07dd      	lsls	r5, r3, #31
 8027fc6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027fca:	bf54      	ite	pl
 8027fcc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027fd0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027fd4:	3301      	adds	r3, #1
 8027fd6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027fda:	fa5f f58c 	uxtb.w	r5, ip
 8027fde:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027fe2:	950c      	str	r5, [sp, #48]	@ 0x30
 8027fe4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027fe8:	07dd      	lsls	r5, r3, #31
 8027fea:	bf54      	ite	pl
 8027fec:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027ff0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027ff4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027ff8:	fa5f f38c 	uxtb.w	r3, ip
 8027ffc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8027ffe:	b289      	uxth	r1, r1
 8028000:	b280      	uxth	r0, r0
 8028002:	fb01 f300 	mul.w	r3, r1, r0
 8028006:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802800a:	0109      	lsls	r1, r1, #4
 802800c:	b280      	uxth	r0, r0
 802800e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8028012:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8028014:	1ac9      	subs	r1, r1, r3
 8028016:	ebac 0c00 	sub.w	ip, ip, r0
 802801a:	b289      	uxth	r1, r1
 802801c:	4369      	muls	r1, r5
 802801e:	fa1f fc8c 	uxth.w	ip, ip
 8028022:	fb02 120c 	mla	r2, r2, ip, r1
 8028026:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8028028:	fb00 2001 	mla	r0, r0, r1, r2
 802802c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802802e:	fb03 0302 	mla	r3, r3, r2, r0
 8028032:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028036:	b1d3      	cbz	r3, 802806e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028038:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802803a:	4353      	muls	r3, r2
 802803c:	1c5a      	adds	r2, r3, #1
 802803e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028042:	4a0f      	ldr	r2, [pc, #60]	@ (8028080 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028044:	121b      	asrs	r3, r3, #8
 8028046:	6812      	ldr	r2, [r2, #0]
 8028048:	2bff      	cmp	r3, #255	@ 0xff
 802804a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802804e:	d12d      	bne.n	80280ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028050:	0953      	lsrs	r3, r2, #5
 8028052:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8028056:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802805a:	f02c 0c07 	bic.w	ip, ip, #7
 802805e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028062:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028066:	ea4c 0202 	orr.w	r2, ip, r2
 802806a:	f8a8 2000 	strh.w	r2, [r8]
 802806e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8028070:	441c      	add	r4, r3
 8028072:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028074:	f108 0802 	add.w	r8, r8, #2
 8028078:	441e      	add	r6, r3
 802807a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802807e:	e6ba      	b.n	8027df6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028080:	20013f70 	.word	0x20013f70
 8028084:	2800      	cmp	r0, #0
 8028086:	d0ba      	beq.n	8027ffe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028088:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802808a:	442b      	add	r3, r5
 802808c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028090:	07db      	lsls	r3, r3, #31
 8028092:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028096:	bf54      	ite	pl
 8028098:	f00c 0c0f 	andpl.w	ip, ip, #15
 802809c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80280a0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80280a4:	fa5f f38c 	uxtb.w	r3, ip
 80280a8:	930c      	str	r3, [sp, #48]	@ 0x30
 80280aa:	e7a8      	b.n	8027ffe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80280ac:	f8b8 e000 	ldrh.w	lr, [r8]
 80280b0:	fa1f fa83 	uxth.w	sl, r3
 80280b4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80280b8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80280bc:	43db      	mvns	r3, r3
 80280be:	b2db      	uxtb	r3, r3
 80280c0:	fb11 f10a 	smulbb	r1, r1, sl
 80280c4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80280c8:	fb00 1003 	mla	r0, r0, r3, r1
 80280cc:	b2d2      	uxtb	r2, r2
 80280ce:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80280d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80280d6:	fa5f fe8e 	uxtb.w	lr, lr
 80280da:	fb12 f20a 	smulbb	r2, r2, sl
 80280de:	fb0e 2203 	mla	r2, lr, r3, r2
 80280e2:	fa5f fc8c 	uxtb.w	ip, ip
 80280e6:	b280      	uxth	r0, r0
 80280e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80280ec:	b292      	uxth	r2, r2
 80280ee:	fb1c fc0a 	smulbb	ip, ip, sl
 80280f2:	fb01 cc03 	mla	ip, r1, r3, ip
 80280f6:	1c43      	adds	r3, r0, #1
 80280f8:	1c51      	adds	r1, r2, #1
 80280fa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80280fe:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028102:	fa1f fc8c 	uxth.w	ip, ip
 8028106:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802810a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802810e:	4308      	orrs	r0, r1
 8028110:	f10c 0101 	add.w	r1, ip, #1
 8028114:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028118:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802811c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8028120:	ea40 000c 	orr.w	r0, r0, ip
 8028124:	f8a8 0000 	strh.w	r0, [r8]
 8028128:	e7a1      	b.n	802806e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802812a:	b017      	add	sp, #92	@ 0x5c
 802812c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028130 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028134:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8028138:	2d00      	cmp	r5, #0
 802813a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802813e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8028142:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8028146:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802814a:	fb05 0e03 	mla	lr, r5, r3, r0
 802814e:	f2c0 80b0 	blt.w	80282b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028152:	45a9      	cmp	r9, r5
 8028154:	f340 80ad 	ble.w	80282b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028158:	2800      	cmp	r0, #0
 802815a:	f2c0 80a8 	blt.w	80282ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802815e:	4580      	cmp	r8, r0
 8028160:	f340 80a5 	ble.w	80282ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028164:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028168:	f01e 0f01 	tst.w	lr, #1
 802816c:	5d16      	ldrb	r6, [r2, r4]
 802816e:	bf0c      	ite	eq
 8028170:	f006 060f 	andeq.w	r6, r6, #15
 8028174:	1136      	asrne	r6, r6, #4
 8028176:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802817a:	b2f6      	uxtb	r6, r6
 802817c:	1c44      	adds	r4, r0, #1
 802817e:	f100 809b 	bmi.w	80282b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028182:	45a0      	cmp	r8, r4
 8028184:	f340 8098 	ble.w	80282b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028188:	2f00      	cmp	r7, #0
 802818a:	f000 8097 	beq.w	80282bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802818e:	f10e 0a01 	add.w	sl, lr, #1
 8028192:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028196:	f01a 0f01 	tst.w	sl, #1
 802819a:	5d14      	ldrb	r4, [r2, r4]
 802819c:	bf0c      	ite	eq
 802819e:	f004 040f 	andeq.w	r4, r4, #15
 80281a2:	1124      	asrne	r4, r4, #4
 80281a4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80281a8:	b2e4      	uxtb	r4, r4
 80281aa:	3501      	adds	r5, #1
 80281ac:	f100 808a 	bmi.w	80282c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80281b0:	45a9      	cmp	r9, r5
 80281b2:	f340 8087 	ble.w	80282c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80281b6:	f1bc 0f00 	cmp.w	ip, #0
 80281ba:	f000 8086 	beq.w	80282ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80281be:	2800      	cmp	r0, #0
 80281c0:	db7e      	blt.n	80282c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80281c2:	4580      	cmp	r8, r0
 80281c4:	dd7c      	ble.n	80282c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80281c6:	eb03 090e 	add.w	r9, r3, lr
 80281ca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80281ce:	f019 0f01 	tst.w	r9, #1
 80281d2:	5d55      	ldrb	r5, [r2, r5]
 80281d4:	bf0c      	ite	eq
 80281d6:	f005 050f 	andeq.w	r5, r5, #15
 80281da:	112d      	asrne	r5, r5, #4
 80281dc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80281e0:	b2ed      	uxtb	r5, r5
 80281e2:	3001      	adds	r0, #1
 80281e4:	d474      	bmi.n	80282d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80281e6:	4580      	cmp	r8, r0
 80281e8:	dd72      	ble.n	80282d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80281ea:	2f00      	cmp	r7, #0
 80281ec:	d072      	beq.n	80282d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80281ee:	3301      	adds	r3, #1
 80281f0:	449e      	add	lr, r3
 80281f2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80281f6:	f01e 0f01 	tst.w	lr, #1
 80281fa:	5cd0      	ldrb	r0, [r2, r3]
 80281fc:	bf0c      	ite	eq
 80281fe:	f000 000f 	andeq.w	r0, r0, #15
 8028202:	1100      	asrne	r0, r0, #4
 8028204:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028208:	b2c3      	uxtb	r3, r0
 802820a:	b2ba      	uxth	r2, r7
 802820c:	fa1f fc8c 	uxth.w	ip, ip
 8028210:	fb02 f00c 	mul.w	r0, r2, ip
 8028214:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028218:	0112      	lsls	r2, r2, #4
 802821a:	fa1f fc8c 	uxth.w	ip, ip
 802821e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8028222:	1a12      	subs	r2, r2, r0
 8028224:	eba7 070c 	sub.w	r7, r7, ip
 8028228:	b292      	uxth	r2, r2
 802822a:	b2bf      	uxth	r7, r7
 802822c:	4362      	muls	r2, r4
 802822e:	fb06 2207 	mla	r2, r6, r7, r2
 8028232:	fb0c 2505 	mla	r5, ip, r5, r2
 8028236:	fb00 5303 	mla	r3, r0, r3, r5
 802823a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802823e:	b3a3      	cbz	r3, 80282aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028240:	4a25      	ldr	r2, [pc, #148]	@ (80282d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028242:	880e      	ldrh	r6, [r1, #0]
 8028244:	6815      	ldr	r5, [r2, #0]
 8028246:	1234      	asrs	r4, r6, #8
 8028248:	b29a      	uxth	r2, r3
 802824a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802824e:	43db      	mvns	r3, r3
 8028250:	b2db      	uxtb	r3, r3
 8028252:	fb10 f002 	smulbb	r0, r0, r2
 8028256:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802825a:	fb04 0403 	mla	r4, r4, r3, r0
 802825e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028262:	10f0      	asrs	r0, r6, #3
 8028264:	b2ed      	uxtb	r5, r5
 8028266:	00f6      	lsls	r6, r6, #3
 8028268:	fb17 f702 	smulbb	r7, r7, r2
 802826c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8028270:	fb15 f202 	smulbb	r2, r5, r2
 8028274:	b2f6      	uxtb	r6, r6
 8028276:	b2a4      	uxth	r4, r4
 8028278:	fb00 7003 	mla	r0, r0, r3, r7
 802827c:	fb06 2303 	mla	r3, r6, r3, r2
 8028280:	b29a      	uxth	r2, r3
 8028282:	1c63      	adds	r3, r4, #1
 8028284:	b280      	uxth	r0, r0
 8028286:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802828a:	1c53      	adds	r3, r2, #1
 802828c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028290:	1c42      	adds	r2, r0, #1
 8028292:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028296:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802829a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802829e:	0940      	lsrs	r0, r0, #5
 80282a0:	4323      	orrs	r3, r4
 80282a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80282a6:	4303      	orrs	r3, r0
 80282a8:	800b      	strh	r3, [r1, #0]
 80282aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80282ae:	2600      	movs	r6, #0
 80282b0:	e764      	b.n	802817c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80282b2:	2400      	movs	r4, #0
 80282b4:	4626      	mov	r6, r4
 80282b6:	e778      	b.n	80281aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80282b8:	2400      	movs	r4, #0
 80282ba:	e776      	b.n	80281aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80282bc:	463c      	mov	r4, r7
 80282be:	e774      	b.n	80281aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80282c0:	2500      	movs	r5, #0
 80282c2:	e78e      	b.n	80281e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80282c4:	2300      	movs	r3, #0
 80282c6:	461d      	mov	r5, r3
 80282c8:	e79f      	b.n	802820a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80282ca:	4663      	mov	r3, ip
 80282cc:	4665      	mov	r5, ip
 80282ce:	e79c      	b.n	802820a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80282d0:	2300      	movs	r3, #0
 80282d2:	e79a      	b.n	802820a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80282d4:	463b      	mov	r3, r7
 80282d6:	e798      	b.n	802820a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80282d8:	20013f70 	.word	0x20013f70

080282dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80282dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80282e0:	b093      	sub	sp, #76	@ 0x4c
 80282e2:	461d      	mov	r5, r3
 80282e4:	920c      	str	r2, [sp, #48]	@ 0x30
 80282e6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80282e8:	9107      	str	r1, [sp, #28]
 80282ea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80282ee:	9011      	str	r0, [sp, #68]	@ 0x44
 80282f0:	6850      	ldr	r0, [r2, #4]
 80282f2:	6812      	ldr	r2, [r2, #0]
 80282f4:	fb00 1303 	mla	r3, r0, r3, r1
 80282f8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80282fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80282fe:	689b      	ldr	r3, [r3, #8]
 8028300:	3301      	adds	r3, #1
 8028302:	f023 0301 	bic.w	r3, r3, #1
 8028306:	9306      	str	r3, [sp, #24]
 8028308:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802830a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802830e:	681f      	ldr	r7, [r3, #0]
 8028310:	9b07      	ldr	r3, [sp, #28]
 8028312:	2b00      	cmp	r3, #0
 8028314:	dc03      	bgt.n	802831e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028316:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8028318:	2b00      	cmp	r3, #0
 802831a:	f340 8267 	ble.w	80287ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802831e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8028320:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028324:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028328:	1e48      	subs	r0, r1, #1
 802832a:	f102 3cff 	add.w	ip, r2, #4294967295
 802832e:	2d00      	cmp	r5, #0
 8028330:	f340 80b8 	ble.w	80284a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028334:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028338:	ea4f 4326 	mov.w	r3, r6, asr #16
 802833c:	d406      	bmi.n	802834c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802833e:	4586      	cmp	lr, r0
 8028340:	da04      	bge.n	802834c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028342:	2b00      	cmp	r3, #0
 8028344:	db02      	blt.n	802834c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028346:	4563      	cmp	r3, ip
 8028348:	f2c0 80ad 	blt.w	80284a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802834c:	f11e 0e01 	adds.w	lr, lr, #1
 8028350:	f100 80a0 	bmi.w	8028494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028354:	4571      	cmp	r1, lr
 8028356:	f2c0 809d 	blt.w	8028494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802835a:	3301      	adds	r3, #1
 802835c:	f100 809a 	bmi.w	8028494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028360:	429a      	cmp	r2, r3
 8028362:	f2c0 8097 	blt.w	8028494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028366:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802836a:	9509      	str	r5, [sp, #36]	@ 0x24
 802836c:	46c8      	mov	r8, r9
 802836e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028370:	2b00      	cmp	r3, #0
 8028372:	f340 80b6 	ble.w	80284e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028376:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802837a:	9308      	str	r3, [sp, #32]
 802837c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802837e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028382:	1423      	asrs	r3, r4, #16
 8028384:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028388:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802838c:	f100 813e 	bmi.w	802860c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028390:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028394:	455b      	cmp	r3, fp
 8028396:	f280 8139 	bge.w	802860c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802839a:	2800      	cmp	r0, #0
 802839c:	f2c0 8136 	blt.w	802860c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80283a0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80283a4:	4558      	cmp	r0, fp
 80283a6:	f280 8131 	bge.w	802860c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80283aa:	9a06      	ldr	r2, [sp, #24]
 80283ac:	fb00 3302 	mla	r3, r0, r2, r3
 80283b0:	0858      	lsrs	r0, r3, #1
 80283b2:	07da      	lsls	r2, r3, #31
 80283b4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80283b8:	9a08      	ldr	r2, [sp, #32]
 80283ba:	bf54      	ite	pl
 80283bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80283c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80283c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80283c8:	fa5f fc8c 	uxtb.w	ip, ip
 80283cc:	2a00      	cmp	r2, #0
 80283ce:	f000 80cb 	beq.w	8028568 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80283d2:	1c58      	adds	r0, r3, #1
 80283d4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80283d8:	07c0      	lsls	r0, r0, #31
 80283da:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80283de:	bf54      	ite	pl
 80283e0:	f00e 0e0f 	andpl.w	lr, lr, #15
 80283e4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80283e8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80283ec:	fa5f fe8e 	uxtb.w	lr, lr
 80283f0:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80283f4:	b1b9      	cbz	r1, 8028426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80283f6:	4453      	add	r3, sl
 80283f8:	0858      	lsrs	r0, r3, #1
 80283fa:	07da      	lsls	r2, r3, #31
 80283fc:	5c38      	ldrb	r0, [r7, r0]
 80283fe:	bf54      	ite	pl
 8028400:	f000 000f 	andpl.w	r0, r0, #15
 8028404:	1100      	asrmi	r0, r0, #4
 8028406:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802840a:	b2c0      	uxtb	r0, r0
 802840c:	900a      	str	r0, [sp, #40]	@ 0x28
 802840e:	1c58      	adds	r0, r3, #1
 8028410:	0843      	lsrs	r3, r0, #1
 8028412:	07c2      	lsls	r2, r0, #31
 8028414:	5cfb      	ldrb	r3, [r7, r3]
 8028416:	bf54      	ite	pl
 8028418:	f003 030f 	andpl.w	r3, r3, #15
 802841c:	111b      	asrmi	r3, r3, #4
 802841e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028422:	b2db      	uxtb	r3, r3
 8028424:	930e      	str	r3, [sp, #56]	@ 0x38
 8028426:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802842a:	b289      	uxth	r1, r1
 802842c:	fb02 f301 	mul.w	r3, r2, r1
 8028430:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028434:	0112      	lsls	r2, r2, #4
 8028436:	b289      	uxth	r1, r1
 8028438:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802843c:	1a40      	subs	r0, r0, r1
 802843e:	fa1f fe80 	uxth.w	lr, r0
 8028442:	1ad2      	subs	r2, r2, r3
 8028444:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8028446:	b292      	uxth	r2, r2
 8028448:	4342      	muls	r2, r0
 802844a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802844e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8028450:	fb01 c102 	mla	r1, r1, r2, ip
 8028454:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8028456:	fb03 1302 	mla	r3, r3, r2, r1
 802845a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802845e:	2bff      	cmp	r3, #255	@ 0xff
 8028460:	f040 8093 	bne.w	802858a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028464:	4bbe      	ldr	r3, [pc, #760]	@ (8028760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028466:	681a      	ldr	r2, [r3, #0]
 8028468:	4bbe      	ldr	r3, [pc, #760]	@ (8028764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802846a:	0951      	lsrs	r1, r2, #5
 802846c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028470:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8028474:	430b      	orrs	r3, r1
 8028476:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802847a:	4313      	orrs	r3, r2
 802847c:	f8a8 3000 	strh.w	r3, [r8]
 8028480:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8028482:	441c      	add	r4, r3
 8028484:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028486:	441e      	add	r6, r3
 8028488:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802848a:	3b01      	subs	r3, #1
 802848c:	f108 0802 	add.w	r8, r8, #2
 8028490:	9309      	str	r3, [sp, #36]	@ 0x24
 8028492:	e76c      	b.n	802836e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028494:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8028496:	441c      	add	r4, r3
 8028498:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802849a:	3d01      	subs	r5, #1
 802849c:	441e      	add	r6, r3
 802849e:	f109 0902 	add.w	r9, r9, #2
 80284a2:	e744      	b.n	802832e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80284a4:	d021      	beq.n	80284ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80284a6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80284a8:	1e6b      	subs	r3, r5, #1
 80284aa:	fb00 4003 	mla	r0, r0, r3, r4
 80284ae:	1400      	asrs	r0, r0, #16
 80284b0:	f53f af59 	bmi.w	8028366 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80284b4:	3901      	subs	r1, #1
 80284b6:	4288      	cmp	r0, r1
 80284b8:	f6bf af55 	bge.w	8028366 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80284bc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80284be:	fb01 6303 	mla	r3, r1, r3, r6
 80284c2:	141b      	asrs	r3, r3, #16
 80284c4:	f53f af4f 	bmi.w	8028366 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80284c8:	3a01      	subs	r2, #1
 80284ca:	4293      	cmp	r3, r2
 80284cc:	f6bf af4b 	bge.w	8028366 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80284d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80284d4:	9308      	str	r3, [sp, #32]
 80284d6:	46a8      	mov	r8, r5
 80284d8:	46ce      	mov	lr, r9
 80284da:	f1b8 0f00 	cmp.w	r8, #0
 80284de:	f300 80b5 	bgt.w	802864c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80284e2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80284e6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80284ea:	9b07      	ldr	r3, [sp, #28]
 80284ec:	2b00      	cmp	r3, #0
 80284ee:	f340 817d 	ble.w	80287ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80284f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80284f6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80284fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80284fe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8028500:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028504:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028508:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802850c:	eef0 6a62 	vmov.f32	s13, s5
 8028510:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028514:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028518:	ee77 2a62 	vsub.f32	s5, s14, s5
 802851c:	ee16 4a90 	vmov	r4, s13
 8028520:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028524:	eef0 6a43 	vmov.f32	s13, s6
 8028528:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802852c:	ee12 2a90 	vmov	r2, s5
 8028530:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028534:	fb92 f3f3 	sdiv	r3, r2, r3
 8028538:	ee13 2a10 	vmov	r2, s6
 802853c:	931f      	str	r3, [sp, #124]	@ 0x7c
 802853e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8028540:	fb92 f3f3 	sdiv	r3, r2, r3
 8028544:	9320      	str	r3, [sp, #128]	@ 0x80
 8028546:	9b07      	ldr	r3, [sp, #28]
 8028548:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802854a:	3b01      	subs	r3, #1
 802854c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028550:	9307      	str	r3, [sp, #28]
 8028552:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8028554:	ee16 6a90 	vmov	r6, s13
 8028558:	bf14      	ite	ne
 802855a:	461d      	movne	r5, r3
 802855c:	4615      	moveq	r5, r2
 802855e:	eeb0 3a67 	vmov.f32	s6, s15
 8028562:	eef0 2a47 	vmov.f32	s5, s14
 8028566:	e6d3      	b.n	8028310 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028568:	2900      	cmp	r1, #0
 802856a:	f43f af5c 	beq.w	8028426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802856e:	eb0a 0003 	add.w	r0, sl, r3
 8028572:	0843      	lsrs	r3, r0, #1
 8028574:	07c0      	lsls	r0, r0, #31
 8028576:	5cfb      	ldrb	r3, [r7, r3]
 8028578:	bf54      	ite	pl
 802857a:	f003 030f 	andpl.w	r3, r3, #15
 802857e:	111b      	asrmi	r3, r3, #4
 8028580:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028584:	b2db      	uxtb	r3, r3
 8028586:	930a      	str	r3, [sp, #40]	@ 0x28
 8028588:	e74d      	b.n	8028426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802858a:	2b00      	cmp	r3, #0
 802858c:	f43f af78 	beq.w	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028590:	4a73      	ldr	r2, [pc, #460]	@ (8028760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028592:	f8b8 c000 	ldrh.w	ip, [r8]
 8028596:	6810      	ldr	r0, [r2, #0]
 8028598:	fa1f fe83 	uxth.w	lr, r3
 802859c:	ea4f 212c 	mov.w	r1, ip, asr #8
 80285a0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80285a4:	43db      	mvns	r3, r3
 80285a6:	b2db      	uxtb	r3, r3
 80285a8:	fb12 f20e 	smulbb	r2, r2, lr
 80285ac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80285b0:	fb01 2103 	mla	r1, r1, r3, r2
 80285b4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80285b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80285bc:	b2c0      	uxtb	r0, r0
 80285be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80285c2:	fb1b fb0e 	smulbb	fp, fp, lr
 80285c6:	b289      	uxth	r1, r1
 80285c8:	fb10 fe0e 	smulbb	lr, r0, lr
 80285cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80285d0:	fa5f fc8c 	uxtb.w	ip, ip
 80285d4:	fb02 b203 	mla	r2, r2, r3, fp
 80285d8:	1c48      	adds	r0, r1, #1
 80285da:	fb0c e303 	mla	r3, ip, r3, lr
 80285de:	b292      	uxth	r2, r2
 80285e0:	b29b      	uxth	r3, r3
 80285e2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80285e6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 80285ea:	f102 0b01 	add.w	fp, r2, #1
 80285ee:	1c59      	adds	r1, r3, #1
 80285f0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80285f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80285f8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80285fc:	0952      	lsrs	r2, r2, #5
 80285fe:	4301      	orrs	r1, r0
 8028600:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028604:	4311      	orrs	r1, r2
 8028606:	f8a8 1000 	strh.w	r1, [r8]
 802860a:	e739      	b.n	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802860c:	f113 0b01 	adds.w	fp, r3, #1
 8028610:	f53f af36 	bmi.w	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028614:	45dc      	cmp	ip, fp
 8028616:	f6ff af33 	blt.w	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802861a:	f110 0b01 	adds.w	fp, r0, #1
 802861e:	f53f af2f 	bmi.w	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028622:	45de      	cmp	lr, fp
 8028624:	f6ff af2c 	blt.w	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028628:	9a08      	ldr	r2, [sp, #32]
 802862a:	9302      	str	r3, [sp, #8]
 802862c:	fa0f f38e 	sxth.w	r3, lr
 8028630:	9301      	str	r3, [sp, #4]
 8028632:	fa0f f38c 	sxth.w	r3, ip
 8028636:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802863a:	9105      	str	r1, [sp, #20]
 802863c:	9300      	str	r3, [sp, #0]
 802863e:	463a      	mov	r2, r7
 8028640:	4653      	mov	r3, sl
 8028642:	4641      	mov	r1, r8
 8028644:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028646:	f7ff fd73 	bl	8028130 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802864a:	e719      	b.n	8028480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802864c:	9906      	ldr	r1, [sp, #24]
 802864e:	1422      	asrs	r2, r4, #16
 8028650:	1433      	asrs	r3, r6, #16
 8028652:	fb01 2303 	mla	r3, r1, r3, r2
 8028656:	085a      	lsrs	r2, r3, #1
 8028658:	07d9      	lsls	r1, r3, #31
 802865a:	5cba      	ldrb	r2, [r7, r2]
 802865c:	bf54      	ite	pl
 802865e:	f002 020f 	andpl.w	r2, r2, #15
 8028662:	1112      	asrmi	r2, r2, #4
 8028664:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028668:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802866c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028670:	b2d2      	uxtb	r2, r2
 8028672:	2800      	cmp	r0, #0
 8028674:	d062      	beq.n	802873c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028676:	f103 0a01 	add.w	sl, r3, #1
 802867a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802867e:	f01a 0f01 	tst.w	sl, #1
 8028682:	5c79      	ldrb	r1, [r7, r1]
 8028684:	bf0c      	ite	eq
 8028686:	f001 010f 	andeq.w	r1, r1, #15
 802868a:	1109      	asrne	r1, r1, #4
 802868c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028690:	b2c9      	uxtb	r1, r1
 8028692:	910f      	str	r1, [sp, #60]	@ 0x3c
 8028694:	f1bc 0f00 	cmp.w	ip, #0
 8028698:	d019      	beq.n	80286ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802869a:	9908      	ldr	r1, [sp, #32]
 802869c:	440b      	add	r3, r1
 802869e:	0859      	lsrs	r1, r3, #1
 80286a0:	f013 0f01 	tst.w	r3, #1
 80286a4:	5c79      	ldrb	r1, [r7, r1]
 80286a6:	bf0c      	ite	eq
 80286a8:	f001 010f 	andeq.w	r1, r1, #15
 80286ac:	1109      	asrne	r1, r1, #4
 80286ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80286b2:	b2c9      	uxtb	r1, r1
 80286b4:	3301      	adds	r3, #1
 80286b6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80286b8:	0859      	lsrs	r1, r3, #1
 80286ba:	07db      	lsls	r3, r3, #31
 80286bc:	5c79      	ldrb	r1, [r7, r1]
 80286be:	bf54      	ite	pl
 80286c0:	f001 010f 	andpl.w	r1, r1, #15
 80286c4:	1109      	asrmi	r1, r1, #4
 80286c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80286ca:	b2c9      	uxtb	r1, r1
 80286cc:	9110      	str	r1, [sp, #64]	@ 0x40
 80286ce:	b280      	uxth	r0, r0
 80286d0:	fa1f fc8c 	uxth.w	ip, ip
 80286d4:	fb00 f30c 	mul.w	r3, r0, ip
 80286d8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80286dc:	0100      	lsls	r0, r0, #4
 80286de:	fa1f fc8c 	uxth.w	ip, ip
 80286e2:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80286e6:	eba1 010c 	sub.w	r1, r1, ip
 80286ea:	fa1f fa81 	uxth.w	sl, r1
 80286ee:	1ac0      	subs	r0, r0, r3
 80286f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80286f2:	b280      	uxth	r0, r0
 80286f4:	4348      	muls	r0, r1
 80286f6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80286f8:	fb02 020a 	mla	r2, r2, sl, r0
 80286fc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028700:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8028702:	fb03 c302 	mla	r3, r3, r2, ip
 8028706:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802870a:	2bff      	cmp	r3, #255	@ 0xff
 802870c:	d12c      	bne.n	8028768 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802870e:	4b14      	ldr	r3, [pc, #80]	@ (8028760 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028710:	681a      	ldr	r2, [r3, #0]
 8028712:	4b14      	ldr	r3, [pc, #80]	@ (8028764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028714:	0951      	lsrs	r1, r2, #5
 8028716:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802871a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802871e:	430b      	orrs	r3, r1
 8028720:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028724:	4313      	orrs	r3, r2
 8028726:	f8ae 3000 	strh.w	r3, [lr]
 802872a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802872c:	441c      	add	r4, r3
 802872e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8028730:	f10e 0e02 	add.w	lr, lr, #2
 8028734:	441e      	add	r6, r3
 8028736:	f108 38ff 	add.w	r8, r8, #4294967295
 802873a:	e6ce      	b.n	80284da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802873c:	f1bc 0f00 	cmp.w	ip, #0
 8028740:	d0c5      	beq.n	80286ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028742:	9908      	ldr	r1, [sp, #32]
 8028744:	440b      	add	r3, r1
 8028746:	0859      	lsrs	r1, r3, #1
 8028748:	07db      	lsls	r3, r3, #31
 802874a:	5c79      	ldrb	r1, [r7, r1]
 802874c:	bf54      	ite	pl
 802874e:	f001 010f 	andpl.w	r1, r1, #15
 8028752:	1109      	asrmi	r1, r1, #4
 8028754:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028758:	b2c9      	uxtb	r1, r1
 802875a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802875c:	e7b7      	b.n	80286ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802875e:	bf00      	nop
 8028760:	20013f70 	.word	0x20013f70
 8028764:	fffff800 	.word	0xfffff800
 8028768:	2b00      	cmp	r3, #0
 802876a:	d0de      	beq.n	802872a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802876c:	4a21      	ldr	r2, [pc, #132]	@ (80287f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802876e:	f8be c000 	ldrh.w	ip, [lr]
 8028772:	6810      	ldr	r0, [r2, #0]
 8028774:	fa1f fa83 	uxth.w	sl, r3
 8028778:	ea4f 212c 	mov.w	r1, ip, asr #8
 802877c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028780:	43db      	mvns	r3, r3
 8028782:	b2db      	uxtb	r3, r3
 8028784:	fb12 f20a 	smulbb	r2, r2, sl
 8028788:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802878c:	fb01 2103 	mla	r1, r1, r3, r2
 8028790:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028794:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028798:	b2c0      	uxtb	r0, r0
 802879a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802879e:	fa5f fc8c 	uxtb.w	ip, ip
 80287a2:	fb10 f00a 	smulbb	r0, r0, sl
 80287a6:	fb0c 0003 	mla	r0, ip, r3, r0
 80287aa:	b289      	uxth	r1, r1
 80287ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80287b0:	b280      	uxth	r0, r0
 80287b2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80287b6:	fb02 b203 	mla	r2, r2, r3, fp
 80287ba:	1c4b      	adds	r3, r1, #1
 80287bc:	f100 0b01 	add.w	fp, r0, #1
 80287c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80287c4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80287c8:	b292      	uxth	r2, r2
 80287ca:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80287ce:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80287d2:	ea4b 0101 	orr.w	r1, fp, r1
 80287d6:	f102 0b01 	add.w	fp, r2, #1
 80287da:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80287de:	0952      	lsrs	r2, r2, #5
 80287e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80287e4:	4311      	orrs	r1, r2
 80287e6:	f8ae 1000 	strh.w	r1, [lr]
 80287ea:	e79e      	b.n	802872a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80287ec:	b013      	add	sp, #76	@ 0x4c
 80287ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80287f2:	bf00      	nop
 80287f4:	20013f70 	.word	0x20013f70

080287f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80287f8:	b570      	push	{r4, r5, r6, lr}
 80287fa:	1208      	asrs	r0, r1, #8
 80287fc:	b29e      	uxth	r6, r3
 80287fe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8028802:	1213      	asrs	r3, r2, #8
 8028804:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028808:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802880c:	fb13 f305 	smulbb	r3, r3, r5
 8028810:	fb10 f006 	smulbb	r0, r0, r6
 8028814:	4418      	add	r0, r3
 8028816:	10cc      	asrs	r4, r1, #3
 8028818:	10d3      	asrs	r3, r2, #3
 802881a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802881e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8028822:	fb13 f305 	smulbb	r3, r3, r5
 8028826:	fb14 f406 	smulbb	r4, r4, r6
 802882a:	00c9      	lsls	r1, r1, #3
 802882c:	00d2      	lsls	r2, r2, #3
 802882e:	441c      	add	r4, r3
 8028830:	b2d2      	uxtb	r2, r2
 8028832:	b2cb      	uxtb	r3, r1
 8028834:	fb12 f205 	smulbb	r2, r2, r5
 8028838:	b280      	uxth	r0, r0
 802883a:	fb13 f306 	smulbb	r3, r3, r6
 802883e:	4413      	add	r3, r2
 8028840:	1c42      	adds	r2, r0, #1
 8028842:	b29b      	uxth	r3, r3
 8028844:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028848:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802884c:	1c58      	adds	r0, r3, #1
 802884e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028852:	b2a4      	uxth	r4, r4
 8028854:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028858:	4310      	orrs	r0, r2
 802885a:	1c62      	adds	r2, r4, #1
 802885c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8028860:	0964      	lsrs	r4, r4, #5
 8028862:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8028866:	4320      	orrs	r0, r4
 8028868:	bd70      	pop	{r4, r5, r6, pc}
	...

0802886c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802886c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028870:	b08f      	sub	sp, #60	@ 0x3c
 8028872:	461c      	mov	r4, r3
 8028874:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8028878:	9004      	str	r0, [sp, #16]
 802887a:	460d      	mov	r5, r1
 802887c:	4616      	mov	r6, r2
 802887e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028880:	2f00      	cmp	r7, #0
 8028882:	f000 80f6 	beq.w	8028a72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8028886:	6820      	ldr	r0, [r4, #0]
 8028888:	6861      	ldr	r1, [r4, #4]
 802888a:	aa0a      	add	r2, sp, #40	@ 0x28
 802888c:	c203      	stmia	r2!, {r0, r1}
 802888e:	6818      	ldr	r0, [r3, #0]
 8028890:	6859      	ldr	r1, [r3, #4]
 8028892:	aa0c      	add	r2, sp, #48	@ 0x30
 8028894:	c203      	stmia	r2!, {r0, r1}
 8028896:	a80a      	add	r0, sp, #40	@ 0x28
 8028898:	f7ee fb74 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802889c:	4621      	mov	r1, r4
 802889e:	a80c      	add	r0, sp, #48	@ 0x30
 80288a0:	f7ee fb98 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80288a4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80288a8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80288ac:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80288b0:	f002 0301 	and.w	r3, r2, #1
 80288b4:	9306      	str	r3, [sp, #24]
 80288b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80288ba:	f003 0101 	and.w	r1, r3, #1
 80288be:	9105      	str	r1, [sp, #20]
 80288c0:	9805      	ldr	r0, [sp, #20]
 80288c2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80288c6:	4403      	add	r3, r0
 80288c8:	fb01 2303 	mla	r3, r1, r3, r2
 80288cc:	f04f 0802 	mov.w	r8, #2
 80288d0:	fb93 f3f8 	sdiv	r3, r3, r8
 80288d4:	441d      	add	r5, r3
 80288d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80288da:	441a      	add	r2, r3
 80288dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80288e0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80288e4:	4419      	add	r1, r3
 80288e6:	4b64      	ldr	r3, [pc, #400]	@ (8028a78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80288e8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80288ec:	6818      	ldr	r0, [r3, #0]
 80288ee:	6803      	ldr	r3, [r0, #0]
 80288f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80288f2:	4798      	blx	r3
 80288f4:	4a61      	ldr	r2, [pc, #388]	@ (8028a7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80288f6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80288fa:	8813      	ldrh	r3, [r2, #0]
 80288fc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8028900:	2fff      	cmp	r7, #255	@ 0xff
 8028902:	fb03 a404 	mla	r4, r3, r4, sl
 8028906:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802890a:	f106 0604 	add.w	r6, r6, #4
 802890e:	4611      	mov	r1, r2
 8028910:	fb03 fb0b 	mul.w	fp, r3, fp
 8028914:	d06b      	beq.n	80289ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8028916:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802891a:	9303      	str	r3, [sp, #12]
 802891c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8028920:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8028924:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8028928:	9b07      	ldr	r3, [sp, #28]
 802892a:	42a3      	cmp	r3, r4
 802892c:	f240 809c 	bls.w	8028a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8028930:	9b06      	ldr	r3, [sp, #24]
 8028932:	2b00      	cmp	r3, #0
 8028934:	d039      	beq.n	80289aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8028936:	782b      	ldrb	r3, [r5, #0]
 8028938:	8822      	ldrh	r2, [r4, #0]
 802893a:	9804      	ldr	r0, [sp, #16]
 802893c:	f003 030f 	and.w	r3, r3, #15
 8028940:	f105 0801 	add.w	r8, r5, #1
 8028944:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8028948:	9b03      	ldr	r3, [sp, #12]
 802894a:	9300      	str	r3, [sp, #0]
 802894c:	463b      	mov	r3, r7
 802894e:	f7ff ff53 	bl	80287f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8028952:	f824 0b02 	strh.w	r0, [r4], #2
 8028956:	f109 3bff 	add.w	fp, r9, #4294967295
 802895a:	f1bb 0f01 	cmp.w	fp, #1
 802895e:	46a2      	mov	sl, r4
 8028960:	f104 0404 	add.w	r4, r4, #4
 8028964:	dd24      	ble.n	80289b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8028966:	f898 3000 	ldrb.w	r3, [r8]
 802896a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802896e:	9804      	ldr	r0, [sp, #16]
 8028970:	091b      	lsrs	r3, r3, #4
 8028972:	f1ab 0b02 	sub.w	fp, fp, #2
 8028976:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802897a:	9b03      	ldr	r3, [sp, #12]
 802897c:	9300      	str	r3, [sp, #0]
 802897e:	463b      	mov	r3, r7
 8028980:	f7ff ff3a 	bl	80287f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8028984:	f824 0c04 	strh.w	r0, [r4, #-4]
 8028988:	f818 3b01 	ldrb.w	r3, [r8], #1
 802898c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8028990:	9804      	ldr	r0, [sp, #16]
 8028992:	f003 030f 	and.w	r3, r3, #15
 8028996:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802899a:	9b03      	ldr	r3, [sp, #12]
 802899c:	9300      	str	r3, [sp, #0]
 802899e:	463b      	mov	r3, r7
 80289a0:	f7ff ff2a 	bl	80287f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80289a4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80289a8:	e7d7      	b.n	802895a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80289aa:	46a8      	mov	r8, r5
 80289ac:	46cb      	mov	fp, r9
 80289ae:	e7d4      	b.n	802895a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80289b0:	d10e      	bne.n	80289d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80289b2:	f898 3000 	ldrb.w	r3, [r8]
 80289b6:	f8ba 2000 	ldrh.w	r2, [sl]
 80289ba:	9804      	ldr	r0, [sp, #16]
 80289bc:	091b      	lsrs	r3, r3, #4
 80289be:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80289c2:	9b03      	ldr	r3, [sp, #12]
 80289c4:	9300      	str	r3, [sp, #0]
 80289c6:	463b      	mov	r3, r7
 80289c8:	f7ff ff16 	bl	80287f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80289cc:	f82a 0b02 	strh.w	r0, [sl], #2
 80289d0:	9b08      	ldr	r3, [sp, #32]
 80289d2:	9a05      	ldr	r2, [sp, #20]
 80289d4:	881c      	ldrh	r4, [r3, #0]
 80289d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80289da:	eba4 0409 	sub.w	r4, r4, r9
 80289de:	4413      	add	r3, r2
 80289e0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80289e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80289e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80289ea:	441d      	add	r5, r3
 80289ec:	e79c      	b.n	8028928 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80289ee:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80289f2:	45a3      	cmp	fp, r4
 80289f4:	d938      	bls.n	8028a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80289f6:	9b06      	ldr	r3, [sp, #24]
 80289f8:	b1f3      	cbz	r3, 8028a38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80289fa:	782b      	ldrb	r3, [r5, #0]
 80289fc:	f003 030f 	and.w	r3, r3, #15
 8028a00:	1c6a      	adds	r2, r5, #1
 8028a02:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8028a06:	8023      	strh	r3, [r4, #0]
 8028a08:	f109 30ff 	add.w	r0, r9, #4294967295
 8028a0c:	3402      	adds	r4, #2
 8028a0e:	2801      	cmp	r0, #1
 8028a10:	4623      	mov	r3, r4
 8028a12:	f104 0404 	add.w	r4, r4, #4
 8028a16:	dd12      	ble.n	8028a3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8028a18:	7813      	ldrb	r3, [r2, #0]
 8028a1a:	091b      	lsrs	r3, r3, #4
 8028a1c:	3802      	subs	r0, #2
 8028a1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8028a22:	f824 3c04 	strh.w	r3, [r4, #-4]
 8028a26:	f812 3b01 	ldrb.w	r3, [r2], #1
 8028a2a:	f003 030f 	and.w	r3, r3, #15
 8028a2e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8028a32:	f824 3c02 	strh.w	r3, [r4, #-2]
 8028a36:	e7ea      	b.n	8028a0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8028a38:	462a      	mov	r2, r5
 8028a3a:	4648      	mov	r0, r9
 8028a3c:	e7e7      	b.n	8028a0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8028a3e:	d106      	bne.n	8028a4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8028a40:	7812      	ldrb	r2, [r2, #0]
 8028a42:	0912      	lsrs	r2, r2, #4
 8028a44:	3302      	adds	r3, #2
 8028a46:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8028a4a:	f823 2c02 	strh.w	r2, [r3, #-2]
 8028a4e:	880c      	ldrh	r4, [r1, #0]
 8028a50:	9a05      	ldr	r2, [sp, #20]
 8028a52:	eba4 0409 	sub.w	r4, r4, r9
 8028a56:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8028a5a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028a5e:	4413      	add	r3, r2
 8028a60:	fb93 f3f8 	sdiv	r3, r3, r8
 8028a64:	441d      	add	r5, r3
 8028a66:	e7c4      	b.n	80289f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8028a68:	4b03      	ldr	r3, [pc, #12]	@ (8028a78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8028a6a:	6818      	ldr	r0, [r3, #0]
 8028a6c:	6803      	ldr	r3, [r0, #0]
 8028a6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028a70:	4798      	blx	r3
 8028a72:	b00f      	add	sp, #60	@ 0x3c
 8028a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028a78:	20013f60 	.word	0x20013f60
 8028a7c:	20013f5a 	.word	0x20013f5a

08028a80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8028a80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028a82:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8028a86:	2dff      	cmp	r5, #255	@ 0xff
 8028a88:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8028a8c:	d10c      	bne.n	8028aa8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8028a8e:	2bff      	cmp	r3, #255	@ 0xff
 8028a90:	d10a      	bne.n	8028aa8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8028a92:	4b25      	ldr	r3, [pc, #148]	@ (8028b28 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8028a94:	0948      	lsrs	r0, r1, #5
 8028a96:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8028a9a:	403b      	ands	r3, r7
 8028a9c:	4318      	orrs	r0, r3
 8028a9e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8028aa2:	4308      	orrs	r0, r1
 8028aa4:	b280      	uxth	r0, r0
 8028aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028aa8:	fb15 f503 	smulbb	r5, r5, r3
 8028aac:	b2ab      	uxth	r3, r5
 8028aae:	1c5d      	adds	r5, r3, #1
 8028ab0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8028ab4:	1214      	asrs	r4, r2, #8
 8028ab6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8028aba:	fa1f fc85 	uxth.w	ip, r5
 8028abe:	10d6      	asrs	r6, r2, #3
 8028ac0:	00d0      	lsls	r0, r2, #3
 8028ac2:	43ed      	mvns	r5, r5
 8028ac4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8028ac8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8028acc:	b2eb      	uxtb	r3, r5
 8028ace:	b2c0      	uxtb	r0, r0
 8028ad0:	fb12 f20c 	smulbb	r2, r2, ip
 8028ad4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8028ad8:	fb04 2403 	mla	r4, r4, r3, r2
 8028adc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8028ae0:	b2c8      	uxtb	r0, r1
 8028ae2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8028ae6:	b2fd      	uxtb	r5, r7
 8028ae8:	fb10 f00c 	smulbb	r0, r0, ip
 8028aec:	b2a4      	uxth	r4, r4
 8028aee:	fb02 0003 	mla	r0, r2, r3, r0
 8028af2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8028af6:	fb15 f50c 	smulbb	r5, r5, ip
 8028afa:	fb06 5503 	mla	r5, r6, r3, r5
 8028afe:	b283      	uxth	r3, r0
 8028b00:	1c60      	adds	r0, r4, #1
 8028b02:	b2ad      	uxth	r5, r5
 8028b04:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8028b08:	1c58      	adds	r0, r3, #1
 8028b0a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028b0e:	1c6b      	adds	r3, r5, #1
 8028b10:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028b14:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8028b18:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028b1c:	096d      	lsrs	r5, r5, #5
 8028b1e:	4320      	orrs	r0, r4
 8028b20:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028b24:	4328      	orrs	r0, r5
 8028b26:	e7be      	b.n	8028aa6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8028b28:	00fff800 	.word	0x00fff800

08028b2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8028b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028b30:	461c      	mov	r4, r3
 8028b32:	b08d      	sub	sp, #52	@ 0x34
 8028b34:	460d      	mov	r5, r1
 8028b36:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8028b38:	6861      	ldr	r1, [r4, #4]
 8028b3a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8028b3e:	4680      	mov	r8, r0
 8028b40:	6820      	ldr	r0, [r4, #0]
 8028b42:	4616      	mov	r6, r2
 8028b44:	aa08      	add	r2, sp, #32
 8028b46:	c203      	stmia	r2!, {r0, r1}
 8028b48:	6818      	ldr	r0, [r3, #0]
 8028b4a:	6859      	ldr	r1, [r3, #4]
 8028b4c:	aa0a      	add	r2, sp, #40	@ 0x28
 8028b4e:	c203      	stmia	r2!, {r0, r1}
 8028b50:	a808      	add	r0, sp, #32
 8028b52:	f7ee fa17 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028b56:	4621      	mov	r1, r4
 8028b58:	a80a      	add	r0, sp, #40	@ 0x28
 8028b5a:	f7ee fa3b 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028b5e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8028b62:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8028b66:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8028b6a:	f002 0301 	and.w	r3, r2, #1
 8028b6e:	9303      	str	r3, [sp, #12]
 8028b70:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8028b74:	f003 0101 	and.w	r1, r3, #1
 8028b78:	9102      	str	r1, [sp, #8]
 8028b7a:	9802      	ldr	r0, [sp, #8]
 8028b7c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8028b80:	4403      	add	r3, r0
 8028b82:	fb01 2303 	mla	r3, r1, r3, r2
 8028b86:	f04f 0a02 	mov.w	sl, #2
 8028b8a:	fb93 f3fa 	sdiv	r3, r3, sl
 8028b8e:	441d      	add	r5, r3
 8028b90:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8028b94:	441a      	add	r2, r3
 8028b96:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8028b9a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8028b9e:	4a3f      	ldr	r2, [pc, #252]	@ (8028c9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8028ba0:	9205      	str	r2, [sp, #20]
 8028ba2:	4419      	add	r1, r3
 8028ba4:	6810      	ldr	r0, [r2, #0]
 8028ba6:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8028baa:	6803      	ldr	r3, [r0, #0]
 8028bac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8028bae:	4798      	blx	r3
 8028bb0:	4b3b      	ldr	r3, [pc, #236]	@ (8028ca0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8028bb2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8028bb6:	8819      	ldrh	r1, [r3, #0]
 8028bb8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8028bbc:	fb01 c404 	mla	r4, r1, r4, ip
 8028bc0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8028bc4:	434f      	muls	r7, r1
 8028bc6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8028bca:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8028bce:	3604      	adds	r6, #4
 8028bd0:	9204      	str	r2, [sp, #16]
 8028bd2:	9b04      	ldr	r3, [sp, #16]
 8028bd4:	429c      	cmp	r4, r3
 8028bd6:	d258      	bcs.n	8028c8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8028bd8:	9b03      	ldr	r3, [sp, #12]
 8028bda:	2b00      	cmp	r3, #0
 8028bdc:	d034      	beq.n	8028c48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8028bde:	782b      	ldrb	r3, [r5, #0]
 8028be0:	f003 030f 	and.w	r3, r3, #15
 8028be4:	1c6f      	adds	r7, r5, #1
 8028be6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8028bea:	0e0b      	lsrs	r3, r1, #24
 8028bec:	d006      	beq.n	8028bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8028bee:	8822      	ldrh	r2, [r4, #0]
 8028bf0:	9300      	str	r3, [sp, #0]
 8028bf2:	4640      	mov	r0, r8
 8028bf4:	464b      	mov	r3, r9
 8028bf6:	f7ff ff43 	bl	8028a80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8028bfa:	8020      	strh	r0, [r4, #0]
 8028bfc:	3402      	adds	r4, #2
 8028bfe:	f10b 3aff 	add.w	sl, fp, #4294967295
 8028c02:	f1ba 0f01 	cmp.w	sl, #1
 8028c06:	dd22      	ble.n	8028c4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8028c08:	783b      	ldrb	r3, [r7, #0]
 8028c0a:	091b      	lsrs	r3, r3, #4
 8028c0c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8028c10:	0e0b      	lsrs	r3, r1, #24
 8028c12:	d006      	beq.n	8028c22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8028c14:	8822      	ldrh	r2, [r4, #0]
 8028c16:	9300      	str	r3, [sp, #0]
 8028c18:	4640      	mov	r0, r8
 8028c1a:	464b      	mov	r3, r9
 8028c1c:	f7ff ff30 	bl	8028a80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8028c20:	8020      	strh	r0, [r4, #0]
 8028c22:	f817 3b01 	ldrb.w	r3, [r7], #1
 8028c26:	f003 030f 	and.w	r3, r3, #15
 8028c2a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8028c2e:	0e0b      	lsrs	r3, r1, #24
 8028c30:	d006      	beq.n	8028c40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8028c32:	8862      	ldrh	r2, [r4, #2]
 8028c34:	9300      	str	r3, [sp, #0]
 8028c36:	4640      	mov	r0, r8
 8028c38:	464b      	mov	r3, r9
 8028c3a:	f7ff ff21 	bl	8028a80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8028c3e:	8060      	strh	r0, [r4, #2]
 8028c40:	3404      	adds	r4, #4
 8028c42:	f1aa 0a02 	sub.w	sl, sl, #2
 8028c46:	e7dc      	b.n	8028c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8028c48:	462f      	mov	r7, r5
 8028c4a:	46da      	mov	sl, fp
 8028c4c:	e7d9      	b.n	8028c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8028c4e:	d10d      	bne.n	8028c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8028c50:	783b      	ldrb	r3, [r7, #0]
 8028c52:	091b      	lsrs	r3, r3, #4
 8028c54:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8028c58:	0e0b      	lsrs	r3, r1, #24
 8028c5a:	d006      	beq.n	8028c6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8028c5c:	8822      	ldrh	r2, [r4, #0]
 8028c5e:	9300      	str	r3, [sp, #0]
 8028c60:	4640      	mov	r0, r8
 8028c62:	464b      	mov	r3, r9
 8028c64:	f7ff ff0c 	bl	8028a80 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8028c68:	8020      	strh	r0, [r4, #0]
 8028c6a:	3402      	adds	r4, #2
 8028c6c:	9b06      	ldr	r3, [sp, #24]
 8028c6e:	9a02      	ldr	r2, [sp, #8]
 8028c70:	881b      	ldrh	r3, [r3, #0]
 8028c72:	eba3 030b 	sub.w	r3, r3, fp
 8028c76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8028c7a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8028c7e:	4413      	add	r3, r2
 8028c80:	9a07      	ldr	r2, [sp, #28]
 8028c82:	fb93 f3f2 	sdiv	r3, r3, r2
 8028c86:	441d      	add	r5, r3
 8028c88:	e7a3      	b.n	8028bd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8028c8a:	9b05      	ldr	r3, [sp, #20]
 8028c8c:	6818      	ldr	r0, [r3, #0]
 8028c8e:	6803      	ldr	r3, [r0, #0]
 8028c90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028c92:	4798      	blx	r3
 8028c94:	b00d      	add	sp, #52	@ 0x34
 8028c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028c9a:	bf00      	nop
 8028c9c:	20013f60 	.word	0x20013f60
 8028ca0:	20013f5a 	.word	0x20013f5a

08028ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8028ca4:	b570      	push	{r4, r5, r6, lr}
 8028ca6:	1214      	asrs	r4, r2, #8
 8028ca8:	788d      	ldrb	r5, [r1, #2]
 8028caa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8028cae:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8028cb2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8028cb6:	fb15 f503 	smulbb	r5, r5, r3
 8028cba:	fb04 5506 	mla	r5, r4, r6, r5
 8028cbe:	10d0      	asrs	r0, r2, #3
 8028cc0:	784c      	ldrb	r4, [r1, #1]
 8028cc2:	7809      	ldrb	r1, [r1, #0]
 8028cc4:	00d2      	lsls	r2, r2, #3
 8028cc6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8028cca:	b2d2      	uxtb	r2, r2
 8028ccc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8028cd0:	fb14 f403 	smulbb	r4, r4, r3
 8028cd4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8028cd8:	fb11 f303 	smulbb	r3, r1, r3
 8028cdc:	fb00 4406 	mla	r4, r0, r6, r4
 8028ce0:	fb02 3306 	mla	r3, r2, r6, r3
 8028ce4:	b2ad      	uxth	r5, r5
 8028ce6:	b29b      	uxth	r3, r3
 8028ce8:	b2a4      	uxth	r4, r4
 8028cea:	1c68      	adds	r0, r5, #1
 8028cec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8028cf0:	1c62      	adds	r2, r4, #1
 8028cf2:	1c58      	adds	r0, r3, #1
 8028cf4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028cf8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8028cfc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8028d00:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028d04:	0964      	lsrs	r4, r4, #5
 8028d06:	4328      	orrs	r0, r5
 8028d08:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8028d0c:	4320      	orrs	r0, r4
 8028d0e:	bd70      	pop	{r4, r5, r6, pc}

08028d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8028d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028d14:	b08f      	sub	sp, #60	@ 0x3c
 8028d16:	461c      	mov	r4, r3
 8028d18:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8028d1c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8028d1e:	4682      	mov	sl, r0
 8028d20:	460e      	mov	r6, r1
 8028d22:	4615      	mov	r5, r2
 8028d24:	2f00      	cmp	r7, #0
 8028d26:	f000 8142 	beq.w	8028fae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8028d2a:	6820      	ldr	r0, [r4, #0]
 8028d2c:	6861      	ldr	r1, [r4, #4]
 8028d2e:	aa0a      	add	r2, sp, #40	@ 0x28
 8028d30:	c203      	stmia	r2!, {r0, r1}
 8028d32:	6818      	ldr	r0, [r3, #0]
 8028d34:	6859      	ldr	r1, [r3, #4]
 8028d36:	aa0c      	add	r2, sp, #48	@ 0x30
 8028d38:	c203      	stmia	r2!, {r0, r1}
 8028d3a:	a80a      	add	r0, sp, #40	@ 0x28
 8028d3c:	f7ee f922 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028d40:	4621      	mov	r1, r4
 8028d42:	a80c      	add	r0, sp, #48	@ 0x30
 8028d44:	f7ee f946 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028d48:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8028d4c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8028d50:	f002 0301 	and.w	r3, r2, #1
 8028d54:	9306      	str	r3, [sp, #24]
 8028d56:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028d5a:	f003 0101 	and.w	r1, r3, #1
 8028d5e:	9105      	str	r1, [sp, #20]
 8028d60:	9805      	ldr	r0, [sp, #20]
 8028d62:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8028d66:	4403      	add	r3, r0
 8028d68:	fb01 2303 	mla	r3, r1, r3, r2
 8028d6c:	f04f 0802 	mov.w	r8, #2
 8028d70:	fb93 f3f8 	sdiv	r3, r3, r8
 8028d74:	441e      	add	r6, r3
 8028d76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8028d7a:	441a      	add	r2, r3
 8028d7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8028d80:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8028d84:	4419      	add	r1, r3
 8028d86:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8028d8a:	9303      	str	r3, [sp, #12]
 8028d8c:	4b89      	ldr	r3, [pc, #548]	@ (8028fb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8028d8e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8028d92:	6818      	ldr	r0, [r3, #0]
 8028d94:	6803      	ldr	r3, [r0, #0]
 8028d96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8028d98:	4798      	blx	r3
 8028d9a:	4a87      	ldr	r2, [pc, #540]	@ (8028fb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8028d9c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8028da0:	8813      	ldrh	r3, [r2, #0]
 8028da2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8028da6:	2fff      	cmp	r7, #255	@ 0xff
 8028da8:	fb03 9404 	mla	r4, r3, r4, r9
 8028dac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8028db0:	f105 0504 	add.w	r5, r5, #4
 8028db4:	4694      	mov	ip, r2
 8028db6:	fb03 f30b 	mul.w	r3, r3, fp
 8028dba:	d071      	beq.n	8028ea0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8028dbc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8028dc0:	43f9      	mvns	r1, r7
 8028dc2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8028dc6:	b2c9      	uxtb	r1, r1
 8028dc8:	9104      	str	r1, [sp, #16]
 8028dca:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8028dce:	9b07      	ldr	r3, [sp, #28]
 8028dd0:	42a3      	cmp	r3, r4
 8028dd2:	f240 80e7 	bls.w	8028fa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8028dd6:	9b06      	ldr	r3, [sp, #24]
 8028dd8:	2b00      	cmp	r3, #0
 8028dda:	d03d      	beq.n	8028e58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8028ddc:	7831      	ldrb	r1, [r6, #0]
 8028dde:	9b04      	ldr	r3, [sp, #16]
 8028de0:	8822      	ldrh	r2, [r4, #0]
 8028de2:	9300      	str	r3, [sp, #0]
 8028de4:	f001 010f 	and.w	r1, r1, #15
 8028de8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028dec:	463b      	mov	r3, r7
 8028dee:	4429      	add	r1, r5
 8028df0:	4650      	mov	r0, sl
 8028df2:	f7ff ff57 	bl	8028ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028df6:	9b03      	ldr	r3, [sp, #12]
 8028df8:	f824 0b02 	strh.w	r0, [r4], #2
 8028dfc:	f106 0801 	add.w	r8, r6, #1
 8028e00:	f103 3bff 	add.w	fp, r3, #4294967295
 8028e04:	f1bb 0f01 	cmp.w	fp, #1
 8028e08:	46a1      	mov	r9, r4
 8028e0a:	f104 0404 	add.w	r4, r4, #4
 8028e0e:	dd27      	ble.n	8028e60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8028e10:	f898 1000 	ldrb.w	r1, [r8]
 8028e14:	9b04      	ldr	r3, [sp, #16]
 8028e16:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8028e1a:	9300      	str	r3, [sp, #0]
 8028e1c:	0909      	lsrs	r1, r1, #4
 8028e1e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028e22:	463b      	mov	r3, r7
 8028e24:	4429      	add	r1, r5
 8028e26:	4650      	mov	r0, sl
 8028e28:	f7ff ff3c 	bl	8028ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028e2c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8028e30:	f818 1b01 	ldrb.w	r1, [r8], #1
 8028e34:	9b04      	ldr	r3, [sp, #16]
 8028e36:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8028e3a:	9300      	str	r3, [sp, #0]
 8028e3c:	f001 010f 	and.w	r1, r1, #15
 8028e40:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028e44:	463b      	mov	r3, r7
 8028e46:	4429      	add	r1, r5
 8028e48:	4650      	mov	r0, sl
 8028e4a:	f7ff ff2b 	bl	8028ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028e4e:	f1ab 0b02 	sub.w	fp, fp, #2
 8028e52:	f824 0c02 	strh.w	r0, [r4, #-2]
 8028e56:	e7d5      	b.n	8028e04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8028e58:	46b0      	mov	r8, r6
 8028e5a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8028e5e:	e7d1      	b.n	8028e04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8028e60:	d10f      	bne.n	8028e82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8028e62:	f898 1000 	ldrb.w	r1, [r8]
 8028e66:	9b04      	ldr	r3, [sp, #16]
 8028e68:	f8b9 2000 	ldrh.w	r2, [r9]
 8028e6c:	9300      	str	r3, [sp, #0]
 8028e6e:	0909      	lsrs	r1, r1, #4
 8028e70:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028e74:	463b      	mov	r3, r7
 8028e76:	4429      	add	r1, r5
 8028e78:	4650      	mov	r0, sl
 8028e7a:	f7ff ff13 	bl	8028ca4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028e7e:	f829 0b02 	strh.w	r0, [r9], #2
 8028e82:	9b08      	ldr	r3, [sp, #32]
 8028e84:	9a05      	ldr	r2, [sp, #20]
 8028e86:	881c      	ldrh	r4, [r3, #0]
 8028e88:	9b03      	ldr	r3, [sp, #12]
 8028e8a:	1ae4      	subs	r4, r4, r3
 8028e8c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028e90:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8028e94:	4413      	add	r3, r2
 8028e96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8028e98:	fb93 f3f2 	sdiv	r3, r3, r2
 8028e9c:	441e      	add	r6, r3
 8028e9e:	e796      	b.n	8028dce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8028ea0:	4f46      	ldr	r7, [pc, #280]	@ (8028fbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8028ea2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8028ea6:	42a3      	cmp	r3, r4
 8028ea8:	d97c      	bls.n	8028fa4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8028eaa:	9a06      	ldr	r2, [sp, #24]
 8028eac:	2a00      	cmp	r2, #0
 8028eae:	d054      	beq.n	8028f5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8028eb0:	7830      	ldrb	r0, [r6, #0]
 8028eb2:	f000 000f 	and.w	r0, r0, #15
 8028eb6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028eba:	eb05 0e00 	add.w	lr, r5, r0
 8028ebe:	5c28      	ldrb	r0, [r5, r0]
 8028ec0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8028ec4:	f89e e001 	ldrb.w	lr, [lr, #1]
 8028ec8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028ecc:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8028ed0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8028ed4:	ea42 020e 	orr.w	r2, r2, lr
 8028ed8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8028edc:	f824 2b02 	strh.w	r2, [r4], #2
 8028ee0:	9a03      	ldr	r2, [sp, #12]
 8028ee2:	1c71      	adds	r1, r6, #1
 8028ee4:	f102 3eff 	add.w	lr, r2, #4294967295
 8028ee8:	f1be 0f01 	cmp.w	lr, #1
 8028eec:	4620      	mov	r0, r4
 8028eee:	f104 0404 	add.w	r4, r4, #4
 8028ef2:	dd36      	ble.n	8028f62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8028ef4:	7808      	ldrb	r0, [r1, #0]
 8028ef6:	0900      	lsrs	r0, r0, #4
 8028ef8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028efc:	eb05 0a00 	add.w	sl, r5, r0
 8028f00:	f1ae 0e02 	sub.w	lr, lr, #2
 8028f04:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8028f08:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8028f0c:	00d2      	lsls	r2, r2, #3
 8028f0e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8028f12:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028f16:	ea49 0202 	orr.w	r2, r9, r2
 8028f1a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8028f1e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8028f22:	f824 2c04 	strh.w	r2, [r4, #-4]
 8028f26:	f811 0b01 	ldrb.w	r0, [r1], #1
 8028f2a:	f000 000f 	and.w	r0, r0, #15
 8028f2e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028f32:	eb05 0a00 	add.w	sl, r5, r0
 8028f36:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8028f3a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8028f3e:	00d2      	lsls	r2, r2, #3
 8028f40:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8028f44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028f48:	ea49 0202 	orr.w	r2, r9, r2
 8028f4c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8028f50:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8028f54:	f824 2c02 	strh.w	r2, [r4, #-2]
 8028f58:	e7c6      	b.n	8028ee8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8028f5a:	4631      	mov	r1, r6
 8028f5c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8028f60:	e7c2      	b.n	8028ee8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8028f62:	d111      	bne.n	8028f88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8028f64:	7809      	ldrb	r1, [r1, #0]
 8028f66:	0909      	lsrs	r1, r1, #4
 8028f68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028f6c:	186c      	adds	r4, r5, r1
 8028f6e:	5c69      	ldrb	r1, [r5, r1]
 8028f70:	78a2      	ldrb	r2, [r4, #2]
 8028f72:	7864      	ldrb	r4, [r4, #1]
 8028f74:	00e4      	lsls	r4, r4, #3
 8028f76:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8028f7a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8028f7e:	4322      	orrs	r2, r4
 8028f80:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8028f84:	f820 2b02 	strh.w	r2, [r0], #2
 8028f88:	9a03      	ldr	r2, [sp, #12]
 8028f8a:	f8bc 4000 	ldrh.w	r4, [ip]
 8028f8e:	9905      	ldr	r1, [sp, #20]
 8028f90:	1aa4      	subs	r4, r4, r2
 8028f92:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8028f96:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8028f9a:	440a      	add	r2, r1
 8028f9c:	fb92 f2f8 	sdiv	r2, r2, r8
 8028fa0:	4416      	add	r6, r2
 8028fa2:	e780      	b.n	8028ea6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8028fa4:	4b03      	ldr	r3, [pc, #12]	@ (8028fb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8028fa6:	6818      	ldr	r0, [r3, #0]
 8028fa8:	6803      	ldr	r3, [r0, #0]
 8028faa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028fac:	4798      	blx	r3
 8028fae:	b00f      	add	sp, #60	@ 0x3c
 8028fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028fb4:	20013f60 	.word	0x20013f60
 8028fb8:	20013f5a 	.word	0x20013f5a
 8028fbc:	fffff800 	.word	0xfffff800

08028fc0 <CRC_Lock>:
 8028fc0:	b530      	push	{r4, r5, lr}
 8028fc2:	4a2d      	ldr	r2, [pc, #180]	@ (8029078 <CRC_Lock+0xb8>)
 8028fc4:	6813      	ldr	r3, [r2, #0]
 8028fc6:	f023 0301 	bic.w	r3, r3, #1
 8028fca:	6013      	str	r3, [r2, #0]
 8028fcc:	4b2b      	ldr	r3, [pc, #172]	@ (802907c <CRC_Lock+0xbc>)
 8028fce:	681c      	ldr	r4, [r3, #0]
 8028fd0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8028fd4:	4014      	ands	r4, r2
 8028fd6:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8028fda:	42ac      	cmp	r4, r5
 8028fdc:	d005      	beq.n	8028fea <CRC_Lock+0x2a>
 8028fde:	681c      	ldr	r4, [r3, #0]
 8028fe0:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8028fe4:	4014      	ands	r4, r2
 8028fe6:	42ac      	cmp	r4, r5
 8028fe8:	d125      	bne.n	8029036 <CRC_Lock+0x76>
 8028fea:	4b25      	ldr	r3, [pc, #148]	@ (8029080 <CRC_Lock+0xc0>)
 8028fec:	681b      	ldr	r3, [r3, #0]
 8028fee:	2b00      	cmp	r3, #0
 8028ff0:	d139      	bne.n	8029066 <CRC_Lock+0xa6>
 8028ff2:	4b24      	ldr	r3, [pc, #144]	@ (8029084 <CRC_Lock+0xc4>)
 8028ff4:	681a      	ldr	r2, [r3, #0]
 8028ff6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8028ffa:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8028ffe:	d00d      	beq.n	802901c <CRC_Lock+0x5c>
 8029000:	681a      	ldr	r2, [r3, #0]
 8029002:	f240 4483 	movw	r4, #1155	@ 0x483
 8029006:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802900a:	42a2      	cmp	r2, r4
 802900c:	d006      	beq.n	802901c <CRC_Lock+0x5c>
 802900e:	681b      	ldr	r3, [r3, #0]
 8029010:	f240 4285 	movw	r2, #1157	@ 0x485
 8029014:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029018:	4293      	cmp	r3, r2
 802901a:	d124      	bne.n	8029066 <CRC_Lock+0xa6>
 802901c:	4b1a      	ldr	r3, [pc, #104]	@ (8029088 <CRC_Lock+0xc8>)
 802901e:	2201      	movs	r2, #1
 8029020:	601a      	str	r2, [r3, #0]
 8029022:	681a      	ldr	r2, [r3, #0]
 8029024:	2a00      	cmp	r2, #0
 8029026:	d1fc      	bne.n	8029022 <CRC_Lock+0x62>
 8029028:	4b18      	ldr	r3, [pc, #96]	@ (802908c <CRC_Lock+0xcc>)
 802902a:	6018      	str	r0, [r3, #0]
 802902c:	6818      	ldr	r0, [r3, #0]
 802902e:	1a43      	subs	r3, r0, r1
 8029030:	4258      	negs	r0, r3
 8029032:	4158      	adcs	r0, r3
 8029034:	e00e      	b.n	8029054 <CRC_Lock+0x94>
 8029036:	681b      	ldr	r3, [r3, #0]
 8029038:	4013      	ands	r3, r2
 802903a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802903e:	4293      	cmp	r3, r2
 8029040:	d111      	bne.n	8029066 <CRC_Lock+0xa6>
 8029042:	4b13      	ldr	r3, [pc, #76]	@ (8029090 <CRC_Lock+0xd0>)
 8029044:	681b      	ldr	r3, [r3, #0]
 8029046:	f240 4286 	movw	r2, #1158	@ 0x486
 802904a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802904e:	4293      	cmp	r3, r2
 8029050:	d001      	beq.n	8029056 <CRC_Lock+0x96>
 8029052:	2000      	movs	r0, #0
 8029054:	bd30      	pop	{r4, r5, pc}
 8029056:	4b0f      	ldr	r3, [pc, #60]	@ (8029094 <CRC_Lock+0xd4>)
 8029058:	2201      	movs	r2, #1
 802905a:	601a      	str	r2, [r3, #0]
 802905c:	681a      	ldr	r2, [r3, #0]
 802905e:	2a00      	cmp	r2, #0
 8029060:	d1fc      	bne.n	802905c <CRC_Lock+0x9c>
 8029062:	4b0d      	ldr	r3, [pc, #52]	@ (8029098 <CRC_Lock+0xd8>)
 8029064:	e7e1      	b.n	802902a <CRC_Lock+0x6a>
 8029066:	4b0d      	ldr	r3, [pc, #52]	@ (802909c <CRC_Lock+0xdc>)
 8029068:	2201      	movs	r2, #1
 802906a:	601a      	str	r2, [r3, #0]
 802906c:	681a      	ldr	r2, [r3, #0]
 802906e:	2a00      	cmp	r2, #0
 8029070:	d1fc      	bne.n	802906c <CRC_Lock+0xac>
 8029072:	4b0b      	ldr	r3, [pc, #44]	@ (80290a0 <CRC_Lock+0xe0>)
 8029074:	e7d9      	b.n	802902a <CRC_Lock+0x6a>
 8029076:	bf00      	nop
 8029078:	e0002000 	.word	0xe0002000
 802907c:	e000ed00 	.word	0xe000ed00
 8029080:	e0042000 	.word	0xe0042000
 8029084:	5c001000 	.word	0x5c001000
 8029088:	58024c08 	.word	0x58024c08
 802908c:	58024c00 	.word	0x58024c00
 8029090:	46008ff0 	.word	0x46008ff0
 8029094:	46024c08 	.word	0x46024c08
 8029098:	46024c00 	.word	0x46024c00
 802909c:	40023008 	.word	0x40023008
 80290a0:	40023000 	.word	0x40023000

080290a4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80290a4:	6101      	str	r1, [r0, #16]
 80290a6:	4770      	bx	lr

080290a8 <_ZN8touchgfx8Gestures4tickEv>:
 80290a8:	7b83      	ldrb	r3, [r0, #14]
 80290aa:	b14b      	cbz	r3, 80290c0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80290ac:	8903      	ldrh	r3, [r0, #8]
 80290ae:	3301      	adds	r3, #1
 80290b0:	b29b      	uxth	r3, r3
 80290b2:	2b07      	cmp	r3, #7
 80290b4:	8103      	strh	r3, [r0, #8]
 80290b6:	bf81      	itttt	hi
 80290b8:	2300      	movhi	r3, #0
 80290ba:	8143      	strhhi	r3, [r0, #10]
 80290bc:	8183      	strhhi	r3, [r0, #12]
 80290be:	7383      	strbhi	r3, [r0, #14]
 80290c0:	4770      	bx	lr
	...

080290c4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80290c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80290c8:	4698      	mov	r8, r3
 80290ca:	8883      	ldrh	r3, [r0, #4]
 80290cc:	f8ad 3006 	strh.w	r3, [sp, #6]
 80290d0:	eba8 0303 	sub.w	r3, r8, r3
 80290d4:	b21b      	sxth	r3, r3
 80290d6:	4604      	mov	r4, r0
 80290d8:	2b00      	cmp	r3, #0
 80290da:	4617      	mov	r7, r2
 80290dc:	4a18      	ldr	r2, [pc, #96]	@ (8029140 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80290de:	9200      	str	r2, [sp, #0]
 80290e0:	bfb8      	it	lt
 80290e2:	425b      	neglt	r3, r3
 80290e4:	8aa2      	ldrh	r2, [r4, #20]
 80290e6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80290ea:	f8ad 800a 	strh.w	r8, [sp, #10]
 80290ee:	b21b      	sxth	r3, r3
 80290f0:	460e      	mov	r6, r1
 80290f2:	4293      	cmp	r3, r2
 80290f4:	88c1      	ldrh	r1, [r0, #6]
 80290f6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80290fa:	f04f 0000 	mov.w	r0, #0
 80290fe:	f88d 0004 	strb.w	r0, [sp, #4]
 8029102:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029106:	dc07      	bgt.n	8029118 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029108:	1a69      	subs	r1, r5, r1
 802910a:	b209      	sxth	r1, r1
 802910c:	2900      	cmp	r1, #0
 802910e:	bfb8      	it	lt
 8029110:	4249      	neglt	r1, r1
 8029112:	b209      	sxth	r1, r1
 8029114:	428a      	cmp	r2, r1
 8029116:	da10      	bge.n	802913a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029118:	6920      	ldr	r0, [r4, #16]
 802911a:	6803      	ldr	r3, [r0, #0]
 802911c:	4669      	mov	r1, sp
 802911e:	685b      	ldr	r3, [r3, #4]
 8029120:	4798      	blx	r3
 8029122:	eba8 0606 	sub.w	r6, r8, r6
 8029126:	2300      	movs	r3, #0
 8029128:	1bef      	subs	r7, r5, r7
 802912a:	2001      	movs	r0, #1
 802912c:	8123      	strh	r3, [r4, #8]
 802912e:	8166      	strh	r6, [r4, #10]
 8029130:	81a7      	strh	r7, [r4, #12]
 8029132:	f8a4 8004 	strh.w	r8, [r4, #4]
 8029136:	80e5      	strh	r5, [r4, #6]
 8029138:	73a0      	strb	r0, [r4, #14]
 802913a:	b004      	add	sp, #16
 802913c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029140:	0802e490 	.word	0x0802e490

08029144 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029144:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029146:	461e      	mov	r6, r3
 8029148:	1e4b      	subs	r3, r1, #1
 802914a:	2b01      	cmp	r3, #1
 802914c:	b085      	sub	sp, #20
 802914e:	4604      	mov	r4, r0
 8029150:	460d      	mov	r5, r1
 8029152:	4617      	mov	r7, r2
 8029154:	d84b      	bhi.n	80291ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029156:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802915a:	1cd3      	adds	r3, r2, #3
 802915c:	b29b      	uxth	r3, r3
 802915e:	2b06      	cmp	r3, #6
 8029160:	d916      	bls.n	8029190 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029162:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8029204 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029166:	f8cd c004 	str.w	ip, [sp, #4]
 802916a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802916e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029172:	6900      	ldr	r0, [r0, #16]
 8029174:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029178:	f04f 0c00 	mov.w	ip, #0
 802917c:	f88d c008 	strb.w	ip, [sp, #8]
 8029180:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029184:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029188:	6803      	ldr	r3, [r0, #0]
 802918a:	a901      	add	r1, sp, #4
 802918c:	689b      	ldr	r3, [r3, #8]
 802918e:	4798      	blx	r3
 8029190:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029194:	1cd3      	adds	r3, r2, #3
 8029196:	b29b      	uxth	r3, r3
 8029198:	2b06      	cmp	r3, #6
 802919a:	d916      	bls.n	80291ca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802919c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8029204 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80291a0:	f8cd c004 	str.w	ip, [sp, #4]
 80291a4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80291a8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80291ac:	6920      	ldr	r0, [r4, #16]
 80291ae:	f8ad 100c 	strh.w	r1, [sp, #12]
 80291b2:	f04f 0c01 	mov.w	ip, #1
 80291b6:	f88d c008 	strb.w	ip, [sp, #8]
 80291ba:	f8ad 200a 	strh.w	r2, [sp, #10]
 80291be:	f8ad 300e 	strh.w	r3, [sp, #14]
 80291c2:	6803      	ldr	r3, [r0, #0]
 80291c4:	a901      	add	r1, sp, #4
 80291c6:	689b      	ldr	r3, [r3, #8]
 80291c8:	4798      	blx	r3
 80291ca:	4b0d      	ldr	r3, [pc, #52]	@ (8029200 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80291cc:	9301      	str	r3, [sp, #4]
 80291ce:	6920      	ldr	r0, [r4, #16]
 80291d0:	f88d 5008 	strb.w	r5, [sp, #8]
 80291d4:	2300      	movs	r3, #0
 80291d6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80291da:	f8ad 600c 	strh.w	r6, [sp, #12]
 80291de:	f8ad 300e 	strh.w	r3, [sp, #14]
 80291e2:	6803      	ldr	r3, [r0, #0]
 80291e4:	a901      	add	r1, sp, #4
 80291e6:	681b      	ldr	r3, [r3, #0]
 80291e8:	4798      	blx	r3
 80291ea:	b005      	add	sp, #20
 80291ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80291ee:	2900      	cmp	r1, #0
 80291f0:	d1eb      	bne.n	80291ca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80291f2:	80a2      	strh	r2, [r4, #4]
 80291f4:	80c6      	strh	r6, [r0, #6]
 80291f6:	60a1      	str	r1, [r4, #8]
 80291f8:	81a1      	strh	r1, [r4, #12]
 80291fa:	73a1      	strb	r1, [r4, #14]
 80291fc:	e7e5      	b.n	80291ca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80291fe:	bf00      	nop
 8029200:	0802e47c 	.word	0x0802e47c
 8029204:	0802e4a4 	.word	0x0802e4a4

08029208 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8029208:	10c9      	asrs	r1, r1, #3
 802920a:	2900      	cmp	r1, #0
 802920c:	bfb8      	it	lt
 802920e:	4249      	neglt	r1, r1
 8029210:	2801      	cmp	r0, #1
 8029212:	d108      	bne.n	8029226 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8029214:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029218:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 802921c:	4601      	mov	r1, r0
 802921e:	dd02      	ble.n	8029226 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8029220:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8029224:	4770      	bx	lr
 8029226:	29ff      	cmp	r1, #255	@ 0xff
 8029228:	bfa8      	it	ge
 802922a:	21ff      	movge	r1, #255	@ 0xff
 802922c:	4608      	mov	r0, r1
 802922e:	4770      	bx	lr

08029230 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029230:	b410      	push	{r4}
 8029232:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029236:	429c      	cmp	r4, r3
 8029238:	d803      	bhi.n	8029242 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802923a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802923e:	f7ec b993 	b.w	8015568 <_ZN8touchgfx7Outline6lineToEii>
 8029242:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029246:	4770      	bx	lr

08029248 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802924c:	b08b      	sub	sp, #44	@ 0x2c
 802924e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029252:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8029256:	9308      	str	r3, [sp, #32]
 8029258:	4606      	mov	r6, r0
 802925a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 802925e:	9309      	str	r3, [sp, #36]	@ 0x24
 8029260:	468a      	mov	sl, r1
 8029262:	f7ec faee 	bl	8015842 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029266:	68b5      	ldr	r5, [r6, #8]
 8029268:	4604      	mov	r4, r0
 802926a:	2d00      	cmp	r5, #0
 802926c:	d044      	beq.n	80292f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802926e:	6873      	ldr	r3, [r6, #4]
 8029270:	42ab      	cmp	r3, r5
 8029272:	d33d      	bcc.n	80292f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029274:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029278:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 802927c:	eb02 0b03 	add.w	fp, r2, r3
 8029280:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029284:	fb02 1203 	mla	r2, r2, r3, r1
 8029288:	9205      	str	r2, [sp, #20]
 802928a:	1e6a      	subs	r2, r5, #1
 802928c:	9204      	str	r2, [sp, #16]
 802928e:	f04f 0800 	mov.w	r8, #0
 8029292:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029296:	f9b4 7000 	ldrsh.w	r7, [r4]
 802929a:	454b      	cmp	r3, r9
 802929c:	463a      	mov	r2, r7
 802929e:	d008      	beq.n	80292b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80292a0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 80292a4:	eb03 0b09 	add.w	fp, r3, r9
 80292a8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80292ac:	fb03 1309 	mla	r3, r3, r9, r1
 80292b0:	9305      	str	r3, [sp, #20]
 80292b2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80292b6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80292ba:	4498      	add	r8, r3
 80292bc:	9b04      	ldr	r3, [sp, #16]
 80292be:	3b01      	subs	r3, #1
 80292c0:	9304      	str	r3, [sp, #16]
 80292c2:	9b04      	ldr	r3, [sp, #16]
 80292c4:	3301      	adds	r3, #1
 80292c6:	d015      	beq.n	80292f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80292c8:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80292cc:	42bb      	cmp	r3, r7
 80292ce:	d117      	bne.n	8029300 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80292d0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80292d4:	9b04      	ldr	r3, [sp, #16]
 80292d6:	4548      	cmp	r0, r9
 80292d8:	f103 33ff 	add.w	r3, r3, #4294967295
 80292dc:	d17f      	bne.n	80293de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80292de:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80292e2:	4401      	add	r1, r0
 80292e4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80292e8:	4480      	add	r8, r0
 80292ea:	e7e9      	b.n	80292c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80292ec:	461f      	mov	r7, r3
 80292ee:	e044      	b.n	802937a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80292f0:	2000      	movs	r0, #0
 80292f2:	e002      	b.n	80292fa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80292f4:	2900      	cmp	r1, #0
 80292f6:	d16f      	bne.n	80293d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80292f8:	2001      	movs	r0, #1
 80292fa:	b00b      	add	sp, #44	@ 0x2c
 80292fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029300:	2900      	cmp	r1, #0
 8029302:	d030      	beq.n	8029366 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029304:	2f00      	cmp	r7, #0
 8029306:	db29      	blt.n	802935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029308:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802930c:	42bb      	cmp	r3, r7
 802930e:	dd25      	ble.n	802935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029310:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029314:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8029318:	f7ff ff76 	bl	8029208 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802931c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802931e:	fb10 f003 	smulbb	r0, r0, r3
 8029322:	b280      	uxth	r0, r0
 8029324:	1c41      	adds	r1, r0, #1
 8029326:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802932a:	1209      	asrs	r1, r1, #8
 802932c:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8029330:	d014      	beq.n	802935c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029332:	9808      	ldr	r0, [sp, #32]
 8029334:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8029336:	b2c9      	uxtb	r1, r1
 8029338:	b2ba      	uxth	r2, r7
 802933a:	9102      	str	r1, [sp, #8]
 802933c:	2101      	movs	r1, #1
 802933e:	4413      	add	r3, r2
 8029340:	9101      	str	r1, [sp, #4]
 8029342:	4402      	add	r2, r0
 8029344:	fa0f f18b 	sxth.w	r1, fp
 8029348:	f8da 0000 	ldr.w	r0, [sl]
 802934c:	9100      	str	r1, [sp, #0]
 802934e:	6941      	ldr	r1, [r0, #20]
 8029350:	b21b      	sxth	r3, r3
 8029352:	460d      	mov	r5, r1
 8029354:	b212      	sxth	r2, r2
 8029356:	9905      	ldr	r1, [sp, #20]
 8029358:	4650      	mov	r0, sl
 802935a:	47a8      	blx	r5
 802935c:	9b04      	ldr	r3, [sp, #16]
 802935e:	3301      	adds	r3, #1
 8029360:	f107 0201 	add.w	r2, r7, #1
 8029364:	d0c8      	beq.n	80292f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029366:	f9b4 7000 	ldrsh.w	r7, [r4]
 802936a:	1abb      	subs	r3, r7, r2
 802936c:	2b00      	cmp	r3, #0
 802936e:	dd31      	ble.n	80293d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029370:	2a00      	cmp	r2, #0
 8029372:	dabb      	bge.n	80292ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029374:	2f00      	cmp	r7, #0
 8029376:	dd2d      	ble.n	80293d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029378:	2200      	movs	r2, #0
 802937a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802937e:	19d1      	adds	r1, r2, r7
 8029380:	4299      	cmp	r1, r3
 8029382:	db02      	blt.n	802938a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029384:	1a9f      	subs	r7, r3, r2
 8029386:	2f00      	cmp	r7, #0
 8029388:	dd24      	ble.n	80293d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802938a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802938e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8029392:	f7ff ff39 	bl	8029208 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8029396:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8029398:	fb10 f003 	smulbb	r0, r0, r3
 802939c:	b280      	uxth	r0, r0
 802939e:	1c41      	adds	r1, r0, #1
 80293a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80293a4:	1209      	asrs	r1, r1, #8
 80293a6:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80293aa:	d013      	beq.n	80293d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80293ac:	9808      	ldr	r0, [sp, #32]
 80293ae:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80293b0:	b292      	uxth	r2, r2
 80293b2:	b2c9      	uxtb	r1, r1
 80293b4:	4413      	add	r3, r2
 80293b6:	9102      	str	r1, [sp, #8]
 80293b8:	4402      	add	r2, r0
 80293ba:	b23f      	sxth	r7, r7
 80293bc:	f8da 0000 	ldr.w	r0, [sl]
 80293c0:	9701      	str	r7, [sp, #4]
 80293c2:	fa0f f18b 	sxth.w	r1, fp
 80293c6:	9100      	str	r1, [sp, #0]
 80293c8:	6947      	ldr	r7, [r0, #20]
 80293ca:	9905      	ldr	r1, [sp, #20]
 80293cc:	b21b      	sxth	r3, r3
 80293ce:	b212      	sxth	r2, r2
 80293d0:	4650      	mov	r0, sl
 80293d2:	47b8      	blx	r7
 80293d4:	464b      	mov	r3, r9
 80293d6:	e75c      	b.n	8029292 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80293d8:	2f00      	cmp	r7, #0
 80293da:	da95      	bge.n	8029308 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80293dc:	e78c      	b.n	80292f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80293de:	2900      	cmp	r1, #0
 80293e0:	d0f8      	beq.n	80293d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80293e2:	e78f      	b.n	8029304 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080293e4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 80293e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80293e8:	461e      	mov	r6, r3
 80293ea:	4b36      	ldr	r3, [pc, #216]	@ (80294c4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 80293ec:	e9c0 3100 	strd	r3, r1, [r0]
 80293f0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80293f4:	8103      	strh	r3, [r0, #8]
 80293f6:	2500      	movs	r5, #0
 80293f8:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80293fc:	7283      	strb	r3, [r0, #10]
 80293fe:	f100 0814 	add.w	r8, r0, #20
 8029402:	4604      	mov	r4, r0
 8029404:	8185      	strh	r5, [r0, #12]
 8029406:	81c5      	strh	r5, [r0, #14]
 8029408:	8205      	strh	r5, [r0, #16]
 802940a:	8245      	strh	r5, [r0, #18]
 802940c:	4640      	mov	r0, r8
 802940e:	4617      	mov	r7, r2
 8029410:	f7eb fbe2 	bl	8014bd8 <_ZN8touchgfx7OutlineC1Ev>
 8029414:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8029418:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 802941c:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8029420:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8029424:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8029428:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 802942c:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8029430:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8029434:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8029438:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 802943c:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8029440:	6830      	ldr	r0, [r6, #0]
 8029442:	6871      	ldr	r1, [r6, #4]
 8029444:	8872      	ldrh	r2, [r6, #2]
 8029446:	8835      	ldrh	r5, [r6, #0]
 8029448:	466b      	mov	r3, sp
 802944a:	c303      	stmia	r3!, {r0, r1}
 802944c:	887b      	ldrh	r3, [r7, #2]
 802944e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8029452:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8029456:	4413      	add	r3, r2
 8029458:	883a      	ldrh	r2, [r7, #0]
 802945a:	81e3      	strh	r3, [r4, #14]
 802945c:	442a      	add	r2, r5
 802945e:	81a2      	strh	r2, [r4, #12]
 8029460:	8220      	strh	r0, [r4, #16]
 8029462:	8261      	strh	r1, [r4, #18]
 8029464:	4668      	mov	r0, sp
 8029466:	4639      	mov	r1, r7
 8029468:	f7ed fdb4 	bl	8016fd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802946c:	f104 000c 	add.w	r0, r4, #12
 8029470:	f7ed fd88 	bl	8016f84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029474:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029478:	f8bd 2000 	ldrh.w	r2, [sp]
 802947c:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8029480:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8029484:	4640      	mov	r0, r8
 8029486:	f7eb fb8b 	bl	8014ba0 <_ZN8touchgfx7Outline5resetEv>
 802948a:	f9bd 3000 	ldrsh.w	r3, [sp]
 802948e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8029492:	015b      	lsls	r3, r3, #5
 8029494:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8029496:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802949a:	015b      	lsls	r3, r3, #5
 802949c:	6523      	str	r3, [r4, #80]	@ 0x50
 802949e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80294a2:	015b      	lsls	r3, r3, #5
 80294a4:	6563      	str	r3, [r4, #84]	@ 0x54
 80294a6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80294aa:	015b      	lsls	r3, r3, #5
 80294ac:	65a3      	str	r3, [r4, #88]	@ 0x58
 80294ae:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 80294b2:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 80294b6:	4620      	mov	r0, r4
 80294b8:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 80294bc:	b002      	add	sp, #8
 80294be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80294c2:	bf00      	nop
 80294c4:	0802e7e0 	.word	0x0802e7e0

080294c8 <_ZN8touchgfx6Canvas5closeEv>:
 80294c8:	b538      	push	{r3, r4, r5, lr}
 80294ca:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80294ce:	4604      	mov	r4, r0
 80294d0:	b193      	cbz	r3, 80294f8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80294d2:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 80294d6:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 80294da:	4213      	tst	r3, r2
 80294dc:	d10c      	bne.n	80294f8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80294de:	f100 0514 	add.w	r5, r0, #20
 80294e2:	b123      	cbz	r3, 80294ee <_ZN8touchgfx6Canvas5closeEv+0x26>
 80294e4:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 80294e8:	4628      	mov	r0, r5
 80294ea:	f7ff fea1 	bl	8029230 <_ZN8touchgfx10Rasterizer6lineToEii>
 80294ee:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 80294f2:	4628      	mov	r0, r5
 80294f4:	f7ff fe9c 	bl	8029230 <_ZN8touchgfx10Rasterizer6lineToEii>
 80294f8:	2300      	movs	r3, #0
 80294fa:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80294fe:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8029502:	4298      	cmp	r0, r3
 8029504:	bf34      	ite	cc
 8029506:	2000      	movcc	r0, #0
 8029508:	2001      	movcs	r0, #1
 802950a:	bd38      	pop	{r3, r4, r5, pc}

0802950c <_ZN8touchgfx6Canvas6renderEh>:
 802950c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029510:	7a85      	ldrb	r5, [r0, #10]
 8029512:	4369      	muls	r1, r5
 8029514:	1c4d      	adds	r5, r1, #1
 8029516:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802951a:	122d      	asrs	r5, r5, #8
 802951c:	4604      	mov	r4, r0
 802951e:	f000 8099 	beq.w	8029654 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8029522:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8029526:	2b00      	cmp	r3, #0
 8029528:	f000 8094 	beq.w	8029654 <_ZN8touchgfx6Canvas6renderEh+0x148>
 802952c:	f7ff ffcc 	bl	80294c8 <_ZN8touchgfx6Canvas5closeEv>
 8029530:	4607      	mov	r7, r0
 8029532:	2800      	cmp	r0, #0
 8029534:	d045      	beq.n	80295c2 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8029536:	6860      	ldr	r0, [r4, #4]
 8029538:	4e47      	ldr	r6, [pc, #284]	@ (8029658 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802953a:	6803      	ldr	r3, [r0, #0]
 802953c:	6837      	ldr	r7, [r6, #0]
 802953e:	689b      	ldr	r3, [r3, #8]
 8029540:	4798      	blx	r3
 8029542:	4601      	mov	r1, r0
 8029544:	4638      	mov	r0, r7
 8029546:	f7e7 fe9f 	bl	8011288 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802954a:	4607      	mov	r7, r0
 802954c:	f7da fda4 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 8029550:	6803      	ldr	r3, [r0, #0]
 8029552:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8029554:	4798      	blx	r3
 8029556:	4680      	mov	r8, r0
 8029558:	f7da fd9e 	bl	8004098 <_ZN8touchgfx3HAL3lcdEv>
 802955c:	6803      	ldr	r3, [r0, #0]
 802955e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8029560:	4798      	blx	r3
 8029562:	280b      	cmp	r0, #11
 8029564:	d85b      	bhi.n	802961e <_ZN8touchgfx6Canvas6renderEh+0x112>
 8029566:	e8df f000 	tbb	[pc, r0]
 802956a:	5c51      	.short	0x5c51
 802956c:	305a066c 	.word	0x305a066c
 8029570:	65656540 	.word	0x65656540
 8029574:	6565      	.short	0x6565
 8029576:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802957a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802957e:	2208      	movs	r2, #8
 8029580:	fb91 f2f2 	sdiv	r2, r1, r2
 8029584:	fb08 2303 	mla	r3, r8, r3, r2
 8029588:	441f      	add	r7, r3
 802958a:	424b      	negs	r3, r1
 802958c:	f003 0307 	and.w	r3, r3, #7
 8029590:	f001 0107 	and.w	r1, r1, #7
 8029594:	bf58      	it	pl
 8029596:	4259      	negpl	r1, r3
 8029598:	b2c9      	uxtb	r1, r1
 802959a:	b2ed      	uxtb	r5, r5
 802959c:	463a      	mov	r2, r7
 802959e:	e9cd 1500 	strd	r1, r5, [sp]
 80295a2:	fa0f f388 	sxth.w	r3, r8
 80295a6:	6861      	ldr	r1, [r4, #4]
 80295a8:	f104 0014 	add.w	r0, r4, #20
 80295ac:	f7ff fe4c 	bl	8029248 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80295b0:	4607      	mov	r7, r0
 80295b2:	6860      	ldr	r0, [r4, #4]
 80295b4:	6803      	ldr	r3, [r0, #0]
 80295b6:	691b      	ldr	r3, [r3, #16]
 80295b8:	4798      	blx	r3
 80295ba:	6830      	ldr	r0, [r6, #0]
 80295bc:	6803      	ldr	r3, [r0, #0]
 80295be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80295c0:	4798      	blx	r3
 80295c2:	4638      	mov	r0, r7
 80295c4:	b002      	add	sp, #8
 80295c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295ca:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80295ce:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80295d2:	2204      	movs	r2, #4
 80295d4:	fb91 f2f2 	sdiv	r2, r1, r2
 80295d8:	fb08 2303 	mla	r3, r8, r3, r2
 80295dc:	441f      	add	r7, r3
 80295de:	424b      	negs	r3, r1
 80295e0:	f003 0303 	and.w	r3, r3, #3
 80295e4:	f001 0103 	and.w	r1, r1, #3
 80295e8:	e7d4      	b.n	8029594 <_ZN8touchgfx6Canvas6renderEh+0x88>
 80295ea:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80295ee:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80295f2:	2900      	cmp	r1, #0
 80295f4:	f04f 0202 	mov.w	r2, #2
 80295f8:	fb91 f2f2 	sdiv	r2, r1, r2
 80295fc:	f001 0101 	and.w	r1, r1, #1
 8029600:	fb08 2303 	mla	r3, r8, r3, r2
 8029604:	441f      	add	r7, r3
 8029606:	bfb8      	it	lt
 8029608:	4249      	neglt	r1, r1
 802960a:	e7c5      	b.n	8029598 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 802960c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029610:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029614:	fb08 f303 	mul.w	r3, r8, r3
 8029618:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802961c:	441f      	add	r7, r3
 802961e:	2100      	movs	r1, #0
 8029620:	e7bb      	b.n	802959a <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8029622:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029626:	fb08 f203 	mul.w	r2, r8, r3
 802962a:	89a3      	ldrh	r3, [r4, #12]
 802962c:	2103      	movs	r1, #3
 802962e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8029632:	e7f3      	b.n	802961c <_ZN8touchgfx6Canvas6renderEh+0x110>
 8029634:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029638:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802963c:	fb08 2303 	mla	r3, r8, r3, r2
 8029640:	e7ec      	b.n	802961c <_ZN8touchgfx6Canvas6renderEh+0x110>
 8029642:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029646:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802964a:	fb08 f303 	mul.w	r3, r8, r3
 802964e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029652:	e7e3      	b.n	802961c <_ZN8touchgfx6Canvas6renderEh+0x110>
 8029654:	2701      	movs	r7, #1
 8029656:	e7b4      	b.n	80295c2 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8029658:	20013f60 	.word	0x20013f60

0802965c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802965c:	b510      	push	{r4, lr}
 802965e:	4b06      	ldr	r3, [pc, #24]	@ (8029678 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8029660:	781b      	ldrb	r3, [r3, #0]
 8029662:	2b01      	cmp	r3, #1
 8029664:	d107      	bne.n	8029676 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8029666:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802966a:	680b      	ldr	r3, [r1, #0]
 802966c:	6814      	ldr	r4, [r2, #0]
 802966e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029672:	6013      	str	r3, [r2, #0]
 8029674:	600c      	str	r4, [r1, #0]
 8029676:	bd10      	pop	{r4, pc}
 8029678:	20013f58 	.word	0x20013f58

0802967c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802967c:	b513      	push	{r0, r1, r4, lr}
 802967e:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8029682:	4604      	mov	r4, r0
 8029684:	e9cd 2100 	strd	r2, r1, [sp]
 8029688:	b9a3      	cbnz	r3, 80296b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802968a:	466a      	mov	r2, sp
 802968c:	a901      	add	r1, sp, #4
 802968e:	4620      	mov	r0, r4
 8029690:	f7ff ffe4 	bl	802965c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029694:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8029696:	9901      	ldr	r1, [sp, #4]
 8029698:	9a00      	ldr	r2, [sp, #0]
 802969a:	1ac9      	subs	r1, r1, r3
 802969c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802969e:	9101      	str	r1, [sp, #4]
 80296a0:	1ad2      	subs	r2, r2, r3
 80296a2:	2a00      	cmp	r2, #0
 80296a4:	9200      	str	r2, [sp, #0]
 80296a6:	da0b      	bge.n	80296c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80296a8:	2301      	movs	r3, #1
 80296aa:	2900      	cmp	r1, #0
 80296ac:	da0e      	bge.n	80296cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80296ae:	f043 0304 	orr.w	r3, r3, #4
 80296b2:	e013      	b.n	80296dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80296b4:	f7ff ff08 	bl	80294c8 <_ZN8touchgfx6Canvas5closeEv>
 80296b8:	2800      	cmp	r0, #0
 80296ba:	d1e6      	bne.n	802968a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80296bc:	b002      	add	sp, #8
 80296be:	bd10      	pop	{r4, pc}
 80296c0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80296c2:	429a      	cmp	r2, r3
 80296c4:	bfac      	ite	ge
 80296c6:	2302      	movge	r3, #2
 80296c8:	2300      	movlt	r3, #0
 80296ca:	e7ee      	b.n	80296aa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80296cc:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80296ce:	4281      	cmp	r1, r0
 80296d0:	bfac      	ite	ge
 80296d2:	2008      	movge	r0, #8
 80296d4:	2000      	movlt	r0, #0
 80296d6:	4318      	orrs	r0, r3
 80296d8:	b2c3      	uxtb	r3, r0
 80296da:	b158      	cbz	r0, 80296f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80296dc:	2200      	movs	r2, #0
 80296de:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 80296e2:	9901      	ldr	r1, [sp, #4]
 80296e4:	9a00      	ldr	r2, [sp, #0]
 80296e6:	66e1      	str	r1, [r4, #108]	@ 0x6c
 80296e8:	6722      	str	r2, [r4, #112]	@ 0x70
 80296ea:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 80296ee:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 80296f2:	e7e3      	b.n	80296bc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80296f4:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80296f8:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80296fc:	4298      	cmp	r0, r3
 80296fe:	d803      	bhi.n	8029708 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8029700:	f104 0014 	add.w	r0, r4, #20
 8029704:	f7eb ff4a 	bl	801559c <_ZN8touchgfx7Outline6moveToEii>
 8029708:	2301      	movs	r3, #1
 802970a:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802970e:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8029712:	2300      	movs	r3, #0
 8029714:	e7e5      	b.n	80296e2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08029716 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8029716:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029718:	ab02      	add	r3, sp, #8
 802971a:	4604      	mov	r4, r0
 802971c:	f843 2d08 	str.w	r2, [r3, #-8]!
 8029720:	9101      	str	r1, [sp, #4]
 8029722:	461a      	mov	r2, r3
 8029724:	a901      	add	r1, sp, #4
 8029726:	f7ff ff99 	bl	802965c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802972a:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802972c:	9901      	ldr	r1, [sp, #4]
 802972e:	9a00      	ldr	r2, [sp, #0]
 8029730:	1ac9      	subs	r1, r1, r3
 8029732:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8029734:	9101      	str	r1, [sp, #4]
 8029736:	1ad2      	subs	r2, r2, r3
 8029738:	2a00      	cmp	r2, #0
 802973a:	9200      	str	r2, [sp, #0]
 802973c:	db1c      	blt.n	8029778 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802973e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8029740:	429a      	cmp	r2, r3
 8029742:	bfac      	ite	ge
 8029744:	2002      	movge	r0, #2
 8029746:	2000      	movlt	r0, #0
 8029748:	2900      	cmp	r1, #0
 802974a:	db17      	blt.n	802977c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802974c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802974e:	4299      	cmp	r1, r3
 8029750:	bfac      	ite	ge
 8029752:	2308      	movge	r3, #8
 8029754:	2300      	movlt	r3, #0
 8029756:	4303      	orrs	r3, r0
 8029758:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 802975c:	b2dd      	uxtb	r5, r3
 802975e:	b978      	cbnz	r0, 8029780 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8029760:	f104 0014 	add.w	r0, r4, #20
 8029764:	f7ff fd64 	bl	8029230 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029768:	9b01      	ldr	r3, [sp, #4]
 802976a:	6623      	str	r3, [r4, #96]	@ 0x60
 802976c:	9b00      	ldr	r3, [sp, #0]
 802976e:	6663      	str	r3, [r4, #100]	@ 0x64
 8029770:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8029774:	b002      	add	sp, #8
 8029776:	bd70      	pop	{r4, r5, r6, pc}
 8029778:	2001      	movs	r0, #1
 802977a:	e7e5      	b.n	8029748 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802977c:	2304      	movs	r3, #4
 802977e:	e7ea      	b.n	8029756 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8029780:	b113      	cbz	r3, 8029788 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8029782:	ea10 0305 	ands.w	r3, r0, r5
 8029786:	d11c      	bne.n	80297c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8029788:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 802978c:	f104 0614 	add.w	r6, r4, #20
 8029790:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8029794:	b98b      	cbnz	r3, 80297ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8029796:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802979a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802979e:	4298      	cmp	r0, r3
 80297a0:	d802      	bhi.n	80297a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80297a2:	4630      	mov	r0, r6
 80297a4:	f7eb fefa 	bl	801559c <_ZN8touchgfx7Outline6moveToEii>
 80297a8:	2301      	movs	r3, #1
 80297aa:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80297ae:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80297b2:	e9dd 2100 	ldrd	r2, r1, [sp]
 80297b6:	4630      	mov	r0, r6
 80297b8:	e7d4      	b.n	8029764 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80297ba:	4630      	mov	r0, r6
 80297bc:	f7ff fd38 	bl	8029230 <_ZN8touchgfx10Rasterizer6lineToEii>
 80297c0:	e7f7      	b.n	80297b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80297c2:	461d      	mov	r5, r3
 80297c4:	e7d0      	b.n	8029768 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080297c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 80297c8:	b538      	push	{r3, r4, r5, lr}
 80297ca:	ed2d 8b10 	vpush	{d8-d15}
 80297ce:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 80297d2:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 802993c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 80297d6:	4605      	mov	r5, r0
 80297d8:	eeb0 ca40 	vmov.f32	s24, s0
 80297dc:	eef0 ca60 	vmov.f32	s25, s1
 80297e0:	eeb0 da41 	vmov.f32	s26, s2
 80297e4:	eef0 da61 	vmov.f32	s27, s3
 80297e8:	eeb0 ea42 	vmov.f32	s28, s4
 80297ec:	eef0 ea62 	vmov.f32	s29, s5
 80297f0:	460c      	mov	r4, r1
 80297f2:	eef0 aa6b 	vmov.f32	s21, s23
 80297f6:	2c08      	cmp	r4, #8
 80297f8:	d86e      	bhi.n	80298d8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 80297fa:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 80297fe:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8029802:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8029806:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802980a:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802980e:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8029812:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029816:	ee7c faad 	vadd.f32	s31, s25, s27
 802981a:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802981e:	ee3d aaae 	vadd.f32	s20, s27, s29
 8029822:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802982a:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802982e:	ee6f faab 	vmul.f32	s31, s31, s23
 8029832:	ee69 9aab 	vmul.f32	s19, s19, s23
 8029836:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802983a:	bf48      	it	mi
 802983c:	eef1 7a67 	vnegmi.f32	s15, s15
 8029840:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8029844:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8029848:	eef4 7acb 	vcmpe.f32	s15, s22
 802984c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029850:	ee68 8aab 	vmul.f32	s17, s17, s23
 8029854:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8029858:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 802985c:	dd3f      	ble.n	80298de <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802985e:	ee27 7a07 	vmul.f32	s14, s14, s14
 8029862:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029866:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802986a:	ee27 7a06 	vmul.f32	s14, s14, s12
 802986e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029876:	d847      	bhi.n	8029908 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8029878:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 802987c:	ee3e 0aed 	vsub.f32	s0, s29, s27
 8029880:	f000 fa85 	bl	8029d8e <atan2f>
 8029884:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8029888:	eeb0 8a40 	vmov.f32	s16, s0
 802988c:	ee3d 0aec 	vsub.f32	s0, s27, s25
 8029890:	f000 fa7d 	bl	8029d8e <atan2f>
 8029894:	ee38 0a40 	vsub.f32	s0, s16, s0
 8029898:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8029940 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 802989c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80298a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298a4:	bf48      	it	mi
 80298a6:	eeb1 0a40 	vnegmi.f32	s0, s0
 80298aa:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80298ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298b2:	bfa4      	itt	ge
 80298b4:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8029944 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 80298b8:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80298bc:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8029948 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 80298c0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80298c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298c8:	d51e      	bpl.n	8029908 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80298ca:	eef0 0a49 	vmov.f32	s1, s18
 80298ce:	eeb0 0a68 	vmov.f32	s0, s17
 80298d2:	4628      	mov	r0, r5
 80298d4:	f7e8 fe5a 	bl	801258c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80298d8:	ecbd 8b10 	vpop	{d8-d15}
 80298dc:	bd38      	pop	{r3, r4, r5, pc}
 80298de:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 80298e2:	eeb0 7a68 	vmov.f32	s14, s17
 80298e6:	eea7 7aea 	vfms.f32	s14, s15, s21
 80298ea:	ee7c 7aae 	vadd.f32	s15, s25, s29
 80298ee:	eef0 6a49 	vmov.f32	s13, s18
 80298f2:	eee7 6aea 	vfms.f32	s13, s15, s21
 80298f6:	ee66 7aa6 	vmul.f32	s15, s13, s13
 80298fa:	eee7 7a07 	vfma.f32	s15, s14, s14
 80298fe:	eef4 7ac6 	vcmpe.f32	s15, s12
 8029902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029906:	d9e0      	bls.n	80298ca <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8029908:	3401      	adds	r4, #1
 802990a:	eef0 0a6c 	vmov.f32	s1, s25
 802990e:	eeb0 0a4c 	vmov.f32	s0, s24
 8029912:	4621      	mov	r1, r4
 8029914:	eef0 2a49 	vmov.f32	s5, s18
 8029918:	eeb0 2a68 	vmov.f32	s4, s17
 802991c:	eef0 1a6f 	vmov.f32	s3, s31
 8029920:	eeb0 1a4f 	vmov.f32	s2, s30
 8029924:	4628      	mov	r0, r5
 8029926:	f7ff ff4f 	bl	80297c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802992a:	eef0 da4a 	vmov.f32	s27, s20
 802992e:	eeb0 da69 	vmov.f32	s26, s19
 8029932:	eef0 ca49 	vmov.f32	s25, s18
 8029936:	eeb0 ca68 	vmov.f32	s24, s17
 802993a:	e75c      	b.n	80297f6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 802993c:	2edbe6ff 	.word	0x2edbe6ff
 8029940:	40490fdb 	.word	0x40490fdb
 8029944:	40c90fdb 	.word	0x40c90fdb
 8029948:	3dcccccd 	.word	0x3dcccccd

0802994c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 802994c:	b530      	push	{r4, r5, lr}
 802994e:	ed2d 8b10 	vpush	{d8-d15}
 8029952:	4604      	mov	r4, r0
 8029954:	b085      	sub	sp, #20
 8029956:	eef0 8a40 	vmov.f32	s17, s0
 802995a:	eef0 9a60 	vmov.f32	s19, s1
 802995e:	eef0 fa41 	vmov.f32	s31, s2
 8029962:	eeb0 fa61 	vmov.f32	s30, s3
 8029966:	eef0 ba42 	vmov.f32	s23, s4
 802996a:	eeb0 ca62 	vmov.f32	s24, s5
 802996e:	eef0 aa43 	vmov.f32	s21, s6
 8029972:	eeb0 ba63 	vmov.f32	s22, s7
 8029976:	460d      	mov	r5, r1
 8029978:	2d08      	cmp	r5, #8
 802997a:	f200 8115 	bhi.w	8029ba8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802997e:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 8029982:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8029986:	ee7f 6aab 	vadd.f32	s13, s31, s23
 802998a:	ee26 6a27 	vmul.f32	s12, s12, s15
 802998e:	ee38 daaf 	vadd.f32	s26, s17, s31
 8029992:	ed8d 6a01 	vstr	s12, [sp, #4]
 8029996:	eea6 6aa7 	vfma.f32	s12, s13, s15
 802999a:	ee2d da27 	vmul.f32	s26, s26, s15
 802999e:	ee7c ca0b 	vadd.f32	s25, s24, s22
 80299a2:	eeb0 ea4d 	vmov.f32	s28, s26
 80299a6:	eea6 eaa7 	vfma.f32	s28, s13, s15
 80299aa:	ee6c caa7 	vmul.f32	s25, s25, s15
 80299ae:	ee66 6a27 	vmul.f32	s13, s12, s15
 80299b2:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 80299b6:	edcd 6a03 	vstr	s13, [sp, #12]
 80299ba:	ee79 da8f 	vadd.f32	s27, s19, s30
 80299be:	eef0 6a6c 	vmov.f32	s13, s25
 80299c2:	eee7 6a27 	vfma.f32	s13, s14, s15
 80299c6:	ee6d daa7 	vmul.f32	s27, s27, s15
 80299ca:	ee2e ea27 	vmul.f32	s28, s28, s15
 80299ce:	eef0 ea6d 	vmov.f32	s29, s27
 80299d2:	eee7 ea27 	vfma.f32	s29, s14, s15
 80299d6:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80299da:	ee6e eaa7 	vmul.f32	s29, s29, s15
 80299de:	ed8d 7a02 	vstr	s14, [sp, #8]
 80299e2:	ed9d 7a03 	vldr	s14, [sp, #12]
 80299e6:	ee3e 9a07 	vadd.f32	s18, s28, s14
 80299ea:	ed9d 7a02 	vldr	s14, [sp, #8]
 80299ee:	ee3e aa87 	vadd.f32	s20, s29, s14
 80299f2:	ee29 9a27 	vmul.f32	s18, s18, s15
 80299f6:	ee2a aa27 	vmul.f32	s20, s20, s15
 80299fa:	eef0 6a67 	vmov.f32	s13, s15
 80299fe:	2d00      	cmp	r5, #0
 8029a00:	f000 810d 	beq.w	8029c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029a04:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8029a08:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8029a0c:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8029a10:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8029a14:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8029a18:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8029a1c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8029a20:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8029a24:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8029a28:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8029a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a30:	eea5 6a27 	vfma.f32	s12, s10, s15
 8029a34:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8029c64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8029a38:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8029a3c:	bf48      	it	mi
 8029a3e:	eeb1 7a47 	vnegmi.f32	s14, s14
 8029a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a46:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8029a4a:	bf48      	it	mi
 8029a4c:	eeb1 6a46 	vnegmi.f32	s12, s12
 8029a50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a54:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8029a58:	f340 80aa 	ble.w	8029bb0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8029a5c:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8029a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a64:	dd5c      	ble.n	8029b20 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8029a66:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8029a6a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8029a6e:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8029a72:	ee27 7a07 	vmul.f32	s14, s14, s14
 8029a76:	ee65 7a85 	vmul.f32	s15, s11, s10
 8029a7a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029a82:	f200 80cc 	bhi.w	8029c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029a86:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8029a8a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8029a8e:	f000 f97e 	bl	8029d8e <atan2f>
 8029a92:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8029a96:	eeb0 8a40 	vmov.f32	s16, s0
 8029a9a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8029a9e:	f000 f976 	bl	8029d8e <atan2f>
 8029aa2:	ee38 fa40 	vsub.f32	s30, s16, s0
 8029aa6:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8029aaa:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 8029aae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ab2:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8029ab6:	bf48      	it	mi
 8029ab8:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8029abc:	f000 f967 	bl	8029d8e <atan2f>
 8029ac0:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029ac4:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8029c68 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8029ac8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029acc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ad0:	eeb4 fae7 	vcmpe.f32	s30, s15
 8029ad4:	bf48      	it	mi
 8029ad6:	eeb1 0a40 	vnegmi.f32	s0, s0
 8029ada:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8029c68 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8029ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ae2:	bfa8      	it	ge
 8029ae4:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8029c6c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8029ae8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029aec:	bfa8      	it	ge
 8029aee:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8029af2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029af6:	bfa8      	it	ge
 8029af8:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8029c6c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8029afc:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8029c70 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8029b00:	bfa8      	it	ge
 8029b02:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8029b06:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8029b0a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029b0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b12:	f140 8084 	bpl.w	8029c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029b16:	eef0 0a4a 	vmov.f32	s1, s20
 8029b1a:	eeb0 0a49 	vmov.f32	s0, s18
 8029b1e:	e040      	b.n	8029ba2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8029b20:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029b24:	ee27 7a07 	vmul.f32	s14, s14, s14
 8029b28:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8029b2c:	ee67 7a85 	vmul.f32	s15, s15, s10
 8029b30:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029b34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b38:	d871      	bhi.n	8029c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029b3a:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8029b3e:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8029b42:	f000 f924 	bl	8029d8e <atan2f>
 8029b46:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8029b4a:	eeb0 8a40 	vmov.f32	s16, s0
 8029b4e:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8029b52:	f000 f91c 	bl	8029d8e <atan2f>
 8029b56:	ee38 0a40 	vsub.f32	s0, s16, s0
 8029b5a:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8029c68 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8029b5e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029b62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b66:	bf48      	it	mi
 8029b68:	eeb1 0a40 	vnegmi.f32	s0, s0
 8029b6c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029b70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b74:	bfa4      	itt	ge
 8029b76:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8029c6c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8029b7a:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8029b7e:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8029c70 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8029b82:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029b86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b8a:	d548      	bpl.n	8029c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029b8c:	eef0 0a4f 	vmov.f32	s1, s30
 8029b90:	eeb0 0a6f 	vmov.f32	s0, s31
 8029b94:	4620      	mov	r0, r4
 8029b96:	f7e8 fcf9 	bl	801258c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8029b9a:	eef0 0a4c 	vmov.f32	s1, s24
 8029b9e:	eeb0 0a6b 	vmov.f32	s0, s23
 8029ba2:	4620      	mov	r0, r4
 8029ba4:	f7e8 fcf2 	bl	801258c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8029ba8:	b005      	add	sp, #20
 8029baa:	ecbd 8b10 	vpop	{d8-d15}
 8029bae:	bd30      	pop	{r4, r5, pc}
 8029bb0:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8029c64 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8029bb4:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8029bb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029bbc:	dd19      	ble.n	8029bf2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 8029bbe:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029bc2:	ee26 7a06 	vmul.f32	s14, s12, s12
 8029bc6:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8029bca:	ee67 7a85 	vmul.f32	s15, s15, s10
 8029bce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029bd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029bd6:	d822      	bhi.n	8029c1e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029bd8:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8029bdc:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8029be0:	f000 f8d5 	bl	8029d8e <atan2f>
 8029be4:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8029be8:	eeb0 8a40 	vmov.f32	s16, s0
 8029bec:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8029bf0:	e7af      	b.n	8029b52 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8029bf2:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8029bf6:	eeb0 7a49 	vmov.f32	s14, s18
 8029bfa:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8029bfe:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8029c02:	eeb0 6a4a 	vmov.f32	s12, s20
 8029c06:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8029c0a:	ee66 7a06 	vmul.f32	s15, s12, s12
 8029c0e:	eee7 7a07 	vfma.f32	s15, s14, s14
 8029c12:	eef4 7ac5 	vcmpe.f32	s15, s10
 8029c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c1a:	f67f af7c 	bls.w	8029b16 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8029c1e:	3501      	adds	r5, #1
 8029c20:	eef0 0a69 	vmov.f32	s1, s19
 8029c24:	eeb0 0a68 	vmov.f32	s0, s17
 8029c28:	4629      	mov	r1, r5
 8029c2a:	eef0 3a4a 	vmov.f32	s7, s20
 8029c2e:	eeb0 3a49 	vmov.f32	s6, s18
 8029c32:	eef0 2a6e 	vmov.f32	s5, s29
 8029c36:	eeb0 2a4e 	vmov.f32	s4, s28
 8029c3a:	eef0 1a6d 	vmov.f32	s3, s27
 8029c3e:	eeb0 1a4d 	vmov.f32	s2, s26
 8029c42:	4620      	mov	r0, r4
 8029c44:	f7ff fe82 	bl	802994c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8029c48:	eeb0 ca6c 	vmov.f32	s24, s25
 8029c4c:	eddd ba01 	vldr	s23, [sp, #4]
 8029c50:	ed9d fa02 	vldr	s30, [sp, #8]
 8029c54:	eddd fa03 	vldr	s31, [sp, #12]
 8029c58:	eef0 9a4a 	vmov.f32	s19, s20
 8029c5c:	eef0 8a49 	vmov.f32	s17, s18
 8029c60:	e68a      	b.n	8029978 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8029c62:	bf00      	nop
 8029c64:	2edbe6ff 	.word	0x2edbe6ff
 8029c68:	40490fdb 	.word	0x40490fdb
 8029c6c:	40c90fdb 	.word	0x40c90fdb
 8029c70:	3dcccccd 	.word	0x3dcccccd

08029c74 <_ZN8touchgfx6CanvasD1Ev>:
 8029c74:	b510      	push	{r4, lr}
 8029c76:	4b04      	ldr	r3, [pc, #16]	@ (8029c88 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8029c78:	4604      	mov	r4, r0
 8029c7a:	f840 3b14 	str.w	r3, [r0], #20
 8029c7e:	f7ea ff87 	bl	8014b90 <_ZN8touchgfx7OutlineD1Ev>
 8029c82:	4620      	mov	r0, r4
 8029c84:	bd10      	pop	{r4, pc}
 8029c86:	bf00      	nop
 8029c88:	0802e7e0 	.word	0x0802e7e0

08029c8c <_ZN8touchgfx6CanvasD0Ev>:
 8029c8c:	b510      	push	{r4, lr}
 8029c8e:	4604      	mov	r4, r0
 8029c90:	f7ff fff0 	bl	8029c74 <_ZN8touchgfx6CanvasD1Ev>
 8029c94:	4620      	mov	r0, r4
 8029c96:	2174      	movs	r1, #116	@ 0x74
 8029c98:	f000 f826 	bl	8029ce8 <_ZdlPvj>
 8029c9c:	4620      	mov	r0, r4
 8029c9e:	bd10      	pop	{r4, pc}

08029ca0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8029ca0:	b570      	push	{r4, r5, r6, lr}
 8029ca2:	790b      	ldrb	r3, [r1, #4]
 8029ca4:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8029ca8:	2b00      	cmp	r3, #0
 8029caa:	bf0c      	ite	eq
 8029cac:	2301      	moveq	r3, #1
 8029cae:	2300      	movne	r3, #0
 8029cb0:	4604      	mov	r4, r0
 8029cb2:	460e      	mov	r6, r1
 8029cb4:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8029cb8:	d109      	bne.n	8029cce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8029cba:	b14d      	cbz	r5, 8029cd0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8029cbc:	7933      	ldrb	r3, [r6, #4]
 8029cbe:	2b01      	cmp	r3, #1
 8029cc0:	d10c      	bne.n	8029cdc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8029cc2:	6823      	ldr	r3, [r4, #0]
 8029cc4:	4620      	mov	r0, r4
 8029cc6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8029cc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029ccc:	4718      	bx	r3
 8029cce:	b12d      	cbz	r5, 8029cdc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8029cd0:	6823      	ldr	r3, [r4, #0]
 8029cd2:	4620      	mov	r0, r4
 8029cd4:	695b      	ldr	r3, [r3, #20]
 8029cd6:	4798      	blx	r3
 8029cd8:	2d00      	cmp	r5, #0
 8029cda:	d1ef      	bne.n	8029cbc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8029cdc:	bd70      	pop	{r4, r5, r6, pc}

08029cde <__aeabi_atexit>:
 8029cde:	460b      	mov	r3, r1
 8029ce0:	4601      	mov	r1, r0
 8029ce2:	4618      	mov	r0, r3
 8029ce4:	f001 b920 	b.w	802af28 <__cxa_atexit>

08029ce8 <_ZdlPvj>:
 8029ce8:	f000 b812 	b.w	8029d10 <_ZdlPv>

08029cec <__cxa_guard_acquire>:
 8029cec:	6802      	ldr	r2, [r0, #0]
 8029cee:	07d2      	lsls	r2, r2, #31
 8029cf0:	4603      	mov	r3, r0
 8029cf2:	d405      	bmi.n	8029d00 <__cxa_guard_acquire+0x14>
 8029cf4:	7842      	ldrb	r2, [r0, #1]
 8029cf6:	b102      	cbz	r2, 8029cfa <__cxa_guard_acquire+0xe>
 8029cf8:	deff      	udf	#255	@ 0xff
 8029cfa:	2001      	movs	r0, #1
 8029cfc:	7058      	strb	r0, [r3, #1]
 8029cfe:	4770      	bx	lr
 8029d00:	2000      	movs	r0, #0
 8029d02:	4770      	bx	lr

08029d04 <__cxa_guard_release>:
 8029d04:	2301      	movs	r3, #1
 8029d06:	6003      	str	r3, [r0, #0]
 8029d08:	4770      	bx	lr

08029d0a <__cxa_pure_virtual>:
 8029d0a:	b508      	push	{r3, lr}
 8029d0c:	f000 f80e 	bl	8029d2c <_ZSt9terminatev>

08029d10 <_ZdlPv>:
 8029d10:	f001 b854 	b.w	802adbc <free>

08029d14 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029d14:	b508      	push	{r3, lr}
 8029d16:	4780      	blx	r0
 8029d18:	f001 f81c 	bl	802ad54 <abort>

08029d1c <_ZSt13get_terminatev>:
 8029d1c:	4b02      	ldr	r3, [pc, #8]	@ (8029d28 <_ZSt13get_terminatev+0xc>)
 8029d1e:	6818      	ldr	r0, [r3, #0]
 8029d20:	f3bf 8f5b 	dmb	ish
 8029d24:	4770      	bx	lr
 8029d26:	bf00      	nop
 8029d28:	20000100 	.word	0x20000100

08029d2c <_ZSt9terminatev>:
 8029d2c:	b508      	push	{r3, lr}
 8029d2e:	f7ff fff5 	bl	8029d1c <_ZSt13get_terminatev>
 8029d32:	f7ff ffef 	bl	8029d14 <_ZN10__cxxabiv111__terminateEPFvvE>

08029d36 <sqrt>:
 8029d36:	b538      	push	{r3, r4, r5, lr}
 8029d38:	ed2d 8b02 	vpush	{d8}
 8029d3c:	ec55 4b10 	vmov	r4, r5, d0
 8029d40:	f000 f8d0 	bl	8029ee4 <__ieee754_sqrt>
 8029d44:	4622      	mov	r2, r4
 8029d46:	462b      	mov	r3, r5
 8029d48:	4620      	mov	r0, r4
 8029d4a:	4629      	mov	r1, r5
 8029d4c:	eeb0 8a40 	vmov.f32	s16, s0
 8029d50:	eef0 8a60 	vmov.f32	s17, s1
 8029d54:	f7d6 fef2 	bl	8000b3c <__aeabi_dcmpun>
 8029d58:	b990      	cbnz	r0, 8029d80 <sqrt+0x4a>
 8029d5a:	2200      	movs	r2, #0
 8029d5c:	2300      	movs	r3, #0
 8029d5e:	4620      	mov	r0, r4
 8029d60:	4629      	mov	r1, r5
 8029d62:	f7d6 fec3 	bl	8000aec <__aeabi_dcmplt>
 8029d66:	b158      	cbz	r0, 8029d80 <sqrt+0x4a>
 8029d68:	f001 fab8 	bl	802b2dc <__errno>
 8029d6c:	2321      	movs	r3, #33	@ 0x21
 8029d6e:	6003      	str	r3, [r0, #0]
 8029d70:	2200      	movs	r2, #0
 8029d72:	2300      	movs	r3, #0
 8029d74:	4610      	mov	r0, r2
 8029d76:	4619      	mov	r1, r3
 8029d78:	f7d6 fd70 	bl	800085c <__aeabi_ddiv>
 8029d7c:	ec41 0b18 	vmov	d8, r0, r1
 8029d80:	eeb0 0a48 	vmov.f32	s0, s16
 8029d84:	eef0 0a68 	vmov.f32	s1, s17
 8029d88:	ecbd 8b02 	vpop	{d8}
 8029d8c:	bd38      	pop	{r3, r4, r5, pc}

08029d8e <atan2f>:
 8029d8e:	f000 ba23 	b.w	802a1d8 <__ieee754_atan2f>
	...

08029d94 <sqrtf>:
 8029d94:	b508      	push	{r3, lr}
 8029d96:	ed2d 8b02 	vpush	{d8}
 8029d9a:	eeb0 8a40 	vmov.f32	s16, s0
 8029d9e:	f000 f977 	bl	802a090 <__ieee754_sqrtf>
 8029da2:	eeb4 8a48 	vcmp.f32	s16, s16
 8029da6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029daa:	d60c      	bvs.n	8029dc6 <sqrtf+0x32>
 8029dac:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8029dcc <sqrtf+0x38>
 8029db0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029db4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029db8:	d505      	bpl.n	8029dc6 <sqrtf+0x32>
 8029dba:	f001 fa8f 	bl	802b2dc <__errno>
 8029dbe:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029dc2:	2321      	movs	r3, #33	@ 0x21
 8029dc4:	6003      	str	r3, [r0, #0]
 8029dc6:	ecbd 8b02 	vpop	{d8}
 8029dca:	bd08      	pop	{r3, pc}
 8029dcc:	00000000 	.word	0x00000000

08029dd0 <cosf>:
 8029dd0:	ee10 3a10 	vmov	r3, s0
 8029dd4:	b507      	push	{r0, r1, r2, lr}
 8029dd6:	4a1e      	ldr	r2, [pc, #120]	@ (8029e50 <cosf+0x80>)
 8029dd8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8029ddc:	4293      	cmp	r3, r2
 8029dde:	d806      	bhi.n	8029dee <cosf+0x1e>
 8029de0:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8029e54 <cosf+0x84>
 8029de4:	b003      	add	sp, #12
 8029de6:	f85d eb04 	ldr.w	lr, [sp], #4
 8029dea:	f000 b955 	b.w	802a098 <__kernel_cosf>
 8029dee:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029df2:	d304      	bcc.n	8029dfe <cosf+0x2e>
 8029df4:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029df8:	b003      	add	sp, #12
 8029dfa:	f85d fb04 	ldr.w	pc, [sp], #4
 8029dfe:	4668      	mov	r0, sp
 8029e00:	f000 fa8a 	bl	802a318 <__ieee754_rem_pio2f>
 8029e04:	f000 0003 	and.w	r0, r0, #3
 8029e08:	2801      	cmp	r0, #1
 8029e0a:	d009      	beq.n	8029e20 <cosf+0x50>
 8029e0c:	2802      	cmp	r0, #2
 8029e0e:	d010      	beq.n	8029e32 <cosf+0x62>
 8029e10:	b9b0      	cbnz	r0, 8029e40 <cosf+0x70>
 8029e12:	eddd 0a01 	vldr	s1, [sp, #4]
 8029e16:	ed9d 0a00 	vldr	s0, [sp]
 8029e1a:	f000 f93d 	bl	802a098 <__kernel_cosf>
 8029e1e:	e7eb      	b.n	8029df8 <cosf+0x28>
 8029e20:	eddd 0a01 	vldr	s1, [sp, #4]
 8029e24:	ed9d 0a00 	vldr	s0, [sp]
 8029e28:	f000 f98e 	bl	802a148 <__kernel_sinf>
 8029e2c:	eeb1 0a40 	vneg.f32	s0, s0
 8029e30:	e7e2      	b.n	8029df8 <cosf+0x28>
 8029e32:	eddd 0a01 	vldr	s1, [sp, #4]
 8029e36:	ed9d 0a00 	vldr	s0, [sp]
 8029e3a:	f000 f92d 	bl	802a098 <__kernel_cosf>
 8029e3e:	e7f5      	b.n	8029e2c <cosf+0x5c>
 8029e40:	eddd 0a01 	vldr	s1, [sp, #4]
 8029e44:	ed9d 0a00 	vldr	s0, [sp]
 8029e48:	2001      	movs	r0, #1
 8029e4a:	f000 f97d 	bl	802a148 <__kernel_sinf>
 8029e4e:	e7d3      	b.n	8029df8 <cosf+0x28>
 8029e50:	3f490fd8 	.word	0x3f490fd8
 8029e54:	00000000 	.word	0x00000000

08029e58 <sinf>:
 8029e58:	ee10 3a10 	vmov	r3, s0
 8029e5c:	b507      	push	{r0, r1, r2, lr}
 8029e5e:	4a1f      	ldr	r2, [pc, #124]	@ (8029edc <sinf+0x84>)
 8029e60:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8029e64:	4293      	cmp	r3, r2
 8029e66:	d807      	bhi.n	8029e78 <sinf+0x20>
 8029e68:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8029ee0 <sinf+0x88>
 8029e6c:	2000      	movs	r0, #0
 8029e6e:	b003      	add	sp, #12
 8029e70:	f85d eb04 	ldr.w	lr, [sp], #4
 8029e74:	f000 b968 	b.w	802a148 <__kernel_sinf>
 8029e78:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029e7c:	d304      	bcc.n	8029e88 <sinf+0x30>
 8029e7e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029e82:	b003      	add	sp, #12
 8029e84:	f85d fb04 	ldr.w	pc, [sp], #4
 8029e88:	4668      	mov	r0, sp
 8029e8a:	f000 fa45 	bl	802a318 <__ieee754_rem_pio2f>
 8029e8e:	f000 0003 	and.w	r0, r0, #3
 8029e92:	2801      	cmp	r0, #1
 8029e94:	d00a      	beq.n	8029eac <sinf+0x54>
 8029e96:	2802      	cmp	r0, #2
 8029e98:	d00f      	beq.n	8029eba <sinf+0x62>
 8029e9a:	b9c0      	cbnz	r0, 8029ece <sinf+0x76>
 8029e9c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ea0:	ed9d 0a00 	vldr	s0, [sp]
 8029ea4:	2001      	movs	r0, #1
 8029ea6:	f000 f94f 	bl	802a148 <__kernel_sinf>
 8029eaa:	e7ea      	b.n	8029e82 <sinf+0x2a>
 8029eac:	eddd 0a01 	vldr	s1, [sp, #4]
 8029eb0:	ed9d 0a00 	vldr	s0, [sp]
 8029eb4:	f000 f8f0 	bl	802a098 <__kernel_cosf>
 8029eb8:	e7e3      	b.n	8029e82 <sinf+0x2a>
 8029eba:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ebe:	ed9d 0a00 	vldr	s0, [sp]
 8029ec2:	2001      	movs	r0, #1
 8029ec4:	f000 f940 	bl	802a148 <__kernel_sinf>
 8029ec8:	eeb1 0a40 	vneg.f32	s0, s0
 8029ecc:	e7d9      	b.n	8029e82 <sinf+0x2a>
 8029ece:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ed2:	ed9d 0a00 	vldr	s0, [sp]
 8029ed6:	f000 f8df 	bl	802a098 <__kernel_cosf>
 8029eda:	e7f5      	b.n	8029ec8 <sinf+0x70>
 8029edc:	3f490fd8 	.word	0x3f490fd8
 8029ee0:	00000000 	.word	0x00000000

08029ee4 <__ieee754_sqrt>:
 8029ee4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029ee8:	4a66      	ldr	r2, [pc, #408]	@ (802a084 <__ieee754_sqrt+0x1a0>)
 8029eea:	ec55 4b10 	vmov	r4, r5, d0
 8029eee:	43aa      	bics	r2, r5
 8029ef0:	462b      	mov	r3, r5
 8029ef2:	4621      	mov	r1, r4
 8029ef4:	d110      	bne.n	8029f18 <__ieee754_sqrt+0x34>
 8029ef6:	4622      	mov	r2, r4
 8029ef8:	4620      	mov	r0, r4
 8029efa:	4629      	mov	r1, r5
 8029efc:	f7d6 fb84 	bl	8000608 <__aeabi_dmul>
 8029f00:	4602      	mov	r2, r0
 8029f02:	460b      	mov	r3, r1
 8029f04:	4620      	mov	r0, r4
 8029f06:	4629      	mov	r1, r5
 8029f08:	f7d6 f9c8 	bl	800029c <__adddf3>
 8029f0c:	4604      	mov	r4, r0
 8029f0e:	460d      	mov	r5, r1
 8029f10:	ec45 4b10 	vmov	d0, r4, r5
 8029f14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029f18:	2d00      	cmp	r5, #0
 8029f1a:	dc0e      	bgt.n	8029f3a <__ieee754_sqrt+0x56>
 8029f1c:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 8029f20:	4322      	orrs	r2, r4
 8029f22:	d0f5      	beq.n	8029f10 <__ieee754_sqrt+0x2c>
 8029f24:	b19d      	cbz	r5, 8029f4e <__ieee754_sqrt+0x6a>
 8029f26:	4622      	mov	r2, r4
 8029f28:	4620      	mov	r0, r4
 8029f2a:	4629      	mov	r1, r5
 8029f2c:	f7d6 f9b4 	bl	8000298 <__aeabi_dsub>
 8029f30:	4602      	mov	r2, r0
 8029f32:	460b      	mov	r3, r1
 8029f34:	f7d6 fc92 	bl	800085c <__aeabi_ddiv>
 8029f38:	e7e8      	b.n	8029f0c <__ieee754_sqrt+0x28>
 8029f3a:	152a      	asrs	r2, r5, #20
 8029f3c:	d115      	bne.n	8029f6a <__ieee754_sqrt+0x86>
 8029f3e:	2000      	movs	r0, #0
 8029f40:	e009      	b.n	8029f56 <__ieee754_sqrt+0x72>
 8029f42:	0acb      	lsrs	r3, r1, #11
 8029f44:	3a15      	subs	r2, #21
 8029f46:	0549      	lsls	r1, r1, #21
 8029f48:	2b00      	cmp	r3, #0
 8029f4a:	d0fa      	beq.n	8029f42 <__ieee754_sqrt+0x5e>
 8029f4c:	e7f7      	b.n	8029f3e <__ieee754_sqrt+0x5a>
 8029f4e:	462a      	mov	r2, r5
 8029f50:	e7fa      	b.n	8029f48 <__ieee754_sqrt+0x64>
 8029f52:	005b      	lsls	r3, r3, #1
 8029f54:	3001      	adds	r0, #1
 8029f56:	02dc      	lsls	r4, r3, #11
 8029f58:	d5fb      	bpl.n	8029f52 <__ieee754_sqrt+0x6e>
 8029f5a:	1e44      	subs	r4, r0, #1
 8029f5c:	1b12      	subs	r2, r2, r4
 8029f5e:	f1c0 0420 	rsb	r4, r0, #32
 8029f62:	fa21 f404 	lsr.w	r4, r1, r4
 8029f66:	4323      	orrs	r3, r4
 8029f68:	4081      	lsls	r1, r0
 8029f6a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8029f6e:	f2a2 37ff 	subw	r7, r2, #1023	@ 0x3ff
 8029f72:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8029f76:	07d2      	lsls	r2, r2, #31
 8029f78:	bf5c      	itt	pl
 8029f7a:	005b      	lslpl	r3, r3, #1
 8029f7c:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 8029f80:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8029f84:	bf58      	it	pl
 8029f86:	0049      	lslpl	r1, r1, #1
 8029f88:	2600      	movs	r6, #0
 8029f8a:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 8029f8e:	107f      	asrs	r7, r7, #1
 8029f90:	0049      	lsls	r1, r1, #1
 8029f92:	2016      	movs	r0, #22
 8029f94:	4632      	mov	r2, r6
 8029f96:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 8029f9a:	1915      	adds	r5, r2, r4
 8029f9c:	429d      	cmp	r5, r3
 8029f9e:	bfde      	ittt	le
 8029fa0:	192a      	addle	r2, r5, r4
 8029fa2:	1b5b      	suble	r3, r3, r5
 8029fa4:	1936      	addle	r6, r6, r4
 8029fa6:	0fcd      	lsrs	r5, r1, #31
 8029fa8:	3801      	subs	r0, #1
 8029faa:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8029fae:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8029fb2:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8029fb6:	d1f0      	bne.n	8029f9a <__ieee754_sqrt+0xb6>
 8029fb8:	4605      	mov	r5, r0
 8029fba:	2420      	movs	r4, #32
 8029fbc:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8029fc0:	4293      	cmp	r3, r2
 8029fc2:	eb0c 0e00 	add.w	lr, ip, r0
 8029fc6:	dc02      	bgt.n	8029fce <__ieee754_sqrt+0xea>
 8029fc8:	d113      	bne.n	8029ff2 <__ieee754_sqrt+0x10e>
 8029fca:	458e      	cmp	lr, r1
 8029fcc:	d811      	bhi.n	8029ff2 <__ieee754_sqrt+0x10e>
 8029fce:	f1be 0f00 	cmp.w	lr, #0
 8029fd2:	eb0e 000c 	add.w	r0, lr, ip
 8029fd6:	da3f      	bge.n	802a058 <__ieee754_sqrt+0x174>
 8029fd8:	2800      	cmp	r0, #0
 8029fda:	db3d      	blt.n	802a058 <__ieee754_sqrt+0x174>
 8029fdc:	f102 0801 	add.w	r8, r2, #1
 8029fe0:	1a9b      	subs	r3, r3, r2
 8029fe2:	458e      	cmp	lr, r1
 8029fe4:	bf88      	it	hi
 8029fe6:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8029fea:	eba1 010e 	sub.w	r1, r1, lr
 8029fee:	4465      	add	r5, ip
 8029ff0:	4642      	mov	r2, r8
 8029ff2:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8029ff6:	3c01      	subs	r4, #1
 8029ff8:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8029ffc:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802a000:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 802a004:	d1dc      	bne.n	8029fc0 <__ieee754_sqrt+0xdc>
 802a006:	4319      	orrs	r1, r3
 802a008:	d01b      	beq.n	802a042 <__ieee754_sqrt+0x15e>
 802a00a:	f8df a07c 	ldr.w	sl, [pc, #124]	@ 802a088 <__ieee754_sqrt+0x1a4>
 802a00e:	f8df b07c 	ldr.w	fp, [pc, #124]	@ 802a08c <__ieee754_sqrt+0x1a8>
 802a012:	e9da 0100 	ldrd	r0, r1, [sl]
 802a016:	e9db 2300 	ldrd	r2, r3, [fp]
 802a01a:	f7d6 f93d 	bl	8000298 <__aeabi_dsub>
 802a01e:	e9da 8900 	ldrd	r8, r9, [sl]
 802a022:	4602      	mov	r2, r0
 802a024:	460b      	mov	r3, r1
 802a026:	4640      	mov	r0, r8
 802a028:	4649      	mov	r1, r9
 802a02a:	f7d6 fd69 	bl	8000b00 <__aeabi_dcmple>
 802a02e:	b140      	cbz	r0, 802a042 <__ieee754_sqrt+0x15e>
 802a030:	f1b5 3fff 	cmp.w	r5, #4294967295
 802a034:	e9da 0100 	ldrd	r0, r1, [sl]
 802a038:	e9db 2300 	ldrd	r2, r3, [fp]
 802a03c:	d10e      	bne.n	802a05c <__ieee754_sqrt+0x178>
 802a03e:	3601      	adds	r6, #1
 802a040:	4625      	mov	r5, r4
 802a042:	1073      	asrs	r3, r6, #1
 802a044:	f103 537f 	add.w	r3, r3, #1069547520	@ 0x3fc00000
 802a048:	f503 1300 	add.w	r3, r3, #2097152	@ 0x200000
 802a04c:	eb03 5107 	add.w	r1, r3, r7, lsl #20
 802a050:	086b      	lsrs	r3, r5, #1
 802a052:	ea43 70c6 	orr.w	r0, r3, r6, lsl #31
 802a056:	e759      	b.n	8029f0c <__ieee754_sqrt+0x28>
 802a058:	4690      	mov	r8, r2
 802a05a:	e7c1      	b.n	8029fe0 <__ieee754_sqrt+0xfc>
 802a05c:	f7d6 f91e 	bl	800029c <__adddf3>
 802a060:	e9da 8900 	ldrd	r8, r9, [sl]
 802a064:	4602      	mov	r2, r0
 802a066:	460b      	mov	r3, r1
 802a068:	4640      	mov	r0, r8
 802a06a:	4649      	mov	r1, r9
 802a06c:	f7d6 fd3e 	bl	8000aec <__aeabi_dcmplt>
 802a070:	b120      	cbz	r0, 802a07c <__ieee754_sqrt+0x198>
 802a072:	1cab      	adds	r3, r5, #2
 802a074:	bf08      	it	eq
 802a076:	3601      	addeq	r6, #1
 802a078:	3502      	adds	r5, #2
 802a07a:	e7e2      	b.n	802a042 <__ieee754_sqrt+0x15e>
 802a07c:	1c6b      	adds	r3, r5, #1
 802a07e:	f023 0501 	bic.w	r5, r3, #1
 802a082:	e7de      	b.n	802a042 <__ieee754_sqrt+0x15e>
 802a084:	7ff00000 	.word	0x7ff00000
 802a088:	0802e7f8 	.word	0x0802e7f8
 802a08c:	0802e7f0 	.word	0x0802e7f0

0802a090 <__ieee754_sqrtf>:
 802a090:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802a094:	4770      	bx	lr
	...

0802a098 <__kernel_cosf>:
 802a098:	ee10 3a10 	vmov	r3, s0
 802a09c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802a0a0:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802a0a4:	eef0 6a40 	vmov.f32	s13, s0
 802a0a8:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802a0ac:	d204      	bcs.n	802a0b8 <__kernel_cosf+0x20>
 802a0ae:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 802a0b2:	ee17 2a90 	vmov	r2, s15
 802a0b6:	b342      	cbz	r2, 802a10a <__kernel_cosf+0x72>
 802a0b8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 802a0bc:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 802a128 <__kernel_cosf+0x90>
 802a0c0:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 802a12c <__kernel_cosf+0x94>
 802a0c4:	4a1a      	ldr	r2, [pc, #104]	@ (802a130 <__kernel_cosf+0x98>)
 802a0c6:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a0ca:	4293      	cmp	r3, r2
 802a0cc:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802a134 <__kernel_cosf+0x9c>
 802a0d0:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a0d4:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 802a138 <__kernel_cosf+0xa0>
 802a0d8:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a0dc:	eddf 7a17 	vldr	s15, [pc, #92]	@ 802a13c <__kernel_cosf+0xa4>
 802a0e0:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a0e4:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 802a140 <__kernel_cosf+0xa8>
 802a0e8:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a0ec:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 802a0f0:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a0f4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802a0f8:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a0fc:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a100:	d804      	bhi.n	802a10c <__kernel_cosf+0x74>
 802a102:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a106:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a10a:	4770      	bx	lr
 802a10c:	4a0d      	ldr	r2, [pc, #52]	@ (802a144 <__kernel_cosf+0xac>)
 802a10e:	4293      	cmp	r3, r2
 802a110:	bf9a      	itte	ls
 802a112:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802a116:	ee07 3a10 	vmovls	s14, r3
 802a11a:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 802a11e:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a122:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a126:	e7ec      	b.n	802a102 <__kernel_cosf+0x6a>
 802a128:	ad47d74e 	.word	0xad47d74e
 802a12c:	310f74f6 	.word	0x310f74f6
 802a130:	3e999999 	.word	0x3e999999
 802a134:	b493f27c 	.word	0xb493f27c
 802a138:	37d00d01 	.word	0x37d00d01
 802a13c:	bab60b61 	.word	0xbab60b61
 802a140:	3d2aaaab 	.word	0x3d2aaaab
 802a144:	3f480000 	.word	0x3f480000

0802a148 <__kernel_sinf>:
 802a148:	ee10 3a10 	vmov	r3, s0
 802a14c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802a150:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802a154:	d204      	bcs.n	802a160 <__kernel_sinf+0x18>
 802a156:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a15a:	ee17 3a90 	vmov	r3, s15
 802a15e:	b35b      	cbz	r3, 802a1b8 <__kernel_sinf+0x70>
 802a160:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a164:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802a1bc <__kernel_sinf+0x74>
 802a168:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 802a1c0 <__kernel_sinf+0x78>
 802a16c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a170:	eddf 7a14 	vldr	s15, [pc, #80]	@ 802a1c4 <__kernel_sinf+0x7c>
 802a174:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a178:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 802a1c8 <__kernel_sinf+0x80>
 802a17c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a180:	eddf 7a12 	vldr	s15, [pc, #72]	@ 802a1cc <__kernel_sinf+0x84>
 802a184:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a188:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a18c:	b930      	cbnz	r0, 802a19c <__kernel_sinf+0x54>
 802a18e:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 802a1d0 <__kernel_sinf+0x88>
 802a192:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a196:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a19a:	4770      	bx	lr
 802a19c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a1a0:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 802a1a4:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a1a8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a1ac:	eddf 7a09 	vldr	s15, [pc, #36]	@ 802a1d4 <__kernel_sinf+0x8c>
 802a1b0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a1b4:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a1b8:	4770      	bx	lr
 802a1ba:	bf00      	nop
 802a1bc:	2f2ec9d3 	.word	0x2f2ec9d3
 802a1c0:	b2d72f34 	.word	0xb2d72f34
 802a1c4:	3638ef1b 	.word	0x3638ef1b
 802a1c8:	b9500d01 	.word	0xb9500d01
 802a1cc:	3c088889 	.word	0x3c088889
 802a1d0:	be2aaaab 	.word	0xbe2aaaab
 802a1d4:	3e2aaaab 	.word	0x3e2aaaab

0802a1d8 <__ieee754_atan2f>:
 802a1d8:	ee10 2a90 	vmov	r2, s1
 802a1dc:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 802a1e0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802a1e4:	b510      	push	{r4, lr}
 802a1e6:	eef0 7a40 	vmov.f32	s15, s0
 802a1ea:	d806      	bhi.n	802a1fa <__ieee754_atan2f+0x22>
 802a1ec:	ee10 0a10 	vmov	r0, s0
 802a1f0:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 802a1f4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802a1f8:	d904      	bls.n	802a204 <__ieee754_atan2f+0x2c>
 802a1fa:	ee77 7aa0 	vadd.f32	s15, s15, s1
 802a1fe:	eeb0 0a67 	vmov.f32	s0, s15
 802a202:	bd10      	pop	{r4, pc}
 802a204:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 802a208:	d103      	bne.n	802a212 <__ieee754_atan2f+0x3a>
 802a20a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a20e:	f000 b9b3 	b.w	802a578 <atanf>
 802a212:	1794      	asrs	r4, r2, #30
 802a214:	f004 0402 	and.w	r4, r4, #2
 802a218:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 802a21c:	b943      	cbnz	r3, 802a230 <__ieee754_atan2f+0x58>
 802a21e:	2c02      	cmp	r4, #2
 802a220:	d05e      	beq.n	802a2e0 <__ieee754_atan2f+0x108>
 802a222:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802a2f4 <__ieee754_atan2f+0x11c>
 802a226:	2c03      	cmp	r4, #3
 802a228:	bf08      	it	eq
 802a22a:	eef0 7a47 	vmoveq.f32	s15, s14
 802a22e:	e7e6      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a230:	b941      	cbnz	r1, 802a244 <__ieee754_atan2f+0x6c>
 802a232:	eddf 7a31 	vldr	s15, [pc, #196]	@ 802a2f8 <__ieee754_atan2f+0x120>
 802a236:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802a2fc <__ieee754_atan2f+0x124>
 802a23a:	2800      	cmp	r0, #0
 802a23c:	bfa8      	it	ge
 802a23e:	eef0 7a47 	vmovge.f32	s15, s14
 802a242:	e7dc      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a244:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802a248:	d110      	bne.n	802a26c <__ieee754_atan2f+0x94>
 802a24a:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802a24e:	f104 34ff 	add.w	r4, r4, #4294967295
 802a252:	d107      	bne.n	802a264 <__ieee754_atan2f+0x8c>
 802a254:	2c02      	cmp	r4, #2
 802a256:	d846      	bhi.n	802a2e6 <__ieee754_atan2f+0x10e>
 802a258:	4b29      	ldr	r3, [pc, #164]	@ (802a300 <__ieee754_atan2f+0x128>)
 802a25a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802a25e:	edd3 7a00 	vldr	s15, [r3]
 802a262:	e7cc      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a264:	2c02      	cmp	r4, #2
 802a266:	d841      	bhi.n	802a2ec <__ieee754_atan2f+0x114>
 802a268:	4b26      	ldr	r3, [pc, #152]	@ (802a304 <__ieee754_atan2f+0x12c>)
 802a26a:	e7f6      	b.n	802a25a <__ieee754_atan2f+0x82>
 802a26c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 802a270:	d0df      	beq.n	802a232 <__ieee754_atan2f+0x5a>
 802a272:	1a5b      	subs	r3, r3, r1
 802a274:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 802a278:	ea4f 51e3 	mov.w	r1, r3, asr #23
 802a27c:	da1a      	bge.n	802a2b4 <__ieee754_atan2f+0xdc>
 802a27e:	2a00      	cmp	r2, #0
 802a280:	da01      	bge.n	802a286 <__ieee754_atan2f+0xae>
 802a282:	313c      	adds	r1, #60	@ 0x3c
 802a284:	db19      	blt.n	802a2ba <__ieee754_atan2f+0xe2>
 802a286:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 802a28a:	f000 fa49 	bl	802a720 <fabsf>
 802a28e:	f000 f973 	bl	802a578 <atanf>
 802a292:	eef0 7a40 	vmov.f32	s15, s0
 802a296:	2c01      	cmp	r4, #1
 802a298:	d012      	beq.n	802a2c0 <__ieee754_atan2f+0xe8>
 802a29a:	2c02      	cmp	r4, #2
 802a29c:	d017      	beq.n	802a2ce <__ieee754_atan2f+0xf6>
 802a29e:	2c00      	cmp	r4, #0
 802a2a0:	d0ad      	beq.n	802a1fe <__ieee754_atan2f+0x26>
 802a2a2:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 802a308 <__ieee754_atan2f+0x130>
 802a2a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a2aa:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 802a30c <__ieee754_atan2f+0x134>
 802a2ae:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a2b2:	e7a4      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a2b4:	eddf 7a11 	vldr	s15, [pc, #68]	@ 802a2fc <__ieee754_atan2f+0x124>
 802a2b8:	e7ed      	b.n	802a296 <__ieee754_atan2f+0xbe>
 802a2ba:	eddf 7a15 	vldr	s15, [pc, #84]	@ 802a310 <__ieee754_atan2f+0x138>
 802a2be:	e7ea      	b.n	802a296 <__ieee754_atan2f+0xbe>
 802a2c0:	ee17 3a90 	vmov	r3, s15
 802a2c4:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802a2c8:	ee07 3a90 	vmov	s15, r3
 802a2cc:	e797      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a2ce:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 802a308 <__ieee754_atan2f+0x130>
 802a2d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a2d6:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 802a30c <__ieee754_atan2f+0x134>
 802a2da:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a2de:	e78e      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a2e0:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 802a30c <__ieee754_atan2f+0x134>
 802a2e4:	e78b      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a2e6:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 802a314 <__ieee754_atan2f+0x13c>
 802a2ea:	e788      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a2ec:	eddf 7a08 	vldr	s15, [pc, #32]	@ 802a310 <__ieee754_atan2f+0x138>
 802a2f0:	e785      	b.n	802a1fe <__ieee754_atan2f+0x26>
 802a2f2:	bf00      	nop
 802a2f4:	c0490fdb 	.word	0xc0490fdb
 802a2f8:	bfc90fdb 	.word	0xbfc90fdb
 802a2fc:	3fc90fdb 	.word	0x3fc90fdb
 802a300:	0802e80c 	.word	0x0802e80c
 802a304:	0802e800 	.word	0x0802e800
 802a308:	33bbbd2e 	.word	0x33bbbd2e
 802a30c:	40490fdb 	.word	0x40490fdb
 802a310:	00000000 	.word	0x00000000
 802a314:	3f490fdb 	.word	0x3f490fdb

0802a318 <__ieee754_rem_pio2f>:
 802a318:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a31a:	ee10 6a10 	vmov	r6, s0
 802a31e:	4b88      	ldr	r3, [pc, #544]	@ (802a540 <__ieee754_rem_pio2f+0x228>)
 802a320:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 802a324:	429d      	cmp	r5, r3
 802a326:	b087      	sub	sp, #28
 802a328:	4604      	mov	r4, r0
 802a32a:	d805      	bhi.n	802a338 <__ieee754_rem_pio2f+0x20>
 802a32c:	2300      	movs	r3, #0
 802a32e:	ed80 0a00 	vstr	s0, [r0]
 802a332:	6043      	str	r3, [r0, #4]
 802a334:	2000      	movs	r0, #0
 802a336:	e022      	b.n	802a37e <__ieee754_rem_pio2f+0x66>
 802a338:	4b82      	ldr	r3, [pc, #520]	@ (802a544 <__ieee754_rem_pio2f+0x22c>)
 802a33a:	429d      	cmp	r5, r3
 802a33c:	d83a      	bhi.n	802a3b4 <__ieee754_rem_pio2f+0x9c>
 802a33e:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802a342:	2e00      	cmp	r6, #0
 802a344:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 802a548 <__ieee754_rem_pio2f+0x230>
 802a348:	4a80      	ldr	r2, [pc, #512]	@ (802a54c <__ieee754_rem_pio2f+0x234>)
 802a34a:	f023 030f 	bic.w	r3, r3, #15
 802a34e:	dd18      	ble.n	802a382 <__ieee754_rem_pio2f+0x6a>
 802a350:	4293      	cmp	r3, r2
 802a352:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a356:	bf09      	itett	eq
 802a358:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 802a550 <__ieee754_rem_pio2f+0x238>
 802a35c:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 802a554 <__ieee754_rem_pio2f+0x23c>
 802a360:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 802a558 <__ieee754_rem_pio2f+0x240>
 802a364:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a368:	ee37 7ae6 	vsub.f32	s14, s15, s13
 802a36c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a370:	ed80 7a00 	vstr	s14, [r0]
 802a374:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a378:	edc0 7a01 	vstr	s15, [r0, #4]
 802a37c:	2001      	movs	r0, #1
 802a37e:	b007      	add	sp, #28
 802a380:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a382:	4293      	cmp	r3, r2
 802a384:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a388:	bf09      	itett	eq
 802a38a:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 802a550 <__ieee754_rem_pio2f+0x238>
 802a38e:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 802a554 <__ieee754_rem_pio2f+0x23c>
 802a392:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 802a558 <__ieee754_rem_pio2f+0x240>
 802a396:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a39a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a39e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3a2:	ed80 7a00 	vstr	s14, [r0]
 802a3a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a3aa:	edc0 7a01 	vstr	s15, [r0, #4]
 802a3ae:	f04f 30ff 	mov.w	r0, #4294967295
 802a3b2:	e7e4      	b.n	802a37e <__ieee754_rem_pio2f+0x66>
 802a3b4:	4b69      	ldr	r3, [pc, #420]	@ (802a55c <__ieee754_rem_pio2f+0x244>)
 802a3b6:	429d      	cmp	r5, r3
 802a3b8:	d873      	bhi.n	802a4a2 <__ieee754_rem_pio2f+0x18a>
 802a3ba:	f000 f9b1 	bl	802a720 <fabsf>
 802a3be:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 802a560 <__ieee754_rem_pio2f+0x248>
 802a3c2:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802a3c6:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a3ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a3ce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a3d2:	ee17 0a90 	vmov	r0, s15
 802a3d6:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802a548 <__ieee754_rem_pio2f+0x230>
 802a3da:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a3de:	281f      	cmp	r0, #31
 802a3e0:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802a554 <__ieee754_rem_pio2f+0x23c>
 802a3e4:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a3e8:	eeb1 6a47 	vneg.f32	s12, s14
 802a3ec:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a3f0:	ee16 1a90 	vmov	r1, s13
 802a3f4:	dc09      	bgt.n	802a40a <__ieee754_rem_pio2f+0xf2>
 802a3f6:	4a5b      	ldr	r2, [pc, #364]	@ (802a564 <__ieee754_rem_pio2f+0x24c>)
 802a3f8:	1e47      	subs	r7, r0, #1
 802a3fa:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 802a3fe:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 802a402:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 802a406:	4293      	cmp	r3, r2
 802a408:	d107      	bne.n	802a41a <__ieee754_rem_pio2f+0x102>
 802a40a:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 802a40e:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 802a412:	2a08      	cmp	r2, #8
 802a414:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a418:	dc14      	bgt.n	802a444 <__ieee754_rem_pio2f+0x12c>
 802a41a:	6021      	str	r1, [r4, #0]
 802a41c:	ed94 7a00 	vldr	s14, [r4]
 802a420:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a424:	2e00      	cmp	r6, #0
 802a426:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a42a:	ed84 0a01 	vstr	s0, [r4, #4]
 802a42e:	daa6      	bge.n	802a37e <__ieee754_rem_pio2f+0x66>
 802a430:	eeb1 7a47 	vneg.f32	s14, s14
 802a434:	eeb1 0a40 	vneg.f32	s0, s0
 802a438:	ed84 7a00 	vstr	s14, [r4]
 802a43c:	ed84 0a01 	vstr	s0, [r4, #4]
 802a440:	4240      	negs	r0, r0
 802a442:	e79c      	b.n	802a37e <__ieee754_rem_pio2f+0x66>
 802a444:	eddf 5a42 	vldr	s11, [pc, #264]	@ 802a550 <__ieee754_rem_pio2f+0x238>
 802a448:	eef0 6a40 	vmov.f32	s13, s0
 802a44c:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a450:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a454:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a458:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 802a558 <__ieee754_rem_pio2f+0x240>
 802a45c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a460:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a464:	ee15 2a90 	vmov	r2, s11
 802a468:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a46c:	1a5b      	subs	r3, r3, r1
 802a46e:	2b19      	cmp	r3, #25
 802a470:	dc04      	bgt.n	802a47c <__ieee754_rem_pio2f+0x164>
 802a472:	edc4 5a00 	vstr	s11, [r4]
 802a476:	eeb0 0a66 	vmov.f32	s0, s13
 802a47a:	e7cf      	b.n	802a41c <__ieee754_rem_pio2f+0x104>
 802a47c:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 802a568 <__ieee754_rem_pio2f+0x250>
 802a480:	eeb0 0a66 	vmov.f32	s0, s13
 802a484:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a488:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a48c:	eddf 6a37 	vldr	s13, [pc, #220]	@ 802a56c <__ieee754_rem_pio2f+0x254>
 802a490:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a494:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a498:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a49c:	ed84 7a00 	vstr	s14, [r4]
 802a4a0:	e7bc      	b.n	802a41c <__ieee754_rem_pio2f+0x104>
 802a4a2:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 802a4a6:	d306      	bcc.n	802a4b6 <__ieee754_rem_pio2f+0x19e>
 802a4a8:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a4ac:	edc0 7a01 	vstr	s15, [r0, #4]
 802a4b0:	edc0 7a00 	vstr	s15, [r0]
 802a4b4:	e73e      	b.n	802a334 <__ieee754_rem_pio2f+0x1c>
 802a4b6:	15ea      	asrs	r2, r5, #23
 802a4b8:	3a86      	subs	r2, #134	@ 0x86
 802a4ba:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a4be:	ee07 3a90 	vmov	s15, r3
 802a4c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a4c6:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 802a570 <__ieee754_rem_pio2f+0x258>
 802a4ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a4ce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a4d2:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a4d6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a4da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a4de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a4e2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a4e6:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a4ea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a4ee:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a4f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a4f6:	edcd 7a05 	vstr	s15, [sp, #20]
 802a4fa:	d11e      	bne.n	802a53a <__ieee754_rem_pio2f+0x222>
 802a4fc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a504:	bf0c      	ite	eq
 802a506:	2301      	moveq	r3, #1
 802a508:	2302      	movne	r3, #2
 802a50a:	491a      	ldr	r1, [pc, #104]	@ (802a574 <__ieee754_rem_pio2f+0x25c>)
 802a50c:	9101      	str	r1, [sp, #4]
 802a50e:	2102      	movs	r1, #2
 802a510:	9100      	str	r1, [sp, #0]
 802a512:	a803      	add	r0, sp, #12
 802a514:	4621      	mov	r1, r4
 802a516:	f000 f971 	bl	802a7fc <__kernel_rem_pio2f>
 802a51a:	2e00      	cmp	r6, #0
 802a51c:	f6bf af2f 	bge.w	802a37e <__ieee754_rem_pio2f+0x66>
 802a520:	edd4 7a00 	vldr	s15, [r4]
 802a524:	eef1 7a67 	vneg.f32	s15, s15
 802a528:	edc4 7a00 	vstr	s15, [r4]
 802a52c:	edd4 7a01 	vldr	s15, [r4, #4]
 802a530:	eef1 7a67 	vneg.f32	s15, s15
 802a534:	edc4 7a01 	vstr	s15, [r4, #4]
 802a538:	e782      	b.n	802a440 <__ieee754_rem_pio2f+0x128>
 802a53a:	2303      	movs	r3, #3
 802a53c:	e7e5      	b.n	802a50a <__ieee754_rem_pio2f+0x1f2>
 802a53e:	bf00      	nop
 802a540:	3f490fd8 	.word	0x3f490fd8
 802a544:	4016cbe3 	.word	0x4016cbe3
 802a548:	3fc90f80 	.word	0x3fc90f80
 802a54c:	3fc90fd0 	.word	0x3fc90fd0
 802a550:	37354400 	.word	0x37354400
 802a554:	37354443 	.word	0x37354443
 802a558:	2e85a308 	.word	0x2e85a308
 802a55c:	43490f80 	.word	0x43490f80
 802a560:	3f22f984 	.word	0x3f22f984
 802a564:	0802e818 	.word	0x0802e818
 802a568:	2e85a300 	.word	0x2e85a300
 802a56c:	248d3132 	.word	0x248d3132
 802a570:	43800000 	.word	0x43800000
 802a574:	0802e898 	.word	0x0802e898

0802a578 <atanf>:
 802a578:	b538      	push	{r3, r4, r5, lr}
 802a57a:	ee10 5a10 	vmov	r5, s0
 802a57e:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 802a582:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 802a586:	eef0 7a40 	vmov.f32	s15, s0
 802a58a:	d310      	bcc.n	802a5ae <atanf+0x36>
 802a58c:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 802a590:	d904      	bls.n	802a59c <atanf+0x24>
 802a592:	ee70 7a00 	vadd.f32	s15, s0, s0
 802a596:	eeb0 0a67 	vmov.f32	s0, s15
 802a59a:	bd38      	pop	{r3, r4, r5, pc}
 802a59c:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 802a6d4 <atanf+0x15c>
 802a5a0:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 802a6d8 <atanf+0x160>
 802a5a4:	2d00      	cmp	r5, #0
 802a5a6:	bfc8      	it	gt
 802a5a8:	eef0 7a47 	vmovgt.f32	s15, s14
 802a5ac:	e7f3      	b.n	802a596 <atanf+0x1e>
 802a5ae:	4b4b      	ldr	r3, [pc, #300]	@ (802a6dc <atanf+0x164>)
 802a5b0:	429c      	cmp	r4, r3
 802a5b2:	d810      	bhi.n	802a5d6 <atanf+0x5e>
 802a5b4:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 802a5b8:	d20a      	bcs.n	802a5d0 <atanf+0x58>
 802a5ba:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 802a6e0 <atanf+0x168>
 802a5be:	ee30 7a07 	vadd.f32	s14, s0, s14
 802a5c2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 802a5c6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802a5ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a5ce:	dce2      	bgt.n	802a596 <atanf+0x1e>
 802a5d0:	f04f 33ff 	mov.w	r3, #4294967295
 802a5d4:	e013      	b.n	802a5fe <atanf+0x86>
 802a5d6:	f000 f8a3 	bl	802a720 <fabsf>
 802a5da:	4b42      	ldr	r3, [pc, #264]	@ (802a6e4 <atanf+0x16c>)
 802a5dc:	429c      	cmp	r4, r3
 802a5de:	d84f      	bhi.n	802a680 <atanf+0x108>
 802a5e0:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 802a5e4:	429c      	cmp	r4, r3
 802a5e6:	d841      	bhi.n	802a66c <atanf+0xf4>
 802a5e8:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 802a5ec:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802a5f0:	eea0 7a27 	vfma.f32	s14, s0, s15
 802a5f4:	2300      	movs	r3, #0
 802a5f6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a5fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a5fe:	1c5a      	adds	r2, r3, #1
 802a600:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802a604:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 802a6e8 <atanf+0x170>
 802a608:	eddf 5a38 	vldr	s11, [pc, #224]	@ 802a6ec <atanf+0x174>
 802a60c:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 802a6f0 <atanf+0x178>
 802a610:	ee66 6a06 	vmul.f32	s13, s12, s12
 802a614:	eee6 5a87 	vfma.f32	s11, s13, s14
 802a618:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 802a6f4 <atanf+0x17c>
 802a61c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802a620:	eddf 5a35 	vldr	s11, [pc, #212]	@ 802a6f8 <atanf+0x180>
 802a624:	eee7 5a26 	vfma.f32	s11, s14, s13
 802a628:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 802a6fc <atanf+0x184>
 802a62c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802a630:	eddf 5a33 	vldr	s11, [pc, #204]	@ 802a700 <atanf+0x188>
 802a634:	eee7 5a26 	vfma.f32	s11, s14, s13
 802a638:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 802a704 <atanf+0x18c>
 802a63c:	eea6 5a87 	vfma.f32	s10, s13, s14
 802a640:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 802a708 <atanf+0x190>
 802a644:	eea5 7a26 	vfma.f32	s14, s10, s13
 802a648:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 802a70c <atanf+0x194>
 802a64c:	eea7 5a26 	vfma.f32	s10, s14, s13
 802a650:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 802a710 <atanf+0x198>
 802a654:	eea5 7a26 	vfma.f32	s14, s10, s13
 802a658:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a65c:	eea5 7a86 	vfma.f32	s14, s11, s12
 802a660:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a664:	d121      	bne.n	802a6aa <atanf+0x132>
 802a666:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a66a:	e794      	b.n	802a596 <atanf+0x1e>
 802a66c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 802a670:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a674:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a678:	2301      	movs	r3, #1
 802a67a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a67e:	e7be      	b.n	802a5fe <atanf+0x86>
 802a680:	4b24      	ldr	r3, [pc, #144]	@ (802a714 <atanf+0x19c>)
 802a682:	429c      	cmp	r4, r3
 802a684:	d80b      	bhi.n	802a69e <atanf+0x126>
 802a686:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 802a68a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802a68e:	eea0 7a27 	vfma.f32	s14, s0, s15
 802a692:	2302      	movs	r3, #2
 802a694:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a698:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802a69c:	e7af      	b.n	802a5fe <atanf+0x86>
 802a69e:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802a6a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a6a6:	2303      	movs	r3, #3
 802a6a8:	e7a9      	b.n	802a5fe <atanf+0x86>
 802a6aa:	4a1b      	ldr	r2, [pc, #108]	@ (802a718 <atanf+0x1a0>)
 802a6ac:	491b      	ldr	r1, [pc, #108]	@ (802a71c <atanf+0x1a4>)
 802a6ae:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a6b2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802a6b6:	edd3 6a00 	vldr	s13, [r3]
 802a6ba:	ee37 7a66 	vsub.f32	s14, s14, s13
 802a6be:	2d00      	cmp	r5, #0
 802a6c0:	ee37 7a67 	vsub.f32	s14, s14, s15
 802a6c4:	edd2 7a00 	vldr	s15, [r2]
 802a6c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a6cc:	bfb8      	it	lt
 802a6ce:	eef1 7a67 	vneglt.f32	s15, s15
 802a6d2:	e760      	b.n	802a596 <atanf+0x1e>
 802a6d4:	bfc90fdb 	.word	0xbfc90fdb
 802a6d8:	3fc90fdb 	.word	0x3fc90fdb
 802a6dc:	3edfffff 	.word	0x3edfffff
 802a6e0:	7149f2ca 	.word	0x7149f2ca
 802a6e4:	3f97ffff 	.word	0x3f97ffff
 802a6e8:	3c8569d7 	.word	0x3c8569d7
 802a6ec:	3d4bda59 	.word	0x3d4bda59
 802a6f0:	bd6ef16b 	.word	0xbd6ef16b
 802a6f4:	3d886b35 	.word	0x3d886b35
 802a6f8:	3dba2e6e 	.word	0x3dba2e6e
 802a6fc:	3e124925 	.word	0x3e124925
 802a700:	3eaaaaab 	.word	0x3eaaaaab
 802a704:	bd15a221 	.word	0xbd15a221
 802a708:	bd9d8795 	.word	0xbd9d8795
 802a70c:	bde38e38 	.word	0xbde38e38
 802a710:	be4ccccd 	.word	0xbe4ccccd
 802a714:	401bffff 	.word	0x401bffff
 802a718:	0802ebc0 	.word	0x0802ebc0
 802a71c:	0802ebb0 	.word	0x0802ebb0

0802a720 <fabsf>:
 802a720:	ee10 3a10 	vmov	r3, s0
 802a724:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802a728:	ee00 3a10 	vmov	s0, r3
 802a72c:	4770      	bx	lr
	...

0802a730 <scalbnf>:
 802a730:	ee10 3a10 	vmov	r3, s0
 802a734:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 802a738:	d02b      	beq.n	802a792 <scalbnf+0x62>
 802a73a:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802a73e:	d302      	bcc.n	802a746 <scalbnf+0x16>
 802a740:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a744:	4770      	bx	lr
 802a746:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 802a74a:	d123      	bne.n	802a794 <scalbnf+0x64>
 802a74c:	4b24      	ldr	r3, [pc, #144]	@ (802a7e0 <scalbnf+0xb0>)
 802a74e:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802a7e4 <scalbnf+0xb4>
 802a752:	4298      	cmp	r0, r3
 802a754:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a758:	db17      	blt.n	802a78a <scalbnf+0x5a>
 802a75a:	ee10 3a10 	vmov	r3, s0
 802a75e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a762:	3a19      	subs	r2, #25
 802a764:	f24c 3150 	movw	r1, #50000	@ 0xc350
 802a768:	4288      	cmp	r0, r1
 802a76a:	dd15      	ble.n	802a798 <scalbnf+0x68>
 802a76c:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802a7e8 <scalbnf+0xb8>
 802a770:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802a7ec <scalbnf+0xbc>
 802a774:	ee10 3a10 	vmov	r3, s0
 802a778:	eeb0 7a67 	vmov.f32	s14, s15
 802a77c:	2b00      	cmp	r3, #0
 802a77e:	bfb8      	it	lt
 802a780:	eef0 7a66 	vmovlt.f32	s15, s13
 802a784:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a788:	4770      	bx	lr
 802a78a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802a7f0 <scalbnf+0xc0>
 802a78e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a792:	4770      	bx	lr
 802a794:	0dd2      	lsrs	r2, r2, #23
 802a796:	e7e5      	b.n	802a764 <scalbnf+0x34>
 802a798:	4410      	add	r0, r2
 802a79a:	28fe      	cmp	r0, #254	@ 0xfe
 802a79c:	dce6      	bgt.n	802a76c <scalbnf+0x3c>
 802a79e:	2800      	cmp	r0, #0
 802a7a0:	dd06      	ble.n	802a7b0 <scalbnf+0x80>
 802a7a2:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802a7a6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a7aa:	ee00 3a10 	vmov	s0, r3
 802a7ae:	4770      	bx	lr
 802a7b0:	f110 0f16 	cmn.w	r0, #22
 802a7b4:	da09      	bge.n	802a7ca <scalbnf+0x9a>
 802a7b6:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802a7f0 <scalbnf+0xc0>
 802a7ba:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802a7f4 <scalbnf+0xc4>
 802a7be:	ee10 3a10 	vmov	r3, s0
 802a7c2:	eeb0 7a67 	vmov.f32	s14, s15
 802a7c6:	2b00      	cmp	r3, #0
 802a7c8:	e7d9      	b.n	802a77e <scalbnf+0x4e>
 802a7ca:	3019      	adds	r0, #25
 802a7cc:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802a7d0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a7d4:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802a7f8 <scalbnf+0xc8>
 802a7d8:	ee07 3a90 	vmov	s15, r3
 802a7dc:	e7d7      	b.n	802a78e <scalbnf+0x5e>
 802a7de:	bf00      	nop
 802a7e0:	ffff3cb0 	.word	0xffff3cb0
 802a7e4:	4c000000 	.word	0x4c000000
 802a7e8:	7149f2ca 	.word	0x7149f2ca
 802a7ec:	f149f2ca 	.word	0xf149f2ca
 802a7f0:	0da24260 	.word	0x0da24260
 802a7f4:	8da24260 	.word	0x8da24260
 802a7f8:	33000000 	.word	0x33000000

0802a7fc <__kernel_rem_pio2f>:
 802a7fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a800:	ed2d 8b04 	vpush	{d8-d9}
 802a804:	b0d9      	sub	sp, #356	@ 0x164
 802a806:	4690      	mov	r8, r2
 802a808:	9001      	str	r0, [sp, #4]
 802a80a:	4ab6      	ldr	r2, [pc, #728]	@ (802aae4 <__kernel_rem_pio2f+0x2e8>)
 802a80c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802a80e:	f118 0f04 	cmn.w	r8, #4
 802a812:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802a816:	460f      	mov	r7, r1
 802a818:	f103 3bff 	add.w	fp, r3, #4294967295
 802a81c:	db26      	blt.n	802a86c <__kernel_rem_pio2f+0x70>
 802a81e:	f1b8 0203 	subs.w	r2, r8, #3
 802a822:	bf48      	it	mi
 802a824:	f108 0204 	addmi.w	r2, r8, #4
 802a828:	10d2      	asrs	r2, r2, #3
 802a82a:	1c55      	adds	r5, r2, #1
 802a82c:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802a82e:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802a832:	00e8      	lsls	r0, r5, #3
 802a834:	eba2 060b 	sub.w	r6, r2, fp
 802a838:	9002      	str	r0, [sp, #8]
 802a83a:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802a83e:	eb0a 0c0b 	add.w	ip, sl, fp
 802a842:	ac1c      	add	r4, sp, #112	@ 0x70
 802a844:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 802a848:	2000      	movs	r0, #0
 802a84a:	4560      	cmp	r0, ip
 802a84c:	dd10      	ble.n	802a870 <__kernel_rem_pio2f+0x74>
 802a84e:	a91c      	add	r1, sp, #112	@ 0x70
 802a850:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802a854:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 802a858:	2600      	movs	r6, #0
 802a85a:	4556      	cmp	r6, sl
 802a85c:	dc24      	bgt.n	802a8a8 <__kernel_rem_pio2f+0xac>
 802a85e:	f8dd e004 	ldr.w	lr, [sp, #4]
 802a862:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802a866:	4684      	mov	ip, r0
 802a868:	2400      	movs	r4, #0
 802a86a:	e016      	b.n	802a89a <__kernel_rem_pio2f+0x9e>
 802a86c:	2200      	movs	r2, #0
 802a86e:	e7dc      	b.n	802a82a <__kernel_rem_pio2f+0x2e>
 802a870:	42c6      	cmn	r6, r0
 802a872:	bf5d      	ittte	pl
 802a874:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802a878:	ee07 1a90 	vmovpl	s15, r1
 802a87c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a880:	eef0 7a47 	vmovmi.f32	s15, s14
 802a884:	ece4 7a01 	vstmia	r4!, {s15}
 802a888:	3001      	adds	r0, #1
 802a88a:	e7de      	b.n	802a84a <__kernel_rem_pio2f+0x4e>
 802a88c:	ecfe 6a01 	vldmia	lr!, {s13}
 802a890:	ed3c 7a01 	vldmdb	ip!, {s14}
 802a894:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a898:	3401      	adds	r4, #1
 802a89a:	455c      	cmp	r4, fp
 802a89c:	ddf6      	ble.n	802a88c <__kernel_rem_pio2f+0x90>
 802a89e:	ece9 7a01 	vstmia	r9!, {s15}
 802a8a2:	3601      	adds	r6, #1
 802a8a4:	3004      	adds	r0, #4
 802a8a6:	e7d8      	b.n	802a85a <__kernel_rem_pio2f+0x5e>
 802a8a8:	a908      	add	r1, sp, #32
 802a8aa:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a8ae:	9104      	str	r1, [sp, #16]
 802a8b0:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802a8b2:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 802aaf0 <__kernel_rem_pio2f+0x2f4>
 802a8b6:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802aaec <__kernel_rem_pio2f+0x2f0>
 802a8ba:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802a8be:	9203      	str	r2, [sp, #12]
 802a8c0:	4654      	mov	r4, sl
 802a8c2:	00a2      	lsls	r2, r4, #2
 802a8c4:	9205      	str	r2, [sp, #20]
 802a8c6:	aa58      	add	r2, sp, #352	@ 0x160
 802a8c8:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802a8cc:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 802a8d0:	a944      	add	r1, sp, #272	@ 0x110
 802a8d2:	aa08      	add	r2, sp, #32
 802a8d4:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802a8d8:	4694      	mov	ip, r2
 802a8da:	4626      	mov	r6, r4
 802a8dc:	2e00      	cmp	r6, #0
 802a8de:	dc4c      	bgt.n	802a97a <__kernel_rem_pio2f+0x17e>
 802a8e0:	4628      	mov	r0, r5
 802a8e2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802a8e6:	f7ff ff23 	bl	802a730 <scalbnf>
 802a8ea:	eeb0 8a40 	vmov.f32	s16, s0
 802a8ee:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802a8f2:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a8f6:	f000 f9e9 	bl	802accc <floorf>
 802a8fa:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802a8fe:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a902:	2d00      	cmp	r5, #0
 802a904:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802a908:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a90c:	ee17 9a90 	vmov	r9, s15
 802a910:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a914:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a918:	dd41      	ble.n	802a99e <__kernel_rem_pio2f+0x1a2>
 802a91a:	f104 3cff 	add.w	ip, r4, #4294967295
 802a91e:	a908      	add	r1, sp, #32
 802a920:	f1c5 0e08 	rsb	lr, r5, #8
 802a924:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802a928:	fa46 f00e 	asr.w	r0, r6, lr
 802a92c:	4481      	add	r9, r0
 802a92e:	fa00 f00e 	lsl.w	r0, r0, lr
 802a932:	1a36      	subs	r6, r6, r0
 802a934:	f1c5 0007 	rsb	r0, r5, #7
 802a938:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 802a93c:	4106      	asrs	r6, r0
 802a93e:	2e00      	cmp	r6, #0
 802a940:	dd3c      	ble.n	802a9bc <__kernel_rem_pio2f+0x1c0>
 802a942:	f04f 0e00 	mov.w	lr, #0
 802a946:	f109 0901 	add.w	r9, r9, #1
 802a94a:	4670      	mov	r0, lr
 802a94c:	4574      	cmp	r4, lr
 802a94e:	dc68      	bgt.n	802aa22 <__kernel_rem_pio2f+0x226>
 802a950:	2d00      	cmp	r5, #0
 802a952:	dd03      	ble.n	802a95c <__kernel_rem_pio2f+0x160>
 802a954:	2d01      	cmp	r5, #1
 802a956:	d074      	beq.n	802aa42 <__kernel_rem_pio2f+0x246>
 802a958:	2d02      	cmp	r5, #2
 802a95a:	d07d      	beq.n	802aa58 <__kernel_rem_pio2f+0x25c>
 802a95c:	2e02      	cmp	r6, #2
 802a95e:	d12d      	bne.n	802a9bc <__kernel_rem_pio2f+0x1c0>
 802a960:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802a964:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a968:	b340      	cbz	r0, 802a9bc <__kernel_rem_pio2f+0x1c0>
 802a96a:	4628      	mov	r0, r5
 802a96c:	9306      	str	r3, [sp, #24]
 802a96e:	f7ff fedf 	bl	802a730 <scalbnf>
 802a972:	9b06      	ldr	r3, [sp, #24]
 802a974:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a978:	e020      	b.n	802a9bc <__kernel_rem_pio2f+0x1c0>
 802a97a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a97e:	3e01      	subs	r6, #1
 802a980:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a984:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a988:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a98c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a990:	ecac 0a01 	vstmia	ip!, {s0}
 802a994:	ed30 0a01 	vldmdb	r0!, {s0}
 802a998:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a99c:	e79e      	b.n	802a8dc <__kernel_rem_pio2f+0xe0>
 802a99e:	d105      	bne.n	802a9ac <__kernel_rem_pio2f+0x1b0>
 802a9a0:	1e60      	subs	r0, r4, #1
 802a9a2:	a908      	add	r1, sp, #32
 802a9a4:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802a9a8:	11f6      	asrs	r6, r6, #7
 802a9aa:	e7c8      	b.n	802a93e <__kernel_rem_pio2f+0x142>
 802a9ac:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802a9b0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a9b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9b8:	da31      	bge.n	802aa1e <__kernel_rem_pio2f+0x222>
 802a9ba:	2600      	movs	r6, #0
 802a9bc:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a9c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9c4:	f040 8098 	bne.w	802aaf8 <__kernel_rem_pio2f+0x2fc>
 802a9c8:	1e60      	subs	r0, r4, #1
 802a9ca:	2200      	movs	r2, #0
 802a9cc:	4550      	cmp	r0, sl
 802a9ce:	da4b      	bge.n	802aa68 <__kernel_rem_pio2f+0x26c>
 802a9d0:	2a00      	cmp	r2, #0
 802a9d2:	d065      	beq.n	802aaa0 <__kernel_rem_pio2f+0x2a4>
 802a9d4:	3c01      	subs	r4, #1
 802a9d6:	ab08      	add	r3, sp, #32
 802a9d8:	3d08      	subs	r5, #8
 802a9da:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a9de:	2b00      	cmp	r3, #0
 802a9e0:	d0f8      	beq.n	802a9d4 <__kernel_rem_pio2f+0x1d8>
 802a9e2:	4628      	mov	r0, r5
 802a9e4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802a9e8:	f7ff fea2 	bl	802a730 <scalbnf>
 802a9ec:	1c63      	adds	r3, r4, #1
 802a9ee:	aa44      	add	r2, sp, #272	@ 0x110
 802a9f0:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802aaf0 <__kernel_rem_pio2f+0x2f4>
 802a9f4:	0099      	lsls	r1, r3, #2
 802a9f6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a9fa:	4623      	mov	r3, r4
 802a9fc:	2b00      	cmp	r3, #0
 802a9fe:	f280 80a9 	bge.w	802ab54 <__kernel_rem_pio2f+0x358>
 802aa02:	4623      	mov	r3, r4
 802aa04:	2b00      	cmp	r3, #0
 802aa06:	f2c0 80c7 	blt.w	802ab98 <__kernel_rem_pio2f+0x39c>
 802aa0a:	aa44      	add	r2, sp, #272	@ 0x110
 802aa0c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802aa10:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802aae8 <__kernel_rem_pio2f+0x2ec>
 802aa14:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802aa18:	2000      	movs	r0, #0
 802aa1a:	1ae2      	subs	r2, r4, r3
 802aa1c:	e0b1      	b.n	802ab82 <__kernel_rem_pio2f+0x386>
 802aa1e:	2602      	movs	r6, #2
 802aa20:	e78f      	b.n	802a942 <__kernel_rem_pio2f+0x146>
 802aa22:	f852 1b04 	ldr.w	r1, [r2], #4
 802aa26:	b948      	cbnz	r0, 802aa3c <__kernel_rem_pio2f+0x240>
 802aa28:	b121      	cbz	r1, 802aa34 <__kernel_rem_pio2f+0x238>
 802aa2a:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802aa2e:	f842 1c04 	str.w	r1, [r2, #-4]
 802aa32:	2101      	movs	r1, #1
 802aa34:	f10e 0e01 	add.w	lr, lr, #1
 802aa38:	4608      	mov	r0, r1
 802aa3a:	e787      	b.n	802a94c <__kernel_rem_pio2f+0x150>
 802aa3c:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802aa40:	e7f5      	b.n	802aa2e <__kernel_rem_pio2f+0x232>
 802aa42:	f104 3cff 	add.w	ip, r4, #4294967295
 802aa46:	aa08      	add	r2, sp, #32
 802aa48:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802aa4c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802aa50:	a908      	add	r1, sp, #32
 802aa52:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802aa56:	e781      	b.n	802a95c <__kernel_rem_pio2f+0x160>
 802aa58:	f104 3cff 	add.w	ip, r4, #4294967295
 802aa5c:	aa08      	add	r2, sp, #32
 802aa5e:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802aa62:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802aa66:	e7f3      	b.n	802aa50 <__kernel_rem_pio2f+0x254>
 802aa68:	a908      	add	r1, sp, #32
 802aa6a:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802aa6e:	3801      	subs	r0, #1
 802aa70:	430a      	orrs	r2, r1
 802aa72:	e7ab      	b.n	802a9cc <__kernel_rem_pio2f+0x1d0>
 802aa74:	3201      	adds	r2, #1
 802aa76:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 802aa7a:	2e00      	cmp	r6, #0
 802aa7c:	d0fa      	beq.n	802aa74 <__kernel_rem_pio2f+0x278>
 802aa7e:	9905      	ldr	r1, [sp, #20]
 802aa80:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802aa84:	eb0d 0001 	add.w	r0, sp, r1
 802aa88:	18e6      	adds	r6, r4, r3
 802aa8a:	a91c      	add	r1, sp, #112	@ 0x70
 802aa8c:	f104 0c01 	add.w	ip, r4, #1
 802aa90:	384c      	subs	r0, #76	@ 0x4c
 802aa92:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802aa96:	4422      	add	r2, r4
 802aa98:	4562      	cmp	r2, ip
 802aa9a:	da04      	bge.n	802aaa6 <__kernel_rem_pio2f+0x2aa>
 802aa9c:	4614      	mov	r4, r2
 802aa9e:	e710      	b.n	802a8c2 <__kernel_rem_pio2f+0xc6>
 802aaa0:	9804      	ldr	r0, [sp, #16]
 802aaa2:	2201      	movs	r2, #1
 802aaa4:	e7e7      	b.n	802aa76 <__kernel_rem_pio2f+0x27a>
 802aaa6:	9903      	ldr	r1, [sp, #12]
 802aaa8:	f8dd e004 	ldr.w	lr, [sp, #4]
 802aaac:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802aab0:	9105      	str	r1, [sp, #20]
 802aab2:	ee07 1a90 	vmov	s15, r1
 802aab6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aaba:	2400      	movs	r4, #0
 802aabc:	ece6 7a01 	vstmia	r6!, {s15}
 802aac0:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802aac4:	46b1      	mov	r9, r6
 802aac6:	455c      	cmp	r4, fp
 802aac8:	dd04      	ble.n	802aad4 <__kernel_rem_pio2f+0x2d8>
 802aaca:	ece0 7a01 	vstmia	r0!, {s15}
 802aace:	f10c 0c01 	add.w	ip, ip, #1
 802aad2:	e7e1      	b.n	802aa98 <__kernel_rem_pio2f+0x29c>
 802aad4:	ecfe 6a01 	vldmia	lr!, {s13}
 802aad8:	ed39 7a01 	vldmdb	r9!, {s14}
 802aadc:	3401      	adds	r4, #1
 802aade:	eee6 7a87 	vfma.f32	s15, s13, s14
 802aae2:	e7f0      	b.n	802aac6 <__kernel_rem_pio2f+0x2ca>
 802aae4:	0802ebfc 	.word	0x0802ebfc
 802aae8:	0802ebd0 	.word	0x0802ebd0
 802aaec:	43800000 	.word	0x43800000
 802aaf0:	3b800000 	.word	0x3b800000
 802aaf4:	00000000 	.word	0x00000000
 802aaf8:	9b02      	ldr	r3, [sp, #8]
 802aafa:	eeb0 0a48 	vmov.f32	s0, s16
 802aafe:	eba3 0008 	sub.w	r0, r3, r8
 802ab02:	f7ff fe15 	bl	802a730 <scalbnf>
 802ab06:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802aaec <__kernel_rem_pio2f+0x2f0>
 802ab0a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802ab0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab12:	db19      	blt.n	802ab48 <__kernel_rem_pio2f+0x34c>
 802ab14:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802aaf0 <__kernel_rem_pio2f+0x2f4>
 802ab18:	ee60 7a27 	vmul.f32	s15, s0, s15
 802ab1c:	aa08      	add	r2, sp, #32
 802ab1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ab22:	3508      	adds	r5, #8
 802ab24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab28:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802ab2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ab30:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ab34:	ee10 3a10 	vmov	r3, s0
 802ab38:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802ab3c:	ee17 3a90 	vmov	r3, s15
 802ab40:	3401      	adds	r4, #1
 802ab42:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802ab46:	e74c      	b.n	802a9e2 <__kernel_rem_pio2f+0x1e6>
 802ab48:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ab4c:	aa08      	add	r2, sp, #32
 802ab4e:	ee10 3a10 	vmov	r3, s0
 802ab52:	e7f6      	b.n	802ab42 <__kernel_rem_pio2f+0x346>
 802ab54:	a808      	add	r0, sp, #32
 802ab56:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802ab5a:	9001      	str	r0, [sp, #4]
 802ab5c:	ee07 0a90 	vmov	s15, r0
 802ab60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ab64:	3b01      	subs	r3, #1
 802ab66:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ab6a:	ee20 0a07 	vmul.f32	s0, s0, s14
 802ab6e:	ed62 7a01 	vstmdb	r2!, {s15}
 802ab72:	e743      	b.n	802a9fc <__kernel_rem_pio2f+0x200>
 802ab74:	ecfc 6a01 	vldmia	ip!, {s13}
 802ab78:	ecb5 7a01 	vldmia	r5!, {s14}
 802ab7c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ab80:	3001      	adds	r0, #1
 802ab82:	4550      	cmp	r0, sl
 802ab84:	dc01      	bgt.n	802ab8a <__kernel_rem_pio2f+0x38e>
 802ab86:	4290      	cmp	r0, r2
 802ab88:	ddf4      	ble.n	802ab74 <__kernel_rem_pio2f+0x378>
 802ab8a:	a858      	add	r0, sp, #352	@ 0x160
 802ab8c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802ab90:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 802ab94:	3b01      	subs	r3, #1
 802ab96:	e735      	b.n	802aa04 <__kernel_rem_pio2f+0x208>
 802ab98:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802ab9a:	2b02      	cmp	r3, #2
 802ab9c:	dc09      	bgt.n	802abb2 <__kernel_rem_pio2f+0x3b6>
 802ab9e:	2b00      	cmp	r3, #0
 802aba0:	dc27      	bgt.n	802abf2 <__kernel_rem_pio2f+0x3f6>
 802aba2:	d040      	beq.n	802ac26 <__kernel_rem_pio2f+0x42a>
 802aba4:	f009 0007 	and.w	r0, r9, #7
 802aba8:	b059      	add	sp, #356	@ 0x164
 802abaa:	ecbd 8b04 	vpop	{d8-d9}
 802abae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802abb2:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802abb4:	2b03      	cmp	r3, #3
 802abb6:	d1f5      	bne.n	802aba4 <__kernel_rem_pio2f+0x3a8>
 802abb8:	aa30      	add	r2, sp, #192	@ 0xc0
 802abba:	1f0b      	subs	r3, r1, #4
 802abbc:	4413      	add	r3, r2
 802abbe:	461a      	mov	r2, r3
 802abc0:	4620      	mov	r0, r4
 802abc2:	2800      	cmp	r0, #0
 802abc4:	dc50      	bgt.n	802ac68 <__kernel_rem_pio2f+0x46c>
 802abc6:	4622      	mov	r2, r4
 802abc8:	2a01      	cmp	r2, #1
 802abca:	dc5d      	bgt.n	802ac88 <__kernel_rem_pio2f+0x48c>
 802abcc:	ab30      	add	r3, sp, #192	@ 0xc0
 802abce:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802abd2:	440b      	add	r3, r1
 802abd4:	2c01      	cmp	r4, #1
 802abd6:	dc67      	bgt.n	802aca8 <__kernel_rem_pio2f+0x4ac>
 802abd8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802abdc:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 802abe0:	2e00      	cmp	r6, #0
 802abe2:	d167      	bne.n	802acb4 <__kernel_rem_pio2f+0x4b8>
 802abe4:	edc7 6a00 	vstr	s13, [r7]
 802abe8:	ed87 7a01 	vstr	s14, [r7, #4]
 802abec:	edc7 7a02 	vstr	s15, [r7, #8]
 802abf0:	e7d8      	b.n	802aba4 <__kernel_rem_pio2f+0x3a8>
 802abf2:	ab30      	add	r3, sp, #192	@ 0xc0
 802abf4:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802abf8:	440b      	add	r3, r1
 802abfa:	4622      	mov	r2, r4
 802abfc:	2a00      	cmp	r2, #0
 802abfe:	da24      	bge.n	802ac4a <__kernel_rem_pio2f+0x44e>
 802ac00:	b34e      	cbz	r6, 802ac56 <__kernel_rem_pio2f+0x45a>
 802ac02:	eef1 7a47 	vneg.f32	s15, s14
 802ac06:	edc7 7a00 	vstr	s15, [r7]
 802ac0a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802ac0e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac12:	aa31      	add	r2, sp, #196	@ 0xc4
 802ac14:	2301      	movs	r3, #1
 802ac16:	429c      	cmp	r4, r3
 802ac18:	da20      	bge.n	802ac5c <__kernel_rem_pio2f+0x460>
 802ac1a:	b10e      	cbz	r6, 802ac20 <__kernel_rem_pio2f+0x424>
 802ac1c:	eef1 7a67 	vneg.f32	s15, s15
 802ac20:	edc7 7a01 	vstr	s15, [r7, #4]
 802ac24:	e7be      	b.n	802aba4 <__kernel_rem_pio2f+0x3a8>
 802ac26:	ab30      	add	r3, sp, #192	@ 0xc0
 802ac28:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 802aaf4 <__kernel_rem_pio2f+0x2f8>
 802ac2c:	440b      	add	r3, r1
 802ac2e:	2c00      	cmp	r4, #0
 802ac30:	da05      	bge.n	802ac3e <__kernel_rem_pio2f+0x442>
 802ac32:	b10e      	cbz	r6, 802ac38 <__kernel_rem_pio2f+0x43c>
 802ac34:	eef1 7a67 	vneg.f32	s15, s15
 802ac38:	edc7 7a00 	vstr	s15, [r7]
 802ac3c:	e7b2      	b.n	802aba4 <__kernel_rem_pio2f+0x3a8>
 802ac3e:	ed33 7a01 	vldmdb	r3!, {s14}
 802ac42:	3c01      	subs	r4, #1
 802ac44:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac48:	e7f1      	b.n	802ac2e <__kernel_rem_pio2f+0x432>
 802ac4a:	ed73 7a01 	vldmdb	r3!, {s15}
 802ac4e:	3a01      	subs	r2, #1
 802ac50:	ee37 7a27 	vadd.f32	s14, s14, s15
 802ac54:	e7d2      	b.n	802abfc <__kernel_rem_pio2f+0x400>
 802ac56:	eef0 7a47 	vmov.f32	s15, s14
 802ac5a:	e7d4      	b.n	802ac06 <__kernel_rem_pio2f+0x40a>
 802ac5c:	ecb2 7a01 	vldmia	r2!, {s14}
 802ac60:	3301      	adds	r3, #1
 802ac62:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ac66:	e7d6      	b.n	802ac16 <__kernel_rem_pio2f+0x41a>
 802ac68:	ed72 7a01 	vldmdb	r2!, {s15}
 802ac6c:	edd2 6a01 	vldr	s13, [r2, #4]
 802ac70:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac74:	3801      	subs	r0, #1
 802ac76:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac7a:	ed82 7a00 	vstr	s14, [r2]
 802ac7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ac82:	edc2 7a01 	vstr	s15, [r2, #4]
 802ac86:	e79c      	b.n	802abc2 <__kernel_rem_pio2f+0x3c6>
 802ac88:	ed73 7a01 	vldmdb	r3!, {s15}
 802ac8c:	edd3 6a01 	vldr	s13, [r3, #4]
 802ac90:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ac94:	3a01      	subs	r2, #1
 802ac96:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac9a:	ed83 7a00 	vstr	s14, [r3]
 802ac9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802aca2:	edc3 7a01 	vstr	s15, [r3, #4]
 802aca6:	e78f      	b.n	802abc8 <__kernel_rem_pio2f+0x3cc>
 802aca8:	ed33 7a01 	vldmdb	r3!, {s14}
 802acac:	3c01      	subs	r4, #1
 802acae:	ee77 7a87 	vadd.f32	s15, s15, s14
 802acb2:	e78f      	b.n	802abd4 <__kernel_rem_pio2f+0x3d8>
 802acb4:	eef1 6a66 	vneg.f32	s13, s13
 802acb8:	eeb1 7a47 	vneg.f32	s14, s14
 802acbc:	edc7 6a00 	vstr	s13, [r7]
 802acc0:	ed87 7a01 	vstr	s14, [r7, #4]
 802acc4:	eef1 7a67 	vneg.f32	s15, s15
 802acc8:	e790      	b.n	802abec <__kernel_rem_pio2f+0x3f0>
 802acca:	bf00      	nop

0802accc <floorf>:
 802accc:	ee10 3a10 	vmov	r3, s0
 802acd0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802acd4:	3a7f      	subs	r2, #127	@ 0x7f
 802acd6:	2a16      	cmp	r2, #22
 802acd8:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802acdc:	dc2b      	bgt.n	802ad36 <floorf+0x6a>
 802acde:	2a00      	cmp	r2, #0
 802ace0:	da12      	bge.n	802ad08 <floorf+0x3c>
 802ace2:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802ad48 <floorf+0x7c>
 802ace6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802acea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802acee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802acf2:	dd06      	ble.n	802ad02 <floorf+0x36>
 802acf4:	2b00      	cmp	r3, #0
 802acf6:	da24      	bge.n	802ad42 <floorf+0x76>
 802acf8:	2900      	cmp	r1, #0
 802acfa:	4b14      	ldr	r3, [pc, #80]	@ (802ad4c <floorf+0x80>)
 802acfc:	bf08      	it	eq
 802acfe:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802ad02:	ee00 3a10 	vmov	s0, r3
 802ad06:	4770      	bx	lr
 802ad08:	4911      	ldr	r1, [pc, #68]	@ (802ad50 <floorf+0x84>)
 802ad0a:	4111      	asrs	r1, r2
 802ad0c:	420b      	tst	r3, r1
 802ad0e:	d0fa      	beq.n	802ad06 <floorf+0x3a>
 802ad10:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802ad48 <floorf+0x7c>
 802ad14:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ad18:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ad1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ad20:	ddef      	ble.n	802ad02 <floorf+0x36>
 802ad22:	2b00      	cmp	r3, #0
 802ad24:	bfbe      	ittt	lt
 802ad26:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802ad2a:	fa40 f202 	asrlt.w	r2, r0, r2
 802ad2e:	189b      	addlt	r3, r3, r2
 802ad30:	ea23 0301 	bic.w	r3, r3, r1
 802ad34:	e7e5      	b.n	802ad02 <floorf+0x36>
 802ad36:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802ad3a:	d3e4      	bcc.n	802ad06 <floorf+0x3a>
 802ad3c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ad40:	4770      	bx	lr
 802ad42:	2300      	movs	r3, #0
 802ad44:	e7dd      	b.n	802ad02 <floorf+0x36>
 802ad46:	bf00      	nop
 802ad48:	7149f2ca 	.word	0x7149f2ca
 802ad4c:	bf800000 	.word	0xbf800000
 802ad50:	007fffff 	.word	0x007fffff

0802ad54 <abort>:
 802ad54:	b508      	push	{r3, lr}
 802ad56:	2006      	movs	r0, #6
 802ad58:	f000 fa4e 	bl	802b1f8 <raise>
 802ad5c:	2001      	movs	r0, #1
 802ad5e:	f7d8 f83b 	bl	8002dd8 <_exit>
	...

0802ad64 <__assert_func>:
 802ad64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802ad66:	4614      	mov	r4, r2
 802ad68:	461a      	mov	r2, r3
 802ad6a:	4b09      	ldr	r3, [pc, #36]	@ (802ad90 <__assert_func+0x2c>)
 802ad6c:	681b      	ldr	r3, [r3, #0]
 802ad6e:	4605      	mov	r5, r0
 802ad70:	68d8      	ldr	r0, [r3, #12]
 802ad72:	b14c      	cbz	r4, 802ad88 <__assert_func+0x24>
 802ad74:	4b07      	ldr	r3, [pc, #28]	@ (802ad94 <__assert_func+0x30>)
 802ad76:	9100      	str	r1, [sp, #0]
 802ad78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802ad7c:	4906      	ldr	r1, [pc, #24]	@ (802ad98 <__assert_func+0x34>)
 802ad7e:	462b      	mov	r3, r5
 802ad80:	f000 f984 	bl	802b08c <fiprintf>
 802ad84:	f7ff ffe6 	bl	802ad54 <abort>
 802ad88:	4b04      	ldr	r3, [pc, #16]	@ (802ad9c <__assert_func+0x38>)
 802ad8a:	461c      	mov	r4, r3
 802ad8c:	e7f3      	b.n	802ad76 <__assert_func+0x12>
 802ad8e:	bf00      	nop
 802ad90:	20000110 	.word	0x20000110
 802ad94:	0802d0d4 	.word	0x0802d0d4
 802ad98:	0802d0e1 	.word	0x0802d0e1
 802ad9c:	0802d097 	.word	0x0802d097

0802ada0 <atexit>:
 802ada0:	2300      	movs	r3, #0
 802ada2:	4601      	mov	r1, r0
 802ada4:	461a      	mov	r2, r3
 802ada6:	4618      	mov	r0, r3
 802ada8:	f000 bad4 	b.w	802b354 <__register_exitproc>

0802adac <malloc>:
 802adac:	4b02      	ldr	r3, [pc, #8]	@ (802adb8 <malloc+0xc>)
 802adae:	4601      	mov	r1, r0
 802adb0:	6818      	ldr	r0, [r3, #0]
 802adb2:	f000 b82d 	b.w	802ae10 <_malloc_r>
 802adb6:	bf00      	nop
 802adb8:	20000110 	.word	0x20000110

0802adbc <free>:
 802adbc:	4b02      	ldr	r3, [pc, #8]	@ (802adc8 <free+0xc>)
 802adbe:	4601      	mov	r1, r0
 802adc0:	6818      	ldr	r0, [r3, #0]
 802adc2:	f000 bb23 	b.w	802b40c <_free_r>
 802adc6:	bf00      	nop
 802adc8:	20000110 	.word	0x20000110

0802adcc <sbrk_aligned>:
 802adcc:	b570      	push	{r4, r5, r6, lr}
 802adce:	4e0f      	ldr	r6, [pc, #60]	@ (802ae0c <sbrk_aligned+0x40>)
 802add0:	460c      	mov	r4, r1
 802add2:	6831      	ldr	r1, [r6, #0]
 802add4:	4605      	mov	r5, r0
 802add6:	b911      	cbnz	r1, 802adde <sbrk_aligned+0x12>
 802add8:	f000 fa5e 	bl	802b298 <_sbrk_r>
 802addc:	6030      	str	r0, [r6, #0]
 802adde:	4621      	mov	r1, r4
 802ade0:	4628      	mov	r0, r5
 802ade2:	f000 fa59 	bl	802b298 <_sbrk_r>
 802ade6:	1c43      	adds	r3, r0, #1
 802ade8:	d103      	bne.n	802adf2 <sbrk_aligned+0x26>
 802adea:	f04f 34ff 	mov.w	r4, #4294967295
 802adee:	4620      	mov	r0, r4
 802adf0:	bd70      	pop	{r4, r5, r6, pc}
 802adf2:	1cc4      	adds	r4, r0, #3
 802adf4:	f024 0403 	bic.w	r4, r4, #3
 802adf8:	42a0      	cmp	r0, r4
 802adfa:	d0f8      	beq.n	802adee <sbrk_aligned+0x22>
 802adfc:	1a21      	subs	r1, r4, r0
 802adfe:	4628      	mov	r0, r5
 802ae00:	f000 fa4a 	bl	802b298 <_sbrk_r>
 802ae04:	3001      	adds	r0, #1
 802ae06:	d1f2      	bne.n	802adee <sbrk_aligned+0x22>
 802ae08:	e7ef      	b.n	802adea <sbrk_aligned+0x1e>
 802ae0a:	bf00      	nop
 802ae0c:	200149bc 	.word	0x200149bc

0802ae10 <_malloc_r>:
 802ae10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ae14:	1ccd      	adds	r5, r1, #3
 802ae16:	f025 0503 	bic.w	r5, r5, #3
 802ae1a:	3508      	adds	r5, #8
 802ae1c:	2d0c      	cmp	r5, #12
 802ae1e:	bf38      	it	cc
 802ae20:	250c      	movcc	r5, #12
 802ae22:	2d00      	cmp	r5, #0
 802ae24:	4606      	mov	r6, r0
 802ae26:	db01      	blt.n	802ae2c <_malloc_r+0x1c>
 802ae28:	42a9      	cmp	r1, r5
 802ae2a:	d904      	bls.n	802ae36 <_malloc_r+0x26>
 802ae2c:	230c      	movs	r3, #12
 802ae2e:	6033      	str	r3, [r6, #0]
 802ae30:	2000      	movs	r0, #0
 802ae32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ae36:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802af0c <_malloc_r+0xfc>
 802ae3a:	f000 f869 	bl	802af10 <__malloc_lock>
 802ae3e:	f8d8 3000 	ldr.w	r3, [r8]
 802ae42:	461c      	mov	r4, r3
 802ae44:	bb44      	cbnz	r4, 802ae98 <_malloc_r+0x88>
 802ae46:	4629      	mov	r1, r5
 802ae48:	4630      	mov	r0, r6
 802ae4a:	f7ff ffbf 	bl	802adcc <sbrk_aligned>
 802ae4e:	1c43      	adds	r3, r0, #1
 802ae50:	4604      	mov	r4, r0
 802ae52:	d158      	bne.n	802af06 <_malloc_r+0xf6>
 802ae54:	f8d8 4000 	ldr.w	r4, [r8]
 802ae58:	4627      	mov	r7, r4
 802ae5a:	2f00      	cmp	r7, #0
 802ae5c:	d143      	bne.n	802aee6 <_malloc_r+0xd6>
 802ae5e:	2c00      	cmp	r4, #0
 802ae60:	d04b      	beq.n	802aefa <_malloc_r+0xea>
 802ae62:	6823      	ldr	r3, [r4, #0]
 802ae64:	4639      	mov	r1, r7
 802ae66:	4630      	mov	r0, r6
 802ae68:	eb04 0903 	add.w	r9, r4, r3
 802ae6c:	f000 fa14 	bl	802b298 <_sbrk_r>
 802ae70:	4581      	cmp	r9, r0
 802ae72:	d142      	bne.n	802aefa <_malloc_r+0xea>
 802ae74:	6821      	ldr	r1, [r4, #0]
 802ae76:	1a6d      	subs	r5, r5, r1
 802ae78:	4629      	mov	r1, r5
 802ae7a:	4630      	mov	r0, r6
 802ae7c:	f7ff ffa6 	bl	802adcc <sbrk_aligned>
 802ae80:	3001      	adds	r0, #1
 802ae82:	d03a      	beq.n	802aefa <_malloc_r+0xea>
 802ae84:	6823      	ldr	r3, [r4, #0]
 802ae86:	442b      	add	r3, r5
 802ae88:	6023      	str	r3, [r4, #0]
 802ae8a:	f8d8 3000 	ldr.w	r3, [r8]
 802ae8e:	685a      	ldr	r2, [r3, #4]
 802ae90:	bb62      	cbnz	r2, 802aeec <_malloc_r+0xdc>
 802ae92:	f8c8 7000 	str.w	r7, [r8]
 802ae96:	e00f      	b.n	802aeb8 <_malloc_r+0xa8>
 802ae98:	6822      	ldr	r2, [r4, #0]
 802ae9a:	1b52      	subs	r2, r2, r5
 802ae9c:	d420      	bmi.n	802aee0 <_malloc_r+0xd0>
 802ae9e:	2a0b      	cmp	r2, #11
 802aea0:	d917      	bls.n	802aed2 <_malloc_r+0xc2>
 802aea2:	1961      	adds	r1, r4, r5
 802aea4:	42a3      	cmp	r3, r4
 802aea6:	6025      	str	r5, [r4, #0]
 802aea8:	bf18      	it	ne
 802aeaa:	6059      	strne	r1, [r3, #4]
 802aeac:	6863      	ldr	r3, [r4, #4]
 802aeae:	bf08      	it	eq
 802aeb0:	f8c8 1000 	streq.w	r1, [r8]
 802aeb4:	5162      	str	r2, [r4, r5]
 802aeb6:	604b      	str	r3, [r1, #4]
 802aeb8:	4630      	mov	r0, r6
 802aeba:	f000 f82f 	bl	802af1c <__malloc_unlock>
 802aebe:	f104 000b 	add.w	r0, r4, #11
 802aec2:	1d23      	adds	r3, r4, #4
 802aec4:	f020 0007 	bic.w	r0, r0, #7
 802aec8:	1ac2      	subs	r2, r0, r3
 802aeca:	bf1c      	itt	ne
 802aecc:	1a1b      	subne	r3, r3, r0
 802aece:	50a3      	strne	r3, [r4, r2]
 802aed0:	e7af      	b.n	802ae32 <_malloc_r+0x22>
 802aed2:	6862      	ldr	r2, [r4, #4]
 802aed4:	42a3      	cmp	r3, r4
 802aed6:	bf0c      	ite	eq
 802aed8:	f8c8 2000 	streq.w	r2, [r8]
 802aedc:	605a      	strne	r2, [r3, #4]
 802aede:	e7eb      	b.n	802aeb8 <_malloc_r+0xa8>
 802aee0:	4623      	mov	r3, r4
 802aee2:	6864      	ldr	r4, [r4, #4]
 802aee4:	e7ae      	b.n	802ae44 <_malloc_r+0x34>
 802aee6:	463c      	mov	r4, r7
 802aee8:	687f      	ldr	r7, [r7, #4]
 802aeea:	e7b6      	b.n	802ae5a <_malloc_r+0x4a>
 802aeec:	461a      	mov	r2, r3
 802aeee:	685b      	ldr	r3, [r3, #4]
 802aef0:	42a3      	cmp	r3, r4
 802aef2:	d1fb      	bne.n	802aeec <_malloc_r+0xdc>
 802aef4:	2300      	movs	r3, #0
 802aef6:	6053      	str	r3, [r2, #4]
 802aef8:	e7de      	b.n	802aeb8 <_malloc_r+0xa8>
 802aefa:	230c      	movs	r3, #12
 802aefc:	6033      	str	r3, [r6, #0]
 802aefe:	4630      	mov	r0, r6
 802af00:	f000 f80c 	bl	802af1c <__malloc_unlock>
 802af04:	e794      	b.n	802ae30 <_malloc_r+0x20>
 802af06:	6005      	str	r5, [r0, #0]
 802af08:	e7d6      	b.n	802aeb8 <_malloc_r+0xa8>
 802af0a:	bf00      	nop
 802af0c:	200149c0 	.word	0x200149c0

0802af10 <__malloc_lock>:
 802af10:	4801      	ldr	r0, [pc, #4]	@ (802af18 <__malloc_lock+0x8>)
 802af12:	f000 ba0e 	b.w	802b332 <__retarget_lock_acquire_recursive>
 802af16:	bf00      	nop
 802af18:	20014b04 	.word	0x20014b04

0802af1c <__malloc_unlock>:
 802af1c:	4801      	ldr	r0, [pc, #4]	@ (802af24 <__malloc_unlock+0x8>)
 802af1e:	f000 ba09 	b.w	802b334 <__retarget_lock_release_recursive>
 802af22:	bf00      	nop
 802af24:	20014b04 	.word	0x20014b04

0802af28 <__cxa_atexit>:
 802af28:	b510      	push	{r4, lr}
 802af2a:	4604      	mov	r4, r0
 802af2c:	4804      	ldr	r0, [pc, #16]	@ (802af40 <__cxa_atexit+0x18>)
 802af2e:	4613      	mov	r3, r2
 802af30:	b120      	cbz	r0, 802af3c <__cxa_atexit+0x14>
 802af32:	460a      	mov	r2, r1
 802af34:	2002      	movs	r0, #2
 802af36:	4621      	mov	r1, r4
 802af38:	f000 fa0c 	bl	802b354 <__register_exitproc>
 802af3c:	bd10      	pop	{r4, pc}
 802af3e:	bf00      	nop
 802af40:	0802b355 	.word	0x0802b355

0802af44 <std>:
 802af44:	2300      	movs	r3, #0
 802af46:	b510      	push	{r4, lr}
 802af48:	4604      	mov	r4, r0
 802af4a:	e9c0 3300 	strd	r3, r3, [r0]
 802af4e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802af52:	6083      	str	r3, [r0, #8]
 802af54:	8181      	strh	r1, [r0, #12]
 802af56:	6643      	str	r3, [r0, #100]	@ 0x64
 802af58:	81c2      	strh	r2, [r0, #14]
 802af5a:	6183      	str	r3, [r0, #24]
 802af5c:	4619      	mov	r1, r3
 802af5e:	2208      	movs	r2, #8
 802af60:	305c      	adds	r0, #92	@ 0x5c
 802af62:	f000 f918 	bl	802b196 <memset>
 802af66:	4b0d      	ldr	r3, [pc, #52]	@ (802af9c <std+0x58>)
 802af68:	6263      	str	r3, [r4, #36]	@ 0x24
 802af6a:	4b0d      	ldr	r3, [pc, #52]	@ (802afa0 <std+0x5c>)
 802af6c:	62a3      	str	r3, [r4, #40]	@ 0x28
 802af6e:	4b0d      	ldr	r3, [pc, #52]	@ (802afa4 <std+0x60>)
 802af70:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802af72:	4b0d      	ldr	r3, [pc, #52]	@ (802afa8 <std+0x64>)
 802af74:	6323      	str	r3, [r4, #48]	@ 0x30
 802af76:	4b0d      	ldr	r3, [pc, #52]	@ (802afac <std+0x68>)
 802af78:	6224      	str	r4, [r4, #32]
 802af7a:	429c      	cmp	r4, r3
 802af7c:	d006      	beq.n	802af8c <std+0x48>
 802af7e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802af82:	4294      	cmp	r4, r2
 802af84:	d002      	beq.n	802af8c <std+0x48>
 802af86:	33d0      	adds	r3, #208	@ 0xd0
 802af88:	429c      	cmp	r4, r3
 802af8a:	d105      	bne.n	802af98 <std+0x54>
 802af8c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802af90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802af94:	f000 b9cc 	b.w	802b330 <__retarget_lock_init_recursive>
 802af98:	bd10      	pop	{r4, pc}
 802af9a:	bf00      	nop
 802af9c:	0802b111 	.word	0x0802b111
 802afa0:	0802b133 	.word	0x0802b133
 802afa4:	0802b16b 	.word	0x0802b16b
 802afa8:	0802b18f 	.word	0x0802b18f
 802afac:	200149c4 	.word	0x200149c4

0802afb0 <stdio_exit_handler>:
 802afb0:	4a02      	ldr	r2, [pc, #8]	@ (802afbc <stdio_exit_handler+0xc>)
 802afb2:	4903      	ldr	r1, [pc, #12]	@ (802afc0 <stdio_exit_handler+0x10>)
 802afb4:	4803      	ldr	r0, [pc, #12]	@ (802afc4 <stdio_exit_handler+0x14>)
 802afb6:	f000 b87b 	b.w	802b0b0 <_fwalk_sglue>
 802afba:	bf00      	nop
 802afbc:	20000104 	.word	0x20000104
 802afc0:	0802bb45 	.word	0x0802bb45
 802afc4:	20000114 	.word	0x20000114

0802afc8 <cleanup_stdio>:
 802afc8:	6841      	ldr	r1, [r0, #4]
 802afca:	4b0c      	ldr	r3, [pc, #48]	@ (802affc <cleanup_stdio+0x34>)
 802afcc:	4299      	cmp	r1, r3
 802afce:	b510      	push	{r4, lr}
 802afd0:	4604      	mov	r4, r0
 802afd2:	d001      	beq.n	802afd8 <cleanup_stdio+0x10>
 802afd4:	f000 fdb6 	bl	802bb44 <_fflush_r>
 802afd8:	68a1      	ldr	r1, [r4, #8]
 802afda:	4b09      	ldr	r3, [pc, #36]	@ (802b000 <cleanup_stdio+0x38>)
 802afdc:	4299      	cmp	r1, r3
 802afde:	d002      	beq.n	802afe6 <cleanup_stdio+0x1e>
 802afe0:	4620      	mov	r0, r4
 802afe2:	f000 fdaf 	bl	802bb44 <_fflush_r>
 802afe6:	68e1      	ldr	r1, [r4, #12]
 802afe8:	4b06      	ldr	r3, [pc, #24]	@ (802b004 <cleanup_stdio+0x3c>)
 802afea:	4299      	cmp	r1, r3
 802afec:	d004      	beq.n	802aff8 <cleanup_stdio+0x30>
 802afee:	4620      	mov	r0, r4
 802aff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aff4:	f000 bda6 	b.w	802bb44 <_fflush_r>
 802aff8:	bd10      	pop	{r4, pc}
 802affa:	bf00      	nop
 802affc:	200149c4 	.word	0x200149c4
 802b000:	20014a2c 	.word	0x20014a2c
 802b004:	20014a94 	.word	0x20014a94

0802b008 <global_stdio_init.part.0>:
 802b008:	b510      	push	{r4, lr}
 802b00a:	4b0b      	ldr	r3, [pc, #44]	@ (802b038 <global_stdio_init.part.0+0x30>)
 802b00c:	4c0b      	ldr	r4, [pc, #44]	@ (802b03c <global_stdio_init.part.0+0x34>)
 802b00e:	4a0c      	ldr	r2, [pc, #48]	@ (802b040 <global_stdio_init.part.0+0x38>)
 802b010:	601a      	str	r2, [r3, #0]
 802b012:	4620      	mov	r0, r4
 802b014:	2200      	movs	r2, #0
 802b016:	2104      	movs	r1, #4
 802b018:	f7ff ff94 	bl	802af44 <std>
 802b01c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802b020:	2201      	movs	r2, #1
 802b022:	2109      	movs	r1, #9
 802b024:	f7ff ff8e 	bl	802af44 <std>
 802b028:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802b02c:	2202      	movs	r2, #2
 802b02e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b032:	2112      	movs	r1, #18
 802b034:	f7ff bf86 	b.w	802af44 <std>
 802b038:	20014afc 	.word	0x20014afc
 802b03c:	200149c4 	.word	0x200149c4
 802b040:	0802afb1 	.word	0x0802afb1

0802b044 <__sfp_lock_acquire>:
 802b044:	4801      	ldr	r0, [pc, #4]	@ (802b04c <__sfp_lock_acquire+0x8>)
 802b046:	f000 b974 	b.w	802b332 <__retarget_lock_acquire_recursive>
 802b04a:	bf00      	nop
 802b04c:	20014b06 	.word	0x20014b06

0802b050 <__sfp_lock_release>:
 802b050:	4801      	ldr	r0, [pc, #4]	@ (802b058 <__sfp_lock_release+0x8>)
 802b052:	f000 b96f 	b.w	802b334 <__retarget_lock_release_recursive>
 802b056:	bf00      	nop
 802b058:	20014b06 	.word	0x20014b06

0802b05c <__sinit>:
 802b05c:	b510      	push	{r4, lr}
 802b05e:	4604      	mov	r4, r0
 802b060:	f7ff fff0 	bl	802b044 <__sfp_lock_acquire>
 802b064:	6a23      	ldr	r3, [r4, #32]
 802b066:	b11b      	cbz	r3, 802b070 <__sinit+0x14>
 802b068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b06c:	f7ff bff0 	b.w	802b050 <__sfp_lock_release>
 802b070:	4b04      	ldr	r3, [pc, #16]	@ (802b084 <__sinit+0x28>)
 802b072:	6223      	str	r3, [r4, #32]
 802b074:	4b04      	ldr	r3, [pc, #16]	@ (802b088 <__sinit+0x2c>)
 802b076:	681b      	ldr	r3, [r3, #0]
 802b078:	2b00      	cmp	r3, #0
 802b07a:	d1f5      	bne.n	802b068 <__sinit+0xc>
 802b07c:	f7ff ffc4 	bl	802b008 <global_stdio_init.part.0>
 802b080:	e7f2      	b.n	802b068 <__sinit+0xc>
 802b082:	bf00      	nop
 802b084:	0802afc9 	.word	0x0802afc9
 802b088:	20014afc 	.word	0x20014afc

0802b08c <fiprintf>:
 802b08c:	b40e      	push	{r1, r2, r3}
 802b08e:	b503      	push	{r0, r1, lr}
 802b090:	4601      	mov	r1, r0
 802b092:	ab03      	add	r3, sp, #12
 802b094:	4805      	ldr	r0, [pc, #20]	@ (802b0ac <fiprintf+0x20>)
 802b096:	f853 2b04 	ldr.w	r2, [r3], #4
 802b09a:	6800      	ldr	r0, [r0, #0]
 802b09c:	9301      	str	r3, [sp, #4]
 802b09e:	f000 fa29 	bl	802b4f4 <_vfiprintf_r>
 802b0a2:	b002      	add	sp, #8
 802b0a4:	f85d eb04 	ldr.w	lr, [sp], #4
 802b0a8:	b003      	add	sp, #12
 802b0aa:	4770      	bx	lr
 802b0ac:	20000110 	.word	0x20000110

0802b0b0 <_fwalk_sglue>:
 802b0b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b0b4:	4607      	mov	r7, r0
 802b0b6:	4688      	mov	r8, r1
 802b0b8:	4614      	mov	r4, r2
 802b0ba:	2600      	movs	r6, #0
 802b0bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b0c0:	f1b9 0901 	subs.w	r9, r9, #1
 802b0c4:	d505      	bpl.n	802b0d2 <_fwalk_sglue+0x22>
 802b0c6:	6824      	ldr	r4, [r4, #0]
 802b0c8:	2c00      	cmp	r4, #0
 802b0ca:	d1f7      	bne.n	802b0bc <_fwalk_sglue+0xc>
 802b0cc:	4630      	mov	r0, r6
 802b0ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b0d2:	89ab      	ldrh	r3, [r5, #12]
 802b0d4:	2b01      	cmp	r3, #1
 802b0d6:	d907      	bls.n	802b0e8 <_fwalk_sglue+0x38>
 802b0d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b0dc:	3301      	adds	r3, #1
 802b0de:	d003      	beq.n	802b0e8 <_fwalk_sglue+0x38>
 802b0e0:	4629      	mov	r1, r5
 802b0e2:	4638      	mov	r0, r7
 802b0e4:	47c0      	blx	r8
 802b0e6:	4306      	orrs	r6, r0
 802b0e8:	3568      	adds	r5, #104	@ 0x68
 802b0ea:	e7e9      	b.n	802b0c0 <_fwalk_sglue+0x10>

0802b0ec <iprintf>:
 802b0ec:	b40f      	push	{r0, r1, r2, r3}
 802b0ee:	b507      	push	{r0, r1, r2, lr}
 802b0f0:	4906      	ldr	r1, [pc, #24]	@ (802b10c <iprintf+0x20>)
 802b0f2:	ab04      	add	r3, sp, #16
 802b0f4:	6808      	ldr	r0, [r1, #0]
 802b0f6:	f853 2b04 	ldr.w	r2, [r3], #4
 802b0fa:	6881      	ldr	r1, [r0, #8]
 802b0fc:	9301      	str	r3, [sp, #4]
 802b0fe:	f000 f9f9 	bl	802b4f4 <_vfiprintf_r>
 802b102:	b003      	add	sp, #12
 802b104:	f85d eb04 	ldr.w	lr, [sp], #4
 802b108:	b004      	add	sp, #16
 802b10a:	4770      	bx	lr
 802b10c:	20000110 	.word	0x20000110

0802b110 <__sread>:
 802b110:	b510      	push	{r4, lr}
 802b112:	460c      	mov	r4, r1
 802b114:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b118:	f000 f898 	bl	802b24c <_read_r>
 802b11c:	2800      	cmp	r0, #0
 802b11e:	bfab      	itete	ge
 802b120:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802b122:	89a3      	ldrhlt	r3, [r4, #12]
 802b124:	181b      	addge	r3, r3, r0
 802b126:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802b12a:	bfac      	ite	ge
 802b12c:	6563      	strge	r3, [r4, #84]	@ 0x54
 802b12e:	81a3      	strhlt	r3, [r4, #12]
 802b130:	bd10      	pop	{r4, pc}

0802b132 <__swrite>:
 802b132:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b136:	461f      	mov	r7, r3
 802b138:	898b      	ldrh	r3, [r1, #12]
 802b13a:	05db      	lsls	r3, r3, #23
 802b13c:	4605      	mov	r5, r0
 802b13e:	460c      	mov	r4, r1
 802b140:	4616      	mov	r6, r2
 802b142:	d505      	bpl.n	802b150 <__swrite+0x1e>
 802b144:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b148:	2302      	movs	r3, #2
 802b14a:	2200      	movs	r2, #0
 802b14c:	f000 f86c 	bl	802b228 <_lseek_r>
 802b150:	89a3      	ldrh	r3, [r4, #12]
 802b152:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b156:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802b15a:	81a3      	strh	r3, [r4, #12]
 802b15c:	4632      	mov	r2, r6
 802b15e:	463b      	mov	r3, r7
 802b160:	4628      	mov	r0, r5
 802b162:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b166:	f000 b8a7 	b.w	802b2b8 <_write_r>

0802b16a <__sseek>:
 802b16a:	b510      	push	{r4, lr}
 802b16c:	460c      	mov	r4, r1
 802b16e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b172:	f000 f859 	bl	802b228 <_lseek_r>
 802b176:	1c43      	adds	r3, r0, #1
 802b178:	89a3      	ldrh	r3, [r4, #12]
 802b17a:	bf15      	itete	ne
 802b17c:	6560      	strne	r0, [r4, #84]	@ 0x54
 802b17e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802b182:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802b186:	81a3      	strheq	r3, [r4, #12]
 802b188:	bf18      	it	ne
 802b18a:	81a3      	strhne	r3, [r4, #12]
 802b18c:	bd10      	pop	{r4, pc}

0802b18e <__sclose>:
 802b18e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b192:	f000 b839 	b.w	802b208 <_close_r>

0802b196 <memset>:
 802b196:	4402      	add	r2, r0
 802b198:	4603      	mov	r3, r0
 802b19a:	4293      	cmp	r3, r2
 802b19c:	d100      	bne.n	802b1a0 <memset+0xa>
 802b19e:	4770      	bx	lr
 802b1a0:	f803 1b01 	strb.w	r1, [r3], #1
 802b1a4:	e7f9      	b.n	802b19a <memset+0x4>

0802b1a6 <_raise_r>:
 802b1a6:	291f      	cmp	r1, #31
 802b1a8:	b538      	push	{r3, r4, r5, lr}
 802b1aa:	4605      	mov	r5, r0
 802b1ac:	460c      	mov	r4, r1
 802b1ae:	d904      	bls.n	802b1ba <_raise_r+0x14>
 802b1b0:	2316      	movs	r3, #22
 802b1b2:	6003      	str	r3, [r0, #0]
 802b1b4:	f04f 30ff 	mov.w	r0, #4294967295
 802b1b8:	bd38      	pop	{r3, r4, r5, pc}
 802b1ba:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802b1bc:	b112      	cbz	r2, 802b1c4 <_raise_r+0x1e>
 802b1be:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b1c2:	b94b      	cbnz	r3, 802b1d8 <_raise_r+0x32>
 802b1c4:	4628      	mov	r0, r5
 802b1c6:	f000 f865 	bl	802b294 <_getpid_r>
 802b1ca:	4622      	mov	r2, r4
 802b1cc:	4601      	mov	r1, r0
 802b1ce:	4628      	mov	r0, r5
 802b1d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b1d4:	f000 b84c 	b.w	802b270 <_kill_r>
 802b1d8:	2b01      	cmp	r3, #1
 802b1da:	d00a      	beq.n	802b1f2 <_raise_r+0x4c>
 802b1dc:	1c59      	adds	r1, r3, #1
 802b1de:	d103      	bne.n	802b1e8 <_raise_r+0x42>
 802b1e0:	2316      	movs	r3, #22
 802b1e2:	6003      	str	r3, [r0, #0]
 802b1e4:	2001      	movs	r0, #1
 802b1e6:	e7e7      	b.n	802b1b8 <_raise_r+0x12>
 802b1e8:	2100      	movs	r1, #0
 802b1ea:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802b1ee:	4620      	mov	r0, r4
 802b1f0:	4798      	blx	r3
 802b1f2:	2000      	movs	r0, #0
 802b1f4:	e7e0      	b.n	802b1b8 <_raise_r+0x12>
	...

0802b1f8 <raise>:
 802b1f8:	4b02      	ldr	r3, [pc, #8]	@ (802b204 <raise+0xc>)
 802b1fa:	4601      	mov	r1, r0
 802b1fc:	6818      	ldr	r0, [r3, #0]
 802b1fe:	f7ff bfd2 	b.w	802b1a6 <_raise_r>
 802b202:	bf00      	nop
 802b204:	20000110 	.word	0x20000110

0802b208 <_close_r>:
 802b208:	b538      	push	{r3, r4, r5, lr}
 802b20a:	4d06      	ldr	r5, [pc, #24]	@ (802b224 <_close_r+0x1c>)
 802b20c:	2300      	movs	r3, #0
 802b20e:	4604      	mov	r4, r0
 802b210:	4608      	mov	r0, r1
 802b212:	602b      	str	r3, [r5, #0]
 802b214:	f7d7 fdf4 	bl	8002e00 <_close>
 802b218:	1c43      	adds	r3, r0, #1
 802b21a:	d102      	bne.n	802b222 <_close_r+0x1a>
 802b21c:	682b      	ldr	r3, [r5, #0]
 802b21e:	b103      	cbz	r3, 802b222 <_close_r+0x1a>
 802b220:	6023      	str	r3, [r4, #0]
 802b222:	bd38      	pop	{r3, r4, r5, pc}
 802b224:	20014b00 	.word	0x20014b00

0802b228 <_lseek_r>:
 802b228:	b538      	push	{r3, r4, r5, lr}
 802b22a:	4d07      	ldr	r5, [pc, #28]	@ (802b248 <_lseek_r+0x20>)
 802b22c:	4604      	mov	r4, r0
 802b22e:	4608      	mov	r0, r1
 802b230:	4611      	mov	r1, r2
 802b232:	2200      	movs	r2, #0
 802b234:	602a      	str	r2, [r5, #0]
 802b236:	461a      	mov	r2, r3
 802b238:	f7d7 fdec 	bl	8002e14 <_lseek>
 802b23c:	1c43      	adds	r3, r0, #1
 802b23e:	d102      	bne.n	802b246 <_lseek_r+0x1e>
 802b240:	682b      	ldr	r3, [r5, #0]
 802b242:	b103      	cbz	r3, 802b246 <_lseek_r+0x1e>
 802b244:	6023      	str	r3, [r4, #0]
 802b246:	bd38      	pop	{r3, r4, r5, pc}
 802b248:	20014b00 	.word	0x20014b00

0802b24c <_read_r>:
 802b24c:	b538      	push	{r3, r4, r5, lr}
 802b24e:	4d07      	ldr	r5, [pc, #28]	@ (802b26c <_read_r+0x20>)
 802b250:	4604      	mov	r4, r0
 802b252:	4608      	mov	r0, r1
 802b254:	4611      	mov	r1, r2
 802b256:	2200      	movs	r2, #0
 802b258:	602a      	str	r2, [r5, #0]
 802b25a:	461a      	mov	r2, r3
 802b25c:	f7d7 fdc2 	bl	8002de4 <_read>
 802b260:	1c43      	adds	r3, r0, #1
 802b262:	d102      	bne.n	802b26a <_read_r+0x1e>
 802b264:	682b      	ldr	r3, [r5, #0]
 802b266:	b103      	cbz	r3, 802b26a <_read_r+0x1e>
 802b268:	6023      	str	r3, [r4, #0]
 802b26a:	bd38      	pop	{r3, r4, r5, pc}
 802b26c:	20014b00 	.word	0x20014b00

0802b270 <_kill_r>:
 802b270:	b538      	push	{r3, r4, r5, lr}
 802b272:	4d07      	ldr	r5, [pc, #28]	@ (802b290 <_kill_r+0x20>)
 802b274:	2300      	movs	r3, #0
 802b276:	4604      	mov	r4, r0
 802b278:	4608      	mov	r0, r1
 802b27a:	4611      	mov	r1, r2
 802b27c:	602b      	str	r3, [r5, #0]
 802b27e:	f7d7 fda3 	bl	8002dc8 <_kill>
 802b282:	1c43      	adds	r3, r0, #1
 802b284:	d102      	bne.n	802b28c <_kill_r+0x1c>
 802b286:	682b      	ldr	r3, [r5, #0]
 802b288:	b103      	cbz	r3, 802b28c <_kill_r+0x1c>
 802b28a:	6023      	str	r3, [r4, #0]
 802b28c:	bd38      	pop	{r3, r4, r5, pc}
 802b28e:	bf00      	nop
 802b290:	20014b00 	.word	0x20014b00

0802b294 <_getpid_r>:
 802b294:	f7d7 bd96 	b.w	8002dc4 <_getpid>

0802b298 <_sbrk_r>:
 802b298:	b538      	push	{r3, r4, r5, lr}
 802b29a:	4d06      	ldr	r5, [pc, #24]	@ (802b2b4 <_sbrk_r+0x1c>)
 802b29c:	2300      	movs	r3, #0
 802b29e:	4604      	mov	r4, r0
 802b2a0:	4608      	mov	r0, r1
 802b2a2:	602b      	str	r3, [r5, #0]
 802b2a4:	f7d7 fdc4 	bl	8002e30 <_sbrk>
 802b2a8:	1c43      	adds	r3, r0, #1
 802b2aa:	d102      	bne.n	802b2b2 <_sbrk_r+0x1a>
 802b2ac:	682b      	ldr	r3, [r5, #0]
 802b2ae:	b103      	cbz	r3, 802b2b2 <_sbrk_r+0x1a>
 802b2b0:	6023      	str	r3, [r4, #0]
 802b2b2:	bd38      	pop	{r3, r4, r5, pc}
 802b2b4:	20014b00 	.word	0x20014b00

0802b2b8 <_write_r>:
 802b2b8:	b538      	push	{r3, r4, r5, lr}
 802b2ba:	4d07      	ldr	r5, [pc, #28]	@ (802b2d8 <_write_r+0x20>)
 802b2bc:	4604      	mov	r4, r0
 802b2be:	4608      	mov	r0, r1
 802b2c0:	4611      	mov	r1, r2
 802b2c2:	2200      	movs	r2, #0
 802b2c4:	602a      	str	r2, [r5, #0]
 802b2c6:	461a      	mov	r2, r3
 802b2c8:	f7d7 fda6 	bl	8002e18 <_write>
 802b2cc:	1c43      	adds	r3, r0, #1
 802b2ce:	d102      	bne.n	802b2d6 <_write_r+0x1e>
 802b2d0:	682b      	ldr	r3, [r5, #0]
 802b2d2:	b103      	cbz	r3, 802b2d6 <_write_r+0x1e>
 802b2d4:	6023      	str	r3, [r4, #0]
 802b2d6:	bd38      	pop	{r3, r4, r5, pc}
 802b2d8:	20014b00 	.word	0x20014b00

0802b2dc <__errno>:
 802b2dc:	4b01      	ldr	r3, [pc, #4]	@ (802b2e4 <__errno+0x8>)
 802b2de:	6818      	ldr	r0, [r3, #0]
 802b2e0:	4770      	bx	lr
 802b2e2:	bf00      	nop
 802b2e4:	20000110 	.word	0x20000110

0802b2e8 <__libc_init_array>:
 802b2e8:	b570      	push	{r4, r5, r6, lr}
 802b2ea:	4d0d      	ldr	r5, [pc, #52]	@ (802b320 <__libc_init_array+0x38>)
 802b2ec:	4c0d      	ldr	r4, [pc, #52]	@ (802b324 <__libc_init_array+0x3c>)
 802b2ee:	1b64      	subs	r4, r4, r5
 802b2f0:	10a4      	asrs	r4, r4, #2
 802b2f2:	2600      	movs	r6, #0
 802b2f4:	42a6      	cmp	r6, r4
 802b2f6:	d109      	bne.n	802b30c <__libc_init_array+0x24>
 802b2f8:	4d0b      	ldr	r5, [pc, #44]	@ (802b328 <__libc_init_array+0x40>)
 802b2fa:	4c0c      	ldr	r4, [pc, #48]	@ (802b32c <__libc_init_array+0x44>)
 802b2fc:	f000 fd62 	bl	802bdc4 <_init>
 802b300:	1b64      	subs	r4, r4, r5
 802b302:	10a4      	asrs	r4, r4, #2
 802b304:	2600      	movs	r6, #0
 802b306:	42a6      	cmp	r6, r4
 802b308:	d105      	bne.n	802b316 <__libc_init_array+0x2e>
 802b30a:	bd70      	pop	{r4, r5, r6, pc}
 802b30c:	f855 3b04 	ldr.w	r3, [r5], #4
 802b310:	4798      	blx	r3
 802b312:	3601      	adds	r6, #1
 802b314:	e7ee      	b.n	802b2f4 <__libc_init_array+0xc>
 802b316:	f855 3b04 	ldr.w	r3, [r5], #4
 802b31a:	4798      	blx	r3
 802b31c:	3601      	adds	r6, #1
 802b31e:	e7f2      	b.n	802b306 <__libc_init_array+0x1e>
 802b320:	0804ec1c 	.word	0x0804ec1c
 802b324:	0804ec1c 	.word	0x0804ec1c
 802b328:	0804ec1c 	.word	0x0804ec1c
 802b32c:	0804ec30 	.word	0x0804ec30

0802b330 <__retarget_lock_init_recursive>:
 802b330:	4770      	bx	lr

0802b332 <__retarget_lock_acquire_recursive>:
 802b332:	4770      	bx	lr

0802b334 <__retarget_lock_release_recursive>:
 802b334:	4770      	bx	lr

0802b336 <memcpy>:
 802b336:	440a      	add	r2, r1
 802b338:	4291      	cmp	r1, r2
 802b33a:	f100 33ff 	add.w	r3, r0, #4294967295
 802b33e:	d100      	bne.n	802b342 <memcpy+0xc>
 802b340:	4770      	bx	lr
 802b342:	b510      	push	{r4, lr}
 802b344:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b348:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b34c:	4291      	cmp	r1, r2
 802b34e:	d1f9      	bne.n	802b344 <memcpy+0xe>
 802b350:	bd10      	pop	{r4, pc}
	...

0802b354 <__register_exitproc>:
 802b354:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b358:	4d27      	ldr	r5, [pc, #156]	@ (802b3f8 <__register_exitproc+0xa4>)
 802b35a:	4607      	mov	r7, r0
 802b35c:	6828      	ldr	r0, [r5, #0]
 802b35e:	4691      	mov	r9, r2
 802b360:	460e      	mov	r6, r1
 802b362:	4698      	mov	r8, r3
 802b364:	f7ff ffe5 	bl	802b332 <__retarget_lock_acquire_recursive>
 802b368:	4a24      	ldr	r2, [pc, #144]	@ (802b3fc <__register_exitproc+0xa8>)
 802b36a:	6814      	ldr	r4, [r2, #0]
 802b36c:	b93c      	cbnz	r4, 802b37e <__register_exitproc+0x2a>
 802b36e:	4b24      	ldr	r3, [pc, #144]	@ (802b400 <__register_exitproc+0xac>)
 802b370:	6013      	str	r3, [r2, #0]
 802b372:	4a24      	ldr	r2, [pc, #144]	@ (802b404 <__register_exitproc+0xb0>)
 802b374:	b112      	cbz	r2, 802b37c <__register_exitproc+0x28>
 802b376:	6812      	ldr	r2, [r2, #0]
 802b378:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802b37c:	4c20      	ldr	r4, [pc, #128]	@ (802b400 <__register_exitproc+0xac>)
 802b37e:	6863      	ldr	r3, [r4, #4]
 802b380:	2b1f      	cmp	r3, #31
 802b382:	dd06      	ble.n	802b392 <__register_exitproc+0x3e>
 802b384:	6828      	ldr	r0, [r5, #0]
 802b386:	f7ff ffd5 	bl	802b334 <__retarget_lock_release_recursive>
 802b38a:	f04f 30ff 	mov.w	r0, #4294967295
 802b38e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b392:	b32f      	cbz	r7, 802b3e0 <__register_exitproc+0x8c>
 802b394:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802b398:	b968      	cbnz	r0, 802b3b6 <__register_exitproc+0x62>
 802b39a:	4b1b      	ldr	r3, [pc, #108]	@ (802b408 <__register_exitproc+0xb4>)
 802b39c:	2b00      	cmp	r3, #0
 802b39e:	d0f1      	beq.n	802b384 <__register_exitproc+0x30>
 802b3a0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802b3a4:	f7ff fd02 	bl	802adac <malloc>
 802b3a8:	2800      	cmp	r0, #0
 802b3aa:	d0eb      	beq.n	802b384 <__register_exitproc+0x30>
 802b3ac:	2300      	movs	r3, #0
 802b3ae:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802b3b2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802b3b6:	6863      	ldr	r3, [r4, #4]
 802b3b8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b3bc:	2201      	movs	r2, #1
 802b3be:	409a      	lsls	r2, r3
 802b3c0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b3c4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802b3c8:	4313      	orrs	r3, r2
 802b3ca:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802b3ce:	2f02      	cmp	r7, #2
 802b3d0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802b3d4:	bf02      	ittt	eq
 802b3d6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802b3da:	4313      	orreq	r3, r2
 802b3dc:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802b3e0:	6863      	ldr	r3, [r4, #4]
 802b3e2:	6828      	ldr	r0, [r5, #0]
 802b3e4:	1c5a      	adds	r2, r3, #1
 802b3e6:	3302      	adds	r3, #2
 802b3e8:	6062      	str	r2, [r4, #4]
 802b3ea:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802b3ee:	f7ff ffa1 	bl	802b334 <__retarget_lock_release_recursive>
 802b3f2:	2000      	movs	r0, #0
 802b3f4:	e7cb      	b.n	802b38e <__register_exitproc+0x3a>
 802b3f6:	bf00      	nop
 802b3f8:	20000160 	.word	0x20000160
 802b3fc:	20014b94 	.word	0x20014b94
 802b400:	20014b08 	.word	0x20014b08
 802b404:	0802ec08 	.word	0x0802ec08
 802b408:	0802adad 	.word	0x0802adad

0802b40c <_free_r>:
 802b40c:	b538      	push	{r3, r4, r5, lr}
 802b40e:	4605      	mov	r5, r0
 802b410:	2900      	cmp	r1, #0
 802b412:	d041      	beq.n	802b498 <_free_r+0x8c>
 802b414:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b418:	1f0c      	subs	r4, r1, #4
 802b41a:	2b00      	cmp	r3, #0
 802b41c:	bfb8      	it	lt
 802b41e:	18e4      	addlt	r4, r4, r3
 802b420:	f7ff fd76 	bl	802af10 <__malloc_lock>
 802b424:	4a1d      	ldr	r2, [pc, #116]	@ (802b49c <_free_r+0x90>)
 802b426:	6813      	ldr	r3, [r2, #0]
 802b428:	b933      	cbnz	r3, 802b438 <_free_r+0x2c>
 802b42a:	6063      	str	r3, [r4, #4]
 802b42c:	6014      	str	r4, [r2, #0]
 802b42e:	4628      	mov	r0, r5
 802b430:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b434:	f7ff bd72 	b.w	802af1c <__malloc_unlock>
 802b438:	42a3      	cmp	r3, r4
 802b43a:	d908      	bls.n	802b44e <_free_r+0x42>
 802b43c:	6820      	ldr	r0, [r4, #0]
 802b43e:	1821      	adds	r1, r4, r0
 802b440:	428b      	cmp	r3, r1
 802b442:	bf01      	itttt	eq
 802b444:	6819      	ldreq	r1, [r3, #0]
 802b446:	685b      	ldreq	r3, [r3, #4]
 802b448:	1809      	addeq	r1, r1, r0
 802b44a:	6021      	streq	r1, [r4, #0]
 802b44c:	e7ed      	b.n	802b42a <_free_r+0x1e>
 802b44e:	461a      	mov	r2, r3
 802b450:	685b      	ldr	r3, [r3, #4]
 802b452:	b10b      	cbz	r3, 802b458 <_free_r+0x4c>
 802b454:	42a3      	cmp	r3, r4
 802b456:	d9fa      	bls.n	802b44e <_free_r+0x42>
 802b458:	6811      	ldr	r1, [r2, #0]
 802b45a:	1850      	adds	r0, r2, r1
 802b45c:	42a0      	cmp	r0, r4
 802b45e:	d10b      	bne.n	802b478 <_free_r+0x6c>
 802b460:	6820      	ldr	r0, [r4, #0]
 802b462:	4401      	add	r1, r0
 802b464:	1850      	adds	r0, r2, r1
 802b466:	4283      	cmp	r3, r0
 802b468:	6011      	str	r1, [r2, #0]
 802b46a:	d1e0      	bne.n	802b42e <_free_r+0x22>
 802b46c:	6818      	ldr	r0, [r3, #0]
 802b46e:	685b      	ldr	r3, [r3, #4]
 802b470:	6053      	str	r3, [r2, #4]
 802b472:	4408      	add	r0, r1
 802b474:	6010      	str	r0, [r2, #0]
 802b476:	e7da      	b.n	802b42e <_free_r+0x22>
 802b478:	d902      	bls.n	802b480 <_free_r+0x74>
 802b47a:	230c      	movs	r3, #12
 802b47c:	602b      	str	r3, [r5, #0]
 802b47e:	e7d6      	b.n	802b42e <_free_r+0x22>
 802b480:	6820      	ldr	r0, [r4, #0]
 802b482:	1821      	adds	r1, r4, r0
 802b484:	428b      	cmp	r3, r1
 802b486:	bf04      	itt	eq
 802b488:	6819      	ldreq	r1, [r3, #0]
 802b48a:	685b      	ldreq	r3, [r3, #4]
 802b48c:	6063      	str	r3, [r4, #4]
 802b48e:	bf04      	itt	eq
 802b490:	1809      	addeq	r1, r1, r0
 802b492:	6021      	streq	r1, [r4, #0]
 802b494:	6054      	str	r4, [r2, #4]
 802b496:	e7ca      	b.n	802b42e <_free_r+0x22>
 802b498:	bd38      	pop	{r3, r4, r5, pc}
 802b49a:	bf00      	nop
 802b49c:	200149c0 	.word	0x200149c0

0802b4a0 <__sfputc_r>:
 802b4a0:	6893      	ldr	r3, [r2, #8]
 802b4a2:	3b01      	subs	r3, #1
 802b4a4:	2b00      	cmp	r3, #0
 802b4a6:	b410      	push	{r4}
 802b4a8:	6093      	str	r3, [r2, #8]
 802b4aa:	da08      	bge.n	802b4be <__sfputc_r+0x1e>
 802b4ac:	6994      	ldr	r4, [r2, #24]
 802b4ae:	42a3      	cmp	r3, r4
 802b4b0:	db01      	blt.n	802b4b6 <__sfputc_r+0x16>
 802b4b2:	290a      	cmp	r1, #10
 802b4b4:	d103      	bne.n	802b4be <__sfputc_r+0x1e>
 802b4b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b4ba:	f000 bb6b 	b.w	802bb94 <__swbuf_r>
 802b4be:	6813      	ldr	r3, [r2, #0]
 802b4c0:	1c58      	adds	r0, r3, #1
 802b4c2:	6010      	str	r0, [r2, #0]
 802b4c4:	7019      	strb	r1, [r3, #0]
 802b4c6:	4608      	mov	r0, r1
 802b4c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b4cc:	4770      	bx	lr

0802b4ce <__sfputs_r>:
 802b4ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b4d0:	4606      	mov	r6, r0
 802b4d2:	460f      	mov	r7, r1
 802b4d4:	4614      	mov	r4, r2
 802b4d6:	18d5      	adds	r5, r2, r3
 802b4d8:	42ac      	cmp	r4, r5
 802b4da:	d101      	bne.n	802b4e0 <__sfputs_r+0x12>
 802b4dc:	2000      	movs	r0, #0
 802b4de:	e007      	b.n	802b4f0 <__sfputs_r+0x22>
 802b4e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b4e4:	463a      	mov	r2, r7
 802b4e6:	4630      	mov	r0, r6
 802b4e8:	f7ff ffda 	bl	802b4a0 <__sfputc_r>
 802b4ec:	1c43      	adds	r3, r0, #1
 802b4ee:	d1f3      	bne.n	802b4d8 <__sfputs_r+0xa>
 802b4f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b4f4 <_vfiprintf_r>:
 802b4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4f8:	460d      	mov	r5, r1
 802b4fa:	b09d      	sub	sp, #116	@ 0x74
 802b4fc:	4614      	mov	r4, r2
 802b4fe:	4698      	mov	r8, r3
 802b500:	4606      	mov	r6, r0
 802b502:	b118      	cbz	r0, 802b50c <_vfiprintf_r+0x18>
 802b504:	6a03      	ldr	r3, [r0, #32]
 802b506:	b90b      	cbnz	r3, 802b50c <_vfiprintf_r+0x18>
 802b508:	f7ff fda8 	bl	802b05c <__sinit>
 802b50c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802b50e:	07d9      	lsls	r1, r3, #31
 802b510:	d405      	bmi.n	802b51e <_vfiprintf_r+0x2a>
 802b512:	89ab      	ldrh	r3, [r5, #12]
 802b514:	059a      	lsls	r2, r3, #22
 802b516:	d402      	bmi.n	802b51e <_vfiprintf_r+0x2a>
 802b518:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802b51a:	f7ff ff0a 	bl	802b332 <__retarget_lock_acquire_recursive>
 802b51e:	89ab      	ldrh	r3, [r5, #12]
 802b520:	071b      	lsls	r3, r3, #28
 802b522:	d501      	bpl.n	802b528 <_vfiprintf_r+0x34>
 802b524:	692b      	ldr	r3, [r5, #16]
 802b526:	b99b      	cbnz	r3, 802b550 <_vfiprintf_r+0x5c>
 802b528:	4629      	mov	r1, r5
 802b52a:	4630      	mov	r0, r6
 802b52c:	f000 fb70 	bl	802bc10 <__swsetup_r>
 802b530:	b170      	cbz	r0, 802b550 <_vfiprintf_r+0x5c>
 802b532:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802b534:	07dc      	lsls	r4, r3, #31
 802b536:	d504      	bpl.n	802b542 <_vfiprintf_r+0x4e>
 802b538:	f04f 30ff 	mov.w	r0, #4294967295
 802b53c:	b01d      	add	sp, #116	@ 0x74
 802b53e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b542:	89ab      	ldrh	r3, [r5, #12]
 802b544:	0598      	lsls	r0, r3, #22
 802b546:	d4f7      	bmi.n	802b538 <_vfiprintf_r+0x44>
 802b548:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802b54a:	f7ff fef3 	bl	802b334 <__retarget_lock_release_recursive>
 802b54e:	e7f3      	b.n	802b538 <_vfiprintf_r+0x44>
 802b550:	2300      	movs	r3, #0
 802b552:	9309      	str	r3, [sp, #36]	@ 0x24
 802b554:	2320      	movs	r3, #32
 802b556:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802b55a:	f8cd 800c 	str.w	r8, [sp, #12]
 802b55e:	2330      	movs	r3, #48	@ 0x30
 802b560:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802b710 <_vfiprintf_r+0x21c>
 802b564:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802b568:	f04f 0901 	mov.w	r9, #1
 802b56c:	4623      	mov	r3, r4
 802b56e:	469a      	mov	sl, r3
 802b570:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b574:	b10a      	cbz	r2, 802b57a <_vfiprintf_r+0x86>
 802b576:	2a25      	cmp	r2, #37	@ 0x25
 802b578:	d1f9      	bne.n	802b56e <_vfiprintf_r+0x7a>
 802b57a:	ebba 0b04 	subs.w	fp, sl, r4
 802b57e:	d00b      	beq.n	802b598 <_vfiprintf_r+0xa4>
 802b580:	465b      	mov	r3, fp
 802b582:	4622      	mov	r2, r4
 802b584:	4629      	mov	r1, r5
 802b586:	4630      	mov	r0, r6
 802b588:	f7ff ffa1 	bl	802b4ce <__sfputs_r>
 802b58c:	3001      	adds	r0, #1
 802b58e:	f000 80a7 	beq.w	802b6e0 <_vfiprintf_r+0x1ec>
 802b592:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802b594:	445a      	add	r2, fp
 802b596:	9209      	str	r2, [sp, #36]	@ 0x24
 802b598:	f89a 3000 	ldrb.w	r3, [sl]
 802b59c:	2b00      	cmp	r3, #0
 802b59e:	f000 809f 	beq.w	802b6e0 <_vfiprintf_r+0x1ec>
 802b5a2:	2300      	movs	r3, #0
 802b5a4:	f04f 32ff 	mov.w	r2, #4294967295
 802b5a8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b5ac:	f10a 0a01 	add.w	sl, sl, #1
 802b5b0:	9304      	str	r3, [sp, #16]
 802b5b2:	9307      	str	r3, [sp, #28]
 802b5b4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802b5b8:	931a      	str	r3, [sp, #104]	@ 0x68
 802b5ba:	4654      	mov	r4, sl
 802b5bc:	2205      	movs	r2, #5
 802b5be:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b5c2:	4853      	ldr	r0, [pc, #332]	@ (802b710 <_vfiprintf_r+0x21c>)
 802b5c4:	f7d4 fe14 	bl	80001f0 <memchr>
 802b5c8:	9a04      	ldr	r2, [sp, #16]
 802b5ca:	b9d8      	cbnz	r0, 802b604 <_vfiprintf_r+0x110>
 802b5cc:	06d1      	lsls	r1, r2, #27
 802b5ce:	bf44      	itt	mi
 802b5d0:	2320      	movmi	r3, #32
 802b5d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802b5d6:	0713      	lsls	r3, r2, #28
 802b5d8:	bf44      	itt	mi
 802b5da:	232b      	movmi	r3, #43	@ 0x2b
 802b5dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802b5e0:	f89a 3000 	ldrb.w	r3, [sl]
 802b5e4:	2b2a      	cmp	r3, #42	@ 0x2a
 802b5e6:	d015      	beq.n	802b614 <_vfiprintf_r+0x120>
 802b5e8:	9a07      	ldr	r2, [sp, #28]
 802b5ea:	4654      	mov	r4, sl
 802b5ec:	2000      	movs	r0, #0
 802b5ee:	f04f 0c0a 	mov.w	ip, #10
 802b5f2:	4621      	mov	r1, r4
 802b5f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b5f8:	3b30      	subs	r3, #48	@ 0x30
 802b5fa:	2b09      	cmp	r3, #9
 802b5fc:	d94b      	bls.n	802b696 <_vfiprintf_r+0x1a2>
 802b5fe:	b1b0      	cbz	r0, 802b62e <_vfiprintf_r+0x13a>
 802b600:	9207      	str	r2, [sp, #28]
 802b602:	e014      	b.n	802b62e <_vfiprintf_r+0x13a>
 802b604:	eba0 0308 	sub.w	r3, r0, r8
 802b608:	fa09 f303 	lsl.w	r3, r9, r3
 802b60c:	4313      	orrs	r3, r2
 802b60e:	9304      	str	r3, [sp, #16]
 802b610:	46a2      	mov	sl, r4
 802b612:	e7d2      	b.n	802b5ba <_vfiprintf_r+0xc6>
 802b614:	9b03      	ldr	r3, [sp, #12]
 802b616:	1d19      	adds	r1, r3, #4
 802b618:	681b      	ldr	r3, [r3, #0]
 802b61a:	9103      	str	r1, [sp, #12]
 802b61c:	2b00      	cmp	r3, #0
 802b61e:	bfbb      	ittet	lt
 802b620:	425b      	neglt	r3, r3
 802b622:	f042 0202 	orrlt.w	r2, r2, #2
 802b626:	9307      	strge	r3, [sp, #28]
 802b628:	9307      	strlt	r3, [sp, #28]
 802b62a:	bfb8      	it	lt
 802b62c:	9204      	strlt	r2, [sp, #16]
 802b62e:	7823      	ldrb	r3, [r4, #0]
 802b630:	2b2e      	cmp	r3, #46	@ 0x2e
 802b632:	d10a      	bne.n	802b64a <_vfiprintf_r+0x156>
 802b634:	7863      	ldrb	r3, [r4, #1]
 802b636:	2b2a      	cmp	r3, #42	@ 0x2a
 802b638:	d132      	bne.n	802b6a0 <_vfiprintf_r+0x1ac>
 802b63a:	9b03      	ldr	r3, [sp, #12]
 802b63c:	1d1a      	adds	r2, r3, #4
 802b63e:	681b      	ldr	r3, [r3, #0]
 802b640:	9203      	str	r2, [sp, #12]
 802b642:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802b646:	3402      	adds	r4, #2
 802b648:	9305      	str	r3, [sp, #20]
 802b64a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802b720 <_vfiprintf_r+0x22c>
 802b64e:	7821      	ldrb	r1, [r4, #0]
 802b650:	2203      	movs	r2, #3
 802b652:	4650      	mov	r0, sl
 802b654:	f7d4 fdcc 	bl	80001f0 <memchr>
 802b658:	b138      	cbz	r0, 802b66a <_vfiprintf_r+0x176>
 802b65a:	9b04      	ldr	r3, [sp, #16]
 802b65c:	eba0 000a 	sub.w	r0, r0, sl
 802b660:	2240      	movs	r2, #64	@ 0x40
 802b662:	4082      	lsls	r2, r0
 802b664:	4313      	orrs	r3, r2
 802b666:	3401      	adds	r4, #1
 802b668:	9304      	str	r3, [sp, #16]
 802b66a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b66e:	4829      	ldr	r0, [pc, #164]	@ (802b714 <_vfiprintf_r+0x220>)
 802b670:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802b674:	2206      	movs	r2, #6
 802b676:	f7d4 fdbb 	bl	80001f0 <memchr>
 802b67a:	2800      	cmp	r0, #0
 802b67c:	d03f      	beq.n	802b6fe <_vfiprintf_r+0x20a>
 802b67e:	4b26      	ldr	r3, [pc, #152]	@ (802b718 <_vfiprintf_r+0x224>)
 802b680:	bb1b      	cbnz	r3, 802b6ca <_vfiprintf_r+0x1d6>
 802b682:	9b03      	ldr	r3, [sp, #12]
 802b684:	3307      	adds	r3, #7
 802b686:	f023 0307 	bic.w	r3, r3, #7
 802b68a:	3308      	adds	r3, #8
 802b68c:	9303      	str	r3, [sp, #12]
 802b68e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802b690:	443b      	add	r3, r7
 802b692:	9309      	str	r3, [sp, #36]	@ 0x24
 802b694:	e76a      	b.n	802b56c <_vfiprintf_r+0x78>
 802b696:	fb0c 3202 	mla	r2, ip, r2, r3
 802b69a:	460c      	mov	r4, r1
 802b69c:	2001      	movs	r0, #1
 802b69e:	e7a8      	b.n	802b5f2 <_vfiprintf_r+0xfe>
 802b6a0:	2300      	movs	r3, #0
 802b6a2:	3401      	adds	r4, #1
 802b6a4:	9305      	str	r3, [sp, #20]
 802b6a6:	4619      	mov	r1, r3
 802b6a8:	f04f 0c0a 	mov.w	ip, #10
 802b6ac:	4620      	mov	r0, r4
 802b6ae:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b6b2:	3a30      	subs	r2, #48	@ 0x30
 802b6b4:	2a09      	cmp	r2, #9
 802b6b6:	d903      	bls.n	802b6c0 <_vfiprintf_r+0x1cc>
 802b6b8:	2b00      	cmp	r3, #0
 802b6ba:	d0c6      	beq.n	802b64a <_vfiprintf_r+0x156>
 802b6bc:	9105      	str	r1, [sp, #20]
 802b6be:	e7c4      	b.n	802b64a <_vfiprintf_r+0x156>
 802b6c0:	fb0c 2101 	mla	r1, ip, r1, r2
 802b6c4:	4604      	mov	r4, r0
 802b6c6:	2301      	movs	r3, #1
 802b6c8:	e7f0      	b.n	802b6ac <_vfiprintf_r+0x1b8>
 802b6ca:	ab03      	add	r3, sp, #12
 802b6cc:	9300      	str	r3, [sp, #0]
 802b6ce:	462a      	mov	r2, r5
 802b6d0:	4b12      	ldr	r3, [pc, #72]	@ (802b71c <_vfiprintf_r+0x228>)
 802b6d2:	a904      	add	r1, sp, #16
 802b6d4:	4630      	mov	r0, r6
 802b6d6:	f3af 8000 	nop.w
 802b6da:	4607      	mov	r7, r0
 802b6dc:	1c78      	adds	r0, r7, #1
 802b6de:	d1d6      	bne.n	802b68e <_vfiprintf_r+0x19a>
 802b6e0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802b6e2:	07d9      	lsls	r1, r3, #31
 802b6e4:	d405      	bmi.n	802b6f2 <_vfiprintf_r+0x1fe>
 802b6e6:	89ab      	ldrh	r3, [r5, #12]
 802b6e8:	059a      	lsls	r2, r3, #22
 802b6ea:	d402      	bmi.n	802b6f2 <_vfiprintf_r+0x1fe>
 802b6ec:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802b6ee:	f7ff fe21 	bl	802b334 <__retarget_lock_release_recursive>
 802b6f2:	89ab      	ldrh	r3, [r5, #12]
 802b6f4:	065b      	lsls	r3, r3, #25
 802b6f6:	f53f af1f 	bmi.w	802b538 <_vfiprintf_r+0x44>
 802b6fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802b6fc:	e71e      	b.n	802b53c <_vfiprintf_r+0x48>
 802b6fe:	ab03      	add	r3, sp, #12
 802b700:	9300      	str	r3, [sp, #0]
 802b702:	462a      	mov	r2, r5
 802b704:	4b05      	ldr	r3, [pc, #20]	@ (802b71c <_vfiprintf_r+0x228>)
 802b706:	a904      	add	r1, sp, #16
 802b708:	4630      	mov	r0, r6
 802b70a:	f000 f879 	bl	802b800 <_printf_i>
 802b70e:	e7e4      	b.n	802b6da <_vfiprintf_r+0x1e6>
 802b710:	0802d110 	.word	0x0802d110
 802b714:	0802d11a 	.word	0x0802d11a
 802b718:	00000000 	.word	0x00000000
 802b71c:	0802b4cf 	.word	0x0802b4cf
 802b720:	0802d116 	.word	0x0802d116

0802b724 <_printf_common>:
 802b724:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b728:	4616      	mov	r6, r2
 802b72a:	4698      	mov	r8, r3
 802b72c:	688a      	ldr	r2, [r1, #8]
 802b72e:	690b      	ldr	r3, [r1, #16]
 802b730:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802b734:	4293      	cmp	r3, r2
 802b736:	bfb8      	it	lt
 802b738:	4613      	movlt	r3, r2
 802b73a:	6033      	str	r3, [r6, #0]
 802b73c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802b740:	4607      	mov	r7, r0
 802b742:	460c      	mov	r4, r1
 802b744:	b10a      	cbz	r2, 802b74a <_printf_common+0x26>
 802b746:	3301      	adds	r3, #1
 802b748:	6033      	str	r3, [r6, #0]
 802b74a:	6823      	ldr	r3, [r4, #0]
 802b74c:	0699      	lsls	r1, r3, #26
 802b74e:	bf42      	ittt	mi
 802b750:	6833      	ldrmi	r3, [r6, #0]
 802b752:	3302      	addmi	r3, #2
 802b754:	6033      	strmi	r3, [r6, #0]
 802b756:	6825      	ldr	r5, [r4, #0]
 802b758:	f015 0506 	ands.w	r5, r5, #6
 802b75c:	d106      	bne.n	802b76c <_printf_common+0x48>
 802b75e:	f104 0a19 	add.w	sl, r4, #25
 802b762:	68e3      	ldr	r3, [r4, #12]
 802b764:	6832      	ldr	r2, [r6, #0]
 802b766:	1a9b      	subs	r3, r3, r2
 802b768:	42ab      	cmp	r3, r5
 802b76a:	dc26      	bgt.n	802b7ba <_printf_common+0x96>
 802b76c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802b770:	6822      	ldr	r2, [r4, #0]
 802b772:	3b00      	subs	r3, #0
 802b774:	bf18      	it	ne
 802b776:	2301      	movne	r3, #1
 802b778:	0692      	lsls	r2, r2, #26
 802b77a:	d42b      	bmi.n	802b7d4 <_printf_common+0xb0>
 802b77c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802b780:	4641      	mov	r1, r8
 802b782:	4638      	mov	r0, r7
 802b784:	47c8      	blx	r9
 802b786:	3001      	adds	r0, #1
 802b788:	d01e      	beq.n	802b7c8 <_printf_common+0xa4>
 802b78a:	6823      	ldr	r3, [r4, #0]
 802b78c:	6922      	ldr	r2, [r4, #16]
 802b78e:	f003 0306 	and.w	r3, r3, #6
 802b792:	2b04      	cmp	r3, #4
 802b794:	bf02      	ittt	eq
 802b796:	68e5      	ldreq	r5, [r4, #12]
 802b798:	6833      	ldreq	r3, [r6, #0]
 802b79a:	1aed      	subeq	r5, r5, r3
 802b79c:	68a3      	ldr	r3, [r4, #8]
 802b79e:	bf0c      	ite	eq
 802b7a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b7a4:	2500      	movne	r5, #0
 802b7a6:	4293      	cmp	r3, r2
 802b7a8:	bfc4      	itt	gt
 802b7aa:	1a9b      	subgt	r3, r3, r2
 802b7ac:	18ed      	addgt	r5, r5, r3
 802b7ae:	2600      	movs	r6, #0
 802b7b0:	341a      	adds	r4, #26
 802b7b2:	42b5      	cmp	r5, r6
 802b7b4:	d11a      	bne.n	802b7ec <_printf_common+0xc8>
 802b7b6:	2000      	movs	r0, #0
 802b7b8:	e008      	b.n	802b7cc <_printf_common+0xa8>
 802b7ba:	2301      	movs	r3, #1
 802b7bc:	4652      	mov	r2, sl
 802b7be:	4641      	mov	r1, r8
 802b7c0:	4638      	mov	r0, r7
 802b7c2:	47c8      	blx	r9
 802b7c4:	3001      	adds	r0, #1
 802b7c6:	d103      	bne.n	802b7d0 <_printf_common+0xac>
 802b7c8:	f04f 30ff 	mov.w	r0, #4294967295
 802b7cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b7d0:	3501      	adds	r5, #1
 802b7d2:	e7c6      	b.n	802b762 <_printf_common+0x3e>
 802b7d4:	18e1      	adds	r1, r4, r3
 802b7d6:	1c5a      	adds	r2, r3, #1
 802b7d8:	2030      	movs	r0, #48	@ 0x30
 802b7da:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802b7de:	4422      	add	r2, r4
 802b7e0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802b7e4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802b7e8:	3302      	adds	r3, #2
 802b7ea:	e7c7      	b.n	802b77c <_printf_common+0x58>
 802b7ec:	2301      	movs	r3, #1
 802b7ee:	4622      	mov	r2, r4
 802b7f0:	4641      	mov	r1, r8
 802b7f2:	4638      	mov	r0, r7
 802b7f4:	47c8      	blx	r9
 802b7f6:	3001      	adds	r0, #1
 802b7f8:	d0e6      	beq.n	802b7c8 <_printf_common+0xa4>
 802b7fa:	3601      	adds	r6, #1
 802b7fc:	e7d9      	b.n	802b7b2 <_printf_common+0x8e>
	...

0802b800 <_printf_i>:
 802b800:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b804:	7e0f      	ldrb	r7, [r1, #24]
 802b806:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802b808:	2f78      	cmp	r7, #120	@ 0x78
 802b80a:	4691      	mov	r9, r2
 802b80c:	4680      	mov	r8, r0
 802b80e:	460c      	mov	r4, r1
 802b810:	469a      	mov	sl, r3
 802b812:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802b816:	d807      	bhi.n	802b828 <_printf_i+0x28>
 802b818:	2f62      	cmp	r7, #98	@ 0x62
 802b81a:	d80a      	bhi.n	802b832 <_printf_i+0x32>
 802b81c:	2f00      	cmp	r7, #0
 802b81e:	f000 80d1 	beq.w	802b9c4 <_printf_i+0x1c4>
 802b822:	2f58      	cmp	r7, #88	@ 0x58
 802b824:	f000 80b8 	beq.w	802b998 <_printf_i+0x198>
 802b828:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802b82c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802b830:	e03a      	b.n	802b8a8 <_printf_i+0xa8>
 802b832:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802b836:	2b15      	cmp	r3, #21
 802b838:	d8f6      	bhi.n	802b828 <_printf_i+0x28>
 802b83a:	a101      	add	r1, pc, #4	@ (adr r1, 802b840 <_printf_i+0x40>)
 802b83c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b840:	0802b899 	.word	0x0802b899
 802b844:	0802b8ad 	.word	0x0802b8ad
 802b848:	0802b829 	.word	0x0802b829
 802b84c:	0802b829 	.word	0x0802b829
 802b850:	0802b829 	.word	0x0802b829
 802b854:	0802b829 	.word	0x0802b829
 802b858:	0802b8ad 	.word	0x0802b8ad
 802b85c:	0802b829 	.word	0x0802b829
 802b860:	0802b829 	.word	0x0802b829
 802b864:	0802b829 	.word	0x0802b829
 802b868:	0802b829 	.word	0x0802b829
 802b86c:	0802b9ab 	.word	0x0802b9ab
 802b870:	0802b8d7 	.word	0x0802b8d7
 802b874:	0802b965 	.word	0x0802b965
 802b878:	0802b829 	.word	0x0802b829
 802b87c:	0802b829 	.word	0x0802b829
 802b880:	0802b9cd 	.word	0x0802b9cd
 802b884:	0802b829 	.word	0x0802b829
 802b888:	0802b8d7 	.word	0x0802b8d7
 802b88c:	0802b829 	.word	0x0802b829
 802b890:	0802b829 	.word	0x0802b829
 802b894:	0802b96d 	.word	0x0802b96d
 802b898:	6833      	ldr	r3, [r6, #0]
 802b89a:	1d1a      	adds	r2, r3, #4
 802b89c:	681b      	ldr	r3, [r3, #0]
 802b89e:	6032      	str	r2, [r6, #0]
 802b8a0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802b8a4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802b8a8:	2301      	movs	r3, #1
 802b8aa:	e09c      	b.n	802b9e6 <_printf_i+0x1e6>
 802b8ac:	6833      	ldr	r3, [r6, #0]
 802b8ae:	6820      	ldr	r0, [r4, #0]
 802b8b0:	1d19      	adds	r1, r3, #4
 802b8b2:	6031      	str	r1, [r6, #0]
 802b8b4:	0606      	lsls	r6, r0, #24
 802b8b6:	d501      	bpl.n	802b8bc <_printf_i+0xbc>
 802b8b8:	681d      	ldr	r5, [r3, #0]
 802b8ba:	e003      	b.n	802b8c4 <_printf_i+0xc4>
 802b8bc:	0645      	lsls	r5, r0, #25
 802b8be:	d5fb      	bpl.n	802b8b8 <_printf_i+0xb8>
 802b8c0:	f9b3 5000 	ldrsh.w	r5, [r3]
 802b8c4:	2d00      	cmp	r5, #0
 802b8c6:	da03      	bge.n	802b8d0 <_printf_i+0xd0>
 802b8c8:	232d      	movs	r3, #45	@ 0x2d
 802b8ca:	426d      	negs	r5, r5
 802b8cc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802b8d0:	4858      	ldr	r0, [pc, #352]	@ (802ba34 <_printf_i+0x234>)
 802b8d2:	230a      	movs	r3, #10
 802b8d4:	e011      	b.n	802b8fa <_printf_i+0xfa>
 802b8d6:	6821      	ldr	r1, [r4, #0]
 802b8d8:	6833      	ldr	r3, [r6, #0]
 802b8da:	0608      	lsls	r0, r1, #24
 802b8dc:	f853 5b04 	ldr.w	r5, [r3], #4
 802b8e0:	d402      	bmi.n	802b8e8 <_printf_i+0xe8>
 802b8e2:	0649      	lsls	r1, r1, #25
 802b8e4:	bf48      	it	mi
 802b8e6:	b2ad      	uxthmi	r5, r5
 802b8e8:	2f6f      	cmp	r7, #111	@ 0x6f
 802b8ea:	4852      	ldr	r0, [pc, #328]	@ (802ba34 <_printf_i+0x234>)
 802b8ec:	6033      	str	r3, [r6, #0]
 802b8ee:	bf14      	ite	ne
 802b8f0:	230a      	movne	r3, #10
 802b8f2:	2308      	moveq	r3, #8
 802b8f4:	2100      	movs	r1, #0
 802b8f6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802b8fa:	6866      	ldr	r6, [r4, #4]
 802b8fc:	60a6      	str	r6, [r4, #8]
 802b8fe:	2e00      	cmp	r6, #0
 802b900:	db05      	blt.n	802b90e <_printf_i+0x10e>
 802b902:	6821      	ldr	r1, [r4, #0]
 802b904:	432e      	orrs	r6, r5
 802b906:	f021 0104 	bic.w	r1, r1, #4
 802b90a:	6021      	str	r1, [r4, #0]
 802b90c:	d04b      	beq.n	802b9a6 <_printf_i+0x1a6>
 802b90e:	4616      	mov	r6, r2
 802b910:	fbb5 f1f3 	udiv	r1, r5, r3
 802b914:	fb03 5711 	mls	r7, r3, r1, r5
 802b918:	5dc7      	ldrb	r7, [r0, r7]
 802b91a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802b91e:	462f      	mov	r7, r5
 802b920:	42bb      	cmp	r3, r7
 802b922:	460d      	mov	r5, r1
 802b924:	d9f4      	bls.n	802b910 <_printf_i+0x110>
 802b926:	2b08      	cmp	r3, #8
 802b928:	d10b      	bne.n	802b942 <_printf_i+0x142>
 802b92a:	6823      	ldr	r3, [r4, #0]
 802b92c:	07df      	lsls	r7, r3, #31
 802b92e:	d508      	bpl.n	802b942 <_printf_i+0x142>
 802b930:	6923      	ldr	r3, [r4, #16]
 802b932:	6861      	ldr	r1, [r4, #4]
 802b934:	4299      	cmp	r1, r3
 802b936:	bfde      	ittt	le
 802b938:	2330      	movle	r3, #48	@ 0x30
 802b93a:	f806 3c01 	strble.w	r3, [r6, #-1]
 802b93e:	f106 36ff 	addle.w	r6, r6, #4294967295
 802b942:	1b92      	subs	r2, r2, r6
 802b944:	6122      	str	r2, [r4, #16]
 802b946:	f8cd a000 	str.w	sl, [sp]
 802b94a:	464b      	mov	r3, r9
 802b94c:	aa03      	add	r2, sp, #12
 802b94e:	4621      	mov	r1, r4
 802b950:	4640      	mov	r0, r8
 802b952:	f7ff fee7 	bl	802b724 <_printf_common>
 802b956:	3001      	adds	r0, #1
 802b958:	d14a      	bne.n	802b9f0 <_printf_i+0x1f0>
 802b95a:	f04f 30ff 	mov.w	r0, #4294967295
 802b95e:	b004      	add	sp, #16
 802b960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b964:	6823      	ldr	r3, [r4, #0]
 802b966:	f043 0320 	orr.w	r3, r3, #32
 802b96a:	6023      	str	r3, [r4, #0]
 802b96c:	4832      	ldr	r0, [pc, #200]	@ (802ba38 <_printf_i+0x238>)
 802b96e:	2778      	movs	r7, #120	@ 0x78
 802b970:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802b974:	6823      	ldr	r3, [r4, #0]
 802b976:	6831      	ldr	r1, [r6, #0]
 802b978:	061f      	lsls	r7, r3, #24
 802b97a:	f851 5b04 	ldr.w	r5, [r1], #4
 802b97e:	d402      	bmi.n	802b986 <_printf_i+0x186>
 802b980:	065f      	lsls	r7, r3, #25
 802b982:	bf48      	it	mi
 802b984:	b2ad      	uxthmi	r5, r5
 802b986:	6031      	str	r1, [r6, #0]
 802b988:	07d9      	lsls	r1, r3, #31
 802b98a:	bf44      	itt	mi
 802b98c:	f043 0320 	orrmi.w	r3, r3, #32
 802b990:	6023      	strmi	r3, [r4, #0]
 802b992:	b11d      	cbz	r5, 802b99c <_printf_i+0x19c>
 802b994:	2310      	movs	r3, #16
 802b996:	e7ad      	b.n	802b8f4 <_printf_i+0xf4>
 802b998:	4826      	ldr	r0, [pc, #152]	@ (802ba34 <_printf_i+0x234>)
 802b99a:	e7e9      	b.n	802b970 <_printf_i+0x170>
 802b99c:	6823      	ldr	r3, [r4, #0]
 802b99e:	f023 0320 	bic.w	r3, r3, #32
 802b9a2:	6023      	str	r3, [r4, #0]
 802b9a4:	e7f6      	b.n	802b994 <_printf_i+0x194>
 802b9a6:	4616      	mov	r6, r2
 802b9a8:	e7bd      	b.n	802b926 <_printf_i+0x126>
 802b9aa:	6833      	ldr	r3, [r6, #0]
 802b9ac:	6825      	ldr	r5, [r4, #0]
 802b9ae:	6961      	ldr	r1, [r4, #20]
 802b9b0:	1d18      	adds	r0, r3, #4
 802b9b2:	6030      	str	r0, [r6, #0]
 802b9b4:	062e      	lsls	r6, r5, #24
 802b9b6:	681b      	ldr	r3, [r3, #0]
 802b9b8:	d501      	bpl.n	802b9be <_printf_i+0x1be>
 802b9ba:	6019      	str	r1, [r3, #0]
 802b9bc:	e002      	b.n	802b9c4 <_printf_i+0x1c4>
 802b9be:	0668      	lsls	r0, r5, #25
 802b9c0:	d5fb      	bpl.n	802b9ba <_printf_i+0x1ba>
 802b9c2:	8019      	strh	r1, [r3, #0]
 802b9c4:	2300      	movs	r3, #0
 802b9c6:	6123      	str	r3, [r4, #16]
 802b9c8:	4616      	mov	r6, r2
 802b9ca:	e7bc      	b.n	802b946 <_printf_i+0x146>
 802b9cc:	6833      	ldr	r3, [r6, #0]
 802b9ce:	1d1a      	adds	r2, r3, #4
 802b9d0:	6032      	str	r2, [r6, #0]
 802b9d2:	681e      	ldr	r6, [r3, #0]
 802b9d4:	6862      	ldr	r2, [r4, #4]
 802b9d6:	2100      	movs	r1, #0
 802b9d8:	4630      	mov	r0, r6
 802b9da:	f7d4 fc09 	bl	80001f0 <memchr>
 802b9de:	b108      	cbz	r0, 802b9e4 <_printf_i+0x1e4>
 802b9e0:	1b80      	subs	r0, r0, r6
 802b9e2:	6060      	str	r0, [r4, #4]
 802b9e4:	6863      	ldr	r3, [r4, #4]
 802b9e6:	6123      	str	r3, [r4, #16]
 802b9e8:	2300      	movs	r3, #0
 802b9ea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802b9ee:	e7aa      	b.n	802b946 <_printf_i+0x146>
 802b9f0:	6923      	ldr	r3, [r4, #16]
 802b9f2:	4632      	mov	r2, r6
 802b9f4:	4649      	mov	r1, r9
 802b9f6:	4640      	mov	r0, r8
 802b9f8:	47d0      	blx	sl
 802b9fa:	3001      	adds	r0, #1
 802b9fc:	d0ad      	beq.n	802b95a <_printf_i+0x15a>
 802b9fe:	6823      	ldr	r3, [r4, #0]
 802ba00:	079b      	lsls	r3, r3, #30
 802ba02:	d413      	bmi.n	802ba2c <_printf_i+0x22c>
 802ba04:	68e0      	ldr	r0, [r4, #12]
 802ba06:	9b03      	ldr	r3, [sp, #12]
 802ba08:	4298      	cmp	r0, r3
 802ba0a:	bfb8      	it	lt
 802ba0c:	4618      	movlt	r0, r3
 802ba0e:	e7a6      	b.n	802b95e <_printf_i+0x15e>
 802ba10:	2301      	movs	r3, #1
 802ba12:	4632      	mov	r2, r6
 802ba14:	4649      	mov	r1, r9
 802ba16:	4640      	mov	r0, r8
 802ba18:	47d0      	blx	sl
 802ba1a:	3001      	adds	r0, #1
 802ba1c:	d09d      	beq.n	802b95a <_printf_i+0x15a>
 802ba1e:	3501      	adds	r5, #1
 802ba20:	68e3      	ldr	r3, [r4, #12]
 802ba22:	9903      	ldr	r1, [sp, #12]
 802ba24:	1a5b      	subs	r3, r3, r1
 802ba26:	42ab      	cmp	r3, r5
 802ba28:	dcf2      	bgt.n	802ba10 <_printf_i+0x210>
 802ba2a:	e7eb      	b.n	802ba04 <_printf_i+0x204>
 802ba2c:	2500      	movs	r5, #0
 802ba2e:	f104 0619 	add.w	r6, r4, #25
 802ba32:	e7f5      	b.n	802ba20 <_printf_i+0x220>
 802ba34:	0802d121 	.word	0x0802d121
 802ba38:	0802d132 	.word	0x0802d132

0802ba3c <__sflush_r>:
 802ba3c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802ba40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ba44:	0716      	lsls	r6, r2, #28
 802ba46:	4605      	mov	r5, r0
 802ba48:	460c      	mov	r4, r1
 802ba4a:	d454      	bmi.n	802baf6 <__sflush_r+0xba>
 802ba4c:	684b      	ldr	r3, [r1, #4]
 802ba4e:	2b00      	cmp	r3, #0
 802ba50:	dc02      	bgt.n	802ba58 <__sflush_r+0x1c>
 802ba52:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802ba54:	2b00      	cmp	r3, #0
 802ba56:	dd48      	ble.n	802baea <__sflush_r+0xae>
 802ba58:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802ba5a:	2e00      	cmp	r6, #0
 802ba5c:	d045      	beq.n	802baea <__sflush_r+0xae>
 802ba5e:	2300      	movs	r3, #0
 802ba60:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802ba64:	682f      	ldr	r7, [r5, #0]
 802ba66:	6a21      	ldr	r1, [r4, #32]
 802ba68:	602b      	str	r3, [r5, #0]
 802ba6a:	d030      	beq.n	802bace <__sflush_r+0x92>
 802ba6c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802ba6e:	89a3      	ldrh	r3, [r4, #12]
 802ba70:	0759      	lsls	r1, r3, #29
 802ba72:	d505      	bpl.n	802ba80 <__sflush_r+0x44>
 802ba74:	6863      	ldr	r3, [r4, #4]
 802ba76:	1ad2      	subs	r2, r2, r3
 802ba78:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802ba7a:	b10b      	cbz	r3, 802ba80 <__sflush_r+0x44>
 802ba7c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802ba7e:	1ad2      	subs	r2, r2, r3
 802ba80:	2300      	movs	r3, #0
 802ba82:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802ba84:	6a21      	ldr	r1, [r4, #32]
 802ba86:	4628      	mov	r0, r5
 802ba88:	47b0      	blx	r6
 802ba8a:	1c43      	adds	r3, r0, #1
 802ba8c:	89a3      	ldrh	r3, [r4, #12]
 802ba8e:	d106      	bne.n	802ba9e <__sflush_r+0x62>
 802ba90:	6829      	ldr	r1, [r5, #0]
 802ba92:	291d      	cmp	r1, #29
 802ba94:	d82b      	bhi.n	802baee <__sflush_r+0xb2>
 802ba96:	4a2a      	ldr	r2, [pc, #168]	@ (802bb40 <__sflush_r+0x104>)
 802ba98:	40ca      	lsrs	r2, r1
 802ba9a:	07d6      	lsls	r6, r2, #31
 802ba9c:	d527      	bpl.n	802baee <__sflush_r+0xb2>
 802ba9e:	2200      	movs	r2, #0
 802baa0:	6062      	str	r2, [r4, #4]
 802baa2:	04d9      	lsls	r1, r3, #19
 802baa4:	6922      	ldr	r2, [r4, #16]
 802baa6:	6022      	str	r2, [r4, #0]
 802baa8:	d504      	bpl.n	802bab4 <__sflush_r+0x78>
 802baaa:	1c42      	adds	r2, r0, #1
 802baac:	d101      	bne.n	802bab2 <__sflush_r+0x76>
 802baae:	682b      	ldr	r3, [r5, #0]
 802bab0:	b903      	cbnz	r3, 802bab4 <__sflush_r+0x78>
 802bab2:	6560      	str	r0, [r4, #84]	@ 0x54
 802bab4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802bab6:	602f      	str	r7, [r5, #0]
 802bab8:	b1b9      	cbz	r1, 802baea <__sflush_r+0xae>
 802baba:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802babe:	4299      	cmp	r1, r3
 802bac0:	d002      	beq.n	802bac8 <__sflush_r+0x8c>
 802bac2:	4628      	mov	r0, r5
 802bac4:	f7ff fca2 	bl	802b40c <_free_r>
 802bac8:	2300      	movs	r3, #0
 802baca:	6363      	str	r3, [r4, #52]	@ 0x34
 802bacc:	e00d      	b.n	802baea <__sflush_r+0xae>
 802bace:	2301      	movs	r3, #1
 802bad0:	4628      	mov	r0, r5
 802bad2:	47b0      	blx	r6
 802bad4:	4602      	mov	r2, r0
 802bad6:	1c50      	adds	r0, r2, #1
 802bad8:	d1c9      	bne.n	802ba6e <__sflush_r+0x32>
 802bada:	682b      	ldr	r3, [r5, #0]
 802badc:	2b00      	cmp	r3, #0
 802bade:	d0c6      	beq.n	802ba6e <__sflush_r+0x32>
 802bae0:	2b1d      	cmp	r3, #29
 802bae2:	d001      	beq.n	802bae8 <__sflush_r+0xac>
 802bae4:	2b16      	cmp	r3, #22
 802bae6:	d11e      	bne.n	802bb26 <__sflush_r+0xea>
 802bae8:	602f      	str	r7, [r5, #0]
 802baea:	2000      	movs	r0, #0
 802baec:	e022      	b.n	802bb34 <__sflush_r+0xf8>
 802baee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802baf2:	b21b      	sxth	r3, r3
 802baf4:	e01b      	b.n	802bb2e <__sflush_r+0xf2>
 802baf6:	690f      	ldr	r7, [r1, #16]
 802baf8:	2f00      	cmp	r7, #0
 802bafa:	d0f6      	beq.n	802baea <__sflush_r+0xae>
 802bafc:	0793      	lsls	r3, r2, #30
 802bafe:	680e      	ldr	r6, [r1, #0]
 802bb00:	bf08      	it	eq
 802bb02:	694b      	ldreq	r3, [r1, #20]
 802bb04:	600f      	str	r7, [r1, #0]
 802bb06:	bf18      	it	ne
 802bb08:	2300      	movne	r3, #0
 802bb0a:	eba6 0807 	sub.w	r8, r6, r7
 802bb0e:	608b      	str	r3, [r1, #8]
 802bb10:	f1b8 0f00 	cmp.w	r8, #0
 802bb14:	dde9      	ble.n	802baea <__sflush_r+0xae>
 802bb16:	6a21      	ldr	r1, [r4, #32]
 802bb18:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802bb1a:	4643      	mov	r3, r8
 802bb1c:	463a      	mov	r2, r7
 802bb1e:	4628      	mov	r0, r5
 802bb20:	47b0      	blx	r6
 802bb22:	2800      	cmp	r0, #0
 802bb24:	dc08      	bgt.n	802bb38 <__sflush_r+0xfc>
 802bb26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bb2a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802bb2e:	81a3      	strh	r3, [r4, #12]
 802bb30:	f04f 30ff 	mov.w	r0, #4294967295
 802bb34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bb38:	4407      	add	r7, r0
 802bb3a:	eba8 0800 	sub.w	r8, r8, r0
 802bb3e:	e7e7      	b.n	802bb10 <__sflush_r+0xd4>
 802bb40:	20400001 	.word	0x20400001

0802bb44 <_fflush_r>:
 802bb44:	b538      	push	{r3, r4, r5, lr}
 802bb46:	690b      	ldr	r3, [r1, #16]
 802bb48:	4605      	mov	r5, r0
 802bb4a:	460c      	mov	r4, r1
 802bb4c:	b913      	cbnz	r3, 802bb54 <_fflush_r+0x10>
 802bb4e:	2500      	movs	r5, #0
 802bb50:	4628      	mov	r0, r5
 802bb52:	bd38      	pop	{r3, r4, r5, pc}
 802bb54:	b118      	cbz	r0, 802bb5e <_fflush_r+0x1a>
 802bb56:	6a03      	ldr	r3, [r0, #32]
 802bb58:	b90b      	cbnz	r3, 802bb5e <_fflush_r+0x1a>
 802bb5a:	f7ff fa7f 	bl	802b05c <__sinit>
 802bb5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bb62:	2b00      	cmp	r3, #0
 802bb64:	d0f3      	beq.n	802bb4e <_fflush_r+0xa>
 802bb66:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802bb68:	07d0      	lsls	r0, r2, #31
 802bb6a:	d404      	bmi.n	802bb76 <_fflush_r+0x32>
 802bb6c:	0599      	lsls	r1, r3, #22
 802bb6e:	d402      	bmi.n	802bb76 <_fflush_r+0x32>
 802bb70:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802bb72:	f7ff fbde 	bl	802b332 <__retarget_lock_acquire_recursive>
 802bb76:	4628      	mov	r0, r5
 802bb78:	4621      	mov	r1, r4
 802bb7a:	f7ff ff5f 	bl	802ba3c <__sflush_r>
 802bb7e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802bb80:	07da      	lsls	r2, r3, #31
 802bb82:	4605      	mov	r5, r0
 802bb84:	d4e4      	bmi.n	802bb50 <_fflush_r+0xc>
 802bb86:	89a3      	ldrh	r3, [r4, #12]
 802bb88:	059b      	lsls	r3, r3, #22
 802bb8a:	d4e1      	bmi.n	802bb50 <_fflush_r+0xc>
 802bb8c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802bb8e:	f7ff fbd1 	bl	802b334 <__retarget_lock_release_recursive>
 802bb92:	e7dd      	b.n	802bb50 <_fflush_r+0xc>

0802bb94 <__swbuf_r>:
 802bb94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb96:	460e      	mov	r6, r1
 802bb98:	4614      	mov	r4, r2
 802bb9a:	4605      	mov	r5, r0
 802bb9c:	b118      	cbz	r0, 802bba6 <__swbuf_r+0x12>
 802bb9e:	6a03      	ldr	r3, [r0, #32]
 802bba0:	b90b      	cbnz	r3, 802bba6 <__swbuf_r+0x12>
 802bba2:	f7ff fa5b 	bl	802b05c <__sinit>
 802bba6:	69a3      	ldr	r3, [r4, #24]
 802bba8:	60a3      	str	r3, [r4, #8]
 802bbaa:	89a3      	ldrh	r3, [r4, #12]
 802bbac:	071a      	lsls	r2, r3, #28
 802bbae:	d501      	bpl.n	802bbb4 <__swbuf_r+0x20>
 802bbb0:	6923      	ldr	r3, [r4, #16]
 802bbb2:	b943      	cbnz	r3, 802bbc6 <__swbuf_r+0x32>
 802bbb4:	4621      	mov	r1, r4
 802bbb6:	4628      	mov	r0, r5
 802bbb8:	f000 f82a 	bl	802bc10 <__swsetup_r>
 802bbbc:	b118      	cbz	r0, 802bbc6 <__swbuf_r+0x32>
 802bbbe:	f04f 37ff 	mov.w	r7, #4294967295
 802bbc2:	4638      	mov	r0, r7
 802bbc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802bbc6:	6823      	ldr	r3, [r4, #0]
 802bbc8:	6922      	ldr	r2, [r4, #16]
 802bbca:	1a98      	subs	r0, r3, r2
 802bbcc:	6963      	ldr	r3, [r4, #20]
 802bbce:	b2f6      	uxtb	r6, r6
 802bbd0:	4283      	cmp	r3, r0
 802bbd2:	4637      	mov	r7, r6
 802bbd4:	dc05      	bgt.n	802bbe2 <__swbuf_r+0x4e>
 802bbd6:	4621      	mov	r1, r4
 802bbd8:	4628      	mov	r0, r5
 802bbda:	f7ff ffb3 	bl	802bb44 <_fflush_r>
 802bbde:	2800      	cmp	r0, #0
 802bbe0:	d1ed      	bne.n	802bbbe <__swbuf_r+0x2a>
 802bbe2:	68a3      	ldr	r3, [r4, #8]
 802bbe4:	3b01      	subs	r3, #1
 802bbe6:	60a3      	str	r3, [r4, #8]
 802bbe8:	6823      	ldr	r3, [r4, #0]
 802bbea:	1c5a      	adds	r2, r3, #1
 802bbec:	6022      	str	r2, [r4, #0]
 802bbee:	701e      	strb	r6, [r3, #0]
 802bbf0:	6962      	ldr	r2, [r4, #20]
 802bbf2:	1c43      	adds	r3, r0, #1
 802bbf4:	429a      	cmp	r2, r3
 802bbf6:	d004      	beq.n	802bc02 <__swbuf_r+0x6e>
 802bbf8:	89a3      	ldrh	r3, [r4, #12]
 802bbfa:	07db      	lsls	r3, r3, #31
 802bbfc:	d5e1      	bpl.n	802bbc2 <__swbuf_r+0x2e>
 802bbfe:	2e0a      	cmp	r6, #10
 802bc00:	d1df      	bne.n	802bbc2 <__swbuf_r+0x2e>
 802bc02:	4621      	mov	r1, r4
 802bc04:	4628      	mov	r0, r5
 802bc06:	f7ff ff9d 	bl	802bb44 <_fflush_r>
 802bc0a:	2800      	cmp	r0, #0
 802bc0c:	d0d9      	beq.n	802bbc2 <__swbuf_r+0x2e>
 802bc0e:	e7d6      	b.n	802bbbe <__swbuf_r+0x2a>

0802bc10 <__swsetup_r>:
 802bc10:	b538      	push	{r3, r4, r5, lr}
 802bc12:	4b29      	ldr	r3, [pc, #164]	@ (802bcb8 <__swsetup_r+0xa8>)
 802bc14:	4605      	mov	r5, r0
 802bc16:	6818      	ldr	r0, [r3, #0]
 802bc18:	460c      	mov	r4, r1
 802bc1a:	b118      	cbz	r0, 802bc24 <__swsetup_r+0x14>
 802bc1c:	6a03      	ldr	r3, [r0, #32]
 802bc1e:	b90b      	cbnz	r3, 802bc24 <__swsetup_r+0x14>
 802bc20:	f7ff fa1c 	bl	802b05c <__sinit>
 802bc24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bc28:	0719      	lsls	r1, r3, #28
 802bc2a:	d422      	bmi.n	802bc72 <__swsetup_r+0x62>
 802bc2c:	06da      	lsls	r2, r3, #27
 802bc2e:	d407      	bmi.n	802bc40 <__swsetup_r+0x30>
 802bc30:	2209      	movs	r2, #9
 802bc32:	602a      	str	r2, [r5, #0]
 802bc34:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802bc38:	81a3      	strh	r3, [r4, #12]
 802bc3a:	f04f 30ff 	mov.w	r0, #4294967295
 802bc3e:	e033      	b.n	802bca8 <__swsetup_r+0x98>
 802bc40:	0758      	lsls	r0, r3, #29
 802bc42:	d512      	bpl.n	802bc6a <__swsetup_r+0x5a>
 802bc44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802bc46:	b141      	cbz	r1, 802bc5a <__swsetup_r+0x4a>
 802bc48:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802bc4c:	4299      	cmp	r1, r3
 802bc4e:	d002      	beq.n	802bc56 <__swsetup_r+0x46>
 802bc50:	4628      	mov	r0, r5
 802bc52:	f7ff fbdb 	bl	802b40c <_free_r>
 802bc56:	2300      	movs	r3, #0
 802bc58:	6363      	str	r3, [r4, #52]	@ 0x34
 802bc5a:	89a3      	ldrh	r3, [r4, #12]
 802bc5c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802bc60:	81a3      	strh	r3, [r4, #12]
 802bc62:	2300      	movs	r3, #0
 802bc64:	6063      	str	r3, [r4, #4]
 802bc66:	6923      	ldr	r3, [r4, #16]
 802bc68:	6023      	str	r3, [r4, #0]
 802bc6a:	89a3      	ldrh	r3, [r4, #12]
 802bc6c:	f043 0308 	orr.w	r3, r3, #8
 802bc70:	81a3      	strh	r3, [r4, #12]
 802bc72:	6923      	ldr	r3, [r4, #16]
 802bc74:	b94b      	cbnz	r3, 802bc8a <__swsetup_r+0x7a>
 802bc76:	89a3      	ldrh	r3, [r4, #12]
 802bc78:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802bc7c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802bc80:	d003      	beq.n	802bc8a <__swsetup_r+0x7a>
 802bc82:	4621      	mov	r1, r4
 802bc84:	4628      	mov	r0, r5
 802bc86:	f000 f83f 	bl	802bd08 <__smakebuf_r>
 802bc8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bc8e:	f013 0201 	ands.w	r2, r3, #1
 802bc92:	d00a      	beq.n	802bcaa <__swsetup_r+0x9a>
 802bc94:	2200      	movs	r2, #0
 802bc96:	60a2      	str	r2, [r4, #8]
 802bc98:	6962      	ldr	r2, [r4, #20]
 802bc9a:	4252      	negs	r2, r2
 802bc9c:	61a2      	str	r2, [r4, #24]
 802bc9e:	6922      	ldr	r2, [r4, #16]
 802bca0:	b942      	cbnz	r2, 802bcb4 <__swsetup_r+0xa4>
 802bca2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802bca6:	d1c5      	bne.n	802bc34 <__swsetup_r+0x24>
 802bca8:	bd38      	pop	{r3, r4, r5, pc}
 802bcaa:	0799      	lsls	r1, r3, #30
 802bcac:	bf58      	it	pl
 802bcae:	6962      	ldrpl	r2, [r4, #20]
 802bcb0:	60a2      	str	r2, [r4, #8]
 802bcb2:	e7f4      	b.n	802bc9e <__swsetup_r+0x8e>
 802bcb4:	2000      	movs	r0, #0
 802bcb6:	e7f7      	b.n	802bca8 <__swsetup_r+0x98>
 802bcb8:	20000110 	.word	0x20000110

0802bcbc <__swhatbuf_r>:
 802bcbc:	b570      	push	{r4, r5, r6, lr}
 802bcbe:	460c      	mov	r4, r1
 802bcc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bcc4:	2900      	cmp	r1, #0
 802bcc6:	b096      	sub	sp, #88	@ 0x58
 802bcc8:	4615      	mov	r5, r2
 802bcca:	461e      	mov	r6, r3
 802bccc:	da0d      	bge.n	802bcea <__swhatbuf_r+0x2e>
 802bcce:	89a3      	ldrh	r3, [r4, #12]
 802bcd0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802bcd4:	f04f 0100 	mov.w	r1, #0
 802bcd8:	bf14      	ite	ne
 802bcda:	2340      	movne	r3, #64	@ 0x40
 802bcdc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802bce0:	2000      	movs	r0, #0
 802bce2:	6031      	str	r1, [r6, #0]
 802bce4:	602b      	str	r3, [r5, #0]
 802bce6:	b016      	add	sp, #88	@ 0x58
 802bce8:	bd70      	pop	{r4, r5, r6, pc}
 802bcea:	466a      	mov	r2, sp
 802bcec:	f000 f848 	bl	802bd80 <_fstat_r>
 802bcf0:	2800      	cmp	r0, #0
 802bcf2:	dbec      	blt.n	802bcce <__swhatbuf_r+0x12>
 802bcf4:	9901      	ldr	r1, [sp, #4]
 802bcf6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802bcfa:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802bcfe:	4259      	negs	r1, r3
 802bd00:	4159      	adcs	r1, r3
 802bd02:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802bd06:	e7eb      	b.n	802bce0 <__swhatbuf_r+0x24>

0802bd08 <__smakebuf_r>:
 802bd08:	898b      	ldrh	r3, [r1, #12]
 802bd0a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802bd0c:	079d      	lsls	r5, r3, #30
 802bd0e:	4606      	mov	r6, r0
 802bd10:	460c      	mov	r4, r1
 802bd12:	d507      	bpl.n	802bd24 <__smakebuf_r+0x1c>
 802bd14:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802bd18:	6023      	str	r3, [r4, #0]
 802bd1a:	6123      	str	r3, [r4, #16]
 802bd1c:	2301      	movs	r3, #1
 802bd1e:	6163      	str	r3, [r4, #20]
 802bd20:	b003      	add	sp, #12
 802bd22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802bd24:	ab01      	add	r3, sp, #4
 802bd26:	466a      	mov	r2, sp
 802bd28:	f7ff ffc8 	bl	802bcbc <__swhatbuf_r>
 802bd2c:	9f00      	ldr	r7, [sp, #0]
 802bd2e:	4605      	mov	r5, r0
 802bd30:	4639      	mov	r1, r7
 802bd32:	4630      	mov	r0, r6
 802bd34:	f7ff f86c 	bl	802ae10 <_malloc_r>
 802bd38:	b948      	cbnz	r0, 802bd4e <__smakebuf_r+0x46>
 802bd3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bd3e:	059a      	lsls	r2, r3, #22
 802bd40:	d4ee      	bmi.n	802bd20 <__smakebuf_r+0x18>
 802bd42:	f023 0303 	bic.w	r3, r3, #3
 802bd46:	f043 0302 	orr.w	r3, r3, #2
 802bd4a:	81a3      	strh	r3, [r4, #12]
 802bd4c:	e7e2      	b.n	802bd14 <__smakebuf_r+0xc>
 802bd4e:	89a3      	ldrh	r3, [r4, #12]
 802bd50:	6020      	str	r0, [r4, #0]
 802bd52:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802bd56:	81a3      	strh	r3, [r4, #12]
 802bd58:	9b01      	ldr	r3, [sp, #4]
 802bd5a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802bd5e:	b15b      	cbz	r3, 802bd78 <__smakebuf_r+0x70>
 802bd60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bd64:	4630      	mov	r0, r6
 802bd66:	f000 f81d 	bl	802bda4 <_isatty_r>
 802bd6a:	b128      	cbz	r0, 802bd78 <__smakebuf_r+0x70>
 802bd6c:	89a3      	ldrh	r3, [r4, #12]
 802bd6e:	f023 0303 	bic.w	r3, r3, #3
 802bd72:	f043 0301 	orr.w	r3, r3, #1
 802bd76:	81a3      	strh	r3, [r4, #12]
 802bd78:	89a3      	ldrh	r3, [r4, #12]
 802bd7a:	431d      	orrs	r5, r3
 802bd7c:	81a5      	strh	r5, [r4, #12]
 802bd7e:	e7cf      	b.n	802bd20 <__smakebuf_r+0x18>

0802bd80 <_fstat_r>:
 802bd80:	b538      	push	{r3, r4, r5, lr}
 802bd82:	4d07      	ldr	r5, [pc, #28]	@ (802bda0 <_fstat_r+0x20>)
 802bd84:	2300      	movs	r3, #0
 802bd86:	4604      	mov	r4, r0
 802bd88:	4608      	mov	r0, r1
 802bd8a:	4611      	mov	r1, r2
 802bd8c:	602b      	str	r3, [r5, #0]
 802bd8e:	f7d7 f83a 	bl	8002e06 <_fstat>
 802bd92:	1c43      	adds	r3, r0, #1
 802bd94:	d102      	bne.n	802bd9c <_fstat_r+0x1c>
 802bd96:	682b      	ldr	r3, [r5, #0]
 802bd98:	b103      	cbz	r3, 802bd9c <_fstat_r+0x1c>
 802bd9a:	6023      	str	r3, [r4, #0]
 802bd9c:	bd38      	pop	{r3, r4, r5, pc}
 802bd9e:	bf00      	nop
 802bda0:	20014b00 	.word	0x20014b00

0802bda4 <_isatty_r>:
 802bda4:	b538      	push	{r3, r4, r5, lr}
 802bda6:	4d06      	ldr	r5, [pc, #24]	@ (802bdc0 <_isatty_r+0x1c>)
 802bda8:	2300      	movs	r3, #0
 802bdaa:	4604      	mov	r4, r0
 802bdac:	4608      	mov	r0, r1
 802bdae:	602b      	str	r3, [r5, #0]
 802bdb0:	f7d7 f82e 	bl	8002e10 <_isatty>
 802bdb4:	1c43      	adds	r3, r0, #1
 802bdb6:	d102      	bne.n	802bdbe <_isatty_r+0x1a>
 802bdb8:	682b      	ldr	r3, [r5, #0]
 802bdba:	b103      	cbz	r3, 802bdbe <_isatty_r+0x1a>
 802bdbc:	6023      	str	r3, [r4, #0]
 802bdbe:	bd38      	pop	{r3, r4, r5, pc}
 802bdc0:	20014b00 	.word	0x20014b00

0802bdc4 <_init>:
 802bdc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bdc6:	bf00      	nop
 802bdc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bdca:	bc08      	pop	{r3}
 802bdcc:	469e      	mov	lr, r3
 802bdce:	4770      	bx	lr

0802bdd0 <_fini>:
 802bdd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bdd2:	bf00      	nop
 802bdd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bdd6:	bc08      	pop	{r3}
 802bdd8:	469e      	mov	lr, r3
 802bdda:	4770      	bx	lr
