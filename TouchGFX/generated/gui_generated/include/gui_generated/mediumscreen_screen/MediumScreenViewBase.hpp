/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MEDIUMSCREENVIEWBASE_HPP
#define MEDIUMSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mediumscreen_screen/MediumScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/mixins/Draggable.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class MediumScreenViewBase : public touchgfx::View<MediumScreenPresenter>
{
public:
    MediumScreenViewBase();
    virtual ~MediumScreenViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void afterTransition();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box3;
    touchgfx::Box box1;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  exit2;
    touchgfx::Box box2;
    touchgfx::Circle ball;
    touchgfx::PainterRGB565 ballPainter;
    touchgfx::Draggable< touchgfx::Box > paddle1;
    touchgfx::Draggable< touchgfx::Box > paddle2;
    touchgfx::TextAreaWithOneWildcard score2;
    touchgfx::TextAreaWithOneWildcard score1;
    touchgfx::TextArea player1;
    touchgfx::TextArea player2;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  exit1;
    touchgfx::TextArea start;
    touchgfx::TextArea check1;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  no1;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  no2;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  yes1;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  yes2;
    touchgfx::TextArea check2;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MediumScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Delay Variable Declarations
     */
    static const uint16_t INTERACTION1_DURATION = 60;
    uint16_t interaction1Counter;

};

#endif // MEDIUMSCREENVIEWBASE_HPP
