/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef HARDREADYSCREENVIEWBASE_HPP
#define HARDREADYSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/hardreadyscreen_screen/HardReadyScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/mixins/Draggable.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>

class HardReadyScreenViewBase : public touchgfx::View<HardReadyScreenPresenter>
{
public:
    HardReadyScreenViewBase();
    virtual ~HardReadyScreenViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box3;
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::Circle ball;
    touchgfx::PainterRGB565 ballPainter;
    touchgfx::Draggable< touchgfx::Box > paddle1;
    touchgfx::Draggable< touchgfx::Box > paddle2;
    touchgfx::TextArea player1;
    touchgfx::TextArea player2;
    touchgfx::BoxWithBorder goal1;
    touchgfx::BoxWithBorder goal2;
    touchgfx::TextAreaWithOneWildcard counter1;
    touchgfx::TextAreaWithOneWildcard counter2;
    touchgfx::Image image1;
    touchgfx::Image image1_1;
    touchgfx::Image image2;
    touchgfx::Image image2_2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t COUNTER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar counter1Buffer[COUNTER1_SIZE];
    static const uint16_t COUNTER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar counter2Buffer[COUNTER2_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Tick Counter Declarations
     */
    static const uint32_t TICK_INTERACTION1_INTERVAL = 180;
    uint32_t frameCountInteraction1Interval;

};

#endif // HARDREADYSCREENVIEWBASE_HPP
