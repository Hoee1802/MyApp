/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/hardscreen_screen/HardScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HardScreenViewBase::HardScreenViewBase() :
    flexButtonCallback(this, &HardScreenViewBase::flexButtonCallbackHandler),
    interaction1Counter(0)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box3.setPosition(0, 0, 320, 240);
    box3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box3);

    box1.setPosition(2, 2, 316, 236);
    box1.setColor(touchgfx::Color::getColorFromRGB(12, 56, 55));
    add(box1);

    exit2.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ARROW_CIRCLE_DOWN_20_20_FFFFFF_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ARROW_CIRCLE_DOWN_20_20_FFFFFF_SVG_ID));
    exit2.setIconXY(0, 27);
    exit2.setAlpha(175);
    exit2.setAction(flexButtonCallback);
    exit2.setPosition(165, 187, 20, 50);
    add(exit2);

    box2.setPosition(160, 0, 3, 240);
    box2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box2.setAlpha(220);
    add(box2);

    ball.setPosition(154, 114, 14, 14);
    ball.setCenter(7.5f, 7.5f);
    ball.setRadius(6);
    ball.setLineWidth(0);
    ball.setArc(0, 360);
    ballPainter.setColor(touchgfx::Color::getColorFromRGB(153, 12, 12));
    ball.setPainter(ballPainter);
    add(ball);

    paddle1.setPosition(35, 110, 5, 20);
    paddle1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(paddle1);

    paddle2.setPosition(282, 110, 5, 20);
    paddle2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(paddle2);

    score2.setXY(190, 20);
    score2.setColor(touchgfx::Color::getColorFromRGB(89, 86, 86));
    score2.setLinespacing(0);
    score2.setRotation(touchgfx::TEXT_ROTATE_270);
    score2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UN9H));
    add(score2);

    score1.setXY(125, 200);
    score1.setColor(touchgfx::Color::getColorFromRGB(89, 86, 86));
    score1.setLinespacing(0);
    score1.setRotation(touchgfx::TEXT_ROTATE_90);
    score1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OTAD));
    add(score1);

    player1.setPosition(140, 180, 19, 52);
    player1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    player1.setLinespacing(0);
    player1.setRotation(touchgfx::TEXT_ROTATE_90);
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z3TY));
    player1.setAlpha(190);
    add(player1);

    player2.setPosition(165, 5, 19, 52);
    player2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    player2.setLinespacing(0);
    player2.setRotation(touchgfx::TEXT_ROTATE_270);
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FY8E));
    player2.setAlpha(190);
    add(player2);

    exit1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ARROW_CIRCLE_UP_20_20_FFFFFF_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ARROW_CIRCLE_UP_20_20_FFFFFF_SVG_ID));
    exit1.setIconXY(0, 0);
    exit1.setAlpha(175);
    exit1.setAction(flexButtonCallback);
    exit1.setPosition(139, 7, 20, 50);
    add(exit1);

    start.setXY(93, 106);
    start.setColor(touchgfx::Color::getColorFromRGB(222, 171, 95));
    start.setLinespacing(0);
    start.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RVEZ));
    start.setAlpha(210);
    add(start);

    check1.setXY(99, 69);
    check1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    check1.setLinespacing(0);
    check1.setRotation(touchgfx::TEXT_ROTATE_90);
    check1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PWVE));
    check1.setAlpha(190);
    add(check1);

    no1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CANCEL_20_20_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_20_20_E8F6FB_SVG_ID));
    no1.setIconXY(0, 16);
    no1.setAlpha(190);
    no1.setAction(flexButtonCallback);
    no1.setPosition(62, 58, 40, 50);
    add(no1);

    no2.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CANCEL_20_20_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_20_20_E8F6FB_SVG_ID));
    no2.setIconXY(0, 15);
    no2.setAlpha(190);
    no2.setAction(flexButtonCallback);
    no2.setPosition(239, 131, 40, 50);
    add(no2);

    yes1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_20_20_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_IOS_20_20_E8F6FB_SVG_ID));
    yes1.setIconXY(0, 15);
    yes1.setAlpha(190);
    yes1.setAction(flexButtonCallback);
    yes1.setPosition(62, 131, 40, 50);
    add(yes1);

    yes2.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_FORWARD_IOS_20_20_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_FORWARD_IOS_20_20_E8F6FB_SVG_ID));
    yes2.setIconXY(0, 15);
    yes2.setAlpha(190);
    yes2.setAction(flexButtonCallback);
    yes2.setPosition(239, 58, 40, 50);
    add(yes2);

    check2.setXY(207, 69);
    check2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    check2.setLinespacing(0);
    check2.setRotation(touchgfx::TEXT_ROTATE_270);
    check2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_68VZ));
    check2.setAlpha(190);
    add(check2);

    goal1.setPosition(2, 61, 25, 120);
    goal1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goal1.setBorderColor(touchgfx::Color::getColorFromRGB(173, 147, 52));
    goal1.setBorderSize(3);
    goal1.setAlpha(60);
    add(goal1);

    goal2.setPosition(292, 60, 25, 120);
    goal2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goal2.setBorderColor(touchgfx::Color::getColorFromRGB(173, 147, 52));
    goal2.setBorderSize(3);
    goal2.setAlpha(60);
    add(goal2);
}

HardScreenViewBase::~HardScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void HardScreenViewBase::setupScreen()
{

}

void HardScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &exit1)
    {
        //Interaction9
        //When exit1 clicked show check1
        //Show check1
        check1.setVisible(true);
        check1.invalidate();
        //Interaction10
        //When exit1 clicked show yes1
        //Show yes1
        yes1.setVisible(true);
        yes1.invalidate();
        //Interaction11
        //When exit1 clicked show no1
        //Show no1
        no1.setVisible(true);
        no1.invalidate();
    }
    if (&src == &exit2)
    {
        //Interaction12
        //When exit2 clicked show check2
        //Show check2
        check2.setVisible(true);
        check2.invalidate();
        //Interaction13
        //When exit2 clicked show yes2
        //Show yes2
        yes2.setVisible(true);
        yes2.invalidate();
        //Interaction14
        //When exit2 clicked show no2
        //Show no2
        no2.setVisible(true);
        no2.invalidate();
    }
    if (&src == &no1)
    {
        //Interaction15
        //When no1 clicked hide check1
        //Hide check1
        check1.setVisible(false);
        check1.invalidate();
        //Interaction16
        //When no1 clicked hide yes1
        //Hide yes1
        yes1.setVisible(false);
        yes1.invalidate();
        //Interaction17
        //When no1 clicked hide no1
        //Hide no1
        no1.setVisible(false);
        no1.invalidate();
    }
    if (&src == &no2)
    {
        //Interaction18
        //When no2 clicked hide check2
        //Hide check2
        check2.setVisible(false);
        check2.invalidate();
        //Interaction19
        //When no2 clicked hide yes2
        //Hide yes2
        yes2.setVisible(false);
        yes2.invalidate();
        //Interaction20
        //When no2 clicked hide no2
        //Hide no2
        no2.setVisible(false);
        no2.invalidate();
    }
    if (&src == &yes1)
    {
        //Interaction21
        //When yes1 clicked change screen to EndScreen
        //Go to EndScreen with screen transition towards East
        application().gotoEndScreenScreenWipeTransitionEast();
    }
    if (&src == &yes2)
    {
        //Interaction22
        //When yes2 clicked change screen to EndScreen
        //Go to EndScreen with screen transition towards East
        application().gotoEndScreenScreenWipeTransitionEast();
    }
}

void HardScreenViewBase::handleTickEvent()
{
    if (interaction1Counter > 0)
    {
        interaction1Counter--;
        if (interaction1Counter == 0)
        {

            //Interaction2
            //When Interaction1 completed hide start
            //Hide start
            start.setVisible(false);
            start.invalidate();
        }
    }

}

void HardScreenViewBase::afterTransition()
{
    //Interaction3
    //When screen transition ends hide check1
    //Hide check1
    check1.setVisible(false);
    check1.invalidate();

    //Interaction4
    //When screen transition ends hide no1
    //Hide no1
    no1.setVisible(false);
    no1.invalidate();

    //Interaction5
    //When screen transition ends hide yes1
    //Hide yes1
    yes1.setVisible(false);
    yes1.invalidate();

    //Interaction1
    //When Interaction5 completed delay
    //Delay for 1000 ms (60 Ticks)
    interaction1Counter = INTERACTION1_DURATION;

    //Interaction6
    //When screen transition ends hide check2
    //Hide check2
    check2.setVisible(false);
    check2.invalidate();

    //Interaction7
    //When screen transition ends hide yes2
    //Hide yes2
    yes2.setVisible(false);
    yes2.invalidate();

    //Interaction8
    //When screen transition ends hide no2
    //Hide no2
    no2.setVisible(false);
    no2.invalidate();
}
