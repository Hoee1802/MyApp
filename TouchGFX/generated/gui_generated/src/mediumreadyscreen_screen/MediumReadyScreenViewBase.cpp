/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mediumreadyscreen_screen/MediumReadyScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MediumReadyScreenViewBase::MediumReadyScreenViewBase() :
    frameCountInteraction1Interval(0)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box3.setPosition(0, 0, 320, 240);
    box3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box3);

    box1.setPosition(2, 2, 318, 236);
    box1.setColor(touchgfx::Color::getColorFromRGB(12, 56, 55));
    add(box1);

    box2.setPosition(160, 0, 3, 240);
    box2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    box2.setAlpha(220);
    add(box2);

    ball.setPosition(155, 114, 14, 14);
    ball.setCenter(7.5f, 7.5f);
    ball.setRadius(6);
    ball.setLineWidth(0);
    ball.setArc(0, 360);
    ballPainter.setColor(touchgfx::Color::getColorFromRGB(153, 12, 12));
    ball.setPainter(ballPainter);
    add(ball);

    paddle1.setPosition(10, 100, 5, 40);
    paddle1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(paddle1);

    paddle2.setPosition(307, 100, 5, 40);
    paddle2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(paddle2);

    player1.setPosition(116, 95, 19, 52);
    player1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    player1.setLinespacing(0);
    player1.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS_AFTER_SPACE);
    player1.setRotation(touchgfx::TEXT_ROTATE_90);
    player1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDK7));
    player1.setAlpha(190);
    add(player1);

    player2.setPosition(187, 95, 19, 52);
    player2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    player2.setLinespacing(0);
    player2.setWideTextAction(WIDE_TEXT_WORDWRAP_ELLIPSIS_AFTER_SPACE);
    player2.setRotation(touchgfx::TEXT_ROTATE_270);
    player2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CWXV));
    player2.setAlpha(190);
    add(player2);

    counter1.setXY(53, 113);
    counter1.setColor(touchgfx::Color::getColorFromRGB(222, 171, 95));
    counter1.setLinespacing(0);
    counter1.setRotation(touchgfx::TEXT_ROTATE_90);
    Unicode::snprintf(counter1Buffer, COUNTER1_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
    counter1.setWildcard(counter1Buffer);
    counter1.resizeToCurrentText();
    counter1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MH9F));
    counter1.setAlpha(210);
    add(counter1);

    goal1.setPosition(318, 60, 2, 120);
    goal1.setColor(touchgfx::Color::getColorFromRGB(0, 11, 110));
    goal1.setBorderColor(touchgfx::Color::getColorFromRGB(173, 147, 52));
    goal1.setBorderSize(0);
    add(goal1);

    goal2.setPosition(0, 60, 2, 120);
    goal2.setColor(touchgfx::Color::getColorFromRGB(0, 11, 110));
    goal2.setBorderColor(touchgfx::Color::getColorFromRGB(173, 147, 52));
    goal2.setBorderSize(0);
    add(goal2);

    counter2.setXY(243, 111);
    counter2.setColor(touchgfx::Color::getColorFromRGB(222, 171, 95));
    counter2.setLinespacing(0);
    counter2.setRotation(touchgfx::TEXT_ROTATE_270);
    Unicode::snprintf(counter2Buffer, COUNTER2_SIZE, "%s", touchgfx::TypedText(T_COUNTER2BUFFER).getText());
    counter2.setWildcard(counter2Buffer);
    counter2.resizeToCurrentText();
    counter2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CZR5));
    counter2.setAlpha(210);
    add(counter2);
}

MediumReadyScreenViewBase::~MediumReadyScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MediumReadyScreenViewBase::setupScreen()
{

}

void MediumReadyScreenViewBase::handleTickEvent()
{
    frameCountInteraction1Interval++;
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
    {
        //Interaction1
        //When every N tick change screen to MediumScreen
        //Go to MediumScreen with no screen transition
        application().gotoMediumScreenScreenNoTransition();
        frameCountInteraction1Interval = 0;
    }
}
